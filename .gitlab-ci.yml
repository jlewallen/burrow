stages:
  - test
  - build
  - bench

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'web'
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

cache:
  key: "$CI_JOB_NAME"
  untracked: true
  paths:
    - cargo/
    - target/

variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo
  RUST_BACKTRACE: FULL

build:docker:
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker build -t jlewallen/burrow .

tests:
  stage: test
  image: rust:latest
  before_script:
    - export PATH="$CI_PROJECT_DIR/cargo/bin:$PATH"
  script:
    - cp .env.default .env
    - rustc --version && cargo --version
    - time cargo test --workspace

build:amd64:
  stage: build
  image: rust:latest
  before_script:
    - export PATH="$CI_PROJECT_DIR/cargo/bin:$PATH"
  script:
    - cargo build --release
  artifacts:
    paths:
      - target/release/cli

build:web:
  stage: build
  image: rust:latest
  before_script:
    - export PATH="$CI_PROJECT_DIR/cargo/bin:$PATH"
    - time cargo install trunk
    - time rustup target add wasm32-unknown-unknown
  script:
    - cp .env.default .env
    - cd web
    - time trunk build
  artifacts:
    paths:
      - web/dist

bench:all:
  stage: bench
  image: rust:latest
  needs: [build:amd64]
  script:
    - cp .env.default .env
    - time cargo bench --workspace --verbose
    - cd libs/tests
    - time cargo bench --bench simple -- --profile-time=5
  artifacts:
    paths:
      - target/criterion
