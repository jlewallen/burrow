stages:
  - test
  - build

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

cache:
  key: "$CI_JOB_NAME"
  untracked: true
  paths:
    - cargo/
    - target/
    - apt-cache/

variables:
  APT_CACHE_DIR: apt-cache
  CARGO_HOME: $CI_PROJECT_DIR/cargo
  RUST_BACKTRACE: FULL

before_script:
  - export PATH="$CI_PROJECT_DIR/cargo/bin:$PATH"

tests:
  stage: test
  image: rust:latest
  script:
    - cp .env.default .env
    - rustc --version && cargo --version
    - cargo test --workspace

build:amd64:
  stage: build
  image: rust:latest
  script:
    - cargo build --release
  artifacts:
    paths:
      - target/release/cli

build:web:
  stage: build
  image: rust:latest
  before_script:
    - export PATH="$CI_PROJECT_DIR/cargo/bin:$PATH"
    - rustup target add wasm32-unknown-unknown
    - cargo install trunk
  script:
    - cp .env.default .env
    - cd web
    - trunk build
  artifacts:
    paths:
      - web/dist
