<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1046" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1029.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1029.00"> </text><svg id="frames" x="10" width="1180" total_samples="1242"><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="0.0000%" y="661" width="0.0805%" height="15" fill="rgb(228,143,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="0.0805%" y="645" width="0.3221%" height="15" fill="rgb(216,218,46)" fg:x="1" fg:w="4"/><text x="0.3305%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="0.1610%" y="629" width="0.2415%" height="15" fill="rgb(206,6,19)" fg:x="2" fg:w="3"/><text x="0.4110%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.1610%" y="613" width="0.2415%" height="15" fill="rgb(239,177,51)" fg:x="2" fg:w="3"/><text x="0.4110%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.1610%" y="597" width="0.2415%" height="15" fill="rgb(216,55,25)" fg:x="2" fg:w="3"/><text x="0.4110%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4831%" y="629" width="0.0805%" height="15" fill="rgb(231,163,29)" fg:x="6" fg:w="1"/><text x="0.7331%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="0.5636%" y="629" width="0.1610%" height="15" fill="rgb(232,149,50)" fg:x="7" fg:w="2"/><text x="0.8136%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.6441%" y="613" width="0.0805%" height="15" fill="rgb(223,142,48)" fg:x="8" fg:w="1"/><text x="0.8941%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="0.6441%" y="597" width="0.0805%" height="15" fill="rgb(245,83,23)" fg:x="8" fg:w="1"/><text x="0.8941%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6441%" y="581" width="0.0805%" height="15" fill="rgb(224,63,2)" fg:x="8" fg:w="1"/><text x="0.8941%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.8052%" y="549" width="0.2415%" height="15" fill="rgb(218,65,53)" fg:x="10" fg:w="3"/><text x="1.0552%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.0467%" y="549" width="0.1610%" height="15" fill="rgb(221,84,29)" fg:x="13" fg:w="2"/><text x="1.2967%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1272%" y="533" width="0.0805%" height="15" fill="rgb(234,0,32)" fg:x="14" fg:w="1"/><text x="1.3772%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.2077%" y="533" width="0.0805%" height="15" fill="rgb(206,20,16)" fg:x="15" fg:w="1"/><text x="1.4577%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.2077%" y="517" width="0.0805%" height="15" fill="rgb(244,172,18)" fg:x="15" fg:w="1"/><text x="1.4577%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2077%" y="501" width="0.0805%" height="15" fill="rgb(254,133,1)" fg:x="15" fg:w="1"/><text x="1.4577%" y="511.50"></text></g><g><title>__libc_free (6 samples, 0.48%)</title><rect x="1.2882%" y="533" width="0.4831%" height="15" fill="rgb(222,206,41)" fg:x="16" fg:w="6"/><text x="1.5382%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.21%)</title><rect x="0.7246%" y="597" width="1.2077%" height="15" fill="rgb(212,3,42)" fg:x="9" fg:w="15"/><text x="0.9746%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.21%)</title><rect x="0.7246%" y="581" width="1.2077%" height="15" fill="rgb(241,11,4)" fg:x="9" fg:w="15"/><text x="0.9746%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.21%)</title><rect x="0.7246%" y="565" width="1.2077%" height="15" fill="rgb(205,19,26)" fg:x="9" fg:w="15"/><text x="0.9746%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="1.2077%" y="549" width="0.7246%" height="15" fill="rgb(210,179,32)" fg:x="15" fg:w="9"/><text x="1.4577%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.7713%" y="533" width="0.1610%" height="15" fill="rgb(227,116,49)" fg:x="22" fg:w="2"/><text x="2.0213%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.61%)</title><rect x="0.4026%" y="645" width="1.6103%" height="15" fill="rgb(211,146,6)" fg:x="5" fg:w="20"/><text x="0.6526%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (16 samples, 1.29%)</title><rect x="0.7246%" y="629" width="1.2882%" height="15" fill="rgb(219,44,39)" fg:x="9" fg:w="16"/><text x="0.9746%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.29%)</title><rect x="0.7246%" y="613" width="1.2882%" height="15" fill="rgb(234,128,11)" fg:x="9" fg:w="16"/><text x="0.9746%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9324%" y="597" width="0.0805%" height="15" fill="rgb(220,183,53)" fg:x="24" fg:w="1"/><text x="2.1824%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.0934%" y="581" width="0.0805%" height="15" fill="rgb(213,219,32)" fg:x="26" fg:w="1"/><text x="2.3434%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.0934%" y="565" width="0.0805%" height="15" fill="rgb(232,156,16)" fg:x="26" fg:w="1"/><text x="2.3434%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.0934%" y="549" width="0.0805%" height="15" fill="rgb(246,135,34)" fg:x="26" fg:w="1"/><text x="2.3434%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.1739%" y="549" width="0.0805%" height="15" fill="rgb(241,99,0)" fg:x="27" fg:w="1"/><text x="2.4239%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.1739%" y="533" width="0.0805%" height="15" fill="rgb(222,103,45)" fg:x="27" fg:w="1"/><text x="2.4239%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.1739%" y="517" width="0.0805%" height="15" fill="rgb(212,57,4)" fg:x="27" fg:w="1"/><text x="2.4239%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.1739%" y="501" width="0.0805%" height="15" fill="rgb(215,68,47)" fg:x="27" fg:w="1"/><text x="2.4239%" y="511.50"></text></g><g><title>dlerror (6 samples, 0.48%)</title><rect x="2.3349%" y="533" width="0.4831%" height="15" fill="rgb(230,84,2)" fg:x="29" fg:w="6"/><text x="2.5849%" y="543.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="2.7375%" y="517" width="0.0805%" height="15" fill="rgb(220,102,14)" fg:x="34" fg:w="1"/><text x="2.9875%" y="527.50"></text></g><g><title>dlopen (15 samples, 1.21%)</title><rect x="2.8180%" y="533" width="1.2077%" height="15" fill="rgb(240,10,32)" fg:x="35" fg:w="15"/><text x="3.0680%" y="543.50"></text></g><g><title>_dl_catch_error (15 samples, 1.21%)</title><rect x="2.8180%" y="517" width="1.2077%" height="15" fill="rgb(215,47,27)" fg:x="35" fg:w="15"/><text x="3.0680%" y="527.50"></text></g><g><title>_dl_catch_exception (15 samples, 1.21%)</title><rect x="2.8180%" y="501" width="1.2077%" height="15" fill="rgb(233,188,43)" fg:x="35" fg:w="15"/><text x="3.0680%" y="511.50"></text></g><g><title>_dl_catch_exception (14 samples, 1.13%)</title><rect x="2.8986%" y="485" width="1.1272%" height="15" fill="rgb(253,190,1)" fg:x="36" fg:w="14"/><text x="3.1486%" y="495.50"></text></g><g><title>_dl_catch_exception (14 samples, 1.13%)</title><rect x="2.8986%" y="469" width="1.1272%" height="15" fill="rgb(206,114,52)" fg:x="36" fg:w="14"/><text x="3.1486%" y="479.50"></text></g><g><title>libloading::safe::Library::new (23 samples, 1.85%)</title><rect x="2.2544%" y="549" width="1.8519%" height="15" fill="rgb(233,120,37)" fg:x="28" fg:w="23"/><text x="2.5044%" y="559.50">l..</text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="4.0258%" y="533" width="0.0805%" height="15" fill="rgb(214,52,39)" fg:x="50" fg:w="1"/><text x="4.2758%" y="543.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (1 samples, 0.08%)</title><rect x="4.1063%" y="549" width="0.0805%" height="15" fill="rgb(223,80,29)" fg:x="51" fg:w="1"/><text x="4.3563%" y="559.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (26 samples, 2.09%)</title><rect x="2.1739%" y="565" width="2.0934%" height="15" fill="rgb(230,101,40)" fg:x="27" fg:w="26"/><text x="2.4239%" y="575.50">&lt;..</text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="4.1868%" y="549" width="0.0805%" height="15" fill="rgb(219,211,8)" fg:x="52" fg:w="1"/><text x="4.4368%" y="559.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="4.1868%" y="533" width="0.0805%" height="15" fill="rgb(252,126,28)" fg:x="52" fg:w="1"/><text x="4.4368%" y="543.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (27 samples, 2.17%)</title><rect x="2.1739%" y="581" width="2.1739%" height="15" fill="rgb(215,56,38)" fg:x="27" fg:w="27"/><text x="2.4239%" y="591.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="4.2673%" y="565" width="0.0805%" height="15" fill="rgb(249,55,44)" fg:x="53" fg:w="1"/><text x="4.5173%" y="575.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="4.2673%" y="549" width="0.0805%" height="15" fill="rgb(220,221,32)" fg:x="53" fg:w="1"/><text x="4.5173%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.3478%" y="565" width="0.0805%" height="15" fill="rgb(212,216,41)" fg:x="54" fg:w="1"/><text x="4.5978%" y="575.50"></text></g><g><title>engine::session::Session::initialize (31 samples, 2.50%)</title><rect x="2.0934%" y="597" width="2.4960%" height="15" fill="rgb(228,213,43)" fg:x="26" fg:w="31"/><text x="2.3434%" y="607.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="4.3478%" y="581" width="0.2415%" height="15" fill="rgb(211,31,26)" fg:x="54" fg:w="3"/><text x="4.5978%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="4.4283%" y="565" width="0.1610%" height="15" fill="rgb(229,202,19)" fg:x="55" fg:w="2"/><text x="4.6783%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="4.4283%" y="549" width="0.1610%" height="15" fill="rgb(229,105,46)" fg:x="55" fg:w="2"/><text x="4.6783%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.5089%" y="533" width="0.0805%" height="15" fill="rgb(235,108,1)" fg:x="56" fg:w="1"/><text x="4.7589%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.5089%" y="517" width="0.0805%" height="15" fill="rgb(245,111,35)" fg:x="56" fg:w="1"/><text x="4.7589%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.5089%" y="501" width="0.0805%" height="15" fill="rgb(219,185,31)" fg:x="56" fg:w="1"/><text x="4.7589%" y="511.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="4.5894%" y="597" width="0.0805%" height="15" fill="rgb(214,4,43)" fg:x="57" fg:w="1"/><text x="4.8394%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="4.5894%" y="581" width="0.0805%" height="15" fill="rgb(235,227,40)" fg:x="57" fg:w="1"/><text x="4.8394%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.5894%" y="565" width="0.0805%" height="15" fill="rgb(230,88,30)" fg:x="57" fg:w="1"/><text x="4.8394%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.5894%" y="549" width="0.0805%" height="15" fill="rgb(216,217,1)" fg:x="57" fg:w="1"/><text x="4.8394%" y="559.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (34 samples, 2.74%)</title><rect x="2.0129%" y="645" width="2.7375%" height="15" fill="rgb(248,139,50)" fg:x="25" fg:w="34"/><text x="2.2629%" y="655.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (34 samples, 2.74%)</title><rect x="2.0129%" y="629" width="2.7375%" height="15" fill="rgb(233,1,21)" fg:x="25" fg:w="34"/><text x="2.2629%" y="639.50">en..</text></g><g><title>engine::session::Session::new (34 samples, 2.74%)</title><rect x="2.0129%" y="613" width="2.7375%" height="15" fill="rgb(215,183,12)" fg:x="25" fg:w="34"/><text x="2.2629%" y="623.50">en..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="4.6699%" y="597" width="0.0805%" height="15" fill="rgb(229,104,42)" fg:x="58" fg:w="1"/><text x="4.9199%" y="607.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="4.6699%" y="581" width="0.0805%" height="15" fill="rgb(243,34,48)" fg:x="58" fg:w="1"/><text x="4.9199%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.0725%" y="629" width="0.0805%" height="15" fill="rgb(239,11,44)" fg:x="63" fg:w="1"/><text x="5.3225%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.0725%" y="613" width="0.0805%" height="15" fill="rgb(231,98,35)" fg:x="63" fg:w="1"/><text x="5.3225%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.0725%" y="597" width="0.0805%" height="15" fill="rgb(233,28,25)" fg:x="63" fg:w="1"/><text x="5.3225%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.0725%" y="581" width="0.0805%" height="15" fill="rgb(234,123,11)" fg:x="63" fg:w="1"/><text x="5.3225%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.0725%" y="565" width="0.0805%" height="15" fill="rgb(220,69,3)" fg:x="63" fg:w="1"/><text x="5.3225%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.0725%" y="549" width="0.0805%" height="15" fill="rgb(214,64,36)" fg:x="63" fg:w="1"/><text x="5.3225%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.0725%" y="533" width="0.0805%" height="15" fill="rgb(211,138,32)" fg:x="63" fg:w="1"/><text x="5.3225%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.0725%" y="517" width="0.0805%" height="15" fill="rgb(213,118,47)" fg:x="63" fg:w="1"/><text x="5.3225%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.0725%" y="501" width="0.0805%" height="15" fill="rgb(243,124,49)" fg:x="63" fg:w="1"/><text x="5.3225%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.0725%" y="485" width="0.0805%" height="15" fill="rgb(221,30,28)" fg:x="63" fg:w="1"/><text x="5.3225%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.0725%" y="469" width="0.0805%" height="15" fill="rgb(246,37,13)" fg:x="63" fg:w="1"/><text x="5.3225%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.0725%" y="453" width="0.0805%" height="15" fill="rgb(249,66,14)" fg:x="63" fg:w="1"/><text x="5.3225%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.0725%" y="437" width="0.0805%" height="15" fill="rgb(213,166,5)" fg:x="63" fg:w="1"/><text x="5.3225%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="5.1530%" y="629" width="0.0805%" height="15" fill="rgb(221,66,24)" fg:x="64" fg:w="1"/><text x="5.4030%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.1530%" y="613" width="0.0805%" height="15" fill="rgb(210,132,17)" fg:x="64" fg:w="1"/><text x="5.4030%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="5.2335%" y="629" width="0.0805%" height="15" fill="rgb(243,202,5)" fg:x="65" fg:w="1"/><text x="5.4835%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="5.3140%" y="613" width="0.1610%" height="15" fill="rgb(233,70,48)" fg:x="66" fg:w="2"/><text x="5.5640%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.3945%" y="597" width="0.0805%" height="15" fill="rgb(238,41,26)" fg:x="67" fg:w="1"/><text x="5.6445%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="5.4750%" y="549" width="0.0805%" height="15" fill="rgb(241,19,31)" fg:x="68" fg:w="1"/><text x="5.7250%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.4750%" y="581" width="0.1610%" height="15" fill="rgb(214,76,10)" fg:x="68" fg:w="2"/><text x="5.7250%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="5.4750%" y="565" width="0.1610%" height="15" fill="rgb(254,202,22)" fg:x="68" fg:w="2"/><text x="5.7250%" y="575.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="5.5556%" y="549" width="0.0805%" height="15" fill="rgb(214,72,24)" fg:x="69" fg:w="1"/><text x="5.8056%" y="559.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="5.5556%" y="533" width="0.0805%" height="15" fill="rgb(221,92,46)" fg:x="69" fg:w="1"/><text x="5.8056%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.5556%" y="517" width="0.0805%" height="15" fill="rgb(246,13,50)" fg:x="69" fg:w="1"/><text x="5.8056%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="5.7166%" y="533" width="0.2415%" height="15" fill="rgb(240,165,38)" fg:x="71" fg:w="3"/><text x="5.9666%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="5.9581%" y="533" width="0.0805%" height="15" fill="rgb(241,24,51)" fg:x="74" fg:w="1"/><text x="6.2081%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.9581%" y="517" width="0.0805%" height="15" fill="rgb(227,51,44)" fg:x="74" fg:w="1"/><text x="6.2081%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.9581%" y="501" width="0.0805%" height="15" fill="rgb(231,121,3)" fg:x="74" fg:w="1"/><text x="6.2081%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.9581%" y="485" width="0.0805%" height="15" fill="rgb(245,3,41)" fg:x="74" fg:w="1"/><text x="6.2081%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="6.1192%" y="517" width="0.3221%" height="15" fill="rgb(214,13,26)" fg:x="76" fg:w="4"/><text x="6.3692%" y="527.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="6.1192%" y="501" width="0.3221%" height="15" fill="rgb(252,75,11)" fg:x="76" fg:w="4"/><text x="6.3692%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="6.1997%" y="485" width="0.2415%" height="15" fill="rgb(218,226,17)" fg:x="77" fg:w="3"/><text x="6.4497%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.2802%" y="469" width="0.1610%" height="15" fill="rgb(248,89,38)" fg:x="78" fg:w="2"/><text x="6.5302%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.4412%" y="501" width="0.0805%" height="15" fill="rgb(237,73,46)" fg:x="80" fg:w="1"/><text x="6.6912%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.5217%" y="469" width="0.1610%" height="15" fill="rgb(242,78,33)" fg:x="81" fg:w="2"/><text x="6.7717%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.5217%" y="453" width="0.1610%" height="15" fill="rgb(235,60,3)" fg:x="81" fg:w="2"/><text x="6.7717%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.6023%" y="437" width="0.0805%" height="15" fill="rgb(216,172,19)" fg:x="82" fg:w="1"/><text x="6.8523%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="6.5217%" y="501" width="0.2415%" height="15" fill="rgb(227,6,42)" fg:x="81" fg:w="3"/><text x="6.7717%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="6.5217%" y="485" width="0.2415%" height="15" fill="rgb(223,207,42)" fg:x="81" fg:w="3"/><text x="6.7717%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.6828%" y="469" width="0.0805%" height="15" fill="rgb(246,138,30)" fg:x="83" fg:w="1"/><text x="6.9328%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="6.7633%" y="501" width="0.4831%" height="15" fill="rgb(251,199,47)" fg:x="84" fg:w="6"/><text x="7.0133%" y="511.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="6.8438%" y="485" width="0.4026%" height="15" fill="rgb(228,218,44)" fg:x="85" fg:w="5"/><text x="7.0938%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.0048%" y="469" width="0.2415%" height="15" fill="rgb(220,68,6)" fg:x="87" fg:w="3"/><text x="7.2548%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="7.0048%" y="453" width="0.2415%" height="15" fill="rgb(240,60,26)" fg:x="87" fg:w="3"/><text x="7.2548%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="7.0853%" y="437" width="0.1610%" height="15" fill="rgb(211,200,19)" fg:x="88" fg:w="2"/><text x="7.3353%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.1659%" y="421" width="0.0805%" height="15" fill="rgb(242,145,30)" fg:x="89" fg:w="1"/><text x="7.4159%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.1659%" y="405" width="0.0805%" height="15" fill="rgb(225,64,13)" fg:x="89" fg:w="1"/><text x="7.4159%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.2464%" y="485" width="0.0805%" height="15" fill="rgb(218,103,35)" fg:x="90" fg:w="1"/><text x="7.4964%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.2464%" y="469" width="0.0805%" height="15" fill="rgb(216,93,46)" fg:x="90" fg:w="1"/><text x="7.4964%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.2464%" y="453" width="0.0805%" height="15" fill="rgb(225,159,27)" fg:x="90" fg:w="1"/><text x="7.4964%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="7.2464%" y="437" width="0.0805%" height="15" fill="rgb(225,204,11)" fg:x="90" fg:w="1"/><text x="7.4964%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="7.3269%" y="469" width="0.2415%" height="15" fill="rgb(205,56,4)" fg:x="91" fg:w="3"/><text x="7.5769%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.3269%" y="453" width="0.2415%" height="15" fill="rgb(206,6,35)" fg:x="91" fg:w="3"/><text x="7.5769%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.4879%" y="437" width="0.0805%" height="15" fill="rgb(247,73,52)" fg:x="93" fg:w="1"/><text x="7.7379%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.4879%" y="421" width="0.0805%" height="15" fill="rgb(246,97,4)" fg:x="93" fg:w="1"/><text x="7.7379%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="7.3269%" y="485" width="0.3221%" height="15" fill="rgb(212,37,15)" fg:x="91" fg:w="4"/><text x="7.5769%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.5684%" y="469" width="0.0805%" height="15" fill="rgb(208,130,40)" fg:x="94" fg:w="1"/><text x="7.8184%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="7.2464%" y="501" width="0.4831%" height="15" fill="rgb(236,55,29)" fg:x="90" fg:w="6"/><text x="7.4964%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.6490%" y="485" width="0.0805%" height="15" fill="rgb(209,156,45)" fg:x="95" fg:w="1"/><text x="7.8990%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.37%)</title><rect x="6.4412%" y="517" width="1.3688%" height="15" fill="rgb(249,107,4)" fg:x="80" fg:w="17"/><text x="6.6912%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.7295%" y="501" width="0.0805%" height="15" fill="rgb(227,7,13)" fg:x="96" fg:w="1"/><text x="7.9795%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.7295%" y="485" width="0.0805%" height="15" fill="rgb(250,129,14)" fg:x="96" fg:w="1"/><text x="7.9795%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.7295%" y="469" width="0.0805%" height="15" fill="rgb(229,92,13)" fg:x="96" fg:w="1"/><text x="7.9795%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.17%)</title><rect x="6.0386%" y="533" width="2.1739%" height="15" fill="rgb(245,98,39)" fg:x="75" fg:w="27"/><text x="6.2886%" y="543.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="7.8100%" y="517" width="0.4026%" height="15" fill="rgb(234,135,48)" fg:x="97" fg:w="5"/><text x="8.0600%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.9710%" y="501" width="0.2415%" height="15" fill="rgb(230,98,28)" fg:x="99" fg:w="3"/><text x="8.2210%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.0515%" y="485" width="0.1610%" height="15" fill="rgb(223,121,0)" fg:x="100" fg:w="2"/><text x="8.3015%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.1320%" y="469" width="0.0805%" height="15" fill="rgb(234,173,33)" fg:x="101" fg:w="1"/><text x="8.3820%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.1320%" y="453" width="0.0805%" height="15" fill="rgb(245,47,8)" fg:x="101" fg:w="1"/><text x="8.3820%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.58%)</title><rect x="5.7166%" y="549" width="2.5765%" height="15" fill="rgb(205,17,20)" fg:x="71" fg:w="32"/><text x="5.9666%" y="559.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.2126%" y="533" width="0.0805%" height="15" fill="rgb(232,151,16)" fg:x="102" fg:w="1"/><text x="8.4626%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.2126%" y="517" width="0.0805%" height="15" fill="rgb(208,30,32)" fg:x="102" fg:w="1"/><text x="8.4626%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.2126%" y="501" width="0.0805%" height="15" fill="rgb(254,26,3)" fg:x="102" fg:w="1"/><text x="8.4626%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.2126%" y="485" width="0.0805%" height="15" fill="rgb(240,177,30)" fg:x="102" fg:w="1"/><text x="8.4626%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.2126%" y="469" width="0.0805%" height="15" fill="rgb(248,76,44)" fg:x="102" fg:w="1"/><text x="8.4626%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.2126%" y="453" width="0.0805%" height="15" fill="rgb(241,186,54)" fg:x="102" fg:w="1"/><text x="8.4626%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.3736%" y="501" width="0.0805%" height="15" fill="rgb(249,171,29)" fg:x="104" fg:w="1"/><text x="8.6236%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="8.2931%" y="549" width="0.3221%" height="15" fill="rgb(237,151,44)" fg:x="103" fg:w="4"/><text x="8.5431%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="8.2931%" y="533" width="0.3221%" height="15" fill="rgb(228,174,30)" fg:x="103" fg:w="4"/><text x="8.5431%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="8.2931%" y="517" width="0.3221%" height="15" fill="rgb(252,14,37)" fg:x="103" fg:w="4"/><text x="8.5431%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.4541%" y="501" width="0.1610%" height="15" fill="rgb(207,111,40)" fg:x="105" fg:w="2"/><text x="8.7041%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.5346%" y="485" width="0.0805%" height="15" fill="rgb(248,171,54)" fg:x="106" fg:w="1"/><text x="8.7846%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.5346%" y="469" width="0.0805%" height="15" fill="rgb(211,127,2)" fg:x="106" fg:w="1"/><text x="8.7846%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.5346%" y="453" width="0.0805%" height="15" fill="rgb(236,87,47)" fg:x="106" fg:w="1"/><text x="8.7846%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="8.6151%" y="533" width="0.1610%" height="15" fill="rgb(223,190,45)" fg:x="107" fg:w="2"/><text x="8.8651%" y="543.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="8.6151%" y="517" width="0.1610%" height="15" fill="rgb(215,5,16)" fg:x="107" fg:w="2"/><text x="8.8651%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.6957%" y="501" width="0.0805%" height="15" fill="rgb(252,82,33)" fg:x="108" fg:w="1"/><text x="8.9457%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.6957%" y="485" width="0.0805%" height="15" fill="rgb(247,213,44)" fg:x="108" fg:w="1"/><text x="8.9457%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7762%" y="501" width="0.0805%" height="15" fill="rgb(205,196,44)" fg:x="109" fg:w="1"/><text x="9.0262%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="8.8567%" y="501" width="0.3221%" height="15" fill="rgb(237,96,54)" fg:x="110" fg:w="4"/><text x="9.1067%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.0177%" y="485" width="0.1610%" height="15" fill="rgb(230,113,34)" fg:x="112" fg:w="2"/><text x="9.2677%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="9.1787%" y="501" width="0.0805%" height="15" fill="rgb(221,224,12)" fg:x="114" fg:w="1"/><text x="9.4287%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.5008%" y="469" width="0.0805%" height="15" fill="rgb(219,112,44)" fg:x="118" fg:w="1"/><text x="9.7508%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.5813%" y="421" width="0.0805%" height="15" fill="rgb(210,31,13)" fg:x="119" fg:w="1"/><text x="9.8313%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.5813%" y="453" width="0.1610%" height="15" fill="rgb(230,25,16)" fg:x="119" fg:w="2"/><text x="9.8313%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.5813%" y="437" width="0.1610%" height="15" fill="rgb(246,108,53)" fg:x="119" fg:w="2"/><text x="9.8313%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="9.6618%" y="421" width="0.0805%" height="15" fill="rgb(241,172,50)" fg:x="120" fg:w="1"/><text x="9.9118%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="9.7424%" y="421" width="0.1610%" height="15" fill="rgb(235,141,10)" fg:x="121" fg:w="2"/><text x="9.9924%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="9.7424%" y="453" width="0.2415%" height="15" fill="rgb(220,174,43)" fg:x="121" fg:w="3"/><text x="9.9924%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="9.7424%" y="437" width="0.2415%" height="15" fill="rgb(215,181,40)" fg:x="121" fg:w="3"/><text x="9.9924%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="9.9034%" y="421" width="0.0805%" height="15" fill="rgb(230,97,2)" fg:x="123" fg:w="1"/><text x="10.1534%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="9.9034%" y="405" width="0.0805%" height="15" fill="rgb(211,25,27)" fg:x="123" fg:w="1"/><text x="10.1534%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="10.3060%" y="421" width="0.3221%" height="15" fill="rgb(230,87,26)" fg:x="128" fg:w="4"/><text x="10.5560%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.4670%" y="405" width="0.1610%" height="15" fill="rgb(227,160,17)" fg:x="130" fg:w="2"/><text x="10.7170%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.4670%" y="389" width="0.1610%" height="15" fill="rgb(244,85,34)" fg:x="130" fg:w="2"/><text x="10.7170%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.29%)</title><rect x="9.4203%" y="485" width="1.2882%" height="15" fill="rgb(207,70,0)" fg:x="117" fg:w="16"/><text x="9.6703%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.13%)</title><rect x="9.5813%" y="469" width="1.1272%" height="15" fill="rgb(223,129,7)" fg:x="119" fg:w="14"/><text x="9.8313%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="9.9839%" y="453" width="0.7246%" height="15" fill="rgb(246,105,7)" fg:x="124" fg:w="9"/><text x="10.2339%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="10.1449%" y="437" width="0.5636%" height="15" fill="rgb(215,154,42)" fg:x="126" fg:w="7"/><text x="10.3949%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6280%" y="421" width="0.0805%" height="15" fill="rgb(220,215,30)" fg:x="132" fg:w="1"/><text x="10.8780%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.6280%" y="405" width="0.0805%" height="15" fill="rgb(228,81,51)" fg:x="132" fg:w="1"/><text x="10.8780%" y="415.50"></text></g><g><title>engine::session::Session::flush (68 samples, 5.48%)</title><rect x="5.3140%" y="629" width="5.4750%" height="15" fill="rgb(247,71,54)" fg:x="66" fg:w="68"/><text x="5.5640%" y="639.50">engine:..</text></g><g><title>engine::session::state::State::close (66 samples, 5.31%)</title><rect x="5.4750%" y="613" width="5.3140%" height="15" fill="rgb(234,176,34)" fg:x="68" fg:w="66"/><text x="5.7250%" y="623.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (66 samples, 5.31%)</title><rect x="5.4750%" y="597" width="5.3140%" height="15" fill="rgb(241,103,54)" fg:x="68" fg:w="66"/><text x="5.7250%" y="607.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (64 samples, 5.15%)</title><rect x="5.6361%" y="581" width="5.1530%" height="15" fill="rgb(228,22,34)" fg:x="70" fg:w="64"/><text x="5.8861%" y="591.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (63 samples, 5.07%)</title><rect x="5.7166%" y="565" width="5.0725%" height="15" fill="rgb(241,179,48)" fg:x="71" fg:w="63"/><text x="5.9666%" y="575.50">engine..</text></g><g><title>kernel::model::any_entity_changes (27 samples, 2.17%)</title><rect x="8.6151%" y="549" width="2.1739%" height="15" fill="rgb(235,167,37)" fg:x="107" fg:w="27"/><text x="8.8651%" y="559.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (25 samples, 2.01%)</title><rect x="8.7762%" y="533" width="2.0129%" height="15" fill="rgb(213,109,30)" fg:x="109" fg:w="25"/><text x="9.0262%" y="543.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 2.01%)</title><rect x="8.7762%" y="517" width="2.0129%" height="15" fill="rgb(222,172,16)" fg:x="109" fg:w="25"/><text x="9.0262%" y="527.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.53%)</title><rect x="9.2593%" y="501" width="1.5298%" height="15" fill="rgb(233,192,5)" fg:x="115" fg:w="19"/><text x="9.5093%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.7085%" y="485" width="0.0805%" height="15" fill="rgb(247,189,41)" fg:x="133" fg:w="1"/><text x="10.9585%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.7085%" y="469" width="0.0805%" height="15" fill="rgb(218,134,47)" fg:x="133" fg:w="1"/><text x="10.9585%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="10.7890%" y="565" width="0.0805%" height="15" fill="rgb(216,29,3)" fg:x="134" fg:w="1"/><text x="11.0390%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.7890%" y="549" width="0.0805%" height="15" fill="rgb(246,140,12)" fg:x="134" fg:w="1"/><text x="11.0390%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="10.7890%" y="581" width="0.1610%" height="15" fill="rgb(230,136,11)" fg:x="134" fg:w="2"/><text x="11.0390%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.8696%" y="565" width="0.0805%" height="15" fill="rgb(247,22,47)" fg:x="135" fg:w="1"/><text x="11.1196%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8696%" y="549" width="0.0805%" height="15" fill="rgb(218,84,22)" fg:x="135" fg:w="1"/><text x="11.1196%" y="559.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="10.9501%" y="533" width="0.0805%" height="15" fill="rgb(216,87,39)" fg:x="136" fg:w="1"/><text x="11.2001%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="10.9501%" y="517" width="0.0805%" height="15" fill="rgb(221,178,8)" fg:x="136" fg:w="1"/><text x="11.2001%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9501%" y="501" width="0.0805%" height="15" fill="rgb(230,42,11)" fg:x="136" fg:w="1"/><text x="11.2001%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.9501%" y="485" width="0.0805%" height="15" fill="rgb(237,229,4)" fg:x="136" fg:w="1"/><text x="11.2001%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="10.9501%" y="469" width="0.0805%" height="15" fill="rgb(222,31,33)" fg:x="136" fg:w="1"/><text x="11.2001%" y="479.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="10.9501%" y="453" width="0.0805%" height="15" fill="rgb(210,17,39)" fg:x="136" fg:w="1"/><text x="11.2001%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="10.9501%" y="581" width="0.1610%" height="15" fill="rgb(244,93,20)" fg:x="136" fg:w="2"/><text x="11.2001%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="10.9501%" y="565" width="0.1610%" height="15" fill="rgb(210,40,47)" fg:x="136" fg:w="2"/><text x="11.2001%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="10.9501%" y="549" width="0.1610%" height="15" fill="rgb(239,211,47)" fg:x="136" fg:w="2"/><text x="11.2001%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.0306%" y="533" width="0.0805%" height="15" fill="rgb(251,223,49)" fg:x="137" fg:w="1"/><text x="11.2806%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.1111%" y="533" width="0.1610%" height="15" fill="rgb(221,149,5)" fg:x="138" fg:w="2"/><text x="11.3611%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.1111%" y="517" width="0.1610%" height="15" fill="rgb(219,224,51)" fg:x="138" fg:w="2"/><text x="11.3611%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.1111%" y="501" width="0.1610%" height="15" fill="rgb(223,7,8)" fg:x="138" fg:w="2"/><text x="11.3611%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1916%" y="485" width="0.0805%" height="15" fill="rgb(241,217,22)" fg:x="139" fg:w="1"/><text x="11.4416%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1916%" y="469" width="0.0805%" height="15" fill="rgb(248,209,0)" fg:x="139" fg:w="1"/><text x="11.4416%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.1916%" y="453" width="0.0805%" height="15" fill="rgb(217,205,4)" fg:x="139" fg:w="1"/><text x="11.4416%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.1916%" y="437" width="0.0805%" height="15" fill="rgb(228,124,39)" fg:x="139" fg:w="1"/><text x="11.4416%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.1916%" y="421" width="0.0805%" height="15" fill="rgb(250,116,42)" fg:x="139" fg:w="1"/><text x="11.4416%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.1916%" y="405" width="0.0805%" height="15" fill="rgb(223,202,9)" fg:x="139" fg:w="1"/><text x="11.4416%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.1916%" y="389" width="0.0805%" height="15" fill="rgb(242,222,40)" fg:x="139" fg:w="1"/><text x="11.4416%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.1916%" y="373" width="0.0805%" height="15" fill="rgb(229,99,46)" fg:x="139" fg:w="1"/><text x="11.4416%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.1916%" y="357" width="0.0805%" height="15" fill="rgb(225,56,46)" fg:x="139" fg:w="1"/><text x="11.4416%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.1916%" y="341" width="0.0805%" height="15" fill="rgb(227,94,5)" fg:x="139" fg:w="1"/><text x="11.4416%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.1916%" y="325" width="0.0805%" height="15" fill="rgb(205,112,38)" fg:x="139" fg:w="1"/><text x="11.4416%" y="335.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="11.1916%" y="309" width="0.0805%" height="15" fill="rgb(231,133,46)" fg:x="139" fg:w="1"/><text x="11.4416%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="11.2721%" y="533" width="0.0805%" height="15" fill="rgb(217,16,9)" fg:x="140" fg:w="1"/><text x="11.5221%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="11.1111%" y="565" width="0.3221%" height="15" fill="rgb(249,173,9)" fg:x="138" fg:w="4"/><text x="11.3611%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="11.1111%" y="549" width="0.3221%" height="15" fill="rgb(205,163,53)" fg:x="138" fg:w="4"/><text x="11.3611%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.3527%" y="533" width="0.0805%" height="15" fill="rgb(217,54,41)" fg:x="141" fg:w="1"/><text x="11.6027%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.3527%" y="517" width="0.0805%" height="15" fill="rgb(228,216,12)" fg:x="141" fg:w="1"/><text x="11.6027%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.3527%" y="501" width="0.0805%" height="15" fill="rgb(244,228,15)" fg:x="141" fg:w="1"/><text x="11.6027%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.3527%" y="485" width="0.0805%" height="15" fill="rgb(221,176,53)" fg:x="141" fg:w="1"/><text x="11.6027%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="11.3527%" y="469" width="0.0805%" height="15" fill="rgb(205,94,34)" fg:x="141" fg:w="1"/><text x="11.6027%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.3527%" y="453" width="0.0805%" height="15" fill="rgb(213,110,48)" fg:x="141" fg:w="1"/><text x="11.6027%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4332%" y="517" width="0.0805%" height="15" fill="rgb(236,142,28)" fg:x="142" fg:w="1"/><text x="11.6832%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4332%" y="501" width="0.0805%" height="15" fill="rgb(225,135,29)" fg:x="142" fg:w="1"/><text x="11.6832%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4332%" y="485" width="0.0805%" height="15" fill="rgb(252,45,31)" fg:x="142" fg:w="1"/><text x="11.6832%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4332%" y="469" width="0.0805%" height="15" fill="rgb(211,187,50)" fg:x="142" fg:w="1"/><text x="11.6832%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.4332%" y="453" width="0.0805%" height="15" fill="rgb(229,109,7)" fg:x="142" fg:w="1"/><text x="11.6832%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.4332%" y="437" width="0.0805%" height="15" fill="rgb(251,131,51)" fg:x="142" fg:w="1"/><text x="11.6832%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.4332%" y="421" width="0.0805%" height="15" fill="rgb(251,180,35)" fg:x="142" fg:w="1"/><text x="11.6832%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.4332%" y="405" width="0.0805%" height="15" fill="rgb(211,46,32)" fg:x="142" fg:w="1"/><text x="11.6832%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.4332%" y="389" width="0.0805%" height="15" fill="rgb(248,123,17)" fg:x="142" fg:w="1"/><text x="11.6832%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.4332%" y="373" width="0.0805%" height="15" fill="rgb(227,141,18)" fg:x="142" fg:w="1"/><text x="11.6832%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.4332%" y="357" width="0.0805%" height="15" fill="rgb(216,102,9)" fg:x="142" fg:w="1"/><text x="11.6832%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.4332%" y="341" width="0.0805%" height="15" fill="rgb(253,47,13)" fg:x="142" fg:w="1"/><text x="11.6832%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.4332%" y="325" width="0.0805%" height="15" fill="rgb(226,93,23)" fg:x="142" fg:w="1"/><text x="11.6832%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.4332%" y="309" width="0.0805%" height="15" fill="rgb(247,104,17)" fg:x="142" fg:w="1"/><text x="11.6832%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.4332%" y="533" width="0.1610%" height="15" fill="rgb(233,203,26)" fg:x="142" fg:w="2"/><text x="11.6832%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.5137%" y="517" width="0.0805%" height="15" fill="rgb(244,98,49)" fg:x="143" fg:w="1"/><text x="11.7637%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="11.1111%" y="581" width="0.5636%" height="15" fill="rgb(235,134,22)" fg:x="138" fg:w="7"/><text x="11.3611%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="11.4332%" y="565" width="0.2415%" height="15" fill="rgb(221,70,32)" fg:x="142" fg:w="3"/><text x="11.6832%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="11.4332%" y="549" width="0.2415%" height="15" fill="rgb(238,15,50)" fg:x="142" fg:w="3"/><text x="11.6832%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="11.5942%" y="533" width="0.0805%" height="15" fill="rgb(215,221,48)" fg:x="144" fg:w="1"/><text x="11.8442%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.5942%" y="517" width="0.0805%" height="15" fill="rgb(236,73,3)" fg:x="144" fg:w="1"/><text x="11.8442%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.5942%" y="501" width="0.0805%" height="15" fill="rgb(250,107,11)" fg:x="144" fg:w="1"/><text x="11.8442%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.5942%" y="485" width="0.0805%" height="15" fill="rgb(242,39,14)" fg:x="144" fg:w="1"/><text x="11.8442%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.5942%" y="469" width="0.0805%" height="15" fill="rgb(248,164,37)" fg:x="144" fg:w="1"/><text x="11.8442%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.97%)</title><rect x="10.7890%" y="597" width="0.9662%" height="15" fill="rgb(217,60,12)" fg:x="134" fg:w="12"/><text x="11.0390%" y="607.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="11.6747%" y="581" width="0.0805%" height="15" fill="rgb(240,125,29)" fg:x="145" fg:w="1"/><text x="11.9247%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="11.6747%" y="565" width="0.0805%" height="15" fill="rgb(208,207,28)" fg:x="145" fg:w="1"/><text x="11.9247%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="11.6747%" y="549" width="0.0805%" height="15" fill="rgb(209,159,27)" fg:x="145" fg:w="1"/><text x="11.9247%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.6747%" y="533" width="0.0805%" height="15" fill="rgb(251,176,53)" fg:x="145" fg:w="1"/><text x="11.9247%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.6747%" y="517" width="0.0805%" height="15" fill="rgb(211,85,7)" fg:x="145" fg:w="1"/><text x="11.9247%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6747%" y="501" width="0.0805%" height="15" fill="rgb(216,64,54)" fg:x="145" fg:w="1"/><text x="11.9247%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.6747%" y="485" width="0.0805%" height="15" fill="rgb(217,54,24)" fg:x="145" fg:w="1"/><text x="11.9247%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6747%" y="469" width="0.0805%" height="15" fill="rgb(208,206,53)" fg:x="145" fg:w="1"/><text x="11.9247%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.6747%" y="453" width="0.0805%" height="15" fill="rgb(251,74,39)" fg:x="145" fg:w="1"/><text x="11.9247%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6747%" y="437" width="0.0805%" height="15" fill="rgb(226,47,5)" fg:x="145" fg:w="1"/><text x="11.9247%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="11.7552%" y="565" width="0.0805%" height="15" fill="rgb(234,111,33)" fg:x="146" fg:w="1"/><text x="12.0052%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.7552%" y="549" width="0.0805%" height="15" fill="rgb(251,14,10)" fg:x="146" fg:w="1"/><text x="12.0052%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.7552%" y="533" width="0.0805%" height="15" fill="rgb(232,43,0)" fg:x="146" fg:w="1"/><text x="12.0052%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.7552%" y="517" width="0.0805%" height="15" fill="rgb(222,68,43)" fg:x="146" fg:w="1"/><text x="12.0052%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.7552%" y="501" width="0.0805%" height="15" fill="rgb(217,24,23)" fg:x="146" fg:w="1"/><text x="12.0052%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (14 samples, 1.13%)</title><rect x="10.7890%" y="613" width="1.1272%" height="15" fill="rgb(229,209,14)" fg:x="134" fg:w="14"/><text x="11.0390%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="11.7552%" y="597" width="0.1610%" height="15" fill="rgb(250,149,48)" fg:x="146" fg:w="2"/><text x="12.0052%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="11.7552%" y="581" width="0.1610%" height="15" fill="rgb(210,120,37)" fg:x="146" fg:w="2"/><text x="12.0052%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.8357%" y="565" width="0.0805%" height="15" fill="rgb(210,21,8)" fg:x="147" fg:w="1"/><text x="12.0857%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8357%" y="549" width="0.0805%" height="15" fill="rgb(243,145,7)" fg:x="147" fg:w="1"/><text x="12.0857%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="11.8357%" y="533" width="0.0805%" height="15" fill="rgb(238,178,32)" fg:x="147" fg:w="1"/><text x="12.0857%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="11.9163%" y="597" width="0.0805%" height="15" fill="rgb(222,4,10)" fg:x="148" fg:w="1"/><text x="12.1663%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.9163%" y="581" width="0.0805%" height="15" fill="rgb(239,7,37)" fg:x="148" fg:w="1"/><text x="12.1663%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.9968%" y="565" width="0.0805%" height="15" fill="rgb(215,31,37)" fg:x="149" fg:w="1"/><text x="12.2468%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.9968%" y="549" width="0.0805%" height="15" fill="rgb(224,83,33)" fg:x="149" fg:w="1"/><text x="12.2468%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.9968%" y="533" width="0.0805%" height="15" fill="rgb(239,55,3)" fg:x="149" fg:w="1"/><text x="12.2468%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9968%" y="517" width="0.0805%" height="15" fill="rgb(247,92,11)" fg:x="149" fg:w="1"/><text x="12.2468%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.9968%" y="501" width="0.0805%" height="15" fill="rgb(239,200,7)" fg:x="149" fg:w="1"/><text x="12.2468%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9968%" y="485" width="0.0805%" height="15" fill="rgb(227,115,8)" fg:x="149" fg:w="1"/><text x="12.2468%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.9968%" y="469" width="0.0805%" height="15" fill="rgb(215,189,27)" fg:x="149" fg:w="1"/><text x="12.2468%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9968%" y="453" width="0.0805%" height="15" fill="rgb(251,216,39)" fg:x="149" fg:w="1"/><text x="12.2468%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.0773%" y="533" width="0.0805%" height="15" fill="rgb(207,29,47)" fg:x="150" fg:w="1"/><text x="12.3273%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="12.1578%" y="533" width="0.0805%" height="15" fill="rgb(210,71,34)" fg:x="151" fg:w="1"/><text x="12.4078%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.1578%" y="517" width="0.0805%" height="15" fill="rgb(253,217,51)" fg:x="151" fg:w="1"/><text x="12.4078%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1578%" y="501" width="0.0805%" height="15" fill="rgb(222,117,46)" fg:x="151" fg:w="1"/><text x="12.4078%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="11.9968%" y="597" width="0.3221%" height="15" fill="rgb(226,132,6)" fg:x="149" fg:w="4"/><text x="12.2468%" y="607.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="11.9968%" y="581" width="0.3221%" height="15" fill="rgb(254,145,51)" fg:x="149" fg:w="4"/><text x="12.2468%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="12.0773%" y="565" width="0.2415%" height="15" fill="rgb(231,199,27)" fg:x="150" fg:w="3"/><text x="12.3273%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.0773%" y="549" width="0.2415%" height="15" fill="rgb(245,158,14)" fg:x="150" fg:w="3"/><text x="12.3273%" y="559.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="12.2383%" y="533" width="0.0805%" height="15" fill="rgb(240,113,14)" fg:x="152" fg:w="1"/><text x="12.4883%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="12.3188%" y="597" width="0.0805%" height="15" fill="rgb(210,20,13)" fg:x="153" fg:w="1"/><text x="12.5688%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="12.3994%" y="597" width="0.2415%" height="15" fill="rgb(241,144,13)" fg:x="154" fg:w="3"/><text x="12.6494%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5604%" y="581" width="0.0805%" height="15" fill="rgb(235,43,34)" fg:x="156" fg:w="1"/><text x="12.8104%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="12.6409%" y="597" width="0.0805%" height="15" fill="rgb(208,36,20)" fg:x="157" fg:w="1"/><text x="12.8909%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="12.6409%" y="581" width="0.0805%" height="15" fill="rgb(239,204,10)" fg:x="157" fg:w="1"/><text x="12.8909%" y="591.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="12.6409%" y="565" width="0.0805%" height="15" fill="rgb(217,84,43)" fg:x="157" fg:w="1"/><text x="12.8909%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="12.6409%" y="549" width="0.0805%" height="15" fill="rgb(241,170,50)" fg:x="157" fg:w="1"/><text x="12.8909%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8019%" y="501" width="0.0805%" height="15" fill="rgb(226,205,29)" fg:x="159" fg:w="1"/><text x="13.0519%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (27 samples, 2.17%)</title><rect x="10.7890%" y="629" width="2.1739%" height="15" fill="rgb(233,113,1)" fg:x="134" fg:w="27"/><text x="11.0390%" y="639.50">p..</text></g><g><title>plugins_core::tools::set_container (13 samples, 1.05%)</title><rect x="11.9163%" y="613" width="1.0467%" height="15" fill="rgb(253,98,13)" fg:x="148" fg:w="13"/><text x="12.1663%" y="623.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="12.7214%" y="597" width="0.2415%" height="15" fill="rgb(211,115,12)" fg:x="158" fg:w="3"/><text x="12.9714%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="12.7214%" y="581" width="0.2415%" height="15" fill="rgb(208,12,16)" fg:x="158" fg:w="3"/><text x="12.9714%" y="591.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="12.8019%" y="565" width="0.1610%" height="15" fill="rgb(237,193,54)" fg:x="159" fg:w="2"/><text x="13.0519%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.8019%" y="549" width="0.1610%" height="15" fill="rgb(243,22,42)" fg:x="159" fg:w="2"/><text x="13.0519%" y="559.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="12.8019%" y="533" width="0.1610%" height="15" fill="rgb(233,151,36)" fg:x="159" fg:w="2"/><text x="13.0519%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.8019%" y="517" width="0.1610%" height="15" fill="rgb(237,57,45)" fg:x="159" fg:w="2"/><text x="13.0519%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.8824%" y="501" width="0.0805%" height="15" fill="rgb(221,88,17)" fg:x="160" fg:w="1"/><text x="13.1324%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.8824%" y="485" width="0.0805%" height="15" fill="rgb(230,79,15)" fg:x="160" fg:w="1"/><text x="13.1324%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="12.9630%" y="597" width="0.0805%" height="15" fill="rgb(213,57,13)" fg:x="161" fg:w="1"/><text x="13.2130%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.9630%" y="581" width="0.0805%" height="15" fill="rgb(222,116,39)" fg:x="161" fg:w="1"/><text x="13.2130%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="12.9630%" y="565" width="0.0805%" height="15" fill="rgb(245,107,2)" fg:x="161" fg:w="1"/><text x="13.2130%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9630%" y="549" width="0.0805%" height="15" fill="rgb(238,1,10)" fg:x="161" fg:w="1"/><text x="13.2130%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="12.9630%" y="533" width="0.0805%" height="15" fill="rgb(249,4,48)" fg:x="161" fg:w="1"/><text x="13.2130%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9630%" y="517" width="0.0805%" height="15" fill="rgb(223,151,18)" fg:x="161" fg:w="1"/><text x="13.2130%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="12.9630%" y="501" width="0.0805%" height="15" fill="rgb(227,65,43)" fg:x="161" fg:w="1"/><text x="13.2130%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9630%" y="485" width="0.0805%" height="15" fill="rgb(218,40,45)" fg:x="161" fg:w="1"/><text x="13.2130%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.9630%" y="469" width="0.0805%" height="15" fill="rgb(252,121,31)" fg:x="161" fg:w="1"/><text x="13.2130%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.9630%" y="453" width="0.0805%" height="15" fill="rgb(219,158,43)" fg:x="161" fg:w="1"/><text x="13.2130%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="13.0435%" y="597" width="0.2415%" height="15" fill="rgb(231,162,42)" fg:x="162" fg:w="3"/><text x="13.2935%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="13.0435%" y="581" width="0.2415%" height="15" fill="rgb(217,179,25)" fg:x="162" fg:w="3"/><text x="13.2935%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.0435%" y="565" width="0.2415%" height="15" fill="rgb(206,212,31)" fg:x="162" fg:w="3"/><text x="13.2935%" y="575.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (3 samples, 0.24%)</title><rect x="13.0435%" y="549" width="0.2415%" height="15" fill="rgb(235,144,12)" fg:x="162" fg:w="3"/><text x="13.2935%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="13.0435%" y="533" width="0.2415%" height="15" fill="rgb(213,51,10)" fg:x="162" fg:w="3"/><text x="13.2935%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.1240%" y="517" width="0.1610%" height="15" fill="rgb(231,145,14)" fg:x="163" fg:w="2"/><text x="13.3740%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.1240%" y="501" width="0.1610%" height="15" fill="rgb(235,15,28)" fg:x="163" fg:w="2"/><text x="13.3740%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.2045%" y="485" width="0.0805%" height="15" fill="rgb(237,206,10)" fg:x="164" fg:w="1"/><text x="13.4545%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.2045%" y="469" width="0.0805%" height="15" fill="rgb(236,227,27)" fg:x="164" fg:w="1"/><text x="13.4545%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="13.2850%" y="549" width="0.0805%" height="15" fill="rgb(246,83,35)" fg:x="165" fg:w="1"/><text x="13.5350%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.2850%" y="533" width="0.0805%" height="15" fill="rgb(220,136,24)" fg:x="165" fg:w="1"/><text x="13.5350%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="13.2850%" y="517" width="0.0805%" height="15" fill="rgb(217,3,25)" fg:x="165" fg:w="1"/><text x="13.5350%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.2850%" y="501" width="0.0805%" height="15" fill="rgb(239,24,14)" fg:x="165" fg:w="1"/><text x="13.5350%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.2850%" y="485" width="0.0805%" height="15" fill="rgb(244,16,53)" fg:x="165" fg:w="1"/><text x="13.5350%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="13.2850%" y="597" width="0.1610%" height="15" fill="rgb(208,175,44)" fg:x="165" fg:w="2"/><text x="13.5350%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="13.2850%" y="581" width="0.1610%" height="15" fill="rgb(252,18,48)" fg:x="165" fg:w="2"/><text x="13.5350%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="13.2850%" y="565" width="0.1610%" height="15" fill="rgb(234,199,32)" fg:x="165" fg:w="2"/><text x="13.5350%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.3655%" y="549" width="0.0805%" height="15" fill="rgb(225,77,54)" fg:x="166" fg:w="1"/><text x="13.6155%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.3655%" y="533" width="0.0805%" height="15" fill="rgb(225,42,25)" fg:x="166" fg:w="1"/><text x="13.6155%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.3655%" y="517" width="0.0805%" height="15" fill="rgb(242,227,46)" fg:x="166" fg:w="1"/><text x="13.6155%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4461%" y="581" width="0.0805%" height="15" fill="rgb(246,197,35)" fg:x="167" fg:w="1"/><text x="13.6961%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4461%" y="565" width="0.0805%" height="15" fill="rgb(215,159,26)" fg:x="167" fg:w="1"/><text x="13.6961%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.4461%" y="549" width="0.0805%" height="15" fill="rgb(212,194,50)" fg:x="167" fg:w="1"/><text x="13.6961%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.4461%" y="533" width="0.0805%" height="15" fill="rgb(246,132,1)" fg:x="167" fg:w="1"/><text x="13.6961%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.4461%" y="517" width="0.0805%" height="15" fill="rgb(217,71,7)" fg:x="167" fg:w="1"/><text x="13.6961%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.5266%" y="565" width="0.0805%" height="15" fill="rgb(252,59,32)" fg:x="168" fg:w="1"/><text x="13.7766%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="13.4461%" y="597" width="0.2415%" height="15" fill="rgb(253,204,25)" fg:x="167" fg:w="3"/><text x="13.6961%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.5266%" y="581" width="0.1610%" height="15" fill="rgb(232,21,16)" fg:x="168" fg:w="2"/><text x="13.7766%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.6071%" y="565" width="0.0805%" height="15" fill="rgb(248,90,29)" fg:x="169" fg:w="1"/><text x="13.8571%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.6071%" y="549" width="0.0805%" height="15" fill="rgb(249,223,7)" fg:x="169" fg:w="1"/><text x="13.8571%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.6071%" y="533" width="0.0805%" height="15" fill="rgb(231,119,42)" fg:x="169" fg:w="1"/><text x="13.8571%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6071%" y="517" width="0.0805%" height="15" fill="rgb(215,41,35)" fg:x="169" fg:w="1"/><text x="13.8571%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="13.6876%" y="581" width="0.0805%" height="15" fill="rgb(220,44,45)" fg:x="170" fg:w="1"/><text x="13.9376%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="13.6876%" y="565" width="0.0805%" height="15" fill="rgb(253,197,36)" fg:x="170" fg:w="1"/><text x="13.9376%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="13.7681%" y="549" width="0.0805%" height="15" fill="rgb(245,225,54)" fg:x="171" fg:w="1"/><text x="14.0181%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.7681%" y="565" width="0.1610%" height="15" fill="rgb(239,94,37)" fg:x="171" fg:w="2"/><text x="14.0181%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.8486%" y="549" width="0.0805%" height="15" fill="rgb(242,217,10)" fg:x="172" fg:w="1"/><text x="14.0986%" y="559.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="13.8486%" y="533" width="0.0805%" height="15" fill="rgb(250,193,7)" fg:x="172" fg:w="1"/><text x="14.0986%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9291%" y="533" width="0.0805%" height="15" fill="rgb(230,104,19)" fg:x="173" fg:w="1"/><text x="14.1791%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9291%" y="517" width="0.0805%" height="15" fill="rgb(230,181,4)" fg:x="173" fg:w="1"/><text x="14.1791%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9291%" y="501" width="0.0805%" height="15" fill="rgb(216,219,49)" fg:x="173" fg:w="1"/><text x="14.1791%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9291%" y="485" width="0.0805%" height="15" fill="rgb(254,144,0)" fg:x="173" fg:w="1"/><text x="14.1791%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.9291%" y="469" width="0.0805%" height="15" fill="rgb(205,209,38)" fg:x="173" fg:w="1"/><text x="14.1791%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.9291%" y="453" width="0.0805%" height="15" fill="rgb(240,21,42)" fg:x="173" fg:w="1"/><text x="14.1791%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.9291%" y="437" width="0.0805%" height="15" fill="rgb(241,132,3)" fg:x="173" fg:w="1"/><text x="14.1791%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9291%" y="421" width="0.0805%" height="15" fill="rgb(225,14,2)" fg:x="173" fg:w="1"/><text x="14.1791%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9291%" y="405" width="0.0805%" height="15" fill="rgb(210,141,35)" fg:x="173" fg:w="1"/><text x="14.1791%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.9291%" y="389" width="0.0805%" height="15" fill="rgb(251,14,44)" fg:x="173" fg:w="1"/><text x="14.1791%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.9291%" y="373" width="0.0805%" height="15" fill="rgb(247,48,18)" fg:x="173" fg:w="1"/><text x="14.1791%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.9291%" y="357" width="0.0805%" height="15" fill="rgb(225,0,40)" fg:x="173" fg:w="1"/><text x="14.1791%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.9291%" y="341" width="0.0805%" height="15" fill="rgb(221,31,33)" fg:x="173" fg:w="1"/><text x="14.1791%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9291%" y="325" width="0.0805%" height="15" fill="rgb(237,42,40)" fg:x="173" fg:w="1"/><text x="14.1791%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.0097%" y="533" width="0.0805%" height="15" fill="rgb(233,51,29)" fg:x="174" fg:w="1"/><text x="14.2597%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0097%" y="517" width="0.0805%" height="15" fill="rgb(226,58,20)" fg:x="174" fg:w="1"/><text x="14.2597%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.0097%" y="501" width="0.0805%" height="15" fill="rgb(208,98,7)" fg:x="174" fg:w="1"/><text x="14.2597%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0097%" y="485" width="0.0805%" height="15" fill="rgb(228,143,44)" fg:x="174" fg:w="1"/><text x="14.2597%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.0097%" y="469" width="0.0805%" height="15" fill="rgb(246,55,38)" fg:x="174" fg:w="1"/><text x="14.2597%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="13.9291%" y="565" width="0.2415%" height="15" fill="rgb(247,87,16)" fg:x="173" fg:w="3"/><text x="14.1791%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.9291%" y="549" width="0.2415%" height="15" fill="rgb(234,129,42)" fg:x="173" fg:w="3"/><text x="14.1791%" y="559.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="14.0902%" y="533" width="0.0805%" height="15" fill="rgb(220,82,16)" fg:x="175" fg:w="1"/><text x="14.3402%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.29%)</title><rect x="12.9630%" y="613" width="1.2882%" height="15" fill="rgb(211,88,4)" fg:x="161" fg:w="16"/><text x="13.2130%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (7 samples, 0.56%)</title><rect x="13.6876%" y="597" width="0.5636%" height="15" fill="rgb(248,151,21)" fg:x="170" fg:w="7"/><text x="13.9376%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="13.7681%" y="581" width="0.4831%" height="15" fill="rgb(238,163,6)" fg:x="171" fg:w="6"/><text x="14.0181%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.1707%" y="565" width="0.0805%" height="15" fill="rgb(209,183,11)" fg:x="176" fg:w="1"/><text x="14.4207%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.1707%" y="549" width="0.0805%" height="15" fill="rgb(219,37,20)" fg:x="176" fg:w="1"/><text x="14.4207%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.1707%" y="533" width="0.0805%" height="15" fill="rgb(210,158,4)" fg:x="176" fg:w="1"/><text x="14.4207%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.1707%" y="517" width="0.0805%" height="15" fill="rgb(221,167,53)" fg:x="176" fg:w="1"/><text x="14.4207%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (17 samples, 1.37%)</title><rect x="12.9630%" y="629" width="1.3688%" height="15" fill="rgb(237,151,45)" fg:x="161" fg:w="17"/><text x="13.2130%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="14.2512%" y="613" width="0.0805%" height="15" fill="rgb(231,39,3)" fg:x="177" fg:w="1"/><text x="14.5012%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.2512%" y="597" width="0.0805%" height="15" fill="rgb(212,167,28)" fg:x="177" fg:w="1"/><text x="14.5012%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2512%" y="581" width="0.0805%" height="15" fill="rgb(232,178,8)" fg:x="177" fg:w="1"/><text x="14.5012%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2512%" y="565" width="0.0805%" height="15" fill="rgb(225,151,20)" fg:x="177" fg:w="1"/><text x="14.5012%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.2512%" y="549" width="0.0805%" height="15" fill="rgb(238,3,37)" fg:x="177" fg:w="1"/><text x="14.5012%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="14.3317%" y="613" width="0.0805%" height="15" fill="rgb(251,147,42)" fg:x="178" fg:w="1"/><text x="14.5817%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="14.3317%" y="597" width="0.0805%" height="15" fill="rgb(208,173,10)" fg:x="178" fg:w="1"/><text x="14.5817%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.3317%" y="581" width="0.0805%" height="15" fill="rgb(246,225,4)" fg:x="178" fg:w="1"/><text x="14.5817%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="14.3317%" y="565" width="0.0805%" height="15" fill="rgb(248,102,6)" fg:x="178" fg:w="1"/><text x="14.5817%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.3317%" y="549" width="0.0805%" height="15" fill="rgb(232,6,21)" fg:x="178" fg:w="1"/><text x="14.5817%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.3317%" y="533" width="0.0805%" height="15" fill="rgb(221,179,22)" fg:x="178" fg:w="1"/><text x="14.5817%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.3317%" y="517" width="0.0805%" height="15" fill="rgb(252,50,20)" fg:x="178" fg:w="1"/><text x="14.5817%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.3317%" y="501" width="0.0805%" height="15" fill="rgb(222,56,38)" fg:x="178" fg:w="1"/><text x="14.5817%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4122%" y="613" width="0.0805%" height="15" fill="rgb(206,193,29)" fg:x="179" fg:w="1"/><text x="14.6622%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4122%" y="597" width="0.0805%" height="15" fill="rgb(239,192,45)" fg:x="179" fg:w="1"/><text x="14.6622%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4122%" y="581" width="0.0805%" height="15" fill="rgb(254,18,36)" fg:x="179" fg:w="1"/><text x="14.6622%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.4122%" y="565" width="0.0805%" height="15" fill="rgb(221,127,11)" fg:x="179" fg:w="1"/><text x="14.6622%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.4122%" y="549" width="0.0805%" height="15" fill="rgb(234,146,35)" fg:x="179" fg:w="1"/><text x="14.6622%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.4122%" y="533" width="0.0805%" height="15" fill="rgb(254,201,37)" fg:x="179" fg:w="1"/><text x="14.6622%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.4122%" y="517" width="0.0805%" height="15" fill="rgb(211,202,23)" fg:x="179" fg:w="1"/><text x="14.6622%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.4122%" y="501" width="0.0805%" height="15" fill="rgb(237,91,2)" fg:x="179" fg:w="1"/><text x="14.6622%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.4122%" y="485" width="0.0805%" height="15" fill="rgb(226,228,36)" fg:x="179" fg:w="1"/><text x="14.6622%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.4122%" y="469" width="0.0805%" height="15" fill="rgb(213,63,50)" fg:x="179" fg:w="1"/><text x="14.6622%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.4122%" y="453" width="0.0805%" height="15" fill="rgb(235,194,19)" fg:x="179" fg:w="1"/><text x="14.6622%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.4122%" y="437" width="0.0805%" height="15" fill="rgb(207,204,18)" fg:x="179" fg:w="1"/><text x="14.6622%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4122%" y="421" width="0.0805%" height="15" fill="rgb(248,8,7)" fg:x="179" fg:w="1"/><text x="14.6622%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::base::AclRule&gt;&gt; (1 samples, 0.08%)</title><rect x="14.4928%" y="581" width="0.0805%" height="15" fill="rgb(223,145,47)" fg:x="180" fg:w="1"/><text x="14.7428%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="14.4928%" y="613" width="0.1610%" height="15" fill="rgb(228,84,11)" fg:x="180" fg:w="2"/><text x="14.7428%" y="623.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="14.4928%" y="597" width="0.1610%" height="15" fill="rgb(218,76,45)" fg:x="180" fg:w="2"/><text x="14.7428%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.5733%" y="581" width="0.0805%" height="15" fill="rgb(223,80,15)" fg:x="181" fg:w="1"/><text x="14.8233%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.5733%" y="565" width="0.0805%" height="15" fill="rgb(219,218,33)" fg:x="181" fg:w="1"/><text x="14.8233%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="14.7343%" y="565" width="0.1610%" height="15" fill="rgb(208,51,11)" fg:x="183" fg:w="2"/><text x="14.9843%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.7343%" y="549" width="0.1610%" height="15" fill="rgb(229,165,39)" fg:x="183" fg:w="2"/><text x="14.9843%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8148%" y="533" width="0.0805%" height="15" fill="rgb(241,100,24)" fg:x="184" fg:w="1"/><text x="15.0648%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9758%" y="485" width="0.0805%" height="15" fill="rgb(228,14,23)" fg:x="186" fg:w="1"/><text x="15.2258%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9758%" y="469" width="0.0805%" height="15" fill="rgb(247,116,52)" fg:x="186" fg:w="1"/><text x="15.2258%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9758%" y="453" width="0.0805%" height="15" fill="rgb(216,149,33)" fg:x="186" fg:w="1"/><text x="15.2258%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.9758%" y="437" width="0.0805%" height="15" fill="rgb(238,142,29)" fg:x="186" fg:w="1"/><text x="15.2258%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.9758%" y="517" width="0.1610%" height="15" fill="rgb(224,83,40)" fg:x="186" fg:w="2"/><text x="15.2258%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.9758%" y="501" width="0.1610%" height="15" fill="rgb(234,165,11)" fg:x="186" fg:w="2"/><text x="15.2258%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.0564%" y="485" width="0.0805%" height="15" fill="rgb(215,96,23)" fg:x="187" fg:w="1"/><text x="15.3064%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.0564%" y="469" width="0.0805%" height="15" fill="rgb(233,179,26)" fg:x="187" fg:w="1"/><text x="15.3064%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.0564%" y="453" width="0.0805%" height="15" fill="rgb(225,129,33)" fg:x="187" fg:w="1"/><text x="15.3064%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.0564%" y="437" width="0.0805%" height="15" fill="rgb(237,49,13)" fg:x="187" fg:w="1"/><text x="15.3064%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.0564%" y="421" width="0.0805%" height="15" fill="rgb(211,3,31)" fg:x="187" fg:w="1"/><text x="15.3064%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.1369%" y="501" width="0.0805%" height="15" fill="rgb(216,152,19)" fg:x="188" fg:w="1"/><text x="15.3869%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.1369%" y="485" width="0.0805%" height="15" fill="rgb(251,121,35)" fg:x="188" fg:w="1"/><text x="15.3869%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="15.1369%" y="469" width="0.0805%" height="15" fill="rgb(210,217,47)" fg:x="188" fg:w="1"/><text x="15.3869%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.1369%" y="453" width="0.0805%" height="15" fill="rgb(244,116,22)" fg:x="188" fg:w="1"/><text x="15.3869%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.1369%" y="437" width="0.0805%" height="15" fill="rgb(228,17,21)" fg:x="188" fg:w="1"/><text x="15.3869%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2174%" y="421" width="0.0805%" height="15" fill="rgb(240,149,34)" fg:x="189" fg:w="1"/><text x="15.4674%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="15.1369%" y="517" width="0.2415%" height="15" fill="rgb(208,125,47)" fg:x="188" fg:w="3"/><text x="15.3869%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.2174%" y="501" width="0.1610%" height="15" fill="rgb(249,186,39)" fg:x="189" fg:w="2"/><text x="15.4674%" y="511.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="15.2174%" y="485" width="0.1610%" height="15" fill="rgb(240,220,33)" fg:x="189" fg:w="2"/><text x="15.4674%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="15.2174%" y="469" width="0.1610%" height="15" fill="rgb(243,110,23)" fg:x="189" fg:w="2"/><text x="15.4674%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.2174%" y="453" width="0.1610%" height="15" fill="rgb(219,163,46)" fg:x="189" fg:w="2"/><text x="15.4674%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.2174%" y="437" width="0.1610%" height="15" fill="rgb(216,126,30)" fg:x="189" fg:w="2"/><text x="15.4674%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="15.2979%" y="421" width="0.0805%" height="15" fill="rgb(208,139,11)" fg:x="190" fg:w="1"/><text x="15.5479%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="15.3784%" y="453" width="0.0805%" height="15" fill="rgb(213,118,36)" fg:x="191" fg:w="1"/><text x="15.6284%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.3784%" y="437" width="0.0805%" height="15" fill="rgb(226,43,17)" fg:x="191" fg:w="1"/><text x="15.6284%" y="447.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="15.3784%" y="469" width="0.1610%" height="15" fill="rgb(254,217,4)" fg:x="191" fg:w="2"/><text x="15.6284%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.4589%" y="453" width="0.0805%" height="15" fill="rgb(210,134,47)" fg:x="192" fg:w="1"/><text x="15.7089%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.4589%" y="437" width="0.0805%" height="15" fill="rgb(237,24,49)" fg:x="192" fg:w="1"/><text x="15.7089%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.4589%" y="421" width="0.0805%" height="15" fill="rgb(251,39,46)" fg:x="192" fg:w="1"/><text x="15.7089%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.4589%" y="405" width="0.0805%" height="15" fill="rgb(251,220,3)" fg:x="192" fg:w="1"/><text x="15.7089%" y="415.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="15.4589%" y="389" width="0.0805%" height="15" fill="rgb(228,105,12)" fg:x="192" fg:w="1"/><text x="15.7089%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="15.4589%" y="373" width="0.0805%" height="15" fill="rgb(215,196,1)" fg:x="192" fg:w="1"/><text x="15.7089%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="15.3784%" y="501" width="0.2415%" height="15" fill="rgb(214,33,39)" fg:x="191" fg:w="3"/><text x="15.6284%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="15.3784%" y="485" width="0.2415%" height="15" fill="rgb(220,19,52)" fg:x="191" fg:w="3"/><text x="15.6284%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.5395%" y="469" width="0.0805%" height="15" fill="rgb(221,78,38)" fg:x="193" fg:w="1"/><text x="15.7895%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.5395%" y="453" width="0.0805%" height="15" fill="rgb(253,30,16)" fg:x="193" fg:w="1"/><text x="15.7895%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5395%" y="437" width="0.0805%" height="15" fill="rgb(242,65,0)" fg:x="193" fg:w="1"/><text x="15.7895%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.5395%" y="421" width="0.0805%" height="15" fill="rgb(235,201,12)" fg:x="193" fg:w="1"/><text x="15.7895%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5395%" y="405" width="0.0805%" height="15" fill="rgb(233,161,9)" fg:x="193" fg:w="1"/><text x="15.7895%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.5395%" y="389" width="0.0805%" height="15" fill="rgb(241,207,41)" fg:x="193" fg:w="1"/><text x="15.7895%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5395%" y="373" width="0.0805%" height="15" fill="rgb(212,69,46)" fg:x="193" fg:w="1"/><text x="15.7895%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="15.3784%" y="517" width="0.3221%" height="15" fill="rgb(239,69,45)" fg:x="191" fg:w="4"/><text x="15.6284%" y="527.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="15.6200%" y="501" width="0.0805%" height="15" fill="rgb(242,117,48)" fg:x="194" fg:w="1"/><text x="15.8700%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.6200%" y="485" width="0.0805%" height="15" fill="rgb(228,41,36)" fg:x="194" fg:w="1"/><text x="15.8700%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="15.7005%" y="485" width="0.0805%" height="15" fill="rgb(212,3,32)" fg:x="195" fg:w="1"/><text x="15.9505%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="15.7005%" y="501" width="0.1610%" height="15" fill="rgb(233,41,49)" fg:x="195" fg:w="2"/><text x="15.9505%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.7810%" y="485" width="0.0805%" height="15" fill="rgb(252,170,49)" fg:x="196" fg:w="1"/><text x="16.0310%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="15.7810%" y="469" width="0.0805%" height="15" fill="rgb(229,53,26)" fg:x="196" fg:w="1"/><text x="16.0310%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8615%" y="469" width="0.0805%" height="15" fill="rgb(217,157,12)" fg:x="197" fg:w="1"/><text x="16.1115%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8615%" y="453" width="0.0805%" height="15" fill="rgb(227,17,9)" fg:x="197" fg:w="1"/><text x="16.1115%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8615%" y="437" width="0.0805%" height="15" fill="rgb(218,84,12)" fg:x="197" fg:w="1"/><text x="16.1115%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8615%" y="421" width="0.0805%" height="15" fill="rgb(212,79,24)" fg:x="197" fg:w="1"/><text x="16.1115%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="15.7005%" y="517" width="0.3221%" height="15" fill="rgb(217,222,37)" fg:x="195" fg:w="4"/><text x="15.9505%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="15.8615%" y="501" width="0.1610%" height="15" fill="rgb(246,208,8)" fg:x="197" fg:w="2"/><text x="16.1115%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.8615%" y="485" width="0.1610%" height="15" fill="rgb(244,133,10)" fg:x="197" fg:w="2"/><text x="16.1115%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.9420%" y="469" width="0.0805%" height="15" fill="rgb(209,219,41)" fg:x="198" fg:w="1"/><text x="16.1920%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9420%" y="453" width="0.0805%" height="15" fill="rgb(253,175,45)" fg:x="198" fg:w="1"/><text x="16.1920%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="16.0225%" y="485" width="0.0805%" height="15" fill="rgb(235,100,37)" fg:x="199" fg:w="1"/><text x="16.2725%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.0225%" y="469" width="0.0805%" height="15" fill="rgb(225,87,19)" fg:x="199" fg:w="1"/><text x="16.2725%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.0225%" y="453" width="0.0805%" height="15" fill="rgb(217,152,17)" fg:x="199" fg:w="1"/><text x="16.2725%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.0225%" y="437" width="0.0805%" height="15" fill="rgb(235,72,13)" fg:x="199" fg:w="1"/><text x="16.2725%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.0225%" y="421" width="0.0805%" height="15" fill="rgb(233,140,18)" fg:x="199" fg:w="1"/><text x="16.2725%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.0225%" y="405" width="0.0805%" height="15" fill="rgb(207,212,28)" fg:x="199" fg:w="1"/><text x="16.2725%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.0225%" y="389" width="0.0805%" height="15" fill="rgb(220,130,25)" fg:x="199" fg:w="1"/><text x="16.2725%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.0225%" y="373" width="0.0805%" height="15" fill="rgb(205,55,34)" fg:x="199" fg:w="1"/><text x="16.2725%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.29%)</title><rect x="14.8953%" y="549" width="1.2882%" height="15" fill="rgb(237,54,35)" fg:x="185" fg:w="16"/><text x="15.1453%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.21%)</title><rect x="14.9758%" y="533" width="1.2077%" height="15" fill="rgb(208,67,23)" fg:x="186" fg:w="15"/><text x="15.2258%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="16.0225%" y="517" width="0.1610%" height="15" fill="rgb(206,207,50)" fg:x="199" fg:w="2"/><text x="16.2725%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="16.0225%" y="501" width="0.1610%" height="15" fill="rgb(213,211,42)" fg:x="199" fg:w="2"/><text x="16.2725%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="16.1031%" y="485" width="0.0805%" height="15" fill="rgb(252,197,50)" fg:x="200" fg:w="1"/><text x="16.3531%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="16.1031%" y="469" width="0.0805%" height="15" fill="rgb(251,211,41)" fg:x="200" fg:w="1"/><text x="16.3531%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.1031%" y="453" width="0.0805%" height="15" fill="rgb(229,211,5)" fg:x="200" fg:w="1"/><text x="16.3531%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.1031%" y="437" width="0.0805%" height="15" fill="rgb(239,36,31)" fg:x="200" fg:w="1"/><text x="16.3531%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.1031%" y="421" width="0.0805%" height="15" fill="rgb(248,67,31)" fg:x="200" fg:w="1"/><text x="16.3531%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="16.1031%" y="405" width="0.0805%" height="15" fill="rgb(249,55,44)" fg:x="200" fg:w="1"/><text x="16.3531%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="16.1031%" y="389" width="0.0805%" height="15" fill="rgb(216,82,12)" fg:x="200" fg:w="1"/><text x="16.3531%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="16.1031%" y="373" width="0.0805%" height="15" fill="rgb(242,174,1)" fg:x="200" fg:w="1"/><text x="16.3531%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="16.1031%" y="357" width="0.0805%" height="15" fill="rgb(208,120,29)" fg:x="200" fg:w="1"/><text x="16.3531%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="16.1031%" y="341" width="0.0805%" height="15" fill="rgb(221,105,43)" fg:x="200" fg:w="1"/><text x="16.3531%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="16.1031%" y="325" width="0.0805%" height="15" fill="rgb(234,124,22)" fg:x="200" fg:w="1"/><text x="16.3531%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.1031%" y="309" width="0.0805%" height="15" fill="rgb(212,23,30)" fg:x="200" fg:w="1"/><text x="16.3531%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="16.1031%" y="293" width="0.0805%" height="15" fill="rgb(219,122,53)" fg:x="200" fg:w="1"/><text x="16.3531%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.1031%" y="277" width="0.0805%" height="15" fill="rgb(248,84,24)" fg:x="200" fg:w="1"/><text x="16.3531%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="16.1031%" y="261" width="0.0805%" height="15" fill="rgb(245,115,18)" fg:x="200" fg:w="1"/><text x="16.3531%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="16.1031%" y="245" width="0.0805%" height="15" fill="rgb(227,176,51)" fg:x="200" fg:w="1"/><text x="16.3531%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="16.1031%" y="229" width="0.0805%" height="15" fill="rgb(229,63,42)" fg:x="200" fg:w="1"/><text x="16.3531%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="16.1836%" y="533" width="0.0805%" height="15" fill="rgb(247,202,24)" fg:x="201" fg:w="1"/><text x="16.4336%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.1836%" y="517" width="0.0805%" height="15" fill="rgb(244,173,20)" fg:x="201" fg:w="1"/><text x="16.4336%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.2641%" y="501" width="0.0805%" height="15" fill="rgb(242,81,47)" fg:x="202" fg:w="1"/><text x="16.5141%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.2641%" y="485" width="0.0805%" height="15" fill="rgb(231,185,54)" fg:x="202" fg:w="1"/><text x="16.5141%" y="495.50"></text></g><g><title>plugins_core::build::Build::leads_to (19 samples, 1.53%)</title><rect x="14.8953%" y="565" width="1.5298%" height="15" fill="rgb(243,55,32)" fg:x="185" fg:w="19"/><text x="15.1453%" y="575.50"></text></g><g><title>plugins_core::tools::leads_to (3 samples, 0.24%)</title><rect x="16.1836%" y="549" width="0.2415%" height="15" fill="rgb(208,167,19)" fg:x="201" fg:w="3"/><text x="16.4336%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="16.2641%" y="533" width="0.1610%" height="15" fill="rgb(231,72,35)" fg:x="202" fg:w="2"/><text x="16.5141%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="16.2641%" y="517" width="0.1610%" height="15" fill="rgb(250,173,51)" fg:x="202" fg:w="2"/><text x="16.5141%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="16.3446%" y="501" width="0.0805%" height="15" fill="rgb(209,5,22)" fg:x="203" fg:w="1"/><text x="16.5946%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.3446%" y="485" width="0.0805%" height="15" fill="rgb(250,174,19)" fg:x="203" fg:w="1"/><text x="16.5946%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.3446%" y="469" width="0.0805%" height="15" fill="rgb(217,3,49)" fg:x="203" fg:w="1"/><text x="16.5946%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.3446%" y="453" width="0.0805%" height="15" fill="rgb(218,225,5)" fg:x="203" fg:w="1"/><text x="16.5946%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.3446%" y="437" width="0.0805%" height="15" fill="rgb(236,89,11)" fg:x="203" fg:w="1"/><text x="16.5946%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.3446%" y="421" width="0.0805%" height="15" fill="rgb(206,33,28)" fg:x="203" fg:w="1"/><text x="16.5946%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.3446%" y="405" width="0.0805%" height="15" fill="rgb(241,56,42)" fg:x="203" fg:w="1"/><text x="16.5946%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.3446%" y="389" width="0.0805%" height="15" fill="rgb(222,44,11)" fg:x="203" fg:w="1"/><text x="16.5946%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.3446%" y="373" width="0.0805%" height="15" fill="rgb(234,111,20)" fg:x="203" fg:w="1"/><text x="16.5946%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.3446%" y="357" width="0.0805%" height="15" fill="rgb(237,77,6)" fg:x="203" fg:w="1"/><text x="16.5946%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (24 samples, 1.93%)</title><rect x="14.6538%" y="613" width="1.9324%" height="15" fill="rgb(235,111,23)" fg:x="182" fg:w="24"/><text x="14.9038%" y="623.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 1.93%)</title><rect x="14.6538%" y="597" width="1.9324%" height="15" fill="rgb(251,135,29)" fg:x="182" fg:w="24"/><text x="14.9038%" y="607.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (24 samples, 1.93%)</title><rect x="14.6538%" y="581" width="1.9324%" height="15" fill="rgb(217,57,1)" fg:x="182" fg:w="24"/><text x="14.9038%" y="591.50">p..</text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="16.4251%" y="565" width="0.1610%" height="15" fill="rgb(249,119,31)" fg:x="204" fg:w="2"/><text x="16.6751%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="16.5056%" y="549" width="0.0805%" height="15" fill="rgb(233,164,33)" fg:x="205" fg:w="1"/><text x="16.7556%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="16.5056%" y="533" width="0.0805%" height="15" fill="rgb(250,217,43)" fg:x="205" fg:w="1"/><text x="16.7556%" y="543.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="16.5056%" y="517" width="0.0805%" height="15" fill="rgb(232,154,50)" fg:x="205" fg:w="1"/><text x="16.7556%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="16.5862%" y="597" width="0.1610%" height="15" fill="rgb(227,190,8)" fg:x="206" fg:w="2"/><text x="16.8362%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.6667%" y="581" width="0.0805%" height="15" fill="rgb(209,217,32)" fg:x="207" fg:w="1"/><text x="16.9167%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="16.7472%" y="549" width="0.0805%" height="15" fill="rgb(243,203,50)" fg:x="208" fg:w="1"/><text x="16.9972%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="16.8277%" y="549" width="0.2415%" height="15" fill="rgb(232,152,27)" fg:x="209" fg:w="3"/><text x="17.0777%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="16.9887%" y="533" width="0.0805%" height="15" fill="rgb(240,34,29)" fg:x="211" fg:w="1"/><text x="17.2387%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="16.9887%" y="517" width="0.0805%" height="15" fill="rgb(215,185,52)" fg:x="211" fg:w="1"/><text x="17.2387%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.9887%" y="501" width="0.0805%" height="15" fill="rgb(240,89,49)" fg:x="211" fg:w="1"/><text x="17.2387%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.9887%" y="485" width="0.0805%" height="15" fill="rgb(225,12,52)" fg:x="211" fg:w="1"/><text x="17.2387%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.9887%" y="469" width="0.0805%" height="15" fill="rgb(239,128,45)" fg:x="211" fg:w="1"/><text x="17.2387%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.9887%" y="453" width="0.0805%" height="15" fill="rgb(211,78,47)" fg:x="211" fg:w="1"/><text x="17.2387%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.9887%" y="437" width="0.0805%" height="15" fill="rgb(232,31,21)" fg:x="211" fg:w="1"/><text x="17.2387%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="16.9887%" y="421" width="0.0805%" height="15" fill="rgb(222,168,14)" fg:x="211" fg:w="1"/><text x="17.2387%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="16.9887%" y="405" width="0.0805%" height="15" fill="rgb(209,128,24)" fg:x="211" fg:w="1"/><text x="17.2387%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="17.0692%" y="533" width="0.0805%" height="15" fill="rgb(249,35,13)" fg:x="212" fg:w="1"/><text x="17.3192%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="17.2303%" y="485" width="0.3221%" height="15" fill="rgb(218,7,2)" fg:x="214" fg:w="4"/><text x="17.4803%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="17.2303%" y="469" width="0.3221%" height="15" fill="rgb(238,107,27)" fg:x="214" fg:w="4"/><text x="17.4803%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.4718%" y="453" width="0.0805%" height="15" fill="rgb(217,88,38)" fg:x="217" fg:w="1"/><text x="17.7218%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.4718%" y="437" width="0.0805%" height="15" fill="rgb(230,207,0)" fg:x="217" fg:w="1"/><text x="17.7218%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="17.2303%" y="501" width="0.4026%" height="15" fill="rgb(249,64,54)" fg:x="214" fg:w="5"/><text x="17.4803%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.5523%" y="485" width="0.0805%" height="15" fill="rgb(231,7,11)" fg:x="218" fg:w="1"/><text x="17.8023%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.5523%" y="469" width="0.0805%" height="15" fill="rgb(205,149,21)" fg:x="218" fg:w="1"/><text x="17.8023%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.5523%" y="453" width="0.0805%" height="15" fill="rgb(215,126,34)" fg:x="218" fg:w="1"/><text x="17.8023%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="17.6329%" y="485" width="0.4026%" height="15" fill="rgb(241,132,45)" fg:x="219" fg:w="5"/><text x="17.8829%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="17.7939%" y="469" width="0.2415%" height="15" fill="rgb(252,69,32)" fg:x="221" fg:w="3"/><text x="18.0439%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="17.8744%" y="453" width="0.1610%" height="15" fill="rgb(232,204,19)" fg:x="222" fg:w="2"/><text x="18.1244%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="17.8744%" y="437" width="0.1610%" height="15" fill="rgb(249,15,47)" fg:x="222" fg:w="2"/><text x="18.1244%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="18.1159%" y="437" width="0.1610%" height="15" fill="rgb(209,227,23)" fg:x="225" fg:w="2"/><text x="18.3659%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.1965%" y="421" width="0.0805%" height="15" fill="rgb(248,92,24)" fg:x="226" fg:w="1"/><text x="18.4465%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="18.1159%" y="469" width="0.3221%" height="15" fill="rgb(247,59,2)" fg:x="225" fg:w="4"/><text x="18.3659%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="18.1159%" y="453" width="0.3221%" height="15" fill="rgb(221,30,5)" fg:x="225" fg:w="4"/><text x="18.3659%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="18.2770%" y="437" width="0.1610%" height="15" fill="rgb(208,108,53)" fg:x="227" fg:w="2"/><text x="18.5270%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="18.2770%" y="421" width="0.1610%" height="15" fill="rgb(211,183,26)" fg:x="227" fg:w="2"/><text x="18.5270%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.2770%" y="405" width="0.1610%" height="15" fill="rgb(232,132,4)" fg:x="227" fg:w="2"/><text x="18.5270%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="18.2770%" y="389" width="0.1610%" height="15" fill="rgb(253,128,37)" fg:x="227" fg:w="2"/><text x="18.5270%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="18.4380%" y="469" width="0.1610%" height="15" fill="rgb(221,58,24)" fg:x="229" fg:w="2"/><text x="18.6880%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.4380%" y="453" width="0.1610%" height="15" fill="rgb(230,54,45)" fg:x="229" fg:w="2"/><text x="18.6880%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.5185%" y="437" width="0.0805%" height="15" fill="rgb(254,21,18)" fg:x="230" fg:w="1"/><text x="18.7685%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.5990%" y="437" width="0.0805%" height="15" fill="rgb(221,108,0)" fg:x="231" fg:w="1"/><text x="18.8490%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.5990%" y="421" width="0.0805%" height="15" fill="rgb(206,95,1)" fg:x="231" fg:w="1"/><text x="18.8490%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.5990%" y="405" width="0.0805%" height="15" fill="rgb(237,52,5)" fg:x="231" fg:w="1"/><text x="18.8490%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="18.5990%" y="453" width="0.1610%" height="15" fill="rgb(218,150,34)" fg:x="231" fg:w="2"/><text x="18.8490%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="18.6795%" y="437" width="0.0805%" height="15" fill="rgb(235,194,28)" fg:x="232" fg:w="1"/><text x="18.9295%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.6795%" y="421" width="0.0805%" height="15" fill="rgb(245,92,18)" fg:x="232" fg:w="1"/><text x="18.9295%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="18.0354%" y="485" width="0.8052%" height="15" fill="rgb(253,203,53)" fg:x="224" fg:w="10"/><text x="18.2854%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="18.5990%" y="469" width="0.2415%" height="15" fill="rgb(249,185,47)" fg:x="231" fg:w="3"/><text x="18.8490%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.7601%" y="453" width="0.0805%" height="15" fill="rgb(252,194,52)" fg:x="233" fg:w="1"/><text x="19.0101%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.7601%" y="437" width="0.0805%" height="15" fill="rgb(210,53,36)" fg:x="233" fg:w="1"/><text x="19.0101%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.7601%" y="421" width="0.0805%" height="15" fill="rgb(237,37,25)" fg:x="233" fg:w="1"/><text x="19.0101%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (21 samples, 1.69%)</title><rect x="17.2303%" y="517" width="1.6908%" height="15" fill="rgb(242,116,27)" fg:x="214" fg:w="21"/><text x="17.4803%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="17.6329%" y="501" width="1.2882%" height="15" fill="rgb(213,185,26)" fg:x="219" fg:w="16"/><text x="17.8829%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.8406%" y="485" width="0.0805%" height="15" fill="rgb(225,204,8)" fg:x="234" fg:w="1"/><text x="19.0906%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.8406%" y="469" width="0.0805%" height="15" fill="rgb(254,111,37)" fg:x="234" fg:w="1"/><text x="19.0906%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.8406%" y="453" width="0.0805%" height="15" fill="rgb(242,35,9)" fg:x="234" fg:w="1"/><text x="19.0906%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="19.0821%" y="485" width="0.1610%" height="15" fill="rgb(232,138,49)" fg:x="237" fg:w="2"/><text x="19.3321%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="19.4042%" y="469" width="0.1610%" height="15" fill="rgb(247,56,4)" fg:x="241" fg:w="2"/><text x="19.6542%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.5652%" y="469" width="0.0805%" height="15" fill="rgb(226,179,17)" fg:x="243" fg:w="1"/><text x="19.8152%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="19.6457%" y="453" width="0.1610%" height="15" fill="rgb(216,163,45)" fg:x="244" fg:w="2"/><text x="19.8957%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.7262%" y="437" width="0.0805%" height="15" fill="rgb(211,157,3)" fg:x="245" fg:w="1"/><text x="19.9762%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="19.8068%" y="437" width="0.2415%" height="15" fill="rgb(234,44,20)" fg:x="246" fg:w="3"/><text x="20.0568%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9678%" y="421" width="0.0805%" height="15" fill="rgb(254,138,23)" fg:x="248" fg:w="1"/><text x="20.2178%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="18.9211%" y="517" width="1.2077%" height="15" fill="rgb(206,119,39)" fg:x="235" fg:w="15"/><text x="19.1711%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.21%)</title><rect x="18.9211%" y="501" width="1.2077%" height="15" fill="rgb(231,105,52)" fg:x="235" fg:w="15"/><text x="19.1711%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="19.2432%" y="485" width="0.8857%" height="15" fill="rgb(250,20,5)" fg:x="239" fg:w="11"/><text x="19.4932%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="19.6457%" y="469" width="0.4831%" height="15" fill="rgb(215,198,30)" fg:x="244" fg:w="6"/><text x="19.8957%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="19.8068%" y="453" width="0.3221%" height="15" fill="rgb(246,142,8)" fg:x="246" fg:w="4"/><text x="20.0568%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.0483%" y="437" width="0.0805%" height="15" fill="rgb(243,26,38)" fg:x="249" fg:w="1"/><text x="20.2983%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.0483%" y="421" width="0.0805%" height="15" fill="rgb(205,133,28)" fg:x="249" fg:w="1"/><text x="20.2983%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="20.2093%" y="469" width="0.2415%" height="15" fill="rgb(212,34,0)" fg:x="251" fg:w="3"/><text x="20.4593%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.3704%" y="453" width="0.0805%" height="15" fill="rgb(251,226,22)" fg:x="253" fg:w="1"/><text x="20.6204%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="20.4509%" y="469" width="0.0805%" height="15" fill="rgb(252,119,9)" fg:x="254" fg:w="1"/><text x="20.7009%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.4509%" y="453" width="0.0805%" height="15" fill="rgb(213,150,50)" fg:x="254" fg:w="1"/><text x="20.7009%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="20.5314%" y="469" width="0.1610%" height="15" fill="rgb(212,24,39)" fg:x="255" fg:w="2"/><text x="20.7814%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="20.6119%" y="453" width="0.0805%" height="15" fill="rgb(213,46,39)" fg:x="256" fg:w="1"/><text x="20.8619%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="20.6924%" y="469" width="0.1610%" height="15" fill="rgb(239,106,12)" fg:x="257" fg:w="2"/><text x="20.9424%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.6924%" y="453" width="0.1610%" height="15" fill="rgb(249,229,21)" fg:x="257" fg:w="2"/><text x="20.9424%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="20.6924%" y="437" width="0.1610%" height="15" fill="rgb(212,158,3)" fg:x="257" fg:w="2"/><text x="20.9424%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.9340%" y="421" width="0.0805%" height="15" fill="rgb(253,26,48)" fg:x="260" fg:w="1"/><text x="21.1840%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.0145%" y="341" width="0.0805%" height="15" fill="rgb(238,178,20)" fg:x="261" fg:w="1"/><text x="21.2645%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.0145%" y="373" width="0.1610%" height="15" fill="rgb(208,86,15)" fg:x="261" fg:w="2"/><text x="21.2645%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.0145%" y="357" width="0.1610%" height="15" fill="rgb(239,42,53)" fg:x="261" fg:w="2"/><text x="21.2645%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.0950%" y="341" width="0.0805%" height="15" fill="rgb(245,226,8)" fg:x="262" fg:w="1"/><text x="21.3450%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="21.0145%" y="421" width="0.2415%" height="15" fill="rgb(216,176,32)" fg:x="261" fg:w="3"/><text x="21.2645%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="21.0145%" y="405" width="0.2415%" height="15" fill="rgb(231,186,21)" fg:x="261" fg:w="3"/><text x="21.2645%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="21.0145%" y="389" width="0.2415%" height="15" fill="rgb(205,95,49)" fg:x="261" fg:w="3"/><text x="21.2645%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="21.1755%" y="373" width="0.0805%" height="15" fill="rgb(217,145,8)" fg:x="263" fg:w="1"/><text x="21.4255%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.1755%" y="357" width="0.0805%" height="15" fill="rgb(239,144,48)" fg:x="263" fg:w="1"/><text x="21.4255%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.5781%" y="389" width="0.1610%" height="15" fill="rgb(214,189,23)" fg:x="268" fg:w="2"/><text x="21.8281%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.5781%" y="373" width="0.1610%" height="15" fill="rgb(229,157,17)" fg:x="268" fg:w="2"/><text x="21.8281%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.5781%" y="357" width="0.1610%" height="15" fill="rgb(230,5,48)" fg:x="268" fg:w="2"/><text x="21.8281%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.8196%" y="373" width="0.0805%" height="15" fill="rgb(224,156,48)" fg:x="271" fg:w="1"/><text x="22.0696%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="21.5781%" y="405" width="0.4831%" height="15" fill="rgb(223,14,29)" fg:x="268" fg:w="6"/><text x="21.8281%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="21.7391%" y="389" width="0.3221%" height="15" fill="rgb(229,96,36)" fg:x="270" fg:w="4"/><text x="21.9891%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.9002%" y="373" width="0.1610%" height="15" fill="rgb(231,102,53)" fg:x="272" fg:w="2"/><text x="22.1502%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.29%)</title><rect x="20.9340%" y="437" width="1.2882%" height="15" fill="rgb(210,77,38)" fg:x="260" fg:w="16"/><text x="21.1840%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.97%)</title><rect x="21.2560%" y="421" width="0.9662%" height="15" fill="rgb(235,131,6)" fg:x="264" fg:w="12"/><text x="21.5060%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="22.0612%" y="405" width="0.1610%" height="15" fill="rgb(252,55,38)" fg:x="274" fg:w="2"/><text x="22.3112%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.37%)</title><rect x="20.9340%" y="453" width="1.3688%" height="15" fill="rgb(246,38,14)" fg:x="260" fg:w="17"/><text x="21.1840%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="22.2222%" y="437" width="0.0805%" height="15" fill="rgb(242,27,5)" fg:x="276" fg:w="1"/><text x="22.4722%" y="447.50"></text></g><g><title>kernel::model::any_entity_changes (28 samples, 2.25%)</title><rect x="20.1288%" y="517" width="2.2544%" height="15" fill="rgb(228,65,35)" fg:x="250" fg:w="28"/><text x="20.3788%" y="527.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (28 samples, 2.25%)</title><rect x="20.1288%" y="501" width="2.2544%" height="15" fill="rgb(245,93,11)" fg:x="250" fg:w="28"/><text x="20.3788%" y="511.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 2.25%)</title><rect x="20.1288%" y="485" width="2.2544%" height="15" fill="rgb(213,1,31)" fg:x="250" fg:w="28"/><text x="20.3788%" y="495.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.53%)</title><rect x="20.8535%" y="469" width="1.5298%" height="15" fill="rgb(237,205,14)" fg:x="259" fg:w="19"/><text x="21.1035%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3027%" y="453" width="0.0805%" height="15" fill="rgb(232,118,45)" fg:x="277" fg:w="1"/><text x="22.5527%" y="463.50"></text></g><g><title>engine::session::Session::flush (73 samples, 5.88%)</title><rect x="16.5862%" y="613" width="5.8776%" height="15" fill="rgb(218,5,6)" fg:x="206" fg:w="73"/><text x="16.8362%" y="623.50">engine:..</text></g><g><title>engine::session::Session::save_changes (71 samples, 5.72%)</title><rect x="16.7472%" y="597" width="5.7166%" height="15" fill="rgb(251,87,51)" fg:x="208" fg:w="71"/><text x="16.9972%" y="607.50">engine:..</text></g><g><title>engine::session::state::State::close (71 samples, 5.72%)</title><rect x="16.7472%" y="581" width="5.7166%" height="15" fill="rgb(207,225,20)" fg:x="208" fg:w="71"/><text x="16.9972%" y="591.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (71 samples, 5.72%)</title><rect x="16.7472%" y="565" width="5.7166%" height="15" fill="rgb(222,78,54)" fg:x="208" fg:w="71"/><text x="16.9972%" y="575.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (67 samples, 5.39%)</title><rect x="17.0692%" y="549" width="5.3945%" height="15" fill="rgb(232,85,16)" fg:x="212" fg:w="67"/><text x="17.3192%" y="559.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (66 samples, 5.31%)</title><rect x="17.1498%" y="533" width="5.3140%" height="15" fill="rgb(244,25,33)" fg:x="213" fg:w="66"/><text x="17.3998%" y="543.50">engine:..</text></g><g><title>kernel::perms::find_acls (1 samples, 0.08%)</title><rect x="22.3833%" y="517" width="0.0805%" height="15" fill="rgb(233,24,36)" fg:x="278" fg:w="1"/><text x="22.6333%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.4638%" y="597" width="0.0805%" height="15" fill="rgb(253,49,54)" fg:x="279" fg:w="1"/><text x="22.7138%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="22.5443%" y="597" width="0.0805%" height="15" fill="rgb(245,12,22)" fg:x="280" fg:w="1"/><text x="22.7943%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5443%" y="581" width="0.0805%" height="15" fill="rgb(253,141,28)" fg:x="280" fg:w="1"/><text x="22.7943%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5443%" y="565" width="0.0805%" height="15" fill="rgb(225,207,27)" fg:x="280" fg:w="1"/><text x="22.7943%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.5443%" y="549" width="0.0805%" height="15" fill="rgb(220,84,2)" fg:x="280" fg:w="1"/><text x="22.7943%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.5443%" y="533" width="0.0805%" height="15" fill="rgb(224,37,37)" fg:x="280" fg:w="1"/><text x="22.7943%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.5443%" y="517" width="0.0805%" height="15" fill="rgb(220,143,18)" fg:x="280" fg:w="1"/><text x="22.7943%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.5443%" y="501" width="0.0805%" height="15" fill="rgb(210,88,33)" fg:x="280" fg:w="1"/><text x="22.7943%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.5443%" y="485" width="0.0805%" height="15" fill="rgb(219,87,51)" fg:x="280" fg:w="1"/><text x="22.7943%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.5443%" y="469" width="0.0805%" height="15" fill="rgb(211,7,35)" fg:x="280" fg:w="1"/><text x="22.7943%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.5443%" y="453" width="0.0805%" height="15" fill="rgb(232,77,2)" fg:x="280" fg:w="1"/><text x="22.7943%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.5443%" y="437" width="0.0805%" height="15" fill="rgb(249,94,25)" fg:x="280" fg:w="1"/><text x="22.7943%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.5443%" y="421" width="0.0805%" height="15" fill="rgb(215,112,2)" fg:x="280" fg:w="1"/><text x="22.7943%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5443%" y="405" width="0.0805%" height="15" fill="rgb(226,115,48)" fg:x="280" fg:w="1"/><text x="22.7943%" y="415.50"></text></g><g><title>&lt;kernel::model::entry::OpenedScopeMut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="22.6248%" y="581" width="0.0805%" height="15" fill="rgb(249,196,10)" fg:x="281" fg:w="1"/><text x="22.8748%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="22.7053%" y="581" width="0.0805%" height="15" fill="rgb(237,109,14)" fg:x="282" fg:w="1"/><text x="22.9553%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="22.7053%" y="565" width="0.0805%" height="15" fill="rgb(217,103,53)" fg:x="282" fg:w="1"/><text x="22.9553%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.7053%" y="549" width="0.0805%" height="15" fill="rgb(244,137,9)" fg:x="282" fg:w="1"/><text x="22.9553%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.7858%" y="549" width="0.0805%" height="15" fill="rgb(227,201,3)" fg:x="283" fg:w="1"/><text x="23.0358%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.7858%" y="533" width="0.0805%" height="15" fill="rgb(243,94,6)" fg:x="283" fg:w="1"/><text x="23.0358%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.7858%" y="517" width="0.0805%" height="15" fill="rgb(235,118,5)" fg:x="283" fg:w="1"/><text x="23.0358%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.7858%" y="501" width="0.0805%" height="15" fill="rgb(247,10,30)" fg:x="283" fg:w="1"/><text x="23.0358%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.7858%" y="485" width="0.0805%" height="15" fill="rgb(205,26,28)" fg:x="283" fg:w="1"/><text x="23.0358%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.7858%" y="469" width="0.0805%" height="15" fill="rgb(206,99,35)" fg:x="283" fg:w="1"/><text x="23.0358%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.7858%" y="453" width="0.0805%" height="15" fill="rgb(238,130,40)" fg:x="283" fg:w="1"/><text x="23.0358%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.7858%" y="437" width="0.0805%" height="15" fill="rgb(224,126,31)" fg:x="283" fg:w="1"/><text x="23.0358%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.8663%" y="533" width="0.0805%" height="15" fill="rgb(254,105,17)" fg:x="284" fg:w="1"/><text x="23.1163%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="22.8663%" y="549" width="0.2415%" height="15" fill="rgb(216,87,36)" fg:x="284" fg:w="3"/><text x="23.1163%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.9469%" y="533" width="0.1610%" height="15" fill="rgb(240,21,12)" fg:x="285" fg:w="2"/><text x="23.1969%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.0274%" y="517" width="0.0805%" height="15" fill="rgb(245,192,34)" fg:x="286" fg:w="1"/><text x="23.2774%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0274%" y="501" width="0.0805%" height="15" fill="rgb(226,100,49)" fg:x="286" fg:w="1"/><text x="23.2774%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.0274%" y="485" width="0.0805%" height="15" fill="rgb(245,188,27)" fg:x="286" fg:w="1"/><text x="23.2774%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0274%" y="469" width="0.0805%" height="15" fill="rgb(212,170,8)" fg:x="286" fg:w="1"/><text x="23.2774%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.0274%" y="453" width="0.0805%" height="15" fill="rgb(217,113,29)" fg:x="286" fg:w="1"/><text x="23.2774%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0274%" y="437" width="0.0805%" height="15" fill="rgb(237,30,3)" fg:x="286" fg:w="1"/><text x="23.2774%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="23.0274%" y="421" width="0.0805%" height="15" fill="rgb(227,19,28)" fg:x="286" fg:w="1"/><text x="23.2774%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="22.7858%" y="581" width="0.4831%" height="15" fill="rgb(239,172,45)" fg:x="283" fg:w="6"/><text x="23.0358%" y="591.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="22.7858%" y="565" width="0.4831%" height="15" fill="rgb(254,55,39)" fg:x="283" fg:w="6"/><text x="23.0358%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.1079%" y="549" width="0.1610%" height="15" fill="rgb(249,208,12)" fg:x="287" fg:w="2"/><text x="23.3579%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.1079%" y="533" width="0.1610%" height="15" fill="rgb(240,52,13)" fg:x="287" fg:w="2"/><text x="23.3579%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="23.1079%" y="517" width="0.1610%" height="15" fill="rgb(252,149,13)" fg:x="287" fg:w="2"/><text x="23.3579%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.1079%" y="501" width="0.1610%" height="15" fill="rgb(232,81,48)" fg:x="287" fg:w="2"/><text x="23.3579%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="23.1079%" y="485" width="0.1610%" height="15" fill="rgb(222,144,2)" fg:x="287" fg:w="2"/><text x="23.3579%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.1079%" y="469" width="0.1610%" height="15" fill="rgb(216,81,32)" fg:x="287" fg:w="2"/><text x="23.3579%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="23.1079%" y="453" width="0.1610%" height="15" fill="rgb(244,78,51)" fg:x="287" fg:w="2"/><text x="23.3579%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.1079%" y="437" width="0.1610%" height="15" fill="rgb(217,66,21)" fg:x="287" fg:w="2"/><text x="23.3579%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.1884%" y="421" width="0.0805%" height="15" fill="rgb(247,101,42)" fg:x="288" fg:w="1"/><text x="23.4384%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2689%" y="565" width="0.0805%" height="15" fill="rgb(227,81,39)" fg:x="289" fg:w="1"/><text x="23.5189%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2689%" y="549" width="0.0805%" height="15" fill="rgb(220,223,44)" fg:x="289" fg:w="1"/><text x="23.5189%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="23.3494%" y="517" width="0.0805%" height="15" fill="rgb(205,218,2)" fg:x="290" fg:w="1"/><text x="23.5994%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3494%" y="501" width="0.0805%" height="15" fill="rgb(212,207,28)" fg:x="290" fg:w="1"/><text x="23.5994%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="23.2689%" y="581" width="0.3221%" height="15" fill="rgb(224,12,41)" fg:x="289" fg:w="4"/><text x="23.5189%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="23.3494%" y="565" width="0.2415%" height="15" fill="rgb(216,118,12)" fg:x="290" fg:w="3"/><text x="23.5994%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="23.3494%" y="549" width="0.2415%" height="15" fill="rgb(252,97,46)" fg:x="290" fg:w="3"/><text x="23.5994%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="23.3494%" y="533" width="0.2415%" height="15" fill="rgb(244,206,19)" fg:x="290" fg:w="3"/><text x="23.5994%" y="543.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="23.4300%" y="517" width="0.1610%" height="15" fill="rgb(231,84,31)" fg:x="291" fg:w="2"/><text x="23.6800%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.4300%" y="501" width="0.1610%" height="15" fill="rgb(244,133,0)" fg:x="291" fg:w="2"/><text x="23.6800%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.4300%" y="485" width="0.1610%" height="15" fill="rgb(223,15,50)" fg:x="291" fg:w="2"/><text x="23.6800%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.5105%" y="469" width="0.0805%" height="15" fill="rgb(250,118,49)" fg:x="292" fg:w="1"/><text x="23.7605%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="23.5105%" y="453" width="0.0805%" height="15" fill="rgb(248,25,38)" fg:x="292" fg:w="1"/><text x="23.7605%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6715%" y="533" width="0.0805%" height="15" fill="rgb(215,70,14)" fg:x="294" fg:w="1"/><text x="23.9215%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6715%" y="517" width="0.0805%" height="15" fill="rgb(215,28,15)" fg:x="294" fg:w="1"/><text x="23.9215%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.6715%" y="501" width="0.0805%" height="15" fill="rgb(243,6,28)" fg:x="294" fg:w="1"/><text x="23.9215%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.6715%" y="485" width="0.0805%" height="15" fill="rgb(222,130,1)" fg:x="294" fg:w="1"/><text x="23.9215%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.6715%" y="469" width="0.0805%" height="15" fill="rgb(236,166,44)" fg:x="294" fg:w="1"/><text x="23.9215%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6715%" y="453" width="0.0805%" height="15" fill="rgb(221,108,14)" fg:x="294" fg:w="1"/><text x="23.9215%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6715%" y="437" width="0.0805%" height="15" fill="rgb(252,3,45)" fg:x="294" fg:w="1"/><text x="23.9215%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.6715%" y="421" width="0.0805%" height="15" fill="rgb(237,68,30)" fg:x="294" fg:w="1"/><text x="23.9215%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.6715%" y="405" width="0.0805%" height="15" fill="rgb(211,79,22)" fg:x="294" fg:w="1"/><text x="23.9215%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.6715%" y="389" width="0.0805%" height="15" fill="rgb(252,185,21)" fg:x="294" fg:w="1"/><text x="23.9215%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.6715%" y="373" width="0.0805%" height="15" fill="rgb(225,189,26)" fg:x="294" fg:w="1"/><text x="23.9215%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6715%" y="357" width="0.0805%" height="15" fill="rgb(241,30,40)" fg:x="294" fg:w="1"/><text x="23.9215%" y="367.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="23.7520%" y="517" width="0.0805%" height="15" fill="rgb(235,215,44)" fg:x="295" fg:w="1"/><text x="24.0020%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.7520%" y="501" width="0.0805%" height="15" fill="rgb(205,8,29)" fg:x="295" fg:w="1"/><text x="24.0020%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="23.8325%" y="501" width="0.0805%" height="15" fill="rgb(241,137,42)" fg:x="296" fg:w="1"/><text x="24.0825%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.8325%" y="485" width="0.0805%" height="15" fill="rgb(237,155,2)" fg:x="296" fg:w="1"/><text x="24.0825%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.8325%" y="469" width="0.0805%" height="15" fill="rgb(245,29,42)" fg:x="296" fg:w="1"/><text x="24.0825%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="23.7520%" y="533" width="0.2415%" height="15" fill="rgb(234,101,35)" fg:x="295" fg:w="3"/><text x="24.0020%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.8325%" y="517" width="0.1610%" height="15" fill="rgb(228,64,37)" fg:x="296" fg:w="2"/><text x="24.0825%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.9130%" y="501" width="0.0805%" height="15" fill="rgb(217,214,36)" fg:x="297" fg:w="1"/><text x="24.1630%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9130%" y="485" width="0.0805%" height="15" fill="rgb(243,70,3)" fg:x="297" fg:w="1"/><text x="24.1630%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.9130%" y="469" width="0.0805%" height="15" fill="rgb(253,158,52)" fg:x="297" fg:w="1"/><text x="24.1630%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9130%" y="453" width="0.0805%" height="15" fill="rgb(234,111,54)" fg:x="297" fg:w="1"/><text x="24.1630%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="23.9130%" y="437" width="0.0805%" height="15" fill="rgb(217,70,32)" fg:x="297" fg:w="1"/><text x="24.1630%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9936%" y="469" width="0.0805%" height="15" fill="rgb(234,18,33)" fg:x="298" fg:w="1"/><text x="24.2436%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.9936%" y="453" width="0.0805%" height="15" fill="rgb(234,12,49)" fg:x="298" fg:w="1"/><text x="24.2436%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.9936%" y="501" width="0.1610%" height="15" fill="rgb(236,10,21)" fg:x="298" fg:w="2"/><text x="24.2436%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.9936%" y="485" width="0.1610%" height="15" fill="rgb(248,182,45)" fg:x="298" fg:w="2"/><text x="24.2436%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0741%" y="469" width="0.0805%" height="15" fill="rgb(217,95,36)" fg:x="299" fg:w="1"/><text x="24.3241%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.72%)</title><rect x="23.5910%" y="581" width="0.7246%" height="15" fill="rgb(212,110,31)" fg:x="293" fg:w="9"/><text x="23.8410%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="23.6715%" y="565" width="0.6441%" height="15" fill="rgb(206,32,53)" fg:x="294" fg:w="8"/><text x="23.9215%" y="575.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="23.6715%" y="549" width="0.6441%" height="15" fill="rgb(246,141,37)" fg:x="294" fg:w="8"/><text x="23.9215%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="23.9936%" y="533" width="0.3221%" height="15" fill="rgb(219,16,7)" fg:x="298" fg:w="4"/><text x="24.2436%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="23.9936%" y="517" width="0.3221%" height="15" fill="rgb(230,205,45)" fg:x="298" fg:w="4"/><text x="24.2436%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="24.1546%" y="501" width="0.1610%" height="15" fill="rgb(231,43,49)" fg:x="300" fg:w="2"/><text x="24.4046%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.1546%" y="485" width="0.1610%" height="15" fill="rgb(212,106,34)" fg:x="300" fg:w="2"/><text x="24.4046%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="24.1546%" y="469" width="0.1610%" height="15" fill="rgb(206,83,17)" fg:x="300" fg:w="2"/><text x="24.4046%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.1546%" y="453" width="0.1610%" height="15" fill="rgb(244,154,49)" fg:x="300" fg:w="2"/><text x="24.4046%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="24.1546%" y="437" width="0.1610%" height="15" fill="rgb(244,149,49)" fg:x="300" fg:w="2"/><text x="24.4046%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.1546%" y="421" width="0.1610%" height="15" fill="rgb(227,134,18)" fg:x="300" fg:w="2"/><text x="24.4046%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.2351%" y="405" width="0.0805%" height="15" fill="rgb(237,116,36)" fg:x="301" fg:w="1"/><text x="24.4851%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (2 samples, 0.16%)</title><rect x="24.3156%" y="565" width="0.1610%" height="15" fill="rgb(205,129,40)" fg:x="302" fg:w="2"/><text x="24.5656%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="24.3961%" y="549" width="0.0805%" height="15" fill="rgb(236,178,4)" fg:x="303" fg:w="1"/><text x="24.6461%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (26 samples, 2.09%)</title><rect x="22.4638%" y="613" width="2.0934%" height="15" fill="rgb(251,76,53)" fg:x="279" fg:w="26"/><text x="22.7138%" y="623.50">p..</text></g><g><title>plugins_core::tools::set_container (24 samples, 1.93%)</title><rect x="22.6248%" y="597" width="1.9324%" height="15" fill="rgb(242,92,40)" fg:x="281" fg:w="24"/><text x="22.8748%" y="607.50">p..</text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="24.3156%" y="581" width="0.2415%" height="15" fill="rgb(209,45,30)" fg:x="302" fg:w="3"/><text x="24.5656%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.4767%" y="565" width="0.0805%" height="15" fill="rgb(218,157,36)" fg:x="304" fg:w="1"/><text x="24.7267%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="24.5572%" y="581" width="0.0805%" height="15" fill="rgb(222,186,16)" fg:x="305" fg:w="1"/><text x="24.8072%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5572%" y="565" width="0.0805%" height="15" fill="rgb(254,72,35)" fg:x="305" fg:w="1"/><text x="24.8072%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="24.5572%" y="613" width="0.2415%" height="15" fill="rgb(224,25,35)" fg:x="305" fg:w="3"/><text x="24.8072%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="24.5572%" y="597" width="0.2415%" height="15" fill="rgb(206,135,52)" fg:x="305" fg:w="3"/><text x="24.8072%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="24.6377%" y="581" width="0.1610%" height="15" fill="rgb(229,174,47)" fg:x="306" fg:w="2"/><text x="24.8877%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.7182%" y="565" width="0.0805%" height="15" fill="rgb(242,184,21)" fg:x="307" fg:w="1"/><text x="24.9682%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="24.7182%" y="549" width="0.0805%" height="15" fill="rgb(213,22,45)" fg:x="307" fg:w="1"/><text x="24.9682%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.7182%" y="533" width="0.0805%" height="15" fill="rgb(237,81,54)" fg:x="307" fg:w="1"/><text x="24.9682%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="24.7182%" y="517" width="0.0805%" height="15" fill="rgb(248,177,18)" fg:x="307" fg:w="1"/><text x="24.9682%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="24.7182%" y="501" width="0.0805%" height="15" fill="rgb(254,31,16)" fg:x="307" fg:w="1"/><text x="24.9682%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7182%" y="485" width="0.0805%" height="15" fill="rgb(235,20,31)" fg:x="307" fg:w="1"/><text x="24.9682%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="24.7987%" y="581" width="0.0805%" height="15" fill="rgb(240,56,43)" fg:x="308" fg:w="1"/><text x="25.0487%" y="591.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="24.7987%" y="565" width="0.0805%" height="15" fill="rgb(237,197,51)" fg:x="308" fg:w="1"/><text x="25.0487%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.7987%" y="549" width="0.0805%" height="15" fill="rgb(241,162,44)" fg:x="308" fg:w="1"/><text x="25.0487%" y="559.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="24.7987%" y="533" width="0.0805%" height="15" fill="rgb(224,23,20)" fg:x="308" fg:w="1"/><text x="25.0487%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="24.7987%" y="517" width="0.0805%" height="15" fill="rgb(250,109,34)" fg:x="308" fg:w="1"/><text x="25.0487%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.7987%" y="501" width="0.0805%" height="15" fill="rgb(214,175,50)" fg:x="308" fg:w="1"/><text x="25.0487%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.7987%" y="485" width="0.0805%" height="15" fill="rgb(213,182,5)" fg:x="308" fg:w="1"/><text x="25.0487%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.7987%" y="469" width="0.0805%" height="15" fill="rgb(209,199,19)" fg:x="308" fg:w="1"/><text x="25.0487%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.7987%" y="453" width="0.0805%" height="15" fill="rgb(236,224,42)" fg:x="308" fg:w="1"/><text x="25.0487%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.7987%" y="437" width="0.0805%" height="15" fill="rgb(246,226,29)" fg:x="308" fg:w="1"/><text x="25.0487%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.7987%" y="421" width="0.0805%" height="15" fill="rgb(227,223,11)" fg:x="308" fg:w="1"/><text x="25.0487%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7987%" y="405" width="0.0805%" height="15" fill="rgb(219,7,51)" fg:x="308" fg:w="1"/><text x="25.0487%" y="415.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="24.7987%" y="597" width="0.1610%" height="15" fill="rgb(245,167,10)" fg:x="308" fg:w="2"/><text x="25.0487%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="24.8792%" y="581" width="0.0805%" height="15" fill="rgb(237,224,16)" fg:x="309" fg:w="1"/><text x="25.1292%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="24.8792%" y="565" width="0.0805%" height="15" fill="rgb(226,132,13)" fg:x="309" fg:w="1"/><text x="25.1292%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="24.7987%" y="613" width="0.2415%" height="15" fill="rgb(214,140,3)" fg:x="308" fg:w="3"/><text x="25.0487%" y="623.50"></text></g><g><title>kernel::model::builder::build_entity (1 samples, 0.08%)</title><rect x="24.9597%" y="597" width="0.0805%" height="15" fill="rgb(221,177,4)" fg:x="310" fg:w="1"/><text x="25.2097%" y="607.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="24.9597%" y="581" width="0.0805%" height="15" fill="rgb(238,139,3)" fg:x="310" fg:w="1"/><text x="25.2097%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.0403%" y="597" width="0.0805%" height="15" fill="rgb(216,17,39)" fg:x="311" fg:w="1"/><text x="25.2903%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.2013%" y="501" width="0.0805%" height="15" fill="rgb(238,120,9)" fg:x="313" fg:w="1"/><text x="25.4513%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.2013%" y="485" width="0.0805%" height="15" fill="rgb(244,92,53)" fg:x="313" fg:w="1"/><text x="25.4513%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="25.2013%" y="565" width="0.2415%" height="15" fill="rgb(224,148,33)" fg:x="313" fg:w="3"/><text x="25.4513%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="25.2013%" y="549" width="0.2415%" height="15" fill="rgb(243,6,36)" fg:x="313" fg:w="3"/><text x="25.4513%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="25.2013%" y="533" width="0.2415%" height="15" fill="rgb(230,102,11)" fg:x="313" fg:w="3"/><text x="25.4513%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="25.2013%" y="517" width="0.2415%" height="15" fill="rgb(234,148,36)" fg:x="313" fg:w="3"/><text x="25.4513%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.2818%" y="501" width="0.1610%" height="15" fill="rgb(251,153,25)" fg:x="314" fg:w="2"/><text x="25.5318%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.4428%" y="517" width="0.0805%" height="15" fill="rgb(215,129,8)" fg:x="316" fg:w="1"/><text x="25.6928%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="25.4428%" y="549" width="0.1610%" height="15" fill="rgb(224,128,35)" fg:x="316" fg:w="2"/><text x="25.6928%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.4428%" y="533" width="0.1610%" height="15" fill="rgb(237,56,52)" fg:x="316" fg:w="2"/><text x="25.6928%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="25.5233%" y="517" width="0.0805%" height="15" fill="rgb(234,213,19)" fg:x="317" fg:w="1"/><text x="25.7733%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="25.4428%" y="565" width="0.2415%" height="15" fill="rgb(252,82,23)" fg:x="316" fg:w="3"/><text x="25.6928%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.6039%" y="549" width="0.0805%" height="15" fill="rgb(254,201,21)" fg:x="318" fg:w="1"/><text x="25.8539%" y="559.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="25.6039%" y="533" width="0.0805%" height="15" fill="rgb(250,186,11)" fg:x="318" fg:w="1"/><text x="25.8539%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.6039%" y="517" width="0.0805%" height="15" fill="rgb(211,174,5)" fg:x="318" fg:w="1"/><text x="25.8539%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="25.6039%" y="501" width="0.0805%" height="15" fill="rgb(214,121,10)" fg:x="318" fg:w="1"/><text x="25.8539%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.6039%" y="485" width="0.0805%" height="15" fill="rgb(241,66,2)" fg:x="318" fg:w="1"/><text x="25.8539%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="25.6039%" y="469" width="0.0805%" height="15" fill="rgb(220,167,19)" fg:x="318" fg:w="1"/><text x="25.8539%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="25.6844%" y="517" width="0.0805%" height="15" fill="rgb(231,54,50)" fg:x="319" fg:w="1"/><text x="25.9344%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.6844%" y="501" width="0.0805%" height="15" fill="rgb(239,217,53)" fg:x="319" fg:w="1"/><text x="25.9344%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.6844%" y="485" width="0.0805%" height="15" fill="rgb(248,8,0)" fg:x="319" fg:w="1"/><text x="25.9344%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="25.6844%" y="469" width="0.0805%" height="15" fill="rgb(229,118,37)" fg:x="319" fg:w="1"/><text x="25.9344%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="25.6844%" y="549" width="0.1610%" height="15" fill="rgb(253,223,43)" fg:x="319" fg:w="2"/><text x="25.9344%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="25.6844%" y="533" width="0.1610%" height="15" fill="rgb(211,77,36)" fg:x="319" fg:w="2"/><text x="25.9344%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.7649%" y="517" width="0.0805%" height="15" fill="rgb(219,3,53)" fg:x="320" fg:w="1"/><text x="26.0149%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7649%" y="501" width="0.0805%" height="15" fill="rgb(244,45,42)" fg:x="320" fg:w="1"/><text x="26.0149%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7649%" y="485" width="0.0805%" height="15" fill="rgb(225,95,27)" fg:x="320" fg:w="1"/><text x="26.0149%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="25.6844%" y="565" width="0.2415%" height="15" fill="rgb(207,74,8)" fg:x="319" fg:w="3"/><text x="25.9344%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="25.8454%" y="549" width="0.0805%" height="15" fill="rgb(243,63,36)" fg:x="321" fg:w="1"/><text x="26.0954%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.8454%" y="533" width="0.0805%" height="15" fill="rgb(211,180,12)" fg:x="321" fg:w="1"/><text x="26.0954%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.8454%" y="517" width="0.0805%" height="15" fill="rgb(254,166,49)" fg:x="321" fg:w="1"/><text x="26.0954%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="25.9259%" y="549" width="0.0805%" height="15" fill="rgb(205,19,0)" fg:x="322" fg:w="1"/><text x="26.1759%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.9259%" y="533" width="0.0805%" height="15" fill="rgb(224,172,32)" fg:x="322" fg:w="1"/><text x="26.1759%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.9259%" y="517" width="0.0805%" height="15" fill="rgb(254,136,30)" fg:x="322" fg:w="1"/><text x="26.1759%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9259%" y="501" width="0.0805%" height="15" fill="rgb(246,19,35)" fg:x="322" fg:w="1"/><text x="26.1759%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.9259%" y="485" width="0.0805%" height="15" fill="rgb(219,24,36)" fg:x="322" fg:w="1"/><text x="26.1759%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="25.9259%" y="565" width="0.1610%" height="15" fill="rgb(251,55,1)" fg:x="322" fg:w="2"/><text x="26.1759%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="26.0064%" y="549" width="0.0805%" height="15" fill="rgb(218,117,39)" fg:x="323" fg:w="1"/><text x="26.2564%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0064%" y="533" width="0.0805%" height="15" fill="rgb(248,169,11)" fg:x="323" fg:w="1"/><text x="26.2564%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0064%" y="517" width="0.0805%" height="15" fill="rgb(244,40,44)" fg:x="323" fg:w="1"/><text x="26.2564%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.0064%" y="501" width="0.0805%" height="15" fill="rgb(234,62,37)" fg:x="323" fg:w="1"/><text x="26.2564%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.0064%" y="485" width="0.0805%" height="15" fill="rgb(207,117,42)" fg:x="323" fg:w="1"/><text x="26.2564%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.0064%" y="469" width="0.0805%" height="15" fill="rgb(213,43,2)" fg:x="323" fg:w="1"/><text x="26.2564%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0064%" y="453" width="0.0805%" height="15" fill="rgb(244,202,51)" fg:x="323" fg:w="1"/><text x="26.2564%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0064%" y="437" width="0.0805%" height="15" fill="rgb(253,174,46)" fg:x="323" fg:w="1"/><text x="26.2564%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.0064%" y="421" width="0.0805%" height="15" fill="rgb(251,23,1)" fg:x="323" fg:w="1"/><text x="26.2564%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.0064%" y="405" width="0.0805%" height="15" fill="rgb(253,26,1)" fg:x="323" fg:w="1"/><text x="26.2564%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.0064%" y="389" width="0.0805%" height="15" fill="rgb(216,89,31)" fg:x="323" fg:w="1"/><text x="26.2564%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.0064%" y="373" width="0.0805%" height="15" fill="rgb(209,109,5)" fg:x="323" fg:w="1"/><text x="26.2564%" y="383.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="26.0064%" y="357" width="0.0805%" height="15" fill="rgb(229,63,13)" fg:x="323" fg:w="1"/><text x="26.2564%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="26.0870%" y="533" width="0.0805%" height="15" fill="rgb(238,137,54)" fg:x="324" fg:w="1"/><text x="26.3370%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.0870%" y="517" width="0.0805%" height="15" fill="rgb(228,1,9)" fg:x="324" fg:w="1"/><text x="26.3370%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.0870%" y="501" width="0.0805%" height="15" fill="rgb(249,120,48)" fg:x="324" fg:w="1"/><text x="26.3370%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.0870%" y="485" width="0.0805%" height="15" fill="rgb(209,72,36)" fg:x="324" fg:w="1"/><text x="26.3370%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.0870%" y="469" width="0.0805%" height="15" fill="rgb(247,98,49)" fg:x="324" fg:w="1"/><text x="26.3370%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0870%" y="453" width="0.0805%" height="15" fill="rgb(233,75,36)" fg:x="324" fg:w="1"/><text x="26.3370%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0870%" y="437" width="0.0805%" height="15" fill="rgb(225,14,24)" fg:x="324" fg:w="1"/><text x="26.3370%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.0870%" y="421" width="0.0805%" height="15" fill="rgb(237,193,20)" fg:x="324" fg:w="1"/><text x="26.3370%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.0870%" y="405" width="0.0805%" height="15" fill="rgb(239,122,19)" fg:x="324" fg:w="1"/><text x="26.3370%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.0870%" y="389" width="0.0805%" height="15" fill="rgb(231,220,10)" fg:x="324" fg:w="1"/><text x="26.3370%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0870%" y="373" width="0.0805%" height="15" fill="rgb(220,66,15)" fg:x="324" fg:w="1"/><text x="26.3370%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0870%" y="357" width="0.0805%" height="15" fill="rgb(215,171,52)" fg:x="324" fg:w="1"/><text x="26.3370%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.0870%" y="341" width="0.0805%" height="15" fill="rgb(241,169,50)" fg:x="324" fg:w="1"/><text x="26.3370%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.0870%" y="325" width="0.0805%" height="15" fill="rgb(236,189,0)" fg:x="324" fg:w="1"/><text x="26.3370%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.0870%" y="309" width="0.0805%" height="15" fill="rgb(217,147,20)" fg:x="324" fg:w="1"/><text x="26.3370%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.0870%" y="293" width="0.0805%" height="15" fill="rgb(206,188,39)" fg:x="324" fg:w="1"/><text x="26.3370%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.0870%" y="277" width="0.0805%" height="15" fill="rgb(227,118,25)" fg:x="324" fg:w="1"/><text x="26.3370%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="25.2013%" y="581" width="1.0467%" height="15" fill="rgb(248,171,40)" fg:x="313" fg:w="13"/><text x="25.4513%" y="591.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="26.0870%" y="565" width="0.1610%" height="15" fill="rgb(251,90,54)" fg:x="324" fg:w="2"/><text x="26.3370%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="26.0870%" y="549" width="0.1610%" height="15" fill="rgb(234,11,46)" fg:x="324" fg:w="2"/><text x="26.3370%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="26.1675%" y="533" width="0.0805%" height="15" fill="rgb(229,134,13)" fg:x="325" fg:w="1"/><text x="26.4175%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::base::AclRule&gt;&gt; (1 samples, 0.08%)</title><rect x="26.1675%" y="517" width="0.0805%" height="15" fill="rgb(223,129,3)" fg:x="325" fg:w="1"/><text x="26.4175%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="26.3285%" y="485" width="0.0805%" height="15" fill="rgb(221,124,13)" fg:x="327" fg:w="1"/><text x="26.5785%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.3285%" y="469" width="0.0805%" height="15" fill="rgb(234,3,18)" fg:x="327" fg:w="1"/><text x="26.5785%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (18 samples, 1.45%)</title><rect x="25.1208%" y="597" width="1.4493%" height="15" fill="rgb(249,199,20)" fg:x="312" fg:w="18"/><text x="25.3708%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="26.2480%" y="581" width="0.3221%" height="15" fill="rgb(224,134,6)" fg:x="326" fg:w="4"/><text x="26.4980%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="26.2480%" y="565" width="0.3221%" height="15" fill="rgb(254,83,26)" fg:x="326" fg:w="4"/><text x="26.4980%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="26.3285%" y="549" width="0.2415%" height="15" fill="rgb(217,88,9)" fg:x="327" fg:w="3"/><text x="26.5785%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="26.3285%" y="533" width="0.2415%" height="15" fill="rgb(225,73,2)" fg:x="327" fg:w="3"/><text x="26.5785%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="26.3285%" y="517" width="0.2415%" height="15" fill="rgb(226,44,39)" fg:x="327" fg:w="3"/><text x="26.5785%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="26.3285%" y="501" width="0.2415%" height="15" fill="rgb(228,53,17)" fg:x="327" fg:w="3"/><text x="26.5785%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="26.4090%" y="485" width="0.1610%" height="15" fill="rgb(212,27,27)" fg:x="328" fg:w="2"/><text x="26.6590%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.4090%" y="469" width="0.1610%" height="15" fill="rgb(241,50,6)" fg:x="328" fg:w="2"/><text x="26.6590%" y="479.50"></text></g><g><title>&lt;plugins_core::moving::model::MovingHooks as plugins_core::moving::model::AfterMoveHook&gt;::after_move (1 samples, 0.08%)</title><rect x="26.5700%" y="581" width="0.0805%" height="15" fill="rgb(225,28,51)" fg:x="330" fg:w="1"/><text x="26.8200%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="26.6506%" y="549" width="0.0805%" height="15" fill="rgb(215,33,16)" fg:x="331" fg:w="1"/><text x="26.9006%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.6506%" y="533" width="0.0805%" height="15" fill="rgb(243,40,39)" fg:x="331" fg:w="1"/><text x="26.9006%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.6506%" y="517" width="0.0805%" height="15" fill="rgb(225,11,42)" fg:x="331" fg:w="1"/><text x="26.9006%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.6506%" y="501" width="0.0805%" height="15" fill="rgb(241,220,38)" fg:x="331" fg:w="1"/><text x="26.9006%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.7311%" y="533" width="0.0805%" height="15" fill="rgb(244,52,35)" fg:x="332" fg:w="1"/><text x="26.9811%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.7311%" y="517" width="0.0805%" height="15" fill="rgb(246,42,46)" fg:x="332" fg:w="1"/><text x="26.9811%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.7311%" y="501" width="0.0805%" height="15" fill="rgb(205,184,13)" fg:x="332" fg:w="1"/><text x="26.9811%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.7311%" y="485" width="0.0805%" height="15" fill="rgb(209,48,36)" fg:x="332" fg:w="1"/><text x="26.9811%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.7311%" y="469" width="0.0805%" height="15" fill="rgb(244,34,51)" fg:x="332" fg:w="1"/><text x="26.9811%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.7311%" y="453" width="0.0805%" height="15" fill="rgb(221,107,33)" fg:x="332" fg:w="1"/><text x="26.9811%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.7311%" y="437" width="0.0805%" height="15" fill="rgb(224,203,12)" fg:x="332" fg:w="1"/><text x="26.9811%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.7311%" y="421" width="0.0805%" height="15" fill="rgb(230,215,18)" fg:x="332" fg:w="1"/><text x="26.9811%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.7311%" y="405" width="0.0805%" height="15" fill="rgb(206,185,35)" fg:x="332" fg:w="1"/><text x="26.9811%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.7311%" y="389" width="0.0805%" height="15" fill="rgb(228,140,34)" fg:x="332" fg:w="1"/><text x="26.9811%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.7311%" y="373" width="0.0805%" height="15" fill="rgb(208,93,13)" fg:x="332" fg:w="1"/><text x="26.9811%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.7311%" y="357" width="0.0805%" height="15" fill="rgb(221,193,39)" fg:x="332" fg:w="1"/><text x="26.9811%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.8116%" y="533" width="0.0805%" height="15" fill="rgb(241,132,34)" fg:x="333" fg:w="1"/><text x="27.0616%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="26.6506%" y="581" width="0.4026%" height="15" fill="rgb(221,141,10)" fg:x="331" fg:w="5"/><text x="26.9006%" y="591.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="26.6506%" y="565" width="0.4026%" height="15" fill="rgb(226,90,31)" fg:x="331" fg:w="5"/><text x="26.9006%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="26.7311%" y="549" width="0.3221%" height="15" fill="rgb(243,75,5)" fg:x="332" fg:w="4"/><text x="26.9811%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.8921%" y="533" width="0.1610%" height="15" fill="rgb(227,156,21)" fg:x="334" fg:w="2"/><text x="27.1421%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9726%" y="517" width="0.0805%" height="15" fill="rgb(250,195,8)" fg:x="335" fg:w="1"/><text x="27.2226%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9726%" y="501" width="0.0805%" height="15" fill="rgb(220,134,5)" fg:x="335" fg:w="1"/><text x="27.2226%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9726%" y="485" width="0.0805%" height="15" fill="rgb(246,106,34)" fg:x="335" fg:w="1"/><text x="27.2226%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.9726%" y="469" width="0.0805%" height="15" fill="rgb(205,1,4)" fg:x="335" fg:w="1"/><text x="27.2226%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.9726%" y="453" width="0.0805%" height="15" fill="rgb(224,151,29)" fg:x="335" fg:w="1"/><text x="27.2226%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.9726%" y="437" width="0.0805%" height="15" fill="rgb(251,196,0)" fg:x="335" fg:w="1"/><text x="27.2226%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.9726%" y="421" width="0.0805%" height="15" fill="rgb(212,127,0)" fg:x="335" fg:w="1"/><text x="27.2226%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.9726%" y="405" width="0.0805%" height="15" fill="rgb(236,71,53)" fg:x="335" fg:w="1"/><text x="27.2226%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.9726%" y="389" width="0.0805%" height="15" fill="rgb(227,99,0)" fg:x="335" fg:w="1"/><text x="27.2226%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.9726%" y="373" width="0.0805%" height="15" fill="rgb(239,89,21)" fg:x="335" fg:w="1"/><text x="27.2226%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.9726%" y="357" width="0.0805%" height="15" fill="rgb(243,122,19)" fg:x="335" fg:w="1"/><text x="27.2226%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.9726%" y="341" width="0.0805%" height="15" fill="rgb(229,192,45)" fg:x="335" fg:w="1"/><text x="27.2226%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.9726%" y="325" width="0.0805%" height="15" fill="rgb(235,165,35)" fg:x="335" fg:w="1"/><text x="27.2226%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.9726%" y="309" width="0.0805%" height="15" fill="rgb(253,202,0)" fg:x="335" fg:w="1"/><text x="27.2226%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9726%" y="293" width="0.0805%" height="15" fill="rgb(235,51,20)" fg:x="335" fg:w="1"/><text x="27.2226%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.2142%" y="565" width="0.0805%" height="15" fill="rgb(218,95,46)" fg:x="338" fg:w="1"/><text x="27.4642%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.2142%" y="549" width="0.0805%" height="15" fill="rgb(212,81,10)" fg:x="338" fg:w="1"/><text x="27.4642%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="27.2142%" y="533" width="0.0805%" height="15" fill="rgb(240,59,0)" fg:x="338" fg:w="1"/><text x="27.4642%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="27.2947%" y="565" width="0.2415%" height="15" fill="rgb(212,191,42)" fg:x="339" fg:w="3"/><text x="27.5447%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="27.2947%" y="549" width="0.2415%" height="15" fill="rgb(233,140,3)" fg:x="339" fg:w="3"/><text x="27.5447%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="27.2947%" y="533" width="0.2415%" height="15" fill="rgb(215,69,23)" fg:x="339" fg:w="3"/><text x="27.5447%" y="543.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="27.2947%" y="517" width="0.2415%" height="15" fill="rgb(240,202,20)" fg:x="339" fg:w="3"/><text x="27.5447%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.3752%" y="501" width="0.1610%" height="15" fill="rgb(209,146,50)" fg:x="340" fg:w="2"/><text x="27.6252%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="27.3752%" y="485" width="0.1610%" height="15" fill="rgb(253,102,54)" fg:x="340" fg:w="2"/><text x="27.6252%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (8 samples, 0.64%)</title><rect x="27.0531%" y="581" width="0.6441%" height="15" fill="rgb(250,173,47)" fg:x="336" fg:w="8"/><text x="27.3031%" y="591.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="27.5362%" y="565" width="0.1610%" height="15" fill="rgb(232,142,7)" fg:x="342" fg:w="2"/><text x="27.7862%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.6167%" y="549" width="0.0805%" height="15" fill="rgb(230,157,47)" fg:x="343" fg:w="1"/><text x="27.8667%" y="559.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="27.6167%" y="533" width="0.0805%" height="15" fill="rgb(214,177,35)" fg:x="343" fg:w="1"/><text x="27.8667%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.6167%" y="517" width="0.0805%" height="15" fill="rgb(234,119,46)" fg:x="343" fg:w="1"/><text x="27.8667%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.6167%" y="501" width="0.0805%" height="15" fill="rgb(241,180,50)" fg:x="343" fg:w="1"/><text x="27.8667%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.6167%" y="485" width="0.0805%" height="15" fill="rgb(221,54,25)" fg:x="343" fg:w="1"/><text x="27.8667%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="27.6167%" y="469" width="0.0805%" height="15" fill="rgb(209,157,44)" fg:x="343" fg:w="1"/><text x="27.8667%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="27.6973%" y="533" width="0.0805%" height="15" fill="rgb(246,115,41)" fg:x="344" fg:w="1"/><text x="27.9473%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="27.6973%" y="517" width="0.0805%" height="15" fill="rgb(229,86,1)" fg:x="344" fg:w="1"/><text x="27.9473%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.6973%" y="501" width="0.0805%" height="15" fill="rgb(240,108,53)" fg:x="344" fg:w="1"/><text x="27.9473%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="27.7778%" y="517" width="0.0805%" height="15" fill="rgb(227,134,2)" fg:x="345" fg:w="1"/><text x="28.0278%" y="527.50"></text></g><g><title>plugins_core::build::Build::occupying (36 samples, 2.90%)</title><rect x="25.0403%" y="613" width="2.8986%" height="15" fill="rgb(213,129,25)" fg:x="311" fg:w="36"/><text x="25.2903%" y="623.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (17 samples, 1.37%)</title><rect x="26.5700%" y="597" width="1.3688%" height="15" fill="rgb(226,35,21)" fg:x="330" fg:w="17"/><text x="26.8200%" y="607.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.24%)</title><rect x="27.6973%" y="581" width="0.2415%" height="15" fill="rgb(208,129,26)" fg:x="344" fg:w="3"/><text x="27.9473%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="27.6973%" y="565" width="0.2415%" height="15" fill="rgb(224,83,6)" fg:x="344" fg:w="3"/><text x="27.9473%" y="575.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="27.6973%" y="549" width="0.2415%" height="15" fill="rgb(227,52,39)" fg:x="344" fg:w="3"/><text x="27.9473%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="27.7778%" y="533" width="0.1610%" height="15" fill="rgb(241,30,17)" fg:x="345" fg:w="2"/><text x="28.0278%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.8583%" y="517" width="0.0805%" height="15" fill="rgb(246,186,42)" fg:x="346" fg:w="1"/><text x="28.1083%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="27.8583%" y="501" width="0.0805%" height="15" fill="rgb(221,169,15)" fg:x="346" fg:w="1"/><text x="28.1083%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.8583%" y="485" width="0.0805%" height="15" fill="rgb(235,108,21)" fg:x="346" fg:w="1"/><text x="28.1083%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="27.9388%" y="565" width="0.1610%" height="15" fill="rgb(219,148,30)" fg:x="347" fg:w="2"/><text x="28.1888%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="27.9388%" y="549" width="0.1610%" height="15" fill="rgb(220,109,5)" fg:x="347" fg:w="2"/><text x="28.1888%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="28.0193%" y="533" width="0.0805%" height="15" fill="rgb(213,203,48)" fg:x="348" fg:w="1"/><text x="28.2693%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.0193%" y="517" width="0.0805%" height="15" fill="rgb(244,71,33)" fg:x="348" fg:w="1"/><text x="28.2693%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.0193%" y="501" width="0.0805%" height="15" fill="rgb(209,23,2)" fg:x="348" fg:w="1"/><text x="28.2693%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.0193%" y="485" width="0.0805%" height="15" fill="rgb(219,97,7)" fg:x="348" fg:w="1"/><text x="28.2693%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="28.0998%" y="565" width="0.0805%" height="15" fill="rgb(216,161,23)" fg:x="349" fg:w="1"/><text x="28.3498%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="28.0998%" y="549" width="0.0805%" height="15" fill="rgb(207,45,42)" fg:x="349" fg:w="1"/><text x="28.3498%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="28.0998%" y="533" width="0.0805%" height="15" fill="rgb(241,61,4)" fg:x="349" fg:w="1"/><text x="28.3498%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.0998%" y="517" width="0.0805%" height="15" fill="rgb(236,170,1)" fg:x="349" fg:w="1"/><text x="28.3498%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.1804%" y="517" width="0.0805%" height="15" fill="rgb(239,72,5)" fg:x="350" fg:w="1"/><text x="28.4304%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.1804%" y="501" width="0.0805%" height="15" fill="rgb(214,13,50)" fg:x="350" fg:w="1"/><text x="28.4304%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.1804%" y="485" width="0.0805%" height="15" fill="rgb(224,88,9)" fg:x="350" fg:w="1"/><text x="28.4304%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.1804%" y="469" width="0.0805%" height="15" fill="rgb(238,192,34)" fg:x="350" fg:w="1"/><text x="28.4304%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.1804%" y="453" width="0.0805%" height="15" fill="rgb(217,203,50)" fg:x="350" fg:w="1"/><text x="28.4304%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.1804%" y="437" width="0.0805%" height="15" fill="rgb(241,123,32)" fg:x="350" fg:w="1"/><text x="28.4304%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.1804%" y="421" width="0.0805%" height="15" fill="rgb(248,151,39)" fg:x="350" fg:w="1"/><text x="28.4304%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.1804%" y="405" width="0.0805%" height="15" fill="rgb(208,89,6)" fg:x="350" fg:w="1"/><text x="28.4304%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.1804%" y="389" width="0.0805%" height="15" fill="rgb(254,43,26)" fg:x="350" fg:w="1"/><text x="28.4304%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.1804%" y="373" width="0.0805%" height="15" fill="rgb(216,158,13)" fg:x="350" fg:w="1"/><text x="28.4304%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.1804%" y="357" width="0.0805%" height="15" fill="rgb(212,47,37)" fg:x="350" fg:w="1"/><text x="28.4304%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.1804%" y="341" width="0.0805%" height="15" fill="rgb(254,16,10)" fg:x="350" fg:w="1"/><text x="28.4304%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.1804%" y="325" width="0.0805%" height="15" fill="rgb(223,228,16)" fg:x="350" fg:w="1"/><text x="28.4304%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.1804%" y="309" width="0.0805%" height="15" fill="rgb(249,108,50)" fg:x="350" fg:w="1"/><text x="28.4304%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="28.1804%" y="565" width="0.1610%" height="15" fill="rgb(208,220,5)" fg:x="350" fg:w="2"/><text x="28.4304%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="28.1804%" y="549" width="0.1610%" height="15" fill="rgb(217,89,48)" fg:x="350" fg:w="2"/><text x="28.4304%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.1804%" y="533" width="0.1610%" height="15" fill="rgb(212,113,41)" fg:x="350" fg:w="2"/><text x="28.4304%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.2609%" y="517" width="0.0805%" height="15" fill="rgb(231,127,5)" fg:x="351" fg:w="1"/><text x="28.5109%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.2609%" y="501" width="0.0805%" height="15" fill="rgb(217,141,17)" fg:x="351" fg:w="1"/><text x="28.5109%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.2609%" y="485" width="0.0805%" height="15" fill="rgb(245,125,54)" fg:x="351" fg:w="1"/><text x="28.5109%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.2609%" y="469" width="0.0805%" height="15" fill="rgb(248,125,3)" fg:x="351" fg:w="1"/><text x="28.5109%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="28.2609%" y="453" width="0.0805%" height="15" fill="rgb(236,119,51)" fg:x="351" fg:w="1"/><text x="28.5109%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.3414%" y="533" width="0.1610%" height="15" fill="rgb(239,99,8)" fg:x="352" fg:w="2"/><text x="28.5914%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.3414%" y="517" width="0.1610%" height="15" fill="rgb(224,228,4)" fg:x="352" fg:w="2"/><text x="28.5914%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.3414%" y="501" width="0.1610%" height="15" fill="rgb(220,131,45)" fg:x="352" fg:w="2"/><text x="28.5914%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.3414%" y="485" width="0.1610%" height="15" fill="rgb(215,62,5)" fg:x="352" fg:w="2"/><text x="28.5914%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.3414%" y="469" width="0.1610%" height="15" fill="rgb(253,12,24)" fg:x="352" fg:w="2"/><text x="28.5914%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="28.4219%" y="453" width="0.0805%" height="15" fill="rgb(248,120,50)" fg:x="353" fg:w="1"/><text x="28.6719%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="28.4219%" y="437" width="0.0805%" height="15" fill="rgb(245,194,10)" fg:x="353" fg:w="1"/><text x="28.6719%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="28.5024%" y="501" width="0.0805%" height="15" fill="rgb(241,149,38)" fg:x="354" fg:w="1"/><text x="28.7524%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.5024%" y="485" width="0.0805%" height="15" fill="rgb(219,215,7)" fg:x="354" fg:w="1"/><text x="28.7524%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.5024%" y="469" width="0.0805%" height="15" fill="rgb(208,120,31)" fg:x="354" fg:w="1"/><text x="28.7524%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.5024%" y="453" width="0.0805%" height="15" fill="rgb(244,30,8)" fg:x="354" fg:w="1"/><text x="28.7524%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.5024%" y="437" width="0.0805%" height="15" fill="rgb(238,35,44)" fg:x="354" fg:w="1"/><text x="28.7524%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="27.9388%" y="581" width="0.8052%" height="15" fill="rgb(243,218,37)" fg:x="347" fg:w="10"/><text x="28.1888%" y="591.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="28.3414%" y="565" width="0.4026%" height="15" fill="rgb(218,169,10)" fg:x="352" fg:w="5"/><text x="28.5914%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="28.3414%" y="549" width="0.4026%" height="15" fill="rgb(221,144,10)" fg:x="352" fg:w="5"/><text x="28.5914%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="28.5024%" y="533" width="0.2415%" height="15" fill="rgb(226,41,38)" fg:x="354" fg:w="3"/><text x="28.7524%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="28.5024%" y="517" width="0.2415%" height="15" fill="rgb(228,3,1)" fg:x="354" fg:w="3"/><text x="28.7524%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="28.5829%" y="501" width="0.1610%" height="15" fill="rgb(209,129,12)" fg:x="355" fg:w="2"/><text x="28.8329%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.5829%" y="485" width="0.1610%" height="15" fill="rgb(213,136,33)" fg:x="355" fg:w="2"/><text x="28.8329%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="28.5829%" y="469" width="0.1610%" height="15" fill="rgb(209,181,29)" fg:x="355" fg:w="2"/><text x="28.8329%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.5829%" y="453" width="0.1610%" height="15" fill="rgb(234,173,18)" fg:x="355" fg:w="2"/><text x="28.8329%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="28.5829%" y="437" width="0.1610%" height="15" fill="rgb(227,73,47)" fg:x="355" fg:w="2"/><text x="28.8329%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.5829%" y="421" width="0.1610%" height="15" fill="rgb(234,9,34)" fg:x="355" fg:w="2"/><text x="28.8329%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.6634%" y="405" width="0.0805%" height="15" fill="rgb(235,172,15)" fg:x="356" fg:w="1"/><text x="28.9134%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.6634%" y="389" width="0.0805%" height="15" fill="rgb(245,61,2)" fg:x="356" fg:w="1"/><text x="28.9134%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.7440%" y="549" width="0.0805%" height="15" fill="rgb(238,39,47)" fg:x="357" fg:w="1"/><text x="28.9940%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.7440%" y="533" width="0.0805%" height="15" fill="rgb(234,37,24)" fg:x="357" fg:w="1"/><text x="28.9940%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (13 samples, 1.05%)</title><rect x="27.9388%" y="597" width="1.0467%" height="15" fill="rgb(248,223,24)" fg:x="347" fg:w="13"/><text x="28.1888%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="28.7440%" y="581" width="0.2415%" height="15" fill="rgb(223,12,15)" fg:x="357" fg:w="3"/><text x="28.9940%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="28.7440%" y="565" width="0.2415%" height="15" fill="rgb(249,6,3)" fg:x="357" fg:w="3"/><text x="28.9940%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="28.8245%" y="549" width="0.1610%" height="15" fill="rgb(237,105,33)" fg:x="358" fg:w="2"/><text x="29.0745%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.9050%" y="533" width="0.0805%" height="15" fill="rgb(252,208,35)" fg:x="359" fg:w="1"/><text x="29.1550%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.9050%" y="517" width="0.0805%" height="15" fill="rgb(215,181,35)" fg:x="359" fg:w="1"/><text x="29.1550%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.9050%" y="501" width="0.0805%" height="15" fill="rgb(246,212,3)" fg:x="359" fg:w="1"/><text x="29.1550%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.9050%" y="485" width="0.0805%" height="15" fill="rgb(247,156,24)" fg:x="359" fg:w="1"/><text x="29.1550%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.9050%" y="469" width="0.0805%" height="15" fill="rgb(248,9,31)" fg:x="359" fg:w="1"/><text x="29.1550%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="28.9050%" y="453" width="0.0805%" height="15" fill="rgb(234,26,45)" fg:x="359" fg:w="1"/><text x="29.1550%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.9050%" y="437" width="0.0805%" height="15" fill="rgb(249,11,32)" fg:x="359" fg:w="1"/><text x="29.1550%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::fashion::model::Wearing&gt;&gt; (1 samples, 0.08%)</title><rect x="28.9855%" y="581" width="0.0805%" height="15" fill="rgb(249,162,33)" fg:x="360" fg:w="1"/><text x="29.2355%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (184 samples, 14.81%)</title><rect x="14.3317%" y="629" width="14.8148%" height="15" fill="rgb(232,4,32)" fg:x="178" fg:w="184"/><text x="14.5817%" y="639.50">plugins_core::build::Bu..</text></g><g><title>plugins_core::build::Build::wearing (15 samples, 1.21%)</title><rect x="27.9388%" y="613" width="1.2077%" height="15" fill="rgb(212,5,45)" fg:x="347" fg:w="15"/><text x="28.1888%" y="623.50"></text></g><g><title>plugins_core::tools::set_wearing (2 samples, 0.16%)</title><rect x="28.9855%" y="597" width="0.1610%" height="15" fill="rgb(227,95,13)" fg:x="360" fg:w="2"/><text x="29.2355%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.0660%" y="581" width="0.0805%" height="15" fill="rgb(223,205,10)" fg:x="361" fg:w="1"/><text x="29.3160%" y="591.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (1 samples, 0.08%)</title><rect x="29.0660%" y="565" width="0.0805%" height="15" fill="rgb(222,178,8)" fg:x="361" fg:w="1"/><text x="29.3160%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="29.1465%" y="629" width="0.0805%" height="15" fill="rgb(216,13,22)" fg:x="362" fg:w="1"/><text x="29.3965%" y="639.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="29.1465%" y="613" width="0.0805%" height="15" fill="rgb(240,167,12)" fg:x="362" fg:w="1"/><text x="29.3965%" y="623.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="29.2271%" y="581" width="0.0805%" height="15" fill="rgb(235,68,35)" fg:x="363" fg:w="1"/><text x="29.4771%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.2271%" y="565" width="0.0805%" height="15" fill="rgb(253,40,27)" fg:x="363" fg:w="1"/><text x="29.4771%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.2271%" y="549" width="0.0805%" height="15" fill="rgb(214,19,28)" fg:x="363" fg:w="1"/><text x="29.4771%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="29.2271%" y="533" width="0.0805%" height="15" fill="rgb(210,167,45)" fg:x="363" fg:w="1"/><text x="29.4771%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2271%" y="517" width="0.0805%" height="15" fill="rgb(232,97,40)" fg:x="363" fg:w="1"/><text x="29.4771%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.3076%" y="565" width="0.0805%" height="15" fill="rgb(250,35,23)" fg:x="364" fg:w="1"/><text x="29.5576%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="29.2271%" y="597" width="0.2415%" height="15" fill="rgb(248,47,53)" fg:x="363" fg:w="3"/><text x="29.4771%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="29.3076%" y="581" width="0.1610%" height="15" fill="rgb(226,58,50)" fg:x="364" fg:w="2"/><text x="29.5576%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="29.3881%" y="565" width="0.0805%" height="15" fill="rgb(217,105,26)" fg:x="365" fg:w="1"/><text x="29.6381%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.3881%" y="549" width="0.0805%" height="15" fill="rgb(208,64,1)" fg:x="365" fg:w="1"/><text x="29.6381%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="29.4686%" y="565" width="0.0805%" height="15" fill="rgb(214,80,1)" fg:x="366" fg:w="1"/><text x="29.7186%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.4686%" y="549" width="0.0805%" height="15" fill="rgb(206,175,26)" fg:x="366" fg:w="1"/><text x="29.7186%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.4686%" y="533" width="0.0805%" height="15" fill="rgb(235,156,37)" fg:x="366" fg:w="1"/><text x="29.7186%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.4686%" y="517" width="0.0805%" height="15" fill="rgb(213,100,9)" fg:x="366" fg:w="1"/><text x="29.7186%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="29.5491%" y="565" width="0.0805%" height="15" fill="rgb(241,15,13)" fg:x="367" fg:w="1"/><text x="29.7991%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="29.5491%" y="549" width="0.0805%" height="15" fill="rgb(205,97,43)" fg:x="367" fg:w="1"/><text x="29.7991%" y="559.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="29.6296%" y="517" width="0.0805%" height="15" fill="rgb(216,106,32)" fg:x="368" fg:w="1"/><text x="29.8796%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.6296%" y="501" width="0.0805%" height="15" fill="rgb(226,200,8)" fg:x="368" fg:w="1"/><text x="29.8796%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="29.6296%" y="485" width="0.0805%" height="15" fill="rgb(244,54,29)" fg:x="368" fg:w="1"/><text x="29.8796%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.6296%" y="469" width="0.0805%" height="15" fill="rgb(252,169,12)" fg:x="368" fg:w="1"/><text x="29.8796%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="29.6296%" y="453" width="0.0805%" height="15" fill="rgb(231,199,11)" fg:x="368" fg:w="1"/><text x="29.8796%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="29.6296%" y="549" width="0.2415%" height="15" fill="rgb(233,191,18)" fg:x="368" fg:w="3"/><text x="29.8796%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="29.6296%" y="533" width="0.2415%" height="15" fill="rgb(215,83,47)" fg:x="368" fg:w="3"/><text x="29.8796%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.7101%" y="517" width="0.1610%" height="15" fill="rgb(251,67,19)" fg:x="369" fg:w="2"/><text x="29.9601%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.7907%" y="501" width="0.0805%" height="15" fill="rgb(240,7,20)" fg:x="370" fg:w="1"/><text x="30.0407%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7907%" y="485" width="0.0805%" height="15" fill="rgb(210,150,26)" fg:x="370" fg:w="1"/><text x="30.0407%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="29.6296%" y="565" width="0.3221%" height="15" fill="rgb(228,75,42)" fg:x="368" fg:w="4"/><text x="29.8796%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="29.8712%" y="549" width="0.0805%" height="15" fill="rgb(237,134,48)" fg:x="371" fg:w="1"/><text x="30.1212%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.8712%" y="533" width="0.0805%" height="15" fill="rgb(205,80,50)" fg:x="371" fg:w="1"/><text x="30.1212%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.8712%" y="517" width="0.0805%" height="15" fill="rgb(217,74,48)" fg:x="371" fg:w="1"/><text x="30.1212%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.0322%" y="549" width="0.0805%" height="15" fill="rgb(205,82,50)" fg:x="373" fg:w="1"/><text x="30.2822%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.0322%" y="533" width="0.0805%" height="15" fill="rgb(228,1,33)" fg:x="373" fg:w="1"/><text x="30.2822%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="30.0322%" y="517" width="0.0805%" height="15" fill="rgb(214,50,23)" fg:x="373" fg:w="1"/><text x="30.2822%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.0322%" y="501" width="0.0805%" height="15" fill="rgb(210,62,9)" fg:x="373" fg:w="1"/><text x="30.2822%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="30.0322%" y="485" width="0.0805%" height="15" fill="rgb(210,104,37)" fg:x="373" fg:w="1"/><text x="30.2822%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.0322%" y="469" width="0.0805%" height="15" fill="rgb(232,104,43)" fg:x="373" fg:w="1"/><text x="30.2822%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="30.0322%" y="453" width="0.0805%" height="15" fill="rgb(244,52,6)" fg:x="373" fg:w="1"/><text x="30.2822%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.0322%" y="437" width="0.0805%" height="15" fill="rgb(211,174,52)" fg:x="373" fg:w="1"/><text x="30.2822%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="29.9517%" y="565" width="0.2415%" height="15" fill="rgb(229,48,4)" fg:x="372" fg:w="3"/><text x="30.2017%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.1127%" y="549" width="0.0805%" height="15" fill="rgb(205,155,16)" fg:x="374" fg:w="1"/><text x="30.3627%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.1127%" y="533" width="0.0805%" height="15" fill="rgb(211,141,53)" fg:x="374" fg:w="1"/><text x="30.3627%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.1127%" y="517" width="0.0805%" height="15" fill="rgb(240,148,11)" fg:x="374" fg:w="1"/><text x="30.3627%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.1127%" y="501" width="0.0805%" height="15" fill="rgb(214,45,23)" fg:x="374" fg:w="1"/><text x="30.3627%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="30.1127%" y="485" width="0.0805%" height="15" fill="rgb(248,74,26)" fg:x="374" fg:w="1"/><text x="30.3627%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.1127%" y="469" width="0.0805%" height="15" fill="rgb(218,121,16)" fg:x="374" fg:w="1"/><text x="30.3627%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.1127%" y="453" width="0.0805%" height="15" fill="rgb(218,10,47)" fg:x="374" fg:w="1"/><text x="30.3627%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.1127%" y="437" width="0.0805%" height="15" fill="rgb(227,99,14)" fg:x="374" fg:w="1"/><text x="30.3627%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="30.1127%" y="421" width="0.0805%" height="15" fill="rgb(229,83,46)" fg:x="374" fg:w="1"/><text x="30.3627%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="30.1127%" y="405" width="0.0805%" height="15" fill="rgb(228,25,1)" fg:x="374" fg:w="1"/><text x="30.3627%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.1127%" y="389" width="0.0805%" height="15" fill="rgb(252,190,15)" fg:x="374" fg:w="1"/><text x="30.3627%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.1932%" y="533" width="0.0805%" height="15" fill="rgb(213,103,51)" fg:x="375" fg:w="1"/><text x="30.4432%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.1932%" y="517" width="0.0805%" height="15" fill="rgb(220,38,44)" fg:x="375" fg:w="1"/><text x="30.4432%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="30.1932%" y="501" width="0.0805%" height="15" fill="rgb(210,45,26)" fg:x="375" fg:w="1"/><text x="30.4432%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.1932%" y="485" width="0.0805%" height="15" fill="rgb(205,95,48)" fg:x="375" fg:w="1"/><text x="30.4432%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.1932%" y="469" width="0.0805%" height="15" fill="rgb(225,179,37)" fg:x="375" fg:w="1"/><text x="30.4432%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.1932%" y="453" width="0.0805%" height="15" fill="rgb(230,209,3)" fg:x="375" fg:w="1"/><text x="30.4432%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.1932%" y="437" width="0.0805%" height="15" fill="rgb(248,12,46)" fg:x="375" fg:w="1"/><text x="30.4432%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.89%)</title><rect x="29.4686%" y="581" width="0.8857%" height="15" fill="rgb(234,18,0)" fg:x="366" fg:w="11"/><text x="29.7186%" y="591.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="30.1932%" y="565" width="0.1610%" height="15" fill="rgb(238,197,14)" fg:x="375" fg:w="2"/><text x="30.4432%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="30.1932%" y="549" width="0.1610%" height="15" fill="rgb(251,162,48)" fg:x="375" fg:w="2"/><text x="30.4432%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="30.2738%" y="533" width="0.0805%" height="15" fill="rgb(237,73,42)" fg:x="376" fg:w="1"/><text x="30.5238%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.2738%" y="517" width="0.0805%" height="15" fill="rgb(211,108,8)" fg:x="376" fg:w="1"/><text x="30.5238%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.2738%" y="501" width="0.0805%" height="15" fill="rgb(213,45,22)" fg:x="376" fg:w="1"/><text x="30.5238%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.2738%" y="485" width="0.0805%" height="15" fill="rgb(252,154,5)" fg:x="376" fg:w="1"/><text x="30.5238%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.2738%" y="469" width="0.0805%" height="15" fill="rgb(221,79,52)" fg:x="376" fg:w="1"/><text x="30.5238%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.2738%" y="453" width="0.0805%" height="15" fill="rgb(229,220,36)" fg:x="376" fg:w="1"/><text x="30.5238%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (14 samples, 1.13%)</title><rect x="29.4686%" y="597" width="1.1272%" height="15" fill="rgb(211,17,16)" fg:x="366" fg:w="14"/><text x="29.7186%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="30.3543%" y="581" width="0.2415%" height="15" fill="rgb(222,55,31)" fg:x="377" fg:w="3"/><text x="30.6043%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="30.3543%" y="565" width="0.2415%" height="15" fill="rgb(221,221,31)" fg:x="377" fg:w="3"/><text x="30.6043%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.4348%" y="549" width="0.1610%" height="15" fill="rgb(227,168,26)" fg:x="378" fg:w="2"/><text x="30.6848%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.4348%" y="533" width="0.1610%" height="15" fill="rgb(224,139,9)" fg:x="378" fg:w="2"/><text x="30.6848%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5153%" y="517" width="0.0805%" height="15" fill="rgb(254,172,0)" fg:x="379" fg:w="1"/><text x="30.7653%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.5153%" y="501" width="0.0805%" height="15" fill="rgb(235,203,1)" fg:x="379" fg:w="1"/><text x="30.7653%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.5153%" y="485" width="0.0805%" height="15" fill="rgb(216,205,24)" fg:x="379" fg:w="1"/><text x="30.7653%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.5153%" y="469" width="0.0805%" height="15" fill="rgb(233,24,6)" fg:x="379" fg:w="1"/><text x="30.7653%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.5153%" y="453" width="0.0805%" height="15" fill="rgb(244,110,9)" fg:x="379" fg:w="1"/><text x="30.7653%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.5153%" y="437" width="0.0805%" height="15" fill="rgb(239,222,42)" fg:x="379" fg:w="1"/><text x="30.7653%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.5153%" y="421" width="0.0805%" height="15" fill="rgb(218,145,13)" fg:x="379" fg:w="1"/><text x="30.7653%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.5153%" y="405" width="0.0805%" height="15" fill="rgb(207,69,11)" fg:x="379" fg:w="1"/><text x="30.7653%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.5153%" y="389" width="0.0805%" height="15" fill="rgb(220,223,22)" fg:x="379" fg:w="1"/><text x="30.7653%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.5153%" y="373" width="0.0805%" height="15" fill="rgb(245,102,5)" fg:x="379" fg:w="1"/><text x="30.7653%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.5153%" y="357" width="0.0805%" height="15" fill="rgb(211,148,2)" fg:x="379" fg:w="1"/><text x="30.7653%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.5153%" y="341" width="0.0805%" height="15" fill="rgb(241,13,44)" fg:x="379" fg:w="1"/><text x="30.7653%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.5153%" y="325" width="0.0805%" height="15" fill="rgb(219,137,21)" fg:x="379" fg:w="1"/><text x="30.7653%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="30.6763%" y="581" width="0.0805%" height="15" fill="rgb(242,206,5)" fg:x="381" fg:w="1"/><text x="30.9263%" y="591.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="30.6763%" y="565" width="0.0805%" height="15" fill="rgb(217,114,22)" fg:x="381" fg:w="1"/><text x="30.9263%" y="575.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="30.6763%" y="549" width="0.0805%" height="15" fill="rgb(253,206,42)" fg:x="381" fg:w="1"/><text x="30.9263%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (20 samples, 1.61%)</title><rect x="29.2271%" y="629" width="1.6103%" height="15" fill="rgb(236,102,18)" fg:x="363" fg:w="20"/><text x="29.4771%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (20 samples, 1.61%)</title><rect x="29.2271%" y="613" width="1.6103%" height="15" fill="rgb(208,59,49)" fg:x="363" fg:w="20"/><text x="29.4771%" y="623.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="30.5958%" y="597" width="0.2415%" height="15" fill="rgb(215,194,28)" fg:x="380" fg:w="3"/><text x="30.8458%" y="607.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="30.7568%" y="581" width="0.0805%" height="15" fill="rgb(243,207,11)" fg:x="382" fg:w="1"/><text x="31.0068%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="30.7568%" y="565" width="0.0805%" height="15" fill="rgb(254,179,35)" fg:x="382" fg:w="1"/><text x="31.0068%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7568%" y="549" width="0.0805%" height="15" fill="rgb(235,97,3)" fg:x="382" fg:w="1"/><text x="31.0068%" y="559.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="30.9179%" y="597" width="0.0805%" height="15" fill="rgb(215,155,33)" fg:x="384" fg:w="1"/><text x="31.1679%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.9179%" y="581" width="0.0805%" height="15" fill="rgb(223,128,12)" fg:x="384" fg:w="1"/><text x="31.1679%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="30.9179%" y="565" width="0.0805%" height="15" fill="rgb(208,157,18)" fg:x="384" fg:w="1"/><text x="31.1679%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.9179%" y="549" width="0.0805%" height="15" fill="rgb(249,70,54)" fg:x="384" fg:w="1"/><text x="31.1679%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="30.9179%" y="533" width="0.0805%" height="15" fill="rgb(244,118,24)" fg:x="384" fg:w="1"/><text x="31.1679%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9984%" y="581" width="0.0805%" height="15" fill="rgb(211,54,0)" fg:x="385" fg:w="1"/><text x="31.2484%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="30.8374%" y="613" width="0.3221%" height="15" fill="rgb(245,137,45)" fg:x="383" fg:w="4"/><text x="31.0874%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.9984%" y="597" width="0.1610%" height="15" fill="rgb(232,154,31)" fg:x="385" fg:w="2"/><text x="31.2484%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.0789%" y="581" width="0.0805%" height="15" fill="rgb(253,6,39)" fg:x="386" fg:w="1"/><text x="31.3289%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0789%" y="565" width="0.0805%" height="15" fill="rgb(234,183,24)" fg:x="386" fg:w="1"/><text x="31.3289%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.0789%" y="549" width="0.0805%" height="15" fill="rgb(252,84,40)" fg:x="386" fg:w="1"/><text x="31.3289%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0789%" y="533" width="0.0805%" height="15" fill="rgb(224,65,2)" fg:x="386" fg:w="1"/><text x="31.3289%" y="543.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="31.0789%" y="517" width="0.0805%" height="15" fill="rgb(229,38,24)" fg:x="386" fg:w="1"/><text x="31.3289%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.1594%" y="549" width="0.0805%" height="15" fill="rgb(218,131,50)" fg:x="387" fg:w="1"/><text x="31.4094%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="31.2399%" y="485" width="0.0805%" height="15" fill="rgb(233,106,18)" fg:x="388" fg:w="1"/><text x="31.4899%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.2399%" y="469" width="0.0805%" height="15" fill="rgb(220,216,11)" fg:x="388" fg:w="1"/><text x="31.4899%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.2399%" y="453" width="0.0805%" height="15" fill="rgb(251,100,45)" fg:x="388" fg:w="1"/><text x="31.4899%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="31.1594%" y="581" width="0.2415%" height="15" fill="rgb(235,143,32)" fg:x="387" fg:w="3"/><text x="31.4094%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.1594%" y="565" width="0.2415%" height="15" fill="rgb(248,124,34)" fg:x="387" fg:w="3"/><text x="31.4094%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="31.2399%" y="549" width="0.1610%" height="15" fill="rgb(225,221,4)" fg:x="388" fg:w="2"/><text x="31.4899%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.2399%" y="533" width="0.1610%" height="15" fill="rgb(242,27,43)" fg:x="388" fg:w="2"/><text x="31.4899%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="31.2399%" y="517" width="0.1610%" height="15" fill="rgb(227,54,8)" fg:x="388" fg:w="2"/><text x="31.4899%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.2399%" y="501" width="0.1610%" height="15" fill="rgb(253,139,49)" fg:x="388" fg:w="2"/><text x="31.4899%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.3205%" y="485" width="0.0805%" height="15" fill="rgb(231,26,43)" fg:x="389" fg:w="1"/><text x="31.5705%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.3205%" y="469" width="0.0805%" height="15" fill="rgb(207,121,39)" fg:x="389" fg:w="1"/><text x="31.5705%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.4010%" y="581" width="0.0805%" height="15" fill="rgb(223,101,35)" fg:x="390" fg:w="1"/><text x="31.6510%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="31.4815%" y="533" width="0.0805%" height="15" fill="rgb(232,87,23)" fg:x="391" fg:w="1"/><text x="31.7315%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.4815%" y="517" width="0.0805%" height="15" fill="rgb(225,180,29)" fg:x="391" fg:w="1"/><text x="31.7315%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="31.4815%" y="565" width="0.1610%" height="15" fill="rgb(225,25,17)" fg:x="391" fg:w="2"/><text x="31.7315%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="31.4815%" y="549" width="0.1610%" height="15" fill="rgb(223,8,52)" fg:x="391" fg:w="2"/><text x="31.7315%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.5620%" y="533" width="0.0805%" height="15" fill="rgb(246,42,21)" fg:x="392" fg:w="1"/><text x="31.8120%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.5620%" y="517" width="0.0805%" height="15" fill="rgb(205,64,43)" fg:x="392" fg:w="1"/><text x="31.8120%" y="527.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="31.6425%" y="565" width="0.1610%" height="15" fill="rgb(221,160,13)" fg:x="393" fg:w="2"/><text x="31.8925%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.6425%" y="549" width="0.1610%" height="15" fill="rgb(239,58,35)" fg:x="393" fg:w="2"/><text x="31.8925%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.6425%" y="533" width="0.1610%" height="15" fill="rgb(251,26,40)" fg:x="393" fg:w="2"/><text x="31.8925%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="31.7230%" y="517" width="0.0805%" height="15" fill="rgb(247,0,4)" fg:x="394" fg:w="1"/><text x="31.9730%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="31.4815%" y="581" width="0.4026%" height="15" fill="rgb(218,130,10)" fg:x="391" fg:w="5"/><text x="31.7315%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="31.8035%" y="565" width="0.0805%" height="15" fill="rgb(239,32,7)" fg:x="395" fg:w="1"/><text x="32.0535%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.8841%" y="565" width="0.0805%" height="15" fill="rgb(210,192,24)" fg:x="396" fg:w="1"/><text x="32.1341%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.8841%" y="549" width="0.0805%" height="15" fill="rgb(226,212,17)" fg:x="396" fg:w="1"/><text x="32.1341%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.8841%" y="533" width="0.0805%" height="15" fill="rgb(219,201,28)" fg:x="396" fg:w="1"/><text x="32.1341%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.8841%" y="517" width="0.0805%" height="15" fill="rgb(235,207,41)" fg:x="396" fg:w="1"/><text x="32.1341%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.8841%" y="501" width="0.0805%" height="15" fill="rgb(241,95,54)" fg:x="396" fg:w="1"/><text x="32.1341%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.8841%" y="485" width="0.0805%" height="15" fill="rgb(248,12,23)" fg:x="396" fg:w="1"/><text x="32.1341%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="31.8841%" y="469" width="0.0805%" height="15" fill="rgb(228,173,4)" fg:x="396" fg:w="1"/><text x="32.1341%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.9646%" y="533" width="0.0805%" height="15" fill="rgb(254,99,5)" fg:x="397" fg:w="1"/><text x="32.2146%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="31.8841%" y="581" width="0.2415%" height="15" fill="rgb(212,184,17)" fg:x="396" fg:w="3"/><text x="32.1341%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="31.9646%" y="565" width="0.1610%" height="15" fill="rgb(252,174,1)" fg:x="397" fg:w="2"/><text x="32.2146%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="31.9646%" y="549" width="0.1610%" height="15" fill="rgb(241,118,51)" fg:x="397" fg:w="2"/><text x="32.2146%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="32.0451%" y="533" width="0.0805%" height="15" fill="rgb(227,94,47)" fg:x="398" fg:w="1"/><text x="32.2951%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.0451%" y="517" width="0.0805%" height="15" fill="rgb(229,104,2)" fg:x="398" fg:w="1"/><text x="32.2951%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="32.0451%" y="501" width="0.0805%" height="15" fill="rgb(219,28,31)" fg:x="398" fg:w="1"/><text x="32.2951%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.0451%" y="485" width="0.0805%" height="15" fill="rgb(233,109,36)" fg:x="398" fg:w="1"/><text x="32.2951%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="32.0451%" y="469" width="0.0805%" height="15" fill="rgb(246,88,11)" fg:x="398" fg:w="1"/><text x="32.2951%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.0451%" y="453" width="0.0805%" height="15" fill="rgb(209,212,17)" fg:x="398" fg:w="1"/><text x="32.2951%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="31.1594%" y="597" width="1.0467%" height="15" fill="rgb(243,59,29)" fg:x="387" fg:w="13"/><text x="31.4094%" y="607.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="32.1256%" y="581" width="0.0805%" height="15" fill="rgb(244,205,48)" fg:x="399" fg:w="1"/><text x="32.3756%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="32.1256%" y="565" width="0.0805%" height="15" fill="rgb(227,30,6)" fg:x="399" fg:w="1"/><text x="32.3756%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="32.1256%" y="549" width="0.0805%" height="15" fill="rgb(220,205,48)" fg:x="399" fg:w="1"/><text x="32.3756%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.29%)</title><rect x="31.1594%" y="613" width="1.2882%" height="15" fill="rgb(250,94,14)" fg:x="387" fg:w="16"/><text x="31.4094%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="32.2061%" y="597" width="0.2415%" height="15" fill="rgb(216,119,42)" fg:x="400" fg:w="3"/><text x="32.4561%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.2061%" y="581" width="0.2415%" height="15" fill="rgb(232,155,0)" fg:x="400" fg:w="3"/><text x="32.4561%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="32.2061%" y="565" width="0.2415%" height="15" fill="rgb(212,24,32)" fg:x="400" fg:w="3"/><text x="32.4561%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="32.2061%" y="549" width="0.2415%" height="15" fill="rgb(216,69,20)" fg:x="400" fg:w="3"/><text x="32.4561%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="32.2061%" y="533" width="0.2415%" height="15" fill="rgb(229,73,31)" fg:x="400" fg:w="3"/><text x="32.4561%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="32.2061%" y="517" width="0.2415%" height="15" fill="rgb(224,219,20)" fg:x="400" fg:w="3"/><text x="32.4561%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="32.3671%" y="501" width="0.0805%" height="15" fill="rgb(215,146,41)" fg:x="402" fg:w="1"/><text x="32.6171%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.3671%" y="485" width="0.0805%" height="15" fill="rgb(244,71,31)" fg:x="402" fg:w="1"/><text x="32.6171%" y="495.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (345 samples, 27.78%)</title><rect x="4.7504%" y="645" width="27.7778%" height="15" fill="rgb(224,24,11)" fg:x="59" fg:w="345"/><text x="5.0004%" y="655.50">&lt;tests::HoldingKeyInVessel as tests::WorldFix..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (21 samples, 1.69%)</title><rect x="30.8374%" y="629" width="1.6908%" height="15" fill="rgb(229,76,15)" fg:x="383" fg:w="21"/><text x="31.0874%" y="639.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="32.4477%" y="613" width="0.0805%" height="15" fill="rgb(209,93,2)" fg:x="403" fg:w="1"/><text x="32.6977%" y="623.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="32.4477%" y="597" width="0.0805%" height="15" fill="rgb(216,200,50)" fg:x="403" fg:w="1"/><text x="32.6977%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="32.5282%" y="645" width="0.0805%" height="15" fill="rgb(211,67,34)" fg:x="404" fg:w="1"/><text x="32.7782%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="32.5282%" y="629" width="0.0805%" height="15" fill="rgb(225,87,47)" fg:x="404" fg:w="1"/><text x="32.7782%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="32.6087%" y="629" width="0.1610%" height="15" fill="rgb(217,185,16)" fg:x="405" fg:w="2"/><text x="32.8587%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="32.6087%" y="613" width="0.1610%" height="15" fill="rgb(205,0,0)" fg:x="405" fg:w="2"/><text x="32.8587%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="32.6087%" y="597" width="0.1610%" height="15" fill="rgb(207,116,45)" fg:x="405" fg:w="2"/><text x="32.8587%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="32.6087%" y="581" width="0.1610%" height="15" fill="rgb(221,156,26)" fg:x="405" fg:w="2"/><text x="32.8587%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="32.6087%" y="565" width="0.1610%" height="15" fill="rgb(213,140,4)" fg:x="405" fg:w="2"/><text x="32.8587%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="32.6892%" y="549" width="0.0805%" height="15" fill="rgb(231,224,15)" fg:x="406" fg:w="1"/><text x="32.9392%" y="559.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="32.7697%" y="629" width="0.0805%" height="15" fill="rgb(244,76,20)" fg:x="407" fg:w="1"/><text x="33.0197%" y="639.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="32.7697%" y="613" width="0.0805%" height="15" fill="rgb(238,117,7)" fg:x="407" fg:w="1"/><text x="33.0197%" y="623.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="32.7697%" y="597" width="0.0805%" height="15" fill="rgb(235,1,10)" fg:x="407" fg:w="1"/><text x="33.0197%" y="607.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="32.7697%" y="581" width="0.0805%" height="15" fill="rgb(216,165,6)" fg:x="407" fg:w="1"/><text x="33.0197%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="32.7697%" y="565" width="0.0805%" height="15" fill="rgb(246,91,35)" fg:x="407" fg:w="1"/><text x="33.0197%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="32.7697%" y="549" width="0.0805%" height="15" fill="rgb(228,96,24)" fg:x="407" fg:w="1"/><text x="33.0197%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="32.7697%" y="533" width="0.0805%" height="15" fill="rgb(254,217,53)" fg:x="407" fg:w="1"/><text x="33.0197%" y="543.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="32.7697%" y="517" width="0.0805%" height="15" fill="rgb(209,60,0)" fg:x="407" fg:w="1"/><text x="33.0197%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="32.9308%" y="597" width="0.2415%" height="15" fill="rgb(250,93,26)" fg:x="409" fg:w="3"/><text x="33.1808%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.0918%" y="581" width="0.0805%" height="15" fill="rgb(211,9,40)" fg:x="411" fg:w="1"/><text x="33.3418%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.0918%" y="565" width="0.0805%" height="15" fill="rgb(242,57,20)" fg:x="411" fg:w="1"/><text x="33.3418%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="33.0918%" y="549" width="0.0805%" height="15" fill="rgb(248,85,48)" fg:x="411" fg:w="1"/><text x="33.3418%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="33.1723%" y="581" width="0.0805%" height="15" fill="rgb(212,117,2)" fg:x="412" fg:w="1"/><text x="33.4223%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.1723%" y="565" width="0.0805%" height="15" fill="rgb(243,19,3)" fg:x="412" fg:w="1"/><text x="33.4223%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="33.1723%" y="549" width="0.0805%" height="15" fill="rgb(232,217,24)" fg:x="412" fg:w="1"/><text x="33.4223%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="33.4138%" y="533" width="0.0805%" height="15" fill="rgb(224,175,40)" fg:x="415" fg:w="1"/><text x="33.6638%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="33.4138%" y="549" width="0.1610%" height="15" fill="rgb(212,162,32)" fg:x="415" fg:w="2"/><text x="33.6638%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="33.4944%" y="533" width="0.0805%" height="15" fill="rgb(215,9,4)" fg:x="416" fg:w="1"/><text x="33.7444%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="33.7359%" y="533" width="0.0805%" height="15" fill="rgb(242,42,7)" fg:x="419" fg:w="1"/><text x="33.9859%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="33.7359%" y="517" width="0.0805%" height="15" fill="rgb(242,184,45)" fg:x="419" fg:w="1"/><text x="33.9859%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="33.7359%" y="501" width="0.0805%" height="15" fill="rgb(228,111,51)" fg:x="419" fg:w="1"/><text x="33.9859%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="33.8164%" y="533" width="0.2415%" height="15" fill="rgb(236,147,17)" fg:x="420" fg:w="3"/><text x="34.0664%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="33.8969%" y="517" width="0.1610%" height="15" fill="rgb(210,75,22)" fg:x="421" fg:w="2"/><text x="34.1469%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="33.9775%" y="501" width="0.0805%" height="15" fill="rgb(217,159,45)" fg:x="422" fg:w="1"/><text x="34.2275%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="33.9775%" y="485" width="0.0805%" height="15" fill="rgb(245,165,53)" fg:x="422" fg:w="1"/><text x="34.2275%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.1385%" y="485" width="0.0805%" height="15" fill="rgb(251,190,50)" fg:x="424" fg:w="1"/><text x="34.3885%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="34.2190%" y="485" width="0.1610%" height="15" fill="rgb(208,203,29)" fg:x="425" fg:w="2"/><text x="34.4690%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="34.2190%" y="469" width="0.1610%" height="15" fill="rgb(207,209,35)" fg:x="425" fg:w="2"/><text x="34.4690%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="34.2190%" y="453" width="0.1610%" height="15" fill="rgb(230,144,49)" fg:x="425" fg:w="2"/><text x="34.4690%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="34.2190%" y="437" width="0.1610%" height="15" fill="rgb(229,31,6)" fg:x="425" fg:w="2"/><text x="34.4690%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="34.0580%" y="501" width="0.4831%" height="15" fill="rgb(251,129,24)" fg:x="423" fg:w="6"/><text x="34.3080%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="34.3800%" y="485" width="0.1610%" height="15" fill="rgb(235,105,15)" fg:x="427" fg:w="2"/><text x="34.6300%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="34.3800%" y="469" width="0.1610%" height="15" fill="rgb(216,52,43)" fg:x="427" fg:w="2"/><text x="34.6300%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="34.3800%" y="453" width="0.1610%" height="15" fill="rgb(238,144,41)" fg:x="427" fg:w="2"/><text x="34.6300%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="34.3800%" y="437" width="0.1610%" height="15" fill="rgb(243,63,9)" fg:x="427" fg:w="2"/><text x="34.6300%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.4605%" y="421" width="0.0805%" height="15" fill="rgb(246,208,1)" fg:x="428" fg:w="1"/><text x="34.7105%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="34.0580%" y="517" width="0.5636%" height="15" fill="rgb(233,182,18)" fg:x="423" fg:w="7"/><text x="34.3080%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.5411%" y="501" width="0.0805%" height="15" fill="rgb(242,224,8)" fg:x="429" fg:w="1"/><text x="34.7911%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.5411%" y="485" width="0.0805%" height="15" fill="rgb(243,54,37)" fg:x="429" fg:w="1"/><text x="34.7911%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="34.6216%" y="517" width="0.6441%" height="15" fill="rgb(233,192,12)" fg:x="430" fg:w="8"/><text x="34.8716%" y="527.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="34.7021%" y="501" width="0.5636%" height="15" fill="rgb(251,192,53)" fg:x="431" fg:w="7"/><text x="34.9521%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="35.0242%" y="485" width="0.2415%" height="15" fill="rgb(246,141,26)" fg:x="435" fg:w="3"/><text x="35.2742%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="35.0242%" y="469" width="0.2415%" height="15" fill="rgb(239,195,19)" fg:x="435" fg:w="3"/><text x="35.2742%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="35.1047%" y="453" width="0.1610%" height="15" fill="rgb(241,16,39)" fg:x="436" fg:w="2"/><text x="35.3547%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="35.1047%" y="437" width="0.1610%" height="15" fill="rgb(223,13,53)" fg:x="436" fg:w="2"/><text x="35.3547%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.1852%" y="421" width="0.0805%" height="15" fill="rgb(214,227,0)" fg:x="437" fg:w="1"/><text x="35.4352%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="35.2657%" y="501" width="0.1610%" height="15" fill="rgb(228,103,26)" fg:x="438" fg:w="2"/><text x="35.5157%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.2657%" y="485" width="0.1610%" height="15" fill="rgb(254,177,53)" fg:x="438" fg:w="2"/><text x="35.5157%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="35.2657%" y="469" width="0.1610%" height="15" fill="rgb(208,201,34)" fg:x="438" fg:w="2"/><text x="35.5157%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="35.2657%" y="453" width="0.1610%" height="15" fill="rgb(212,39,5)" fg:x="438" fg:w="2"/><text x="35.5157%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.4267%" y="485" width="0.0805%" height="15" fill="rgb(246,117,3)" fg:x="440" fg:w="1"/><text x="35.6767%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="35.5072%" y="485" width="0.1610%" height="15" fill="rgb(244,118,39)" fg:x="441" fg:w="2"/><text x="35.7572%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.5878%" y="469" width="0.0805%" height="15" fill="rgb(241,64,10)" fg:x="442" fg:w="1"/><text x="35.8378%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="35.2657%" y="517" width="0.4831%" height="15" fill="rgb(229,39,44)" fg:x="438" fg:w="6"/><text x="35.5157%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="35.4267%" y="501" width="0.3221%" height="15" fill="rgb(230,226,3)" fg:x="440" fg:w="4"/><text x="35.6767%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6683%" y="485" width="0.0805%" height="15" fill="rgb(222,13,42)" fg:x="443" fg:w="1"/><text x="35.9183%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.85%)</title><rect x="34.0580%" y="533" width="1.8519%" height="15" fill="rgb(247,180,54)" fg:x="423" fg:w="23"/><text x="34.3080%" y="543.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.7488%" y="517" width="0.1610%" height="15" fill="rgb(205,96,16)" fg:x="444" fg:w="2"/><text x="35.9988%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="35.7488%" y="501" width="0.1610%" height="15" fill="rgb(205,100,21)" fg:x="444" fg:w="2"/><text x="35.9988%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="35.7488%" y="485" width="0.1610%" height="15" fill="rgb(248,51,4)" fg:x="444" fg:w="2"/><text x="35.9988%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="35.9098%" y="501" width="0.1610%" height="15" fill="rgb(217,197,30)" fg:x="446" fg:w="2"/><text x="36.1598%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="35.9098%" y="485" width="0.1610%" height="15" fill="rgb(240,179,40)" fg:x="446" fg:w="2"/><text x="36.1598%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="35.9098%" y="469" width="0.1610%" height="15" fill="rgb(212,185,35)" fg:x="446" fg:w="2"/><text x="36.1598%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="35.9098%" y="453" width="0.1610%" height="15" fill="rgb(251,222,31)" fg:x="446" fg:w="2"/><text x="36.1598%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (34 samples, 2.74%)</title><rect x="33.4138%" y="565" width="2.7375%" height="15" fill="rgb(208,140,36)" fg:x="415" fg:w="34"/><text x="33.6638%" y="575.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.58%)</title><rect x="33.5749%" y="549" width="2.5765%" height="15" fill="rgb(220,148,1)" fg:x="417" fg:w="32"/><text x="33.8249%" y="559.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="35.9098%" y="533" width="0.2415%" height="15" fill="rgb(254,4,28)" fg:x="446" fg:w="3"/><text x="36.1598%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="35.9098%" y="517" width="0.2415%" height="15" fill="rgb(222,185,44)" fg:x="446" fg:w="3"/><text x="36.1598%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="36.0709%" y="501" width="0.0805%" height="15" fill="rgb(215,74,39)" fg:x="448" fg:w="1"/><text x="36.3209%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.2319%" y="533" width="0.0805%" height="15" fill="rgb(247,86,4)" fg:x="450" fg:w="1"/><text x="36.4819%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="36.1514%" y="565" width="0.4831%" height="15" fill="rgb(231,105,32)" fg:x="449" fg:w="6"/><text x="36.4014%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="36.2319%" y="549" width="0.4026%" height="15" fill="rgb(222,65,35)" fg:x="450" fg:w="5"/><text x="36.4819%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="36.3124%" y="533" width="0.3221%" height="15" fill="rgb(218,145,35)" fg:x="451" fg:w="4"/><text x="36.5624%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.4734%" y="517" width="0.1610%" height="15" fill="rgb(208,7,15)" fg:x="453" fg:w="2"/><text x="36.7234%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.4734%" y="501" width="0.1610%" height="15" fill="rgb(209,83,13)" fg:x="453" fg:w="2"/><text x="36.7234%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.4734%" y="485" width="0.1610%" height="15" fill="rgb(218,3,10)" fg:x="453" fg:w="2"/><text x="36.7234%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.6345%" y="501" width="0.0805%" height="15" fill="rgb(211,219,4)" fg:x="455" fg:w="1"/><text x="36.8845%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="36.7150%" y="501" width="0.1610%" height="15" fill="rgb(228,194,12)" fg:x="456" fg:w="2"/><text x="36.9650%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="36.7150%" y="485" width="0.1610%" height="15" fill="rgb(210,175,7)" fg:x="456" fg:w="2"/><text x="36.9650%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="36.9565%" y="485" width="0.1610%" height="15" fill="rgb(243,132,6)" fg:x="459" fg:w="2"/><text x="37.2065%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.1176%" y="485" width="0.0805%" height="15" fill="rgb(207,72,18)" fg:x="461" fg:w="1"/><text x="37.3676%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="37.3591%" y="469" width="0.1610%" height="15" fill="rgb(236,1,18)" fg:x="464" fg:w="2"/><text x="37.6091%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.5201%" y="453" width="0.0805%" height="15" fill="rgb(227,0,18)" fg:x="466" fg:w="1"/><text x="37.7701%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.6006%" y="453" width="0.0805%" height="15" fill="rgb(247,37,5)" fg:x="467" fg:w="1"/><text x="37.8506%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="37.6812%" y="453" width="0.0805%" height="15" fill="rgb(237,179,24)" fg:x="468" fg:w="1"/><text x="37.9312%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.6812%" y="437" width="0.0805%" height="15" fill="rgb(226,53,20)" fg:x="468" fg:w="1"/><text x="37.9312%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.6812%" y="421" width="0.0805%" height="15" fill="rgb(247,75,7)" fg:x="468" fg:w="1"/><text x="37.9312%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="36.6345%" y="533" width="1.2077%" height="15" fill="rgb(233,96,12)" fg:x="455" fg:w="15"/><text x="36.8845%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.21%)</title><rect x="36.6345%" y="517" width="1.2077%" height="15" fill="rgb(224,125,0)" fg:x="455" fg:w="15"/><text x="36.8845%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="36.8760%" y="501" width="0.9662%" height="15" fill="rgb(224,92,25)" fg:x="458" fg:w="12"/><text x="37.1260%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="37.1981%" y="485" width="0.6441%" height="15" fill="rgb(224,42,24)" fg:x="462" fg:w="8"/><text x="37.4481%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="37.5201%" y="469" width="0.3221%" height="15" fill="rgb(234,132,49)" fg:x="466" fg:w="4"/><text x="37.7701%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.7617%" y="453" width="0.0805%" height="15" fill="rgb(248,100,35)" fg:x="469" fg:w="1"/><text x="38.0117%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.7617%" y="437" width="0.0805%" height="15" fill="rgb(239,94,40)" fg:x="469" fg:w="1"/><text x="38.0117%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.8422%" y="533" width="0.0805%" height="15" fill="rgb(235,139,28)" fg:x="470" fg:w="1"/><text x="38.0922%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="38.1643%" y="453" width="0.1610%" height="15" fill="rgb(217,144,7)" fg:x="474" fg:w="2"/><text x="38.4143%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="37.9227%" y="517" width="0.4831%" height="15" fill="rgb(227,55,4)" fg:x="471" fg:w="6"/><text x="38.1727%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="37.9227%" y="501" width="0.4831%" height="15" fill="rgb(252,82,54)" fg:x="471" fg:w="6"/><text x="38.1727%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="37.9227%" y="485" width="0.4831%" height="15" fill="rgb(245,172,4)" fg:x="471" fg:w="6"/><text x="38.1727%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="38.0837%" y="469" width="0.3221%" height="15" fill="rgb(207,26,27)" fg:x="473" fg:w="4"/><text x="38.3337%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="38.3253%" y="453" width="0.0805%" height="15" fill="rgb(252,98,18)" fg:x="476" fg:w="1"/><text x="38.5753%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (23 samples, 1.85%)</title><rect x="36.6345%" y="549" width="1.8519%" height="15" fill="rgb(244,8,26)" fg:x="455" fg:w="23"/><text x="36.8845%" y="559.50">&lt;..</text></g><g><title>treediff::diff::diff (7 samples, 0.56%)</title><rect x="37.9227%" y="533" width="0.5636%" height="15" fill="rgb(237,173,45)" fg:x="471" fg:w="7"/><text x="38.1727%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="38.4058%" y="517" width="0.0805%" height="15" fill="rgb(208,213,49)" fg:x="477" fg:w="1"/><text x="38.6558%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="38.4058%" y="501" width="0.0805%" height="15" fill="rgb(212,122,37)" fg:x="477" fg:w="1"/><text x="38.6558%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="38.6473%" y="517" width="0.3221%" height="15" fill="rgb(213,80,17)" fg:x="480" fg:w="4"/><text x="38.8973%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.8084%" y="501" width="0.1610%" height="15" fill="rgb(206,210,43)" fg:x="482" fg:w="2"/><text x="39.0584%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="38.8889%" y="485" width="0.0805%" height="15" fill="rgb(229,214,3)" fg:x="483" fg:w="1"/><text x="39.1389%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (3 samples, 0.24%)</title><rect x="38.9694%" y="517" width="0.2415%" height="15" fill="rgb(235,213,29)" fg:x="484" fg:w="3"/><text x="39.2194%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="38.9694%" y="501" width="0.2415%" height="15" fill="rgb(248,135,26)" fg:x="484" fg:w="3"/><text x="39.2194%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.2110%" y="485" width="0.0805%" height="15" fill="rgb(242,188,12)" fg:x="487" fg:w="1"/><text x="39.4610%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="39.2110%" y="517" width="0.2415%" height="15" fill="rgb(245,38,12)" fg:x="487" fg:w="3"/><text x="39.4610%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="39.2110%" y="501" width="0.2415%" height="15" fill="rgb(218,42,13)" fg:x="487" fg:w="3"/><text x="39.4610%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.2915%" y="485" width="0.1610%" height="15" fill="rgb(238,132,49)" fg:x="488" fg:w="2"/><text x="39.5415%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.2915%" y="469" width="0.1610%" height="15" fill="rgb(209,196,19)" fg:x="488" fg:w="2"/><text x="39.5415%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="39.9356%" y="469" width="0.4831%" height="15" fill="rgb(244,131,22)" fg:x="496" fg:w="6"/><text x="40.1856%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="40.0966%" y="453" width="0.3221%" height="15" fill="rgb(223,18,34)" fg:x="498" fg:w="4"/><text x="40.3466%" y="463.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="40.1771%" y="437" width="0.2415%" height="15" fill="rgb(252,124,54)" fg:x="499" fg:w="3"/><text x="40.4271%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.4992%" y="421" width="0.0805%" height="15" fill="rgb(229,106,42)" fg:x="503" fg:w="1"/><text x="40.7492%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.4992%" y="405" width="0.0805%" height="15" fill="rgb(221,129,1)" fg:x="503" fg:w="1"/><text x="40.7492%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="40.4187%" y="469" width="0.3221%" height="15" fill="rgb(229,74,15)" fg:x="502" fg:w="4"/><text x="40.6687%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="40.4187%" y="453" width="0.3221%" height="15" fill="rgb(210,206,50)" fg:x="502" fg:w="4"/><text x="40.6687%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="40.4992%" y="437" width="0.2415%" height="15" fill="rgb(251,114,31)" fg:x="503" fg:w="3"/><text x="40.7492%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="40.5797%" y="421" width="0.1610%" height="15" fill="rgb(215,225,28)" fg:x="504" fg:w="2"/><text x="40.8297%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6602%" y="405" width="0.0805%" height="15" fill="rgb(237,109,14)" fg:x="505" fg:w="1"/><text x="40.9102%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="40.9823%" y="453" width="0.0805%" height="15" fill="rgb(230,13,37)" fg:x="509" fg:w="1"/><text x="41.2323%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="41.1433%" y="437" width="0.2415%" height="15" fill="rgb(231,40,28)" fg:x="511" fg:w="3"/><text x="41.3933%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.2238%" y="421" width="0.1610%" height="15" fill="rgb(231,202,18)" fg:x="512" fg:w="2"/><text x="41.4738%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.2238%" y="405" width="0.1610%" height="15" fill="rgb(225,33,18)" fg:x="512" fg:w="2"/><text x="41.4738%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="41.3849%" y="437" width="0.0805%" height="15" fill="rgb(223,64,47)" fg:x="514" fg:w="1"/><text x="41.6349%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.6264%" y="373" width="0.0805%" height="15" fill="rgb(234,114,13)" fg:x="517" fg:w="1"/><text x="41.8764%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.6264%" y="405" width="0.1610%" height="15" fill="rgb(248,56,40)" fg:x="517" fg:w="2"/><text x="41.8764%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.6264%" y="389" width="0.1610%" height="15" fill="rgb(221,194,21)" fg:x="517" fg:w="2"/><text x="41.8764%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.7069%" y="373" width="0.0805%" height="15" fill="rgb(242,108,46)" fg:x="518" fg:w="1"/><text x="41.9569%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="41.4654%" y="421" width="0.4831%" height="15" fill="rgb(220,106,10)" fg:x="515" fg:w="6"/><text x="41.7154%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="41.7874%" y="405" width="0.1610%" height="15" fill="rgb(211,88,4)" fg:x="519" fg:w="2"/><text x="42.0374%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.17%)</title><rect x="39.8551%" y="485" width="2.1739%" height="15" fill="rgb(214,95,34)" fg:x="495" fg:w="27"/><text x="40.1051%" y="495.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.29%)</title><rect x="40.7407%" y="469" width="1.2882%" height="15" fill="rgb(250,160,33)" fg:x="506" fg:w="16"/><text x="40.9907%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.97%)</title><rect x="41.0628%" y="453" width="0.9662%" height="15" fill="rgb(225,29,10)" fg:x="510" fg:w="12"/><text x="41.3128%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="41.4654%" y="437" width="0.5636%" height="15" fill="rgb(224,28,30)" fg:x="515" fg:w="7"/><text x="41.7154%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.9485%" y="421" width="0.0805%" height="15" fill="rgb(231,77,4)" fg:x="521" fg:w="1"/><text x="42.1985%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (45 samples, 3.62%)</title><rect x="38.4863%" y="549" width="3.6232%" height="15" fill="rgb(209,63,21)" fg:x="478" fg:w="45"/><text x="38.7363%" y="559.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (43 samples, 3.46%)</title><rect x="38.6473%" y="533" width="3.4622%" height="15" fill="rgb(226,22,11)" fg:x="480" fg:w="43"/><text x="38.8973%" y="543.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (33 samples, 2.66%)</title><rect x="39.4525%" y="517" width="2.6570%" height="15" fill="rgb(216,82,30)" fg:x="490" fg:w="33"/><text x="39.7025%" y="527.50">se..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (29 samples, 2.33%)</title><rect x="39.7746%" y="501" width="2.3349%" height="15" fill="rgb(246,227,38)" fg:x="494" fg:w="29"/><text x="40.0246%" y="511.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="42.0290%" y="485" width="0.0805%" height="15" fill="rgb(251,203,53)" fg:x="522" fg:w="1"/><text x="42.2790%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="42.3510%" y="437" width="0.0805%" height="15" fill="rgb(254,101,1)" fg:x="526" fg:w="1"/><text x="42.6010%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="42.6731%" y="373" width="0.0805%" height="15" fill="rgb(241,180,5)" fg:x="530" fg:w="1"/><text x="42.9231%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="42.6731%" y="357" width="0.0805%" height="15" fill="rgb(218,168,4)" fg:x="530" fg:w="1"/><text x="42.9231%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="42.7536%" y="357" width="0.0805%" height="15" fill="rgb(224,223,32)" fg:x="531" fg:w="1"/><text x="43.0036%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="42.7536%" y="373" width="0.1610%" height="15" fill="rgb(236,106,22)" fg:x="531" fg:w="2"/><text x="43.0036%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.8341%" y="357" width="0.0805%" height="15" fill="rgb(206,121,5)" fg:x="532" fg:w="1"/><text x="43.0841%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="42.5926%" y="405" width="0.4026%" height="15" fill="rgb(233,87,28)" fg:x="529" fg:w="5"/><text x="42.8426%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="42.5926%" y="389" width="0.4026%" height="15" fill="rgb(236,137,17)" fg:x="529" fg:w="5"/><text x="42.8426%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.9147%" y="373" width="0.0805%" height="15" fill="rgb(209,183,38)" fg:x="533" fg:w="1"/><text x="43.1647%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="42.9952%" y="389" width="0.0805%" height="15" fill="rgb(206,162,44)" fg:x="534" fg:w="1"/><text x="43.2452%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9952%" y="373" width="0.0805%" height="15" fill="rgb(237,70,39)" fg:x="534" fg:w="1"/><text x="43.2452%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="43.0757%" y="373" width="0.0805%" height="15" fill="rgb(212,176,5)" fg:x="535" fg:w="1"/><text x="43.3257%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="43.0757%" y="389" width="0.1610%" height="15" fill="rgb(232,95,16)" fg:x="535" fg:w="2"/><text x="43.3257%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.1562%" y="373" width="0.0805%" height="15" fill="rgb(219,115,35)" fg:x="536" fg:w="1"/><text x="43.4062%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.05%)</title><rect x="42.2705%" y="453" width="1.0467%" height="15" fill="rgb(251,67,27)" fg:x="525" fg:w="13"/><text x="42.5205%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="42.4316%" y="437" width="0.8857%" height="15" fill="rgb(222,95,40)" fg:x="527" fg:w="11"/><text x="42.6816%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="42.5926%" y="421" width="0.7246%" height="15" fill="rgb(250,35,16)" fg:x="529" fg:w="9"/><text x="42.8426%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="42.9952%" y="405" width="0.3221%" height="15" fill="rgb(224,86,44)" fg:x="534" fg:w="4"/><text x="43.2452%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.2367%" y="389" width="0.0805%" height="15" fill="rgb(237,53,53)" fg:x="537" fg:w="1"/><text x="43.4867%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.2367%" y="373" width="0.0805%" height="15" fill="rgb(208,171,33)" fg:x="537" fg:w="1"/><text x="43.4867%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="43.2367%" y="357" width="0.0805%" height="15" fill="rgb(222,64,27)" fg:x="537" fg:w="1"/><text x="43.4867%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.3172%" y="453" width="0.0805%" height="15" fill="rgb(221,121,35)" fg:x="538" fg:w="1"/><text x="43.5672%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="43.3172%" y="437" width="0.0805%" height="15" fill="rgb(228,137,42)" fg:x="538" fg:w="1"/><text x="43.5672%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.37%)</title><rect x="42.1900%" y="485" width="1.3688%" height="15" fill="rgb(227,54,21)" fg:x="524" fg:w="17"/><text x="42.4400%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.37%)</title><rect x="42.1900%" y="469" width="1.3688%" height="15" fill="rgb(240,168,33)" fg:x="524" fg:w="17"/><text x="42.4400%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.3977%" y="453" width="0.1610%" height="15" fill="rgb(243,159,6)" fg:x="539" fg:w="2"/><text x="43.6477%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.3977%" y="437" width="0.1610%" height="15" fill="rgb(205,211,41)" fg:x="539" fg:w="2"/><text x="43.6477%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.4783%" y="421" width="0.0805%" height="15" fill="rgb(253,30,1)" fg:x="540" fg:w="1"/><text x="43.7283%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.5588%" y="485" width="0.0805%" height="15" fill="rgb(226,80,18)" fg:x="541" fg:w="1"/><text x="43.8088%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="43.5588%" y="469" width="0.0805%" height="15" fill="rgb(253,156,46)" fg:x="541" fg:w="1"/><text x="43.8088%" y="479.50"></text></g><g><title>engine::session::state::State::close (136 samples, 10.95%)</title><rect x="32.8502%" y="629" width="10.9501%" height="15" fill="rgb(248,87,27)" fg:x="408" fg:w="136"/><text x="33.1002%" y="639.50">engine::session:..</text></g><g><title>engine::session::state::State::flush_entities (135 samples, 10.87%)</title><rect x="32.9308%" y="613" width="10.8696%" height="15" fill="rgb(227,122,2)" fg:x="409" fg:w="135"/><text x="33.1808%" y="623.50">engine::session:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (132 samples, 10.63%)</title><rect x="33.1723%" y="597" width="10.6280%" height="15" fill="rgb(229,94,39)" fg:x="412" fg:w="132"/><text x="33.4223%" y="607.50">engine::session:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (131 samples, 10.55%)</title><rect x="33.2528%" y="581" width="10.5475%" height="15" fill="rgb(225,173,31)" fg:x="413" fg:w="131"/><text x="33.5028%" y="591.50">engine::session..</text></g><g><title>kernel::model::any_entity_changes (89 samples, 7.17%)</title><rect x="36.6345%" y="565" width="7.1659%" height="15" fill="rgb(239,176,30)" fg:x="455" fg:w="89"/><text x="36.8845%" y="575.50">kernel::mo..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (21 samples, 1.69%)</title><rect x="42.1095%" y="549" width="1.6908%" height="15" fill="rgb(212,104,21)" fg:x="523" fg:w="21"/><text x="42.3595%" y="559.50"></text></g><g><title>serde_json::de::from_trait (21 samples, 1.69%)</title><rect x="42.1095%" y="533" width="1.6908%" height="15" fill="rgb(240,209,40)" fg:x="523" fg:w="21"/><text x="42.3595%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.61%)</title><rect x="42.1900%" y="517" width="1.6103%" height="15" fill="rgb(234,195,5)" fg:x="524" fg:w="20"/><text x="42.4400%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 1.61%)</title><rect x="42.1900%" y="501" width="1.6103%" height="15" fill="rgb(238,213,1)" fg:x="524" fg:w="20"/><text x="42.4400%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.6393%" y="485" width="0.1610%" height="15" fill="rgb(235,182,54)" fg:x="542" fg:w="2"/><text x="43.8893%" y="495.50"></text></g><g><title>engine::session::Session::close (140 samples, 11.27%)</title><rect x="32.6087%" y="645" width="11.2721%" height="15" fill="rgb(229,50,46)" fg:x="405" fg:w="140"/><text x="32.8587%" y="655.50">engine::session::..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="43.8003%" y="629" width="0.0805%" height="15" fill="rgb(219,145,13)" fg:x="544" fg:w="1"/><text x="44.0503%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="44.0419%" y="485" width="0.0805%" height="15" fill="rgb(220,226,10)" fg:x="547" fg:w="1"/><text x="44.2919%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="44.0419%" y="469" width="0.0805%" height="15" fill="rgb(248,47,30)" fg:x="547" fg:w="1"/><text x="44.2919%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.2029%" y="437" width="0.0805%" height="15" fill="rgb(231,209,44)" fg:x="549" fg:w="1"/><text x="44.4529%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="44.2834%" y="437" width="0.0805%" height="15" fill="rgb(209,80,30)" fg:x="550" fg:w="1"/><text x="44.5334%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.2834%" y="421" width="0.0805%" height="15" fill="rgb(232,9,14)" fg:x="550" fg:w="1"/><text x="44.5334%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.2834%" y="405" width="0.0805%" height="15" fill="rgb(243,91,43)" fg:x="550" fg:w="1"/><text x="44.5334%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.2834%" y="389" width="0.0805%" height="15" fill="rgb(231,90,52)" fg:x="550" fg:w="1"/><text x="44.5334%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="44.4444%" y="373" width="0.0805%" height="15" fill="rgb(253,192,44)" fg:x="552" fg:w="1"/><text x="44.6944%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.4444%" y="357" width="0.0805%" height="15" fill="rgb(241,66,31)" fg:x="552" fg:w="1"/><text x="44.6944%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="44.2029%" y="469" width="0.4026%" height="15" fill="rgb(235,81,37)" fg:x="549" fg:w="5"/><text x="44.4529%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="44.2029%" y="453" width="0.4026%" height="15" fill="rgb(223,221,9)" fg:x="549" fg:w="5"/><text x="44.4529%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="44.3639%" y="437" width="0.2415%" height="15" fill="rgb(242,180,7)" fg:x="551" fg:w="3"/><text x="44.6139%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.3639%" y="421" width="0.2415%" height="15" fill="rgb(243,78,19)" fg:x="551" fg:w="3"/><text x="44.6139%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="44.3639%" y="405" width="0.2415%" height="15" fill="rgb(233,23,17)" fg:x="551" fg:w="3"/><text x="44.6139%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.3639%" y="389" width="0.2415%" height="15" fill="rgb(252,122,45)" fg:x="551" fg:w="3"/><text x="44.6139%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.5250%" y="373" width="0.0805%" height="15" fill="rgb(247,108,20)" fg:x="553" fg:w="1"/><text x="44.7750%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.5250%" y="357" width="0.0805%" height="15" fill="rgb(235,84,21)" fg:x="553" fg:w="1"/><text x="44.7750%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="44.6055%" y="469" width="0.0805%" height="15" fill="rgb(247,129,10)" fg:x="554" fg:w="1"/><text x="44.8555%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.6055%" y="453" width="0.0805%" height="15" fill="rgb(208,173,14)" fg:x="554" fg:w="1"/><text x="44.8555%" y="463.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (9 samples, 0.72%)</title><rect x="44.0419%" y="517" width="0.7246%" height="15" fill="rgb(236,31,38)" fg:x="547" fg:w="9"/><text x="44.2919%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (9 samples, 0.72%)</title><rect x="44.0419%" y="501" width="0.7246%" height="15" fill="rgb(232,65,17)" fg:x="547" fg:w="9"/><text x="44.2919%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="44.1224%" y="485" width="0.6441%" height="15" fill="rgb(224,45,49)" fg:x="548" fg:w="8"/><text x="44.3724%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.6860%" y="469" width="0.0805%" height="15" fill="rgb(225,2,53)" fg:x="555" fg:w="1"/><text x="44.9360%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.9275%" y="293" width="0.0805%" height="15" fill="rgb(248,210,53)" fg:x="558" fg:w="1"/><text x="45.1775%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.9275%" y="277" width="0.0805%" height="15" fill="rgb(211,1,30)" fg:x="558" fg:w="1"/><text x="45.1775%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.9275%" y="261" width="0.0805%" height="15" fill="rgb(224,96,15)" fg:x="558" fg:w="1"/><text x="45.1775%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.9275%" y="245" width="0.0805%" height="15" fill="rgb(252,45,11)" fg:x="558" fg:w="1"/><text x="45.1775%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.9275%" y="229" width="0.0805%" height="15" fill="rgb(220,125,38)" fg:x="558" fg:w="1"/><text x="45.1775%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="44.9275%" y="213" width="0.0805%" height="15" fill="rgb(243,161,33)" fg:x="558" fg:w="1"/><text x="45.1775%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="45.0081%" y="245" width="0.0805%" height="15" fill="rgb(248,197,34)" fg:x="559" fg:w="1"/><text x="45.2581%" y="255.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="44.7665%" y="421" width="0.4026%" height="15" fill="rgb(228,165,23)" fg:x="556" fg:w="5"/><text x="45.0165%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="44.7665%" y="405" width="0.4026%" height="15" fill="rgb(236,94,38)" fg:x="556" fg:w="5"/><text x="45.0165%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="44.7665%" y="389" width="0.4026%" height="15" fill="rgb(220,13,23)" fg:x="556" fg:w="5"/><text x="45.0165%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="44.7665%" y="373" width="0.4026%" height="15" fill="rgb(234,26,39)" fg:x="556" fg:w="5"/><text x="45.0165%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="44.7665%" y="357" width="0.4026%" height="15" fill="rgb(205,117,44)" fg:x="556" fg:w="5"/><text x="45.0165%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="44.8470%" y="341" width="0.3221%" height="15" fill="rgb(250,42,2)" fg:x="557" fg:w="4"/><text x="45.0970%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="44.8470%" y="325" width="0.3221%" height="15" fill="rgb(223,83,14)" fg:x="557" fg:w="4"/><text x="45.0970%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="44.9275%" y="309" width="0.2415%" height="15" fill="rgb(241,147,50)" fg:x="558" fg:w="3"/><text x="45.1775%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.0081%" y="293" width="0.1610%" height="15" fill="rgb(218,90,6)" fg:x="559" fg:w="2"/><text x="45.2581%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.0081%" y="277" width="0.1610%" height="15" fill="rgb(210,191,5)" fg:x="559" fg:w="2"/><text x="45.2581%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.0081%" y="261" width="0.1610%" height="15" fill="rgb(225,139,19)" fg:x="559" fg:w="2"/><text x="45.2581%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0886%" y="245" width="0.0805%" height="15" fill="rgb(210,1,33)" fg:x="560" fg:w="1"/><text x="45.3386%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.1691%" y="389" width="0.0805%" height="15" fill="rgb(213,50,3)" fg:x="561" fg:w="1"/><text x="45.4191%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.2496%" y="357" width="0.0805%" height="15" fill="rgb(234,227,4)" fg:x="562" fg:w="1"/><text x="45.4996%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.2496%" y="341" width="0.0805%" height="15" fill="rgb(246,63,5)" fg:x="562" fg:w="1"/><text x="45.4996%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="45.2496%" y="325" width="0.0805%" height="15" fill="rgb(245,136,27)" fg:x="562" fg:w="1"/><text x="45.4996%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.3301%" y="341" width="0.0805%" height="15" fill="rgb(247,199,27)" fg:x="563" fg:w="1"/><text x="45.5801%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.3301%" y="325" width="0.0805%" height="15" fill="rgb(252,158,49)" fg:x="563" fg:w="1"/><text x="45.5801%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.3301%" y="309" width="0.0805%" height="15" fill="rgb(254,73,1)" fg:x="563" fg:w="1"/><text x="45.5801%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.3301%" y="293" width="0.0805%" height="15" fill="rgb(248,93,19)" fg:x="563" fg:w="1"/><text x="45.5801%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.3301%" y="277" width="0.0805%" height="15" fill="rgb(206,67,5)" fg:x="563" fg:w="1"/><text x="45.5801%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.3301%" y="261" width="0.0805%" height="15" fill="rgb(209,210,4)" fg:x="563" fg:w="1"/><text x="45.5801%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="45.3301%" y="245" width="0.0805%" height="15" fill="rgb(214,185,36)" fg:x="563" fg:w="1"/><text x="45.5801%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (11 samples, 0.89%)</title><rect x="44.7665%" y="437" width="0.8857%" height="15" fill="rgb(233,191,26)" fg:x="556" fg:w="11"/><text x="45.0165%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="45.1691%" y="421" width="0.4831%" height="15" fill="rgb(248,94,17)" fg:x="561" fg:w="6"/><text x="45.4191%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="45.1691%" y="405" width="0.4831%" height="15" fill="rgb(250,64,4)" fg:x="561" fg:w="6"/><text x="45.4191%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="45.2496%" y="389" width="0.4026%" height="15" fill="rgb(218,41,53)" fg:x="562" fg:w="5"/><text x="45.4996%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="45.2496%" y="373" width="0.4026%" height="15" fill="rgb(251,176,28)" fg:x="562" fg:w="5"/><text x="45.4996%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="45.3301%" y="357" width="0.3221%" height="15" fill="rgb(247,22,9)" fg:x="563" fg:w="4"/><text x="45.5801%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="45.4106%" y="341" width="0.2415%" height="15" fill="rgb(218,201,14)" fg:x="564" fg:w="3"/><text x="45.6606%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="45.4106%" y="325" width="0.2415%" height="15" fill="rgb(218,94,10)" fg:x="564" fg:w="3"/><text x="45.6606%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="45.4106%" y="309" width="0.2415%" height="15" fill="rgb(222,183,52)" fg:x="564" fg:w="3"/><text x="45.6606%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="45.4106%" y="293" width="0.2415%" height="15" fill="rgb(242,140,25)" fg:x="564" fg:w="3"/><text x="45.6606%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="45.4106%" y="277" width="0.2415%" height="15" fill="rgb(235,197,38)" fg:x="564" fg:w="3"/><text x="45.6606%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.5717%" y="261" width="0.0805%" height="15" fill="rgb(237,136,15)" fg:x="566" fg:w="1"/><text x="45.8217%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.5717%" y="245" width="0.0805%" height="15" fill="rgb(223,44,49)" fg:x="566" fg:w="1"/><text x="45.8217%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.5717%" y="229" width="0.0805%" height="15" fill="rgb(227,71,15)" fg:x="566" fg:w="1"/><text x="45.8217%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="45.6522%" y="437" width="0.0805%" height="15" fill="rgb(225,153,20)" fg:x="567" fg:w="1"/><text x="45.9022%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.6522%" y="421" width="0.0805%" height="15" fill="rgb(210,190,26)" fg:x="567" fg:w="1"/><text x="45.9022%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.6522%" y="405" width="0.0805%" height="15" fill="rgb(223,147,5)" fg:x="567" fg:w="1"/><text x="45.9022%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.6522%" y="389" width="0.0805%" height="15" fill="rgb(207,14,23)" fg:x="567" fg:w="1"/><text x="45.9022%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.6522%" y="373" width="0.0805%" height="15" fill="rgb(211,195,53)" fg:x="567" fg:w="1"/><text x="45.9022%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.05%)</title><rect x="44.7665%" y="469" width="1.0467%" height="15" fill="rgb(237,75,46)" fg:x="556" fg:w="13"/><text x="45.0165%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.05%)</title><rect x="44.7665%" y="453" width="1.0467%" height="15" fill="rgb(254,55,14)" fg:x="556" fg:w="13"/><text x="45.0165%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="45.7327%" y="437" width="0.0805%" height="15" fill="rgb(230,185,30)" fg:x="568" fg:w="1"/><text x="45.9827%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.8132%" y="437" width="0.0805%" height="15" fill="rgb(220,14,11)" fg:x="569" fg:w="1"/><text x="46.0632%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.8132%" y="421" width="0.0805%" height="15" fill="rgb(215,169,44)" fg:x="569" fg:w="1"/><text x="46.0632%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.8132%" y="405" width="0.0805%" height="15" fill="rgb(253,203,20)" fg:x="569" fg:w="1"/><text x="46.0632%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.8132%" y="389" width="0.0805%" height="15" fill="rgb(229,225,17)" fg:x="569" fg:w="1"/><text x="46.0632%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.8132%" y="373" width="0.0805%" height="15" fill="rgb(236,76,26)" fg:x="569" fg:w="1"/><text x="46.0632%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.8132%" y="357" width="0.0805%" height="15" fill="rgb(234,15,30)" fg:x="569" fg:w="1"/><text x="46.0632%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.8132%" y="341" width="0.0805%" height="15" fill="rgb(211,113,48)" fg:x="569" fg:w="1"/><text x="46.0632%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.8132%" y="325" width="0.0805%" height="15" fill="rgb(221,31,36)" fg:x="569" fg:w="1"/><text x="46.0632%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.8132%" y="309" width="0.0805%" height="15" fill="rgb(215,118,52)" fg:x="569" fg:w="1"/><text x="46.0632%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.8132%" y="293" width="0.0805%" height="15" fill="rgb(241,151,27)" fg:x="569" fg:w="1"/><text x="46.0632%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.8132%" y="277" width="0.0805%" height="15" fill="rgb(253,51,3)" fg:x="569" fg:w="1"/><text x="46.0632%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8132%" y="261" width="0.0805%" height="15" fill="rgb(216,201,24)" fg:x="569" fg:w="1"/><text x="46.0632%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.8937%" y="405" width="0.1610%" height="15" fill="rgb(231,107,4)" fg:x="570" fg:w="2"/><text x="46.1437%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.9742%" y="389" width="0.0805%" height="15" fill="rgb(243,97,54)" fg:x="571" fg:w="1"/><text x="46.2242%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.9742%" y="373" width="0.0805%" height="15" fill="rgb(221,32,51)" fg:x="571" fg:w="1"/><text x="46.2242%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.9742%" y="357" width="0.0805%" height="15" fill="rgb(218,171,35)" fg:x="571" fg:w="1"/><text x="46.2242%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.9742%" y="341" width="0.0805%" height="15" fill="rgb(214,20,53)" fg:x="571" fg:w="1"/><text x="46.2242%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.9742%" y="325" width="0.0805%" height="15" fill="rgb(239,9,52)" fg:x="571" fg:w="1"/><text x="46.2242%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.9742%" y="309" width="0.0805%" height="15" fill="rgb(215,114,45)" fg:x="571" fg:w="1"/><text x="46.2242%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.9742%" y="293" width="0.0805%" height="15" fill="rgb(208,118,9)" fg:x="571" fg:w="1"/><text x="46.2242%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.9742%" y="277" width="0.0805%" height="15" fill="rgb(235,7,39)" fg:x="571" fg:w="1"/><text x="46.2242%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.9742%" y="261" width="0.0805%" height="15" fill="rgb(243,225,15)" fg:x="571" fg:w="1"/><text x="46.2242%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.9742%" y="245" width="0.0805%" height="15" fill="rgb(225,216,18)" fg:x="571" fg:w="1"/><text x="46.2242%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.9742%" y="229" width="0.0805%" height="15" fill="rgb(233,36,38)" fg:x="571" fg:w="1"/><text x="46.2242%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.9742%" y="213" width="0.0805%" height="15" fill="rgb(239,88,23)" fg:x="571" fg:w="1"/><text x="46.2242%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.9742%" y="197" width="0.0805%" height="15" fill="rgb(219,181,35)" fg:x="571" fg:w="1"/><text x="46.2242%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="45.8937%" y="437" width="0.3221%" height="15" fill="rgb(215,18,46)" fg:x="570" fg:w="4"/><text x="46.1437%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="45.8937%" y="421" width="0.3221%" height="15" fill="rgb(241,38,11)" fg:x="570" fg:w="4"/><text x="46.1437%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.0548%" y="405" width="0.1610%" height="15" fill="rgb(248,169,45)" fg:x="572" fg:w="2"/><text x="46.3048%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.0548%" y="389" width="0.1610%" height="15" fill="rgb(239,50,49)" fg:x="572" fg:w="2"/><text x="46.3048%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.1353%" y="373" width="0.0805%" height="15" fill="rgb(231,96,31)" fg:x="573" fg:w="1"/><text x="46.3853%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.1353%" y="357" width="0.0805%" height="15" fill="rgb(224,193,37)" fg:x="573" fg:w="1"/><text x="46.3853%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.1353%" y="341" width="0.0805%" height="15" fill="rgb(227,153,50)" fg:x="573" fg:w="1"/><text x="46.3853%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.1353%" y="325" width="0.0805%" height="15" fill="rgb(249,228,3)" fg:x="573" fg:w="1"/><text x="46.3853%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="46.2963%" y="421" width="0.0805%" height="15" fill="rgb(219,164,43)" fg:x="575" fg:w="1"/><text x="46.5463%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (21 samples, 1.69%)</title><rect x="44.7665%" y="485" width="1.6908%" height="15" fill="rgb(216,45,41)" fg:x="556" fg:w="21"/><text x="45.0165%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (8 samples, 0.64%)</title><rect x="45.8132%" y="469" width="0.6441%" height="15" fill="rgb(210,226,51)" fg:x="569" fg:w="8"/><text x="46.0632%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="45.8132%" y="453" width="0.6441%" height="15" fill="rgb(209,117,49)" fg:x="569" fg:w="8"/><text x="46.0632%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="46.2158%" y="437" width="0.2415%" height="15" fill="rgb(206,196,24)" fg:x="574" fg:w="3"/><text x="46.4658%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="46.3768%" y="421" width="0.0805%" height="15" fill="rgb(253,218,3)" fg:x="576" fg:w="1"/><text x="46.6268%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.3768%" y="405" width="0.0805%" height="15" fill="rgb(252,166,2)" fg:x="576" fg:w="1"/><text x="46.6268%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.4573%" y="485" width="0.0805%" height="15" fill="rgb(236,218,26)" fg:x="577" fg:w="1"/><text x="46.7073%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.4573%" y="469" width="0.0805%" height="15" fill="rgb(254,84,19)" fg:x="577" fg:w="1"/><text x="46.7073%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (32 samples, 2.58%)</title><rect x="44.0419%" y="533" width="2.5765%" height="15" fill="rgb(219,137,29)" fg:x="547" fg:w="32"/><text x="44.2919%" y="543.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (23 samples, 1.85%)</title><rect x="44.7665%" y="517" width="1.8519%" height="15" fill="rgb(227,47,52)" fg:x="556" fg:w="23"/><text x="45.0165%" y="527.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (23 samples, 1.85%)</title><rect x="44.7665%" y="501" width="1.8519%" height="15" fill="rgb(229,167,24)" fg:x="556" fg:w="23"/><text x="45.0165%" y="511.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.5378%" y="485" width="0.0805%" height="15" fill="rgb(233,164,1)" fg:x="578" fg:w="1"/><text x="46.7878%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.5378%" y="469" width="0.0805%" height="15" fill="rgb(218,88,48)" fg:x="578" fg:w="1"/><text x="46.7878%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.5378%" y="453" width="0.0805%" height="15" fill="rgb(226,214,24)" fg:x="578" fg:w="1"/><text x="46.7878%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.5378%" y="437" width="0.0805%" height="15" fill="rgb(233,29,12)" fg:x="578" fg:w="1"/><text x="46.7878%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.6184%" y="389" width="0.0805%" height="15" fill="rgb(219,120,34)" fg:x="579" fg:w="1"/><text x="46.8684%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="46.6184%" y="485" width="0.1610%" height="15" fill="rgb(226,78,44)" fg:x="579" fg:w="2"/><text x="46.8684%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="46.6184%" y="469" width="0.1610%" height="15" fill="rgb(240,15,48)" fg:x="579" fg:w="2"/><text x="46.8684%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.6184%" y="453" width="0.1610%" height="15" fill="rgb(253,176,7)" fg:x="579" fg:w="2"/><text x="46.8684%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.6184%" y="437" width="0.1610%" height="15" fill="rgb(206,166,28)" fg:x="579" fg:w="2"/><text x="46.8684%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.6184%" y="421" width="0.1610%" height="15" fill="rgb(241,53,51)" fg:x="579" fg:w="2"/><text x="46.8684%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.6184%" y="405" width="0.1610%" height="15" fill="rgb(249,112,30)" fg:x="579" fg:w="2"/><text x="46.8684%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.6989%" y="389" width="0.0805%" height="15" fill="rgb(217,85,30)" fg:x="580" fg:w="1"/><text x="46.9489%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.6989%" y="373" width="0.0805%" height="15" fill="rgb(233,49,7)" fg:x="580" fg:w="1"/><text x="46.9489%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.7794%" y="469" width="0.0805%" height="15" fill="rgb(234,109,9)" fg:x="581" fg:w="1"/><text x="47.0294%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="46.7794%" y="485" width="0.1610%" height="15" fill="rgb(253,95,22)" fg:x="581" fg:w="2"/><text x="47.0294%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="46.8599%" y="469" width="0.0805%" height="15" fill="rgb(233,176,25)" fg:x="582" fg:w="1"/><text x="47.1099%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.8599%" y="453" width="0.0805%" height="15" fill="rgb(236,33,39)" fg:x="582" fg:w="1"/><text x="47.1099%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.8599%" y="437" width="0.0805%" height="15" fill="rgb(223,226,42)" fg:x="582" fg:w="1"/><text x="47.1099%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.8599%" y="421" width="0.0805%" height="15" fill="rgb(216,99,33)" fg:x="582" fg:w="1"/><text x="47.1099%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.8599%" y="405" width="0.0805%" height="15" fill="rgb(235,84,23)" fg:x="582" fg:w="1"/><text x="47.1099%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.8599%" y="389" width="0.0805%" height="15" fill="rgb(232,2,27)" fg:x="582" fg:w="1"/><text x="47.1099%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.8599%" y="373" width="0.0805%" height="15" fill="rgb(241,23,22)" fg:x="582" fg:w="1"/><text x="47.1099%" y="383.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="46.8599%" y="357" width="0.0805%" height="15" fill="rgb(211,73,27)" fg:x="582" fg:w="1"/><text x="47.1099%" y="367.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (37 samples, 2.98%)</title><rect x="44.0419%" y="549" width="2.9791%" height="15" fill="rgb(235,109,49)" fg:x="547" fg:w="37"/><text x="44.2919%" y="559.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (5 samples, 0.40%)</title><rect x="46.6184%" y="533" width="0.4026%" height="15" fill="rgb(230,99,29)" fg:x="579" fg:w="5"/><text x="46.8684%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="46.6184%" y="517" width="0.4026%" height="15" fill="rgb(245,199,7)" fg:x="579" fg:w="5"/><text x="46.8684%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="46.6184%" y="501" width="0.4026%" height="15" fill="rgb(217,179,10)" fg:x="579" fg:w="5"/><text x="46.8684%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="46.9404%" y="485" width="0.0805%" height="15" fill="rgb(254,99,47)" fg:x="583" fg:w="1"/><text x="47.1904%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="46.9404%" y="469" width="0.0805%" height="15" fill="rgb(251,121,7)" fg:x="583" fg:w="1"/><text x="47.1904%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.9404%" y="453" width="0.0805%" height="15" fill="rgb(250,177,26)" fg:x="583" fg:w="1"/><text x="47.1904%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="47.2625%" y="373" width="0.0805%" height="15" fill="rgb(232,88,15)" fg:x="587" fg:w="1"/><text x="47.5125%" y="383.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.2625%" y="357" width="0.0805%" height="15" fill="rgb(251,54,54)" fg:x="587" fg:w="1"/><text x="47.5125%" y="367.50"></text></g><g><title>&lt;core::char::CaseMappingIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.2625%" y="341" width="0.0805%" height="15" fill="rgb(208,177,15)" fg:x="587" fg:w="1"/><text x="47.5125%" y="351.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (2 samples, 0.16%)</title><rect x="47.4235%" y="341" width="0.1610%" height="15" fill="rgb(205,97,32)" fg:x="589" fg:w="2"/><text x="47.6735%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="47.4235%" y="325" width="0.1610%" height="15" fill="rgb(217,192,13)" fg:x="589" fg:w="2"/><text x="47.6735%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.5040%" y="309" width="0.0805%" height="15" fill="rgb(215,163,41)" fg:x="590" fg:w="1"/><text x="47.7540%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="47.5845%" y="325" width="0.0805%" height="15" fill="rgb(246,83,29)" fg:x="591" fg:w="1"/><text x="47.8345%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.6651%" y="293" width="0.0805%" height="15" fill="rgb(219,2,45)" fg:x="592" fg:w="1"/><text x="47.9151%" y="303.50"></text></g><g><title>&lt;replies::AreaObservation as replies::ToTaggedJson&gt;::to_tagged_json (8 samples, 0.64%)</title><rect x="47.2625%" y="389" width="0.6441%" height="15" fill="rgb(242,215,33)" fg:x="587" fg:w="8"/><text x="47.5125%" y="399.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::AreaObservation&gt;::serialize (7 samples, 0.56%)</title><rect x="47.3430%" y="373" width="0.5636%" height="15" fill="rgb(217,1,6)" fg:x="588" fg:w="7"/><text x="47.5930%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="47.3430%" y="357" width="0.5636%" height="15" fill="rgb(207,85,52)" fg:x="588" fg:w="7"/><text x="47.5930%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="47.5845%" y="341" width="0.3221%" height="15" fill="rgb(231,171,19)" fg:x="591" fg:w="4"/><text x="47.8345%" y="351.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (3 samples, 0.24%)</title><rect x="47.6651%" y="325" width="0.2415%" height="15" fill="rgb(207,128,4)" fg:x="592" fg:w="3"/><text x="47.9151%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="47.6651%" y="309" width="0.2415%" height="15" fill="rgb(219,208,4)" fg:x="592" fg:w="3"/><text x="47.9151%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.7456%" y="293" width="0.1610%" height="15" fill="rgb(235,161,42)" fg:x="593" fg:w="2"/><text x="47.9956%" y="303.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::AreaObservation&gt;&gt;::try_from (9 samples, 0.72%)</title><rect x="47.2625%" y="405" width="0.7246%" height="15" fill="rgb(247,218,18)" fg:x="587" fg:w="9"/><text x="47.5125%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (1 samples, 0.08%)</title><rect x="47.9066%" y="389" width="0.0805%" height="15" fill="rgb(232,114,51)" fg:x="595" fg:w="1"/><text x="48.1566%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="47.9066%" y="373" width="0.0805%" height="15" fill="rgb(222,95,3)" fg:x="595" fg:w="1"/><text x="48.1566%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.9066%" y="357" width="0.0805%" height="15" fill="rgb(240,65,29)" fg:x="595" fg:w="1"/><text x="48.1566%" y="367.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="47.9871%" y="405" width="0.0805%" height="15" fill="rgb(249,209,20)" fg:x="596" fg:w="1"/><text x="48.2371%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="48.3897%" y="373" width="0.0805%" height="15" fill="rgb(241,48,37)" fg:x="601" fg:w="1"/><text x="48.6397%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="48.3897%" y="357" width="0.0805%" height="15" fill="rgb(230,140,42)" fg:x="601" fg:w="1"/><text x="48.6397%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="48.4702%" y="357" width="0.0805%" height="15" fill="rgb(230,176,45)" fg:x="602" fg:w="1"/><text x="48.7202%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.4702%" y="341" width="0.0805%" height="15" fill="rgb(245,112,21)" fg:x="602" fg:w="1"/><text x="48.7202%" y="351.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="48.5507%" y="357" width="0.0805%" height="15" fill="rgb(207,183,35)" fg:x="603" fg:w="1"/><text x="48.8007%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="48.6312%" y="341" width="0.1610%" height="15" fill="rgb(227,44,33)" fg:x="604" fg:w="2"/><text x="48.8812%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="48.6312%" y="325" width="0.1610%" height="15" fill="rgb(246,120,21)" fg:x="604" fg:w="2"/><text x="48.8812%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="48.6312%" y="309" width="0.1610%" height="15" fill="rgb(235,57,52)" fg:x="604" fg:w="2"/><text x="48.8812%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.7118%" y="293" width="0.0805%" height="15" fill="rgb(238,84,10)" fg:x="605" fg:w="1"/><text x="48.9618%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.7118%" y="277" width="0.0805%" height="15" fill="rgb(251,200,32)" fg:x="605" fg:w="1"/><text x="48.9618%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.7118%" y="261" width="0.0805%" height="15" fill="rgb(247,159,13)" fg:x="605" fg:w="1"/><text x="48.9618%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.7118%" y="245" width="0.0805%" height="15" fill="rgb(238,64,4)" fg:x="605" fg:w="1"/><text x="48.9618%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.7118%" y="229" width="0.0805%" height="15" fill="rgb(221,131,51)" fg:x="605" fg:w="1"/><text x="48.9618%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.7118%" y="213" width="0.0805%" height="15" fill="rgb(242,5,29)" fg:x="605" fg:w="1"/><text x="48.9618%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.7118%" y="197" width="0.0805%" height="15" fill="rgb(214,130,32)" fg:x="605" fg:w="1"/><text x="48.9618%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.7118%" y="181" width="0.0805%" height="15" fill="rgb(244,210,16)" fg:x="605" fg:w="1"/><text x="48.9618%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.7118%" y="165" width="0.0805%" height="15" fill="rgb(234,48,26)" fg:x="605" fg:w="1"/><text x="48.9618%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.7118%" y="149" width="0.0805%" height="15" fill="rgb(231,82,38)" fg:x="605" fg:w="1"/><text x="48.9618%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.7118%" y="133" width="0.0805%" height="15" fill="rgb(254,128,41)" fg:x="605" fg:w="1"/><text x="48.9618%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7118%" y="117" width="0.0805%" height="15" fill="rgb(212,73,49)" fg:x="605" fg:w="1"/><text x="48.9618%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.7923%" y="341" width="0.0805%" height="15" fill="rgb(205,62,54)" fg:x="606" fg:w="1"/><text x="49.0423%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="48.8728%" y="341" width="0.0805%" height="15" fill="rgb(228,0,8)" fg:x="607" fg:w="1"/><text x="49.1228%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="48.8728%" y="325" width="0.0805%" height="15" fill="rgb(251,28,17)" fg:x="607" fg:w="1"/><text x="49.1228%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.8728%" y="309" width="0.0805%" height="15" fill="rgb(238,105,27)" fg:x="607" fg:w="1"/><text x="49.1228%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.8728%" y="293" width="0.0805%" height="15" fill="rgb(237,216,33)" fg:x="607" fg:w="1"/><text x="49.1228%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.8728%" y="277" width="0.0805%" height="15" fill="rgb(229,228,25)" fg:x="607" fg:w="1"/><text x="49.1228%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.9533%" y="277" width="0.0805%" height="15" fill="rgb(233,75,23)" fg:x="608" fg:w="1"/><text x="49.2033%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.9533%" y="261" width="0.0805%" height="15" fill="rgb(231,207,16)" fg:x="608" fg:w="1"/><text x="49.2033%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="48.9533%" y="245" width="0.0805%" height="15" fill="rgb(231,191,45)" fg:x="608" fg:w="1"/><text x="49.2033%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (9 samples, 0.72%)</title><rect x="48.4702%" y="373" width="0.7246%" height="15" fill="rgb(224,133,17)" fg:x="602" fg:w="9"/><text x="48.7202%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="48.6312%" y="357" width="0.5636%" height="15" fill="rgb(209,178,27)" fg:x="604" fg:w="7"/><text x="48.8812%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="48.9533%" y="341" width="0.2415%" height="15" fill="rgb(218,37,11)" fg:x="608" fg:w="3"/><text x="49.2033%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="48.9533%" y="325" width="0.2415%" height="15" fill="rgb(251,226,25)" fg:x="608" fg:w="3"/><text x="49.2033%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="48.9533%" y="309" width="0.2415%" height="15" fill="rgb(209,222,27)" fg:x="608" fg:w="3"/><text x="49.2033%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="48.9533%" y="293" width="0.2415%" height="15" fill="rgb(238,22,21)" fg:x="608" fg:w="3"/><text x="49.2033%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.0338%" y="277" width="0.1610%" height="15" fill="rgb(233,161,25)" fg:x="609" fg:w="2"/><text x="49.2838%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.1143%" y="261" width="0.0805%" height="15" fill="rgb(226,122,53)" fg:x="610" fg:w="1"/><text x="49.3643%" y="271.50"></text></g><g><title>kernel::model::props::Props::property_named (4 samples, 0.32%)</title><rect x="49.2754%" y="357" width="0.3221%" height="15" fill="rgb(220,123,17)" fg:x="612" fg:w="4"/><text x="49.5254%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="49.4364%" y="341" width="0.1610%" height="15" fill="rgb(230,224,35)" fg:x="614" fg:w="2"/><text x="49.6864%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="49.8390%" y="309" width="0.3221%" height="15" fill="rgb(246,83,8)" fg:x="619" fg:w="4"/><text x="50.0890%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="49.8390%" y="293" width="0.3221%" height="15" fill="rgb(230,214,17)" fg:x="619" fg:w="4"/><text x="50.0890%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="49.8390%" y="277" width="0.3221%" height="15" fill="rgb(222,97,18)" fg:x="619" fg:w="4"/><text x="50.0890%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="49.8390%" y="261" width="0.3221%" height="15" fill="rgb(206,79,1)" fg:x="619" fg:w="4"/><text x="50.0890%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="49.8390%" y="245" width="0.3221%" height="15" fill="rgb(214,121,34)" fg:x="619" fg:w="4"/><text x="50.0890%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="49.8390%" y="229" width="0.3221%" height="15" fill="rgb(249,199,46)" fg:x="619" fg:w="4"/><text x="50.0890%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="49.8390%" y="213" width="0.3221%" height="15" fill="rgb(214,222,46)" fg:x="619" fg:w="4"/><text x="50.0890%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="49.8390%" y="197" width="0.3221%" height="15" fill="rgb(248,168,30)" fg:x="619" fg:w="4"/><text x="50.0890%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="49.8390%" y="181" width="0.3221%" height="15" fill="rgb(226,14,28)" fg:x="619" fg:w="4"/><text x="50.0890%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="49.8390%" y="165" width="0.3221%" height="15" fill="rgb(253,123,1)" fg:x="619" fg:w="4"/><text x="50.0890%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="49.8390%" y="149" width="0.3221%" height="15" fill="rgb(225,24,42)" fg:x="619" fg:w="4"/><text x="50.0890%" y="159.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="49.8390%" y="133" width="0.3221%" height="15" fill="rgb(216,161,37)" fg:x="619" fg:w="4"/><text x="50.0890%" y="143.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.0000%" y="117" width="0.1610%" height="15" fill="rgb(251,164,26)" fg:x="621" fg:w="2"/><text x="50.2500%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="49.7585%" y="341" width="0.4831%" height="15" fill="rgb(219,177,3)" fg:x="618" fg:w="6"/><text x="50.0085%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="49.7585%" y="325" width="0.4831%" height="15" fill="rgb(222,65,0)" fg:x="618" fg:w="6"/><text x="50.0085%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1610%" y="309" width="0.0805%" height="15" fill="rgb(223,69,54)" fg:x="623" fg:w="1"/><text x="50.4110%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1610%" y="293" width="0.0805%" height="15" fill="rgb(235,30,27)" fg:x="623" fg:w="1"/><text x="50.4110%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.1610%" y="277" width="0.0805%" height="15" fill="rgb(220,183,50)" fg:x="623" fg:w="1"/><text x="50.4110%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.1610%" y="261" width="0.0805%" height="15" fill="rgb(248,198,15)" fg:x="623" fg:w="1"/><text x="50.4110%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.1610%" y="245" width="0.0805%" height="15" fill="rgb(222,211,4)" fg:x="623" fg:w="1"/><text x="50.4110%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.1610%" y="229" width="0.0805%" height="15" fill="rgb(214,102,34)" fg:x="623" fg:w="1"/><text x="50.4110%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.1610%" y="213" width="0.0805%" height="15" fill="rgb(245,92,5)" fg:x="623" fg:w="1"/><text x="50.4110%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.1610%" y="197" width="0.0805%" height="15" fill="rgb(252,72,51)" fg:x="623" fg:w="1"/><text x="50.4110%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.1610%" y="181" width="0.0805%" height="15" fill="rgb(252,208,19)" fg:x="623" fg:w="1"/><text x="50.4110%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.1610%" y="165" width="0.0805%" height="15" fill="rgb(211,69,7)" fg:x="623" fg:w="1"/><text x="50.4110%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.1610%" y="149" width="0.0805%" height="15" fill="rgb(211,27,16)" fg:x="623" fg:w="1"/><text x="50.4110%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.1610%" y="133" width="0.0805%" height="15" fill="rgb(219,216,14)" fg:x="623" fg:w="1"/><text x="50.4110%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="50.2415%" y="341" width="0.0805%" height="15" fill="rgb(219,71,8)" fg:x="624" fg:w="1"/><text x="50.4915%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="50.2415%" y="325" width="0.0805%" height="15" fill="rgb(223,170,53)" fg:x="624" fg:w="1"/><text x="50.4915%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.2415%" y="309" width="0.0805%" height="15" fill="rgb(246,21,26)" fg:x="624" fg:w="1"/><text x="50.4915%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.2415%" y="293" width="0.0805%" height="15" fill="rgb(248,20,46)" fg:x="624" fg:w="1"/><text x="50.4915%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.2415%" y="277" width="0.0805%" height="15" fill="rgb(252,94,11)" fg:x="624" fg:w="1"/><text x="50.4915%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.2415%" y="261" width="0.0805%" height="15" fill="rgb(236,163,8)" fg:x="624" fg:w="1"/><text x="50.4915%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.3221%" y="277" width="0.0805%" height="15" fill="rgb(217,221,45)" fg:x="625" fg:w="1"/><text x="50.5721%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="50.4831%" y="261" width="0.0805%" height="15" fill="rgb(238,38,17)" fg:x="627" fg:w="1"/><text x="50.7331%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="50.4026%" y="277" width="0.2415%" height="15" fill="rgb(242,210,23)" fg:x="626" fg:w="3"/><text x="50.6526%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.5636%" y="261" width="0.0805%" height="15" fill="rgb(250,86,53)" fg:x="628" fg:w="1"/><text x="50.8136%" y="271.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (31 samples, 2.50%)</title><rect x="48.3092%" y="389" width="2.4960%" height="15" fill="rgb(223,168,25)" fg:x="600" fg:w="31"/><text x="48.5592%" y="399.50">&lt;&amp;..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (20 samples, 1.61%)</title><rect x="49.1948%" y="373" width="1.6103%" height="15" fill="rgb(251,189,4)" fg:x="611" fg:w="20"/><text x="49.4448%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (15 samples, 1.21%)</title><rect x="49.5974%" y="357" width="1.2077%" height="15" fill="rgb(245,19,28)" fg:x="616" fg:w="15"/><text x="49.8474%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (6 samples, 0.48%)</title><rect x="50.3221%" y="341" width="0.4831%" height="15" fill="rgb(207,10,34)" fg:x="625" fg:w="6"/><text x="50.5721%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="50.3221%" y="325" width="0.4831%" height="15" fill="rgb(235,153,31)" fg:x="625" fg:w="6"/><text x="50.5721%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (6 samples, 0.48%)</title><rect x="50.3221%" y="309" width="0.4831%" height="15" fill="rgb(228,72,37)" fg:x="625" fg:w="6"/><text x="50.5721%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="50.3221%" y="293" width="0.4831%" height="15" fill="rgb(215,15,16)" fg:x="625" fg:w="6"/><text x="50.5721%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="50.6441%" y="277" width="0.1610%" height="15" fill="rgb(250,119,29)" fg:x="629" fg:w="2"/><text x="50.8941%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.6441%" y="261" width="0.1610%" height="15" fill="rgb(214,59,1)" fg:x="629" fg:w="2"/><text x="50.8941%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="50.8052%" y="357" width="0.1610%" height="15" fill="rgb(223,109,25)" fg:x="631" fg:w="2"/><text x="51.0552%" y="367.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="50.8857%" y="341" width="0.0805%" height="15" fill="rgb(230,198,22)" fg:x="632" fg:w="1"/><text x="51.1357%" y="351.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="50.9662%" y="325" width="0.0805%" height="15" fill="rgb(245,184,46)" fg:x="633" fg:w="1"/><text x="51.2162%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="50.9662%" y="309" width="0.0805%" height="15" fill="rgb(253,73,16)" fg:x="633" fg:w="1"/><text x="51.2162%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.0467%" y="309" width="0.2415%" height="15" fill="rgb(206,94,45)" fg:x="634" fg:w="3"/><text x="51.2967%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.1272%" y="293" width="0.1610%" height="15" fill="rgb(236,83,27)" fg:x="635" fg:w="2"/><text x="51.3772%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.1272%" y="277" width="0.1610%" height="15" fill="rgb(220,196,8)" fg:x="635" fg:w="2"/><text x="51.3772%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.1272%" y="261" width="0.1610%" height="15" fill="rgb(254,185,14)" fg:x="635" fg:w="2"/><text x="51.3772%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.1272%" y="245" width="0.1610%" height="15" fill="rgb(226,50,22)" fg:x="635" fg:w="2"/><text x="51.3772%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="51.1272%" y="229" width="0.1610%" height="15" fill="rgb(253,147,0)" fg:x="635" fg:w="2"/><text x="51.3772%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="51.1272%" y="213" width="0.1610%" height="15" fill="rgb(252,46,33)" fg:x="635" fg:w="2"/><text x="51.3772%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="51.1272%" y="197" width="0.1610%" height="15" fill="rgb(242,22,54)" fg:x="635" fg:w="2"/><text x="51.3772%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.1272%" y="181" width="0.1610%" height="15" fill="rgb(223,178,32)" fg:x="635" fg:w="2"/><text x="51.3772%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.1272%" y="165" width="0.1610%" height="15" fill="rgb(214,106,53)" fg:x="635" fg:w="2"/><text x="51.3772%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="51.1272%" y="149" width="0.1610%" height="15" fill="rgb(232,65,50)" fg:x="635" fg:w="2"/><text x="51.3772%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="51.1272%" y="133" width="0.1610%" height="15" fill="rgb(231,110,28)" fg:x="635" fg:w="2"/><text x="51.3772%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="51.1272%" y="117" width="0.1610%" height="15" fill="rgb(216,71,40)" fg:x="635" fg:w="2"/><text x="51.3772%" y="127.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="51.1272%" y="101" width="0.1610%" height="15" fill="rgb(229,89,53)" fg:x="635" fg:w="2"/><text x="51.3772%" y="111.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.1272%" y="85" width="0.1610%" height="15" fill="rgb(210,124,14)" fg:x="635" fg:w="2"/><text x="51.3772%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2882%" y="309" width="0.0805%" height="15" fill="rgb(236,213,6)" fg:x="637" fg:w="1"/><text x="51.5382%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.3688%" y="309" width="0.0805%" height="15" fill="rgb(228,41,5)" fg:x="638" fg:w="1"/><text x="51.6188%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="50.9662%" y="341" width="0.5636%" height="15" fill="rgb(221,167,25)" fg:x="633" fg:w="7"/><text x="51.2162%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="51.0467%" y="325" width="0.4831%" height="15" fill="rgb(228,144,37)" fg:x="634" fg:w="6"/><text x="51.2967%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.4493%" y="309" width="0.0805%" height="15" fill="rgb(227,189,38)" fg:x="639" fg:w="1"/><text x="51.6993%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.4493%" y="293" width="0.0805%" height="15" fill="rgb(218,8,2)" fg:x="639" fg:w="1"/><text x="51.6993%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.4493%" y="277" width="0.0805%" height="15" fill="rgb(209,61,28)" fg:x="639" fg:w="1"/><text x="51.6993%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.4493%" y="261" width="0.0805%" height="15" fill="rgb(233,140,39)" fg:x="639" fg:w="1"/><text x="51.6993%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.4493%" y="245" width="0.0805%" height="15" fill="rgb(251,66,48)" fg:x="639" fg:w="1"/><text x="51.6993%" y="255.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="51.5298%" y="325" width="0.0805%" height="15" fill="rgb(210,44,45)" fg:x="640" fg:w="1"/><text x="51.7798%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.5298%" y="309" width="0.0805%" height="15" fill="rgb(214,136,46)" fg:x="640" fg:w="1"/><text x="51.7798%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.6908%" y="309" width="0.0805%" height="15" fill="rgb(207,130,50)" fg:x="642" fg:w="1"/><text x="51.9408%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.6908%" y="293" width="0.0805%" height="15" fill="rgb(228,102,49)" fg:x="642" fg:w="1"/><text x="51.9408%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="51.6908%" y="277" width="0.0805%" height="15" fill="rgb(253,55,1)" fg:x="642" fg:w="1"/><text x="51.9408%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="51.6908%" y="261" width="0.0805%" height="15" fill="rgb(238,222,9)" fg:x="642" fg:w="1"/><text x="51.9408%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.7713%" y="261" width="0.0805%" height="15" fill="rgb(246,99,6)" fg:x="643" fg:w="1"/><text x="52.0213%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="51.7713%" y="309" width="0.1610%" height="15" fill="rgb(219,110,26)" fg:x="643" fg:w="2"/><text x="52.0213%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="51.7713%" y="293" width="0.1610%" height="15" fill="rgb(239,160,33)" fg:x="643" fg:w="2"/><text x="52.0213%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="51.7713%" y="277" width="0.1610%" height="15" fill="rgb(220,202,23)" fg:x="643" fg:w="2"/><text x="52.0213%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="51.8519%" y="261" width="0.0805%" height="15" fill="rgb(208,80,26)" fg:x="644" fg:w="1"/><text x="52.1019%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.8519%" y="245" width="0.0805%" height="15" fill="rgb(243,85,7)" fg:x="644" fg:w="1"/><text x="52.1019%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.8519%" y="229" width="0.0805%" height="15" fill="rgb(228,77,47)" fg:x="644" fg:w="1"/><text x="52.1019%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.0129%" y="245" width="0.0805%" height="15" fill="rgb(212,226,8)" fg:x="646" fg:w="1"/><text x="52.2629%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="51.5298%" y="341" width="0.6441%" height="15" fill="rgb(241,120,54)" fg:x="640" fg:w="8"/><text x="51.7798%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="51.6103%" y="325" width="0.5636%" height="15" fill="rgb(226,80,16)" fg:x="641" fg:w="7"/><text x="51.8603%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="51.9324%" y="309" width="0.2415%" height="15" fill="rgb(240,76,13)" fg:x="645" fg:w="3"/><text x="52.1824%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.9324%" y="293" width="0.2415%" height="15" fill="rgb(252,74,8)" fg:x="645" fg:w="3"/><text x="52.1824%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="51.9324%" y="277" width="0.2415%" height="15" fill="rgb(244,155,2)" fg:x="645" fg:w="3"/><text x="52.1824%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.0129%" y="261" width="0.1610%" height="15" fill="rgb(215,81,35)" fg:x="646" fg:w="2"/><text x="52.2629%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="52.0934%" y="245" width="0.0805%" height="15" fill="rgb(206,55,2)" fg:x="647" fg:w="1"/><text x="52.3434%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.0934%" y="229" width="0.0805%" height="15" fill="rgb(231,2,34)" fg:x="647" fg:w="1"/><text x="52.3434%" y="239.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (18 samples, 1.45%)</title><rect x="50.8052%" y="389" width="1.4493%" height="15" fill="rgb(242,176,48)" fg:x="631" fg:w="18"/><text x="51.0552%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (18 samples, 1.45%)</title><rect x="50.8052%" y="373" width="1.4493%" height="15" fill="rgb(249,31,36)" fg:x="631" fg:w="18"/><text x="51.0552%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (16 samples, 1.29%)</title><rect x="50.9662%" y="357" width="1.2882%" height="15" fill="rgb(205,18,17)" fg:x="633" fg:w="16"/><text x="51.2162%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="52.1739%" y="341" width="0.0805%" height="15" fill="rgb(254,130,5)" fg:x="648" fg:w="1"/><text x="52.4239%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="325" width="0.0805%" height="15" fill="rgb(229,42,45)" fg:x="648" fg:w="1"/><text x="52.4239%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.1739%" y="309" width="0.0805%" height="15" fill="rgb(245,95,25)" fg:x="648" fg:w="1"/><text x="52.4239%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="293" width="0.0805%" height="15" fill="rgb(249,193,38)" fg:x="648" fg:w="1"/><text x="52.4239%" y="303.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="277" width="0.0805%" height="15" fill="rgb(241,140,43)" fg:x="648" fg:w="1"/><text x="52.4239%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="261" width="0.0805%" height="15" fill="rgb(245,78,48)" fg:x="648" fg:w="1"/><text x="52.4239%" y="271.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.1739%" y="245" width="0.0805%" height="15" fill="rgb(214,92,39)" fg:x="648" fg:w="1"/><text x="52.4239%" y="255.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="229" width="0.0805%" height="15" fill="rgb(211,189,14)" fg:x="648" fg:w="1"/><text x="52.4239%" y="239.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="213" width="0.0805%" height="15" fill="rgb(218,7,24)" fg:x="648" fg:w="1"/><text x="52.4239%" y="223.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="52.1739%" y="197" width="0.0805%" height="15" fill="rgb(224,200,49)" fg:x="648" fg:w="1"/><text x="52.4239%" y="207.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="52.1739%" y="181" width="0.0805%" height="15" fill="rgb(218,210,14)" fg:x="648" fg:w="1"/><text x="52.4239%" y="191.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.2544%" y="389" width="0.1610%" height="15" fill="rgb(234,142,31)" fg:x="649" fg:w="2"/><text x="52.5044%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.4960%" y="325" width="0.0805%" height="15" fill="rgb(227,165,2)" fg:x="652" fg:w="1"/><text x="52.7460%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4960%" y="309" width="0.0805%" height="15" fill="rgb(232,44,46)" fg:x="652" fg:w="1"/><text x="52.7460%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="52.4155%" y="357" width="0.2415%" height="15" fill="rgb(236,149,47)" fg:x="651" fg:w="3"/><text x="52.6655%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.4155%" y="341" width="0.2415%" height="15" fill="rgb(227,45,31)" fg:x="651" fg:w="3"/><text x="52.6655%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5765%" y="325" width="0.0805%" height="15" fill="rgb(240,176,51)" fg:x="653" fg:w="1"/><text x="52.8265%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5765%" y="309" width="0.0805%" height="15" fill="rgb(249,146,41)" fg:x="653" fg:w="1"/><text x="52.8265%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.5765%" y="293" width="0.0805%" height="15" fill="rgb(213,208,4)" fg:x="653" fg:w="1"/><text x="52.8265%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.5765%" y="277" width="0.0805%" height="15" fill="rgb(245,84,36)" fg:x="653" fg:w="1"/><text x="52.8265%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.5765%" y="261" width="0.0805%" height="15" fill="rgb(254,84,18)" fg:x="653" fg:w="1"/><text x="52.8265%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="52.5765%" y="245" width="0.0805%" height="15" fill="rgb(225,38,54)" fg:x="653" fg:w="1"/><text x="52.8265%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="52.5765%" y="229" width="0.0805%" height="15" fill="rgb(246,50,30)" fg:x="653" fg:w="1"/><text x="52.8265%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6570%" y="181" width="0.0805%" height="15" fill="rgb(246,148,9)" fg:x="654" fg:w="1"/><text x="52.9070%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6570%" y="165" width="0.0805%" height="15" fill="rgb(223,75,4)" fg:x="654" fg:w="1"/><text x="52.9070%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.6570%" y="149" width="0.0805%" height="15" fill="rgb(239,148,41)" fg:x="654" fg:w="1"/><text x="52.9070%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.6570%" y="133" width="0.0805%" height="15" fill="rgb(205,195,3)" fg:x="654" fg:w="1"/><text x="52.9070%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.6570%" y="117" width="0.0805%" height="15" fill="rgb(254,161,1)" fg:x="654" fg:w="1"/><text x="52.9070%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.6570%" y="101" width="0.0805%" height="15" fill="rgb(211,229,8)" fg:x="654" fg:w="1"/><text x="52.9070%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.6570%" y="85" width="0.0805%" height="15" fill="rgb(220,97,9)" fg:x="654" fg:w="1"/><text x="52.9070%" y="95.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="52.6570%" y="277" width="0.1610%" height="15" fill="rgb(240,218,8)" fg:x="654" fg:w="2"/><text x="52.9070%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.6570%" y="261" width="0.1610%" height="15" fill="rgb(250,44,0)" fg:x="654" fg:w="2"/><text x="52.9070%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.6570%" y="245" width="0.1610%" height="15" fill="rgb(236,41,53)" fg:x="654" fg:w="2"/><text x="52.9070%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="52.6570%" y="229" width="0.1610%" height="15" fill="rgb(218,227,13)" fg:x="654" fg:w="2"/><text x="52.9070%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="52.6570%" y="213" width="0.1610%" height="15" fill="rgb(217,94,32)" fg:x="654" fg:w="2"/><text x="52.9070%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="52.6570%" y="197" width="0.1610%" height="15" fill="rgb(213,217,12)" fg:x="654" fg:w="2"/><text x="52.9070%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="52.7375%" y="181" width="0.0805%" height="15" fill="rgb(229,13,46)" fg:x="655" fg:w="1"/><text x="52.9875%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="52.7375%" y="165" width="0.0805%" height="15" fill="rgb(243,139,5)" fg:x="655" fg:w="1"/><text x="52.9875%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="52.8986%" y="197" width="0.1610%" height="15" fill="rgb(249,38,45)" fg:x="657" fg:w="2"/><text x="53.1486%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.8986%" y="181" width="0.1610%" height="15" fill="rgb(216,70,11)" fg:x="657" fg:w="2"/><text x="53.1486%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.0596%" y="197" width="0.1610%" height="15" fill="rgb(253,101,25)" fg:x="659" fg:w="2"/><text x="53.3096%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.1401%" y="181" width="0.0805%" height="15" fill="rgb(207,197,30)" fg:x="660" fg:w="1"/><text x="53.3901%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.2206%" y="165" width="0.0805%" height="15" fill="rgb(238,87,13)" fg:x="661" fg:w="1"/><text x="53.4706%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.2206%" y="149" width="0.0805%" height="15" fill="rgb(215,155,8)" fg:x="661" fg:w="1"/><text x="53.4706%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.3011%" y="165" width="0.0805%" height="15" fill="rgb(239,166,38)" fg:x="662" fg:w="1"/><text x="53.5511%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.3011%" y="149" width="0.0805%" height="15" fill="rgb(240,194,35)" fg:x="662" fg:w="1"/><text x="53.5511%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.3011%" y="133" width="0.0805%" height="15" fill="rgb(219,10,44)" fg:x="662" fg:w="1"/><text x="53.5511%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.3816%" y="101" width="0.0805%" height="15" fill="rgb(251,220,35)" fg:x="663" fg:w="1"/><text x="53.6316%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.4622%" y="101" width="0.0805%" height="15" fill="rgb(218,117,13)" fg:x="664" fg:w="1"/><text x="53.7122%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.4622%" y="85" width="0.0805%" height="15" fill="rgb(221,213,40)" fg:x="664" fg:w="1"/><text x="53.7122%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="53.3816%" y="117" width="0.3221%" height="15" fill="rgb(251,224,35)" fg:x="663" fg:w="4"/><text x="53.6316%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.5427%" y="101" width="0.1610%" height="15" fill="rgb(241,33,39)" fg:x="665" fg:w="2"/><text x="53.7927%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.5427%" y="85" width="0.1610%" height="15" fill="rgb(222,74,17)" fg:x="665" fg:w="2"/><text x="53.7927%" y="95.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.6232%" y="69" width="0.0805%" height="15" fill="rgb(225,103,0)" fg:x="666" fg:w="1"/><text x="53.8732%" y="79.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 1.05%)</title><rect x="52.8180%" y="245" width="1.0467%" height="15" fill="rgb(240,0,12)" fg:x="656" fg:w="13"/><text x="53.0680%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.05%)</title><rect x="52.8180%" y="229" width="1.0467%" height="15" fill="rgb(233,213,37)" fg:x="656" fg:w="13"/><text x="53.0680%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="52.8986%" y="213" width="0.9662%" height="15" fill="rgb(225,84,52)" fg:x="657" fg:w="12"/><text x="53.1486%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="53.2206%" y="197" width="0.6441%" height="15" fill="rgb(247,160,51)" fg:x="661" fg:w="8"/><text x="53.4706%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="53.2206%" y="181" width="0.6441%" height="15" fill="rgb(244,60,51)" fg:x="661" fg:w="8"/><text x="53.4706%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="53.3816%" y="165" width="0.4831%" height="15" fill="rgb(233,114,7)" fg:x="663" fg:w="6"/><text x="53.6316%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="53.3816%" y="149" width="0.4831%" height="15" fill="rgb(246,136,16)" fg:x="663" fg:w="6"/><text x="53.6316%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="53.3816%" y="133" width="0.4831%" height="15" fill="rgb(243,114,45)" fg:x="663" fg:w="6"/><text x="53.6316%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.7037%" y="117" width="0.1610%" height="15" fill="rgb(247,183,43)" fg:x="667" fg:w="2"/><text x="53.9537%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.7037%" y="101" width="0.1610%" height="15" fill="rgb(251,210,42)" fg:x="667" fg:w="2"/><text x="53.9537%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.7842%" y="85" width="0.0805%" height="15" fill="rgb(221,88,35)" fg:x="668" fg:w="1"/><text x="54.0342%" y="95.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.7842%" y="69" width="0.0805%" height="15" fill="rgb(242,21,20)" fg:x="668" fg:w="1"/><text x="54.0342%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7842%" y="53" width="0.0805%" height="15" fill="rgb(233,226,36)" fg:x="668" fg:w="1"/><text x="54.0342%" y="63.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.9452%" y="181" width="0.0805%" height="15" fill="rgb(243,189,34)" fg:x="670" fg:w="1"/><text x="54.1952%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.0258%" y="165" width="0.0805%" height="15" fill="rgb(207,145,50)" fg:x="671" fg:w="1"/><text x="54.2758%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.0258%" y="181" width="0.1610%" height="15" fill="rgb(242,1,50)" fg:x="671" fg:w="2"/><text x="54.2758%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.1063%" y="165" width="0.0805%" height="15" fill="rgb(231,65,32)" fg:x="672" fg:w="1"/><text x="54.3563%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.3478%" y="85" width="0.0805%" height="15" fill="rgb(208,68,49)" fg:x="675" fg:w="1"/><text x="54.5978%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.3478%" y="69" width="0.0805%" height="15" fill="rgb(253,54,49)" fg:x="675" fg:w="1"/><text x="54.5978%" y="79.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="54.3478%" y="101" width="0.1610%" height="15" fill="rgb(245,186,24)" fg:x="675" fg:w="2"/><text x="54.5978%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="54.4283%" y="85" width="0.0805%" height="15" fill="rgb(209,2,41)" fg:x="676" fg:w="1"/><text x="54.6783%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.4283%" y="69" width="0.0805%" height="15" fill="rgb(242,208,54)" fg:x="676" fg:w="1"/><text x="54.6783%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="54.1868%" y="165" width="0.4026%" height="15" fill="rgb(225,9,51)" fg:x="673" fg:w="5"/><text x="54.4368%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="54.2673%" y="149" width="0.3221%" height="15" fill="rgb(207,207,25)" fg:x="674" fg:w="4"/><text x="54.5173%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="54.2673%" y="133" width="0.3221%" height="15" fill="rgb(253,96,18)" fg:x="674" fg:w="4"/><text x="54.5173%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="54.2673%" y="117" width="0.3221%" height="15" fill="rgb(252,215,20)" fg:x="674" fg:w="4"/><text x="54.5173%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.5089%" y="101" width="0.0805%" height="15" fill="rgb(245,227,26)" fg:x="677" fg:w="1"/><text x="54.7589%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.5089%" y="85" width="0.0805%" height="15" fill="rgb(241,208,0)" fg:x="677" fg:w="1"/><text x="54.7589%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.5894%" y="165" width="0.0805%" height="15" fill="rgb(224,130,10)" fg:x="678" fg:w="1"/><text x="54.8394%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.5894%" y="149" width="0.0805%" height="15" fill="rgb(237,29,0)" fg:x="678" fg:w="1"/><text x="54.8394%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.5894%" y="133" width="0.0805%" height="15" fill="rgb(219,27,41)" fg:x="678" fg:w="1"/><text x="54.8394%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.81%)</title><rect x="53.9452%" y="213" width="0.8052%" height="15" fill="rgb(245,101,19)" fg:x="670" fg:w="10"/><text x="54.1952%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="53.9452%" y="197" width="0.8052%" height="15" fill="rgb(243,44,37)" fg:x="670" fg:w="10"/><text x="54.1952%" y="207.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="54.1868%" y="181" width="0.5636%" height="15" fill="rgb(228,213,43)" fg:x="673" fg:w="7"/><text x="54.4368%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.6699%" y="165" width="0.0805%" height="15" fill="rgb(219,163,21)" fg:x="679" fg:w="1"/><text x="54.9199%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.6699%" y="149" width="0.0805%" height="15" fill="rgb(234,86,24)" fg:x="679" fg:w="1"/><text x="54.9199%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="54.6699%" y="133" width="0.0805%" height="15" fill="rgb(225,10,24)" fg:x="679" fg:w="1"/><text x="54.9199%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.6699%" y="117" width="0.0805%" height="15" fill="rgb(218,109,7)" fg:x="679" fg:w="1"/><text x="54.9199%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.6699%" y="101" width="0.0805%" height="15" fill="rgb(210,20,26)" fg:x="679" fg:w="1"/><text x="54.9199%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.6699%" y="85" width="0.0805%" height="15" fill="rgb(216,18,1)" fg:x="679" fg:w="1"/><text x="54.9199%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (25 samples, 2.01%)</title><rect x="52.8180%" y="261" width="2.0129%" height="15" fill="rgb(206,163,23)" fg:x="656" fg:w="25"/><text x="53.0680%" y="271.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.97%)</title><rect x="53.8647%" y="245" width="0.9662%" height="15" fill="rgb(229,150,31)" fg:x="669" fg:w="12"/><text x="54.1147%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.97%)</title><rect x="53.8647%" y="229" width="0.9662%" height="15" fill="rgb(231,10,5)" fg:x="669" fg:w="12"/><text x="54.1147%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.7504%" y="213" width="0.0805%" height="15" fill="rgb(250,40,50)" fg:x="680" fg:w="1"/><text x="55.0004%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.7504%" y="197" width="0.0805%" height="15" fill="rgb(217,119,7)" fg:x="680" fg:w="1"/><text x="55.0004%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.7504%" y="181" width="0.0805%" height="15" fill="rgb(245,214,40)" fg:x="680" fg:w="1"/><text x="55.0004%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.8309%" y="229" width="0.0805%" height="15" fill="rgb(216,187,1)" fg:x="681" fg:w="1"/><text x="55.0809%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.8309%" y="213" width="0.0805%" height="15" fill="rgb(237,146,21)" fg:x="681" fg:w="1"/><text x="55.0809%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.8309%" y="197" width="0.0805%" height="15" fill="rgb(210,174,47)" fg:x="681" fg:w="1"/><text x="55.0809%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.8309%" y="181" width="0.0805%" height="15" fill="rgb(218,111,39)" fg:x="681" fg:w="1"/><text x="55.0809%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (29 samples, 2.33%)</title><rect x="52.6570%" y="293" width="2.3349%" height="15" fill="rgb(224,95,19)" fg:x="654" fg:w="29"/><text x="52.9070%" y="303.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (27 samples, 2.17%)</title><rect x="52.8180%" y="277" width="2.1739%" height="15" fill="rgb(234,15,38)" fg:x="656" fg:w="27"/><text x="53.0680%" y="287.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="54.8309%" y="261" width="0.1610%" height="15" fill="rgb(246,56,12)" fg:x="681" fg:w="2"/><text x="55.0809%" y="271.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="54.8309%" y="245" width="0.1610%" height="15" fill="rgb(247,16,17)" fg:x="681" fg:w="2"/><text x="55.0809%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="54.9114%" y="229" width="0.0805%" height="15" fill="rgb(215,151,11)" fg:x="682" fg:w="1"/><text x="55.1614%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.9114%" y="213" width="0.0805%" height="15" fill="rgb(225,16,24)" fg:x="682" fg:w="1"/><text x="55.1614%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="54.9919%" y="245" width="0.0805%" height="15" fill="rgb(217,117,5)" fg:x="683" fg:w="1"/><text x="55.2419%" y="255.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="55.0725%" y="245" width="0.0805%" height="15" fill="rgb(246,187,53)" fg:x="684" fg:w="1"/><text x="55.3225%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="55.1530%" y="229" width="0.0805%" height="15" fill="rgb(241,71,40)" fg:x="685" fg:w="1"/><text x="55.4030%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="55.1530%" y="213" width="0.0805%" height="15" fill="rgb(231,67,39)" fg:x="685" fg:w="1"/><text x="55.4030%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.1530%" y="197" width="0.0805%" height="15" fill="rgb(222,120,24)" fg:x="685" fg:w="1"/><text x="55.4030%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.1530%" y="181" width="0.0805%" height="15" fill="rgb(248,3,3)" fg:x="685" fg:w="1"/><text x="55.4030%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.2335%" y="149" width="0.0805%" height="15" fill="rgb(228,218,5)" fg:x="686" fg:w="1"/><text x="55.4835%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.2335%" y="165" width="0.1610%" height="15" fill="rgb(212,202,43)" fg:x="686" fg:w="2"/><text x="55.4835%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.3140%" y="149" width="0.0805%" height="15" fill="rgb(235,183,2)" fg:x="687" fg:w="1"/><text x="55.5640%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="54.9919%" y="261" width="0.4831%" height="15" fill="rgb(230,165,10)" fg:x="683" fg:w="6"/><text x="55.2419%" y="271.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="55.1530%" y="245" width="0.3221%" height="15" fill="rgb(219,54,40)" fg:x="685" fg:w="4"/><text x="55.4030%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="55.2335%" y="229" width="0.2415%" height="15" fill="rgb(244,73,9)" fg:x="686" fg:w="3"/><text x="55.4835%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="55.2335%" y="213" width="0.2415%" height="15" fill="rgb(212,32,45)" fg:x="686" fg:w="3"/><text x="55.4835%" y="223.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="55.2335%" y="197" width="0.2415%" height="15" fill="rgb(205,58,31)" fg:x="686" fg:w="3"/><text x="55.4835%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="55.2335%" y="181" width="0.2415%" height="15" fill="rgb(250,120,43)" fg:x="686" fg:w="3"/><text x="55.4835%" y="191.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.3945%" y="165" width="0.0805%" height="15" fill="rgb(235,13,10)" fg:x="688" fg:w="1"/><text x="55.6445%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.3945%" y="149" width="0.0805%" height="15" fill="rgb(232,219,31)" fg:x="688" fg:w="1"/><text x="55.6445%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.7166%" y="229" width="0.0805%" height="15" fill="rgb(218,157,51)" fg:x="692" fg:w="1"/><text x="55.9666%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.7166%" y="213" width="0.0805%" height="15" fill="rgb(211,91,52)" fg:x="692" fg:w="1"/><text x="55.9666%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.7971%" y="229" width="0.0805%" height="15" fill="rgb(240,173,1)" fg:x="693" fg:w="1"/><text x="56.0471%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="55.8776%" y="229" width="0.0805%" height="15" fill="rgb(248,20,47)" fg:x="694" fg:w="1"/><text x="56.1276%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="55.8776%" y="213" width="0.0805%" height="15" fill="rgb(217,221,40)" fg:x="694" fg:w="1"/><text x="56.1276%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.8776%" y="197" width="0.0805%" height="15" fill="rgb(226,149,51)" fg:x="694" fg:w="1"/><text x="56.1276%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8776%" y="181" width="0.0805%" height="15" fill="rgb(252,193,7)" fg:x="694" fg:w="1"/><text x="56.1276%" y="191.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (43 samples, 3.46%)</title><rect x="52.6570%" y="357" width="3.4622%" height="15" fill="rgb(205,123,0)" fg:x="654" fg:w="43"/><text x="52.9070%" y="367.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (43 samples, 3.46%)</title><rect x="52.6570%" y="341" width="3.4622%" height="15" fill="rgb(233,173,25)" fg:x="654" fg:w="43"/><text x="52.9070%" y="351.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 3.46%)</title><rect x="52.6570%" y="325" width="3.4622%" height="15" fill="rgb(216,63,32)" fg:x="654" fg:w="43"/><text x="52.9070%" y="335.50">&lt;al..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (43 samples, 3.46%)</title><rect x="52.6570%" y="309" width="3.4622%" height="15" fill="rgb(209,56,45)" fg:x="654" fg:w="43"/><text x="52.9070%" y="319.50">&lt;en..</text></g><g><title>kernel::model::entity::Entity::entity_ref (14 samples, 1.13%)</title><rect x="54.9919%" y="293" width="1.1272%" height="15" fill="rgb(226,111,49)" fg:x="683" fg:w="14"/><text x="55.2419%" y="303.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (14 samples, 1.13%)</title><rect x="54.9919%" y="277" width="1.1272%" height="15" fill="rgb(244,181,21)" fg:x="683" fg:w="14"/><text x="55.2419%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="55.4750%" y="261" width="0.6441%" height="15" fill="rgb(222,126,15)" fg:x="689" fg:w="8"/><text x="55.7250%" y="271.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="55.5556%" y="245" width="0.5636%" height="15" fill="rgb(222,95,17)" fg:x="690" fg:w="7"/><text x="55.8056%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="55.9581%" y="229" width="0.1610%" height="15" fill="rgb(254,46,5)" fg:x="695" fg:w="2"/><text x="56.2081%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.9581%" y="213" width="0.1610%" height="15" fill="rgb(236,216,35)" fg:x="695" fg:w="2"/><text x="56.2081%" y="223.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.0386%" y="197" width="0.0805%" height="15" fill="rgb(217,187,26)" fg:x="696" fg:w="1"/><text x="56.2886%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.0386%" y="181" width="0.0805%" height="15" fill="rgb(207,192,25)" fg:x="696" fg:w="1"/><text x="56.2886%" y="191.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.0386%" y="165" width="0.0805%" height="15" fill="rgb(253,135,27)" fg:x="696" fg:w="1"/><text x="56.2886%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.0386%" y="149" width="0.0805%" height="15" fill="rgb(211,122,29)" fg:x="696" fg:w="1"/><text x="56.2886%" y="159.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="56.1997%" y="245" width="0.1610%" height="15" fill="rgb(233,162,40)" fg:x="698" fg:w="2"/><text x="56.4497%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.2802%" y="229" width="0.0805%" height="15" fill="rgb(222,184,47)" fg:x="699" fg:w="1"/><text x="56.5302%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.3607%" y="229" width="0.0805%" height="15" fill="rgb(249,99,23)" fg:x="700" fg:w="1"/><text x="56.6107%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.3607%" y="213" width="0.0805%" height="15" fill="rgb(214,60,12)" fg:x="700" fg:w="1"/><text x="56.6107%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.3607%" y="197" width="0.0805%" height="15" fill="rgb(250,229,36)" fg:x="700" fg:w="1"/><text x="56.6107%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.3607%" y="181" width="0.0805%" height="15" fill="rgb(232,195,10)" fg:x="700" fg:w="1"/><text x="56.6107%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.3607%" y="165" width="0.0805%" height="15" fill="rgb(205,213,31)" fg:x="700" fg:w="1"/><text x="56.6107%" y="175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.3607%" y="149" width="0.0805%" height="15" fill="rgb(237,43,8)" fg:x="700" fg:w="1"/><text x="56.6107%" y="159.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.3607%" y="133" width="0.0805%" height="15" fill="rgb(216,208,3)" fg:x="700" fg:w="1"/><text x="56.6107%" y="143.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.3607%" y="117" width="0.0805%" height="15" fill="rgb(228,179,44)" fg:x="700" fg:w="1"/><text x="56.6107%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.3607%" y="101" width="0.0805%" height="15" fill="rgb(230,192,27)" fg:x="700" fg:w="1"/><text x="56.6107%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.3607%" y="85" width="0.0805%" height="15" fill="rgb(251,30,38)" fg:x="700" fg:w="1"/><text x="56.6107%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.3607%" y="69" width="0.0805%" height="15" fill="rgb(246,55,52)" fg:x="700" fg:w="1"/><text x="56.6107%" y="79.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="56.1997%" y="261" width="0.3221%" height="15" fill="rgb(249,79,26)" fg:x="698" fg:w="4"/><text x="56.4497%" y="271.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="56.3607%" y="245" width="0.1610%" height="15" fill="rgb(220,202,16)" fg:x="700" fg:w="2"/><text x="56.6107%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.4412%" y="229" width="0.0805%" height="15" fill="rgb(250,170,23)" fg:x="701" fg:w="1"/><text x="56.6912%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.4412%" y="213" width="0.0805%" height="15" fill="rgb(230,7,37)" fg:x="701" fg:w="1"/><text x="56.6912%" y="223.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.4412%" y="197" width="0.0805%" height="15" fill="rgb(213,71,1)" fg:x="701" fg:w="1"/><text x="56.6912%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.4412%" y="181" width="0.0805%" height="15" fill="rgb(227,87,39)" fg:x="701" fg:w="1"/><text x="56.6912%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.4412%" y="165" width="0.0805%" height="15" fill="rgb(210,41,29)" fg:x="701" fg:w="1"/><text x="56.6912%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.4412%" y="149" width="0.0805%" height="15" fill="rgb(206,191,31)" fg:x="701" fg:w="1"/><text x="56.6912%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.5217%" y="165" width="0.0805%" height="15" fill="rgb(247,75,54)" fg:x="702" fg:w="1"/><text x="56.7717%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.5217%" y="149" width="0.0805%" height="15" fill="rgb(208,54,50)" fg:x="702" fg:w="1"/><text x="56.7717%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.6023%" y="133" width="0.0805%" height="15" fill="rgb(214,90,37)" fg:x="703" fg:w="1"/><text x="56.8523%" y="143.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (8 samples, 0.64%)</title><rect x="56.1192%" y="357" width="0.6441%" height="15" fill="rgb(220,132,6)" fg:x="697" fg:w="8"/><text x="56.3692%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="56.1192%" y="341" width="0.6441%" height="15" fill="rgb(213,167,7)" fg:x="697" fg:w="8"/><text x="56.3692%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.64%)</title><rect x="56.1192%" y="325" width="0.6441%" height="15" fill="rgb(243,36,27)" fg:x="697" fg:w="8"/><text x="56.3692%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="56.1192%" y="309" width="0.6441%" height="15" fill="rgb(235,147,12)" fg:x="697" fg:w="8"/><text x="56.3692%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (7 samples, 0.56%)</title><rect x="56.1997%" y="293" width="0.5636%" height="15" fill="rgb(212,198,44)" fg:x="698" fg:w="7"/><text x="56.4497%" y="303.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="56.1997%" y="277" width="0.5636%" height="15" fill="rgb(218,68,50)" fg:x="698" fg:w="7"/><text x="56.4497%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="56.5217%" y="261" width="0.2415%" height="15" fill="rgb(224,79,48)" fg:x="702" fg:w="3"/><text x="56.7717%" y="271.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="56.5217%" y="245" width="0.2415%" height="15" fill="rgb(213,191,50)" fg:x="702" fg:w="3"/><text x="56.7717%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="56.5217%" y="229" width="0.2415%" height="15" fill="rgb(254,146,10)" fg:x="702" fg:w="3"/><text x="56.7717%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.5217%" y="213" width="0.2415%" height="15" fill="rgb(215,175,11)" fg:x="702" fg:w="3"/><text x="56.7717%" y="223.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="56.5217%" y="197" width="0.2415%" height="15" fill="rgb(207,49,7)" fg:x="702" fg:w="3"/><text x="56.7717%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.5217%" y="181" width="0.2415%" height="15" fill="rgb(234,144,29)" fg:x="702" fg:w="3"/><text x="56.7717%" y="191.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="56.6023%" y="165" width="0.1610%" height="15" fill="rgb(213,222,48)" fg:x="703" fg:w="2"/><text x="56.8523%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.6023%" y="149" width="0.1610%" height="15" fill="rgb(222,8,6)" fg:x="703" fg:w="2"/><text x="56.8523%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.6828%" y="133" width="0.0805%" height="15" fill="rgb(221,114,49)" fg:x="704" fg:w="1"/><text x="56.9328%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (163 samples, 13.12%)</title><rect x="43.8808%" y="613" width="13.1240%" height="15" fill="rgb(250,140,42)" fg:x="545" fg:w="163"/><text x="44.1308%" y="623.50">&lt;engine::session::Se..</text></g><g><title>kernel::plugins::mw::apply_middleware (163 samples, 13.12%)</title><rect x="43.8808%" y="597" width="13.1240%" height="15" fill="rgb(250,150,27)" fg:x="545" fg:w="163"/><text x="44.1308%" y="607.50">kernel::plugins::mw:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (163 samples, 13.12%)</title><rect x="43.8808%" y="581" width="13.1240%" height="15" fill="rgb(252,159,3)" fg:x="545" fg:w="163"/><text x="44.1308%" y="591.50">kernel::plugins::mw:..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (163 samples, 13.12%)</title><rect x="43.8808%" y="565" width="13.1240%" height="15" fill="rgb(241,182,3)" fg:x="545" fg:w="163"/><text x="44.1308%" y="575.50">&lt;engine::session::Ex..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (124 samples, 9.98%)</title><rect x="47.0209%" y="549" width="9.9839%" height="15" fill="rgb(236,3,9)" fg:x="584" fg:w="124"/><text x="47.2709%" y="559.50">kernel::plugin..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (124 samples, 9.98%)</title><rect x="47.0209%" y="533" width="9.9839%" height="15" fill="rgb(223,227,51)" fg:x="584" fg:w="124"/><text x="47.2709%" y="543.50">&lt;plugins_dynli..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (124 samples, 9.98%)</title><rect x="47.0209%" y="517" width="9.9839%" height="15" fill="rgb(232,133,30)" fg:x="584" fg:w="124"/><text x="47.2709%" y="527.50">kernel::plugin..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (123 samples, 9.90%)</title><rect x="47.1014%" y="501" width="9.9034%" height="15" fill="rgb(209,93,27)" fg:x="585" fg:w="123"/><text x="47.3514%" y="511.50">core::ops::fun..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (123 samples, 9.90%)</title><rect x="47.1014%" y="485" width="9.9034%" height="15" fill="rgb(208,108,34)" fg:x="585" fg:w="123"/><text x="47.3514%" y="495.50">kernel::plugin..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (122 samples, 9.82%)</title><rect x="47.1820%" y="469" width="9.8229%" height="15" fill="rgb(215,189,13)" fg:x="586" fg:w="122"/><text x="47.4320%" y="479.50">core::ops::fun..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (122 samples, 9.82%)</title><rect x="47.1820%" y="453" width="9.8229%" height="15" fill="rgb(206,88,23)" fg:x="586" fg:w="122"/><text x="47.4320%" y="463.50">&lt;alloc::boxed:..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (121 samples, 9.74%)</title><rect x="47.2625%" y="437" width="9.7424%" height="15" fill="rgb(240,173,0)" fg:x="587" fg:w="121"/><text x="47.5125%" y="447.50">&lt;engine::sessi..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (121 samples, 9.74%)</title><rect x="47.2625%" y="421" width="9.7424%" height="15" fill="rgb(223,106,52)" fg:x="587" fg:w="121"/><text x="47.5125%" y="431.50">&lt;plugins_core:..</text></g><g><title>plugins_core::looking::model::new_area_observation (111 samples, 8.94%)</title><rect x="48.0676%" y="405" width="8.9372%" height="15" fill="rgb(206,130,16)" fg:x="597" fg:w="111"/><text x="48.3176%" y="415.50">plugins_core:..</text></g><g><title>kernel::model::entry::Entry::scope (57 samples, 4.59%)</title><rect x="52.4155%" y="389" width="4.5894%" height="15" fill="rgb(220,54,25)" fg:x="651" fg:w="57"/><text x="52.6655%" y="399.50">kerne..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (57 samples, 4.59%)</title><rect x="52.4155%" y="373" width="4.5894%" height="15" fill="rgb(210,4,38)" fg:x="651" fg:w="57"/><text x="52.6655%" y="383.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="56.7633%" y="357" width="0.2415%" height="15" fill="rgb(238,94,39)" fg:x="705" fg:w="3"/><text x="57.0133%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.7633%" y="341" width="0.2415%" height="15" fill="rgb(234,124,34)" fg:x="705" fg:w="3"/><text x="57.0133%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="57.0048%" y="597" width="0.0805%" height="15" fill="rgb(221,91,40)" fg:x="708" fg:w="1"/><text x="57.2548%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2464%" y="453" width="0.0805%" height="15" fill="rgb(246,53,28)" fg:x="711" fg:w="1"/><text x="57.4964%" y="463.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="57.0853%" y="565" width="0.3221%" height="15" fill="rgb(229,109,7)" fg:x="709" fg:w="4"/><text x="57.3353%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="57.0853%" y="549" width="0.3221%" height="15" fill="rgb(249,117,8)" fg:x="709" fg:w="4"/><text x="57.3353%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="57.0853%" y="533" width="0.3221%" height="15" fill="rgb(210,181,1)" fg:x="709" fg:w="4"/><text x="57.3353%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="57.0853%" y="517" width="0.3221%" height="15" fill="rgb(211,66,1)" fg:x="709" fg:w="4"/><text x="57.3353%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="57.1659%" y="501" width="0.2415%" height="15" fill="rgb(221,90,14)" fg:x="710" fg:w="3"/><text x="57.4159%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="57.1659%" y="485" width="0.2415%" height="15" fill="rgb(219,222,44)" fg:x="710" fg:w="3"/><text x="57.4159%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.2464%" y="469" width="0.1610%" height="15" fill="rgb(246,34,33)" fg:x="711" fg:w="2"/><text x="57.4964%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="57.3269%" y="453" width="0.0805%" height="15" fill="rgb(227,135,41)" fg:x="712" fg:w="1"/><text x="57.5769%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.3269%" y="437" width="0.0805%" height="15" fill="rgb(226,15,14)" fg:x="712" fg:w="1"/><text x="57.5769%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="57.3269%" y="421" width="0.0805%" height="15" fill="rgb(236,148,47)" fg:x="712" fg:w="1"/><text x="57.5769%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.4879%" y="453" width="0.0805%" height="15" fill="rgb(233,162,52)" fg:x="714" fg:w="1"/><text x="57.7379%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.4879%" y="437" width="0.0805%" height="15" fill="rgb(244,35,28)" fg:x="714" fg:w="1"/><text x="57.7379%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="57.4879%" y="421" width="0.0805%" height="15" fill="rgb(205,121,10)" fg:x="714" fg:w="1"/><text x="57.7379%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.4879%" y="405" width="0.0805%" height="15" fill="rgb(250,58,18)" fg:x="714" fg:w="1"/><text x="57.7379%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.4879%" y="389" width="0.0805%" height="15" fill="rgb(216,37,13)" fg:x="714" fg:w="1"/><text x="57.7379%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="57.4879%" y="373" width="0.0805%" height="15" fill="rgb(221,215,42)" fg:x="714" fg:w="1"/><text x="57.7379%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.4879%" y="357" width="0.0805%" height="15" fill="rgb(217,214,19)" fg:x="714" fg:w="1"/><text x="57.7379%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4879%" y="341" width="0.0805%" height="15" fill="rgb(233,139,13)" fg:x="714" fg:w="1"/><text x="57.7379%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="57.4879%" y="485" width="0.1610%" height="15" fill="rgb(247,168,23)" fg:x="714" fg:w="2"/><text x="57.7379%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.4879%" y="469" width="0.1610%" height="15" fill="rgb(207,202,1)" fg:x="714" fg:w="2"/><text x="57.7379%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="57.5684%" y="453" width="0.0805%" height="15" fill="rgb(220,155,48)" fg:x="715" fg:w="1"/><text x="57.8184%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.5684%" y="437" width="0.0805%" height="15" fill="rgb(250,43,26)" fg:x="715" fg:w="1"/><text x="57.8184%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.5684%" y="421" width="0.0805%" height="15" fill="rgb(212,190,23)" fg:x="715" fg:w="1"/><text x="57.8184%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.5684%" y="405" width="0.0805%" height="15" fill="rgb(216,39,24)" fg:x="715" fg:w="1"/><text x="57.8184%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="57.5684%" y="389" width="0.0805%" height="15" fill="rgb(252,113,16)" fg:x="715" fg:w="1"/><text x="57.8184%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.5684%" y="373" width="0.0805%" height="15" fill="rgb(208,113,19)" fg:x="715" fg:w="1"/><text x="57.8184%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.5684%" y="357" width="0.0805%" height="15" fill="rgb(234,107,25)" fg:x="715" fg:w="1"/><text x="57.8184%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="57.6490%" y="485" width="0.0805%" height="15" fill="rgb(234,217,51)" fg:x="716" fg:w="1"/><text x="57.8990%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.6490%" y="469" width="0.0805%" height="15" fill="rgb(251,29,42)" fg:x="716" fg:w="1"/><text x="57.8990%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="57.6490%" y="453" width="0.0805%" height="15" fill="rgb(221,62,51)" fg:x="716" fg:w="1"/><text x="57.8990%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="57.6490%" y="437" width="0.0805%" height="15" fill="rgb(240,192,43)" fg:x="716" fg:w="1"/><text x="57.8990%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="57.4074%" y="533" width="0.4026%" height="15" fill="rgb(224,157,47)" fg:x="713" fg:w="5"/><text x="57.6574%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="57.4074%" y="517" width="0.4026%" height="15" fill="rgb(226,84,45)" fg:x="713" fg:w="5"/><text x="57.6574%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="57.4879%" y="501" width="0.3221%" height="15" fill="rgb(208,207,23)" fg:x="714" fg:w="4"/><text x="57.7379%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.7295%" y="485" width="0.0805%" height="15" fill="rgb(253,34,51)" fg:x="717" fg:w="1"/><text x="57.9795%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.7295%" y="469" width="0.0805%" height="15" fill="rgb(227,26,34)" fg:x="717" fg:w="1"/><text x="57.9795%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="57.7295%" y="453" width="0.0805%" height="15" fill="rgb(245,75,19)" fg:x="717" fg:w="1"/><text x="57.9795%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.7295%" y="437" width="0.0805%" height="15" fill="rgb(250,191,31)" fg:x="717" fg:w="1"/><text x="57.9795%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.7295%" y="421" width="0.0805%" height="15" fill="rgb(224,11,50)" fg:x="717" fg:w="1"/><text x="57.9795%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="57.7295%" y="405" width="0.0805%" height="15" fill="rgb(231,171,7)" fg:x="717" fg:w="1"/><text x="57.9795%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.7295%" y="389" width="0.0805%" height="15" fill="rgb(252,214,10)" fg:x="717" fg:w="1"/><text x="57.9795%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.7295%" y="373" width="0.0805%" height="15" fill="rgb(249,45,46)" fg:x="717" fg:w="1"/><text x="57.9795%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (10 samples, 0.81%)</title><rect x="57.0853%" y="581" width="0.8052%" height="15" fill="rgb(240,173,7)" fg:x="709" fg:w="10"/><text x="57.3353%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="57.4074%" y="565" width="0.4831%" height="15" fill="rgb(235,214,13)" fg:x="713" fg:w="6"/><text x="57.6574%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="57.4074%" y="549" width="0.4831%" height="15" fill="rgb(245,156,8)" fg:x="713" fg:w="6"/><text x="57.6574%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.8100%" y="533" width="0.0805%" height="15" fill="rgb(235,46,12)" fg:x="718" fg:w="1"/><text x="58.0600%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.8100%" y="517" width="0.0805%" height="15" fill="rgb(221,81,14)" fg:x="718" fg:w="1"/><text x="58.0600%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="57.8100%" y="501" width="0.0805%" height="15" fill="rgb(238,207,9)" fg:x="718" fg:w="1"/><text x="58.0600%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="57.8100%" y="485" width="0.0805%" height="15" fill="rgb(224,129,35)" fg:x="718" fg:w="1"/><text x="58.0600%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.8100%" y="469" width="0.0805%" height="15" fill="rgb(243,218,34)" fg:x="718" fg:w="1"/><text x="58.0600%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.89%)</title><rect x="57.0853%" y="597" width="0.8857%" height="15" fill="rgb(220,166,13)" fg:x="709" fg:w="11"/><text x="57.3353%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="57.8905%" y="581" width="0.0805%" height="15" fill="rgb(227,167,49)" fg:x="719" fg:w="1"/><text x="58.1405%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8905%" y="565" width="0.0805%" height="15" fill="rgb(234,142,12)" fg:x="719" fg:w="1"/><text x="58.1405%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8905%" y="549" width="0.0805%" height="15" fill="rgb(207,100,48)" fg:x="719" fg:w="1"/><text x="58.1405%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.8905%" y="533" width="0.0805%" height="15" fill="rgb(210,25,14)" fg:x="719" fg:w="1"/><text x="58.1405%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.8905%" y="517" width="0.0805%" height="15" fill="rgb(246,116,27)" fg:x="719" fg:w="1"/><text x="58.1405%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.8905%" y="501" width="0.0805%" height="15" fill="rgb(214,193,42)" fg:x="719" fg:w="1"/><text x="58.1405%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.8905%" y="485" width="0.0805%" height="15" fill="rgb(214,122,8)" fg:x="719" fg:w="1"/><text x="58.1405%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.8905%" y="469" width="0.0805%" height="15" fill="rgb(244,173,18)" fg:x="719" fg:w="1"/><text x="58.1405%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.8905%" y="453" width="0.0805%" height="15" fill="rgb(232,68,19)" fg:x="719" fg:w="1"/><text x="58.1405%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.8905%" y="437" width="0.0805%" height="15" fill="rgb(236,224,1)" fg:x="719" fg:w="1"/><text x="58.1405%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.8905%" y="421" width="0.0805%" height="15" fill="rgb(240,11,8)" fg:x="719" fg:w="1"/><text x="58.1405%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.8905%" y="405" width="0.0805%" height="15" fill="rgb(244,159,20)" fg:x="719" fg:w="1"/><text x="58.1405%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.8905%" y="389" width="0.0805%" height="15" fill="rgb(240,223,54)" fg:x="719" fg:w="1"/><text x="58.1405%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.05%)</title><rect x="57.0048%" y="613" width="1.0467%" height="15" fill="rgb(237,146,5)" fg:x="708" fg:w="13"/><text x="57.2548%" y="623.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="57.9710%" y="597" width="0.0805%" height="15" fill="rgb(218,221,32)" fg:x="720" fg:w="1"/><text x="58.2210%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.9710%" y="581" width="0.0805%" height="15" fill="rgb(244,96,26)" fg:x="720" fg:w="1"/><text x="58.2210%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="57.9710%" y="565" width="0.0805%" height="15" fill="rgb(245,184,37)" fg:x="720" fg:w="1"/><text x="58.2210%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.2931%" y="565" width="0.0805%" height="15" fill="rgb(248,91,47)" fg:x="724" fg:w="1"/><text x="58.5431%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.3736%" y="533" width="0.0805%" height="15" fill="rgb(243,199,8)" fg:x="725" fg:w="1"/><text x="58.6236%" y="543.50"></text></g><g><title>engine::users::model::username_to_key (6 samples, 0.48%)</title><rect x="58.0515%" y="613" width="0.4831%" height="15" fill="rgb(249,12,15)" fg:x="721" fg:w="6"/><text x="58.3015%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="58.2126%" y="597" width="0.3221%" height="15" fill="rgb(245,97,12)" fg:x="723" fg:w="4"/><text x="58.4626%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="58.2931%" y="581" width="0.2415%" height="15" fill="rgb(244,61,1)" fg:x="724" fg:w="3"/><text x="58.5431%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.3736%" y="565" width="0.1610%" height="15" fill="rgb(222,194,10)" fg:x="725" fg:w="2"/><text x="58.6236%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.3736%" y="549" width="0.1610%" height="15" fill="rgb(226,178,8)" fg:x="725" fg:w="2"/><text x="58.6236%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.4541%" y="533" width="0.0805%" height="15" fill="rgb(241,32,34)" fg:x="726" fg:w="1"/><text x="58.7041%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.6151%" y="565" width="0.0805%" height="15" fill="rgb(254,26,6)" fg:x="728" fg:w="1"/><text x="58.8651%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.6151%" y="549" width="0.0805%" height="15" fill="rgb(249,71,11)" fg:x="728" fg:w="1"/><text x="58.8651%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.6151%" y="533" width="0.0805%" height="15" fill="rgb(232,170,27)" fg:x="728" fg:w="1"/><text x="58.8651%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.6151%" y="517" width="0.0805%" height="15" fill="rgb(214,223,17)" fg:x="728" fg:w="1"/><text x="58.8651%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="58.5346%" y="597" width="0.2415%" height="15" fill="rgb(250,18,15)" fg:x="727" fg:w="3"/><text x="58.7846%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="58.6151%" y="581" width="0.1610%" height="15" fill="rgb(212,153,51)" fg:x="728" fg:w="2"/><text x="58.8651%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="58.6957%" y="565" width="0.0805%" height="15" fill="rgb(219,194,12)" fg:x="729" fg:w="1"/><text x="58.9457%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.6957%" y="549" width="0.0805%" height="15" fill="rgb(212,58,17)" fg:x="729" fg:w="1"/><text x="58.9457%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.7762%" y="565" width="0.0805%" height="15" fill="rgb(254,5,10)" fg:x="730" fg:w="1"/><text x="59.0262%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.7762%" y="549" width="0.0805%" height="15" fill="rgb(246,91,7)" fg:x="730" fg:w="1"/><text x="59.0262%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="58.8567%" y="565" width="0.1610%" height="15" fill="rgb(218,108,49)" fg:x="731" fg:w="2"/><text x="59.1067%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.8567%" y="549" width="0.1610%" height="15" fill="rgb(238,123,20)" fg:x="731" fg:w="2"/><text x="59.1067%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="58.8567%" y="533" width="0.1610%" height="15" fill="rgb(231,69,23)" fg:x="731" fg:w="2"/><text x="59.1067%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.9372%" y="517" width="0.0805%" height="15" fill="rgb(230,209,3)" fg:x="732" fg:w="1"/><text x="59.1872%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="58.9372%" y="501" width="0.0805%" height="15" fill="rgb(231,19,0)" fg:x="732" fg:w="1"/><text x="59.1872%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.9372%" y="485" width="0.0805%" height="15" fill="rgb(226,192,25)" fg:x="732" fg:w="1"/><text x="59.1872%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.9372%" y="469" width="0.0805%" height="15" fill="rgb(223,175,53)" fg:x="732" fg:w="1"/><text x="59.1872%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="58.7762%" y="597" width="0.3221%" height="15" fill="rgb(248,35,51)" fg:x="730" fg:w="4"/><text x="59.0262%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="58.7762%" y="581" width="0.3221%" height="15" fill="rgb(230,37,26)" fg:x="730" fg:w="4"/><text x="59.0262%" y="591.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="59.0177%" y="565" width="0.0805%" height="15" fill="rgb(206,120,22)" fg:x="733" fg:w="1"/><text x="59.2677%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.0982%" y="437" width="0.0805%" height="15" fill="rgb(207,165,28)" fg:x="734" fg:w="1"/><text x="59.3482%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (9 samples, 0.72%)</title><rect x="58.5346%" y="613" width="0.7246%" height="15" fill="rgb(226,23,46)" fg:x="727" fg:w="9"/><text x="58.7846%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="59.0982%" y="597" width="0.1610%" height="15" fill="rgb(208,130,44)" fg:x="734" fg:w="2"/><text x="59.3482%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="59.0982%" y="581" width="0.1610%" height="15" fill="rgb(231,67,8)" fg:x="734" fg:w="2"/><text x="59.3482%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="59.0982%" y="565" width="0.1610%" height="15" fill="rgb(205,183,22)" fg:x="734" fg:w="2"/><text x="59.3482%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="59.0982%" y="549" width="0.1610%" height="15" fill="rgb(224,47,9)" fg:x="734" fg:w="2"/><text x="59.3482%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="59.0982%" y="533" width="0.1610%" height="15" fill="rgb(250,183,49)" fg:x="734" fg:w="2"/><text x="59.3482%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="59.0982%" y="517" width="0.1610%" height="15" fill="rgb(220,151,39)" fg:x="734" fg:w="2"/><text x="59.3482%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="59.0982%" y="501" width="0.1610%" height="15" fill="rgb(220,118,20)" fg:x="734" fg:w="2"/><text x="59.3482%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="59.0982%" y="485" width="0.1610%" height="15" fill="rgb(231,65,51)" fg:x="734" fg:w="2"/><text x="59.3482%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.16%)</title><rect x="59.0982%" y="469" width="0.1610%" height="15" fill="rgb(253,125,37)" fg:x="734" fg:w="2"/><text x="59.3482%" y="479.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.16%)</title><rect x="59.0982%" y="453" width="0.1610%" height="15" fill="rgb(232,102,6)" fg:x="734" fg:w="2"/><text x="59.3482%" y="463.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="59.1787%" y="437" width="0.0805%" height="15" fill="rgb(251,105,13)" fg:x="735" fg:w="1"/><text x="59.4287%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="59.2593%" y="581" width="0.1610%" height="15" fill="rgb(222,179,29)" fg:x="736" fg:w="2"/><text x="59.5093%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.4203%" y="501" width="0.0805%" height="15" fill="rgb(229,180,53)" fg:x="738" fg:w="1"/><text x="59.6703%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.5813%" y="469" width="0.0805%" height="15" fill="rgb(238,104,13)" fg:x="740" fg:w="1"/><text x="59.8313%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.5813%" y="453" width="0.0805%" height="15" fill="rgb(210,130,5)" fg:x="740" fg:w="1"/><text x="59.8313%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.6618%" y="469" width="0.1610%" height="15" fill="rgb(233,87,49)" fg:x="741" fg:w="2"/><text x="59.9118%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.7424%" y="453" width="0.0805%" height="15" fill="rgb(243,34,9)" fg:x="742" fg:w="1"/><text x="59.9924%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7424%" y="437" width="0.0805%" height="15" fill="rgb(235,225,10)" fg:x="742" fg:w="1"/><text x="59.9924%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.9034%" y="453" width="0.0805%" height="15" fill="rgb(212,0,30)" fg:x="744" fg:w="1"/><text x="60.1534%" y="463.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="59.4203%" y="549" width="0.7246%" height="15" fill="rgb(211,177,0)" fg:x="738" fg:w="9"/><text x="59.6703%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="59.4203%" y="533" width="0.7246%" height="15" fill="rgb(225,220,11)" fg:x="738" fg:w="9"/><text x="59.6703%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="59.4203%" y="517" width="0.7246%" height="15" fill="rgb(215,10,13)" fg:x="738" fg:w="9"/><text x="59.6703%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="59.5008%" y="501" width="0.6441%" height="15" fill="rgb(240,177,14)" fg:x="739" fg:w="8"/><text x="59.7508%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="59.5008%" y="485" width="0.6441%" height="15" fill="rgb(243,7,39)" fg:x="739" fg:w="8"/><text x="59.7508%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="59.8229%" y="469" width="0.3221%" height="15" fill="rgb(212,99,0)" fg:x="743" fg:w="4"/><text x="60.0729%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.9839%" y="453" width="0.1610%" height="15" fill="rgb(225,162,48)" fg:x="745" fg:w="2"/><text x="60.2339%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="60.0644%" y="437" width="0.0805%" height="15" fill="rgb(246,16,25)" fg:x="746" fg:w="1"/><text x="60.3144%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.0644%" y="421" width="0.0805%" height="15" fill="rgb(220,150,2)" fg:x="746" fg:w="1"/><text x="60.3144%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="60.0644%" y="405" width="0.0805%" height="15" fill="rgb(237,113,11)" fg:x="746" fg:w="1"/><text x="60.3144%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.0644%" y="389" width="0.0805%" height="15" fill="rgb(236,70,20)" fg:x="746" fg:w="1"/><text x="60.3144%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.0644%" y="373" width="0.0805%" height="15" fill="rgb(234,94,7)" fg:x="746" fg:w="1"/><text x="60.3144%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.0644%" y="357" width="0.0805%" height="15" fill="rgb(250,221,0)" fg:x="746" fg:w="1"/><text x="60.3144%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="60.0644%" y="341" width="0.0805%" height="15" fill="rgb(245,149,46)" fg:x="746" fg:w="1"/><text x="60.3144%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (11 samples, 0.89%)</title><rect x="59.4203%" y="565" width="0.8857%" height="15" fill="rgb(215,37,27)" fg:x="738" fg:w="11"/><text x="59.6703%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.1449%" y="549" width="0.1610%" height="15" fill="rgb(232,65,3)" fg:x="747" fg:w="2"/><text x="60.3949%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1449%" y="533" width="0.1610%" height="15" fill="rgb(214,2,16)" fg:x="747" fg:w="2"/><text x="60.3949%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="60.1449%" y="517" width="0.1610%" height="15" fill="rgb(227,131,50)" fg:x="747" fg:w="2"/><text x="60.3949%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1449%" y="501" width="0.1610%" height="15" fill="rgb(247,131,45)" fg:x="747" fg:w="2"/><text x="60.3949%" y="511.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="60.1449%" y="485" width="0.1610%" height="15" fill="rgb(215,97,47)" fg:x="747" fg:w="2"/><text x="60.3949%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.1449%" y="469" width="0.1610%" height="15" fill="rgb(233,143,12)" fg:x="747" fg:w="2"/><text x="60.3949%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.1449%" y="453" width="0.1610%" height="15" fill="rgb(222,57,17)" fg:x="747" fg:w="2"/><text x="60.3949%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.1449%" y="437" width="0.1610%" height="15" fill="rgb(214,119,38)" fg:x="747" fg:w="2"/><text x="60.3949%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.2254%" y="421" width="0.0805%" height="15" fill="rgb(217,28,47)" fg:x="748" fg:w="1"/><text x="60.4754%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.2254%" y="405" width="0.0805%" height="15" fill="rgb(231,14,52)" fg:x="748" fg:w="1"/><text x="60.4754%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3865%" y="533" width="0.0805%" height="15" fill="rgb(220,158,18)" fg:x="750" fg:w="1"/><text x="60.6365%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3865%" y="517" width="0.0805%" height="15" fill="rgb(222,143,46)" fg:x="750" fg:w="1"/><text x="60.6365%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="60.3060%" y="565" width="0.3221%" height="15" fill="rgb(227,165,5)" fg:x="749" fg:w="4"/><text x="60.5560%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="60.3060%" y="549" width="0.3221%" height="15" fill="rgb(216,222,49)" fg:x="749" fg:w="4"/><text x="60.5560%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="60.4670%" y="533" width="0.1610%" height="15" fill="rgb(238,73,39)" fg:x="751" fg:w="2"/><text x="60.7170%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.4670%" y="517" width="0.1610%" height="15" fill="rgb(252,115,9)" fg:x="751" fg:w="2"/><text x="60.7170%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="60.5475%" y="501" width="0.0805%" height="15" fill="rgb(238,202,4)" fg:x="752" fg:w="1"/><text x="60.7975%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5475%" y="485" width="0.0805%" height="15" fill="rgb(252,153,44)" fg:x="752" fg:w="1"/><text x="60.7975%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (18 samples, 1.45%)</title><rect x="59.2593%" y="597" width="1.4493%" height="15" fill="rgb(235,128,27)" fg:x="736" fg:w="18"/><text x="59.5093%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.29%)</title><rect x="59.4203%" y="581" width="1.2882%" height="15" fill="rgb(221,121,47)" fg:x="738" fg:w="16"/><text x="59.6703%" y="591.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="60.6280%" y="565" width="0.0805%" height="15" fill="rgb(247,211,47)" fg:x="753" fg:w="1"/><text x="60.8780%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.6280%" y="549" width="0.0805%" height="15" fill="rgb(252,47,49)" fg:x="753" fg:w="1"/><text x="60.8780%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="60.7085%" y="565" width="0.1610%" height="15" fill="rgb(219,119,53)" fg:x="754" fg:w="2"/><text x="60.9585%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.7890%" y="549" width="0.0805%" height="15" fill="rgb(243,165,53)" fg:x="755" fg:w="1"/><text x="61.0390%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="60.7890%" y="533" width="0.0805%" height="15" fill="rgb(230,12,35)" fg:x="755" fg:w="1"/><text x="61.0390%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="60.7085%" y="581" width="0.3221%" height="15" fill="rgb(239,57,49)" fg:x="754" fg:w="4"/><text x="60.9585%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="60.8696%" y="565" width="0.1610%" height="15" fill="rgb(231,154,7)" fg:x="756" fg:w="2"/><text x="61.1196%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.9501%" y="549" width="0.0805%" height="15" fill="rgb(248,81,34)" fg:x="757" fg:w="1"/><text x="61.2001%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.9501%" y="533" width="0.0805%" height="15" fill="rgb(247,9,5)" fg:x="757" fg:w="1"/><text x="61.2001%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.9501%" y="517" width="0.0805%" height="15" fill="rgb(228,172,27)" fg:x="757" fg:w="1"/><text x="61.2001%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.9501%" y="501" width="0.0805%" height="15" fill="rgb(230,57,44)" fg:x="757" fg:w="1"/><text x="61.2001%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.9501%" y="485" width="0.0805%" height="15" fill="rgb(249,35,22)" fg:x="757" fg:w="1"/><text x="61.2001%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.9501%" y="469" width="0.0805%" height="15" fill="rgb(250,137,27)" fg:x="757" fg:w="1"/><text x="61.2001%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.9501%" y="453" width="0.0805%" height="15" fill="rgb(251,57,31)" fg:x="757" fg:w="1"/><text x="61.2001%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.9501%" y="437" width="0.0805%" height="15" fill="rgb(238,60,0)" fg:x="757" fg:w="1"/><text x="61.2001%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.9501%" y="421" width="0.0805%" height="15" fill="rgb(242,185,39)" fg:x="757" fg:w="1"/><text x="61.2001%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.9501%" y="405" width="0.0805%" height="15" fill="rgb(240,63,43)" fg:x="757" fg:w="1"/><text x="61.2001%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.9501%" y="389" width="0.0805%" height="15" fill="rgb(236,155,6)" fg:x="757" fg:w="1"/><text x="61.2001%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.9501%" y="373" width="0.0805%" height="15" fill="rgb(215,11,29)" fg:x="757" fg:w="1"/><text x="61.2001%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.9501%" y="357" width="0.0805%" height="15" fill="rgb(228,180,48)" fg:x="757" fg:w="1"/><text x="61.2001%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.9501%" y="341" width="0.0805%" height="15" fill="rgb(241,102,12)" fg:x="757" fg:w="1"/><text x="61.2001%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.9501%" y="325" width="0.0805%" height="15" fill="rgb(246,213,4)" fg:x="757" fg:w="1"/><text x="61.2001%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="61.0306%" y="565" width="0.0805%" height="15" fill="rgb(218,134,35)" fg:x="758" fg:w="1"/><text x="61.2806%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.1111%" y="549" width="0.0805%" height="15" fill="rgb(251,117,35)" fg:x="759" fg:w="1"/><text x="61.3611%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.1111%" y="533" width="0.0805%" height="15" fill="rgb(206,156,45)" fg:x="759" fg:w="1"/><text x="61.3611%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.1111%" y="517" width="0.0805%" height="15" fill="rgb(218,52,27)" fg:x="759" fg:w="1"/><text x="61.3611%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.1916%" y="485" width="0.0805%" height="15" fill="rgb(238,83,36)" fg:x="760" fg:w="1"/><text x="61.4416%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (762 samples, 61.35%)</title><rect x="0.0000%" y="693" width="61.3527%" height="15" fill="rgb(218,53,43)" fg:x="0" fg:w="762"/><text x="0.2500%" y="703.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (762 samples, 61.35%)</title><rect x="0.0000%" y="677" width="61.3527%" height="15" fill="rgb(239,54,39)" fg:x="0" fg:w="762"/><text x="0.2500%" y="687.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (761 samples, 61.27%)</title><rect x="0.0805%" y="661" width="61.2721%" height="15" fill="rgb(212,198,13)" fg:x="1" fg:w="761"/><text x="0.3305%" y="671.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (217 samples, 17.47%)</title><rect x="43.8808%" y="645" width="17.4718%" height="15" fill="rgb(234,54,46)" fg:x="545" fg:w="217"/><text x="44.1308%" y="655.50">engine::session::Session::e..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (217 samples, 17.47%)</title><rect x="43.8808%" y="629" width="17.4718%" height="15" fill="rgb(217,120,7)" fg:x="545" fg:w="217"/><text x="44.1308%" y="639.50">engine::session::Session::e..</text></g><g><title>kernel::model::entry::EntryResolver::world (26 samples, 2.09%)</title><rect x="59.2593%" y="613" width="2.0934%" height="15" fill="rgb(246,39,15)" fg:x="736" fg:w="26"/><text x="59.5093%" y="623.50">k..</text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="60.7085%" y="597" width="0.6441%" height="15" fill="rgb(242,143,31)" fg:x="754" fg:w="8"/><text x="60.9585%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="61.0306%" y="581" width="0.3221%" height="15" fill="rgb(252,60,24)" fg:x="758" fg:w="4"/><text x="61.2806%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="61.1111%" y="565" width="0.2415%" height="15" fill="rgb(249,220,7)" fg:x="759" fg:w="3"/><text x="61.3611%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="61.1916%" y="549" width="0.1610%" height="15" fill="rgb(236,67,13)" fg:x="760" fg:w="2"/><text x="61.4416%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.1916%" y="533" width="0.1610%" height="15" fill="rgb(210,62,39)" fg:x="760" fg:w="2"/><text x="61.4416%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="61.1916%" y="517" width="0.1610%" height="15" fill="rgb(219,122,53)" fg:x="760" fg:w="2"/><text x="61.4416%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.1916%" y="501" width="0.1610%" height="15" fill="rgb(218,87,25)" fg:x="760" fg:w="2"/><text x="61.4416%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.2721%" y="485" width="0.0805%" height="15" fill="rgb(234,179,48)" fg:x="761" fg:w="1"/><text x="61.5221%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.5137%" y="629" width="0.0805%" height="15" fill="rgb(248,90,0)" fg:x="764" fg:w="1"/><text x="61.7637%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="61.5942%" y="629" width="0.0805%" height="15" fill="rgb(207,228,37)" fg:x="765" fg:w="1"/><text x="61.8442%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="61.7552%" y="549" width="0.1610%" height="15" fill="rgb(235,214,15)" fg:x="767" fg:w="2"/><text x="62.0052%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="61.9163%" y="549" width="0.4026%" height="15" fill="rgb(210,144,39)" fg:x="769" fg:w="5"/><text x="62.1663%" y="559.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="62.0773%" y="533" width="0.2415%" height="15" fill="rgb(222,67,41)" fg:x="771" fg:w="3"/><text x="62.3273%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.3188%" y="517" width="0.0805%" height="15" fill="rgb(205,35,37)" fg:x="774" fg:w="1"/><text x="62.5688%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="62.3188%" y="533" width="0.1610%" height="15" fill="rgb(216,125,40)" fg:x="774" fg:w="2"/><text x="62.5688%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.3994%" y="517" width="0.0805%" height="15" fill="rgb(228,227,20)" fg:x="775" fg:w="1"/><text x="62.6494%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.3994%" y="501" width="0.0805%" height="15" fill="rgb(242,173,45)" fg:x="775" fg:w="1"/><text x="62.6494%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.4799%" y="533" width="0.0805%" height="15" fill="rgb(215,79,24)" fg:x="776" fg:w="1"/><text x="62.7299%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="62.5604%" y="533" width="0.1610%" height="15" fill="rgb(238,164,38)" fg:x="777" fg:w="2"/><text x="62.8104%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.6409%" y="517" width="0.0805%" height="15" fill="rgb(245,196,38)" fg:x="778" fg:w="1"/><text x="62.8909%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.7214%" y="517" width="0.1610%" height="15" fill="rgb(231,217,29)" fg:x="779" fg:w="2"/><text x="62.9714%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.29%)</title><rect x="61.6747%" y="581" width="1.2882%" height="15" fill="rgb(245,6,4)" fg:x="766" fg:w="16"/><text x="61.9247%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.21%)</title><rect x="61.7552%" y="565" width="1.2077%" height="15" fill="rgb(214,76,49)" fg:x="767" fg:w="15"/><text x="62.0052%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="62.3188%" y="549" width="0.6441%" height="15" fill="rgb(205,96,12)" fg:x="774" fg:w="8"/><text x="62.5688%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="62.7214%" y="533" width="0.2415%" height="15" fill="rgb(243,131,4)" fg:x="779" fg:w="3"/><text x="62.9714%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.8824%" y="517" width="0.0805%" height="15" fill="rgb(214,114,4)" fg:x="781" fg:w="1"/><text x="63.1324%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.8824%" y="501" width="0.0805%" height="15" fill="rgb(234,215,15)" fg:x="781" fg:w="1"/><text x="63.1324%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.53%)</title><rect x="61.6747%" y="597" width="1.5298%" height="15" fill="rgb(250,216,45)" fg:x="766" fg:w="19"/><text x="61.9247%" y="607.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="62.9630%" y="581" width="0.2415%" height="15" fill="rgb(236,128,4)" fg:x="782" fg:w="3"/><text x="63.2130%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.09%)</title><rect x="61.4332%" y="645" width="2.0934%" height="15" fill="rgb(234,50,33)" fg:x="763" fg:w="26"/><text x="61.6832%" y="655.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (23 samples, 1.85%)</title><rect x="61.6747%" y="629" width="1.8519%" height="15" fill="rgb(253,131,37)" fg:x="766" fg:w="23"/><text x="61.9247%" y="639.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.85%)</title><rect x="61.6747%" y="613" width="1.8519%" height="15" fill="rgb(218,55,27)" fg:x="766" fg:w="23"/><text x="61.9247%" y="623.50">&lt;..</text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="63.2045%" y="597" width="0.3221%" height="15" fill="rgb(241,220,28)" fg:x="785" fg:w="4"/><text x="63.4545%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="63.8486%" y="597" width="0.0805%" height="15" fill="rgb(241,90,48)" fg:x="793" fg:w="1"/><text x="64.0986%" y="607.50"></text></g><g><title>dlerror (5 samples, 0.40%)</title><rect x="64.0902%" y="533" width="0.4026%" height="15" fill="rgb(216,43,37)" fg:x="796" fg:w="5"/><text x="64.3402%" y="543.50"></text></g><g><title>__asprintf (4 samples, 0.32%)</title><rect x="64.1707%" y="517" width="0.3221%" height="15" fill="rgb(207,173,9)" fg:x="797" fg:w="4"/><text x="64.4207%" y="527.50"></text></g><g><title>_IO_default_uflow (1 samples, 0.08%)</title><rect x="64.4122%" y="501" width="0.0805%" height="15" fill="rgb(240,126,30)" fg:x="800" fg:w="1"/><text x="64.6622%" y="511.50"></text></g><g><title>dlopen (8 samples, 0.64%)</title><rect x="64.4928%" y="533" width="0.6441%" height="15" fill="rgb(228,178,53)" fg:x="801" fg:w="8"/><text x="64.7428%" y="543.50"></text></g><g><title>_dl_catch_error (8 samples, 0.64%)</title><rect x="64.4928%" y="517" width="0.6441%" height="15" fill="rgb(217,33,4)" fg:x="801" fg:w="8"/><text x="64.7428%" y="527.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="64.4928%" y="501" width="0.6441%" height="15" fill="rgb(206,124,34)" fg:x="801" fg:w="8"/><text x="64.7428%" y="511.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="64.4928%" y="485" width="0.6441%" height="15" fill="rgb(208,122,53)" fg:x="801" fg:w="8"/><text x="64.7428%" y="495.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="64.4928%" y="469" width="0.6441%" height="15" fill="rgb(215,202,26)" fg:x="801" fg:w="8"/><text x="64.7428%" y="479.50"></text></g><g><title>libloading::safe::Library::new (14 samples, 1.13%)</title><rect x="64.0902%" y="549" width="1.1272%" height="15" fill="rgb(232,198,31)" fg:x="796" fg:w="14"/><text x="64.3402%" y="559.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="65.1369%" y="533" width="0.0805%" height="15" fill="rgb(222,23,35)" fg:x="809" fg:w="1"/><text x="65.3869%" y="543.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="65.1369%" y="517" width="0.0805%" height="15" fill="rgb(242,27,53)" fg:x="809" fg:w="1"/><text x="65.3869%" y="527.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="65.1369%" y="501" width="0.0805%" height="15" fill="rgb(210,216,42)" fg:x="809" fg:w="1"/><text x="65.3869%" y="511.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="65.1369%" y="485" width="0.0805%" height="15" fill="rgb(234,39,38)" fg:x="809" fg:w="1"/><text x="65.3869%" y="495.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="65.1369%" y="469" width="0.0805%" height="15" fill="rgb(235,126,54)" fg:x="809" fg:w="1"/><text x="65.3869%" y="479.50"></text></g><g><title>core::slice::memchr::repeat_byte (1 samples, 0.08%)</title><rect x="65.1369%" y="453" width="0.0805%" height="15" fill="rgb(235,150,33)" fg:x="809" fg:w="1"/><text x="65.3869%" y="463.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (16 samples, 1.29%)</title><rect x="64.0097%" y="581" width="1.2882%" height="15" fill="rgb(249,49,53)" fg:x="795" fg:w="16"/><text x="64.2597%" y="591.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (16 samples, 1.29%)</title><rect x="64.0097%" y="565" width="1.2882%" height="15" fill="rgb(238,60,50)" fg:x="795" fg:w="16"/><text x="64.2597%" y="575.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="65.2174%" y="549" width="0.0805%" height="15" fill="rgb(210,5,2)" fg:x="810" fg:w="1"/><text x="65.4674%" y="559.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="65.2174%" y="533" width="0.0805%" height="15" fill="rgb(214,207,24)" fg:x="810" fg:w="1"/><text x="65.4674%" y="543.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="65.2174%" y="517" width="0.0805%" height="15" fill="rgb(228,173,2)" fg:x="810" fg:w="1"/><text x="65.4674%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.2979%" y="565" width="0.0805%" height="15" fill="rgb(244,26,8)" fg:x="811" fg:w="1"/><text x="65.5479%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="65.2979%" y="549" width="0.0805%" height="15" fill="rgb(249,153,35)" fg:x="811" fg:w="1"/><text x="65.5479%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.2979%" y="533" width="0.0805%" height="15" fill="rgb(221,215,40)" fg:x="811" fg:w="1"/><text x="65.5479%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (2 samples, 0.16%)</title><rect x="65.5395%" y="533" width="0.1610%" height="15" fill="rgb(238,106,35)" fg:x="814" fg:w="2"/><text x="65.7895%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.5395%" y="517" width="0.1610%" height="15" fill="rgb(207,195,21)" fg:x="814" fg:w="2"/><text x="65.7895%" y="527.50"></text></g><g><title>engine::session::Session::initialize (23 samples, 1.85%)</title><rect x="63.9291%" y="597" width="1.8519%" height="15" fill="rgb(205,43,29)" fg:x="794" fg:w="23"/><text x="64.1791%" y="607.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (6 samples, 0.48%)</title><rect x="65.2979%" y="581" width="0.4831%" height="15" fill="rgb(236,35,21)" fg:x="811" fg:w="6"/><text x="65.5479%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.40%)</title><rect x="65.3784%" y="565" width="0.4026%" height="15" fill="rgb(244,74,8)" fg:x="812" fg:w="5"/><text x="65.6284%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="65.4589%" y="549" width="0.3221%" height="15" fill="rgb(241,229,7)" fg:x="813" fg:w="4"/><text x="65.7089%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="65.7005%" y="533" width="0.0805%" height="15" fill="rgb(212,223,25)" fg:x="816" fg:w="1"/><text x="65.9505%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="65.7005%" y="517" width="0.0805%" height="15" fill="rgb(234,58,53)" fg:x="816" fg:w="1"/><text x="65.9505%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="65.7005%" y="501" width="0.0805%" height="15" fill="rgb(244,36,1)" fg:x="816" fg:w="1"/><text x="65.9505%" y="511.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (29 samples, 2.33%)</title><rect x="63.5266%" y="645" width="2.3349%" height="15" fill="rgb(222,40,54)" fg:x="789" fg:w="29"/><text x="63.7766%" y="655.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (28 samples, 2.25%)</title><rect x="63.6071%" y="629" width="2.2544%" height="15" fill="rgb(210,207,39)" fg:x="790" fg:w="28"/><text x="63.8571%" y="639.50">e..</text></g><g><title>engine::session::Session::new (27 samples, 2.17%)</title><rect x="63.6876%" y="613" width="2.1739%" height="15" fill="rgb(234,52,14)" fg:x="791" fg:w="27"/><text x="63.9376%" y="623.50">e..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="65.7810%" y="597" width="0.0805%" height="15" fill="rgb(239,108,46)" fg:x="817" fg:w="1"/><text x="66.0310%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="65.7810%" y="581" width="0.0805%" height="15" fill="rgb(252,223,5)" fg:x="817" fg:w="1"/><text x="66.0310%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.8615%" y="613" width="0.0805%" height="15" fill="rgb(227,181,11)" fg:x="818" fg:w="1"/><text x="66.1115%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9420%" y="597" width="0.0805%" height="15" fill="rgb(248,126,40)" fg:x="819" fg:w="1"/><text x="66.1920%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="65.9420%" y="613" width="0.1610%" height="15" fill="rgb(243,1,18)" fg:x="819" fg:w="2"/><text x="66.1920%" y="623.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="66.0225%" y="597" width="0.0805%" height="15" fill="rgb(214,145,23)" fg:x="820" fg:w="1"/><text x="66.2725%" y="607.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.1031%" y="613" width="0.0805%" height="15" fill="rgb(241,218,11)" fg:x="821" fg:w="1"/><text x="66.3531%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="66.1836%" y="581" width="0.0805%" height="15" fill="rgb(214,219,24)" fg:x="822" fg:w="1"/><text x="66.4336%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="66.3446%" y="549" width="0.0805%" height="15" fill="rgb(235,32,7)" fg:x="824" fg:w="1"/><text x="66.5946%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="66.3446%" y="533" width="0.0805%" height="15" fill="rgb(227,121,28)" fg:x="824" fg:w="1"/><text x="66.5946%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.3446%" y="517" width="0.0805%" height="15" fill="rgb(216,129,49)" fg:x="824" fg:w="1"/><text x="66.5946%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.3446%" y="501" width="0.0805%" height="15" fill="rgb(207,194,50)" fg:x="824" fg:w="1"/><text x="66.5946%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.3446%" y="485" width="0.0805%" height="15" fill="rgb(207,4,18)" fg:x="824" fg:w="1"/><text x="66.5946%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="66.5056%" y="517" width="0.0805%" height="15" fill="rgb(213,50,30)" fg:x="826" fg:w="1"/><text x="66.7556%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="66.5862%" y="517" width="0.1610%" height="15" fill="rgb(208,77,22)" fg:x="827" fg:w="2"/><text x="66.8362%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="66.5862%" y="501" width="0.1610%" height="15" fill="rgb(244,204,34)" fg:x="827" fg:w="2"/><text x="66.8362%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="66.5862%" y="485" width="0.1610%" height="15" fill="rgb(230,20,17)" fg:x="827" fg:w="2"/><text x="66.8362%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="66.5862%" y="469" width="0.1610%" height="15" fill="rgb(237,83,15)" fg:x="827" fg:w="2"/><text x="66.8362%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.8277%" y="485" width="0.0805%" height="15" fill="rgb(221,109,25)" fg:x="830" fg:w="1"/><text x="67.0777%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.8277%" y="469" width="0.0805%" height="15" fill="rgb(205,194,52)" fg:x="830" fg:w="1"/><text x="67.0777%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="66.9082%" y="485" width="0.2415%" height="15" fill="rgb(244,173,54)" fg:x="831" fg:w="3"/><text x="67.1582%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="66.9887%" y="469" width="0.1610%" height="15" fill="rgb(227,181,18)" fg:x="832" fg:w="2"/><text x="67.2387%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="67.0692%" y="453" width="0.0805%" height="15" fill="rgb(238,36,30)" fg:x="833" fg:w="1"/><text x="67.3192%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.0692%" y="437" width="0.0805%" height="15" fill="rgb(254,85,0)" fg:x="833" fg:w="1"/><text x="67.3192%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="67.0692%" y="421" width="0.0805%" height="15" fill="rgb(247,63,33)" fg:x="833" fg:w="1"/><text x="67.3192%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.0692%" y="405" width="0.0805%" height="15" fill="rgb(220,7,54)" fg:x="833" fg:w="1"/><text x="67.3192%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="66.7472%" y="501" width="0.4831%" height="15" fill="rgb(238,227,21)" fg:x="829" fg:w="6"/><text x="66.9972%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.1498%" y="485" width="0.0805%" height="15" fill="rgb(237,29,31)" fg:x="834" fg:w="1"/><text x="67.3998%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="67.1498%" y="469" width="0.0805%" height="15" fill="rgb(211,21,50)" fg:x="834" fg:w="1"/><text x="67.3998%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.1498%" y="453" width="0.0805%" height="15" fill="rgb(239,119,2)" fg:x="834" fg:w="1"/><text x="67.3998%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.89%)</title><rect x="66.4251%" y="549" width="0.8857%" height="15" fill="rgb(250,2,39)" fg:x="825" fg:w="11"/><text x="66.6751%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="66.5056%" y="533" width="0.8052%" height="15" fill="rgb(244,46,53)" fg:x="826" fg:w="10"/><text x="66.7556%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="66.7472%" y="517" width="0.5636%" height="15" fill="rgb(209,21,19)" fg:x="829" fg:w="7"/><text x="66.9972%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.2303%" y="501" width="0.0805%" height="15" fill="rgb(236,145,4)" fg:x="835" fg:w="1"/><text x="67.4803%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="67.2303%" y="485" width="0.0805%" height="15" fill="rgb(220,133,36)" fg:x="835" fg:w="1"/><text x="67.4803%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.3108%" y="517" width="0.0805%" height="15" fill="rgb(244,18,3)" fg:x="836" fg:w="1"/><text x="67.5608%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.3913%" y="485" width="0.0805%" height="15" fill="rgb(232,171,48)" fg:x="837" fg:w="1"/><text x="67.6413%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.4718%" y="485" width="0.0805%" height="15" fill="rgb(223,223,53)" fg:x="838" fg:w="1"/><text x="67.7218%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="67.3108%" y="549" width="0.4026%" height="15" fill="rgb(246,92,13)" fg:x="836" fg:w="5"/><text x="67.5608%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="67.3108%" y="533" width="0.4026%" height="15" fill="rgb(229,171,10)" fg:x="836" fg:w="5"/><text x="67.5608%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="67.3913%" y="517" width="0.3221%" height="15" fill="rgb(213,131,26)" fg:x="837" fg:w="4"/><text x="67.6413%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="67.3913%" y="501" width="0.3221%" height="15" fill="rgb(242,87,54)" fg:x="837" fg:w="4"/><text x="67.6413%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.5523%" y="485" width="0.1610%" height="15" fill="rgb(237,21,35)" fg:x="839" fg:w="2"/><text x="67.8023%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.6329%" y="469" width="0.0805%" height="15" fill="rgb(253,13,47)" fg:x="840" fg:w="1"/><text x="67.8829%" y="479.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="67.7134%" y="533" width="0.0805%" height="15" fill="rgb(215,122,49)" fg:x="841" fg:w="1"/><text x="67.9634%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="67.7134%" y="517" width="0.0805%" height="15" fill="rgb(209,179,30)" fg:x="841" fg:w="1"/><text x="67.9634%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.7134%" y="501" width="0.0805%" height="15" fill="rgb(235,100,24)" fg:x="841" fg:w="1"/><text x="67.9634%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.7939%" y="501" width="0.0805%" height="15" fill="rgb(209,67,24)" fg:x="842" fg:w="1"/><text x="68.0439%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="67.8744%" y="501" width="0.0805%" height="15" fill="rgb(206,74,32)" fg:x="843" fg:w="1"/><text x="68.1244%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.1965%" y="453" width="0.0805%" height="15" fill="rgb(212,45,25)" fg:x="847" fg:w="1"/><text x="68.4465%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.1965%" y="437" width="0.0805%" height="15" fill="rgb(239,26,3)" fg:x="847" fg:w="1"/><text x="68.4465%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="68.2770%" y="437" width="0.0805%" height="15" fill="rgb(218,36,15)" fg:x="848" fg:w="1"/><text x="68.5270%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="68.2770%" y="453" width="0.1610%" height="15" fill="rgb(206,108,24)" fg:x="848" fg:w="2"/><text x="68.5270%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="68.3575%" y="437" width="0.0805%" height="15" fill="rgb(234,204,42)" fg:x="849" fg:w="1"/><text x="68.6075%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="68.3575%" y="421" width="0.0805%" height="15" fill="rgb(229,2,11)" fg:x="849" fg:w="1"/><text x="68.6075%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3575%" y="405" width="0.0805%" height="15" fill="rgb(221,20,48)" fg:x="849" fg:w="1"/><text x="68.6075%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.4380%" y="421" width="0.0805%" height="15" fill="rgb(244,164,10)" fg:x="850" fg:w="1"/><text x="68.6880%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.4380%" y="405" width="0.0805%" height="15" fill="rgb(243,229,2)" fg:x="850" fg:w="1"/><text x="68.6880%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4380%" y="389" width="0.0805%" height="15" fill="rgb(232,131,37)" fg:x="850" fg:w="1"/><text x="68.6880%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="68.5185%" y="405" width="0.0805%" height="15" fill="rgb(217,156,11)" fg:x="851" fg:w="1"/><text x="68.7685%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="68.1965%" y="469" width="0.4831%" height="15" fill="rgb(239,99,48)" fg:x="847" fg:w="6"/><text x="68.4465%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="68.4380%" y="453" width="0.2415%" height="15" fill="rgb(231,209,9)" fg:x="850" fg:w="3"/><text x="68.6880%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="68.4380%" y="437" width="0.2415%" height="15" fill="rgb(254,97,27)" fg:x="850" fg:w="3"/><text x="68.6880%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="68.5185%" y="421" width="0.1610%" height="15" fill="rgb(223,151,38)" fg:x="851" fg:w="2"/><text x="68.7685%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="68.5990%" y="405" width="0.0805%" height="15" fill="rgb(219,206,35)" fg:x="852" fg:w="1"/><text x="68.8490%" y="415.50"></text></g><g><title>engine::session::Session::flush (36 samples, 2.90%)</title><rect x="65.8615%" y="629" width="2.8986%" height="15" fill="rgb(216,130,31)" fg:x="818" fg:w="36"/><text x="66.1115%" y="639.50">en..</text></g><g><title>engine::session::state::State::close (32 samples, 2.58%)</title><rect x="66.1836%" y="613" width="2.5765%" height="15" fill="rgb(251,97,34)" fg:x="822" fg:w="32"/><text x="66.4336%" y="623.50">en..</text></g><g><title>engine::session::state::State::flush_entities (32 samples, 2.58%)</title><rect x="66.1836%" y="597" width="2.5765%" height="15" fill="rgb(246,159,47)" fg:x="822" fg:w="32"/><text x="66.4336%" y="607.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (31 samples, 2.50%)</title><rect x="66.2641%" y="581" width="2.4960%" height="15" fill="rgb(232,87,10)" fg:x="823" fg:w="31"/><text x="66.5141%" y="591.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (31 samples, 2.50%)</title><rect x="66.2641%" y="565" width="2.4960%" height="15" fill="rgb(249,1,37)" fg:x="823" fg:w="31"/><text x="66.5141%" y="575.50">en..</text></g><g><title>kernel::model::any_entity_changes (13 samples, 1.05%)</title><rect x="67.7134%" y="549" width="1.0467%" height="15" fill="rgb(239,135,14)" fg:x="841" fg:w="13"/><text x="67.9634%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.97%)</title><rect x="67.7939%" y="533" width="0.9662%" height="15" fill="rgb(253,116,46)" fg:x="842" fg:w="12"/><text x="68.0439%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.97%)</title><rect x="67.7939%" y="517" width="0.9662%" height="15" fill="rgb(222,217,37)" fg:x="842" fg:w="12"/><text x="68.0439%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.81%)</title><rect x="67.9549%" y="501" width="0.8052%" height="15" fill="rgb(252,96,8)" fg:x="844" fg:w="10"/><text x="68.2049%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="68.1965%" y="485" width="0.5636%" height="15" fill="rgb(254,103,41)" fg:x="847" fg:w="7"/><text x="68.4465%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="68.6795%" y="469" width="0.0805%" height="15" fill="rgb(218,213,19)" fg:x="853" fg:w="1"/><text x="68.9295%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.6795%" y="453" width="0.0805%" height="15" fill="rgb(253,95,21)" fg:x="853" fg:w="1"/><text x="68.9295%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.7601%" y="533" width="0.0805%" height="15" fill="rgb(229,26,28)" fg:x="854" fg:w="1"/><text x="69.0101%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7601%" y="517" width="0.0805%" height="15" fill="rgb(230,129,16)" fg:x="854" fg:w="1"/><text x="69.0101%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="68.7601%" y="581" width="0.1610%" height="15" fill="rgb(236,126,17)" fg:x="854" fg:w="2"/><text x="69.0101%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="68.7601%" y="565" width="0.1610%" height="15" fill="rgb(209,33,33)" fg:x="854" fg:w="2"/><text x="69.0101%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.7601%" y="549" width="0.1610%" height="15" fill="rgb(227,85,29)" fg:x="854" fg:w="2"/><text x="69.0101%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8406%" y="533" width="0.0805%" height="15" fill="rgb(241,53,46)" fg:x="855" fg:w="1"/><text x="69.0906%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.9211%" y="501" width="0.0805%" height="15" fill="rgb(228,167,53)" fg:x="856" fg:w="1"/><text x="69.1711%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.9211%" y="485" width="0.0805%" height="15" fill="rgb(238,195,45)" fg:x="856" fg:w="1"/><text x="69.1711%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.9211%" y="469" width="0.0805%" height="15" fill="rgb(252,124,45)" fg:x="856" fg:w="1"/><text x="69.1711%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.9211%" y="453" width="0.0805%" height="15" fill="rgb(251,38,35)" fg:x="856" fg:w="1"/><text x="69.1711%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.9211%" y="437" width="0.0805%" height="15" fill="rgb(227,33,2)" fg:x="856" fg:w="1"/><text x="69.1711%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.9211%" y="421" width="0.0805%" height="15" fill="rgb(223,157,46)" fg:x="856" fg:w="1"/><text x="69.1711%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.9211%" y="405" width="0.0805%" height="15" fill="rgb(222,78,41)" fg:x="856" fg:w="1"/><text x="69.1711%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.9211%" y="389" width="0.0805%" height="15" fill="rgb(248,176,11)" fg:x="856" fg:w="1"/><text x="69.1711%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.9211%" y="533" width="0.1610%" height="15" fill="rgb(241,221,18)" fg:x="856" fg:w="2"/><text x="69.1711%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.9211%" y="517" width="0.1610%" height="15" fill="rgb(218,85,22)" fg:x="856" fg:w="2"/><text x="69.1711%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.0016%" y="501" width="0.0805%" height="15" fill="rgb(222,223,7)" fg:x="857" fg:w="1"/><text x="69.2516%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.0016%" y="485" width="0.0805%" height="15" fill="rgb(254,59,39)" fg:x="857" fg:w="1"/><text x="69.2516%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.0016%" y="469" width="0.0805%" height="15" fill="rgb(247,100,27)" fg:x="857" fg:w="1"/><text x="69.2516%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.0016%" y="453" width="0.0805%" height="15" fill="rgb(237,207,10)" fg:x="857" fg:w="1"/><text x="69.2516%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.0016%" y="437" width="0.0805%" height="15" fill="rgb(220,121,28)" fg:x="857" fg:w="1"/><text x="69.2516%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="69.0016%" y="421" width="0.0805%" height="15" fill="rgb(213,223,20)" fg:x="857" fg:w="1"/><text x="69.2516%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="69.0016%" y="405" width="0.0805%" height="15" fill="rgb(205,121,27)" fg:x="857" fg:w="1"/><text x="69.2516%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="69.0821%" y="533" width="0.0805%" height="15" fill="rgb(253,24,53)" fg:x="858" fg:w="1"/><text x="69.3321%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="69.0821%" y="517" width="0.0805%" height="15" fill="rgb(224,224,47)" fg:x="858" fg:w="1"/><text x="69.3321%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.0821%" y="501" width="0.0805%" height="15" fill="rgb(250,125,36)" fg:x="858" fg:w="1"/><text x="69.3321%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.0821%" y="485" width="0.0805%" height="15" fill="rgb(240,144,38)" fg:x="858" fg:w="1"/><text x="69.3321%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="68.9211%" y="581" width="0.3221%" height="15" fill="rgb(250,15,50)" fg:x="856" fg:w="4"/><text x="69.1711%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="68.9211%" y="565" width="0.3221%" height="15" fill="rgb(210,24,26)" fg:x="856" fg:w="4"/><text x="69.1711%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="68.9211%" y="549" width="0.3221%" height="15" fill="rgb(234,53,53)" fg:x="856" fg:w="4"/><text x="69.1711%" y="559.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.1626%" y="533" width="0.0805%" height="15" fill="rgb(208,108,28)" fg:x="859" fg:w="1"/><text x="69.4126%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.1626%" y="517" width="0.0805%" height="15" fill="rgb(227,143,7)" fg:x="859" fg:w="1"/><text x="69.4126%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.1626%" y="501" width="0.0805%" height="15" fill="rgb(238,189,38)" fg:x="859" fg:w="1"/><text x="69.4126%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.1626%" y="485" width="0.0805%" height="15" fill="rgb(222,69,15)" fg:x="859" fg:w="1"/><text x="69.4126%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.1626%" y="469" width="0.0805%" height="15" fill="rgb(213,169,7)" fg:x="859" fg:w="1"/><text x="69.4126%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="69.2432%" y="581" width="0.0805%" height="15" fill="rgb(251,219,4)" fg:x="860" fg:w="1"/><text x="69.4932%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="69.2432%" y="565" width="0.0805%" height="15" fill="rgb(241,55,40)" fg:x="860" fg:w="1"/><text x="69.4932%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="69.2432%" y="549" width="0.0805%" height="15" fill="rgb(243,57,30)" fg:x="860" fg:w="1"/><text x="69.4932%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.2432%" y="533" width="0.0805%" height="15" fill="rgb(234,50,30)" fg:x="860" fg:w="1"/><text x="69.4932%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.2432%" y="517" width="0.0805%" height="15" fill="rgb(239,23,42)" fg:x="860" fg:w="1"/><text x="69.4932%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.2432%" y="501" width="0.0805%" height="15" fill="rgb(217,38,19)" fg:x="860" fg:w="1"/><text x="69.4932%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.2432%" y="485" width="0.0805%" height="15" fill="rgb(215,179,16)" fg:x="860" fg:w="1"/><text x="69.4932%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.2432%" y="469" width="0.0805%" height="15" fill="rgb(254,21,37)" fg:x="860" fg:w="1"/><text x="69.4932%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.2432%" y="453" width="0.0805%" height="15" fill="rgb(219,207,48)" fg:x="860" fg:w="1"/><text x="69.4932%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="69.3237%" y="565" width="0.0805%" height="15" fill="rgb(227,225,41)" fg:x="861" fg:w="1"/><text x="69.5737%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.3237%" y="549" width="0.0805%" height="15" fill="rgb(223,130,1)" fg:x="861" fg:w="1"/><text x="69.5737%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.3237%" y="533" width="0.0805%" height="15" fill="rgb(249,54,42)" fg:x="861" fg:w="1"/><text x="69.5737%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.3237%" y="517" width="0.0805%" height="15" fill="rgb(248,69,25)" fg:x="861" fg:w="1"/><text x="69.5737%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.3237%" y="501" width="0.0805%" height="15" fill="rgb(234,21,32)" fg:x="861" fg:w="1"/><text x="69.5737%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.3237%" y="485" width="0.0805%" height="15" fill="rgb(252,136,6)" fg:x="861" fg:w="1"/><text x="69.5737%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.3237%" y="469" width="0.0805%" height="15" fill="rgb(245,87,12)" fg:x="861" fg:w="1"/><text x="69.5737%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="69.3237%" y="581" width="0.1610%" height="15" fill="rgb(208,12,15)" fg:x="861" fg:w="2"/><text x="69.5737%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="69.4042%" y="565" width="0.0805%" height="15" fill="rgb(250,98,2)" fg:x="862" fg:w="1"/><text x="69.6542%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.4042%" y="549" width="0.0805%" height="15" fill="rgb(205,213,15)" fg:x="862" fg:w="1"/><text x="69.6542%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4042%" y="533" width="0.0805%" height="15" fill="rgb(248,192,44)" fg:x="862" fg:w="1"/><text x="69.6542%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4042%" y="517" width="0.0805%" height="15" fill="rgb(221,89,17)" fg:x="862" fg:w="1"/><text x="69.6542%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4042%" y="501" width="0.0805%" height="15" fill="rgb(209,55,3)" fg:x="862" fg:w="1"/><text x="69.6542%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4042%" y="485" width="0.0805%" height="15" fill="rgb(247,23,45)" fg:x="862" fg:w="1"/><text x="69.6542%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4042%" y="469" width="0.0805%" height="15" fill="rgb(235,152,23)" fg:x="862" fg:w="1"/><text x="69.6542%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.4042%" y="453" width="0.0805%" height="15" fill="rgb(244,63,13)" fg:x="862" fg:w="1"/><text x="69.6542%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.4042%" y="437" width="0.0805%" height="15" fill="rgb(227,30,37)" fg:x="862" fg:w="1"/><text x="69.6542%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.4042%" y="421" width="0.0805%" height="15" fill="rgb(224,49,42)" fg:x="862" fg:w="1"/><text x="69.6542%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.4042%" y="405" width="0.0805%" height="15" fill="rgb(218,129,5)" fg:x="862" fg:w="1"/><text x="69.6542%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.4042%" y="389" width="0.0805%" height="15" fill="rgb(240,199,54)" fg:x="862" fg:w="1"/><text x="69.6542%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.4042%" y="373" width="0.0805%" height="15" fill="rgb(234,31,13)" fg:x="862" fg:w="1"/><text x="69.6542%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.4042%" y="357" width="0.0805%" height="15" fill="rgb(219,73,54)" fg:x="862" fg:w="1"/><text x="69.6542%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.4042%" y="341" width="0.0805%" height="15" fill="rgb(251,162,10)" fg:x="862" fg:w="1"/><text x="69.6542%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.4042%" y="325" width="0.0805%" height="15" fill="rgb(240,138,47)" fg:x="862" fg:w="1"/><text x="69.6542%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4042%" y="309" width="0.0805%" height="15" fill="rgb(216,138,26)" fg:x="862" fg:w="1"/><text x="69.6542%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="69.4847%" y="549" width="0.0805%" height="15" fill="rgb(243,17,35)" fg:x="863" fg:w="1"/><text x="69.7347%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.4847%" y="533" width="0.0805%" height="15" fill="rgb(241,60,18)" fg:x="863" fg:w="1"/><text x="69.7347%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4847%" y="517" width="0.0805%" height="15" fill="rgb(234,2,44)" fg:x="863" fg:w="1"/><text x="69.7347%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4847%" y="501" width="0.0805%" height="15" fill="rgb(225,225,33)" fg:x="863" fg:w="1"/><text x="69.7347%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4847%" y="485" width="0.0805%" height="15" fill="rgb(234,50,31)" fg:x="863" fg:w="1"/><text x="69.7347%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4847%" y="469" width="0.0805%" height="15" fill="rgb(249,6,25)" fg:x="863" fg:w="1"/><text x="69.7347%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.89%)</title><rect x="68.7601%" y="597" width="0.8857%" height="15" fill="rgb(241,5,17)" fg:x="854" fg:w="11"/><text x="69.0101%" y="607.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="69.4847%" y="581" width="0.1610%" height="15" fill="rgb(207,116,10)" fg:x="863" fg:w="2"/><text x="69.7347%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="69.4847%" y="565" width="0.1610%" height="15" fill="rgb(222,128,18)" fg:x="863" fg:w="2"/><text x="69.7347%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="69.5652%" y="549" width="0.0805%" height="15" fill="rgb(229,109,25)" fg:x="864" fg:w="1"/><text x="69.8152%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="69.5652%" y="533" width="0.0805%" height="15" fill="rgb(222,102,25)" fg:x="864" fg:w="1"/><text x="69.8152%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="69.5652%" y="517" width="0.0805%" height="15" fill="rgb(239,211,5)" fg:x="864" fg:w="1"/><text x="69.8152%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="69.5652%" y="501" width="0.0805%" height="15" fill="rgb(223,136,26)" fg:x="864" fg:w="1"/><text x="69.8152%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="69.5652%" y="485" width="0.0805%" height="15" fill="rgb(227,30,15)" fg:x="864" fg:w="1"/><text x="69.8152%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="69.5652%" y="469" width="0.0805%" height="15" fill="rgb(247,76,4)" fg:x="864" fg:w="1"/><text x="69.8152%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (13 samples, 1.05%)</title><rect x="68.7601%" y="613" width="1.0467%" height="15" fill="rgb(245,38,48)" fg:x="854" fg:w="13"/><text x="69.0101%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="69.6457%" y="597" width="0.1610%" height="15" fill="rgb(210,220,14)" fg:x="865" fg:w="2"/><text x="69.8957%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="69.6457%" y="581" width="0.1610%" height="15" fill="rgb(224,60,51)" fg:x="865" fg:w="2"/><text x="69.8957%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.6457%" y="565" width="0.1610%" height="15" fill="rgb(212,133,49)" fg:x="865" fg:w="2"/><text x="69.8957%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.6457%" y="549" width="0.1610%" height="15" fill="rgb(231,39,22)" fg:x="865" fg:w="2"/><text x="69.8957%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.7262%" y="533" width="0.0805%" height="15" fill="rgb(236,173,22)" fg:x="866" fg:w="1"/><text x="69.9762%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.7262%" y="517" width="0.0805%" height="15" fill="rgb(210,70,0)" fg:x="866" fg:w="1"/><text x="69.9762%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.7262%" y="501" width="0.0805%" height="15" fill="rgb(215,170,11)" fg:x="866" fg:w="1"/><text x="69.9762%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.7262%" y="485" width="0.0805%" height="15" fill="rgb(220,154,28)" fg:x="866" fg:w="1"/><text x="69.9762%" y="495.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="69.7262%" y="469" width="0.0805%" height="15" fill="rgb(240,160,41)" fg:x="866" fg:w="1"/><text x="69.9762%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="69.8068%" y="597" width="0.0805%" height="15" fill="rgb(243,215,41)" fg:x="867" fg:w="1"/><text x="70.0568%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="69.8068%" y="581" width="0.0805%" height="15" fill="rgb(214,208,31)" fg:x="867" fg:w="1"/><text x="70.0568%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.8068%" y="565" width="0.0805%" height="15" fill="rgb(247,57,22)" fg:x="867" fg:w="1"/><text x="70.0568%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.8873%" y="533" width="0.0805%" height="15" fill="rgb(228,73,52)" fg:x="868" fg:w="1"/><text x="70.1373%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.8873%" y="517" width="0.0805%" height="15" fill="rgb(252,60,9)" fg:x="868" fg:w="1"/><text x="70.1373%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.8873%" y="501" width="0.0805%" height="15" fill="rgb(233,9,51)" fg:x="868" fg:w="1"/><text x="70.1373%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.8873%" y="485" width="0.0805%" height="15" fill="rgb(223,67,14)" fg:x="868" fg:w="1"/><text x="70.1373%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.8873%" y="469" width="0.0805%" height="15" fill="rgb(222,86,2)" fg:x="868" fg:w="1"/><text x="70.1373%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.8873%" y="453" width="0.0805%" height="15" fill="rgb(243,58,54)" fg:x="868" fg:w="1"/><text x="70.1373%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.8873%" y="437" width="0.0805%" height="15" fill="rgb(210,200,39)" fg:x="868" fg:w="1"/><text x="70.1373%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.8873%" y="421" width="0.0805%" height="15" fill="rgb(238,135,9)" fg:x="868" fg:w="1"/><text x="70.1373%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.8873%" y="405" width="0.0805%" height="15" fill="rgb(232,179,7)" fg:x="868" fg:w="1"/><text x="70.1373%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.8873%" y="389" width="0.0805%" height="15" fill="rgb(245,65,41)" fg:x="868" fg:w="1"/><text x="70.1373%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.8873%" y="373" width="0.0805%" height="15" fill="rgb(227,43,8)" fg:x="868" fg:w="1"/><text x="70.1373%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.8873%" y="357" width="0.0805%" height="15" fill="rgb(235,91,14)" fg:x="868" fg:w="1"/><text x="70.1373%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.8873%" y="341" width="0.0805%" height="15" fill="rgb(235,219,31)" fg:x="868" fg:w="1"/><text x="70.1373%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.8873%" y="325" width="0.0805%" height="15" fill="rgb(227,121,25)" fg:x="868" fg:w="1"/><text x="70.1373%" y="335.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="69.8873%" y="309" width="0.0805%" height="15" fill="rgb(254,129,24)" fg:x="868" fg:w="1"/><text x="70.1373%" y="319.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="69.8873%" y="293" width="0.0805%" height="15" fill="rgb(226,144,49)" fg:x="868" fg:w="1"/><text x="70.1373%" y="303.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="69.8873%" y="597" width="0.1610%" height="15" fill="rgb(214,187,32)" fg:x="868" fg:w="2"/><text x="70.1373%" y="607.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="69.8873%" y="581" width="0.1610%" height="15" fill="rgb(243,129,46)" fg:x="868" fg:w="2"/><text x="70.1373%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="69.8873%" y="565" width="0.1610%" height="15" fill="rgb(221,185,35)" fg:x="868" fg:w="2"/><text x="70.1373%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="69.8873%" y="549" width="0.1610%" height="15" fill="rgb(205,0,32)" fg:x="868" fg:w="2"/><text x="70.1373%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.9678%" y="533" width="0.0805%" height="15" fill="rgb(229,179,12)" fg:x="869" fg:w="1"/><text x="70.2178%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.9678%" y="517" width="0.0805%" height="15" fill="rgb(252,107,19)" fg:x="869" fg:w="1"/><text x="70.2178%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.9678%" y="501" width="0.0805%" height="15" fill="rgb(220,95,27)" fg:x="869" fg:w="1"/><text x="70.2178%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.9678%" y="485" width="0.0805%" height="15" fill="rgb(240,113,40)" fg:x="869" fg:w="1"/><text x="70.2178%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.9678%" y="469" width="0.0805%" height="15" fill="rgb(208,4,43)" fg:x="869" fg:w="1"/><text x="70.2178%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.0483%" y="517" width="0.0805%" height="15" fill="rgb(247,189,30)" fg:x="870" fg:w="1"/><text x="70.2983%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.0483%" y="501" width="0.0805%" height="15" fill="rgb(231,157,17)" fg:x="870" fg:w="1"/><text x="70.2983%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.0483%" y="485" width="0.0805%" height="15" fill="rgb(224,139,6)" fg:x="870" fg:w="1"/><text x="70.2983%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.0483%" y="469" width="0.0805%" height="15" fill="rgb(223,83,16)" fg:x="870" fg:w="1"/><text x="70.2983%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.0483%" y="453" width="0.0805%" height="15" fill="rgb(232,211,20)" fg:x="870" fg:w="1"/><text x="70.2983%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.0483%" y="437" width="0.0805%" height="15" fill="rgb(225,203,35)" fg:x="870" fg:w="1"/><text x="70.2983%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.0483%" y="421" width="0.0805%" height="15" fill="rgb(215,211,44)" fg:x="870" fg:w="1"/><text x="70.2983%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.0483%" y="405" width="0.0805%" height="15" fill="rgb(248,213,26)" fg:x="870" fg:w="1"/><text x="70.2983%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="70.0483%" y="389" width="0.0805%" height="15" fill="rgb(214,23,52)" fg:x="870" fg:w="1"/><text x="70.2983%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.0483%" y="373" width="0.0805%" height="15" fill="rgb(225,173,50)" fg:x="870" fg:w="1"/><text x="70.2983%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="70.0483%" y="597" width="0.1610%" height="15" fill="rgb(206,150,22)" fg:x="870" fg:w="2"/><text x="70.2983%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="70.0483%" y="581" width="0.1610%" height="15" fill="rgb(239,64,23)" fg:x="870" fg:w="2"/><text x="70.2983%" y="591.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="70.0483%" y="565" width="0.1610%" height="15" fill="rgb(242,50,38)" fg:x="870" fg:w="2"/><text x="70.2983%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="70.0483%" y="549" width="0.1610%" height="15" fill="rgb(217,91,15)" fg:x="870" fg:w="2"/><text x="70.2983%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.0483%" y="533" width="0.1610%" height="15" fill="rgb(230,172,6)" fg:x="870" fg:w="2"/><text x="70.2983%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.1288%" y="517" width="0.0805%" height="15" fill="rgb(221,98,26)" fg:x="871" fg:w="1"/><text x="70.3788%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1288%" y="501" width="0.0805%" height="15" fill="rgb(227,210,45)" fg:x="871" fg:w="1"/><text x="70.3788%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.1288%" y="485" width="0.0805%" height="15" fill="rgb(206,8,30)" fg:x="871" fg:w="1"/><text x="70.3788%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1288%" y="469" width="0.0805%" height="15" fill="rgb(241,219,17)" fg:x="871" fg:w="1"/><text x="70.3788%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.1288%" y="453" width="0.0805%" height="15" fill="rgb(247,121,29)" fg:x="871" fg:w="1"/><text x="70.3788%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1288%" y="437" width="0.0805%" height="15" fill="rgb(219,169,49)" fg:x="871" fg:w="1"/><text x="70.3788%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="70.2093%" y="581" width="0.0805%" height="15" fill="rgb(253,49,49)" fg:x="872" fg:w="1"/><text x="70.4593%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="70.2093%" y="565" width="0.0805%" height="15" fill="rgb(217,178,3)" fg:x="872" fg:w="1"/><text x="70.4593%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.3704%" y="501" width="0.0805%" height="15" fill="rgb(234,73,37)" fg:x="874" fg:w="1"/><text x="70.6204%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (22 samples, 1.77%)</title><rect x="68.7601%" y="629" width="1.7713%" height="15" fill="rgb(250,98,22)" fg:x="854" fg:w="22"/><text x="69.0101%" y="639.50">p..</text></g><g><title>plugins_core::tools::set_container (9 samples, 0.72%)</title><rect x="69.8068%" y="613" width="0.7246%" height="15" fill="rgb(220,108,37)" fg:x="867" fg:w="9"/><text x="70.0568%" y="623.50"></text></g><g><title>plugins_core::location::Location::set (4 samples, 0.32%)</title><rect x="70.2093%" y="597" width="0.3221%" height="15" fill="rgb(225,168,10)" fg:x="872" fg:w="4"/><text x="70.4593%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="70.2899%" y="581" width="0.2415%" height="15" fill="rgb(247,215,21)" fg:x="873" fg:w="3"/><text x="70.5399%" y="591.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="70.2899%" y="565" width="0.2415%" height="15" fill="rgb(253,189,31)" fg:x="873" fg:w="3"/><text x="70.5399%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="70.2899%" y="549" width="0.2415%" height="15" fill="rgb(241,54,22)" fg:x="873" fg:w="3"/><text x="70.5399%" y="559.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="70.2899%" y="533" width="0.2415%" height="15" fill="rgb(211,87,4)" fg:x="873" fg:w="3"/><text x="70.5399%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="70.2899%" y="517" width="0.2415%" height="15" fill="rgb(245,112,24)" fg:x="873" fg:w="3"/><text x="70.5399%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.4509%" y="501" width="0.0805%" height="15" fill="rgb(235,190,41)" fg:x="875" fg:w="1"/><text x="70.7009%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="70.5314%" y="597" width="0.1610%" height="15" fill="rgb(214,89,8)" fg:x="876" fg:w="2"/><text x="70.7814%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="70.5314%" y="581" width="0.1610%" height="15" fill="rgb(249,155,35)" fg:x="876" fg:w="2"/><text x="70.7814%" y="591.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="70.6119%" y="565" width="0.0805%" height="15" fill="rgb(249,88,26)" fg:x="877" fg:w="1"/><text x="70.8619%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.6119%" y="549" width="0.0805%" height="15" fill="rgb(232,56,8)" fg:x="877" fg:w="1"/><text x="70.8619%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="70.6119%" y="533" width="0.0805%" height="15" fill="rgb(240,95,3)" fg:x="877" fg:w="1"/><text x="70.8619%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.6119%" y="517" width="0.0805%" height="15" fill="rgb(222,44,28)" fg:x="877" fg:w="1"/><text x="70.8619%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="70.6119%" y="501" width="0.0805%" height="15" fill="rgb(234,16,30)" fg:x="877" fg:w="1"/><text x="70.8619%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="70.6119%" y="485" width="0.0805%" height="15" fill="rgb(223,26,17)" fg:x="877" fg:w="1"/><text x="70.8619%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.6924%" y="581" width="0.0805%" height="15" fill="rgb(239,187,47)" fg:x="878" fg:w="1"/><text x="70.9424%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.6924%" y="565" width="0.0805%" height="15" fill="rgb(247,102,50)" fg:x="878" fg:w="1"/><text x="70.9424%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6924%" y="549" width="0.0805%" height="15" fill="rgb(231,216,22)" fg:x="878" fg:w="1"/><text x="70.9424%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6924%" y="533" width="0.0805%" height="15" fill="rgb(216,201,26)" fg:x="878" fg:w="1"/><text x="70.9424%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="70.6924%" y="597" width="0.1610%" height="15" fill="rgb(214,186,23)" fg:x="878" fg:w="2"/><text x="70.9424%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="70.7729%" y="581" width="0.0805%" height="15" fill="rgb(235,184,4)" fg:x="879" fg:w="1"/><text x="71.0229%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.7729%" y="565" width="0.0805%" height="15" fill="rgb(244,46,17)" fg:x="879" fg:w="1"/><text x="71.0229%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7729%" y="549" width="0.0805%" height="15" fill="rgb(248,74,46)" fg:x="879" fg:w="1"/><text x="71.0229%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7729%" y="533" width="0.0805%" height="15" fill="rgb(243,79,5)" fg:x="879" fg:w="1"/><text x="71.0229%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7729%" y="517" width="0.0805%" height="15" fill="rgb(213,148,1)" fg:x="879" fg:w="1"/><text x="71.0229%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7729%" y="501" width="0.0805%" height="15" fill="rgb(221,30,0)" fg:x="879" fg:w="1"/><text x="71.0229%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7729%" y="485" width="0.0805%" height="15" fill="rgb(207,85,29)" fg:x="879" fg:w="1"/><text x="71.0229%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7729%" y="469" width="0.0805%" height="15" fill="rgb(239,31,46)" fg:x="879" fg:w="1"/><text x="71.0229%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7729%" y="453" width="0.0805%" height="15" fill="rgb(219,6,1)" fg:x="879" fg:w="1"/><text x="71.0229%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7729%" y="437" width="0.0805%" height="15" fill="rgb(229,90,29)" fg:x="879" fg:w="1"/><text x="71.0229%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7729%" y="421" width="0.0805%" height="15" fill="rgb(242,201,42)" fg:x="879" fg:w="1"/><text x="71.0229%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7729%" y="405" width="0.0805%" height="15" fill="rgb(243,80,54)" fg:x="879" fg:w="1"/><text x="71.0229%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.7729%" y="389" width="0.0805%" height="15" fill="rgb(223,166,15)" fg:x="879" fg:w="1"/><text x="71.0229%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.7729%" y="373" width="0.0805%" height="15" fill="rgb(238,78,27)" fg:x="879" fg:w="1"/><text x="71.0229%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.7729%" y="357" width="0.0805%" height="15" fill="rgb(235,28,43)" fg:x="879" fg:w="1"/><text x="71.0229%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.7729%" y="341" width="0.0805%" height="15" fill="rgb(240,210,28)" fg:x="879" fg:w="1"/><text x="71.0229%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7729%" y="325" width="0.0805%" height="15" fill="rgb(253,6,46)" fg:x="879" fg:w="1"/><text x="71.0229%" y="335.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="70.5314%" y="629" width="0.4026%" height="15" fill="rgb(250,159,47)" fg:x="876" fg:w="5"/><text x="70.7814%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="70.5314%" y="613" width="0.4026%" height="15" fill="rgb(216,139,2)" fg:x="876" fg:w="5"/><text x="70.7814%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="70.8535%" y="597" width="0.0805%" height="15" fill="rgb(221,124,44)" fg:x="880" fg:w="1"/><text x="71.1035%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="70.8535%" y="581" width="0.0805%" height="15" fill="rgb(205,37,22)" fg:x="880" fg:w="1"/><text x="71.1035%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.8535%" y="565" width="0.0805%" height="15" fill="rgb(250,55,8)" fg:x="880" fg:w="1"/><text x="71.1035%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.8535%" y="549" width="0.0805%" height="15" fill="rgb(215,83,48)" fg:x="880" fg:w="1"/><text x="71.1035%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.8535%" y="533" width="0.0805%" height="15" fill="rgb(253,2,32)" fg:x="880" fg:w="1"/><text x="71.1035%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8535%" y="517" width="0.0805%" height="15" fill="rgb(236,67,28)" fg:x="880" fg:w="1"/><text x="71.1035%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.8535%" y="501" width="0.0805%" height="15" fill="rgb(252,55,15)" fg:x="880" fg:w="1"/><text x="71.1035%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8535%" y="485" width="0.0805%" height="15" fill="rgb(243,173,17)" fg:x="880" fg:w="1"/><text x="71.1035%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.8535%" y="469" width="0.0805%" height="15" fill="rgb(215,212,13)" fg:x="880" fg:w="1"/><text x="71.1035%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8535%" y="453" width="0.0805%" height="15" fill="rgb(253,176,6)" fg:x="880" fg:w="1"/><text x="71.1035%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.8535%" y="437" width="0.0805%" height="15" fill="rgb(236,105,26)" fg:x="880" fg:w="1"/><text x="71.1035%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="70.9340%" y="613" width="0.0805%" height="15" fill="rgb(239,226,32)" fg:x="881" fg:w="1"/><text x="71.1840%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="70.9340%" y="597" width="0.0805%" height="15" fill="rgb(236,104,51)" fg:x="881" fg:w="1"/><text x="71.1840%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="70.9340%" y="581" width="0.0805%" height="15" fill="rgb(220,172,33)" fg:x="881" fg:w="1"/><text x="71.1840%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="70.9340%" y="565" width="0.0805%" height="15" fill="rgb(224,182,25)" fg:x="881" fg:w="1"/><text x="71.1840%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.9340%" y="549" width="0.0805%" height="15" fill="rgb(236,184,24)" fg:x="881" fg:w="1"/><text x="71.1840%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="70.9340%" y="533" width="0.0805%" height="15" fill="rgb(241,221,14)" fg:x="881" fg:w="1"/><text x="71.1840%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="70.9340%" y="517" width="0.0805%" height="15" fill="rgb(227,146,5)" fg:x="881" fg:w="1"/><text x="71.1840%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0145%" y="613" width="0.0805%" height="15" fill="rgb(214,15,23)" fg:x="882" fg:w="1"/><text x="71.2645%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0145%" y="597" width="0.0805%" height="15" fill="rgb(233,157,31)" fg:x="882" fg:w="1"/><text x="71.2645%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0145%" y="581" width="0.0805%" height="15" fill="rgb(211,27,52)" fg:x="882" fg:w="1"/><text x="71.2645%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.0145%" y="565" width="0.0805%" height="15" fill="rgb(212,223,15)" fg:x="882" fg:w="1"/><text x="71.2645%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.0145%" y="549" width="0.0805%" height="15" fill="rgb(254,211,0)" fg:x="882" fg:w="1"/><text x="71.2645%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.0145%" y="533" width="0.0805%" height="15" fill="rgb(205,43,38)" fg:x="882" fg:w="1"/><text x="71.2645%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="71.0145%" y="517" width="0.0805%" height="15" fill="rgb(242,206,46)" fg:x="882" fg:w="1"/><text x="71.2645%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.0145%" y="501" width="0.0805%" height="15" fill="rgb(220,221,12)" fg:x="882" fg:w="1"/><text x="71.2645%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="71.0950%" y="613" width="0.0805%" height="15" fill="rgb(217,156,35)" fg:x="883" fg:w="1"/><text x="71.3450%" y="623.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="71.0950%" y="597" width="0.0805%" height="15" fill="rgb(207,181,49)" fg:x="883" fg:w="1"/><text x="71.3450%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="71.0950%" y="581" width="0.0805%" height="15" fill="rgb(235,103,47)" fg:x="883" fg:w="1"/><text x="71.3450%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.1755%" y="581" width="0.0805%" height="15" fill="rgb(222,63,28)" fg:x="884" fg:w="1"/><text x="71.4255%" y="591.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="71.2560%" y="549" width="0.0805%" height="15" fill="rgb(244,137,21)" fg:x="885" fg:w="1"/><text x="71.5060%" y="559.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="71.2560%" y="533" width="0.0805%" height="15" fill="rgb(228,35,27)" fg:x="885" fg:w="1"/><text x="71.5060%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.2560%" y="517" width="0.0805%" height="15" fill="rgb(226,191,41)" fg:x="885" fg:w="1"/><text x="71.5060%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3366%" y="533" width="0.0805%" height="15" fill="rgb(210,154,3)" fg:x="886" fg:w="1"/><text x="71.5866%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="71.2560%" y="565" width="0.2415%" height="15" fill="rgb(216,60,49)" fg:x="885" fg:w="3"/><text x="71.5060%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="71.3366%" y="549" width="0.1610%" height="15" fill="rgb(226,17,20)" fg:x="886" fg:w="2"/><text x="71.5866%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.4171%" y="533" width="0.0805%" height="15" fill="rgb(206,115,35)" fg:x="887" fg:w="1"/><text x="71.6671%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.4171%" y="517" width="0.0805%" height="15" fill="rgb(227,88,1)" fg:x="887" fg:w="1"/><text x="71.6671%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="71.4976%" y="517" width="0.1610%" height="15" fill="rgb(230,222,24)" fg:x="888" fg:w="2"/><text x="71.7476%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.5781%" y="501" width="0.0805%" height="15" fill="rgb(214,124,32)" fg:x="889" fg:w="1"/><text x="71.8281%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.5781%" y="485" width="0.0805%" height="15" fill="rgb(240,41,36)" fg:x="889" fg:w="1"/><text x="71.8281%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.5781%" y="469" width="0.0805%" height="15" fill="rgb(221,17,52)" fg:x="889" fg:w="1"/><text x="71.8281%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.5781%" y="453" width="0.0805%" height="15" fill="rgb(252,70,16)" fg:x="889" fg:w="1"/><text x="71.8281%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.5781%" y="437" width="0.0805%" height="15" fill="rgb(250,177,4)" fg:x="889" fg:w="1"/><text x="71.8281%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="71.6586%" y="517" width="0.1610%" height="15" fill="rgb(240,188,47)" fg:x="890" fg:w="2"/><text x="71.9086%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="71.6586%" y="501" width="0.1610%" height="15" fill="rgb(215,92,12)" fg:x="890" fg:w="2"/><text x="71.9086%" y="511.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="71.7391%" y="485" width="0.0805%" height="15" fill="rgb(242,110,29)" fg:x="891" fg:w="1"/><text x="71.9891%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.7391%" y="469" width="0.0805%" height="15" fill="rgb(208,211,26)" fg:x="891" fg:w="1"/><text x="71.9891%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="71.7391%" y="453" width="0.0805%" height="15" fill="rgb(244,147,6)" fg:x="891" fg:w="1"/><text x="71.9891%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.7391%" y="437" width="0.0805%" height="15" fill="rgb(211,130,42)" fg:x="891" fg:w="1"/><text x="71.9891%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="71.7391%" y="421" width="0.0805%" height="15" fill="rgb(220,63,1)" fg:x="891" fg:w="1"/><text x="71.9891%" y="431.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="71.8196%" y="469" width="0.0805%" height="15" fill="rgb(241,212,30)" fg:x="892" fg:w="1"/><text x="72.0696%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="71.8196%" y="453" width="0.0805%" height="15" fill="rgb(233,153,17)" fg:x="892" fg:w="1"/><text x="72.0696%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="71.8196%" y="437" width="0.0805%" height="15" fill="rgb(236,3,10)" fg:x="892" fg:w="1"/><text x="72.0696%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.8196%" y="421" width="0.0805%" height="15" fill="rgb(232,41,21)" fg:x="892" fg:w="1"/><text x="72.0696%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="71.8196%" y="405" width="0.0805%" height="15" fill="rgb(206,63,51)" fg:x="892" fg:w="1"/><text x="72.0696%" y="415.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="71.8196%" y="389" width="0.0805%" height="15" fill="rgb(250,214,3)" fg:x="892" fg:w="1"/><text x="72.0696%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="71.8196%" y="373" width="0.0805%" height="15" fill="rgb(254,89,27)" fg:x="892" fg:w="1"/><text x="72.0696%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="71.8196%" y="501" width="0.1610%" height="15" fill="rgb(249,41,14)" fg:x="892" fg:w="2"/><text x="72.0696%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="71.8196%" y="485" width="0.1610%" height="15" fill="rgb(221,196,51)" fg:x="892" fg:w="2"/><text x="72.0696%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.9002%" y="469" width="0.0805%" height="15" fill="rgb(214,116,26)" fg:x="893" fg:w="1"/><text x="72.1502%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.9002%" y="453" width="0.0805%" height="15" fill="rgb(236,67,7)" fg:x="893" fg:w="1"/><text x="72.1502%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="71.9002%" y="437" width="0.0805%" height="15" fill="rgb(253,179,32)" fg:x="893" fg:w="1"/><text x="72.1502%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="71.8196%" y="517" width="0.2415%" height="15" fill="rgb(218,33,15)" fg:x="892" fg:w="3"/><text x="72.0696%" y="527.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="71.9807%" y="501" width="0.0805%" height="15" fill="rgb(217,202,41)" fg:x="894" fg:w="1"/><text x="72.2307%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.9807%" y="485" width="0.0805%" height="15" fill="rgb(234,133,5)" fg:x="894" fg:w="1"/><text x="72.2307%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.9807%" y="469" width="0.0805%" height="15" fill="rgb(240,47,40)" fg:x="894" fg:w="1"/><text x="72.2307%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="72.0612%" y="517" width="0.1610%" height="15" fill="rgb(234,166,26)" fg:x="895" fg:w="2"/><text x="72.3112%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="72.0612%" y="501" width="0.1610%" height="15" fill="rgb(244,125,51)" fg:x="895" fg:w="2"/><text x="72.3112%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="72.0612%" y="485" width="0.1610%" height="15" fill="rgb(229,171,11)" fg:x="895" fg:w="2"/><text x="72.3112%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.0612%" y="469" width="0.1610%" height="15" fill="rgb(224,38,45)" fg:x="895" fg:w="2"/><text x="72.3112%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1417%" y="453" width="0.0805%" height="15" fill="rgb(237,27,7)" fg:x="896" fg:w="1"/><text x="72.3917%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1417%" y="437" width="0.0805%" height="15" fill="rgb(216,52,7)" fg:x="896" fg:w="1"/><text x="72.3917%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.1417%" y="421" width="0.0805%" height="15" fill="rgb(243,11,11)" fg:x="896" fg:w="1"/><text x="72.3917%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="71.4976%" y="533" width="0.8052%" height="15" fill="rgb(253,167,20)" fg:x="888" fg:w="10"/><text x="71.7476%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="72.2222%" y="517" width="0.0805%" height="15" fill="rgb(215,207,5)" fg:x="897" fg:w="1"/><text x="72.4722%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="72.2222%" y="501" width="0.0805%" height="15" fill="rgb(252,127,31)" fg:x="897" fg:w="1"/><text x="72.4722%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.2222%" y="485" width="0.0805%" height="15" fill="rgb(209,106,27)" fg:x="897" fg:w="1"/><text x="72.4722%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.2222%" y="469" width="0.0805%" height="15" fill="rgb(214,220,18)" fg:x="897" fg:w="1"/><text x="72.4722%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="72.2222%" y="453" width="0.0805%" height="15" fill="rgb(237,89,12)" fg:x="897" fg:w="1"/><text x="72.4722%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.2222%" y="437" width="0.0805%" height="15" fill="rgb(209,167,36)" fg:x="897" fg:w="1"/><text x="72.4722%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.2222%" y="421" width="0.0805%" height="15" fill="rgb(243,45,22)" fg:x="897" fg:w="1"/><text x="72.4722%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.2222%" y="405" width="0.0805%" height="15" fill="rgb(239,2,46)" fg:x="897" fg:w="1"/><text x="72.4722%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2222%" y="389" width="0.0805%" height="15" fill="rgb(241,101,0)" fg:x="897" fg:w="1"/><text x="72.4722%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (12 samples, 0.97%)</title><rect x="71.4976%" y="549" width="0.9662%" height="15" fill="rgb(244,34,31)" fg:x="888" fg:w="12"/><text x="71.7476%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="72.3027%" y="533" width="0.1610%" height="15" fill="rgb(248,23,22)" fg:x="898" fg:w="2"/><text x="72.5527%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="72.3027%" y="517" width="0.1610%" height="15" fill="rgb(218,27,48)" fg:x="898" fg:w="2"/><text x="72.5527%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="72.3833%" y="501" width="0.0805%" height="15" fill="rgb(232,78,1)" fg:x="899" fg:w="1"/><text x="72.6333%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.3833%" y="485" width="0.0805%" height="15" fill="rgb(233,169,12)" fg:x="899" fg:w="1"/><text x="72.6333%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.3833%" y="469" width="0.0805%" height="15" fill="rgb(225,222,54)" fg:x="899" fg:w="1"/><text x="72.6333%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.3833%" y="453" width="0.0805%" height="15" fill="rgb(245,126,29)" fg:x="899" fg:w="1"/><text x="72.6333%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3833%" y="437" width="0.0805%" height="15" fill="rgb(241,63,48)" fg:x="899" fg:w="1"/><text x="72.6333%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.4638%" y="501" width="0.0805%" height="15" fill="rgb(235,126,38)" fg:x="900" fg:w="1"/><text x="72.7138%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.4638%" y="485" width="0.0805%" height="15" fill="rgb(232,96,49)" fg:x="900" fg:w="1"/><text x="72.7138%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.4638%" y="469" width="0.0805%" height="15" fill="rgb(211,146,40)" fg:x="900" fg:w="1"/><text x="72.7138%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.4638%" y="453" width="0.0805%" height="15" fill="rgb(247,93,44)" fg:x="900" fg:w="1"/><text x="72.7138%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.4638%" y="437" width="0.0805%" height="15" fill="rgb(251,41,49)" fg:x="900" fg:w="1"/><text x="72.7138%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.4638%" y="421" width="0.0805%" height="15" fill="rgb(218,155,12)" fg:x="900" fg:w="1"/><text x="72.7138%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.4638%" y="405" width="0.0805%" height="15" fill="rgb(221,161,30)" fg:x="900" fg:w="1"/><text x="72.7138%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.4638%" y="389" width="0.0805%" height="15" fill="rgb(221,179,11)" fg:x="900" fg:w="1"/><text x="72.7138%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.4638%" y="373" width="0.0805%" height="15" fill="rgb(224,170,48)" fg:x="900" fg:w="1"/><text x="72.7138%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.4638%" y="357" width="0.0805%" height="15" fill="rgb(223,117,5)" fg:x="900" fg:w="1"/><text x="72.7138%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="72.4638%" y="533" width="0.1610%" height="15" fill="rgb(209,52,20)" fg:x="900" fg:w="2"/><text x="72.7138%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="72.4638%" y="517" width="0.1610%" height="15" fill="rgb(209,19,41)" fg:x="900" fg:w="2"/><text x="72.7138%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="72.5443%" y="501" width="0.0805%" height="15" fill="rgb(210,177,12)" fg:x="901" fg:w="1"/><text x="72.7943%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.5443%" y="485" width="0.0805%" height="15" fill="rgb(211,159,37)" fg:x="901" fg:w="1"/><text x="72.7943%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.5443%" y="469" width="0.0805%" height="15" fill="rgb(209,20,2)" fg:x="901" fg:w="1"/><text x="72.7943%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.5443%" y="453" width="0.0805%" height="15" fill="rgb(244,3,46)" fg:x="901" fg:w="1"/><text x="72.7943%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.5443%" y="437" width="0.0805%" height="15" fill="rgb(220,94,38)" fg:x="901" fg:w="1"/><text x="72.7943%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.5443%" y="421" width="0.0805%" height="15" fill="rgb(253,14,31)" fg:x="901" fg:w="1"/><text x="72.7943%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.5443%" y="405" width="0.0805%" height="15" fill="rgb(234,176,13)" fg:x="901" fg:w="1"/><text x="72.7943%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.5443%" y="389" width="0.0805%" height="15" fill="rgb(218,62,25)" fg:x="901" fg:w="1"/><text x="72.7943%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.5443%" y="373" width="0.0805%" height="15" fill="rgb(216,124,40)" fg:x="901" fg:w="1"/><text x="72.7943%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="72.6248%" y="533" width="0.0805%" height="15" fill="rgb(228,170,12)" fg:x="902" fg:w="1"/><text x="72.8748%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.6248%" y="517" width="0.0805%" height="15" fill="rgb(231,226,5)" fg:x="902" fg:w="1"/><text x="72.8748%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.6248%" y="501" width="0.0805%" height="15" fill="rgb(237,122,22)" fg:x="902" fg:w="1"/><text x="72.8748%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="72.6248%" y="485" width="0.0805%" height="15" fill="rgb(209,185,25)" fg:x="902" fg:w="1"/><text x="72.8748%" y="495.50"></text></g><g><title>plugins_core::build::Build::leads_to (16 samples, 1.29%)</title><rect x="71.4976%" y="565" width="1.2882%" height="15" fill="rgb(228,200,32)" fg:x="888" fg:w="16"/><text x="71.7476%" y="575.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="72.4638%" y="549" width="0.3221%" height="15" fill="rgb(217,140,10)" fg:x="900" fg:w="4"/><text x="72.7138%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="72.7053%" y="533" width="0.0805%" height="15" fill="rgb(253,17,24)" fg:x="903" fg:w="1"/><text x="72.9553%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.7053%" y="517" width="0.0805%" height="15" fill="rgb(212,61,6)" fg:x="903" fg:w="1"/><text x="72.9553%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (21 samples, 1.69%)</title><rect x="71.1755%" y="613" width="1.6908%" height="15" fill="rgb(205,14,25)" fg:x="884" fg:w="21"/><text x="71.4255%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 1.69%)</title><rect x="71.1755%" y="597" width="1.6908%" height="15" fill="rgb(232,69,41)" fg:x="884" fg:w="21"/><text x="71.4255%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (20 samples, 1.61%)</title><rect x="71.2560%" y="581" width="1.6103%" height="15" fill="rgb(241,106,47)" fg:x="885" fg:w="20"/><text x="71.5060%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="72.7858%" y="565" width="0.0805%" height="15" fill="rgb(210,213,53)" fg:x="904" fg:w="1"/><text x="73.0358%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.7858%" y="549" width="0.0805%" height="15" fill="rgb(253,175,27)" fg:x="904" fg:w="1"/><text x="73.0358%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.7858%" y="533" width="0.0805%" height="15" fill="rgb(211,171,24)" fg:x="904" fg:w="1"/><text x="73.0358%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.7858%" y="517" width="0.0805%" height="15" fill="rgb(229,80,7)" fg:x="904" fg:w="1"/><text x="73.0358%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.7858%" y="501" width="0.0805%" height="15" fill="rgb(212,46,39)" fg:x="904" fg:w="1"/><text x="73.0358%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.7858%" y="485" width="0.0805%" height="15" fill="rgb(240,80,45)" fg:x="904" fg:w="1"/><text x="73.0358%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.7858%" y="469" width="0.0805%" height="15" fill="rgb(253,177,40)" fg:x="904" fg:w="1"/><text x="73.0358%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.7858%" y="453" width="0.0805%" height="15" fill="rgb(249,200,15)" fg:x="904" fg:w="1"/><text x="73.0358%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="72.8663%" y="613" width="0.0805%" height="15" fill="rgb(217,78,26)" fg:x="905" fg:w="1"/><text x="73.1163%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.8663%" y="597" width="0.0805%" height="15" fill="rgb(254,151,32)" fg:x="905" fg:w="1"/><text x="73.1163%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.8663%" y="581" width="0.0805%" height="15" fill="rgb(226,165,27)" fg:x="905" fg:w="1"/><text x="73.1163%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="72.9469%" y="613" width="0.0805%" height="15" fill="rgb(250,206,4)" fg:x="906" fg:w="1"/><text x="73.1969%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.9469%" y="597" width="0.0805%" height="15" fill="rgb(231,229,27)" fg:x="906" fg:w="1"/><text x="73.1969%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1079%" y="581" width="0.0805%" height="15" fill="rgb(239,217,8)" fg:x="908" fg:w="1"/><text x="73.3579%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="73.0274%" y="597" width="0.2415%" height="15" fill="rgb(225,204,27)" fg:x="907" fg:w="3"/><text x="73.2774%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1884%" y="581" width="0.0805%" height="15" fill="rgb(230,56,32)" fg:x="909" fg:w="1"/><text x="73.4384%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1884%" y="565" width="0.0805%" height="15" fill="rgb(222,56,27)" fg:x="909" fg:w="1"/><text x="73.4384%" y="575.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="73.2689%" y="581" width="0.0805%" height="15" fill="rgb(253,108,27)" fg:x="910" fg:w="1"/><text x="73.5189%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="73.4300%" y="549" width="0.0805%" height="15" fill="rgb(212,87,36)" fg:x="912" fg:w="1"/><text x="73.6800%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="73.4300%" y="533" width="0.0805%" height="15" fill="rgb(247,82,36)" fg:x="912" fg:w="1"/><text x="73.6800%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4300%" y="517" width="0.0805%" height="15" fill="rgb(222,143,9)" fg:x="912" fg:w="1"/><text x="73.6800%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="73.5105%" y="501" width="0.2415%" height="15" fill="rgb(238,162,48)" fg:x="913" fg:w="3"/><text x="73.7605%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="73.5105%" y="485" width="0.2415%" height="15" fill="rgb(221,59,43)" fg:x="913" fg:w="3"/><text x="73.7605%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.5910%" y="469" width="0.1610%" height="15" fill="rgb(205,166,41)" fg:x="914" fg:w="2"/><text x="73.8410%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.6715%" y="453" width="0.0805%" height="15" fill="rgb(241,186,40)" fg:x="915" fg:w="1"/><text x="73.9215%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.6715%" y="437" width="0.0805%" height="15" fill="rgb(216,119,35)" fg:x="915" fg:w="1"/><text x="73.9215%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.7520%" y="485" width="0.1610%" height="15" fill="rgb(208,68,38)" fg:x="916" fg:w="2"/><text x="74.0020%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.7520%" y="469" width="0.1610%" height="15" fill="rgb(217,113,1)" fg:x="916" fg:w="2"/><text x="74.0020%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.8325%" y="453" width="0.0805%" height="15" fill="rgb(242,153,3)" fg:x="917" fg:w="1"/><text x="74.0825%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.8325%" y="437" width="0.0805%" height="15" fill="rgb(229,76,35)" fg:x="917" fg:w="1"/><text x="74.0825%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.9130%" y="469" width="0.0805%" height="15" fill="rgb(229,125,34)" fg:x="918" fg:w="1"/><text x="74.1630%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.9130%" y="453" width="0.0805%" height="15" fill="rgb(238,179,36)" fg:x="918" fg:w="1"/><text x="74.1630%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.9130%" y="437" width="0.0805%" height="15" fill="rgb(244,183,19)" fg:x="918" fg:w="1"/><text x="74.1630%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.9130%" y="421" width="0.0805%" height="15" fill="rgb(216,85,49)" fg:x="918" fg:w="1"/><text x="74.1630%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.9130%" y="405" width="0.0805%" height="15" fill="rgb(208,161,47)" fg:x="918" fg:w="1"/><text x="74.1630%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.9130%" y="389" width="0.0805%" height="15" fill="rgb(233,210,18)" fg:x="918" fg:w="1"/><text x="74.1630%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.9130%" y="373" width="0.0805%" height="15" fill="rgb(205,104,42)" fg:x="918" fg:w="1"/><text x="74.1630%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.9130%" y="357" width="0.0805%" height="15" fill="rgb(248,90,43)" fg:x="918" fg:w="1"/><text x="74.1630%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.9130%" y="341" width="0.0805%" height="15" fill="rgb(206,198,11)" fg:x="918" fg:w="1"/><text x="74.1630%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.9936%" y="469" width="0.0805%" height="15" fill="rgb(239,165,27)" fg:x="919" fg:w="1"/><text x="74.2436%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.9936%" y="453" width="0.0805%" height="15" fill="rgb(246,44,32)" fg:x="919" fg:w="1"/><text x="74.2436%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.9936%" y="437" width="0.0805%" height="15" fill="rgb(252,65,42)" fg:x="919" fg:w="1"/><text x="74.2436%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.9936%" y="421" width="0.0805%" height="15" fill="rgb(246,197,18)" fg:x="919" fg:w="1"/><text x="74.2436%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="74.0741%" y="453" width="0.1610%" height="15" fill="rgb(216,192,4)" fg:x="920" fg:w="2"/><text x="74.3241%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.1546%" y="437" width="0.0805%" height="15" fill="rgb(208,117,10)" fg:x="921" fg:w="1"/><text x="74.4046%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.1546%" y="421" width="0.0805%" height="15" fill="rgb(240,61,47)" fg:x="921" fg:w="1"/><text x="74.4046%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.1546%" y="405" width="0.0805%" height="15" fill="rgb(228,178,21)" fg:x="921" fg:w="1"/><text x="74.4046%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="74.2351%" y="437" width="0.1610%" height="15" fill="rgb(219,96,54)" fg:x="922" fg:w="2"/><text x="74.4851%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.3156%" y="421" width="0.0805%" height="15" fill="rgb(250,177,24)" fg:x="923" fg:w="1"/><text x="74.5656%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.3156%" y="405" width="0.0805%" height="15" fill="rgb(242,154,46)" fg:x="923" fg:w="1"/><text x="74.5656%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.3156%" y="389" width="0.0805%" height="15" fill="rgb(226,176,29)" fg:x="923" fg:w="1"/><text x="74.5656%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.3961%" y="421" width="0.0805%" height="15" fill="rgb(226,29,2)" fg:x="924" fg:w="1"/><text x="74.6461%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.3961%" y="405" width="0.0805%" height="15" fill="rgb(237,104,14)" fg:x="924" fg:w="1"/><text x="74.6461%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.3961%" y="389" width="0.0805%" height="15" fill="rgb(245,207,31)" fg:x="924" fg:w="1"/><text x="74.6461%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="74.3961%" y="437" width="0.1610%" height="15" fill="rgb(229,211,45)" fg:x="924" fg:w="2"/><text x="74.6461%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.4767%" y="421" width="0.0805%" height="15" fill="rgb(229,113,15)" fg:x="925" fg:w="1"/><text x="74.7267%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="74.0741%" y="469" width="0.5636%" height="15" fill="rgb(237,147,15)" fg:x="920" fg:w="7"/><text x="74.3241%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="74.2351%" y="453" width="0.4026%" height="15" fill="rgb(244,120,12)" fg:x="922" fg:w="5"/><text x="74.4851%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.5572%" y="437" width="0.0805%" height="15" fill="rgb(205,120,12)" fg:x="926" fg:w="1"/><text x="74.8072%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.5572%" y="421" width="0.0805%" height="15" fill="rgb(231,26,45)" fg:x="926" fg:w="1"/><text x="74.8072%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.5572%" y="405" width="0.0805%" height="15" fill="rgb(246,98,1)" fg:x="926" fg:w="1"/><text x="74.8072%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="73.9130%" y="485" width="0.8052%" height="15" fill="rgb(207,68,45)" fg:x="918" fg:w="10"/><text x="74.1630%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.6377%" y="469" width="0.0805%" height="15" fill="rgb(231,27,38)" fg:x="927" fg:w="1"/><text x="74.8877%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.6377%" y="453" width="0.0805%" height="15" fill="rgb(214,223,3)" fg:x="927" fg:w="1"/><text x="74.8877%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="73.7520%" y="501" width="1.2077%" height="15" fill="rgb(228,195,46)" fg:x="916" fg:w="15"/><text x="74.0020%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="74.7182%" y="485" width="0.2415%" height="15" fill="rgb(231,100,42)" fg:x="928" fg:w="3"/><text x="74.9682%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.7987%" y="469" width="0.1610%" height="15" fill="rgb(236,53,4)" fg:x="929" fg:w="2"/><text x="75.0487%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.8792%" y="453" width="0.0805%" height="15" fill="rgb(230,152,12)" fg:x="930" fg:w="1"/><text x="75.1292%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.8792%" y="437" width="0.0805%" height="15" fill="rgb(226,101,19)" fg:x="930" fg:w="1"/><text x="75.1292%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.8792%" y="421" width="0.0805%" height="15" fill="rgb(250,149,32)" fg:x="930" fg:w="1"/><text x="75.1292%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.8792%" y="405" width="0.0805%" height="15" fill="rgb(232,178,12)" fg:x="930" fg:w="1"/><text x="75.1292%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9597%" y="421" width="0.0805%" height="15" fill="rgb(246,151,17)" fg:x="931" fg:w="1"/><text x="75.2097%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (20 samples, 1.61%)</title><rect x="73.5105%" y="517" width="1.6103%" height="15" fill="rgb(252,17,51)" fg:x="913" fg:w="20"/><text x="73.7605%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.9597%" y="501" width="0.1610%" height="15" fill="rgb(250,207,23)" fg:x="931" fg:w="2"/><text x="75.2097%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.9597%" y="485" width="0.1610%" height="15" fill="rgb(205,27,5)" fg:x="931" fg:w="2"/><text x="75.2097%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="74.9597%" y="469" width="0.1610%" height="15" fill="rgb(224,32,19)" fg:x="931" fg:w="2"/><text x="75.2097%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="74.9597%" y="453" width="0.1610%" height="15" fill="rgb(247,214,40)" fg:x="931" fg:w="2"/><text x="75.2097%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="74.9597%" y="437" width="0.1610%" height="15" fill="rgb(239,199,17)" fg:x="931" fg:w="2"/><text x="75.2097%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="75.0403%" y="421" width="0.0805%" height="15" fill="rgb(251,159,9)" fg:x="932" fg:w="1"/><text x="75.2903%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="75.0403%" y="405" width="0.0805%" height="15" fill="rgb(225,78,32)" fg:x="932" fg:w="1"/><text x="75.2903%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="75.1208%" y="485" width="0.1610%" height="15" fill="rgb(206,97,47)" fg:x="933" fg:w="2"/><text x="75.3708%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.2013%" y="469" width="0.0805%" height="15" fill="rgb(227,107,4)" fg:x="934" fg:w="1"/><text x="75.4513%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.2818%" y="469" width="0.0805%" height="15" fill="rgb(241,146,50)" fg:x="935" fg:w="1"/><text x="75.5318%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="75.3623%" y="453" width="0.1610%" height="15" fill="rgb(232,92,30)" fg:x="936" fg:w="2"/><text x="75.6123%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.5233%" y="453" width="0.0805%" height="15" fill="rgb(222,0,40)" fg:x="938" fg:w="1"/><text x="75.7733%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.6039%" y="437" width="0.0805%" height="15" fill="rgb(219,54,33)" fg:x="939" fg:w="1"/><text x="75.8539%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="75.1208%" y="517" width="0.6441%" height="15" fill="rgb(226,209,28)" fg:x="933" fg:w="8"/><text x="75.3708%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="75.1208%" y="501" width="0.6441%" height="15" fill="rgb(254,205,35)" fg:x="933" fg:w="8"/><text x="75.3708%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="75.2818%" y="485" width="0.4831%" height="15" fill="rgb(230,159,3)" fg:x="935" fg:w="6"/><text x="75.5318%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="75.3623%" y="469" width="0.4026%" height="15" fill="rgb(232,190,24)" fg:x="936" fg:w="5"/><text x="75.6123%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.6039%" y="453" width="0.1610%" height="15" fill="rgb(217,227,44)" fg:x="939" fg:w="2"/><text x="75.8539%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.6844%" y="437" width="0.0805%" height="15" fill="rgb(236,211,1)" fg:x="940" fg:w="1"/><text x="75.9344%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.6844%" y="421" width="0.0805%" height="15" fill="rgb(250,127,46)" fg:x="940" fg:w="1"/><text x="75.9344%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.7649%" y="469" width="0.1610%" height="15" fill="rgb(229,213,6)" fg:x="941" fg:w="2"/><text x="76.0149%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="75.9259%" y="469" width="0.0805%" height="15" fill="rgb(237,15,36)" fg:x="943" fg:w="1"/><text x="76.1759%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.9259%" y="453" width="0.0805%" height="15" fill="rgb(213,131,41)" fg:x="943" fg:w="1"/><text x="76.1759%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9259%" y="437" width="0.0805%" height="15" fill="rgb(225,82,44)" fg:x="943" fg:w="1"/><text x="76.1759%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9259%" y="421" width="0.0805%" height="15" fill="rgb(249,42,11)" fg:x="943" fg:w="1"/><text x="76.1759%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9259%" y="405" width="0.0805%" height="15" fill="rgb(253,11,29)" fg:x="943" fg:w="1"/><text x="76.1759%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="76.0064%" y="469" width="0.0805%" height="15" fill="rgb(206,8,54)" fg:x="944" fg:w="1"/><text x="76.2564%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.0064%" y="453" width="0.0805%" height="15" fill="rgb(222,186,2)" fg:x="944" fg:w="1"/><text x="76.2564%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="76.0870%" y="469" width="0.0805%" height="15" fill="rgb(221,206,53)" fg:x="945" fg:w="1"/><text x="76.3370%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2480%" y="421" width="0.0805%" height="15" fill="rgb(230,150,21)" fg:x="947" fg:w="1"/><text x="76.4980%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2480%" y="405" width="0.0805%" height="15" fill="rgb(253,202,10)" fg:x="947" fg:w="1"/><text x="76.4980%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.2480%" y="389" width="0.0805%" height="15" fill="rgb(238,109,40)" fg:x="947" fg:w="1"/><text x="76.4980%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.3285%" y="421" width="0.0805%" height="15" fill="rgb(247,120,22)" fg:x="948" fg:w="1"/><text x="76.5785%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3285%" y="405" width="0.0805%" height="15" fill="rgb(207,43,30)" fg:x="948" fg:w="1"/><text x="76.5785%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.3285%" y="389" width="0.0805%" height="15" fill="rgb(213,211,24)" fg:x="948" fg:w="1"/><text x="76.5785%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3285%" y="373" width="0.0805%" height="15" fill="rgb(239,73,39)" fg:x="948" fg:w="1"/><text x="76.5785%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3285%" y="357" width="0.0805%" height="15" fill="rgb(245,182,19)" fg:x="948" fg:w="1"/><text x="76.5785%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.3285%" y="341" width="0.0805%" height="15" fill="rgb(247,143,26)" fg:x="948" fg:w="1"/><text x="76.5785%" y="351.50"></text></g><g><title>engine::session::Session::save_changes (45 samples, 3.62%)</title><rect x="73.2689%" y="597" width="3.6232%" height="15" fill="rgb(228,191,23)" fg:x="910" fg:w="45"/><text x="73.5189%" y="607.50">engi..</text></g><g><title>engine::session::state::State::close (44 samples, 3.54%)</title><rect x="73.3494%" y="581" width="3.5427%" height="15" fill="rgb(253,165,31)" fg:x="911" fg:w="44"/><text x="73.5994%" y="591.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (44 samples, 3.54%)</title><rect x="73.3494%" y="565" width="3.5427%" height="15" fill="rgb(234,138,20)" fg:x="911" fg:w="44"/><text x="73.5994%" y="575.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (42 samples, 3.38%)</title><rect x="73.5105%" y="549" width="3.3816%" height="15" fill="rgb(218,191,29)" fg:x="913" fg:w="42"/><text x="73.7605%" y="559.50">eng..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (42 samples, 3.38%)</title><rect x="73.5105%" y="533" width="3.3816%" height="15" fill="rgb(221,157,19)" fg:x="913" fg:w="42"/><text x="73.7605%" y="543.50">eng..</text></g><g><title>kernel::model::any_entity_changes (14 samples, 1.13%)</title><rect x="75.7649%" y="517" width="1.1272%" height="15" fill="rgb(237,26,42)" fg:x="941" fg:w="14"/><text x="76.0149%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.13%)</title><rect x="75.7649%" y="501" width="1.1272%" height="15" fill="rgb(220,163,24)" fg:x="941" fg:w="14"/><text x="76.0149%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.13%)</title><rect x="75.7649%" y="485" width="1.1272%" height="15" fill="rgb(242,115,20)" fg:x="941" fg:w="14"/><text x="76.0149%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="76.1675%" y="469" width="0.7246%" height="15" fill="rgb(210,206,9)" fg:x="946" fg:w="9"/><text x="76.4175%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="76.2480%" y="453" width="0.6441%" height="15" fill="rgb(208,71,17)" fg:x="947" fg:w="8"/><text x="76.4980%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="76.2480%" y="437" width="0.6441%" height="15" fill="rgb(233,7,5)" fg:x="947" fg:w="8"/><text x="76.4980%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="76.4090%" y="421" width="0.4831%" height="15" fill="rgb(207,92,33)" fg:x="949" fg:w="6"/><text x="76.6590%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="76.5700%" y="405" width="0.3221%" height="15" fill="rgb(218,87,9)" fg:x="951" fg:w="4"/><text x="76.8200%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="76.6506%" y="389" width="0.2415%" height="15" fill="rgb(219,47,37)" fg:x="952" fg:w="3"/><text x="76.9006%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="76.6506%" y="373" width="0.2415%" height="15" fill="rgb(221,152,34)" fg:x="952" fg:w="3"/><text x="76.9006%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="76.6506%" y="357" width="0.2415%" height="15" fill="rgb(235,176,21)" fg:x="952" fg:w="3"/><text x="76.9006%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.8116%" y="341" width="0.0805%" height="15" fill="rgb(232,212,21)" fg:x="954" fg:w="1"/><text x="77.0616%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8116%" y="325" width="0.0805%" height="15" fill="rgb(245,82,39)" fg:x="954" fg:w="1"/><text x="77.0616%" y="335.50"></text></g><g><title>engine::session::Session::flush (49 samples, 3.95%)</title><rect x="73.0274%" y="613" width="3.9452%" height="15" fill="rgb(241,52,51)" fg:x="907" fg:w="49"/><text x="73.2774%" y="623.50">engi..</text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="76.8921%" y="597" width="0.0805%" height="15" fill="rgb(219,91,24)" fg:x="955" fg:w="1"/><text x="77.1421%" y="607.50"></text></g><g><title>kernel::session::SetSession&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="76.8921%" y="581" width="0.0805%" height="15" fill="rgb(241,142,12)" fg:x="955" fg:w="1"/><text x="77.1421%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.9726%" y="597" width="0.0805%" height="15" fill="rgb(230,27,9)" fg:x="956" fg:w="1"/><text x="77.2226%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.0531%" y="581" width="0.0805%" height="15" fill="rgb(249,181,32)" fg:x="957" fg:w="1"/><text x="77.3031%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.1337%" y="517" width="0.1610%" height="15" fill="rgb(230,107,3)" fg:x="958" fg:w="2"/><text x="77.3837%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.1337%" y="501" width="0.1610%" height="15" fill="rgb(246,204,14)" fg:x="958" fg:w="2"/><text x="77.3837%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.1337%" y="485" width="0.1610%" height="15" fill="rgb(213,192,47)" fg:x="958" fg:w="2"/><text x="77.3837%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2142%" y="469" width="0.0805%" height="15" fill="rgb(240,44,36)" fg:x="959" fg:w="1"/><text x="77.4642%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2142%" y="453" width="0.0805%" height="15" fill="rgb(244,209,38)" fg:x="959" fg:w="1"/><text x="77.4642%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.2142%" y="437" width="0.0805%" height="15" fill="rgb(219,34,37)" fg:x="959" fg:w="1"/><text x="77.4642%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.2142%" y="421" width="0.0805%" height="15" fill="rgb(210,28,6)" fg:x="959" fg:w="1"/><text x="77.4642%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.2142%" y="405" width="0.0805%" height="15" fill="rgb(244,110,52)" fg:x="959" fg:w="1"/><text x="77.4642%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.2142%" y="389" width="0.0805%" height="15" fill="rgb(254,124,47)" fg:x="959" fg:w="1"/><text x="77.4642%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.2142%" y="373" width="0.0805%" height="15" fill="rgb(254,110,13)" fg:x="959" fg:w="1"/><text x="77.4642%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.2142%" y="357" width="0.0805%" height="15" fill="rgb(252,57,21)" fg:x="959" fg:w="1"/><text x="77.4642%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.2142%" y="341" width="0.0805%" height="15" fill="rgb(242,60,45)" fg:x="959" fg:w="1"/><text x="77.4642%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.2142%" y="325" width="0.0805%" height="15" fill="rgb(234,49,30)" fg:x="959" fg:w="1"/><text x="77.4642%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.2142%" y="309" width="0.0805%" height="15" fill="rgb(218,98,6)" fg:x="959" fg:w="1"/><text x="77.4642%" y="319.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="77.2142%" y="293" width="0.0805%" height="15" fill="rgb(220,174,29)" fg:x="959" fg:w="1"/><text x="77.4642%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.2142%" y="277" width="0.0805%" height="15" fill="rgb(236,163,23)" fg:x="959" fg:w="1"/><text x="77.4642%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.2947%" y="517" width="0.0805%" height="15" fill="rgb(242,114,45)" fg:x="960" fg:w="1"/><text x="77.5447%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="77.1337%" y="549" width="0.3221%" height="15" fill="rgb(232,10,53)" fg:x="958" fg:w="4"/><text x="77.3837%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="77.1337%" y="533" width="0.3221%" height="15" fill="rgb(245,108,29)" fg:x="958" fg:w="4"/><text x="77.3837%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.3752%" y="517" width="0.0805%" height="15" fill="rgb(240,89,53)" fg:x="961" fg:w="1"/><text x="77.6252%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.3752%" y="501" width="0.0805%" height="15" fill="rgb(226,60,45)" fg:x="961" fg:w="1"/><text x="77.6252%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.4557%" y="517" width="0.0805%" height="15" fill="rgb(230,41,44)" fg:x="962" fg:w="1"/><text x="77.7057%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="77.4557%" y="501" width="0.0805%" height="15" fill="rgb(230,26,20)" fg:x="962" fg:w="1"/><text x="77.7057%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="77.1337%" y="581" width="0.4831%" height="15" fill="rgb(237,170,32)" fg:x="958" fg:w="6"/><text x="77.3837%" y="591.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="77.1337%" y="565" width="0.4831%" height="15" fill="rgb(212,35,42)" fg:x="958" fg:w="6"/><text x="77.3837%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="77.4557%" y="549" width="0.1610%" height="15" fill="rgb(227,31,34)" fg:x="962" fg:w="2"/><text x="77.7057%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.4557%" y="533" width="0.1610%" height="15" fill="rgb(216,19,18)" fg:x="962" fg:w="2"/><text x="77.7057%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.5362%" y="517" width="0.0805%" height="15" fill="rgb(211,133,42)" fg:x="963" fg:w="1"/><text x="77.7862%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.5362%" y="501" width="0.0805%" height="15" fill="rgb(244,66,13)" fg:x="963" fg:w="1"/><text x="77.7862%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.5362%" y="485" width="0.0805%" height="15" fill="rgb(218,185,50)" fg:x="963" fg:w="1"/><text x="77.7862%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.5362%" y="469" width="0.0805%" height="15" fill="rgb(219,149,13)" fg:x="963" fg:w="1"/><text x="77.7862%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.5362%" y="453" width="0.0805%" height="15" fill="rgb(221,125,0)" fg:x="963" fg:w="1"/><text x="77.7862%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.5362%" y="437" width="0.0805%" height="15" fill="rgb(247,126,27)" fg:x="963" fg:w="1"/><text x="77.7862%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.5362%" y="421" width="0.0805%" height="15" fill="rgb(250,138,30)" fg:x="963" fg:w="1"/><text x="77.7862%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.6167%" y="581" width="0.0805%" height="15" fill="rgb(230,151,9)" fg:x="964" fg:w="1"/><text x="77.8667%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="77.6167%" y="565" width="0.0805%" height="15" fill="rgb(233,80,38)" fg:x="964" fg:w="1"/><text x="77.8667%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.6167%" y="549" width="0.0805%" height="15" fill="rgb(232,68,43)" fg:x="964" fg:w="1"/><text x="77.8667%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.6167%" y="533" width="0.0805%" height="15" fill="rgb(254,5,50)" fg:x="964" fg:w="1"/><text x="77.8667%" y="543.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="77.6167%" y="517" width="0.0805%" height="15" fill="rgb(225,45,5)" fg:x="964" fg:w="1"/><text x="77.8667%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.6167%" y="501" width="0.0805%" height="15" fill="rgb(239,22,3)" fg:x="964" fg:w="1"/><text x="77.8667%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.6167%" y="485" width="0.0805%" height="15" fill="rgb(243,129,0)" fg:x="964" fg:w="1"/><text x="77.8667%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="77.6973%" y="533" width="0.1610%" height="15" fill="rgb(223,164,0)" fg:x="965" fg:w="2"/><text x="77.9473%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.6973%" y="517" width="0.1610%" height="15" fill="rgb(221,46,29)" fg:x="965" fg:w="2"/><text x="77.9473%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.6973%" y="501" width="0.1610%" height="15" fill="rgb(205,97,47)" fg:x="965" fg:w="2"/><text x="77.9473%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7778%" y="485" width="0.0805%" height="15" fill="rgb(249,14,8)" fg:x="966" fg:w="1"/><text x="78.0278%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8583%" y="501" width="0.0805%" height="15" fill="rgb(216,77,3)" fg:x="967" fg:w="1"/><text x="78.1083%" y="511.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="77.6973%" y="581" width="0.3221%" height="15" fill="rgb(206,168,54)" fg:x="965" fg:w="4"/><text x="77.9473%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="77.6973%" y="565" width="0.3221%" height="15" fill="rgb(236,3,41)" fg:x="965" fg:w="4"/><text x="77.9473%" y="575.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="77.6973%" y="549" width="0.3221%" height="15" fill="rgb(231,132,24)" fg:x="965" fg:w="4"/><text x="77.9473%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="77.8583%" y="533" width="0.1610%" height="15" fill="rgb(227,221,40)" fg:x="967" fg:w="2"/><text x="78.1083%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.8583%" y="517" width="0.1610%" height="15" fill="rgb(233,151,11)" fg:x="967" fg:w="2"/><text x="78.1083%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.9388%" y="501" width="0.0805%" height="15" fill="rgb(247,81,35)" fg:x="968" fg:w="1"/><text x="78.1888%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9388%" y="485" width="0.0805%" height="15" fill="rgb(243,128,48)" fg:x="968" fg:w="1"/><text x="78.1888%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.9388%" y="469" width="0.0805%" height="15" fill="rgb(253,16,10)" fg:x="968" fg:w="1"/><text x="78.1888%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9388%" y="453" width="0.0805%" height="15" fill="rgb(228,67,27)" fg:x="968" fg:w="1"/><text x="78.1888%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.9388%" y="437" width="0.0805%" height="15" fill="rgb(231,105,25)" fg:x="968" fg:w="1"/><text x="78.1888%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="78.0193%" y="565" width="0.0805%" height="15" fill="rgb(213,166,47)" fg:x="969" fg:w="1"/><text x="78.2693%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.0193%" y="549" width="0.0805%" height="15" fill="rgb(209,27,10)" fg:x="969" fg:w="1"/><text x="78.2693%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (15 samples, 1.21%)</title><rect x="76.9726%" y="613" width="1.2077%" height="15" fill="rgb(241,44,30)" fg:x="956" fg:w="15"/><text x="77.2226%" y="623.50"></text></g><g><title>plugins_core::tools::set_container (14 samples, 1.13%)</title><rect x="77.0531%" y="597" width="1.1272%" height="15" fill="rgb(223,216,15)" fg:x="957" fg:w="14"/><text x="77.3031%" y="607.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="78.0193%" y="581" width="0.1610%" height="15" fill="rgb(227,14,7)" fg:x="969" fg:w="2"/><text x="78.2693%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.0998%" y="565" width="0.0805%" height="15" fill="rgb(237,14,5)" fg:x="970" fg:w="1"/><text x="78.3498%" y="575.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="78.0998%" y="549" width="0.0805%" height="15" fill="rgb(232,14,36)" fg:x="970" fg:w="1"/><text x="78.3498%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.0998%" y="533" width="0.0805%" height="15" fill="rgb(234,0,38)" fg:x="970" fg:w="1"/><text x="78.3498%" y="543.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="78.0998%" y="517" width="0.0805%" height="15" fill="rgb(207,170,14)" fg:x="970" fg:w="1"/><text x="78.3498%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.0998%" y="501" width="0.0805%" height="15" fill="rgb(252,45,13)" fg:x="970" fg:w="1"/><text x="78.3498%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.0998%" y="485" width="0.0805%" height="15" fill="rgb(213,142,7)" fg:x="970" fg:w="1"/><text x="78.3498%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.0998%" y="469" width="0.0805%" height="15" fill="rgb(216,157,23)" fg:x="970" fg:w="1"/><text x="78.3498%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="78.0998%" y="453" width="0.0805%" height="15" fill="rgb(212,145,33)" fg:x="970" fg:w="1"/><text x="78.3498%" y="463.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="78.1804%" y="581" width="0.0805%" height="15" fill="rgb(233,26,13)" fg:x="971" fg:w="1"/><text x="78.4304%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.1804%" y="565" width="0.0805%" height="15" fill="rgb(219,196,19)" fg:x="971" fg:w="1"/><text x="78.4304%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.1804%" y="549" width="0.0805%" height="15" fill="rgb(246,56,21)" fg:x="971" fg:w="1"/><text x="78.4304%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="78.1804%" y="533" width="0.0805%" height="15" fill="rgb(222,28,53)" fg:x="971" fg:w="1"/><text x="78.4304%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="78.1804%" y="613" width="0.1610%" height="15" fill="rgb(224,5,27)" fg:x="971" fg:w="2"/><text x="78.4304%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="78.1804%" y="597" width="0.1610%" height="15" fill="rgb(220,153,33)" fg:x="971" fg:w="2"/><text x="78.4304%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.2609%" y="581" width="0.0805%" height="15" fill="rgb(226,58,19)" fg:x="972" fg:w="1"/><text x="78.5109%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.2609%" y="565" width="0.0805%" height="15" fill="rgb(239,112,23)" fg:x="972" fg:w="1"/><text x="78.5109%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="78.3414%" y="597" width="0.0805%" height="15" fill="rgb(251,213,20)" fg:x="973" fg:w="1"/><text x="78.5914%" y="607.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="78.3414%" y="581" width="0.0805%" height="15" fill="rgb(215,181,21)" fg:x="973" fg:w="1"/><text x="78.5914%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.3414%" y="565" width="0.0805%" height="15" fill="rgb(240,8,35)" fg:x="973" fg:w="1"/><text x="78.5914%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="78.4219%" y="597" width="0.1610%" height="15" fill="rgb(232,203,3)" fg:x="974" fg:w="2"/><text x="78.6719%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="78.4219%" y="581" width="0.1610%" height="15" fill="rgb(214,202,43)" fg:x="974" fg:w="2"/><text x="78.6719%" y="591.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="78.4219%" y="565" width="0.1610%" height="15" fill="rgb(254,35,11)" fg:x="974" fg:w="2"/><text x="78.6719%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="78.4219%" y="549" width="0.1610%" height="15" fill="rgb(239,173,13)" fg:x="974" fg:w="2"/><text x="78.6719%" y="559.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.16%)</title><rect x="78.4219%" y="533" width="0.1610%" height="15" fill="rgb(220,141,0)" fg:x="974" fg:w="2"/><text x="78.6719%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="78.4219%" y="517" width="0.1610%" height="15" fill="rgb(210,98,12)" fg:x="974" fg:w="2"/><text x="78.6719%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="78.4219%" y="501" width="0.1610%" height="15" fill="rgb(254,153,22)" fg:x="974" fg:w="2"/><text x="78.6719%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="78.4219%" y="485" width="0.1610%" height="15" fill="rgb(247,223,17)" fg:x="974" fg:w="2"/><text x="78.6719%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="78.4219%" y="469" width="0.1610%" height="15" fill="rgb(246,56,7)" fg:x="974" fg:w="2"/><text x="78.6719%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="78.4219%" y="453" width="0.1610%" height="15" fill="rgb(240,226,12)" fg:x="974" fg:w="2"/><text x="78.6719%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="78.4219%" y="437" width="0.1610%" height="15" fill="rgb(205,87,46)" fg:x="974" fg:w="2"/><text x="78.6719%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="78.4219%" y="421" width="0.1610%" height="15" fill="rgb(245,214,51)" fg:x="974" fg:w="2"/><text x="78.6719%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="78.4219%" y="405" width="0.1610%" height="15" fill="rgb(223,172,33)" fg:x="974" fg:w="2"/><text x="78.6719%" y="415.50"></text></g><g><title>plugins_core::build::Build::new (4 samples, 0.32%)</title><rect x="78.3414%" y="613" width="0.3221%" height="15" fill="rgb(227,203,34)" fg:x="973" fg:w="4"/><text x="78.5914%" y="623.50"></text></g><g><title>kernel::model::builder::build_entity (1 samples, 0.08%)</title><rect x="78.5829%" y="597" width="0.0805%" height="15" fill="rgb(248,143,44)" fg:x="976" fg:w="1"/><text x="78.8329%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.6634%" y="565" width="0.0805%" height="15" fill="rgb(226,162,5)" fg:x="977" fg:w="1"/><text x="78.9134%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.6634%" y="549" width="0.0805%" height="15" fill="rgb(211,143,1)" fg:x="977" fg:w="1"/><text x="78.9134%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.6634%" y="533" width="0.0805%" height="15" fill="rgb(224,96,15)" fg:x="977" fg:w="1"/><text x="78.9134%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.6634%" y="517" width="0.0805%" height="15" fill="rgb(222,4,38)" fg:x="977" fg:w="1"/><text x="78.9134%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.6634%" y="501" width="0.0805%" height="15" fill="rgb(253,228,15)" fg:x="977" fg:w="1"/><text x="78.9134%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.6634%" y="485" width="0.0805%" height="15" fill="rgb(242,194,12)" fg:x="977" fg:w="1"/><text x="78.9134%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.6634%" y="469" width="0.0805%" height="15" fill="rgb(214,177,31)" fg:x="977" fg:w="1"/><text x="78.9134%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.6634%" y="453" width="0.0805%" height="15" fill="rgb(226,58,51)" fg:x="977" fg:w="1"/><text x="78.9134%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.6634%" y="437" width="0.0805%" height="15" fill="rgb(250,119,16)" fg:x="977" fg:w="1"/><text x="78.9134%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.6634%" y="421" width="0.0805%" height="15" fill="rgb(223,128,53)" fg:x="977" fg:w="1"/><text x="78.9134%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.6634%" y="405" width="0.0805%" height="15" fill="rgb(251,199,15)" fg:x="977" fg:w="1"/><text x="78.9134%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.6634%" y="389" width="0.0805%" height="15" fill="rgb(235,168,42)" fg:x="977" fg:w="1"/><text x="78.9134%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.6634%" y="373" width="0.0805%" height="15" fill="rgb(250,210,17)" fg:x="977" fg:w="1"/><text x="78.9134%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.6634%" y="357" width="0.0805%" height="15" fill="rgb(226,36,41)" fg:x="977" fg:w="1"/><text x="78.9134%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.6634%" y="341" width="0.0805%" height="15" fill="rgb(225,87,10)" fg:x="977" fg:w="1"/><text x="78.9134%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="78.7440%" y="517" width="0.0805%" height="15" fill="rgb(228,83,9)" fg:x="978" fg:w="1"/><text x="78.9940%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.7440%" y="501" width="0.0805%" height="15" fill="rgb(225,16,36)" fg:x="978" fg:w="1"/><text x="78.9940%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="78.7440%" y="565" width="0.1610%" height="15" fill="rgb(242,198,13)" fg:x="978" fg:w="2"/><text x="78.9940%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="78.7440%" y="549" width="0.1610%" height="15" fill="rgb(239,25,51)" fg:x="978" fg:w="2"/><text x="78.9940%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.7440%" y="533" width="0.1610%" height="15" fill="rgb(239,28,37)" fg:x="978" fg:w="2"/><text x="78.9940%" y="543.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.8245%" y="517" width="0.0805%" height="15" fill="rgb(234,70,17)" fg:x="979" fg:w="1"/><text x="79.0745%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="78.9050%" y="549" width="0.1610%" height="15" fill="rgb(231,215,53)" fg:x="980" fg:w="2"/><text x="79.1550%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.9855%" y="533" width="0.0805%" height="15" fill="rgb(218,140,42)" fg:x="981" fg:w="1"/><text x="79.2355%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.9855%" y="517" width="0.0805%" height="15" fill="rgb(233,227,45)" fg:x="981" fg:w="1"/><text x="79.2355%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.9855%" y="501" width="0.0805%" height="15" fill="rgb(225,189,21)" fg:x="981" fg:w="1"/><text x="79.2355%" y="511.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="78.9855%" y="485" width="0.0805%" height="15" fill="rgb(237,176,54)" fg:x="981" fg:w="1"/><text x="79.2355%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.0660%" y="517" width="0.0805%" height="15" fill="rgb(215,131,46)" fg:x="982" fg:w="1"/><text x="79.3160%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.0660%" y="501" width="0.0805%" height="15" fill="rgb(218,95,20)" fg:x="982" fg:w="1"/><text x="79.3160%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="78.9050%" y="565" width="0.3221%" height="15" fill="rgb(208,198,12)" fg:x="980" fg:w="4"/><text x="79.1550%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="79.0660%" y="549" width="0.1610%" height="15" fill="rgb(239,107,50)" fg:x="982" fg:w="2"/><text x="79.3160%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.0660%" y="533" width="0.1610%" height="15" fill="rgb(240,217,37)" fg:x="982" fg:w="2"/><text x="79.3160%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="79.1465%" y="517" width="0.0805%" height="15" fill="rgb(242,197,49)" fg:x="983" fg:w="1"/><text x="79.3965%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.1465%" y="501" width="0.0805%" height="15" fill="rgb(219,171,17)" fg:x="983" fg:w="1"/><text x="79.3965%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.1465%" y="485" width="0.0805%" height="15" fill="rgb(209,81,40)" fg:x="983" fg:w="1"/><text x="79.3965%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1465%" y="469" width="0.0805%" height="15" fill="rgb(237,156,30)" fg:x="983" fg:w="1"/><text x="79.3965%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="79.2271%" y="501" width="0.0805%" height="15" fill="rgb(212,127,16)" fg:x="984" fg:w="1"/><text x="79.4771%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.2271%" y="485" width="0.0805%" height="15" fill="rgb(226,66,32)" fg:x="984" fg:w="1"/><text x="79.4771%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2271%" y="469" width="0.0805%" height="15" fill="rgb(245,22,46)" fg:x="984" fg:w="1"/><text x="79.4771%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.2271%" y="453" width="0.0805%" height="15" fill="rgb(210,112,21)" fg:x="984" fg:w="1"/><text x="79.4771%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.2271%" y="437" width="0.0805%" height="15" fill="rgb(207,118,39)" fg:x="984" fg:w="1"/><text x="79.4771%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="78.6634%" y="581" width="0.7246%" height="15" fill="rgb(205,206,35)" fg:x="977" fg:w="9"/><text x="78.9134%" y="591.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="79.2271%" y="565" width="0.1610%" height="15" fill="rgb(222,120,2)" fg:x="984" fg:w="2"/><text x="79.4771%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="79.2271%" y="549" width="0.1610%" height="15" fill="rgb(205,38,18)" fg:x="984" fg:w="2"/><text x="79.4771%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="79.2271%" y="533" width="0.1610%" height="15" fill="rgb(226,61,2)" fg:x="984" fg:w="2"/><text x="79.4771%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.2271%" y="517" width="0.1610%" height="15" fill="rgb(242,161,23)" fg:x="984" fg:w="2"/><text x="79.4771%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="79.3076%" y="501" width="0.0805%" height="15" fill="rgb(213,13,52)" fg:x="985" fg:w="1"/><text x="79.5576%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3076%" y="485" width="0.0805%" height="15" fill="rgb(246,209,47)" fg:x="985" fg:w="1"/><text x="79.5576%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="79.3076%" y="469" width="0.0805%" height="15" fill="rgb(214,41,3)" fg:x="985" fg:w="1"/><text x="79.5576%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3076%" y="453" width="0.0805%" height="15" fill="rgb(236,119,38)" fg:x="985" fg:w="1"/><text x="79.5576%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="79.3076%" y="437" width="0.0805%" height="15" fill="rgb(218,50,11)" fg:x="985" fg:w="1"/><text x="79.5576%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3076%" y="421" width="0.0805%" height="15" fill="rgb(228,38,11)" fg:x="985" fg:w="1"/><text x="79.5576%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (10 samples, 0.81%)</title><rect x="78.6634%" y="597" width="0.8052%" height="15" fill="rgb(212,13,9)" fg:x="977" fg:w="10"/><text x="78.9134%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.3881%" y="581" width="0.0805%" height="15" fill="rgb(208,211,9)" fg:x="986" fg:w="1"/><text x="79.6381%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.3881%" y="565" width="0.0805%" height="15" fill="rgb(239,39,32)" fg:x="986" fg:w="1"/><text x="79.6381%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="79.3881%" y="549" width="0.0805%" height="15" fill="rgb(254,179,26)" fg:x="986" fg:w="1"/><text x="79.6381%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.3881%" y="533" width="0.0805%" height="15" fill="rgb(249,165,28)" fg:x="986" fg:w="1"/><text x="79.6381%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.3881%" y="517" width="0.0805%" height="15" fill="rgb(225,59,50)" fg:x="986" fg:w="1"/><text x="79.6381%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.3881%" y="501" width="0.0805%" height="15" fill="rgb(209,122,5)" fg:x="986" fg:w="1"/><text x="79.6381%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3881%" y="485" width="0.0805%" height="15" fill="rgb(214,65,34)" fg:x="986" fg:w="1"/><text x="79.6381%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="79.4686%" y="517" width="0.0805%" height="15" fill="rgb(249,183,32)" fg:x="987" fg:w="1"/><text x="79.7186%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.4686%" y="501" width="0.0805%" height="15" fill="rgb(218,122,24)" fg:x="987" fg:w="1"/><text x="79.7186%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.4686%" y="485" width="0.0805%" height="15" fill="rgb(224,109,18)" fg:x="987" fg:w="1"/><text x="79.7186%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.4686%" y="469" width="0.0805%" height="15" fill="rgb(210,68,50)" fg:x="987" fg:w="1"/><text x="79.7186%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4686%" y="453" width="0.0805%" height="15" fill="rgb(212,184,34)" fg:x="987" fg:w="1"/><text x="79.7186%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="79.4686%" y="581" width="0.1610%" height="15" fill="rgb(238,105,48)" fg:x="987" fg:w="2"/><text x="79.7186%" y="591.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="79.4686%" y="565" width="0.1610%" height="15" fill="rgb(222,134,54)" fg:x="987" fg:w="2"/><text x="79.7186%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="79.4686%" y="549" width="0.1610%" height="15" fill="rgb(246,24,43)" fg:x="987" fg:w="2"/><text x="79.7186%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.4686%" y="533" width="0.1610%" height="15" fill="rgb(227,169,22)" fg:x="987" fg:w="2"/><text x="79.7186%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="79.5491%" y="517" width="0.0805%" height="15" fill="rgb(253,152,4)" fg:x="988" fg:w="1"/><text x="79.7991%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.5491%" y="501" width="0.0805%" height="15" fill="rgb(219,158,36)" fg:x="988" fg:w="1"/><text x="79.7991%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="79.5491%" y="485" width="0.0805%" height="15" fill="rgb(251,128,40)" fg:x="988" fg:w="1"/><text x="79.7991%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.5491%" y="469" width="0.0805%" height="15" fill="rgb(254,101,39)" fg:x="988" fg:w="1"/><text x="79.7991%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="79.5491%" y="453" width="0.0805%" height="15" fill="rgb(221,168,40)" fg:x="988" fg:w="1"/><text x="79.7991%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6296%" y="565" width="0.0805%" height="15" fill="rgb(221,14,27)" fg:x="989" fg:w="1"/><text x="79.8796%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="79.6296%" y="581" width="0.1610%" height="15" fill="rgb(207,36,43)" fg:x="989" fg:w="2"/><text x="79.8796%" y="591.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="79.7101%" y="565" width="0.0805%" height="15" fill="rgb(240,172,53)" fg:x="990" fg:w="1"/><text x="79.9601%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.7101%" y="549" width="0.0805%" height="15" fill="rgb(241,138,43)" fg:x="990" fg:w="1"/><text x="79.9601%" y="559.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="79.7101%" y="533" width="0.0805%" height="15" fill="rgb(227,78,19)" fg:x="990" fg:w="1"/><text x="79.9601%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.7101%" y="517" width="0.0805%" height="15" fill="rgb(215,127,44)" fg:x="990" fg:w="1"/><text x="79.9601%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.7101%" y="501" width="0.0805%" height="15" fill="rgb(227,13,10)" fg:x="990" fg:w="1"/><text x="79.9601%" y="511.50"></text></g><g><title>plugins_core::build::Build::occupying (15 samples, 1.21%)</title><rect x="78.6634%" y="613" width="1.2077%" height="15" fill="rgb(249,177,6)" fg:x="977" fg:w="15"/><text x="78.9134%" y="623.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.40%)</title><rect x="79.4686%" y="597" width="0.4026%" height="15" fill="rgb(215,154,26)" fg:x="987" fg:w="5"/><text x="79.7186%" y="607.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="79.7907%" y="581" width="0.0805%" height="15" fill="rgb(250,168,20)" fg:x="991" fg:w="1"/><text x="80.0407%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="79.7907%" y="565" width="0.0805%" height="15" fill="rgb(222,53,38)" fg:x="991" fg:w="1"/><text x="80.0407%" y="575.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="79.7907%" y="549" width="0.0805%" height="15" fill="rgb(245,154,5)" fg:x="991" fg:w="1"/><text x="80.0407%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.7907%" y="533" width="0.0805%" height="15" fill="rgb(214,89,50)" fg:x="991" fg:w="1"/><text x="80.0407%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.7907%" y="517" width="0.0805%" height="15" fill="rgb(232,73,14)" fg:x="991" fg:w="1"/><text x="80.0407%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="79.7907%" y="501" width="0.0805%" height="15" fill="rgb(230,101,20)" fg:x="991" fg:w="1"/><text x="80.0407%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.7907%" y="485" width="0.0805%" height="15" fill="rgb(208,56,28)" fg:x="991" fg:w="1"/><text x="80.0407%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.7907%" y="469" width="0.0805%" height="15" fill="rgb(247,205,22)" fg:x="991" fg:w="1"/><text x="80.0407%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.7907%" y="453" width="0.0805%" height="15" fill="rgb(252,109,51)" fg:x="991" fg:w="1"/><text x="80.0407%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7907%" y="437" width="0.0805%" height="15" fill="rgb(220,40,24)" fg:x="991" fg:w="1"/><text x="80.0407%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.8712%" y="501" width="0.0805%" height="15" fill="rgb(251,108,7)" fg:x="992" fg:w="1"/><text x="80.1212%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="79.8712%" y="565" width="0.1610%" height="15" fill="rgb(238,102,51)" fg:x="992" fg:w="2"/><text x="80.1212%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.8712%" y="549" width="0.1610%" height="15" fill="rgb(219,149,34)" fg:x="992" fg:w="2"/><text x="80.1212%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="79.8712%" y="533" width="0.1610%" height="15" fill="rgb(239,70,0)" fg:x="992" fg:w="2"/><text x="80.1212%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.8712%" y="517" width="0.1610%" height="15" fill="rgb(246,214,23)" fg:x="992" fg:w="2"/><text x="80.1212%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="79.9517%" y="501" width="0.0805%" height="15" fill="rgb(239,221,51)" fg:x="993" fg:w="1"/><text x="80.2017%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.9517%" y="485" width="0.0805%" height="15" fill="rgb(254,62,14)" fg:x="993" fg:w="1"/><text x="80.2017%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.9517%" y="469" width="0.0805%" height="15" fill="rgb(253,57,33)" fg:x="993" fg:w="1"/><text x="80.2017%" y="479.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="80.0322%" y="533" width="0.0805%" height="15" fill="rgb(229,34,6)" fg:x="994" fg:w="1"/><text x="80.2822%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.0322%" y="517" width="0.0805%" height="15" fill="rgb(235,191,23)" fg:x="994" fg:w="1"/><text x="80.2822%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="80.0322%" y="565" width="0.1610%" height="15" fill="rgb(217,207,27)" fg:x="994" fg:w="2"/><text x="80.2822%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="80.0322%" y="549" width="0.1610%" height="15" fill="rgb(232,41,44)" fg:x="994" fg:w="2"/><text x="80.2822%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="80.1127%" y="533" width="0.0805%" height="15" fill="rgb(221,188,19)" fg:x="995" fg:w="1"/><text x="80.3627%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.1127%" y="517" width="0.0805%" height="15" fill="rgb(245,180,45)" fg:x="995" fg:w="1"/><text x="80.3627%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1127%" y="501" width="0.0805%" height="15" fill="rgb(250,220,42)" fg:x="995" fg:w="1"/><text x="80.3627%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.1932%" y="501" width="0.0805%" height="15" fill="rgb(234,16,34)" fg:x="996" fg:w="1"/><text x="80.4432%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.1932%" y="485" width="0.0805%" height="15" fill="rgb(233,217,23)" fg:x="996" fg:w="1"/><text x="80.4432%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="80.1932%" y="565" width="0.1610%" height="15" fill="rgb(209,22,46)" fg:x="996" fg:w="2"/><text x="80.4432%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="80.1932%" y="549" width="0.1610%" height="15" fill="rgb(213,101,18)" fg:x="996" fg:w="2"/><text x="80.4432%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="80.1932%" y="533" width="0.1610%" height="15" fill="rgb(215,179,52)" fg:x="996" fg:w="2"/><text x="80.4432%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.1932%" y="517" width="0.1610%" height="15" fill="rgb(223,50,25)" fg:x="996" fg:w="2"/><text x="80.4432%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.2738%" y="501" width="0.0805%" height="15" fill="rgb(224,51,44)" fg:x="997" fg:w="1"/><text x="80.5238%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.2738%" y="485" width="0.0805%" height="15" fill="rgb(224,13,54)" fg:x="997" fg:w="1"/><text x="80.5238%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.2738%" y="469" width="0.0805%" height="15" fill="rgb(219,58,47)" fg:x="997" fg:w="1"/><text x="80.5238%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.2738%" y="453" width="0.0805%" height="15" fill="rgb(246,124,34)" fg:x="997" fg:w="1"/><text x="80.5238%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.2738%" y="437" width="0.0805%" height="15" fill="rgb(245,109,25)" fg:x="997" fg:w="1"/><text x="80.5238%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="80.3543%" y="533" width="0.0805%" height="15" fill="rgb(235,48,23)" fg:x="998" fg:w="1"/><text x="80.6043%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.4348%" y="485" width="0.1610%" height="15" fill="rgb(229,203,36)" fg:x="999" fg:w="2"/><text x="80.6848%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="80.4348%" y="469" width="0.1610%" height="15" fill="rgb(234,180,9)" fg:x="999" fg:w="2"/><text x="80.6848%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="80.4348%" y="517" width="0.2415%" height="15" fill="rgb(228,98,45)" fg:x="999" fg:w="3"/><text x="80.6848%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="80.4348%" y="501" width="0.2415%" height="15" fill="rgb(240,24,36)" fg:x="999" fg:w="3"/><text x="80.6848%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.5958%" y="485" width="0.0805%" height="15" fill="rgb(227,154,19)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.5958%" y="469" width="0.0805%" height="15" fill="rgb(231,2,48)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.5958%" y="453" width="0.0805%" height="15" fill="rgb(219,216,0)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.5958%" y="437" width="0.0805%" height="15" fill="rgb(251,88,0)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.5958%" y="421" width="0.0805%" height="15" fill="rgb(242,45,45)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.5958%" y="405" width="0.0805%" height="15" fill="rgb(218,149,45)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.5958%" y="389" width="0.0805%" height="15" fill="rgb(247,194,10)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.5958%" y="373" width="0.0805%" height="15" fill="rgb(234,33,37)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.5958%" y="357" width="0.0805%" height="15" fill="rgb(218,61,13)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.5958%" y="341" width="0.0805%" height="15" fill="rgb(210,80,52)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.5958%" y="325" width="0.0805%" height="15" fill="rgb(218,203,27)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.5958%" y="309" width="0.0805%" height="15" fill="rgb(209,126,33)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="80.3543%" y="565" width="0.4831%" height="15" fill="rgb(234,173,41)" fg:x="998" fg:w="6"/><text x="80.6043%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="80.3543%" y="549" width="0.4831%" height="15" fill="rgb(228,166,9)" fg:x="998" fg:w="6"/><text x="80.6043%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="80.4348%" y="533" width="0.4026%" height="15" fill="rgb(208,124,43)" fg:x="999" fg:w="5"/><text x="80.6848%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="80.6763%" y="517" width="0.1610%" height="15" fill="rgb(212,154,38)" fg:x="1002" fg:w="2"/><text x="80.9263%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.6763%" y="501" width="0.1610%" height="15" fill="rgb(246,179,35)" fg:x="1002" fg:w="2"/><text x="80.9263%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="80.6763%" y="485" width="0.1610%" height="15" fill="rgb(251,3,50)" fg:x="1002" fg:w="2"/><text x="80.9263%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.6763%" y="469" width="0.1610%" height="15" fill="rgb(219,96,8)" fg:x="1002" fg:w="2"/><text x="80.9263%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.7568%" y="453" width="0.0805%" height="15" fill="rgb(251,216,33)" fg:x="1003" fg:w="1"/><text x="81.0068%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.7568%" y="437" width="0.0805%" height="15" fill="rgb(243,145,29)" fg:x="1003" fg:w="1"/><text x="81.0068%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="80.8374%" y="533" width="0.0805%" height="15" fill="rgb(210,75,20)" fg:x="1004" fg:w="1"/><text x="81.0874%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.8374%" y="517" width="0.0805%" height="15" fill="rgb(235,56,8)" fg:x="1004" fg:w="1"/><text x="81.0874%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.13%)</title><rect x="79.8712%" y="581" width="1.1272%" height="15" fill="rgb(226,175,49)" fg:x="992" fg:w="14"/><text x="80.1212%" y="591.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="80.8374%" y="565" width="0.1610%" height="15" fill="rgb(242,204,23)" fg:x="1004" fg:w="2"/><text x="81.0874%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="80.8374%" y="549" width="0.1610%" height="15" fill="rgb(225,104,24)" fg:x="1004" fg:w="2"/><text x="81.0874%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9179%" y="533" width="0.0805%" height="15" fill="rgb(253,34,1)" fg:x="1005" fg:w="1"/><text x="81.1679%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.29%)</title><rect x="79.8712%" y="597" width="1.2882%" height="15" fill="rgb(233,199,23)" fg:x="992" fg:w="16"/><text x="80.1212%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.9984%" y="581" width="0.1610%" height="15" fill="rgb(247,7,51)" fg:x="1006" fg:w="2"/><text x="81.2484%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.0789%" y="565" width="0.0805%" height="15" fill="rgb(214,146,12)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="81.0789%" y="549" width="0.0805%" height="15" fill="rgb(234,181,43)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.0789%" y="533" width="0.0805%" height="15" fill="rgb(239,148,6)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.0789%" y="517" width="0.0805%" height="15" fill="rgb(206,151,17)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (128 samples, 10.31%)</title><rect x="70.9340%" y="629" width="10.3060%" height="15" fill="rgb(213,215,10)" fg:x="881" fg:w="128"/><text x="71.1840%" y="639.50">plugins_core::b..</text></g><g><title>plugins_core::build::Build::wearing (17 samples, 1.37%)</title><rect x="79.8712%" y="613" width="1.3688%" height="15" fill="rgb(215,220,44)" fg:x="992" fg:w="17"/><text x="80.1212%" y="623.50"></text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="81.1594%" y="597" width="0.0805%" height="15" fill="rgb(245,205,37)" fg:x="1008" fg:w="1"/><text x="81.4094%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.1594%" y="581" width="0.0805%" height="15" fill="rgb(245,130,43)" fg:x="1008" fg:w="1"/><text x="81.4094%" y="591.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (1 samples, 0.08%)</title><rect x="81.1594%" y="565" width="0.0805%" height="15" fill="rgb(231,227,38)" fg:x="1008" fg:w="1"/><text x="81.4094%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="81.2399%" y="629" width="0.0805%" height="15" fill="rgb(233,185,4)" fg:x="1009" fg:w="1"/><text x="81.4899%" y="639.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="81.2399%" y="613" width="0.0805%" height="15" fill="rgb(224,154,43)" fg:x="1009" fg:w="1"/><text x="81.4899%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="81.3205%" y="597" width="0.0805%" height="15" fill="rgb(235,156,15)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.3205%" y="581" width="0.0805%" height="15" fill="rgb(211,55,43)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.3205%" y="565" width="0.0805%" height="15" fill="rgb(247,149,40)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3205%" y="549" width="0.0805%" height="15" fill="rgb(232,171,16)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.3205%" y="533" width="0.0805%" height="15" fill="rgb(215,117,49)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4010%" y="533" width="0.0805%" height="15" fill="rgb(246,194,11)" fg:x="1011" fg:w="1"/><text x="81.6510%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.4010%" y="517" width="0.0805%" height="15" fill="rgb(242,101,44)" fg:x="1011" fg:w="1"/><text x="81.6510%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.4010%" y="501" width="0.0805%" height="15" fill="rgb(226,174,6)" fg:x="1011" fg:w="1"/><text x="81.6510%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.4010%" y="485" width="0.0805%" height="15" fill="rgb(213,150,20)" fg:x="1011" fg:w="1"/><text x="81.6510%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.4010%" y="469" width="0.0805%" height="15" fill="rgb(222,124,42)" fg:x="1011" fg:w="1"/><text x="81.6510%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.4010%" y="453" width="0.0805%" height="15" fill="rgb(250,19,47)" fg:x="1011" fg:w="1"/><text x="81.6510%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="81.4010%" y="437" width="0.0805%" height="15" fill="rgb(241,217,19)" fg:x="1011" fg:w="1"/><text x="81.6510%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="81.4010%" y="421" width="0.0805%" height="15" fill="rgb(207,210,34)" fg:x="1011" fg:w="1"/><text x="81.6510%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="81.4010%" y="565" width="0.2415%" height="15" fill="rgb(244,45,4)" fg:x="1011" fg:w="3"/><text x="81.6510%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.4010%" y="549" width="0.2415%" height="15" fill="rgb(252,134,50)" fg:x="1011" fg:w="3"/><text x="81.6510%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.4815%" y="533" width="0.1610%" height="15" fill="rgb(238,74,2)" fg:x="1012" fg:w="2"/><text x="81.7315%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.4815%" y="517" width="0.1610%" height="15" fill="rgb(226,58,46)" fg:x="1012" fg:w="2"/><text x="81.7315%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.4815%" y="501" width="0.1610%" height="15" fill="rgb(232,83,35)" fg:x="1012" fg:w="2"/><text x="81.7315%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.4815%" y="485" width="0.1610%" height="15" fill="rgb(212,148,47)" fg:x="1012" fg:w="2"/><text x="81.7315%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.5620%" y="469" width="0.0805%" height="15" fill="rgb(235,29,1)" fg:x="1013" fg:w="1"/><text x="81.8120%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5620%" y="453" width="0.0805%" height="15" fill="rgb(247,55,37)" fg:x="1013" fg:w="1"/><text x="81.8120%" y="463.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="81.5620%" y="437" width="0.0805%" height="15" fill="rgb(222,48,3)" fg:x="1013" fg:w="1"/><text x="81.8120%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="81.6425%" y="565" width="0.0805%" height="15" fill="rgb(234,21,33)" fg:x="1014" fg:w="1"/><text x="81.8925%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.6425%" y="549" width="0.0805%" height="15" fill="rgb(247,178,53)" fg:x="1014" fg:w="1"/><text x="81.8925%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6425%" y="533" width="0.0805%" height="15" fill="rgb(225,75,7)" fg:x="1014" fg:w="1"/><text x="81.8925%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.6425%" y="517" width="0.0805%" height="15" fill="rgb(219,199,7)" fg:x="1014" fg:w="1"/><text x="81.8925%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.7230%" y="565" width="0.0805%" height="15" fill="rgb(209,93,42)" fg:x="1015" fg:w="1"/><text x="81.9730%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="81.7230%" y="549" width="0.0805%" height="15" fill="rgb(240,175,17)" fg:x="1015" fg:w="1"/><text x="81.9730%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.7230%" y="533" width="0.0805%" height="15" fill="rgb(232,106,7)" fg:x="1015" fg:w="1"/><text x="81.9730%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.7230%" y="517" width="0.0805%" height="15" fill="rgb(242,106,43)" fg:x="1015" fg:w="1"/><text x="81.9730%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.7230%" y="501" width="0.0805%" height="15" fill="rgb(242,61,37)" fg:x="1015" fg:w="1"/><text x="81.9730%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7230%" y="485" width="0.0805%" height="15" fill="rgb(205,72,10)" fg:x="1015" fg:w="1"/><text x="81.9730%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.7230%" y="469" width="0.0805%" height="15" fill="rgb(214,184,36)" fg:x="1015" fg:w="1"/><text x="81.9730%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7230%" y="453" width="0.0805%" height="15" fill="rgb(206,107,18)" fg:x="1015" fg:w="1"/><text x="81.9730%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.7230%" y="437" width="0.0805%" height="15" fill="rgb(210,75,5)" fg:x="1015" fg:w="1"/><text x="81.9730%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7230%" y="421" width="0.0805%" height="15" fill="rgb(205,3,19)" fg:x="1015" fg:w="1"/><text x="81.9730%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="81.7230%" y="405" width="0.0805%" height="15" fill="rgb(207,181,42)" fg:x="1015" fg:w="1"/><text x="81.9730%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.7230%" y="389" width="0.0805%" height="15" fill="rgb(229,179,43)" fg:x="1015" fg:w="1"/><text x="81.9730%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="81.8035%" y="533" width="0.0805%" height="15" fill="rgb(246,95,30)" fg:x="1016" fg:w="1"/><text x="82.0535%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="81.4010%" y="581" width="0.6441%" height="15" fill="rgb(234,144,45)" fg:x="1011" fg:w="8"/><text x="81.6510%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="81.8035%" y="565" width="0.2415%" height="15" fill="rgb(250,54,25)" fg:x="1016" fg:w="3"/><text x="82.0535%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="81.8035%" y="549" width="0.2415%" height="15" fill="rgb(215,195,40)" fg:x="1016" fg:w="3"/><text x="82.0535%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.8841%" y="533" width="0.1610%" height="15" fill="rgb(233,188,42)" fg:x="1017" fg:w="2"/><text x="82.1341%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.8841%" y="517" width="0.1610%" height="15" fill="rgb(247,227,35)" fg:x="1017" fg:w="2"/><text x="82.1341%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.8841%" y="501" width="0.1610%" height="15" fill="rgb(249,124,27)" fg:x="1017" fg:w="2"/><text x="82.1341%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.8841%" y="485" width="0.1610%" height="15" fill="rgb(219,207,25)" fg:x="1017" fg:w="2"/><text x="82.1341%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.8841%" y="469" width="0.1610%" height="15" fill="rgb(241,216,47)" fg:x="1017" fg:w="2"/><text x="82.1341%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="81.8841%" y="453" width="0.1610%" height="15" fill="rgb(233,82,50)" fg:x="1017" fg:w="2"/><text x="82.1341%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="81.4010%" y="597" width="0.7246%" height="15" fill="rgb(232,63,2)" fg:x="1011" fg:w="9"/><text x="81.6510%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.0451%" y="581" width="0.0805%" height="15" fill="rgb(236,184,28)" fg:x="1019" fg:w="1"/><text x="82.2951%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.0451%" y="565" width="0.0805%" height="15" fill="rgb(254,63,27)" fg:x="1019" fg:w="1"/><text x="82.2951%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.0451%" y="549" width="0.0805%" height="15" fill="rgb(253,106,28)" fg:x="1019" fg:w="1"/><text x="82.2951%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0451%" y="533" width="0.0805%" height="15" fill="rgb(225,141,39)" fg:x="1019" fg:w="1"/><text x="82.2951%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.0451%" y="517" width="0.0805%" height="15" fill="rgb(222,157,20)" fg:x="1019" fg:w="1"/><text x="82.2951%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0451%" y="501" width="0.0805%" height="15" fill="rgb(210,190,9)" fg:x="1019" fg:w="1"/><text x="82.2951%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.0451%" y="485" width="0.0805%" height="15" fill="rgb(242,167,7)" fg:x="1019" fg:w="1"/><text x="82.2951%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0451%" y="469" width="0.0805%" height="15" fill="rgb(227,82,41)" fg:x="1019" fg:w="1"/><text x="82.2951%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.0451%" y="453" width="0.0805%" height="15" fill="rgb(222,131,13)" fg:x="1019" fg:w="1"/><text x="82.2951%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (13 samples, 1.05%)</title><rect x="81.3205%" y="629" width="1.0467%" height="15" fill="rgb(221,98,26)" fg:x="1010" fg:w="13"/><text x="81.5705%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (13 samples, 1.05%)</title><rect x="81.3205%" y="613" width="1.0467%" height="15" fill="rgb(251,63,52)" fg:x="1010" fg:w="13"/><text x="81.5705%" y="623.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="82.1256%" y="597" width="0.2415%" height="15" fill="rgb(246,25,43)" fg:x="1020" fg:w="3"/><text x="82.3756%" y="607.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="82.2061%" y="581" width="0.1610%" height="15" fill="rgb(247,167,15)" fg:x="1021" fg:w="2"/><text x="82.4561%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="82.2061%" y="565" width="0.1610%" height="15" fill="rgb(240,104,42)" fg:x="1021" fg:w="2"/><text x="82.4561%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="82.3671%" y="613" width="0.0805%" height="15" fill="rgb(224,54,6)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.3671%" y="597" width="0.0805%" height="15" fill="rgb(244,108,35)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3671%" y="581" width="0.0805%" height="15" fill="rgb(216,154,2)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3671%" y="565" width="0.0805%" height="15" fill="rgb(222,8,47)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3671%" y="549" width="0.0805%" height="15" fill="rgb(252,93,1)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.3671%" y="533" width="0.0805%" height="15" fill="rgb(223,226,51)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.3671%" y="517" width="0.0805%" height="15" fill="rgb(206,147,9)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.3671%" y="501" width="0.0805%" height="15" fill="rgb(248,180,41)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3671%" y="485" width="0.0805%" height="15" fill="rgb(209,47,50)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3671%" y="469" width="0.0805%" height="15" fill="rgb(243,65,31)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.3671%" y="453" width="0.0805%" height="15" fill="rgb(228,128,1)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.3671%" y="437" width="0.0805%" height="15" fill="rgb(231,192,16)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.3671%" y="421" width="0.0805%" height="15" fill="rgb(224,26,40)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.3671%" y="405" width="0.0805%" height="15" fill="rgb(214,192,17)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3671%" y="389" width="0.0805%" height="15" fill="rgb(225,147,18)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.4477%" y="581" width="0.0805%" height="15" fill="rgb(205,35,11)" fg:x="1024" fg:w="1"/><text x="82.6977%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.5282%" y="469" width="0.0805%" height="15" fill="rgb(242,40,42)" fg:x="1025" fg:w="1"/><text x="82.7782%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5282%" y="453" width="0.0805%" height="15" fill="rgb(250,170,13)" fg:x="1025" fg:w="1"/><text x="82.7782%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="82.5282%" y="533" width="0.1610%" height="15" fill="rgb(240,161,28)" fg:x="1025" fg:w="2"/><text x="82.7782%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="82.5282%" y="517" width="0.1610%" height="15" fill="rgb(245,179,12)" fg:x="1025" fg:w="2"/><text x="82.7782%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.5282%" y="501" width="0.1610%" height="15" fill="rgb(250,92,32)" fg:x="1025" fg:w="2"/><text x="82.7782%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.5282%" y="485" width="0.1610%" height="15" fill="rgb(233,10,40)" fg:x="1025" fg:w="2"/><text x="82.7782%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.6087%" y="469" width="0.0805%" height="15" fill="rgb(217,98,1)" fg:x="1026" fg:w="1"/><text x="82.8587%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="82.4477%" y="613" width="0.3221%" height="15" fill="rgb(238,202,7)" fg:x="1024" fg:w="4"/><text x="82.6977%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="82.4477%" y="597" width="0.3221%" height="15" fill="rgb(222,91,3)" fg:x="1024" fg:w="4"/><text x="82.6977%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="82.5282%" y="581" width="0.2415%" height="15" fill="rgb(211,170,49)" fg:x="1025" fg:w="3"/><text x="82.7782%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="82.5282%" y="565" width="0.2415%" height="15" fill="rgb(253,139,18)" fg:x="1025" fg:w="3"/><text x="82.7782%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="82.5282%" y="549" width="0.2415%" height="15" fill="rgb(222,4,43)" fg:x="1025" fg:w="3"/><text x="82.7782%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.6892%" y="533" width="0.0805%" height="15" fill="rgb(207,205,12)" fg:x="1027" fg:w="1"/><text x="82.9392%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6892%" y="517" width="0.0805%" height="15" fill="rgb(216,159,46)" fg:x="1027" fg:w="1"/><text x="82.9392%" y="527.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (211 samples, 16.99%)</title><rect x="65.8615%" y="645" width="16.9887%" height="15" fill="rgb(236,115,1)" fg:x="818" fg:w="211"/><text x="66.1115%" y="655.50">&lt;tests::HoldingKeyInVessel..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (6 samples, 0.48%)</title><rect x="82.3671%" y="629" width="0.4831%" height="15" fill="rgb(251,35,33)" fg:x="1023" fg:w="6"/><text x="82.6171%" y="639.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="82.7697%" y="613" width="0.0805%" height="15" fill="rgb(248,62,51)" fg:x="1028" fg:w="1"/><text x="83.0197%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="82.7697%" y="597" width="0.0805%" height="15" fill="rgb(254,180,19)" fg:x="1028" fg:w="1"/><text x="83.0197%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7697%" y="581" width="0.0805%" height="15" fill="rgb(217,100,32)" fg:x="1028" fg:w="1"/><text x="83.0197%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="82.8502%" y="645" width="0.0805%" height="15" fill="rgb(224,71,22)" fg:x="1029" fg:w="1"/><text x="83.1002%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="82.8502%" y="629" width="0.0805%" height="15" fill="rgb(251,185,33)" fg:x="1029" fg:w="1"/><text x="83.1002%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="82.8502%" y="613" width="0.0805%" height="15" fill="rgb(209,75,48)" fg:x="1029" fg:w="1"/><text x="83.1002%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="82.8502%" y="597" width="0.0805%" height="15" fill="rgb(253,190,16)" fg:x="1029" fg:w="1"/><text x="83.1002%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.8502%" y="581" width="0.0805%" height="15" fill="rgb(226,140,1)" fg:x="1029" fg:w="1"/><text x="83.1002%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Effect&gt; (1 samples, 0.08%)</title><rect x="82.9308%" y="645" width="0.0805%" height="15" fill="rgb(206,75,30)" fg:x="1030" fg:w="1"/><text x="83.1808%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="83.0918%" y="581" width="0.0805%" height="15" fill="rgb(231,208,37)" fg:x="1032" fg:w="1"/><text x="83.3418%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="83.1723%" y="533" width="0.2415%" height="15" fill="rgb(238,136,40)" fg:x="1033" fg:w="3"/><text x="83.4223%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.2528%" y="517" width="0.1610%" height="15" fill="rgb(247,137,17)" fg:x="1034" fg:w="2"/><text x="83.5028%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.2528%" y="501" width="0.1610%" height="15" fill="rgb(240,60,40)" fg:x="1034" fg:w="2"/><text x="83.5028%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="83.2528%" y="485" width="0.1610%" height="15" fill="rgb(236,68,50)" fg:x="1034" fg:w="2"/><text x="83.5028%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="83.1723%" y="549" width="0.3221%" height="15" fill="rgb(230,42,12)" fg:x="1033" fg:w="4"/><text x="83.4223%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.4138%" y="533" width="0.0805%" height="15" fill="rgb(219,16,16)" fg:x="1036" fg:w="1"/><text x="83.6638%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.4138%" y="517" width="0.0805%" height="15" fill="rgb(220,38,35)" fg:x="1036" fg:w="1"/><text x="83.6638%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.4138%" y="501" width="0.0805%" height="15" fill="rgb(228,33,1)" fg:x="1036" fg:w="1"/><text x="83.6638%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="83.4944%" y="533" width="0.1610%" height="15" fill="rgb(241,46,31)" fg:x="1037" fg:w="2"/><text x="83.7444%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.6554%" y="533" width="0.0805%" height="15" fill="rgb(232,58,20)" fg:x="1039" fg:w="1"/><text x="83.9054%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="83.7359%" y="533" width="0.2415%" height="15" fill="rgb(206,228,53)" fg:x="1040" fg:w="3"/><text x="83.9859%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.8164%" y="517" width="0.1610%" height="15" fill="rgb(206,88,33)" fg:x="1041" fg:w="2"/><text x="84.0664%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.8164%" y="501" width="0.1610%" height="15" fill="rgb(238,69,7)" fg:x="1041" fg:w="2"/><text x="84.0664%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="83.8164%" y="485" width="0.1610%" height="15" fill="rgb(250,21,46)" fg:x="1041" fg:w="2"/><text x="84.0664%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.8969%" y="469" width="0.0805%" height="15" fill="rgb(215,212,21)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.8969%" y="453" width="0.0805%" height="15" fill="rgb(211,35,12)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.8969%" y="437" width="0.0805%" height="15" fill="rgb(231,184,16)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.9775%" y="517" width="0.0805%" height="15" fill="rgb(242,140,15)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.9775%" y="501" width="0.0805%" height="15" fill="rgb(220,37,14)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.9775%" y="485" width="0.0805%" height="15" fill="rgb(223,146,22)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.9775%" y="469" width="0.0805%" height="15" fill="rgb(216,132,15)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.9775%" y="453" width="0.0805%" height="15" fill="rgb(248,83,5)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.9775%" y="437" width="0.0805%" height="15" fill="rgb(231,206,48)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.9775%" y="421" width="0.0805%" height="15" fill="rgb(253,185,37)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.0580%" y="501" width="0.0805%" height="15" fill="rgb(208,21,44)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.2190%" y="485" width="0.0805%" height="15" fill="rgb(236,125,4)" fg:x="1046" fg:w="1"/><text x="84.4690%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.2190%" y="469" width="0.0805%" height="15" fill="rgb(226,134,25)" fg:x="1046" fg:w="1"/><text x="84.4690%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2995%" y="485" width="0.0805%" height="15" fill="rgb(250,201,12)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.2995%" y="469" width="0.0805%" height="15" fill="rgb(225,92,18)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.2995%" y="453" width="0.0805%" height="15" fill="rgb(227,35,22)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.2995%" y="437" width="0.0805%" height="15" fill="rgb(214,180,52)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="84.1385%" y="501" width="0.3221%" height="15" fill="rgb(233,55,38)" fg:x="1045" fg:w="4"/><text x="84.3885%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.3800%" y="485" width="0.0805%" height="15" fill="rgb(249,171,43)" fg:x="1048" fg:w="1"/><text x="84.6300%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="83.9775%" y="533" width="0.7246%" height="15" fill="rgb(239,87,2)" fg:x="1043" fg:w="9"/><text x="84.2275%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="84.0580%" y="517" width="0.6441%" height="15" fill="rgb(248,141,5)" fg:x="1044" fg:w="8"/><text x="84.3080%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="84.4605%" y="501" width="0.2415%" height="15" fill="rgb(238,33,42)" fg:x="1049" fg:w="3"/><text x="84.7105%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.6216%" y="485" width="0.0805%" height="15" fill="rgb(231,57,19)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.6216%" y="469" width="0.0805%" height="15" fill="rgb(214,78,53)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (20 samples, 1.61%)</title><rect x="83.1723%" y="565" width="1.6103%" height="15" fill="rgb(206,132,29)" fg:x="1033" fg:w="20"/><text x="83.4223%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="83.4944%" y="549" width="1.2882%" height="15" fill="rgb(248,174,31)" fg:x="1037" fg:w="16"/><text x="83.7444%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.7021%" y="533" width="0.0805%" height="15" fill="rgb(221,87,13)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.7021%" y="517" width="0.0805%" height="15" fill="rgb(223,197,17)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.7021%" y="501" width="0.0805%" height="15" fill="rgb(220,144,50)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.7021%" y="485" width="0.0805%" height="15" fill="rgb(244,201,11)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.7021%" y="469" width="0.0805%" height="15" fill="rgb(249,81,34)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="84.7021%" y="453" width="0.0805%" height="15" fill="rgb(205,161,12)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.7826%" y="533" width="0.0805%" height="15" fill="rgb(252,139,50)" fg:x="1053" fg:w="1"/><text x="85.0326%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.9436%" y="517" width="0.0805%" height="15" fill="rgb(205,169,14)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.0242%" y="501" width="0.0805%" height="15" fill="rgb(248,198,33)" fg:x="1056" fg:w="1"/><text x="85.2742%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1047%" y="485" width="0.0805%" height="15" fill="rgb(236,23,21)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.1852%" y="485" width="0.0805%" height="15" fill="rgb(231,13,38)" fg:x="1058" fg:w="1"/><text x="85.4352%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.2657%" y="469" width="0.0805%" height="15" fill="rgb(239,139,21)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="84.7826%" y="565" width="0.8857%" height="15" fill="rgb(222,164,45)" fg:x="1053" fg:w="11"/><text x="85.0326%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.89%)</title><rect x="84.7826%" y="549" width="0.8857%" height="15" fill="rgb(230,52,27)" fg:x="1053" fg:w="11"/><text x="85.0326%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="84.8631%" y="533" width="0.8052%" height="15" fill="rgb(227,143,42)" fg:x="1054" fg:w="10"/><text x="85.1131%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="85.0242%" y="517" width="0.6441%" height="15" fill="rgb(249,127,1)" fg:x="1056" fg:w="8"/><text x="85.2742%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="85.1047%" y="501" width="0.5636%" height="15" fill="rgb(243,107,26)" fg:x="1057" fg:w="7"/><text x="85.3547%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="85.2657%" y="485" width="0.4026%" height="15" fill="rgb(225,7,45)" fg:x="1059" fg:w="5"/><text x="85.5157%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="85.3462%" y="469" width="0.3221%" height="15" fill="rgb(241,88,38)" fg:x="1060" fg:w="4"/><text x="85.5962%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5878%" y="453" width="0.0805%" height="15" fill="rgb(226,121,9)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.7488%" y="501" width="0.0805%" height="15" fill="rgb(253,60,29)" fg:x="1065" fg:w="1"/><text x="85.9988%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="85.8293%" y="501" width="0.1610%" height="15" fill="rgb(244,181,39)" fg:x="1066" fg:w="2"/><text x="86.0793%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="85.8293%" y="485" width="0.1610%" height="15" fill="rgb(252,203,31)" fg:x="1066" fg:w="2"/><text x="86.0793%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.9903%" y="469" width="0.0805%" height="15" fill="rgb(224,120,8)" fg:x="1068" fg:w="1"/><text x="86.2403%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="86.0709%" y="453" width="0.1610%" height="15" fill="rgb(205,171,54)" fg:x="1069" fg:w="2"/><text x="86.3209%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="85.7488%" y="533" width="0.5636%" height="15" fill="rgb(235,89,11)" fg:x="1065" fg:w="7"/><text x="85.9988%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="85.7488%" y="517" width="0.5636%" height="15" fill="rgb(212,180,28)" fg:x="1065" fg:w="7"/><text x="85.9988%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="85.9903%" y="501" width="0.3221%" height="15" fill="rgb(247,84,49)" fg:x="1068" fg:w="4"/><text x="86.2403%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="85.9903%" y="485" width="0.3221%" height="15" fill="rgb(236,187,52)" fg:x="1068" fg:w="4"/><text x="86.2403%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.0709%" y="469" width="0.2415%" height="15" fill="rgb(227,24,15)" fg:x="1069" fg:w="3"/><text x="86.3209%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.2319%" y="453" width="0.0805%" height="15" fill="rgb(227,211,13)" fg:x="1071" fg:w="1"/><text x="86.4819%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.2319%" y="437" width="0.0805%" height="15" fill="rgb(245,52,14)" fg:x="1071" fg:w="1"/><text x="86.4819%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="86.3124%" y="517" width="0.3221%" height="15" fill="rgb(225,185,13)" fg:x="1072" fg:w="4"/><text x="86.5624%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="86.3929%" y="501" width="0.2415%" height="15" fill="rgb(217,160,29)" fg:x="1073" fg:w="3"/><text x="86.6429%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="86.5539%" y="485" width="0.0805%" height="15" fill="rgb(216,115,53)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="86.5539%" y="469" width="0.0805%" height="15" fill="rgb(236,99,5)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="86.5539%" y="453" width="0.0805%" height="15" fill="rgb(222,60,38)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (12 samples, 0.97%)</title><rect x="85.7488%" y="549" width="0.9662%" height="15" fill="rgb(212,82,22)" fg:x="1065" fg:w="12"/><text x="85.9988%" y="559.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="86.3124%" y="533" width="0.4026%" height="15" fill="rgb(214,48,28)" fg:x="1072" fg:w="5"/><text x="86.5624%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="86.6345%" y="517" width="0.0805%" height="15" fill="rgb(245,196,50)" fg:x="1076" fg:w="1"/><text x="86.8845%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.6345%" y="501" width="0.0805%" height="15" fill="rgb(225,159,46)" fg:x="1076" fg:w="1"/><text x="86.8845%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6345%" y="485" width="0.0805%" height="15" fill="rgb(207,195,48)" fg:x="1076" fg:w="1"/><text x="86.8845%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.7955%" y="517" width="0.0805%" height="15" fill="rgb(240,73,3)" fg:x="1078" fg:w="1"/><text x="87.0455%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="86.8760%" y="517" width="0.1610%" height="15" fill="rgb(245,57,23)" fg:x="1079" fg:w="2"/><text x="87.1260%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9565%" y="501" width="0.0805%" height="15" fill="rgb(240,75,18)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="87.0370%" y="517" width="0.0805%" height="15" fill="rgb(238,168,12)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.0370%" y="501" width="0.0805%" height="15" fill="rgb(226,20,40)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.0370%" y="485" width="0.0805%" height="15" fill="rgb(224,130,35)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.1981%" y="485" width="0.0805%" height="15" fill="rgb(225,63,41)" fg:x="1083" fg:w="1"/><text x="87.4481%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.2786%" y="437" width="0.0805%" height="15" fill="rgb(219,3,3)" fg:x="1084" fg:w="1"/><text x="87.5286%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="87.2786%" y="469" width="0.1610%" height="15" fill="rgb(218,157,4)" fg:x="1084" fg:w="2"/><text x="87.5286%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="87.2786%" y="453" width="0.1610%" height="15" fill="rgb(232,76,36)" fg:x="1084" fg:w="2"/><text x="87.5286%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="87.3591%" y="437" width="0.0805%" height="15" fill="rgb(247,36,0)" fg:x="1085" fg:w="1"/><text x="87.6091%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="87.3591%" y="421" width="0.0805%" height="15" fill="rgb(205,2,34)" fg:x="1085" fg:w="1"/><text x="87.6091%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.4396%" y="437" width="0.1610%" height="15" fill="rgb(239,136,13)" fg:x="1086" fg:w="2"/><text x="87.6896%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.4396%" y="421" width="0.1610%" height="15" fill="rgb(253,122,12)" fg:x="1086" fg:w="2"/><text x="87.6896%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="87.4396%" y="405" width="0.1610%" height="15" fill="rgb(222,174,7)" fg:x="1086" fg:w="2"/><text x="87.6896%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="87.6006%" y="405" width="0.3221%" height="15" fill="rgb(208,191,42)" fg:x="1088" fg:w="4"/><text x="87.8506%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="87.6812%" y="389" width="0.2415%" height="15" fill="rgb(237,212,15)" fg:x="1089" fg:w="3"/><text x="87.9312%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="87.7617%" y="373" width="0.1610%" height="15" fill="rgb(215,65,20)" fg:x="1090" fg:w="2"/><text x="88.0117%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="87.6006%" y="421" width="0.4831%" height="15" fill="rgb(232,103,11)" fg:x="1088" fg:w="6"/><text x="87.8506%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="87.9227%" y="405" width="0.1610%" height="15" fill="rgb(235,148,18)" fg:x="1092" fg:w="2"/><text x="88.1727%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="87.4396%" y="453" width="0.7246%" height="15" fill="rgb(240,173,7)" fg:x="1086" fg:w="9"/><text x="87.6896%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="87.6006%" y="437" width="0.5636%" height="15" fill="rgb(228,182,25)" fg:x="1088" fg:w="7"/><text x="87.8506%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0837%" y="421" width="0.0805%" height="15" fill="rgb(247,3,52)" fg:x="1094" fg:w="1"/><text x="88.3337%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.53%)</title><rect x="86.7150%" y="549" width="1.5298%" height="15" fill="rgb(226,155,8)" fg:x="1077" fg:w="19"/><text x="86.9650%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.53%)</title><rect x="86.7150%" y="533" width="1.5298%" height="15" fill="rgb(243,195,38)" fg:x="1077" fg:w="19"/><text x="86.9650%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.13%)</title><rect x="87.1176%" y="517" width="1.1272%" height="15" fill="rgb(254,181,33)" fg:x="1082" fg:w="14"/><text x="87.3676%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.13%)</title><rect x="87.1176%" y="501" width="1.1272%" height="15" fill="rgb(232,98,23)" fg:x="1082" fg:w="14"/><text x="87.3676%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.97%)</title><rect x="87.2786%" y="485" width="0.9662%" height="15" fill="rgb(205,23,10)" fg:x="1084" fg:w="12"/><text x="87.5286%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="87.4396%" y="469" width="0.8052%" height="15" fill="rgb(212,124,38)" fg:x="1086" fg:w="10"/><text x="87.6896%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1643%" y="453" width="0.0805%" height="15" fill="rgb(228,207,2)" fg:x="1095" fg:w="1"/><text x="88.4143%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="88.4058%" y="437" width="0.1610%" height="15" fill="rgb(215,120,22)" fg:x="1098" fg:w="2"/><text x="88.6558%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.7279%" y="405" width="0.0805%" height="15" fill="rgb(251,172,33)" fg:x="1102" fg:w="1"/><text x="88.9779%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.7279%" y="389" width="0.0805%" height="15" fill="rgb(250,83,2)" fg:x="1102" fg:w="1"/><text x="88.9779%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="88.7279%" y="373" width="0.0805%" height="15" fill="rgb(210,132,53)" fg:x="1102" fg:w="1"/><text x="88.9779%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7279%" y="357" width="0.0805%" height="15" fill="rgb(221,208,36)" fg:x="1102" fg:w="1"/><text x="88.9779%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.8889%" y="357" width="0.0805%" height="15" fill="rgb(205,192,46)" fg:x="1104" fg:w="1"/><text x="89.1389%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="88.8084%" y="389" width="0.2415%" height="15" fill="rgb(223,163,14)" fg:x="1103" fg:w="3"/><text x="89.0584%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.8889%" y="373" width="0.1610%" height="15" fill="rgb(218,41,28)" fg:x="1104" fg:w="2"/><text x="89.1389%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.9694%" y="357" width="0.0805%" height="15" fill="rgb(235,104,10)" fg:x="1105" fg:w="1"/><text x="89.2194%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.9694%" y="341" width="0.0805%" height="15" fill="rgb(246,17,4)" fg:x="1105" fg:w="1"/><text x="89.2194%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.9694%" y="325" width="0.0805%" height="15" fill="rgb(240,7,16)" fg:x="1105" fg:w="1"/><text x="89.2194%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="88.8084%" y="405" width="0.3221%" height="15" fill="rgb(213,160,23)" fg:x="1103" fg:w="4"/><text x="89.0584%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0499%" y="389" width="0.0805%" height="15" fill="rgb(251,179,49)" fg:x="1106" fg:w="1"/><text x="89.2999%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0499%" y="373" width="0.0805%" height="15" fill="rgb(247,198,10)" fg:x="1106" fg:w="1"/><text x="89.2999%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.0499%" y="357" width="0.0805%" height="15" fill="rgb(220,65,29)" fg:x="1106" fg:w="1"/><text x="89.2999%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="88.5668%" y="421" width="0.6441%" height="15" fill="rgb(237,171,28)" fg:x="1100" fg:w="8"/><text x="88.8168%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="89.1304%" y="405" width="0.0805%" height="15" fill="rgb(228,44,26)" fg:x="1107" fg:w="1"/><text x="89.3804%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="88.5668%" y="437" width="0.7246%" height="15" fill="rgb(216,210,27)" fg:x="1100" fg:w="9"/><text x="88.8168%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.2110%" y="421" width="0.0805%" height="15" fill="rgb(252,10,17)" fg:x="1108" fg:w="1"/><text x="89.4610%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.2110%" y="405" width="0.0805%" height="15" fill="rgb(214,172,30)" fg:x="1108" fg:w="1"/><text x="89.4610%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.97%)</title><rect x="88.4058%" y="453" width="0.9662%" height="15" fill="rgb(253,130,48)" fg:x="1098" fg:w="12"/><text x="88.6558%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.2915%" y="437" width="0.0805%" height="15" fill="rgb(226,99,43)" fg:x="1109" fg:w="1"/><text x="89.5415%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.3720%" y="453" width="0.0805%" height="15" fill="rgb(239,111,26)" fg:x="1110" fg:w="1"/><text x="89.6220%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3720%" y="437" width="0.0805%" height="15" fill="rgb(240,27,53)" fg:x="1110" fg:w="1"/><text x="89.6220%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.29%)</title><rect x="88.3253%" y="485" width="1.2882%" height="15" fill="rgb(254,163,12)" fg:x="1097" fg:w="16"/><text x="88.5753%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.29%)</title><rect x="88.3253%" y="469" width="1.2882%" height="15" fill="rgb(225,51,48)" fg:x="1097" fg:w="16"/><text x="88.5753%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.4525%" y="453" width="0.1610%" height="15" fill="rgb(205,19,32)" fg:x="1111" fg:w="2"/><text x="89.7025%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5330%" y="437" width="0.0805%" height="15" fill="rgb(218,119,26)" fg:x="1112" fg:w="1"/><text x="89.7830%" y="447.50"></text></g><g><title>engine::session::state::State::close (83 samples, 6.68%)</title><rect x="83.0918%" y="629" width="6.6828%" height="15" fill="rgb(231,173,33)" fg:x="1032" fg:w="83"/><text x="83.3418%" y="639.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (83 samples, 6.68%)</title><rect x="83.0918%" y="613" width="6.6828%" height="15" fill="rgb(241,100,29)" fg:x="1032" fg:w="83"/><text x="83.3418%" y="623.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (83 samples, 6.68%)</title><rect x="83.0918%" y="597" width="6.6828%" height="15" fill="rgb(250,194,34)" fg:x="1032" fg:w="83"/><text x="83.3418%" y="607.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (82 samples, 6.60%)</title><rect x="83.1723%" y="581" width="6.6023%" height="15" fill="rgb(215,23,50)" fg:x="1033" fg:w="82"/><text x="83.4223%" y="591.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (51 samples, 4.11%)</title><rect x="85.6683%" y="565" width="4.1063%" height="15" fill="rgb(206,49,37)" fg:x="1064" fg:w="51"/><text x="85.9183%" y="575.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (19 samples, 1.53%)</title><rect x="88.2448%" y="549" width="1.5298%" height="15" fill="rgb(247,39,21)" fg:x="1096" fg:w="19"/><text x="88.4948%" y="559.50"></text></g><g><title>serde_json::de::from_trait (19 samples, 1.53%)</title><rect x="88.2448%" y="533" width="1.5298%" height="15" fill="rgb(209,220,15)" fg:x="1096" fg:w="19"/><text x="88.4948%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.53%)</title><rect x="88.2448%" y="517" width="1.5298%" height="15" fill="rgb(206,41,33)" fg:x="1096" fg:w="19"/><text x="88.4948%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.53%)</title><rect x="88.2448%" y="501" width="1.5298%" height="15" fill="rgb(221,225,45)" fg:x="1096" fg:w="19"/><text x="88.4948%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="89.6135%" y="485" width="0.1610%" height="15" fill="rgb(216,27,18)" fg:x="1113" fg:w="2"/><text x="89.8635%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="89.6940%" y="469" width="0.0805%" height="15" fill="rgb(250,193,34)" fg:x="1114" fg:w="1"/><text x="89.9440%" y="479.50"></text></g><g><title>engine::session::Session::close (86 samples, 6.92%)</title><rect x="83.0113%" y="645" width="6.9243%" height="15" fill="rgb(227,215,20)" fg:x="1031" fg:w="86"/><text x="83.2613%" y="655.50">engine::s..</text></g><g><title>std::time::Instant::elapsed (2 samples, 0.16%)</title><rect x="89.7746%" y="629" width="0.1610%" height="15" fill="rgb(242,211,27)" fg:x="1115" fg:w="2"/><text x="90.0246%" y="639.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.16%)</title><rect x="89.7746%" y="613" width="0.1610%" height="15" fill="rgb(229,190,30)" fg:x="1115" fg:w="2"/><text x="90.0246%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.16%)</title><rect x="89.7746%" y="597" width="0.1610%" height="15" fill="rgb(253,31,29)" fg:x="1115" fg:w="2"/><text x="90.0246%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="89.7746%" y="581" width="0.1610%" height="15" fill="rgb(229,177,52)" fg:x="1115" fg:w="2"/><text x="90.0246%" y="591.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="89.8551%" y="565" width="0.0805%" height="15" fill="rgb(226,88,8)" fg:x="1116" fg:w="1"/><text x="90.1051%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0161%" y="533" width="0.0805%" height="15" fill="rgb(214,55,27)" fg:x="1118" fg:w="1"/><text x="90.2661%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0161%" y="517" width="0.0805%" height="15" fill="rgb(233,202,5)" fg:x="1118" fg:w="1"/><text x="90.2661%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.0161%" y="501" width="0.0805%" height="15" fill="rgb(251,49,30)" fg:x="1118" fg:w="1"/><text x="90.2661%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.0161%" y="485" width="0.0805%" height="15" fill="rgb(235,18,52)" fg:x="1118" fg:w="1"/><text x="90.2661%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.0161%" y="469" width="0.0805%" height="15" fill="rgb(250,111,51)" fg:x="1118" fg:w="1"/><text x="90.2661%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.0161%" y="453" width="0.0805%" height="15" fill="rgb(218,13,25)" fg:x="1118" fg:w="1"/><text x="90.2661%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.0161%" y="437" width="0.0805%" height="15" fill="rgb(248,96,7)" fg:x="1118" fg:w="1"/><text x="90.2661%" y="447.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="90.0966%" y="517" width="0.2415%" height="15" fill="rgb(217,31,15)" fg:x="1119" fg:w="3"/><text x="90.3466%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="90.0966%" y="501" width="0.2415%" height="15" fill="rgb(228,59,49)" fg:x="1119" fg:w="3"/><text x="90.3466%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="90.0966%" y="485" width="0.2415%" height="15" fill="rgb(210,152,38)" fg:x="1119" fg:w="3"/><text x="90.3466%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="90.0966%" y="469" width="0.2415%" height="15" fill="rgb(206,71,11)" fg:x="1119" fg:w="3"/><text x="90.3466%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="90.0966%" y="453" width="0.2415%" height="15" fill="rgb(244,199,5)" fg:x="1119" fg:w="3"/><text x="90.3466%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="90.0966%" y="437" width="0.2415%" height="15" fill="rgb(253,49,1)" fg:x="1119" fg:w="3"/><text x="90.3466%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.1771%" y="421" width="0.1610%" height="15" fill="rgb(225,206,40)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.1771%" y="405" width="0.1610%" height="15" fill="rgb(243,116,47)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.1771%" y="389" width="0.1610%" height="15" fill="rgb(219,225,16)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.1771%" y="373" width="0.1610%" height="15" fill="rgb(233,29,47)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="90.1771%" y="357" width="0.1610%" height="15" fill="rgb(250,179,18)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="90.1771%" y="341" width="0.1610%" height="15" fill="rgb(215,176,6)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="90.1771%" y="325" width="0.1610%" height="15" fill="rgb(214,117,39)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="90.1771%" y="309" width="0.1610%" height="15" fill="rgb(247,183,36)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="90.1771%" y="293" width="0.1610%" height="15" fill="rgb(237,200,3)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="90.1771%" y="277" width="0.1610%" height="15" fill="rgb(212,220,24)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="90.1771%" y="261" width="0.1610%" height="15" fill="rgb(245,216,20)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="90.1771%" y="245" width="0.1610%" height="15" fill="rgb(219,124,7)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="90.1771%" y="229" width="0.1610%" height="15" fill="rgb(227,167,8)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="90.1771%" y="213" width="0.1610%" height="15" fill="rgb(241,37,2)" fg:x="1120" fg:w="2"/><text x="90.4271%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.4187%" y="373" width="0.0805%" height="15" fill="rgb(238,134,33)" fg:x="1123" fg:w="1"/><text x="90.6687%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.4187%" y="357" width="0.0805%" height="15" fill="rgb(248,48,27)" fg:x="1123" fg:w="1"/><text x="90.6687%" y="367.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="90.4187%" y="421" width="0.1610%" height="15" fill="rgb(212,14,16)" fg:x="1123" fg:w="2"/><text x="90.6687%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="90.4187%" y="405" width="0.1610%" height="15" fill="rgb(217,205,37)" fg:x="1123" fg:w="2"/><text x="90.6687%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.4187%" y="389" width="0.1610%" height="15" fill="rgb(233,185,47)" fg:x="1123" fg:w="2"/><text x="90.6687%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.4992%" y="373" width="0.0805%" height="15" fill="rgb(244,88,8)" fg:x="1124" fg:w="1"/><text x="90.7492%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.4992%" y="357" width="0.0805%" height="15" fill="rgb(213,0,20)" fg:x="1124" fg:w="1"/><text x="90.7492%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.4992%" y="341" width="0.0805%" height="15" fill="rgb(238,159,36)" fg:x="1124" fg:w="1"/><text x="90.7492%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.4992%" y="325" width="0.0805%" height="15" fill="rgb(253,173,17)" fg:x="1124" fg:w="1"/><text x="90.7492%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.4992%" y="309" width="0.0805%" height="15" fill="rgb(221,23,28)" fg:x="1124" fg:w="1"/><text x="90.7492%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.6602%" y="357" width="0.0805%" height="15" fill="rgb(218,113,15)" fg:x="1126" fg:w="1"/><text x="90.9102%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.7407%" y="341" width="0.1610%" height="15" fill="rgb(233,58,3)" fg:x="1127" fg:w="2"/><text x="90.9907%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.7407%" y="325" width="0.1610%" height="15" fill="rgb(250,46,35)" fg:x="1127" fg:w="2"/><text x="90.9907%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="90.7407%" y="309" width="0.1610%" height="15" fill="rgb(210,169,11)" fg:x="1127" fg:w="2"/><text x="90.9907%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.7407%" y="293" width="0.1610%" height="15" fill="rgb(246,88,19)" fg:x="1127" fg:w="2"/><text x="90.9907%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.7407%" y="277" width="0.1610%" height="15" fill="rgb(206,81,49)" fg:x="1127" fg:w="2"/><text x="90.9907%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.7407%" y="261" width="0.1610%" height="15" fill="rgb(232,144,18)" fg:x="1127" fg:w="2"/><text x="90.9907%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="90.8213%" y="245" width="0.0805%" height="15" fill="rgb(235,2,27)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.8213%" y="229" width="0.0805%" height="15" fill="rgb(239,157,39)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.56%)</title><rect x="90.4187%" y="469" width="0.5636%" height="15" fill="rgb(220,11,17)" fg:x="1123" fg:w="7"/><text x="90.6687%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="90.4187%" y="453" width="0.5636%" height="15" fill="rgb(243,94,50)" fg:x="1123" fg:w="7"/><text x="90.6687%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.56%)</title><rect x="90.4187%" y="437" width="0.5636%" height="15" fill="rgb(218,22,0)" fg:x="1123" fg:w="7"/><text x="90.6687%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="90.5797%" y="421" width="0.4026%" height="15" fill="rgb(249,70,21)" fg:x="1125" fg:w="5"/><text x="90.8297%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="90.6602%" y="405" width="0.3221%" height="15" fill="rgb(245,111,46)" fg:x="1126" fg:w="4"/><text x="90.9102%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="90.6602%" y="389" width="0.3221%" height="15" fill="rgb(244,183,12)" fg:x="1126" fg:w="4"/><text x="90.9102%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="90.6602%" y="373" width="0.3221%" height="15" fill="rgb(207,117,0)" fg:x="1126" fg:w="4"/><text x="90.9102%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="90.7407%" y="357" width="0.2415%" height="15" fill="rgb(206,20,43)" fg:x="1127" fg:w="3"/><text x="90.9907%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9018%" y="341" width="0.0805%" height="15" fill="rgb(221,104,11)" fg:x="1129" fg:w="1"/><text x="91.1518%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.9018%" y="325" width="0.0805%" height="15" fill="rgb(254,36,50)" fg:x="1129" fg:w="1"/><text x="91.1518%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="90.9018%" y="309" width="0.0805%" height="15" fill="rgb(252,17,15)" fg:x="1129" fg:w="1"/><text x="91.1518%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="90.9018%" y="293" width="0.0805%" height="15" fill="rgb(219,129,43)" fg:x="1129" fg:w="1"/><text x="91.1518%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="90.9018%" y="277" width="0.0805%" height="15" fill="rgb(205,34,45)" fg:x="1129" fg:w="1"/><text x="91.1518%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9018%" y="261" width="0.0805%" height="15" fill="rgb(251,201,32)" fg:x="1129" fg:w="1"/><text x="91.1518%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.9018%" y="245" width="0.0805%" height="15" fill="rgb(205,56,0)" fg:x="1129" fg:w="1"/><text x="91.1518%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="90.9823%" y="437" width="0.1610%" height="15" fill="rgb(211,193,27)" fg:x="1130" fg:w="2"/><text x="91.2323%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.9823%" y="421" width="0.1610%" height="15" fill="rgb(231,100,42)" fg:x="1130" fg:w="2"/><text x="91.2323%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="90.9823%" y="405" width="0.1610%" height="15" fill="rgb(245,85,27)" fg:x="1130" fg:w="2"/><text x="91.2323%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.9823%" y="389" width="0.1610%" height="15" fill="rgb(241,76,24)" fg:x="1130" fg:w="2"/><text x="91.2323%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="90.9823%" y="373" width="0.1610%" height="15" fill="rgb(249,157,15)" fg:x="1130" fg:w="2"/><text x="91.2323%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.0628%" y="357" width="0.0805%" height="15" fill="rgb(222,218,25)" fg:x="1131" fg:w="1"/><text x="91.3128%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1433%" y="405" width="0.0805%" height="15" fill="rgb(252,156,52)" fg:x="1132" fg:w="1"/><text x="91.3933%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1433%" y="389" width="0.0805%" height="15" fill="rgb(211,185,7)" fg:x="1132" fg:w="1"/><text x="91.3933%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1433%" y="373" width="0.0805%" height="15" fill="rgb(234,108,24)" fg:x="1132" fg:w="1"/><text x="91.3933%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1433%" y="357" width="0.0805%" height="15" fill="rgb(227,218,2)" fg:x="1132" fg:w="1"/><text x="91.3933%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.89%)</title><rect x="90.4187%" y="485" width="0.8857%" height="15" fill="rgb(224,0,36)" fg:x="1123" fg:w="11"/><text x="90.6687%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (4 samples, 0.32%)</title><rect x="90.9823%" y="469" width="0.3221%" height="15" fill="rgb(233,201,10)" fg:x="1130" fg:w="4"/><text x="91.2323%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="90.9823%" y="453" width="0.3221%" height="15" fill="rgb(252,209,14)" fg:x="1130" fg:w="4"/><text x="91.2323%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="91.1433%" y="437" width="0.1610%" height="15" fill="rgb(205,93,49)" fg:x="1132" fg:w="2"/><text x="91.3933%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="91.1433%" y="421" width="0.1610%" height="15" fill="rgb(234,116,45)" fg:x="1132" fg:w="2"/><text x="91.3933%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.2238%" y="405" width="0.0805%" height="15" fill="rgb(248,89,35)" fg:x="1133" fg:w="1"/><text x="91.4738%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2238%" y="389" width="0.0805%" height="15" fill="rgb(233,167,45)" fg:x="1133" fg:w="1"/><text x="91.4738%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="91.3043%" y="485" width="0.0805%" height="15" fill="rgb(248,228,14)" fg:x="1134" fg:w="1"/><text x="91.5543%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3043%" y="469" width="0.0805%" height="15" fill="rgb(246,91,14)" fg:x="1134" fg:w="1"/><text x="91.5543%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (18 samples, 1.45%)</title><rect x="90.0966%" y="533" width="1.4493%" height="15" fill="rgb(227,142,5)" fg:x="1119" fg:w="18"/><text x="90.3466%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.21%)</title><rect x="90.3382%" y="517" width="1.2077%" height="15" fill="rgb(221,63,33)" fg:x="1122" fg:w="15"/><text x="90.5882%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (15 samples, 1.21%)</title><rect x="90.3382%" y="501" width="1.2077%" height="15" fill="rgb(233,49,0)" fg:x="1122" fg:w="15"/><text x="90.5882%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.3849%" y="485" width="0.1610%" height="15" fill="rgb(251,115,38)" fg:x="1135" fg:w="2"/><text x="91.6349%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.3849%" y="469" width="0.1610%" height="15" fill="rgb(231,214,32)" fg:x="1135" fg:w="2"/><text x="91.6349%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.3849%" y="453" width="0.1610%" height="15" fill="rgb(248,73,46)" fg:x="1135" fg:w="2"/><text x="91.6349%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.3849%" y="437" width="0.1610%" height="15" fill="rgb(237,156,4)" fg:x="1135" fg:w="2"/><text x="91.6349%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.5459%" y="485" width="0.0805%" height="15" fill="rgb(227,132,2)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.5459%" y="469" width="0.0805%" height="15" fill="rgb(248,161,9)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.5459%" y="453" width="0.0805%" height="15" fill="rgb(238,77,38)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.5459%" y="437" width="0.0805%" height="15" fill="rgb(222,166,40)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.5459%" y="421" width="0.0805%" height="15" fill="rgb(214,168,45)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.5459%" y="405" width="0.0805%" height="15" fill="rgb(226,64,37)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.5459%" y="389" width="0.0805%" height="15" fill="rgb(232,210,43)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.5459%" y="373" width="0.0805%" height="15" fill="rgb(214,76,33)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.5459%" y="357" width="0.0805%" height="15" fill="rgb(210,78,5)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.5459%" y="341" width="0.0805%" height="15" fill="rgb(211,107,37)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.5459%" y="325" width="0.0805%" height="15" fill="rgb(249,67,16)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.5459%" y="309" width="0.0805%" height="15" fill="rgb(222,114,31)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.5459%" y="293" width="0.0805%" height="15" fill="rgb(242,118,19)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.5459%" y="277" width="0.0805%" height="15" fill="rgb(223,115,1)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.5459%" y="261" width="0.0805%" height="15" fill="rgb(241,182,54)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.5459%" y="245" width="0.0805%" height="15" fill="rgb(244,166,36)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5459%" y="229" width="0.0805%" height="15" fill="rgb(241,52,43)" fg:x="1137" fg:w="1"/><text x="91.7959%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.6264%" y="421" width="0.0805%" height="15" fill="rgb(236,82,9)" fg:x="1138" fg:w="1"/><text x="91.8764%" y="431.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (22 samples, 1.77%)</title><rect x="90.0161%" y="549" width="1.7713%" height="15" fill="rgb(241,119,0)" fg:x="1118" fg:w="22"/><text x="90.2661%" y="559.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="91.5459%" y="533" width="0.2415%" height="15" fill="rgb(221,19,22)" fg:x="1137" fg:w="3"/><text x="91.7959%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="91.5459%" y="517" width="0.2415%" height="15" fill="rgb(254,144,35)" fg:x="1137" fg:w="3"/><text x="91.7959%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="91.5459%" y="501" width="0.2415%" height="15" fill="rgb(246,132,30)" fg:x="1137" fg:w="3"/><text x="91.7959%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="91.6264%" y="485" width="0.1610%" height="15" fill="rgb(234,69,28)" fg:x="1138" fg:w="2"/><text x="91.8764%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="91.6264%" y="469" width="0.1610%" height="15" fill="rgb(219,106,47)" fg:x="1138" fg:w="2"/><text x="91.8764%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.6264%" y="453" width="0.1610%" height="15" fill="rgb(218,79,24)" fg:x="1138" fg:w="2"/><text x="91.8764%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.6264%" y="437" width="0.1610%" height="15" fill="rgb(225,26,21)" fg:x="1138" fg:w="2"/><text x="91.8764%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.7069%" y="421" width="0.0805%" height="15" fill="rgb(217,68,49)" fg:x="1139" fg:w="1"/><text x="91.9569%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7069%" y="405" width="0.0805%" height="15" fill="rgb(220,204,28)" fg:x="1139" fg:w="1"/><text x="91.9569%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.7069%" y="389" width="0.0805%" height="15" fill="rgb(237,208,43)" fg:x="1139" fg:w="1"/><text x="91.9569%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.7874%" y="341" width="0.1610%" height="15" fill="rgb(213,97,42)" fg:x="1140" fg:w="2"/><text x="92.0374%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8680%" y="325" width="0.0805%" height="15" fill="rgb(238,96,52)" fg:x="1141" fg:w="1"/><text x="92.1180%" y="335.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (1 samples, 0.08%)</title><rect x="91.9485%" y="341" width="0.0805%" height="15" fill="rgb(228,14,13)" fg:x="1142" fg:w="1"/><text x="92.1985%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.9485%" y="325" width="0.0805%" height="15" fill="rgb(219,123,13)" fg:x="1142" fg:w="1"/><text x="92.1985%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.9485%" y="309" width="0.0805%" height="15" fill="rgb(216,144,17)" fg:x="1142" fg:w="1"/><text x="92.1985%" y="319.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::AreaObservation&gt;&gt;::try_from (6 samples, 0.48%)</title><rect x="91.7874%" y="405" width="0.4831%" height="15" fill="rgb(230,228,29)" fg:x="1140" fg:w="6"/><text x="92.0374%" y="415.50"></text></g><g><title>&lt;replies::AreaObservation as replies::ToTaggedJson&gt;::to_tagged_json (6 samples, 0.48%)</title><rect x="91.7874%" y="389" width="0.4831%" height="15" fill="rgb(233,18,5)" fg:x="1140" fg:w="6"/><text x="92.0374%" y="399.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::AreaObservation&gt;::serialize (6 samples, 0.48%)</title><rect x="91.7874%" y="373" width="0.4831%" height="15" fill="rgb(233,197,12)" fg:x="1140" fg:w="6"/><text x="92.0374%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="91.7874%" y="357" width="0.4831%" height="15" fill="rgb(234,140,29)" fg:x="1140" fg:w="6"/><text x="92.0374%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="92.0290%" y="341" width="0.2415%" height="15" fill="rgb(233,113,19)" fg:x="1143" fg:w="3"/><text x="92.2790%" y="351.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (3 samples, 0.24%)</title><rect x="92.0290%" y="325" width="0.2415%" height="15" fill="rgb(246,209,13)" fg:x="1143" fg:w="3"/><text x="92.2790%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="92.0290%" y="309" width="0.2415%" height="15" fill="rgb(242,79,54)" fg:x="1143" fg:w="3"/><text x="92.2790%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="92.0290%" y="293" width="0.2415%" height="15" fill="rgb(219,73,16)" fg:x="1143" fg:w="3"/><text x="92.2790%" y="303.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="92.2705%" y="405" width="0.0805%" height="15" fill="rgb(224,52,10)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2705%" y="389" width="0.0805%" height="15" fill="rgb(237,179,5)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2705%" y="373" width="0.0805%" height="15" fill="rgb(231,20,6)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.2705%" y="357" width="0.0805%" height="15" fill="rgb(253,171,45)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.2705%" y="341" width="0.0805%" height="15" fill="rgb(230,75,49)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.2705%" y="325" width="0.0805%" height="15" fill="rgb(216,83,46)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.2705%" y="309" width="0.0805%" height="15" fill="rgb(236,56,9)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.2705%" y="293" width="0.0805%" height="15" fill="rgb(215,28,34)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.2705%" y="277" width="0.0805%" height="15" fill="rgb(230,222,20)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.2705%" y="261" width="0.0805%" height="15" fill="rgb(235,209,51)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.2705%" y="245" width="0.0805%" height="15" fill="rgb(235,167,1)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.2705%" y="229" width="0.0805%" height="15" fill="rgb(248,220,0)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5121%" y="341" width="0.0805%" height="15" fill="rgb(239,0,18)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5121%" y="325" width="0.0805%" height="15" fill="rgb(229,179,11)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5121%" y="309" width="0.0805%" height="15" fill="rgb(226,116,53)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5121%" y="293" width="0.0805%" height="15" fill="rgb(218,1,49)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5121%" y="277" width="0.0805%" height="15" fill="rgb(208,184,47)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.5121%" y="261" width="0.0805%" height="15" fill="rgb(238,174,3)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.5121%" y="245" width="0.0805%" height="15" fill="rgb(247,188,6)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.5121%" y="229" width="0.0805%" height="15" fill="rgb(211,165,46)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5121%" y="213" width="0.0805%" height="15" fill="rgb(222,190,10)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5121%" y="197" width="0.0805%" height="15" fill="rgb(206,185,3)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.5121%" y="181" width="0.0805%" height="15" fill="rgb(244,125,37)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.5121%" y="165" width="0.0805%" height="15" fill="rgb(211,43,7)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.5121%" y="149" width="0.0805%" height="15" fill="rgb(250,41,42)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.5121%" y="133" width="0.0805%" height="15" fill="rgb(254,54,42)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="143.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="92.5121%" y="117" width="0.0805%" height="15" fill="rgb(213,71,43)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.6731%" y="277" width="0.0805%" height="15" fill="rgb(249,3,44)" fg:x="1151" fg:w="1"/><text x="92.9231%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7536%" y="277" width="0.0805%" height="15" fill="rgb(229,80,41)" fg:x="1152" fg:w="1"/><text x="93.0036%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7536%" y="261" width="0.0805%" height="15" fill="rgb(231,25,28)" fg:x="1152" fg:w="1"/><text x="93.0036%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (5 samples, 0.40%)</title><rect x="92.5121%" y="373" width="0.4026%" height="15" fill="rgb(208,79,48)" fg:x="1149" fg:w="5"/><text x="92.7621%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="92.5121%" y="357" width="0.4026%" height="15" fill="rgb(207,196,38)" fg:x="1149" fg:w="5"/><text x="92.7621%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="92.5926%" y="341" width="0.3221%" height="15" fill="rgb(228,105,49)" fg:x="1150" fg:w="4"/><text x="92.8426%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="92.5926%" y="325" width="0.3221%" height="15" fill="rgb(237,99,15)" fg:x="1150" fg:w="4"/><text x="92.8426%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="92.6731%" y="309" width="0.2415%" height="15" fill="rgb(224,207,46)" fg:x="1151" fg:w="3"/><text x="92.9231%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.6731%" y="293" width="0.2415%" height="15" fill="rgb(249,117,50)" fg:x="1151" fg:w="3"/><text x="92.9231%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.8341%" y="277" width="0.0805%" height="15" fill="rgb(248,17,13)" fg:x="1153" fg:w="1"/><text x="93.0841%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8341%" y="261" width="0.0805%" height="15" fill="rgb(228,187,36)" fg:x="1153" fg:w="1"/><text x="93.0841%" y="271.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="92.9147%" y="357" width="0.0805%" height="15" fill="rgb(234,132,20)" fg:x="1154" fg:w="1"/><text x="93.1647%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="92.9952%" y="341" width="0.3221%" height="15" fill="rgb(209,170,46)" fg:x="1155" fg:w="4"/><text x="93.2452%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.1562%" y="325" width="0.1610%" height="15" fill="rgb(237,23,19)" fg:x="1157" fg:w="2"/><text x="93.4062%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.1562%" y="309" width="0.1610%" height="15" fill="rgb(227,21,26)" fg:x="1157" fg:w="2"/><text x="93.4062%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2367%" y="293" width="0.0805%" height="15" fill="rgb(222,220,48)" fg:x="1158" fg:w="1"/><text x="93.4867%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2367%" y="277" width="0.0805%" height="15" fill="rgb(214,9,16)" fg:x="1158" fg:w="1"/><text x="93.4867%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.2367%" y="261" width="0.0805%" height="15" fill="rgb(209,73,30)" fg:x="1158" fg:w="1"/><text x="93.4867%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.2367%" y="245" width="0.0805%" height="15" fill="rgb(207,20,33)" fg:x="1158" fg:w="1"/><text x="93.4867%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.2367%" y="229" width="0.0805%" height="15" fill="rgb(219,153,12)" fg:x="1158" fg:w="1"/><text x="93.4867%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.2367%" y="213" width="0.0805%" height="15" fill="rgb(235,97,25)" fg:x="1158" fg:w="1"/><text x="93.4867%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.2367%" y="197" width="0.0805%" height="15" fill="rgb(244,30,34)" fg:x="1158" fg:w="1"/><text x="93.4867%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.2367%" y="181" width="0.0805%" height="15" fill="rgb(214,106,45)" fg:x="1158" fg:w="1"/><text x="93.4867%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.2367%" y="165" width="0.0805%" height="15" fill="rgb(226,41,9)" fg:x="1158" fg:w="1"/><text x="93.4867%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.2367%" y="149" width="0.0805%" height="15" fill="rgb(253,139,29)" fg:x="1158" fg:w="1"/><text x="93.4867%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.2367%" y="133" width="0.0805%" height="15" fill="rgb(213,205,39)" fg:x="1158" fg:w="1"/><text x="93.4867%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.2367%" y="117" width="0.0805%" height="15" fill="rgb(209,27,10)" fg:x="1158" fg:w="1"/><text x="93.4867%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.3172%" y="341" width="0.0805%" height="15" fill="rgb(249,142,16)" fg:x="1159" fg:w="1"/><text x="93.5672%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.4783%" y="277" width="0.0805%" height="15" fill="rgb(242,65,12)" fg:x="1161" fg:w="1"/><text x="93.7283%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.5588%" y="277" width="0.1610%" height="15" fill="rgb(232,48,10)" fg:x="1162" fg:w="2"/><text x="93.8088%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6393%" y="261" width="0.0805%" height="15" fill="rgb(253,67,19)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (12 samples, 0.97%)</title><rect x="92.9147%" y="373" width="0.9662%" height="15" fill="rgb(227,93,29)" fg:x="1154" fg:w="12"/><text x="93.1647%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.89%)</title><rect x="92.9952%" y="357" width="0.8857%" height="15" fill="rgb(226,189,53)" fg:x="1155" fg:w="11"/><text x="93.2452%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (6 samples, 0.48%)</title><rect x="93.3977%" y="341" width="0.4831%" height="15" fill="rgb(223,224,1)" fg:x="1160" fg:w="6"/><text x="93.6477%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="93.3977%" y="325" width="0.4831%" height="15" fill="rgb(221,84,32)" fg:x="1160" fg:w="6"/><text x="93.6477%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (6 samples, 0.48%)</title><rect x="93.3977%" y="309" width="0.4831%" height="15" fill="rgb(214,189,28)" fg:x="1160" fg:w="6"/><text x="93.6477%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="93.3977%" y="293" width="0.4831%" height="15" fill="rgb(234,7,52)" fg:x="1160" fg:w="6"/><text x="93.6477%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.7198%" y="277" width="0.1610%" height="15" fill="rgb(249,73,31)" fg:x="1164" fg:w="2"/><text x="93.9698%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.7198%" y="261" width="0.1610%" height="15" fill="rgb(253,153,41)" fg:x="1164" fg:w="2"/><text x="93.9698%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.8003%" y="245" width="0.0805%" height="15" fill="rgb(249,52,34)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="255.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (18 samples, 1.45%)</title><rect x="92.5121%" y="389" width="1.4493%" height="15" fill="rgb(236,177,47)" fg:x="1149" fg:w="18"/><text x="92.7621%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.8808%" y="373" width="0.0805%" height="15" fill="rgb(252,185,45)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="93.8808%" y="357" width="0.0805%" height="15" fill="rgb(251,15,30)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="94.0419%" y="309" width="0.2415%" height="15" fill="rgb(233,31,4)" fg:x="1168" fg:w="3"/><text x="94.2919%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.1224%" y="293" width="0.1610%" height="15" fill="rgb(254,44,24)" fg:x="1169" fg:w="2"/><text x="94.3724%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.1224%" y="277" width="0.1610%" height="15" fill="rgb(218,54,1)" fg:x="1169" fg:w="2"/><text x="94.3724%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.2029%" y="261" width="0.0805%" height="15" fill="rgb(243,209,39)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.2029%" y="245" width="0.0805%" height="15" fill="rgb(206,75,33)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.2029%" y="229" width="0.0805%" height="15" fill="rgb(223,108,18)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.2029%" y="213" width="0.0805%" height="15" fill="rgb(244,89,31)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.2029%" y="197" width="0.0805%" height="15" fill="rgb(222,167,27)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.2029%" y="181" width="0.0805%" height="15" fill="rgb(247,41,16)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.2029%" y="165" width="0.0805%" height="15" fill="rgb(233,168,40)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.2029%" y="149" width="0.0805%" height="15" fill="rgb(205,211,8)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.2029%" y="133" width="0.0805%" height="15" fill="rgb(238,105,11)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.2029%" y="117" width="0.0805%" height="15" fill="rgb(223,142,52)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.2029%" y="101" width="0.0805%" height="15" fill="rgb(238,51,33)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2029%" y="85" width="0.0805%" height="15" fill="rgb(231,188,43)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2834%" y="309" width="0.0805%" height="15" fill="rgb(216,92,17)" fg:x="1171" fg:w="1"/><text x="94.5334%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.3639%" y="245" width="0.0805%" height="15" fill="rgb(228,2,40)" fg:x="1172" fg:w="1"/><text x="94.6139%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="94.0419%" y="341" width="0.5636%" height="15" fill="rgb(226,73,15)" fg:x="1168" fg:w="7"/><text x="94.2919%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="94.0419%" y="325" width="0.5636%" height="15" fill="rgb(227,66,46)" fg:x="1168" fg:w="7"/><text x="94.2919%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.3639%" y="309" width="0.2415%" height="15" fill="rgb(209,71,6)" fg:x="1172" fg:w="3"/><text x="94.6139%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.3639%" y="293" width="0.2415%" height="15" fill="rgb(246,100,25)" fg:x="1172" fg:w="3"/><text x="94.6139%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.3639%" y="277" width="0.2415%" height="15" fill="rgb(248,185,27)" fg:x="1172" fg:w="3"/><text x="94.6139%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.3639%" y="261" width="0.2415%" height="15" fill="rgb(225,118,47)" fg:x="1172" fg:w="3"/><text x="94.6139%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.4444%" y="245" width="0.1610%" height="15" fill="rgb(220,185,44)" fg:x="1173" fg:w="2"/><text x="94.6944%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.4444%" y="229" width="0.1610%" height="15" fill="rgb(227,95,24)" fg:x="1173" fg:w="2"/><text x="94.6944%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5250%" y="213" width="0.0805%" height="15" fill="rgb(252,84,24)" fg:x="1174" fg:w="1"/><text x="94.7750%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.6055%" y="309" width="0.1610%" height="15" fill="rgb(240,34,44)" fg:x="1175" fg:w="2"/><text x="94.8555%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.6055%" y="293" width="0.1610%" height="15" fill="rgb(209,72,54)" fg:x="1175" fg:w="2"/><text x="94.8555%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.6860%" y="277" width="0.0805%" height="15" fill="rgb(226,19,45)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.6860%" y="261" width="0.0805%" height="15" fill="rgb(246,7,45)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.6860%" y="245" width="0.0805%" height="15" fill="rgb(225,45,2)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.6860%" y="229" width="0.0805%" height="15" fill="rgb(221,80,29)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.6860%" y="213" width="0.0805%" height="15" fill="rgb(228,11,19)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.6860%" y="197" width="0.0805%" height="15" fill="rgb(243,17,21)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.6860%" y="181" width="0.0805%" height="15" fill="rgb(243,88,8)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.6860%" y="165" width="0.0805%" height="15" fill="rgb(214,17,9)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.6860%" y="149" width="0.0805%" height="15" fill="rgb(232,169,15)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.6860%" y="133" width="0.0805%" height="15" fill="rgb(232,86,53)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.6860%" y="117" width="0.0805%" height="15" fill="rgb(222,100,4)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.6860%" y="101" width="0.0805%" height="15" fill="rgb(253,151,38)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6860%" y="85" width="0.0805%" height="15" fill="rgb(238,215,29)" fg:x="1176" fg:w="1"/><text x="94.9360%" y="95.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.7665%" y="277" width="0.0805%" height="15" fill="rgb(205,128,53)" fg:x="1177" fg:w="1"/><text x="95.0165%" y="287.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (14 samples, 1.13%)</title><rect x="93.9614%" y="389" width="1.1272%" height="15" fill="rgb(248,183,14)" fg:x="1167" fg:w="14"/><text x="94.2114%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (14 samples, 1.13%)</title><rect x="93.9614%" y="373" width="1.1272%" height="15" fill="rgb(244,172,35)" fg:x="1167" fg:w="14"/><text x="94.2114%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (14 samples, 1.13%)</title><rect x="93.9614%" y="357" width="1.1272%" height="15" fill="rgb(234,93,19)" fg:x="1167" fg:w="14"/><text x="94.2114%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="94.6055%" y="341" width="0.4831%" height="15" fill="rgb(227,109,7)" fg:x="1175" fg:w="6"/><text x="94.8555%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="94.6055%" y="325" width="0.4831%" height="15" fill="rgb(233,136,54)" fg:x="1175" fg:w="6"/><text x="94.8555%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="94.7665%" y="309" width="0.3221%" height="15" fill="rgb(233,19,40)" fg:x="1177" fg:w="4"/><text x="95.0165%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="94.7665%" y="293" width="0.3221%" height="15" fill="rgb(247,41,18)" fg:x="1177" fg:w="4"/><text x="95.0165%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.8470%" y="277" width="0.2415%" height="15" fill="rgb(220,34,34)" fg:x="1178" fg:w="3"/><text x="95.0970%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.8470%" y="261" width="0.2415%" height="15" fill="rgb(222,135,32)" fg:x="1178" fg:w="3"/><text x="95.0970%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.9275%" y="245" width="0.1610%" height="15" fill="rgb(214,80,19)" fg:x="1179" fg:w="2"/><text x="95.1775%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.9275%" y="229" width="0.1610%" height="15" fill="rgb(234,54,46)" fg:x="1179" fg:w="2"/><text x="95.1775%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.0081%" y="213" width="0.0805%" height="15" fill="rgb(251,48,23)" fg:x="1180" fg:w="1"/><text x="95.2581%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0081%" y="197" width="0.0805%" height="15" fill="rgb(254,109,52)" fg:x="1180" fg:w="1"/><text x="95.2581%" y="207.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="95.2496%" y="357" width="0.2415%" height="15" fill="rgb(240,186,19)" fg:x="1183" fg:w="3"/><text x="95.4996%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.3301%" y="341" width="0.1610%" height="15" fill="rgb(246,187,17)" fg:x="1184" fg:w="2"/><text x="95.5801%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.3301%" y="325" width="0.1610%" height="15" fill="rgb(212,21,5)" fg:x="1184" fg:w="2"/><text x="95.5801%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.3301%" y="309" width="0.1610%" height="15" fill="rgb(225,185,18)" fg:x="1184" fg:w="2"/><text x="95.5801%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4106%" y="293" width="0.0805%" height="15" fill="rgb(245,114,17)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4106%" y="277" width="0.0805%" height="15" fill="rgb(223,164,24)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.4106%" y="261" width="0.0805%" height="15" fill="rgb(211,228,3)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.4106%" y="245" width="0.0805%" height="15" fill="rgb(223,16,38)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.4106%" y="229" width="0.0805%" height="15" fill="rgb(207,31,54)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.4106%" y="213" width="0.0805%" height="15" fill="rgb(220,39,11)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.4106%" y="197" width="0.0805%" height="15" fill="rgb(235,185,0)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5717%" y="197" width="0.0805%" height="15" fill="rgb(249,39,18)" fg:x="1187" fg:w="1"/><text x="95.8217%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5717%" y="181" width="0.0805%" height="15" fill="rgb(240,110,33)" fg:x="1187" fg:w="1"/><text x="95.8217%" y="191.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.5717%" y="165" width="0.0805%" height="15" fill="rgb(210,92,42)" fg:x="1187" fg:w="1"/><text x="95.8217%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="95.7327%" y="101" width="0.1610%" height="15" fill="rgb(218,215,28)" fg:x="1189" fg:w="2"/><text x="95.9827%" y="111.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.7327%" y="85" width="0.1610%" height="15" fill="rgb(238,215,36)" fg:x="1189" fg:w="2"/><text x="95.9827%" y="95.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.8937%" y="101" width="0.1610%" height="15" fill="rgb(220,31,10)" fg:x="1191" fg:w="2"/><text x="96.1437%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.8937%" y="85" width="0.1610%" height="15" fill="rgb(212,93,14)" fg:x="1191" fg:w="2"/><text x="96.1437%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9742%" y="69" width="0.0805%" height="15" fill="rgb(254,207,2)" fg:x="1192" fg:w="1"/><text x="96.2242%" y="79.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="95.5717%" y="245" width="0.5636%" height="15" fill="rgb(205,57,44)" fg:x="1187" fg:w="7"/><text x="95.8217%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="95.5717%" y="229" width="0.5636%" height="15" fill="rgb(226,151,19)" fg:x="1187" fg:w="7"/><text x="95.8217%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="95.5717%" y="213" width="0.5636%" height="15" fill="rgb(230,72,30)" fg:x="1187" fg:w="7"/><text x="95.8217%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="95.6522%" y="197" width="0.4831%" height="15" fill="rgb(244,0,8)" fg:x="1188" fg:w="6"/><text x="95.9022%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="95.6522%" y="181" width="0.4831%" height="15" fill="rgb(230,192,6)" fg:x="1188" fg:w="6"/><text x="95.9022%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="95.7327%" y="165" width="0.4026%" height="15" fill="rgb(233,207,13)" fg:x="1189" fg:w="5"/><text x="95.9827%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.7327%" y="149" width="0.4026%" height="15" fill="rgb(206,227,7)" fg:x="1189" fg:w="5"/><text x="95.9827%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="95.7327%" y="133" width="0.4026%" height="15" fill="rgb(213,217,25)" fg:x="1189" fg:w="5"/><text x="95.9827%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.7327%" y="117" width="0.4026%" height="15" fill="rgb(249,75,4)" fg:x="1189" fg:w="5"/><text x="95.9827%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.0548%" y="101" width="0.0805%" height="15" fill="rgb(225,114,18)" fg:x="1193" fg:w="1"/><text x="96.3048%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.0548%" y="85" width="0.0805%" height="15" fill="rgb(211,162,40)" fg:x="1193" fg:w="1"/><text x="96.3048%" y="95.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.0548%" y="69" width="0.0805%" height="15" fill="rgb(206,49,29)" fg:x="1193" fg:w="1"/><text x="96.3048%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0548%" y="53" width="0.0805%" height="15" fill="rgb(244,8,6)" fg:x="1193" fg:w="1"/><text x="96.3048%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.2963%" y="133" width="0.1610%" height="15" fill="rgb(231,194,28)" fg:x="1196" fg:w="2"/><text x="96.5463%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.2963%" y="117" width="0.1610%" height="15" fill="rgb(210,69,5)" fg:x="1196" fg:w="2"/><text x="96.5463%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.3768%" y="101" width="0.0805%" height="15" fill="rgb(216,186,12)" fg:x="1197" fg:w="1"/><text x="96.6268%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.3768%" y="85" width="0.0805%" height="15" fill="rgb(238,61,15)" fg:x="1197" fg:w="1"/><text x="96.6268%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.2158%" y="165" width="0.3221%" height="15" fill="rgb(226,104,1)" fg:x="1195" fg:w="4"/><text x="96.4658%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.2963%" y="149" width="0.2415%" height="15" fill="rgb(229,128,15)" fg:x="1196" fg:w="3"/><text x="96.5463%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4573%" y="133" width="0.0805%" height="15" fill="rgb(247,110,15)" fg:x="1198" fg:w="1"/><text x="96.7073%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.5378%" y="53" width="0.0805%" height="15" fill="rgb(210,74,48)" fg:x="1199" fg:w="1"/><text x="96.7878%" y="63.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.5378%" y="37" width="0.0805%" height="15" fill="rgb(246,121,10)" fg:x="1199" fg:w="1"/><text x="96.7878%" y="47.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="96.2158%" y="213" width="0.4831%" height="15" fill="rgb(214,156,37)" fg:x="1195" fg:w="6"/><text x="96.4658%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="96.2158%" y="197" width="0.4831%" height="15" fill="rgb(214,210,34)" fg:x="1195" fg:w="6"/><text x="96.4658%" y="207.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="96.2158%" y="181" width="0.4831%" height="15" fill="rgb(237,93,35)" fg:x="1195" fg:w="6"/><text x="96.4658%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.5378%" y="165" width="0.1610%" height="15" fill="rgb(206,36,8)" fg:x="1199" fg:w="2"/><text x="96.7878%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.5378%" y="149" width="0.1610%" height="15" fill="rgb(208,151,12)" fg:x="1199" fg:w="2"/><text x="96.7878%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="96.5378%" y="133" width="0.1610%" height="15" fill="rgb(225,133,52)" fg:x="1199" fg:w="2"/><text x="96.7878%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.5378%" y="117" width="0.1610%" height="15" fill="rgb(231,71,53)" fg:x="1199" fg:w="2"/><text x="96.7878%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.5378%" y="101" width="0.1610%" height="15" fill="rgb(243,76,21)" fg:x="1199" fg:w="2"/><text x="96.7878%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="96.5378%" y="85" width="0.1610%" height="15" fill="rgb(252,144,3)" fg:x="1199" fg:w="2"/><text x="96.7878%" y="95.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.5378%" y="69" width="0.1610%" height="15" fill="rgb(231,199,10)" fg:x="1199" fg:w="2"/><text x="96.7878%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6184%" y="53" width="0.0805%" height="15" fill="rgb(215,18,11)" fg:x="1200" fg:w="1"/><text x="96.8684%" y="63.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.6184%" y="37" width="0.0805%" height="15" fill="rgb(241,65,24)" fg:x="1200" fg:w="1"/><text x="96.8684%" y="47.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.29%)</title><rect x="95.4911%" y="293" width="1.2882%" height="15" fill="rgb(251,192,38)" fg:x="1186" fg:w="16"/><text x="95.7411%" y="303.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (15 samples, 1.21%)</title><rect x="95.5717%" y="277" width="1.2077%" height="15" fill="rgb(205,9,35)" fg:x="1187" fg:w="15"/><text x="95.8217%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (15 samples, 1.21%)</title><rect x="95.5717%" y="261" width="1.2077%" height="15" fill="rgb(229,225,49)" fg:x="1187" fg:w="15"/><text x="95.8217%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="96.1353%" y="245" width="0.6441%" height="15" fill="rgb(207,125,39)" fg:x="1194" fg:w="8"/><text x="96.3853%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="96.1353%" y="229" width="0.6441%" height="15" fill="rgb(222,78,19)" fg:x="1194" fg:w="8"/><text x="96.3853%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6989%" y="213" width="0.0805%" height="15" fill="rgb(248,207,20)" fg:x="1201" fg:w="1"/><text x="96.9489%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6989%" y="197" width="0.0805%" height="15" fill="rgb(205,103,49)" fg:x="1201" fg:w="1"/><text x="96.9489%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.6989%" y="181" width="0.0805%" height="15" fill="rgb(216,42,28)" fg:x="1201" fg:w="1"/><text x="96.9489%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9404%" y="229" width="0.0805%" height="15" fill="rgb(213,205,53)" fg:x="1204" fg:w="1"/><text x="97.1904%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9404%" y="213" width="0.0805%" height="15" fill="rgb(239,140,53)" fg:x="1204" fg:w="1"/><text x="97.1904%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="96.7794%" y="261" width="0.3221%" height="15" fill="rgb(248,95,9)" fg:x="1202" fg:w="4"/><text x="97.0294%" y="271.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="96.7794%" y="245" width="0.3221%" height="15" fill="rgb(254,58,47)" fg:x="1202" fg:w="4"/><text x="97.0294%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.0209%" y="229" width="0.0805%" height="15" fill="rgb(234,227,14)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0209%" y="213" width="0.0805%" height="15" fill="rgb(205,192,45)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.1014%" y="229" width="0.1610%" height="15" fill="rgb(253,187,31)" fg:x="1206" fg:w="2"/><text x="97.3514%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.1014%" y="213" width="0.1610%" height="15" fill="rgb(222,6,32)" fg:x="1206" fg:w="2"/><text x="97.3514%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.1014%" y="197" width="0.1610%" height="15" fill="rgb(249,190,19)" fg:x="1206" fg:w="2"/><text x="97.3514%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="97.2625%" y="229" width="0.0805%" height="15" fill="rgb(251,28,20)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.2625%" y="213" width="0.0805%" height="15" fill="rgb(210,223,40)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.2625%" y="197" width="0.0805%" height="15" fill="rgb(216,137,22)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.2625%" y="181" width="0.0805%" height="15" fill="rgb(247,39,34)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.2625%" y="165" width="0.0805%" height="15" fill="rgb(239,43,50)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (24 samples, 1.93%)</title><rect x="95.4911%" y="309" width="1.9324%" height="15" fill="rgb(241,212,9)" fg:x="1186" fg:w="24"/><text x="95.7411%" y="319.50">&lt;..</text></g><g><title>kernel::model::entity::Entity::entity_ref (8 samples, 0.64%)</title><rect x="96.7794%" y="293" width="0.6441%" height="15" fill="rgb(205,8,2)" fg:x="1202" fg:w="8"/><text x="97.0294%" y="303.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="96.7794%" y="277" width="0.6441%" height="15" fill="rgb(217,173,54)" fg:x="1202" fg:w="8"/><text x="97.0294%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="97.1014%" y="261" width="0.3221%" height="15" fill="rgb(208,149,52)" fg:x="1206" fg:w="4"/><text x="97.3514%" y="271.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="97.1014%" y="245" width="0.3221%" height="15" fill="rgb(239,99,40)" fg:x="1206" fg:w="4"/><text x="97.3514%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.3430%" y="229" width="0.0805%" height="15" fill="rgb(233,214,26)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3430%" y="213" width="0.0805%" height="15" fill="rgb(231,225,37)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.3430%" y="197" width="0.0805%" height="15" fill="rgb(252,55,35)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="207.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (25 samples, 2.01%)</title><rect x="95.4911%" y="357" width="2.0129%" height="15" fill="rgb(239,43,18)" fg:x="1186" fg:w="25"/><text x="95.7411%" y="367.50">&lt;..</text></g><g><title>core::iter::adapters::try_process (25 samples, 2.01%)</title><rect x="95.4911%" y="341" width="2.0129%" height="15" fill="rgb(251,125,49)" fg:x="1186" fg:w="25"/><text x="95.7411%" y="351.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 2.01%)</title><rect x="95.4911%" y="325" width="2.0129%" height="15" fill="rgb(212,83,54)" fg:x="1186" fg:w="25"/><text x="95.7411%" y="335.50">&lt;..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.4235%" y="309" width="0.0805%" height="15" fill="rgb(250,75,6)" fg:x="1210" fg:w="1"/><text x="97.6735%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="97.5040%" y="245" width="0.0805%" height="15" fill="rgb(252,36,40)" fg:x="1211" fg:w="1"/><text x="97.7540%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.5040%" y="261" width="0.1610%" height="15" fill="rgb(230,91,51)" fg:x="1211" fg:w="2"/><text x="97.7540%" y="271.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.5845%" y="245" width="0.0805%" height="15" fill="rgb(212,92,28)" fg:x="1212" fg:w="1"/><text x="97.8345%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5845%" y="229" width="0.0805%" height="15" fill="rgb(227,13,22)" fg:x="1212" fg:w="1"/><text x="97.8345%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5845%" y="213" width="0.0805%" height="15" fill="rgb(239,204,32)" fg:x="1212" fg:w="1"/><text x="97.8345%" y="223.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="97.5040%" y="357" width="0.2415%" height="15" fill="rgb(228,49,41)" fg:x="1211" fg:w="3"/><text x="97.7540%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="97.5040%" y="341" width="0.2415%" height="15" fill="rgb(206,95,6)" fg:x="1211" fg:w="3"/><text x="97.7540%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="97.5040%" y="325" width="0.2415%" height="15" fill="rgb(251,20,14)" fg:x="1211" fg:w="3"/><text x="97.7540%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="97.5040%" y="309" width="0.2415%" height="15" fill="rgb(214,99,28)" fg:x="1211" fg:w="3"/><text x="97.7540%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (3 samples, 0.24%)</title><rect x="97.5040%" y="293" width="0.2415%" height="15" fill="rgb(239,122,54)" fg:x="1211" fg:w="3"/><text x="97.7540%" y="303.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="97.5040%" y="277" width="0.2415%" height="15" fill="rgb(218,217,46)" fg:x="1211" fg:w="3"/><text x="97.7540%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.6651%" y="261" width="0.0805%" height="15" fill="rgb(249,106,28)" fg:x="1213" fg:w="1"/><text x="97.9151%" y="271.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.6651%" y="245" width="0.0805%" height="15" fill="rgb(250,158,18)" fg:x="1213" fg:w="1"/><text x="97.9151%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.7456%" y="357" width="0.0805%" height="15" fill="rgb(226,137,29)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.8261%" y="325" width="0.0805%" height="15" fill="rgb(210,188,1)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (99 samples, 7.97%)</title><rect x="90.0161%" y="613" width="7.9710%" height="15" fill="rgb(227,84,42)" fg:x="1118" fg:w="99"/><text x="90.2661%" y="623.50">&lt;engine::se..</text></g><g><title>kernel::plugins::mw::apply_middleware (99 samples, 7.97%)</title><rect x="90.0161%" y="597" width="7.9710%" height="15" fill="rgb(222,147,48)" fg:x="1118" fg:w="99"/><text x="90.2661%" y="607.50">kernel::plu..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (99 samples, 7.97%)</title><rect x="90.0161%" y="581" width="7.9710%" height="15" fill="rgb(241,150,43)" fg:x="1118" fg:w="99"/><text x="90.2661%" y="591.50">kernel::plu..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (99 samples, 7.97%)</title><rect x="90.0161%" y="565" width="7.9710%" height="15" fill="rgb(206,139,52)" fg:x="1118" fg:w="99"/><text x="90.2661%" y="575.50">&lt;engine::se..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (77 samples, 6.20%)</title><rect x="91.7874%" y="549" width="6.1997%" height="15" fill="rgb(230,63,14)" fg:x="1140" fg:w="77"/><text x="92.0374%" y="559.50">kernel::..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (77 samples, 6.20%)</title><rect x="91.7874%" y="533" width="6.1997%" height="15" fill="rgb(247,8,20)" fg:x="1140" fg:w="77"/><text x="92.0374%" y="543.50">&lt;plugins..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (77 samples, 6.20%)</title><rect x="91.7874%" y="517" width="6.1997%" height="15" fill="rgb(213,115,4)" fg:x="1140" fg:w="77"/><text x="92.0374%" y="527.50">kernel::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (77 samples, 6.20%)</title><rect x="91.7874%" y="501" width="6.1997%" height="15" fill="rgb(241,79,49)" fg:x="1140" fg:w="77"/><text x="92.0374%" y="511.50">core::op..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (77 samples, 6.20%)</title><rect x="91.7874%" y="485" width="6.1997%" height="15" fill="rgb(222,42,35)" fg:x="1140" fg:w="77"/><text x="92.0374%" y="495.50">kernel::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (77 samples, 6.20%)</title><rect x="91.7874%" y="469" width="6.1997%" height="15" fill="rgb(247,59,23)" fg:x="1140" fg:w="77"/><text x="92.0374%" y="479.50">core::op..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (77 samples, 6.20%)</title><rect x="91.7874%" y="453" width="6.1997%" height="15" fill="rgb(247,93,18)" fg:x="1140" fg:w="77"/><text x="92.0374%" y="463.50">&lt;alloc::..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (77 samples, 6.20%)</title><rect x="91.7874%" y="437" width="6.1997%" height="15" fill="rgb(249,107,47)" fg:x="1140" fg:w="77"/><text x="92.0374%" y="447.50">&lt;engine:..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (77 samples, 6.20%)</title><rect x="91.7874%" y="421" width="6.1997%" height="15" fill="rgb(219,27,1)" fg:x="1140" fg:w="77"/><text x="92.0374%" y="431.50">&lt;plugins..</text></g><g><title>plugins_core::looking::model::new_area_observation (70 samples, 5.64%)</title><rect x="92.3510%" y="405" width="5.6361%" height="15" fill="rgb(217,82,32)" fg:x="1147" fg:w="70"/><text x="92.6010%" y="415.50">plugins..</text></g><g><title>kernel::model::entry::Entry::scope (36 samples, 2.90%)</title><rect x="95.0886%" y="389" width="2.8986%" height="15" fill="rgb(250,129,47)" fg:x="1181" fg:w="36"/><text x="95.3386%" y="399.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (36 samples, 2.90%)</title><rect x="95.0886%" y="373" width="2.8986%" height="15" fill="rgb(253,88,35)" fg:x="1181" fg:w="36"/><text x="95.3386%" y="383.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.8261%" y="357" width="0.1610%" height="15" fill="rgb(245,221,14)" fg:x="1215" fg:w="2"/><text x="98.0761%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.8261%" y="341" width="0.1610%" height="15" fill="rgb(217,119,54)" fg:x="1215" fg:w="2"/><text x="98.0761%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.9066%" y="325" width="0.0805%" height="15" fill="rgb(247,128,31)" fg:x="1216" fg:w="1"/><text x="98.1566%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9871%" y="453" width="0.0805%" height="15" fill="rgb(211,99,22)" fg:x="1217" fg:w="1"/><text x="98.2371%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9871%" y="437" width="0.0805%" height="15" fill="rgb(212,20,17)" fg:x="1217" fg:w="1"/><text x="98.2371%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9871%" y="421" width="0.0805%" height="15" fill="rgb(209,159,29)" fg:x="1217" fg:w="1"/><text x="98.2371%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.0676%" y="405" width="0.0805%" height="15" fill="rgb(222,177,53)" fg:x="1218" fg:w="1"/><text x="98.3176%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.0676%" y="389" width="0.0805%" height="15" fill="rgb(234,46,43)" fg:x="1218" fg:w="1"/><text x="98.3176%" y="399.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="97.9871%" y="565" width="0.2415%" height="15" fill="rgb(208,108,14)" fg:x="1217" fg:w="3"/><text x="98.2371%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.9871%" y="549" width="0.2415%" height="15" fill="rgb(226,78,53)" fg:x="1217" fg:w="3"/><text x="98.2371%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.9871%" y="533" width="0.2415%" height="15" fill="rgb(230,20,41)" fg:x="1217" fg:w="3"/><text x="98.2371%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.9871%" y="517" width="0.2415%" height="15" fill="rgb(213,195,35)" fg:x="1217" fg:w="3"/><text x="98.2371%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.9871%" y="501" width="0.2415%" height="15" fill="rgb(242,62,36)" fg:x="1217" fg:w="3"/><text x="98.2371%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.9871%" y="485" width="0.2415%" height="15" fill="rgb(222,210,37)" fg:x="1217" fg:w="3"/><text x="98.2371%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.9871%" y="469" width="0.2415%" height="15" fill="rgb(232,107,19)" fg:x="1217" fg:w="3"/><text x="98.2371%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.0676%" y="453" width="0.1610%" height="15" fill="rgb(235,85,17)" fg:x="1218" fg:w="2"/><text x="98.3176%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.0676%" y="437" width="0.1610%" height="15" fill="rgb(219,195,31)" fg:x="1218" fg:w="2"/><text x="98.3176%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.0676%" y="421" width="0.1610%" height="15" fill="rgb(231,183,30)" fg:x="1218" fg:w="2"/><text x="98.3176%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.1481%" y="405" width="0.0805%" height="15" fill="rgb(212,0,11)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.32%)</title><rect x="97.9871%" y="613" width="0.3221%" height="15" fill="rgb(249,53,54)" fg:x="1217" fg:w="4"/><text x="98.2371%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="97.9871%" y="597" width="0.3221%" height="15" fill="rgb(211,118,13)" fg:x="1217" fg:w="4"/><text x="98.2371%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.32%)</title><rect x="97.9871%" y="581" width="0.3221%" height="15" fill="rgb(237,42,9)" fg:x="1217" fg:w="4"/><text x="98.2371%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.2287%" y="565" width="0.0805%" height="15" fill="rgb(227,68,32)" fg:x="1220" fg:w="1"/><text x="98.4787%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2287%" y="549" width="0.0805%" height="15" fill="rgb(238,10,7)" fg:x="1220" fg:w="1"/><text x="98.4787%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.2287%" y="533" width="0.0805%" height="15" fill="rgb(224,42,12)" fg:x="1220" fg:w="1"/><text x="98.4787%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2287%" y="517" width="0.0805%" height="15" fill="rgb(252,190,5)" fg:x="1220" fg:w="1"/><text x="98.4787%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2287%" y="501" width="0.0805%" height="15" fill="rgb(220,214,39)" fg:x="1220" fg:w="1"/><text x="98.4787%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2287%" y="485" width="0.0805%" height="15" fill="rgb(247,98,4)" fg:x="1220" fg:w="1"/><text x="98.4787%" y="495.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="98.3092%" y="613" width="0.0805%" height="15" fill="rgb(211,60,12)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="98.3092%" y="597" width="0.0805%" height="15" fill="rgb(224,42,10)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="607.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="98.3092%" y="581" width="0.0805%" height="15" fill="rgb(217,167,4)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="591.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="98.3092%" y="565" width="0.0805%" height="15" fill="rgb(253,18,17)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="98.3897%" y="613" width="0.0805%" height="15" fill="rgb(249,186,44)" fg:x="1222" fg:w="1"/><text x="98.6397%" y="623.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="98.4702%" y="613" width="0.1610%" height="15" fill="rgb(254,124,54)" fg:x="1223" fg:w="2"/><text x="98.7202%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="98.4702%" y="597" width="0.1610%" height="15" fill="rgb(220,124,39)" fg:x="1223" fg:w="2"/><text x="98.7202%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.4702%" y="581" width="0.1610%" height="15" fill="rgb(225,96,46)" fg:x="1223" fg:w="2"/><text x="98.7202%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.4702%" y="565" width="0.1610%" height="15" fill="rgb(221,106,12)" fg:x="1223" fg:w="2"/><text x="98.7202%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.4702%" y="549" width="0.1610%" height="15" fill="rgb(227,133,23)" fg:x="1223" fg:w="2"/><text x="98.7202%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="98.7118%" y="565" width="0.0805%" height="15" fill="rgb(216,44,52)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.7118%" y="549" width="0.0805%" height="15" fill="rgb(239,149,7)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.7118%" y="533" width="0.0805%" height="15" fill="rgb(211,157,31)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.7118%" y="517" width="0.0805%" height="15" fill="rgb(206,215,22)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7118%" y="501" width="0.0805%" height="15" fill="rgb(208,113,15)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="98.6312%" y="613" width="0.2415%" height="15" fill="rgb(207,189,15)" fg:x="1225" fg:w="3"/><text x="98.8812%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="98.6312%" y="597" width="0.2415%" height="15" fill="rgb(231,115,4)" fg:x="1225" fg:w="3"/><text x="98.8812%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="98.6312%" y="581" width="0.2415%" height="15" fill="rgb(253,117,2)" fg:x="1225" fg:w="3"/><text x="98.8812%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.7923%" y="565" width="0.0805%" height="15" fill="rgb(248,48,24)" fg:x="1227" fg:w="1"/><text x="99.0423%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7923%" y="549" width="0.0805%" height="15" fill="rgb(241,28,46)" fg:x="1227" fg:w="1"/><text x="99.0423%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.7923%" y="533" width="0.0805%" height="15" fill="rgb(216,165,52)" fg:x="1227" fg:w="1"/><text x="99.0423%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7923%" y="517" width="0.0805%" height="15" fill="rgb(220,222,34)" fg:x="1227" fg:w="1"/><text x="99.0423%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.7923%" y="501" width="0.0805%" height="15" fill="rgb(247,222,49)" fg:x="1227" fg:w="1"/><text x="99.0423%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7923%" y="485" width="0.0805%" height="15" fill="rgb(240,10,31)" fg:x="1227" fg:w="1"/><text x="99.0423%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.9533%" y="501" width="0.0805%" height="15" fill="rgb(221,199,35)" fg:x="1229" fg:w="1"/><text x="99.2033%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0338%" y="469" width="0.0805%" height="15" fill="rgb(230,223,11)" fg:x="1230" fg:w="1"/><text x="99.2838%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0338%" y="453" width="0.0805%" height="15" fill="rgb(218,82,45)" fg:x="1230" fg:w="1"/><text x="99.2838%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0338%" y="437" width="0.0805%" height="15" fill="rgb(233,213,33)" fg:x="1230" fg:w="1"/><text x="99.2838%" y="447.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="98.8728%" y="549" width="0.3221%" height="15" fill="rgb(210,143,52)" fg:x="1228" fg:w="4"/><text x="99.1228%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.8728%" y="533" width="0.3221%" height="15" fill="rgb(206,95,4)" fg:x="1228" fg:w="4"/><text x="99.1228%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.8728%" y="517" width="0.3221%" height="15" fill="rgb(246,164,46)" fg:x="1228" fg:w="4"/><text x="99.1228%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.0338%" y="501" width="0.1610%" height="15" fill="rgb(213,210,47)" fg:x="1230" fg:w="2"/><text x="99.2838%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.0338%" y="485" width="0.1610%" height="15" fill="rgb(210,12,38)" fg:x="1230" fg:w="2"/><text x="99.2838%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1143%" y="469" width="0.0805%" height="15" fill="rgb(252,192,54)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1143%" y="453" width="0.0805%" height="15" fill="rgb(242,92,6)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1143%" y="437" width="0.0805%" height="15" fill="rgb(253,154,15)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1143%" y="421" width="0.0805%" height="15" fill="rgb(209,20,43)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1143%" y="405" width="0.0805%" height="15" fill="rgb(232,28,49)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1143%" y="389" width="0.0805%" height="15" fill="rgb(248,131,53)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1143%" y="373" width="0.0805%" height="15" fill="rgb(214,16,30)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1143%" y="357" width="0.0805%" height="15" fill="rgb(245,16,0)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1143%" y="341" width="0.0805%" height="15" fill="rgb(245,17,35)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="98.8728%" y="565" width="0.4831%" height="15" fill="rgb(249,27,53)" fg:x="1228" fg:w="6"/><text x="99.1228%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.1948%" y="549" width="0.1610%" height="15" fill="rgb(214,73,24)" fg:x="1232" fg:w="2"/><text x="99.4448%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1948%" y="533" width="0.1610%" height="15" fill="rgb(223,84,37)" fg:x="1232" fg:w="2"/><text x="99.4448%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.2754%" y="517" width="0.0805%" height="15" fill="rgb(210,109,28)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2754%" y="501" width="0.0805%" height="15" fill="rgb(208,186,6)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="511.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2754%" y="485" width="0.0805%" height="15" fill="rgb(235,201,30)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2754%" y="469" width="0.0805%" height="15" fill="rgb(216,198,48)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2754%" y="453" width="0.0805%" height="15" fill="rgb(254,186,25)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2754%" y="437" width="0.0805%" height="15" fill="rgb(227,87,5)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2754%" y="421" width="0.0805%" height="15" fill="rgb(236,205,25)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2754%" y="405" width="0.0805%" height="15" fill="rgb(229,99,32)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2754%" y="389" width="0.0805%" height="15" fill="rgb(231,177,31)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.2754%" y="373" width="0.0805%" height="15" fill="rgb(246,15,2)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.3559%" y="565" width="0.0805%" height="15" fill="rgb(207,39,15)" fg:x="1234" fg:w="1"/><text x="99.6059%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.3559%" y="549" width="0.0805%" height="15" fill="rgb(207,44,9)" fg:x="1234" fg:w="1"/><text x="99.6059%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3559%" y="533" width="0.0805%" height="15" fill="rgb(225,224,33)" fg:x="1234" fg:w="1"/><text x="99.6059%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3559%" y="517" width="0.0805%" height="15" fill="rgb(252,151,3)" fg:x="1234" fg:w="1"/><text x="99.6059%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3559%" y="501" width="0.0805%" height="15" fill="rgb(211,140,13)" fg:x="1234" fg:w="1"/><text x="99.6059%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3559%" y="485" width="0.0805%" height="15" fill="rgb(239,225,17)" fg:x="1234" fg:w="1"/><text x="99.6059%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.64%)</title><rect x="98.8728%" y="597" width="0.6441%" height="15" fill="rgb(223,170,52)" fg:x="1228" fg:w="8"/><text x="99.1228%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="98.8728%" y="581" width="0.6441%" height="15" fill="rgb(212,64,21)" fg:x="1228" fg:w="8"/><text x="99.1228%" y="591.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.4364%" y="565" width="0.0805%" height="15" fill="rgb(236,126,48)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4364%" y="549" width="0.0805%" height="15" fill="rgb(209,135,11)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.4364%" y="533" width="0.0805%" height="15" fill="rgb(228,126,40)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5169%" y="517" width="0.0805%" height="15" fill="rgb(205,196,36)" fg:x="1236" fg:w="1"/><text x="99.7669%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.5169%" y="581" width="0.1610%" height="15" fill="rgb(243,160,33)" fg:x="1236" fg:w="2"/><text x="99.7669%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.5169%" y="565" width="0.1610%" height="15" fill="rgb(210,84,20)" fg:x="1236" fg:w="2"/><text x="99.7669%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.5169%" y="549" width="0.1610%" height="15" fill="rgb(228,213,30)" fg:x="1236" fg:w="2"/><text x="99.7669%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.5169%" y="533" width="0.1610%" height="15" fill="rgb(252,33,45)" fg:x="1236" fg:w="2"/><text x="99.7669%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.5974%" y="517" width="0.0805%" height="15" fill="rgb(254,227,20)" fg:x="1237" fg:w="1"/><text x="99.8474%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="99.6779%" y="581" width="0.1610%" height="15" fill="rgb(228,192,2)" fg:x="1238" fg:w="2"/><text x="99.9279%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.6779%" y="565" width="0.1610%" height="15" fill="rgb(233,32,8)" fg:x="1238" fg:w="2"/><text x="99.9279%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6779%" y="549" width="0.1610%" height="15" fill="rgb(220,146,47)" fg:x="1238" fg:w="2"/><text x="99.9279%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6779%" y="533" width="0.1610%" height="15" fill="rgb(246,194,1)" fg:x="1238" fg:w="2"/><text x="99.9279%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7585%" y="517" width="0.0805%" height="15" fill="rgb(218,203,9)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7585%" y="501" width="0.0805%" height="15" fill="rgb(237,97,14)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.7585%" y="485" width="0.0805%" height="15" fill="rgb(239,76,15)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.7585%" y="469" width="0.0805%" height="15" fill="rgb(222,53,45)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.7585%" y="453" width="0.0805%" height="15" fill="rgb(237,88,5)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.7585%" y="437" width="0.0805%" height="15" fill="rgb(218,223,35)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.7585%" y="421" width="0.0805%" height="15" fill="rgb(243,229,38)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.7585%" y="405" width="0.0805%" height="15" fill="rgb(240,75,41)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.7585%" y="389" width="0.0805%" height="15" fill="rgb(209,110,37)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.7585%" y="373" width="0.0805%" height="15" fill="rgb(221,130,46)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.7585%" y="357" width="0.0805%" height="15" fill="rgb(237,160,20)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.7585%" y="341" width="0.0805%" height="15" fill="rgb(234,126,24)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="351.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (124 samples, 9.98%)</title><rect x="89.9356%" y="645" width="9.9839%" height="15" fill="rgb(207,177,9)" fg:x="1117" fg:w="124"/><text x="90.1856%" y="655.50">engine::sessio..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (124 samples, 9.98%)</title><rect x="89.9356%" y="629" width="9.9839%" height="15" fill="rgb(231,191,33)" fg:x="1117" fg:w="124"/><text x="90.1856%" y="639.50">engine::sessio..</text></g><g><title>kernel::model::entry::EntryResolver::world (13 samples, 1.05%)</title><rect x="98.8728%" y="613" width="1.0467%" height="15" fill="rgb(207,42,1)" fg:x="1228" fg:w="13"/><text x="99.1228%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="99.5169%" y="597" width="0.4026%" height="15" fill="rgb(218,34,50)" fg:x="1236" fg:w="5"/><text x="99.7669%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.8390%" y="581" width="0.0805%" height="15" fill="rgb(254,126,39)" fg:x="1240" fg:w="1"/><text x="100.0890%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.8390%" y="565" width="0.0805%" height="15" fill="rgb(251,17,26)" fg:x="1240" fg:w="1"/><text x="100.0890%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8390%" y="549" width="0.0805%" height="15" fill="rgb(252,215,34)" fg:x="1240" fg:w="1"/><text x="100.0890%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.8390%" y="533" width="0.0805%" height="15" fill="rgb(217,120,44)" fg:x="1240" fg:w="1"/><text x="100.0890%" y="543.50"></text></g><g><title>all (1,242 samples, 100%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(211,31,11)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1007.50"></text></g><g><title>simple-aff86222 (1,242 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(222,69,51)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="991.50">simple-aff86222</text></g><g><title>_start (1,242 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(215,229,42)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="975.50">_start</text></g><g><title>__libc_start_main (1,242 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(212,102,15)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="959.50">__libc_start_main</text></g><g><title>main (1,242 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(205,179,41)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="943.50">main</text></g><g><title>std::rt::lang_start_internal (1,242 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(219,148,46)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="927.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,242 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(243,40,19)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,242 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(208,206,34)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,242 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(244,184,38)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="879.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,242 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(244,151,47)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,242 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(236,134,42)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,242 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(233,93,22)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,242 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(211,202,10)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,242 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(240,63,8)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="799.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,242 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(214,9,4)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="783.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,242 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(243,66,45)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="767.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,242 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(220,50,42)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="751.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,242 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(220,134,27)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="735.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,242 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(246,151,50)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="719.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (480 samples, 38.65%)</title><rect x="61.3527%" y="693" width="38.6473%" height="15" fill="rgb(238,216,27)" fg:x="762" fg:w="480"/><text x="61.6027%" y="703.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Rou..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (480 samples, 38.65%)</title><rect x="61.3527%" y="677" width="38.6473%" height="15" fill="rgb(250,92,11)" fg:x="762" fg:w="480"/><text x="61.6027%" y="687.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (480 samples, 38.65%)</title><rect x="61.3527%" y="661" width="38.6473%" height="15" fill="rgb(248,183,6)" fg:x="762" fg:w="480"/><text x="61.6027%" y="671.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9195%" y="645" width="0.0805%" height="15" fill="rgb(211,204,50)" fg:x="1241" fg:w="1"/><text x="100.1695%" y="655.50"></text></g></svg></svg>