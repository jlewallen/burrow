<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1078" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1061.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1061.00"> </text><svg id="frames" x="10" width="1180" total_samples="1241"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0000%" y="645" width="0.0806%" height="15" fill="rgb(218,121,16)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0000%" y="629" width="0.0806%" height="15" fill="rgb(218,10,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0000%" y="613" width="0.0806%" height="15" fill="rgb(227,99,14)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.0000%" y="677" width="0.1612%" height="15" fill="rgb(229,83,46)" fg:x="0" fg:w="2"/><text x="0.2500%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.0000%" y="661" width="0.1612%" height="15" fill="rgb(228,25,1)" fg:x="0" fg:w="2"/><text x="0.2500%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.0806%" y="645" width="0.0806%" height="15" fill="rgb(252,190,15)" fg:x="1" fg:w="1"/><text x="0.3306%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="0.2417%" y="661" width="0.2417%" height="15" fill="rgb(213,103,51)" fg:x="3" fg:w="3"/><text x="0.4917%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.2417%" y="645" width="0.2417%" height="15" fill="rgb(220,38,44)" fg:x="3" fg:w="3"/><text x="0.4917%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="0.4029%" y="629" width="0.0806%" height="15" fill="rgb(210,45,26)" fg:x="5" fg:w="1"/><text x="0.6529%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4029%" y="613" width="0.0806%" height="15" fill="rgb(205,95,48)" fg:x="5" fg:w="1"/><text x="0.6529%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.4835%" y="629" width="0.1612%" height="15" fill="rgb(225,179,37)" fg:x="6" fg:w="2"/><text x="0.7335%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.7252%" y="581" width="0.2417%" height="15" fill="rgb(230,209,3)" fg:x="9" fg:w="3"/><text x="0.9752%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.9670%" y="581" width="0.0806%" height="15" fill="rgb(248,12,46)" fg:x="12" fg:w="1"/><text x="1.2170%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9670%" y="565" width="0.0806%" height="15" fill="rgb(234,18,0)" fg:x="12" fg:w="1"/><text x="1.2170%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.2087%" y="565" width="0.2417%" height="15" fill="rgb(238,197,14)" fg:x="15" fg:w="3"/><text x="1.4587%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.56%)</title><rect x="1.4504%" y="565" width="0.5641%" height="15" fill="rgb(251,162,48)" fg:x="18" fg:w="7"/><text x="1.7004%" y="575.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="1.6116%" y="549" width="0.4029%" height="15" fill="rgb(237,73,42)" fg:x="20" fg:w="5"/><text x="1.8616%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0951%" y="549" width="0.0806%" height="15" fill="rgb(211,108,8)" fg:x="26" fg:w="1"/><text x="2.3451%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.1757%" y="533" width="0.0806%" height="15" fill="rgb(213,45,22)" fg:x="27" fg:w="1"/><text x="2.4257%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.1757%" y="517" width="0.0806%" height="15" fill="rgb(252,154,5)" fg:x="27" fg:w="1"/><text x="2.4257%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1757%" y="501" width="0.0806%" height="15" fill="rgb(221,79,52)" fg:x="27" fg:w="1"/><text x="2.4257%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="2.2562%" y="533" width="0.3223%" height="15" fill="rgb(229,220,36)" fg:x="28" fg:w="4"/><text x="2.5062%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.4174%" y="517" width="0.1612%" height="15" fill="rgb(211,17,16)" fg:x="30" fg:w="2"/><text x="2.6674%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 2.26%)</title><rect x="0.6446%" y="597" width="2.2562%" height="15" fill="rgb(222,55,31)" fg:x="8" fg:w="28"/><text x="0.8946%" y="607.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 1.85%)</title><rect x="1.0475%" y="581" width="1.8533%" height="15" fill="rgb(221,221,31)" fg:x="13" fg:w="23"/><text x="1.2975%" y="591.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="2.0145%" y="565" width="0.8864%" height="15" fill="rgb(227,168,26)" fg:x="25" fg:w="11"/><text x="2.2645%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="2.1757%" y="549" width="0.7252%" height="15" fill="rgb(224,139,9)" fg:x="27" fg:w="9"/><text x="2.4257%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="2.5786%" y="533" width="0.3223%" height="15" fill="rgb(254,172,0)" fg:x="32" fg:w="4"/><text x="2.8286%" y="543.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="2.5786%" y="517" width="0.3223%" height="15" fill="rgb(235,203,1)" fg:x="32" fg:w="4"/><text x="2.8286%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.9815%" y="565" width="0.0806%" height="15" fill="rgb(216,205,24)" fg:x="37" fg:w="1"/><text x="3.2315%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="3.0620%" y="565" width="0.2417%" height="15" fill="rgb(233,24,6)" fg:x="38" fg:w="3"/><text x="3.3120%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.2232%" y="549" width="0.0806%" height="15" fill="rgb(244,110,9)" fg:x="40" fg:w="1"/><text x="3.4732%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.4649%" y="549" width="0.1612%" height="15" fill="rgb(239,222,42)" fg:x="43" fg:w="2"/><text x="3.7149%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.6261%" y="549" width="0.0806%" height="15" fill="rgb(218,145,13)" fg:x="45" fg:w="1"/><text x="3.8761%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.05%)</title><rect x="2.9815%" y="581" width="1.0475%" height="15" fill="rgb(207,69,11)" fg:x="37" fg:w="13"/><text x="3.2315%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="3.3038%" y="565" width="0.7252%" height="15" fill="rgb(220,223,22)" fg:x="41" fg:w="9"/><text x="3.5538%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="3.7067%" y="549" width="0.3223%" height="15" fill="rgb(245,102,5)" fg:x="46" fg:w="4"/><text x="3.9567%" y="559.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="3.7067%" y="533" width="0.3223%" height="15" fill="rgb(211,148,2)" fg:x="46" fg:w="4"/><text x="3.9567%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.0290%" y="581" width="0.0806%" height="15" fill="rgb(241,13,44)" fg:x="50" fg:w="1"/><text x="4.2790%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.29%)</title><rect x="2.9009%" y="597" width="1.2893%" height="15" fill="rgb(219,137,21)" fg:x="36" fg:w="16"/><text x="3.1509%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="4.1096%" y="581" width="0.0806%" height="15" fill="rgb(242,206,5)" fg:x="51" fg:w="1"/><text x="4.3596%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 3.87%)</title><rect x="0.4835%" y="645" width="3.8678%" height="15" fill="rgb(217,114,22)" fg:x="6" fg:w="48"/><text x="0.7335%" y="655.50">&lt;has..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (46 samples, 3.71%)</title><rect x="0.6446%" y="629" width="3.7067%" height="15" fill="rgb(253,206,42)" fg:x="8" fg:w="46"/><text x="0.8946%" y="639.50">core..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 3.71%)</title><rect x="0.6446%" y="613" width="3.7067%" height="15" fill="rgb(236,102,18)" fg:x="8" fg:w="46"/><text x="0.8946%" y="623.50">&lt;all..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="4.1902%" y="597" width="0.1612%" height="15" fill="rgb(208,59,49)" fg:x="52" fg:w="2"/><text x="4.4402%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 4.27%)</title><rect x="0.1612%" y="677" width="4.2707%" height="15" fill="rgb(215,194,28)" fg:x="2" fg:w="53"/><text x="0.4112%" y="687.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (49 samples, 3.95%)</title><rect x="0.4835%" y="661" width="3.9484%" height="15" fill="rgb(243,207,11)" fg:x="6" fg:w="49"/><text x="0.7335%" y="671.50">core..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.3513%" y="645" width="0.0806%" height="15" fill="rgb(254,179,35)" fg:x="54" fg:w="1"/><text x="4.6013%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="4.4319%" y="645" width="0.0806%" height="15" fill="rgb(235,97,3)" fg:x="55" fg:w="1"/><text x="4.6819%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.4319%" y="629" width="0.0806%" height="15" fill="rgb(215,155,33)" fg:x="55" fg:w="1"/><text x="4.6819%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.5125%" y="613" width="0.0806%" height="15" fill="rgb(223,128,12)" fg:x="56" fg:w="1"/><text x="4.7625%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.5931%" y="613" width="0.0806%" height="15" fill="rgb(208,157,18)" fg:x="57" fg:w="1"/><text x="4.8431%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.5931%" y="597" width="0.0806%" height="15" fill="rgb(249,70,54)" fg:x="57" fg:w="1"/><text x="4.8431%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.5931%" y="581" width="0.0806%" height="15" fill="rgb(244,118,24)" fg:x="57" fg:w="1"/><text x="4.8431%" y="591.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="4.9154%" y="565" width="0.0806%" height="15" fill="rgb(211,54,0)" fg:x="61" fg:w="1"/><text x="5.1654%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="4.9154%" y="549" width="0.0806%" height="15" fill="rgb(245,137,45)" fg:x="61" fg:w="1"/><text x="5.1654%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9154%" y="533" width="0.0806%" height="15" fill="rgb(232,154,31)" fg:x="61" fg:w="1"/><text x="5.1654%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9154%" y="517" width="0.0806%" height="15" fill="rgb(253,6,39)" fg:x="61" fg:w="1"/><text x="5.1654%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.9154%" y="501" width="0.0806%" height="15" fill="rgb(234,183,24)" fg:x="61" fg:w="1"/><text x="5.1654%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.9154%" y="485" width="0.0806%" height="15" fill="rgb(252,84,40)" fg:x="61" fg:w="1"/><text x="5.1654%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.9154%" y="469" width="0.0806%" height="15" fill="rgb(224,65,2)" fg:x="61" fg:w="1"/><text x="5.1654%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.9154%" y="453" width="0.0806%" height="15" fill="rgb(229,38,24)" fg:x="61" fg:w="1"/><text x="5.1654%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.9154%" y="437" width="0.0806%" height="15" fill="rgb(218,131,50)" fg:x="61" fg:w="1"/><text x="5.1654%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.9960%" y="533" width="0.0806%" height="15" fill="rgb(233,106,18)" fg:x="62" fg:w="1"/><text x="5.2460%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="4.9154%" y="581" width="0.2417%" height="15" fill="rgb(220,216,11)" fg:x="61" fg:w="3"/><text x="5.1654%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="4.9960%" y="565" width="0.1612%" height="15" fill="rgb(251,100,45)" fg:x="62" fg:w="2"/><text x="5.2460%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="4.9960%" y="549" width="0.1612%" height="15" fill="rgb(235,143,32)" fg:x="62" fg:w="2"/><text x="5.2460%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="5.0766%" y="533" width="0.0806%" height="15" fill="rgb(248,124,34)" fg:x="63" fg:w="1"/><text x="5.3266%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.0766%" y="517" width="0.0806%" height="15" fill="rgb(225,221,4)" fg:x="63" fg:w="1"/><text x="5.3266%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.0766%" y="501" width="0.0806%" height="15" fill="rgb(242,27,43)" fg:x="63" fg:w="1"/><text x="5.3266%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="5.0766%" y="485" width="0.0806%" height="15" fill="rgb(227,54,8)" fg:x="63" fg:w="1"/><text x="5.3266%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="5.0766%" y="469" width="0.0806%" height="15" fill="rgb(253,139,49)" fg:x="63" fg:w="1"/><text x="5.3266%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="5.0766%" y="453" width="0.0806%" height="15" fill="rgb(231,26,43)" fg:x="63" fg:w="1"/><text x="5.3266%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="5.0766%" y="437" width="0.0806%" height="15" fill="rgb(207,121,39)" fg:x="63" fg:w="1"/><text x="5.3266%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="5.0766%" y="421" width="0.0806%" height="15" fill="rgb(223,101,35)" fg:x="63" fg:w="1"/><text x="5.3266%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="5.0766%" y="405" width="0.0806%" height="15" fill="rgb(232,87,23)" fg:x="63" fg:w="1"/><text x="5.3266%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.0766%" y="389" width="0.0806%" height="15" fill="rgb(225,180,29)" fg:x="63" fg:w="1"/><text x="5.3266%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="5.0766%" y="373" width="0.0806%" height="15" fill="rgb(225,25,17)" fg:x="63" fg:w="1"/><text x="5.3266%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.0766%" y="357" width="0.0806%" height="15" fill="rgb(223,8,52)" fg:x="63" fg:w="1"/><text x="5.3266%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="5.0766%" y="341" width="0.0806%" height="15" fill="rgb(246,42,21)" fg:x="63" fg:w="1"/><text x="5.3266%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="5.0766%" y="325" width="0.0806%" height="15" fill="rgb(205,64,43)" fg:x="63" fg:w="1"/><text x="5.3266%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="5.0766%" y="309" width="0.0806%" height="15" fill="rgb(221,160,13)" fg:x="63" fg:w="1"/><text x="5.3266%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.0766%" y="293" width="0.0806%" height="15" fill="rgb(239,58,35)" fg:x="63" fg:w="1"/><text x="5.3266%" y="303.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="5.2377%" y="549" width="0.0806%" height="15" fill="rgb(251,26,40)" fg:x="65" fg:w="1"/><text x="5.4877%" y="559.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="5.3183%" y="549" width="0.0806%" height="15" fill="rgb(247,0,4)" fg:x="66" fg:w="1"/><text x="5.5683%" y="559.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="5.1571%" y="565" width="0.3223%" height="15" fill="rgb(218,130,10)" fg:x="64" fg:w="4"/><text x="5.4071%" y="575.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="5.3989%" y="549" width="0.0806%" height="15" fill="rgb(239,32,7)" fg:x="67" fg:w="1"/><text x="5.6489%" y="559.50"></text></g><g><title>dlopen (8 samples, 0.64%)</title><rect x="5.4795%" y="565" width="0.6446%" height="15" fill="rgb(210,192,24)" fg:x="68" fg:w="8"/><text x="5.7295%" y="575.50"></text></g><g><title>_dl_catch_error (7 samples, 0.56%)</title><rect x="5.5600%" y="549" width="0.5641%" height="15" fill="rgb(226,212,17)" fg:x="69" fg:w="7"/><text x="5.8100%" y="559.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="5.5600%" y="533" width="0.5641%" height="15" fill="rgb(219,201,28)" fg:x="69" fg:w="7"/><text x="5.8100%" y="543.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="5.6406%" y="517" width="0.4835%" height="15" fill="rgb(235,207,41)" fg:x="70" fg:w="6"/><text x="5.8906%" y="527.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="5.6406%" y="501" width="0.4835%" height="15" fill="rgb(241,95,54)" fg:x="70" fg:w="6"/><text x="5.8906%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.0435%" y="485" width="0.0806%" height="15" fill="rgb(248,12,23)" fg:x="75" fg:w="1"/><text x="6.2935%" y="495.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (18 samples, 1.45%)</title><rect x="4.7542%" y="597" width="1.4504%" height="15" fill="rgb(228,173,4)" fg:x="59" fg:w="18"/><text x="5.0042%" y="607.50"></text></g><g><title>libloading::safe::Library::new (13 samples, 1.05%)</title><rect x="5.1571%" y="581" width="1.0475%" height="15" fill="rgb(254,99,5)" fg:x="64" fg:w="13"/><text x="5.4071%" y="591.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="6.1241%" y="565" width="0.0806%" height="15" fill="rgb(212,184,17)" fg:x="76" fg:w="1"/><text x="6.3741%" y="575.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="6.1241%" y="549" width="0.0806%" height="15" fill="rgb(252,174,1)" fg:x="76" fg:w="1"/><text x="6.3741%" y="559.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="6.1241%" y="533" width="0.0806%" height="15" fill="rgb(241,118,51)" fg:x="76" fg:w="1"/><text x="6.3741%" y="543.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.08%)</title><rect x="6.1241%" y="517" width="0.0806%" height="15" fill="rgb(227,94,47)" fg:x="76" fg:w="1"/><text x="6.3741%" y="527.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (20 samples, 1.61%)</title><rect x="4.6737%" y="613" width="1.6116%" height="15" fill="rgb(229,104,2)" fg:x="58" fg:w="20"/><text x="4.9237%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="6.2047%" y="597" width="0.0806%" height="15" fill="rgb(219,28,31)" fg:x="77" fg:w="1"/><text x="6.4547%" y="607.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="6.2047%" y="581" width="0.0806%" height="15" fill="rgb(233,109,36)" fg:x="77" fg:w="1"/><text x="6.4547%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.2853%" y="597" width="0.0806%" height="15" fill="rgb(246,88,11)" fg:x="78" fg:w="1"/><text x="6.5353%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.2853%" y="581" width="0.0806%" height="15" fill="rgb(209,212,17)" fg:x="78" fg:w="1"/><text x="6.5353%" y="591.50"></text></g><g><title>&lt;plugins_core::memory::MemoryPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="6.3658%" y="565" width="0.0806%" height="15" fill="rgb(243,59,29)" fg:x="79" fg:w="1"/><text x="6.6158%" y="575.50"></text></g><g><title>engine::session::Session::initialize (27 samples, 2.18%)</title><rect x="4.5125%" y="629" width="2.1757%" height="15" fill="rgb(244,205,48)" fg:x="56" fg:w="27"/><text x="4.7625%" y="639.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (5 samples, 0.40%)</title><rect x="6.2853%" y="613" width="0.4029%" height="15" fill="rgb(227,30,6)" fg:x="78" fg:w="5"/><text x="6.5353%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="6.3658%" y="597" width="0.3223%" height="15" fill="rgb(220,205,48)" fg:x="79" fg:w="4"/><text x="6.6158%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="6.3658%" y="581" width="0.3223%" height="15" fill="rgb(250,94,14)" fg:x="79" fg:w="4"/><text x="6.6158%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="6.4464%" y="565" width="0.2417%" height="15" fill="rgb(216,119,42)" fg:x="80" fg:w="3"/><text x="6.6964%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="6.4464%" y="549" width="0.2417%" height="15" fill="rgb(232,155,0)" fg:x="80" fg:w="3"/><text x="6.6964%" y="559.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="6.4464%" y="533" width="0.2417%" height="15" fill="rgb(212,24,32)" fg:x="80" fg:w="3"/><text x="6.6964%" y="543.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (31 samples, 2.50%)</title><rect x="4.4319%" y="677" width="2.4980%" height="15" fill="rgb(216,69,20)" fg:x="55" fg:w="31"/><text x="4.6819%" y="687.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (31 samples, 2.50%)</title><rect x="4.4319%" y="661" width="2.4980%" height="15" fill="rgb(229,73,31)" fg:x="55" fg:w="31"/><text x="4.6819%" y="671.50">en..</text></g><g><title>engine::session::Session::new (30 samples, 2.42%)</title><rect x="4.5125%" y="645" width="2.4174%" height="15" fill="rgb(224,219,20)" fg:x="56" fg:w="30"/><text x="4.7625%" y="655.50">en..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="6.6882%" y="629" width="0.2417%" height="15" fill="rgb(215,146,41)" fg:x="83" fg:w="3"/><text x="6.9382%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="6.6882%" y="613" width="0.2417%" height="15" fill="rgb(244,71,31)" fg:x="83" fg:w="3"/><text x="6.9382%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="6.7687%" y="597" width="0.1612%" height="15" fill="rgb(224,24,11)" fg:x="84" fg:w="2"/><text x="7.0187%" y="607.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="6.8493%" y="581" width="0.0806%" height="15" fill="rgb(229,76,15)" fg:x="85" fg:w="1"/><text x="7.0993%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.8493%" y="565" width="0.0806%" height="15" fill="rgb(209,93,2)" fg:x="85" fg:w="1"/><text x="7.0993%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="6.9299%" y="661" width="0.0806%" height="15" fill="rgb(216,200,50)" fg:x="86" fg:w="1"/><text x="7.1799%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.9299%" y="645" width="0.0806%" height="15" fill="rgb(211,67,34)" fg:x="86" fg:w="1"/><text x="7.1799%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.0911%" y="629" width="0.0806%" height="15" fill="rgb(225,87,47)" fg:x="88" fg:w="1"/><text x="7.3411%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="7.0105%" y="645" width="0.2417%" height="15" fill="rgb(217,185,16)" fg:x="87" fg:w="3"/><text x="7.2605%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.1716%" y="629" width="0.0806%" height="15" fill="rgb(205,0,0)" fg:x="89" fg:w="1"/><text x="7.4216%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.1716%" y="613" width="0.0806%" height="15" fill="rgb(207,116,45)" fg:x="89" fg:w="1"/><text x="7.4216%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="7.2522%" y="533" width="0.0806%" height="15" fill="rgb(221,156,26)" fg:x="90" fg:w="1"/><text x="7.5022%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="7.2522%" y="517" width="0.0806%" height="15" fill="rgb(213,140,4)" fg:x="90" fg:w="1"/><text x="7.5022%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.2522%" y="501" width="0.0806%" height="15" fill="rgb(231,224,15)" fg:x="90" fg:w="1"/><text x="7.5022%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.2522%" y="485" width="0.0806%" height="15" fill="rgb(244,76,20)" fg:x="90" fg:w="1"/><text x="7.5022%" y="495.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="7.2522%" y="469" width="0.0806%" height="15" fill="rgb(238,117,7)" fg:x="90" fg:w="1"/><text x="7.5022%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="7.3328%" y="485" width="0.0806%" height="15" fill="rgb(235,1,10)" fg:x="91" fg:w="1"/><text x="7.5828%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.3328%" y="469" width="0.0806%" height="15" fill="rgb(216,165,6)" fg:x="91" fg:w="1"/><text x="7.5828%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.3328%" y="453" width="0.0806%" height="15" fill="rgb(246,91,35)" fg:x="91" fg:w="1"/><text x="7.5828%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.3328%" y="437" width="0.0806%" height="15" fill="rgb(228,96,24)" fg:x="91" fg:w="1"/><text x="7.5828%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.3328%" y="421" width="0.0806%" height="15" fill="rgb(254,217,53)" fg:x="91" fg:w="1"/><text x="7.5828%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3328%" y="405" width="0.0806%" height="15" fill="rgb(209,60,0)" fg:x="91" fg:w="1"/><text x="7.5828%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.3328%" y="389" width="0.0806%" height="15" fill="rgb(250,93,26)" fg:x="91" fg:w="1"/><text x="7.5828%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.3328%" y="373" width="0.0806%" height="15" fill="rgb(211,9,40)" fg:x="91" fg:w="1"/><text x="7.5828%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.3328%" y="357" width="0.0806%" height="15" fill="rgb(242,57,20)" fg:x="91" fg:w="1"/><text x="7.5828%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="7.3328%" y="533" width="0.1612%" height="15" fill="rgb(248,85,48)" fg:x="91" fg:w="2"/><text x="7.5828%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="7.3328%" y="517" width="0.1612%" height="15" fill="rgb(212,117,2)" fg:x="91" fg:w="2"/><text x="7.5828%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="7.3328%" y="501" width="0.1612%" height="15" fill="rgb(243,19,3)" fg:x="91" fg:w="2"/><text x="7.5828%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.4134%" y="485" width="0.0806%" height="15" fill="rgb(232,217,24)" fg:x="92" fg:w="1"/><text x="7.6634%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.4134%" y="469" width="0.0806%" height="15" fill="rgb(224,175,40)" fg:x="92" fg:w="1"/><text x="7.6634%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.4134%" y="453" width="0.0806%" height="15" fill="rgb(212,162,32)" fg:x="92" fg:w="1"/><text x="7.6634%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.4134%" y="437" width="0.0806%" height="15" fill="rgb(215,9,4)" fg:x="92" fg:w="1"/><text x="7.6634%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.4134%" y="421" width="0.0806%" height="15" fill="rgb(242,42,7)" fg:x="92" fg:w="1"/><text x="7.6634%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.4940%" y="533" width="0.0806%" height="15" fill="rgb(242,184,45)" fg:x="93" fg:w="1"/><text x="7.7440%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="7.4940%" y="517" width="0.0806%" height="15" fill="rgb(228,111,51)" fg:x="93" fg:w="1"/><text x="7.7440%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.4940%" y="501" width="0.0806%" height="15" fill="rgb(236,147,17)" fg:x="93" fg:w="1"/><text x="7.7440%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.4940%" y="485" width="0.0806%" height="15" fill="rgb(210,75,22)" fg:x="93" fg:w="1"/><text x="7.7440%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.4940%" y="469" width="0.0806%" height="15" fill="rgb(217,159,45)" fg:x="93" fg:w="1"/><text x="7.7440%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.4940%" y="453" width="0.0806%" height="15" fill="rgb(245,165,53)" fg:x="93" fg:w="1"/><text x="7.7440%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.5745%" y="485" width="0.0806%" height="15" fill="rgb(251,190,50)" fg:x="94" fg:w="1"/><text x="7.8245%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.5745%" y="469" width="0.0806%" height="15" fill="rgb(208,203,29)" fg:x="94" fg:w="1"/><text x="7.8245%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="7.5745%" y="453" width="0.0806%" height="15" fill="rgb(207,209,35)" fg:x="94" fg:w="1"/><text x="7.8245%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.6551%" y="469" width="0.0806%" height="15" fill="rgb(230,144,49)" fg:x="95" fg:w="1"/><text x="7.9051%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.7357%" y="453" width="0.0806%" height="15" fill="rgb(229,31,6)" fg:x="96" fg:w="1"/><text x="7.9857%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.7357%" y="437" width="0.0806%" height="15" fill="rgb(251,129,24)" fg:x="96" fg:w="1"/><text x="7.9857%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.7357%" y="421" width="0.0806%" height="15" fill="rgb(235,105,15)" fg:x="96" fg:w="1"/><text x="7.9857%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.7357%" y="405" width="0.0806%" height="15" fill="rgb(216,52,43)" fg:x="96" fg:w="1"/><text x="7.9857%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.7357%" y="389" width="0.0806%" height="15" fill="rgb(238,144,41)" fg:x="96" fg:w="1"/><text x="7.9857%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.7357%" y="373" width="0.0806%" height="15" fill="rgb(243,63,9)" fg:x="96" fg:w="1"/><text x="7.9857%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="7.2522%" y="565" width="0.6446%" height="15" fill="rgb(246,208,1)" fg:x="90" fg:w="8"/><text x="7.5022%" y="575.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (8 samples, 0.64%)</title><rect x="7.2522%" y="549" width="0.6446%" height="15" fill="rgb(233,182,18)" fg:x="90" fg:w="8"/><text x="7.5022%" y="559.50"></text></g><g><title>kernel::model::any_entity_changes (4 samples, 0.32%)</title><rect x="7.5745%" y="533" width="0.3223%" height="15" fill="rgb(242,224,8)" fg:x="94" fg:w="4"/><text x="7.8245%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="7.5745%" y="517" width="0.3223%" height="15" fill="rgb(243,54,37)" fg:x="94" fg:w="4"/><text x="7.8245%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="7.5745%" y="501" width="0.3223%" height="15" fill="rgb(233,192,12)" fg:x="94" fg:w="4"/><text x="7.8245%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="7.6551%" y="485" width="0.2417%" height="15" fill="rgb(251,192,53)" fg:x="95" fg:w="3"/><text x="7.9051%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="7.7357%" y="469" width="0.1612%" height="15" fill="rgb(246,141,26)" fg:x="96" fg:w="2"/><text x="7.9857%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.8163%" y="453" width="0.0806%" height="15" fill="rgb(239,195,19)" fg:x="97" fg:w="1"/><text x="8.0663%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="7.9774%" y="533" width="0.3223%" height="15" fill="rgb(241,16,39)" fg:x="99" fg:w="4"/><text x="8.2274%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="7.9774%" y="517" width="0.3223%" height="15" fill="rgb(223,13,53)" fg:x="99" fg:w="4"/><text x="8.2274%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.0580%" y="501" width="0.2417%" height="15" fill="rgb(214,227,0)" fg:x="100" fg:w="3"/><text x="8.3080%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="8.0580%" y="485" width="0.2417%" height="15" fill="rgb(228,103,26)" fg:x="100" fg:w="3"/><text x="8.3080%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="8.0580%" y="469" width="0.2417%" height="15" fill="rgb(254,177,53)" fg:x="100" fg:w="3"/><text x="8.3080%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.2998%" y="517" width="0.0806%" height="15" fill="rgb(208,201,34)" fg:x="103" fg:w="1"/><text x="8.5498%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="8.3803%" y="517" width="0.3223%" height="15" fill="rgb(212,39,5)" fg:x="104" fg:w="4"/><text x="8.6303%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.4609%" y="501" width="0.2417%" height="15" fill="rgb(246,117,3)" fg:x="105" fg:w="3"/><text x="8.7109%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.5415%" y="485" width="0.1612%" height="15" fill="rgb(244,118,39)" fg:x="106" fg:w="2"/><text x="8.7915%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.6221%" y="469" width="0.0806%" height="15" fill="rgb(241,64,10)" fg:x="107" fg:w="1"/><text x="8.8721%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.7027%" y="501" width="0.0806%" height="15" fill="rgb(229,39,44)" fg:x="108" fg:w="1"/><text x="8.9527%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7027%" y="485" width="0.0806%" height="15" fill="rgb(230,226,3)" fg:x="108" fg:w="1"/><text x="8.9527%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7027%" y="469" width="0.0806%" height="15" fill="rgb(222,13,42)" fg:x="108" fg:w="1"/><text x="8.9527%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.7027%" y="453" width="0.0806%" height="15" fill="rgb(247,180,54)" fg:x="108" fg:w="1"/><text x="8.9527%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="8.7832%" y="501" width="0.3223%" height="15" fill="rgb(205,96,16)" fg:x="109" fg:w="4"/><text x="9.0332%" y="511.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="8.7832%" y="485" width="0.3223%" height="15" fill="rgb(205,100,21)" fg:x="109" fg:w="4"/><text x="9.0332%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="8.7832%" y="469" width="0.3223%" height="15" fill="rgb(248,51,4)" fg:x="109" fg:w="4"/><text x="9.0332%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="8.7832%" y="453" width="0.3223%" height="15" fill="rgb(217,197,30)" fg:x="109" fg:w="4"/><text x="9.0332%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.0250%" y="437" width="0.0806%" height="15" fill="rgb(240,179,40)" fg:x="112" fg:w="1"/><text x="9.2750%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.0250%" y="421" width="0.0806%" height="15" fill="rgb(212,185,35)" fg:x="112" fg:w="1"/><text x="9.2750%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.0250%" y="405" width="0.0806%" height="15" fill="rgb(251,222,31)" fg:x="112" fg:w="1"/><text x="9.2750%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.1056%" y="485" width="0.0806%" height="15" fill="rgb(208,140,36)" fg:x="113" fg:w="1"/><text x="9.3556%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.1056%" y="469" width="0.0806%" height="15" fill="rgb(220,148,1)" fg:x="113" fg:w="1"/><text x="9.3556%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.1861%" y="469" width="0.0806%" height="15" fill="rgb(254,4,28)" fg:x="114" fg:w="1"/><text x="9.4361%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.2667%" y="469" width="0.1612%" height="15" fill="rgb(222,185,44)" fg:x="115" fg:w="2"/><text x="9.5167%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.2667%" y="453" width="0.1612%" height="15" fill="rgb(215,74,39)" fg:x="115" fg:w="2"/><text x="9.5167%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.2667%" y="437" width="0.1612%" height="15" fill="rgb(247,86,4)" fg:x="115" fg:w="2"/><text x="9.5167%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="9.4279%" y="469" width="0.0806%" height="15" fill="rgb(231,105,32)" fg:x="117" fg:w="1"/><text x="9.6779%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.4279%" y="453" width="0.0806%" height="15" fill="rgb(222,65,35)" fg:x="117" fg:w="1"/><text x="9.6779%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.4279%" y="437" width="0.0806%" height="15" fill="rgb(218,145,35)" fg:x="117" fg:w="1"/><text x="9.6779%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="9.4279%" y="421" width="0.0806%" height="15" fill="rgb(208,7,15)" fg:x="117" fg:w="1"/><text x="9.6779%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="9.1861%" y="485" width="0.4029%" height="15" fill="rgb(209,83,13)" fg:x="114" fg:w="5"/><text x="9.4361%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.5085%" y="469" width="0.0806%" height="15" fill="rgb(218,3,10)" fg:x="118" fg:w="1"/><text x="9.7585%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="9.1056%" y="501" width="0.5641%" height="15" fill="rgb(211,219,4)" fg:x="113" fg:w="7"/><text x="9.3556%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.5890%" y="485" width="0.0806%" height="15" fill="rgb(228,194,12)" fg:x="119" fg:w="1"/><text x="9.8390%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.5890%" y="469" width="0.0806%" height="15" fill="rgb(210,175,7)" fg:x="119" fg:w="1"/><text x="9.8390%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.5890%" y="453" width="0.0806%" height="15" fill="rgb(243,132,6)" fg:x="119" fg:w="1"/><text x="9.8390%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="8.7027%" y="517" width="1.0475%" height="15" fill="rgb(207,72,18)" fg:x="108" fg:w="13"/><text x="8.9527%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.6696%" y="501" width="0.0806%" height="15" fill="rgb(236,1,18)" fg:x="120" fg:w="1"/><text x="9.9196%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.6696%" y="485" width="0.0806%" height="15" fill="rgb(227,0,18)" fg:x="120" fg:w="1"/><text x="9.9196%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.61%)</title><rect x="8.2998%" y="533" width="1.6116%" height="15" fill="rgb(247,37,5)" fg:x="103" fg:w="20"/><text x="8.5498%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.7502%" y="517" width="0.1612%" height="15" fill="rgb(237,179,24)" fg:x="121" fg:w="2"/><text x="10.0002%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.7502%" y="501" width="0.1612%" height="15" fill="rgb(226,53,20)" fg:x="121" fg:w="2"/><text x="10.0002%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="9.7502%" y="485" width="0.1612%" height="15" fill="rgb(247,75,7)" fg:x="121" fg:w="2"/><text x="10.0002%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.8308%" y="469" width="0.0806%" height="15" fill="rgb(233,96,12)" fg:x="122" fg:w="1"/><text x="10.0808%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.8308%" y="453" width="0.0806%" height="15" fill="rgb(224,125,0)" fg:x="122" fg:w="1"/><text x="10.0808%" y="463.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="9.8308%" y="437" width="0.0806%" height="15" fill="rgb(224,92,25)" fg:x="122" fg:w="1"/><text x="10.0808%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (26 samples, 2.10%)</title><rect x="7.9774%" y="549" width="2.0951%" height="15" fill="rgb(224,42,24)" fg:x="99" fg:w="26"/><text x="8.2274%" y="559.50">&lt;..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.9114%" y="533" width="0.1612%" height="15" fill="rgb(234,132,49)" fg:x="123" fg:w="2"/><text x="10.1614%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.9114%" y="517" width="0.1612%" height="15" fill="rgb(248,100,35)" fg:x="123" fg:w="2"/><text x="10.1614%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.0725%" y="517" width="0.0806%" height="15" fill="rgb(239,94,40)" fg:x="125" fg:w="1"/><text x="10.3225%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="10.1531%" y="517" width="0.2417%" height="15" fill="rgb(235,139,28)" fg:x="126" fg:w="3"/><text x="10.4031%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.3143%" y="501" width="0.0806%" height="15" fill="rgb(217,144,7)" fg:x="128" fg:w="1"/><text x="10.5643%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.3948%" y="453" width="0.0806%" height="15" fill="rgb(227,55,4)" fg:x="129" fg:w="1"/><text x="10.6448%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="10.0725%" y="549" width="0.4835%" height="15" fill="rgb(252,82,54)" fg:x="125" fg:w="6"/><text x="10.3225%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="10.0725%" y="533" width="0.4835%" height="15" fill="rgb(245,172,4)" fg:x="125" fg:w="6"/><text x="10.3225%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.3948%" y="517" width="0.1612%" height="15" fill="rgb(207,26,27)" fg:x="129" fg:w="2"/><text x="10.6448%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.3948%" y="501" width="0.1612%" height="15" fill="rgb(252,98,18)" fg:x="129" fg:w="2"/><text x="10.6448%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.3948%" y="485" width="0.1612%" height="15" fill="rgb(244,8,26)" fg:x="129" fg:w="2"/><text x="10.6448%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.3948%" y="469" width="0.1612%" height="15" fill="rgb(237,173,45)" fg:x="129" fg:w="2"/><text x="10.6448%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.4754%" y="453" width="0.0806%" height="15" fill="rgb(208,213,49)" fg:x="130" fg:w="1"/><text x="10.7254%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="10.5560%" y="533" width="0.0806%" height="15" fill="rgb(212,122,37)" fg:x="131" fg:w="1"/><text x="10.8060%" y="543.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="10.5560%" y="517" width="0.0806%" height="15" fill="rgb(213,80,17)" fg:x="131" fg:w="1"/><text x="10.8060%" y="527.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="10.5560%" y="501" width="0.0806%" height="15" fill="rgb(206,210,43)" fg:x="131" fg:w="1"/><text x="10.8060%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="10.8783%" y="501" width="0.3223%" height="15" fill="rgb(229,214,3)" fg:x="135" fg:w="4"/><text x="11.1283%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.1201%" y="485" width="0.0806%" height="15" fill="rgb(235,213,29)" fg:x="138" fg:w="1"/><text x="11.3701%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="11.2006%" y="501" width="0.0806%" height="15" fill="rgb(248,135,26)" fg:x="139" fg:w="1"/><text x="11.4506%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.2006%" y="485" width="0.0806%" height="15" fill="rgb(242,188,12)" fg:x="139" fg:w="1"/><text x="11.4506%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.2006%" y="469" width="0.0806%" height="15" fill="rgb(245,38,12)" fg:x="139" fg:w="1"/><text x="11.4506%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="11.2812%" y="501" width="0.0806%" height="15" fill="rgb(218,42,13)" fg:x="140" fg:w="1"/><text x="11.5312%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.2812%" y="485" width="0.0806%" height="15" fill="rgb(238,132,49)" fg:x="140" fg:w="1"/><text x="11.5312%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="11.3618%" y="501" width="0.0806%" height="15" fill="rgb(209,196,19)" fg:x="141" fg:w="1"/><text x="11.6118%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.3618%" y="485" width="0.0806%" height="15" fill="rgb(244,131,22)" fg:x="141" fg:w="1"/><text x="11.6118%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.3618%" y="469" width="0.0806%" height="15" fill="rgb(223,18,34)" fg:x="141" fg:w="1"/><text x="11.6118%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.4424%" y="485" width="0.1612%" height="15" fill="rgb(252,124,54)" fg:x="142" fg:w="2"/><text x="11.6924%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.5230%" y="469" width="0.0806%" height="15" fill="rgb(229,106,42)" fg:x="143" fg:w="1"/><text x="11.7730%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.5230%" y="453" width="0.0806%" height="15" fill="rgb(221,129,1)" fg:x="143" fg:w="1"/><text x="11.7730%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.6035%" y="453" width="0.1612%" height="15" fill="rgb(229,74,15)" fg:x="144" fg:w="2"/><text x="11.8535%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.6035%" y="437" width="0.1612%" height="15" fill="rgb(210,206,50)" fg:x="144" fg:w="2"/><text x="11.8535%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6841%" y="421" width="0.0806%" height="15" fill="rgb(251,114,31)" fg:x="145" fg:w="1"/><text x="11.9341%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="11.8453%" y="421" width="0.0806%" height="15" fill="rgb(215,225,28)" fg:x="147" fg:w="1"/><text x="12.0953%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8453%" y="405" width="0.0806%" height="15" fill="rgb(237,109,14)" fg:x="147" fg:w="1"/><text x="12.0953%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="11.7647%" y="453" width="0.2417%" height="15" fill="rgb(230,13,37)" fg:x="146" fg:w="3"/><text x="12.0147%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="11.7647%" y="437" width="0.2417%" height="15" fill="rgb(231,40,28)" fg:x="146" fg:w="3"/><text x="12.0147%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.9259%" y="421" width="0.0806%" height="15" fill="rgb(231,202,18)" fg:x="148" fg:w="1"/><text x="12.1759%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="12.0064%" y="437" width="0.0806%" height="15" fill="rgb(225,33,18)" fg:x="149" fg:w="1"/><text x="12.2564%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0870%" y="421" width="0.0806%" height="15" fill="rgb(223,64,47)" fg:x="150" fg:w="1"/><text x="12.3370%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0870%" y="405" width="0.0806%" height="15" fill="rgb(234,114,13)" fg:x="150" fg:w="1"/><text x="12.3370%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="12.1676%" y="421" width="0.0806%" height="15" fill="rgb(248,56,40)" fg:x="151" fg:w="1"/><text x="12.4176%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="12.0870%" y="437" width="0.4029%" height="15" fill="rgb(221,194,21)" fg:x="150" fg:w="5"/><text x="12.3370%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="12.2482%" y="421" width="0.2417%" height="15" fill="rgb(242,108,46)" fg:x="152" fg:w="3"/><text x="12.4982%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="12.2482%" y="405" width="0.2417%" height="15" fill="rgb(220,106,10)" fg:x="152" fg:w="3"/><text x="12.4982%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.3288%" y="389" width="0.1612%" height="15" fill="rgb(211,88,4)" fg:x="153" fg:w="2"/><text x="12.5788%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.3288%" y="373" width="0.1612%" height="15" fill="rgb(214,95,34)" fg:x="153" fg:w="2"/><text x="12.5788%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="12.3288%" y="357" width="0.1612%" height="15" fill="rgb(250,160,33)" fg:x="153" fg:w="2"/><text x="12.5788%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.97%)</title><rect x="11.6035%" y="469" width="0.9670%" height="15" fill="rgb(225,29,10)" fg:x="144" fg:w="12"/><text x="11.8535%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="12.0064%" y="453" width="0.5641%" height="15" fill="rgb(224,28,30)" fg:x="149" fg:w="7"/><text x="12.2564%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.4899%" y="437" width="0.0806%" height="15" fill="rgb(231,77,4)" fg:x="155" fg:w="1"/><text x="12.7399%" y="447.50"></text></g><g><title>engine::session::Session::flush (70 samples, 5.64%)</title><rect x="7.0105%" y="661" width="5.6406%" height="15" fill="rgb(209,63,21)" fg:x="87" fg:w="70"/><text x="7.2605%" y="671.50">engine:..</text></g><g><title>engine::session::state::State::close (67 samples, 5.40%)</title><rect x="7.2522%" y="645" width="5.3989%" height="15" fill="rgb(226,22,11)" fg:x="90" fg:w="67"/><text x="7.5022%" y="655.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (67 samples, 5.40%)</title><rect x="7.2522%" y="629" width="5.3989%" height="15" fill="rgb(216,82,30)" fg:x="90" fg:w="67"/><text x="7.5022%" y="639.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (67 samples, 5.40%)</title><rect x="7.2522%" y="613" width="5.3989%" height="15" fill="rgb(246,227,38)" fg:x="90" fg:w="67"/><text x="7.5022%" y="623.50">engine:..</text></g><g><title>core::iter::adapters::try_process (67 samples, 5.40%)</title><rect x="7.2522%" y="597" width="5.3989%" height="15" fill="rgb(251,203,53)" fg:x="90" fg:w="67"/><text x="7.5022%" y="607.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (67 samples, 5.40%)</title><rect x="7.2522%" y="581" width="5.3989%" height="15" fill="rgb(254,101,1)" fg:x="90" fg:w="67"/><text x="7.5022%" y="591.50">&lt;alloc:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (59 samples, 4.75%)</title><rect x="7.8969%" y="565" width="4.7542%" height="15" fill="rgb(241,180,5)" fg:x="98" fg:w="59"/><text x="8.1469%" y="575.50">engine..</text></g><g><title>kernel::model::any_entity_changes (26 samples, 2.10%)</title><rect x="10.5560%" y="549" width="2.0951%" height="15" fill="rgb(218,168,4)" fg:x="131" fg:w="26"/><text x="10.8060%" y="559.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (25 samples, 2.01%)</title><rect x="10.6366%" y="533" width="2.0145%" height="15" fill="rgb(224,223,32)" fg:x="132" fg:w="25"/><text x="10.8866%" y="543.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.77%)</title><rect x="10.8783%" y="517" width="1.7728%" height="15" fill="rgb(236,106,22)" fg:x="135" fg:w="22"/><text x="11.1283%" y="527.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.21%)</title><rect x="11.4424%" y="501" width="1.2087%" height="15" fill="rgb(206,121,5)" fg:x="142" fg:w="15"/><text x="11.6924%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="11.6035%" y="485" width="1.0475%" height="15" fill="rgb(233,87,28)" fg:x="144" fg:w="13"/><text x="11.8535%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5705%" y="469" width="0.0806%" height="15" fill="rgb(236,137,17)" fg:x="156" fg:w="1"/><text x="12.8205%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="12.6511%" y="613" width="0.0806%" height="15" fill="rgb(209,183,38)" fg:x="157" fg:w="1"/><text x="12.9011%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.6511%" y="597" width="0.0806%" height="15" fill="rgb(206,162,44)" fg:x="157" fg:w="1"/><text x="12.9011%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.6511%" y="581" width="0.0806%" height="15" fill="rgb(237,70,39)" fg:x="157" fg:w="1"/><text x="12.9011%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.6511%" y="565" width="0.0806%" height="15" fill="rgb(212,176,5)" fg:x="157" fg:w="1"/><text x="12.9011%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.6511%" y="549" width="0.0806%" height="15" fill="rgb(232,95,16)" fg:x="157" fg:w="1"/><text x="12.9011%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.6511%" y="533" width="0.0806%" height="15" fill="rgb(219,115,35)" fg:x="157" fg:w="1"/><text x="12.9011%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.6511%" y="517" width="0.0806%" height="15" fill="rgb(251,67,27)" fg:x="157" fg:w="1"/><text x="12.9011%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.6511%" y="501" width="0.0806%" height="15" fill="rgb(222,95,40)" fg:x="157" fg:w="1"/><text x="12.9011%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.6511%" y="485" width="0.0806%" height="15" fill="rgb(250,35,16)" fg:x="157" fg:w="1"/><text x="12.9011%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.6511%" y="469" width="0.0806%" height="15" fill="rgb(224,86,44)" fg:x="157" fg:w="1"/><text x="12.9011%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.6511%" y="453" width="0.0806%" height="15" fill="rgb(237,53,53)" fg:x="157" fg:w="1"/><text x="12.9011%" y="463.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="12.7317%" y="565" width="0.0806%" height="15" fill="rgb(208,171,33)" fg:x="158" fg:w="1"/><text x="12.9817%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.7317%" y="549" width="0.0806%" height="15" fill="rgb(222,64,27)" fg:x="158" fg:w="1"/><text x="12.9817%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7317%" y="533" width="0.0806%" height="15" fill="rgb(221,121,35)" fg:x="158" fg:w="1"/><text x="12.9817%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7317%" y="517" width="0.0806%" height="15" fill="rgb(228,137,42)" fg:x="158" fg:w="1"/><text x="12.9817%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7317%" y="501" width="0.0806%" height="15" fill="rgb(227,54,21)" fg:x="158" fg:w="1"/><text x="12.9817%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="12.7317%" y="597" width="0.1612%" height="15" fill="rgb(240,168,33)" fg:x="158" fg:w="2"/><text x="12.9817%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="12.7317%" y="581" width="0.1612%" height="15" fill="rgb(243,159,6)" fg:x="158" fg:w="2"/><text x="12.9817%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.8122%" y="565" width="0.0806%" height="15" fill="rgb(205,211,41)" fg:x="159" fg:w="1"/><text x="13.0622%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8122%" y="549" width="0.0806%" height="15" fill="rgb(253,30,1)" fg:x="159" fg:w="1"/><text x="13.0622%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8122%" y="533" width="0.0806%" height="15" fill="rgb(226,80,18)" fg:x="159" fg:w="1"/><text x="13.0622%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8122%" y="517" width="0.0806%" height="15" fill="rgb(253,156,46)" fg:x="159" fg:w="1"/><text x="13.0622%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.8122%" y="501" width="0.0806%" height="15" fill="rgb(248,87,27)" fg:x="159" fg:w="1"/><text x="13.0622%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.8122%" y="485" width="0.0806%" height="15" fill="rgb(227,122,2)" fg:x="159" fg:w="1"/><text x="13.0622%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.8122%" y="469" width="0.0806%" height="15" fill="rgb(229,94,39)" fg:x="159" fg:w="1"/><text x="13.0622%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.8122%" y="453" width="0.0806%" height="15" fill="rgb(225,173,31)" fg:x="159" fg:w="1"/><text x="13.0622%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.8122%" y="437" width="0.0806%" height="15" fill="rgb(239,176,30)" fg:x="159" fg:w="1"/><text x="13.0622%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.8122%" y="421" width="0.0806%" height="15" fill="rgb(212,104,21)" fg:x="159" fg:w="1"/><text x="13.0622%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.8122%" y="405" width="0.0806%" height="15" fill="rgb(240,209,40)" fg:x="159" fg:w="1"/><text x="13.0622%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.8122%" y="389" width="0.0806%" height="15" fill="rgb(234,195,5)" fg:x="159" fg:w="1"/><text x="13.0622%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.8122%" y="373" width="0.0806%" height="15" fill="rgb(238,213,1)" fg:x="159" fg:w="1"/><text x="13.0622%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.8122%" y="357" width="0.0806%" height="15" fill="rgb(235,182,54)" fg:x="159" fg:w="1"/><text x="13.0622%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.8122%" y="341" width="0.0806%" height="15" fill="rgb(229,50,46)" fg:x="159" fg:w="1"/><text x="13.0622%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8122%" y="325" width="0.0806%" height="15" fill="rgb(219,145,13)" fg:x="159" fg:w="1"/><text x="13.0622%" y="335.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="12.8928%" y="597" width="0.1612%" height="15" fill="rgb(220,226,10)" fg:x="160" fg:w="2"/><text x="13.1428%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.8928%" y="581" width="0.1612%" height="15" fill="rgb(248,47,30)" fg:x="160" fg:w="2"/><text x="13.1428%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.8928%" y="565" width="0.1612%" height="15" fill="rgb(231,209,44)" fg:x="160" fg:w="2"/><text x="13.1428%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="12.8928%" y="549" width="0.1612%" height="15" fill="rgb(209,80,30)" fg:x="160" fg:w="2"/><text x="13.1428%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="12.8928%" y="533" width="0.1612%" height="15" fill="rgb(232,9,14)" fg:x="160" fg:w="2"/><text x="13.1428%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="13.0540%" y="565" width="0.0806%" height="15" fill="rgb(243,91,43)" fg:x="162" fg:w="1"/><text x="13.3040%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.0540%" y="549" width="0.0806%" height="15" fill="rgb(231,90,52)" fg:x="162" fg:w="1"/><text x="13.3040%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.0540%" y="533" width="0.0806%" height="15" fill="rgb(253,192,44)" fg:x="162" fg:w="1"/><text x="13.3040%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="12.7317%" y="613" width="0.4835%" height="15" fill="rgb(241,66,31)" fg:x="158" fg:w="6"/><text x="12.9817%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="13.0540%" y="597" width="0.1612%" height="15" fill="rgb(235,81,37)" fg:x="162" fg:w="2"/><text x="13.3040%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.0540%" y="581" width="0.1612%" height="15" fill="rgb(223,221,9)" fg:x="162" fg:w="2"/><text x="13.3040%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="13.1346%" y="565" width="0.0806%" height="15" fill="rgb(242,180,7)" fg:x="163" fg:w="1"/><text x="13.3846%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.1346%" y="549" width="0.0806%" height="15" fill="rgb(243,78,19)" fg:x="163" fg:w="1"/><text x="13.3846%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.2151%" y="581" width="0.0806%" height="15" fill="rgb(233,23,17)" fg:x="164" fg:w="1"/><text x="13.4651%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.2151%" y="597" width="0.1612%" height="15" fill="rgb(252,122,45)" fg:x="164" fg:w="2"/><text x="13.4651%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.2957%" y="581" width="0.0806%" height="15" fill="rgb(247,108,20)" fg:x="165" fg:w="1"/><text x="13.5457%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2957%" y="565" width="0.0806%" height="15" fill="rgb(235,84,21)" fg:x="165" fg:w="1"/><text x="13.5457%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2957%" y="549" width="0.0806%" height="15" fill="rgb(247,129,10)" fg:x="165" fg:w="1"/><text x="13.5457%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2957%" y="533" width="0.0806%" height="15" fill="rgb(208,173,14)" fg:x="165" fg:w="1"/><text x="13.5457%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="13.2151%" y="613" width="0.2417%" height="15" fill="rgb(236,31,38)" fg:x="164" fg:w="3"/><text x="13.4651%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="13.3763%" y="597" width="0.0806%" height="15" fill="rgb(232,65,17)" fg:x="166" fg:w="1"/><text x="13.6263%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.3763%" y="581" width="0.0806%" height="15" fill="rgb(224,45,49)" fg:x="166" fg:w="1"/><text x="13.6263%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3763%" y="565" width="0.0806%" height="15" fill="rgb(225,2,53)" fg:x="166" fg:w="1"/><text x="13.6263%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3763%" y="549" width="0.0806%" height="15" fill="rgb(248,210,53)" fg:x="166" fg:w="1"/><text x="13.6263%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3763%" y="533" width="0.0806%" height="15" fill="rgb(211,1,30)" fg:x="166" fg:w="1"/><text x="13.6263%" y="543.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="13.4569%" y="597" width="0.0806%" height="15" fill="rgb(224,96,15)" fg:x="167" fg:w="1"/><text x="13.7069%" y="607.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="13.4569%" y="581" width="0.0806%" height="15" fill="rgb(252,45,11)" fg:x="167" fg:w="1"/><text x="13.7069%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (12 samples, 0.97%)</title><rect x="12.6511%" y="645" width="0.9670%" height="15" fill="rgb(220,125,38)" fg:x="157" fg:w="12"/><text x="12.9011%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.97%)</title><rect x="12.6511%" y="629" width="0.9670%" height="15" fill="rgb(243,161,33)" fg:x="157" fg:w="12"/><text x="12.9011%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="13.4569%" y="613" width="0.1612%" height="15" fill="rgb(248,197,34)" fg:x="167" fg:w="2"/><text x="13.7069%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="13.5375%" y="597" width="0.0806%" height="15" fill="rgb(228,165,23)" fg:x="168" fg:w="1"/><text x="13.7875%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="13.5375%" y="581" width="0.0806%" height="15" fill="rgb(236,94,38)" fg:x="168" fg:w="1"/><text x="13.7875%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.5375%" y="565" width="0.0806%" height="15" fill="rgb(220,13,23)" fg:x="168" fg:w="1"/><text x="13.7875%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.5375%" y="549" width="0.0806%" height="15" fill="rgb(234,26,39)" fg:x="168" fg:w="1"/><text x="13.7875%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.5375%" y="533" width="0.0806%" height="15" fill="rgb(205,117,44)" fg:x="168" fg:w="1"/><text x="13.7875%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.5375%" y="517" width="0.0806%" height="15" fill="rgb(250,42,2)" fg:x="168" fg:w="1"/><text x="13.7875%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5375%" y="501" width="0.0806%" height="15" fill="rgb(223,83,14)" fg:x="168" fg:w="1"/><text x="13.7875%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5375%" y="485" width="0.0806%" height="15" fill="rgb(241,147,50)" fg:x="168" fg:w="1"/><text x="13.7875%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.5375%" y="469" width="0.0806%" height="15" fill="rgb(218,90,6)" fg:x="168" fg:w="1"/><text x="13.7875%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.5375%" y="453" width="0.0806%" height="15" fill="rgb(210,191,5)" fg:x="168" fg:w="1"/><text x="13.7875%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.5375%" y="437" width="0.0806%" height="15" fill="rgb(225,139,19)" fg:x="168" fg:w="1"/><text x="13.7875%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.5375%" y="421" width="0.0806%" height="15" fill="rgb(210,1,33)" fg:x="168" fg:w="1"/><text x="13.7875%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.5375%" y="405" width="0.0806%" height="15" fill="rgb(213,50,3)" fg:x="168" fg:w="1"/><text x="13.7875%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.5375%" y="389" width="0.0806%" height="15" fill="rgb(234,227,4)" fg:x="168" fg:w="1"/><text x="13.7875%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.5375%" y="373" width="0.0806%" height="15" fill="rgb(246,63,5)" fg:x="168" fg:w="1"/><text x="13.7875%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.5375%" y="357" width="0.0806%" height="15" fill="rgb(245,136,27)" fg:x="168" fg:w="1"/><text x="13.7875%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.5375%" y="341" width="0.0806%" height="15" fill="rgb(247,199,27)" fg:x="168" fg:w="1"/><text x="13.7875%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5375%" y="325" width="0.0806%" height="15" fill="rgb(252,158,49)" fg:x="168" fg:w="1"/><text x="13.7875%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="13.6180%" y="629" width="0.0806%" height="15" fill="rgb(254,73,1)" fg:x="169" fg:w="1"/><text x="13.8680%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="13.6180%" y="613" width="0.0806%" height="15" fill="rgb(248,93,19)" fg:x="169" fg:w="1"/><text x="13.8680%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6180%" y="597" width="0.0806%" height="15" fill="rgb(206,67,5)" fg:x="169" fg:w="1"/><text x="13.8680%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="13.6986%" y="629" width="0.0806%" height="15" fill="rgb(209,210,4)" fg:x="170" fg:w="1"/><text x="13.9486%" y="639.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="13.6986%" y="613" width="0.0806%" height="15" fill="rgb(214,185,36)" fg:x="170" fg:w="1"/><text x="13.9486%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="13.6986%" y="597" width="0.0806%" height="15" fill="rgb(233,191,26)" fg:x="170" fg:w="1"/><text x="13.9486%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.6986%" y="581" width="0.0806%" height="15" fill="rgb(248,94,17)" fg:x="170" fg:w="1"/><text x="13.9486%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6986%" y="565" width="0.0806%" height="15" fill="rgb(250,64,4)" fg:x="170" fg:w="1"/><text x="13.9486%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6986%" y="549" width="0.0806%" height="15" fill="rgb(218,41,53)" fg:x="170" fg:w="1"/><text x="13.9486%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6986%" y="533" width="0.0806%" height="15" fill="rgb(251,176,28)" fg:x="170" fg:w="1"/><text x="13.9486%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6986%" y="517" width="0.0806%" height="15" fill="rgb(247,22,9)" fg:x="170" fg:w="1"/><text x="13.9486%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.7792%" y="629" width="0.0806%" height="15" fill="rgb(218,201,14)" fg:x="171" fg:w="1"/><text x="14.0292%" y="639.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="13.7792%" y="613" width="0.0806%" height="15" fill="rgb(218,94,10)" fg:x="171" fg:w="1"/><text x="14.0292%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.7792%" y="597" width="0.0806%" height="15" fill="rgb(222,183,52)" fg:x="171" fg:w="1"/><text x="14.0292%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.7792%" y="581" width="0.0806%" height="15" fill="rgb(242,140,25)" fg:x="171" fg:w="1"/><text x="14.0292%" y="591.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="13.7792%" y="565" width="0.0806%" height="15" fill="rgb(235,197,38)" fg:x="171" fg:w="1"/><text x="14.0292%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.7792%" y="549" width="0.0806%" height="15" fill="rgb(237,136,15)" fg:x="171" fg:w="1"/><text x="14.0292%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7792%" y="533" width="0.0806%" height="15" fill="rgb(223,44,49)" fg:x="171" fg:w="1"/><text x="14.0292%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9404%" y="549" width="0.0806%" height="15" fill="rgb(227,71,15)" fg:x="173" fg:w="1"/><text x="14.1904%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9404%" y="533" width="0.0806%" height="15" fill="rgb(225,153,20)" fg:x="173" fg:w="1"/><text x="14.1904%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9404%" y="517" width="0.0806%" height="15" fill="rgb(210,190,26)" fg:x="173" fg:w="1"/><text x="14.1904%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9404%" y="501" width="0.0806%" height="15" fill="rgb(223,147,5)" fg:x="173" fg:w="1"/><text x="14.1904%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9404%" y="485" width="0.0806%" height="15" fill="rgb(207,14,23)" fg:x="173" fg:w="1"/><text x="14.1904%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.9404%" y="469" width="0.0806%" height="15" fill="rgb(211,195,53)" fg:x="173" fg:w="1"/><text x="14.1904%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.9404%" y="453" width="0.0806%" height="15" fill="rgb(237,75,46)" fg:x="173" fg:w="1"/><text x="14.1904%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.9404%" y="437" width="0.0806%" height="15" fill="rgb(254,55,14)" fg:x="173" fg:w="1"/><text x="14.1904%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9404%" y="421" width="0.0806%" height="15" fill="rgb(230,185,30)" fg:x="173" fg:w="1"/><text x="14.1904%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9404%" y="405" width="0.0806%" height="15" fill="rgb(220,14,11)" fg:x="173" fg:w="1"/><text x="14.1904%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.9404%" y="389" width="0.0806%" height="15" fill="rgb(215,169,44)" fg:x="173" fg:w="1"/><text x="14.1904%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.9404%" y="373" width="0.0806%" height="15" fill="rgb(253,203,20)" fg:x="173" fg:w="1"/><text x="14.1904%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.9404%" y="357" width="0.0806%" height="15" fill="rgb(229,225,17)" fg:x="173" fg:w="1"/><text x="14.1904%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.9404%" y="341" width="0.0806%" height="15" fill="rgb(236,76,26)" fg:x="173" fg:w="1"/><text x="14.1904%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9404%" y="325" width="0.0806%" height="15" fill="rgb(234,15,30)" fg:x="173" fg:w="1"/><text x="14.1904%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="13.9404%" y="581" width="0.2417%" height="15" fill="rgb(211,113,48)" fg:x="173" fg:w="3"/><text x="14.1904%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.9404%" y="565" width="0.2417%" height="15" fill="rgb(221,31,36)" fg:x="173" fg:w="3"/><text x="14.1904%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.0210%" y="549" width="0.1612%" height="15" fill="rgb(215,118,52)" fg:x="174" fg:w="2"/><text x="14.2710%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0210%" y="533" width="0.1612%" height="15" fill="rgb(241,151,27)" fg:x="174" fg:w="2"/><text x="14.2710%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.0210%" y="517" width="0.1612%" height="15" fill="rgb(253,51,3)" fg:x="174" fg:w="2"/><text x="14.2710%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0210%" y="501" width="0.1612%" height="15" fill="rgb(216,201,24)" fg:x="174" fg:w="2"/><text x="14.2710%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.0210%" y="485" width="0.1612%" height="15" fill="rgb(231,107,4)" fg:x="174" fg:w="2"/><text x="14.2710%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0210%" y="469" width="0.1612%" height="15" fill="rgb(243,97,54)" fg:x="174" fg:w="2"/><text x="14.2710%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1821%" y="565" width="0.0806%" height="15" fill="rgb(221,32,51)" fg:x="176" fg:w="1"/><text x="14.4321%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.2627%" y="549" width="0.2417%" height="15" fill="rgb(218,171,35)" fg:x="177" fg:w="3"/><text x="14.5127%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.3433%" y="533" width="0.1612%" height="15" fill="rgb(214,20,53)" fg:x="178" fg:w="2"/><text x="14.5933%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.3433%" y="517" width="0.1612%" height="15" fill="rgb(239,9,52)" fg:x="178" fg:w="2"/><text x="14.5933%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4239%" y="501" width="0.0806%" height="15" fill="rgb(215,114,45)" fg:x="179" fg:w="1"/><text x="14.6739%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4239%" y="485" width="0.0806%" height="15" fill="rgb(208,118,9)" fg:x="179" fg:w="1"/><text x="14.6739%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.4239%" y="469" width="0.0806%" height="15" fill="rgb(235,7,39)" fg:x="179" fg:w="1"/><text x="14.6739%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.4239%" y="453" width="0.0806%" height="15" fill="rgb(243,225,15)" fg:x="179" fg:w="1"/><text x="14.6739%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.4239%" y="437" width="0.0806%" height="15" fill="rgb(225,216,18)" fg:x="179" fg:w="1"/><text x="14.6739%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.4239%" y="421" width="0.0806%" height="15" fill="rgb(233,36,38)" fg:x="179" fg:w="1"/><text x="14.6739%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.4239%" y="405" width="0.0806%" height="15" fill="rgb(239,88,23)" fg:x="179" fg:w="1"/><text x="14.6739%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (9 samples, 0.73%)</title><rect x="13.8598%" y="613" width="0.7252%" height="15" fill="rgb(219,181,35)" fg:x="172" fg:w="9"/><text x="14.1098%" y="623.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="13.9404%" y="597" width="0.6446%" height="15" fill="rgb(215,18,46)" fg:x="173" fg:w="8"/><text x="14.1904%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="14.1821%" y="581" width="0.4029%" height="15" fill="rgb(241,38,11)" fg:x="176" fg:w="5"/><text x="14.4321%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="14.2627%" y="565" width="0.3223%" height="15" fill="rgb(248,169,45)" fg:x="177" fg:w="4"/><text x="14.5127%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.5044%" y="549" width="0.0806%" height="15" fill="rgb(239,50,49)" fg:x="180" fg:w="1"/><text x="14.7544%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.5044%" y="533" width="0.0806%" height="15" fill="rgb(231,96,31)" fg:x="180" fg:w="1"/><text x="14.7544%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.5044%" y="517" width="0.0806%" height="15" fill="rgb(224,193,37)" fg:x="180" fg:w="1"/><text x="14.7544%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.5044%" y="501" width="0.0806%" height="15" fill="rgb(227,153,50)" fg:x="180" fg:w="1"/><text x="14.7544%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.5044%" y="485" width="0.0806%" height="15" fill="rgb(249,228,3)" fg:x="180" fg:w="1"/><text x="14.7544%" y="495.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.81%)</title><rect x="13.8598%" y="629" width="0.8058%" height="15" fill="rgb(219,164,43)" fg:x="172" fg:w="10"/><text x="14.1098%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="14.5850%" y="613" width="0.0806%" height="15" fill="rgb(216,45,41)" fg:x="181" fg:w="1"/><text x="14.8350%" y="623.50"></text></g><g><title>plugins_core::build::Build::holding (26 samples, 2.10%)</title><rect x="12.6511%" y="661" width="2.0951%" height="15" fill="rgb(210,226,51)" fg:x="157" fg:w="26"/><text x="12.9011%" y="671.50">p..</text></g><g><title>plugins_core::tools::set_container (14 samples, 1.13%)</title><rect x="13.6180%" y="645" width="1.1281%" height="15" fill="rgb(209,117,49)" fg:x="169" fg:w="14"/><text x="13.8680%" y="655.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="14.6656%" y="629" width="0.0806%" height="15" fill="rgb(206,196,24)" fg:x="182" fg:w="1"/><text x="14.9156%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.6656%" y="613" width="0.0806%" height="15" fill="rgb(253,218,3)" fg:x="182" fg:w="1"/><text x="14.9156%" y="623.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="14.6656%" y="597" width="0.0806%" height="15" fill="rgb(252,166,2)" fg:x="182" fg:w="1"/><text x="14.9156%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.6656%" y="581" width="0.0806%" height="15" fill="rgb(236,218,26)" fg:x="182" fg:w="1"/><text x="14.9156%" y="591.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="14.6656%" y="565" width="0.0806%" height="15" fill="rgb(254,84,19)" fg:x="182" fg:w="1"/><text x="14.9156%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.6656%" y="549" width="0.0806%" height="15" fill="rgb(219,137,29)" fg:x="182" fg:w="1"/><text x="14.9156%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7462%" y="645" width="0.0806%" height="15" fill="rgb(227,47,52)" fg:x="183" fg:w="1"/><text x="14.9962%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7462%" y="629" width="0.0806%" height="15" fill="rgb(229,167,24)" fg:x="183" fg:w="1"/><text x="14.9962%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.7462%" y="613" width="0.0806%" height="15" fill="rgb(233,164,1)" fg:x="183" fg:w="1"/><text x="14.9962%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.7462%" y="597" width="0.0806%" height="15" fill="rgb(218,88,48)" fg:x="183" fg:w="1"/><text x="14.9962%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.7462%" y="581" width="0.0806%" height="15" fill="rgb(226,214,24)" fg:x="183" fg:w="1"/><text x="14.9962%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7462%" y="565" width="0.0806%" height="15" fill="rgb(233,29,12)" fg:x="183" fg:w="1"/><text x="14.9962%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7462%" y="549" width="0.0806%" height="15" fill="rgb(219,120,34)" fg:x="183" fg:w="1"/><text x="14.9962%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.7462%" y="533" width="0.0806%" height="15" fill="rgb(226,78,44)" fg:x="183" fg:w="1"/><text x="14.9962%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.7462%" y="517" width="0.0806%" height="15" fill="rgb(240,15,48)" fg:x="183" fg:w="1"/><text x="14.9962%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.7462%" y="501" width="0.0806%" height="15" fill="rgb(253,176,7)" fg:x="183" fg:w="1"/><text x="14.9962%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.7462%" y="485" width="0.0806%" height="15" fill="rgb(206,166,28)" fg:x="183" fg:w="1"/><text x="14.9962%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7462%" y="469" width="0.0806%" height="15" fill="rgb(241,53,51)" fg:x="183" fg:w="1"/><text x="14.9962%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8268%" y="597" width="0.0806%" height="15" fill="rgb(249,112,30)" fg:x="184" fg:w="1"/><text x="15.0768%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.8268%" y="581" width="0.0806%" height="15" fill="rgb(217,85,30)" fg:x="184" fg:w="1"/><text x="15.0768%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.9073%" y="597" width="0.0806%" height="15" fill="rgb(233,49,7)" fg:x="185" fg:w="1"/><text x="15.1573%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.9073%" y="581" width="0.0806%" height="15" fill="rgb(234,109,9)" fg:x="185" fg:w="1"/><text x="15.1573%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.9879%" y="565" width="0.0806%" height="15" fill="rgb(253,95,22)" fg:x="186" fg:w="1"/><text x="15.2379%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="14.8268%" y="629" width="0.3223%" height="15" fill="rgb(233,176,25)" fg:x="184" fg:w="4"/><text x="15.0768%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="14.8268%" y="613" width="0.3223%" height="15" fill="rgb(236,33,39)" fg:x="184" fg:w="4"/><text x="15.0768%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.9879%" y="597" width="0.1612%" height="15" fill="rgb(223,226,42)" fg:x="186" fg:w="2"/><text x="15.2379%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.9879%" y="581" width="0.1612%" height="15" fill="rgb(216,99,33)" fg:x="186" fg:w="2"/><text x="15.2379%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.0685%" y="565" width="0.0806%" height="15" fill="rgb(235,84,23)" fg:x="187" fg:w="1"/><text x="15.3185%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.1491%" y="581" width="0.0806%" height="15" fill="rgb(232,2,27)" fg:x="188" fg:w="1"/><text x="15.3991%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="15.1491%" y="613" width="0.1612%" height="15" fill="rgb(241,23,22)" fg:x="188" fg:w="2"/><text x="15.3991%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.1491%" y="597" width="0.1612%" height="15" fill="rgb(211,73,27)" fg:x="188" fg:w="2"/><text x="15.3991%" y="607.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.2297%" y="581" width="0.0806%" height="15" fill="rgb(235,109,49)" fg:x="189" fg:w="1"/><text x="15.4797%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2297%" y="565" width="0.0806%" height="15" fill="rgb(230,99,29)" fg:x="189" fg:w="1"/><text x="15.4797%" y="575.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="15.1491%" y="629" width="0.2417%" height="15" fill="rgb(245,199,7)" fg:x="188" fg:w="3"/><text x="15.3991%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.3102%" y="613" width="0.0806%" height="15" fill="rgb(217,179,10)" fg:x="190" fg:w="1"/><text x="15.5602%" y="623.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="15.3102%" y="597" width="0.0806%" height="15" fill="rgb(254,99,47)" fg:x="190" fg:w="1"/><text x="15.5602%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.3102%" y="581" width="0.0806%" height="15" fill="rgb(251,121,7)" fg:x="190" fg:w="1"/><text x="15.5602%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.3102%" y="565" width="0.0806%" height="15" fill="rgb(250,177,26)" fg:x="190" fg:w="1"/><text x="15.5602%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.3102%" y="549" width="0.0806%" height="15" fill="rgb(232,88,15)" fg:x="190" fg:w="1"/><text x="15.5602%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3102%" y="533" width="0.0806%" height="15" fill="rgb(251,54,54)" fg:x="190" fg:w="1"/><text x="15.5602%" y="543.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="15.3908%" y="581" width="0.0806%" height="15" fill="rgb(208,177,15)" fg:x="191" fg:w="1"/><text x="15.6408%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.3908%" y="565" width="0.0806%" height="15" fill="rgb(205,97,32)" fg:x="191" fg:w="1"/><text x="15.6408%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.3908%" y="549" width="0.0806%" height="15" fill="rgb(217,192,13)" fg:x="191" fg:w="1"/><text x="15.6408%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.3908%" y="533" width="0.0806%" height="15" fill="rgb(215,163,41)" fg:x="191" fg:w="1"/><text x="15.6408%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.3908%" y="517" width="0.0806%" height="15" fill="rgb(246,83,29)" fg:x="191" fg:w="1"/><text x="15.6408%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="15.3908%" y="501" width="0.0806%" height="15" fill="rgb(219,2,45)" fg:x="191" fg:w="1"/><text x="15.6408%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="15.3908%" y="485" width="0.0806%" height="15" fill="rgb(242,215,33)" fg:x="191" fg:w="1"/><text x="15.6408%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="15.3908%" y="629" width="0.1612%" height="15" fill="rgb(217,1,6)" fg:x="191" fg:w="2"/><text x="15.6408%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="15.3908%" y="613" width="0.1612%" height="15" fill="rgb(207,85,52)" fg:x="191" fg:w="2"/><text x="15.6408%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="15.3908%" y="597" width="0.1612%" height="15" fill="rgb(231,171,19)" fg:x="191" fg:w="2"/><text x="15.6408%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.4714%" y="581" width="0.0806%" height="15" fill="rgb(207,128,4)" fg:x="192" fg:w="1"/><text x="15.7214%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.4714%" y="565" width="0.0806%" height="15" fill="rgb(219,208,4)" fg:x="192" fg:w="1"/><text x="15.7214%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.4714%" y="549" width="0.0806%" height="15" fill="rgb(235,161,42)" fg:x="192" fg:w="1"/><text x="15.7214%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.4714%" y="533" width="0.0806%" height="15" fill="rgb(247,218,18)" fg:x="192" fg:w="1"/><text x="15.7214%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.4714%" y="517" width="0.0806%" height="15" fill="rgb(232,114,51)" fg:x="192" fg:w="1"/><text x="15.7214%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.4714%" y="501" width="0.0806%" height="15" fill="rgb(222,95,3)" fg:x="192" fg:w="1"/><text x="15.7214%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.4714%" y="485" width="0.0806%" height="15" fill="rgb(240,65,29)" fg:x="192" fg:w="1"/><text x="15.7214%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.4714%" y="469" width="0.0806%" height="15" fill="rgb(249,209,20)" fg:x="192" fg:w="1"/><text x="15.7214%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="15.6326%" y="597" width="0.0806%" height="15" fill="rgb(241,48,37)" fg:x="194" fg:w="1"/><text x="15.8826%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.6326%" y="581" width="0.0806%" height="15" fill="rgb(230,140,42)" fg:x="194" fg:w="1"/><text x="15.8826%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7131%" y="549" width="0.0806%" height="15" fill="rgb(230,176,45)" fg:x="195" fg:w="1"/><text x="15.9631%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.7131%" y="533" width="0.0806%" height="15" fill="rgb(245,112,21)" fg:x="195" fg:w="1"/><text x="15.9631%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.7131%" y="517" width="0.0806%" height="15" fill="rgb(207,183,35)" fg:x="195" fg:w="1"/><text x="15.9631%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.7131%" y="501" width="0.0806%" height="15" fill="rgb(227,44,33)" fg:x="195" fg:w="1"/><text x="15.9631%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.7131%" y="485" width="0.0806%" height="15" fill="rgb(246,120,21)" fg:x="195" fg:w="1"/><text x="15.9631%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.7131%" y="469" width="0.0806%" height="15" fill="rgb(235,57,52)" fg:x="195" fg:w="1"/><text x="15.9631%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.7131%" y="453" width="0.0806%" height="15" fill="rgb(238,84,10)" fg:x="195" fg:w="1"/><text x="15.9631%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.7131%" y="437" width="0.0806%" height="15" fill="rgb(251,200,32)" fg:x="195" fg:w="1"/><text x="15.9631%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.7131%" y="421" width="0.0806%" height="15" fill="rgb(247,159,13)" fg:x="195" fg:w="1"/><text x="15.9631%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.7131%" y="405" width="0.0806%" height="15" fill="rgb(238,64,4)" fg:x="195" fg:w="1"/><text x="15.9631%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.7131%" y="389" width="0.0806%" height="15" fill="rgb(221,131,51)" fg:x="195" fg:w="1"/><text x="15.9631%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.7131%" y="373" width="0.0806%" height="15" fill="rgb(242,5,29)" fg:x="195" fg:w="1"/><text x="15.9631%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.7131%" y="357" width="0.0806%" height="15" fill="rgb(214,130,32)" fg:x="195" fg:w="1"/><text x="15.9631%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.7131%" y="581" width="0.1612%" height="15" fill="rgb(244,210,16)" fg:x="195" fg:w="2"/><text x="15.9631%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.7131%" y="565" width="0.1612%" height="15" fill="rgb(234,48,26)" fg:x="195" fg:w="2"/><text x="15.9631%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.7937%" y="549" width="0.0806%" height="15" fill="rgb(231,82,38)" fg:x="196" fg:w="1"/><text x="16.0437%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.7937%" y="533" width="0.0806%" height="15" fill="rgb(254,128,41)" fg:x="196" fg:w="1"/><text x="16.0437%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.7937%" y="517" width="0.0806%" height="15" fill="rgb(212,73,49)" fg:x="196" fg:w="1"/><text x="16.0437%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.7937%" y="501" width="0.0806%" height="15" fill="rgb(205,62,54)" fg:x="196" fg:w="1"/><text x="16.0437%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.7937%" y="485" width="0.0806%" height="15" fill="rgb(228,0,8)" fg:x="196" fg:w="1"/><text x="16.0437%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.7937%" y="469" width="0.0806%" height="15" fill="rgb(251,28,17)" fg:x="196" fg:w="1"/><text x="16.0437%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.7937%" y="453" width="0.0806%" height="15" fill="rgb(238,105,27)" fg:x="196" fg:w="1"/><text x="16.0437%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.7937%" y="437" width="0.0806%" height="15" fill="rgb(237,216,33)" fg:x="196" fg:w="1"/><text x="16.0437%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.7937%" y="421" width="0.0806%" height="15" fill="rgb(229,228,25)" fg:x="196" fg:w="1"/><text x="16.0437%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.7937%" y="405" width="0.0806%" height="15" fill="rgb(233,75,23)" fg:x="196" fg:w="1"/><text x="16.0437%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.7937%" y="389" width="0.0806%" height="15" fill="rgb(231,207,16)" fg:x="196" fg:w="1"/><text x="16.0437%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.7937%" y="373" width="0.0806%" height="15" fill="rgb(231,191,45)" fg:x="196" fg:w="1"/><text x="16.0437%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="15.6326%" y="613" width="0.3223%" height="15" fill="rgb(224,133,17)" fg:x="194" fg:w="4"/><text x="15.8826%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.7131%" y="597" width="0.2417%" height="15" fill="rgb(209,178,27)" fg:x="195" fg:w="3"/><text x="15.9631%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.8743%" y="581" width="0.0806%" height="15" fill="rgb(218,37,11)" fg:x="197" fg:w="1"/><text x="16.1243%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.8743%" y="565" width="0.0806%" height="15" fill="rgb(251,226,25)" fg:x="197" fg:w="1"/><text x="16.1243%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.8743%" y="549" width="0.0806%" height="15" fill="rgb(209,222,27)" fg:x="197" fg:w="1"/><text x="16.1243%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.8743%" y="533" width="0.0806%" height="15" fill="rgb(238,22,21)" fg:x="197" fg:w="1"/><text x="16.1243%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="15.8743%" y="517" width="0.0806%" height="15" fill="rgb(233,161,25)" fg:x="197" fg:w="1"/><text x="16.1243%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.8743%" y="501" width="0.0806%" height="15" fill="rgb(226,122,53)" fg:x="197" fg:w="1"/><text x="16.1243%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.8743%" y="485" width="0.0806%" height="15" fill="rgb(220,123,17)" fg:x="197" fg:w="1"/><text x="16.1243%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="15.5520%" y="629" width="0.4835%" height="15" fill="rgb(230,224,35)" fg:x="193" fg:w="6"/><text x="15.8020%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.9549%" y="613" width="0.0806%" height="15" fill="rgb(246,83,8)" fg:x="198" fg:w="1"/><text x="16.2049%" y="623.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="15.9549%" y="597" width="0.0806%" height="15" fill="rgb(230,214,17)" fg:x="198" fg:w="1"/><text x="16.2049%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="15.9549%" y="581" width="0.0806%" height="15" fill="rgb(222,97,18)" fg:x="198" fg:w="1"/><text x="16.2049%" y="591.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="15.9549%" y="565" width="0.0806%" height="15" fill="rgb(206,79,1)" fg:x="198" fg:w="1"/><text x="16.2049%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="15.9549%" y="549" width="0.0806%" height="15" fill="rgb(214,121,34)" fg:x="198" fg:w="1"/><text x="16.2049%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="15.9549%" y="533" width="0.0806%" height="15" fill="rgb(249,199,46)" fg:x="198" fg:w="1"/><text x="16.2049%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="15.9549%" y="517" width="0.0806%" height="15" fill="rgb(214,222,46)" fg:x="198" fg:w="1"/><text x="16.2049%" y="527.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="15.9549%" y="501" width="0.0806%" height="15" fill="rgb(248,168,30)" fg:x="198" fg:w="1"/><text x="16.2049%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.0355%" y="597" width="0.0806%" height="15" fill="rgb(226,14,28)" fg:x="199" fg:w="1"/><text x="16.2855%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.0355%" y="581" width="0.0806%" height="15" fill="rgb(253,123,1)" fg:x="199" fg:w="1"/><text x="16.2855%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (18 samples, 1.45%)</title><rect x="14.7462%" y="661" width="1.4504%" height="15" fill="rgb(225,24,42)" fg:x="183" fg:w="18"/><text x="14.9962%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.37%)</title><rect x="14.8268%" y="645" width="1.3699%" height="15" fill="rgb(216,161,37)" fg:x="184" fg:w="17"/><text x="15.0768%" y="655.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="16.0355%" y="629" width="0.1612%" height="15" fill="rgb(251,164,26)" fg:x="199" fg:w="2"/><text x="16.2855%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="16.0355%" y="613" width="0.1612%" height="15" fill="rgb(219,177,3)" fg:x="199" fg:w="2"/><text x="16.2855%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="16.1160%" y="597" width="0.0806%" height="15" fill="rgb(222,65,0)" fg:x="200" fg:w="1"/><text x="16.3660%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.1160%" y="581" width="0.0806%" height="15" fill="rgb(223,69,54)" fg:x="200" fg:w="1"/><text x="16.3660%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.1160%" y="565" width="0.0806%" height="15" fill="rgb(235,30,27)" fg:x="200" fg:w="1"/><text x="16.3660%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1160%" y="549" width="0.0806%" height="15" fill="rgb(220,183,50)" fg:x="200" fg:w="1"/><text x="16.3660%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="16.1966%" y="661" width="0.0806%" height="15" fill="rgb(248,198,15)" fg:x="201" fg:w="1"/><text x="16.4466%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="16.1966%" y="645" width="0.0806%" height="15" fill="rgb(222,211,4)" fg:x="201" fg:w="1"/><text x="16.4466%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.1966%" y="629" width="0.0806%" height="15" fill="rgb(214,102,34)" fg:x="201" fg:w="1"/><text x="16.4466%" y="639.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="16.3578%" y="629" width="0.1612%" height="15" fill="rgb(245,92,5)" fg:x="203" fg:w="2"/><text x="16.6078%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.4384%" y="613" width="0.0806%" height="15" fill="rgb(252,72,51)" fg:x="204" fg:w="1"/><text x="16.6884%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.4384%" y="597" width="0.0806%" height="15" fill="rgb(252,208,19)" fg:x="204" fg:w="1"/><text x="16.6884%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="16.3578%" y="645" width="0.2417%" height="15" fill="rgb(211,69,7)" fg:x="203" fg:w="3"/><text x="16.6078%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="16.5189%" y="629" width="0.0806%" height="15" fill="rgb(211,27,16)" fg:x="205" fg:w="1"/><text x="16.7689%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.5189%" y="613" width="0.0806%" height="15" fill="rgb(219,216,14)" fg:x="205" fg:w="1"/><text x="16.7689%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.5189%" y="597" width="0.0806%" height="15" fill="rgb(219,71,8)" fg:x="205" fg:w="1"/><text x="16.7689%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.5189%" y="581" width="0.0806%" height="15" fill="rgb(223,170,53)" fg:x="205" fg:w="1"/><text x="16.7689%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.5189%" y="565" width="0.0806%" height="15" fill="rgb(246,21,26)" fg:x="205" fg:w="1"/><text x="16.7689%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="16.5995%" y="645" width="0.0806%" height="15" fill="rgb(248,20,46)" fg:x="206" fg:w="1"/><text x="16.8495%" y="655.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="16.5995%" y="629" width="0.0806%" height="15" fill="rgb(252,94,11)" fg:x="206" fg:w="1"/><text x="16.8495%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.7607%" y="549" width="0.0806%" height="15" fill="rgb(236,163,8)" fg:x="208" fg:w="1"/><text x="17.0107%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7607%" y="533" width="0.0806%" height="15" fill="rgb(217,221,45)" fg:x="208" fg:w="1"/><text x="17.0107%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7607%" y="517" width="0.0806%" height="15" fill="rgb(238,38,17)" fg:x="208" fg:w="1"/><text x="17.0107%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.7607%" y="501" width="0.0806%" height="15" fill="rgb(242,210,23)" fg:x="208" fg:w="1"/><text x="17.0107%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.7607%" y="485" width="0.0806%" height="15" fill="rgb(250,86,53)" fg:x="208" fg:w="1"/><text x="17.0107%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.7607%" y="469" width="0.0806%" height="15" fill="rgb(223,168,25)" fg:x="208" fg:w="1"/><text x="17.0107%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.7607%" y="453" width="0.0806%" height="15" fill="rgb(251,189,4)" fg:x="208" fg:w="1"/><text x="17.0107%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.7607%" y="437" width="0.0806%" height="15" fill="rgb(245,19,28)" fg:x="208" fg:w="1"/><text x="17.0107%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.7607%" y="421" width="0.0806%" height="15" fill="rgb(207,10,34)" fg:x="208" fg:w="1"/><text x="17.0107%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.7607%" y="405" width="0.0806%" height="15" fill="rgb(235,153,31)" fg:x="208" fg:w="1"/><text x="17.0107%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.7607%" y="389" width="0.0806%" height="15" fill="rgb(228,72,37)" fg:x="208" fg:w="1"/><text x="17.0107%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.7607%" y="373" width="0.0806%" height="15" fill="rgb(215,15,16)" fg:x="208" fg:w="1"/><text x="17.0107%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7607%" y="357" width="0.0806%" height="15" fill="rgb(250,119,29)" fg:x="208" fg:w="1"/><text x="17.0107%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="16.6801%" y="597" width="0.2417%" height="15" fill="rgb(214,59,1)" fg:x="207" fg:w="3"/><text x="16.9301%" y="607.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="16.6801%" y="581" width="0.2417%" height="15" fill="rgb(223,109,25)" fg:x="207" fg:w="3"/><text x="16.9301%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="16.6801%" y="565" width="0.2417%" height="15" fill="rgb(230,198,22)" fg:x="207" fg:w="3"/><text x="16.9301%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.8413%" y="549" width="0.0806%" height="15" fill="rgb(245,184,46)" fg:x="209" fg:w="1"/><text x="17.0913%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.8413%" y="533" width="0.0806%" height="15" fill="rgb(253,73,16)" fg:x="209" fg:w="1"/><text x="17.0913%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.8413%" y="517" width="0.0806%" height="15" fill="rgb(206,94,45)" fg:x="209" fg:w="1"/><text x="17.0913%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="16.8413%" y="501" width="0.0806%" height="15" fill="rgb(236,83,27)" fg:x="209" fg:w="1"/><text x="17.0913%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="16.8413%" y="485" width="0.0806%" height="15" fill="rgb(220,196,8)" fg:x="209" fg:w="1"/><text x="17.0913%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.9218%" y="549" width="0.0806%" height="15" fill="rgb(254,185,14)" fg:x="210" fg:w="1"/><text x="17.1718%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.9218%" y="533" width="0.0806%" height="15" fill="rgb(226,50,22)" fg:x="210" fg:w="1"/><text x="17.1718%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.9218%" y="517" width="0.0806%" height="15" fill="rgb(253,147,0)" fg:x="210" fg:w="1"/><text x="17.1718%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.9218%" y="501" width="0.0806%" height="15" fill="rgb(252,46,33)" fg:x="210" fg:w="1"/><text x="17.1718%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.9218%" y="485" width="0.0806%" height="15" fill="rgb(242,22,54)" fg:x="210" fg:w="1"/><text x="17.1718%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.9218%" y="469" width="0.0806%" height="15" fill="rgb(223,178,32)" fg:x="210" fg:w="1"/><text x="17.1718%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="16.9218%" y="453" width="0.0806%" height="15" fill="rgb(214,106,53)" fg:x="210" fg:w="1"/><text x="17.1718%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="17.0024%" y="549" width="0.0806%" height="15" fill="rgb(232,65,50)" fg:x="211" fg:w="1"/><text x="17.2524%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="17.0024%" y="533" width="0.0806%" height="15" fill="rgb(231,110,28)" fg:x="211" fg:w="1"/><text x="17.2524%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.0024%" y="517" width="0.0806%" height="15" fill="rgb(216,71,40)" fg:x="211" fg:w="1"/><text x="17.2524%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.0024%" y="501" width="0.0806%" height="15" fill="rgb(229,89,53)" fg:x="211" fg:w="1"/><text x="17.2524%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="17.0024%" y="485" width="0.0806%" height="15" fill="rgb(210,124,14)" fg:x="211" fg:w="1"/><text x="17.2524%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.0830%" y="517" width="0.0806%" height="15" fill="rgb(236,213,6)" fg:x="212" fg:w="1"/><text x="17.3330%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.0830%" y="501" width="0.0806%" height="15" fill="rgb(228,41,5)" fg:x="212" fg:w="1"/><text x="17.3330%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.0830%" y="485" width="0.0806%" height="15" fill="rgb(221,167,25)" fg:x="212" fg:w="1"/><text x="17.3330%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.0830%" y="469" width="0.0806%" height="15" fill="rgb(228,144,37)" fg:x="212" fg:w="1"/><text x="17.3330%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.0830%" y="453" width="0.0806%" height="15" fill="rgb(227,189,38)" fg:x="212" fg:w="1"/><text x="17.3330%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.0830%" y="437" width="0.0806%" height="15" fill="rgb(218,8,2)" fg:x="212" fg:w="1"/><text x="17.3330%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.0830%" y="421" width="0.0806%" height="15" fill="rgb(209,61,28)" fg:x="212" fg:w="1"/><text x="17.3330%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.0830%" y="405" width="0.0806%" height="15" fill="rgb(233,140,39)" fg:x="212" fg:w="1"/><text x="17.3330%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.0830%" y="389" width="0.0806%" height="15" fill="rgb(251,66,48)" fg:x="212" fg:w="1"/><text x="17.3330%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.0830%" y="373" width="0.0806%" height="15" fill="rgb(210,44,45)" fg:x="212" fg:w="1"/><text x="17.3330%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.0830%" y="357" width="0.0806%" height="15" fill="rgb(214,136,46)" fg:x="212" fg:w="1"/><text x="17.3330%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.0830%" y="341" width="0.0806%" height="15" fill="rgb(207,130,50)" fg:x="212" fg:w="1"/><text x="17.3330%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.1636%" y="469" width="0.0806%" height="15" fill="rgb(228,102,49)" fg:x="213" fg:w="1"/><text x="17.4136%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.1636%" y="453" width="0.0806%" height="15" fill="rgb(253,55,1)" fg:x="213" fg:w="1"/><text x="17.4136%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.1636%" y="437" width="0.0806%" height="15" fill="rgb(238,222,9)" fg:x="213" fg:w="1"/><text x="17.4136%" y="447.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="17.1636%" y="501" width="0.2417%" height="15" fill="rgb(246,99,6)" fg:x="213" fg:w="3"/><text x="17.4136%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="17.1636%" y="485" width="0.2417%" height="15" fill="rgb(219,110,26)" fg:x="213" fg:w="3"/><text x="17.4136%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="17.2442%" y="469" width="0.1612%" height="15" fill="rgb(239,160,33)" fg:x="214" fg:w="2"/><text x="17.4942%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.2442%" y="453" width="0.1612%" height="15" fill="rgb(220,202,23)" fg:x="214" fg:w="2"/><text x="17.4942%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="17.2442%" y="437" width="0.1612%" height="15" fill="rgb(208,80,26)" fg:x="214" fg:w="2"/><text x="17.4942%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="17.2442%" y="421" width="0.1612%" height="15" fill="rgb(243,85,7)" fg:x="214" fg:w="2"/><text x="17.4942%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.3247%" y="405" width="0.0806%" height="15" fill="rgb(228,77,47)" fg:x="215" fg:w="1"/><text x="17.5747%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="17.0830%" y="533" width="0.4029%" height="15" fill="rgb(212,226,8)" fg:x="212" fg:w="5"/><text x="17.3330%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="17.1636%" y="517" width="0.3223%" height="15" fill="rgb(241,120,54)" fg:x="213" fg:w="4"/><text x="17.4136%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.4053%" y="501" width="0.0806%" height="15" fill="rgb(226,80,16)" fg:x="216" fg:w="1"/><text x="17.6553%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.4053%" y="485" width="0.0806%" height="15" fill="rgb(240,76,13)" fg:x="216" fg:w="1"/><text x="17.6553%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="17.0830%" y="549" width="0.4835%" height="15" fill="rgb(252,74,8)" fg:x="212" fg:w="6"/><text x="17.3330%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="17.4859%" y="533" width="0.0806%" height="15" fill="rgb(244,155,2)" fg:x="217" fg:w="1"/><text x="17.7359%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.4859%" y="517" width="0.0806%" height="15" fill="rgb(215,81,35)" fg:x="217" fg:w="1"/><text x="17.7359%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.4859%" y="501" width="0.0806%" height="15" fill="rgb(206,55,2)" fg:x="217" fg:w="1"/><text x="17.7359%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="17.4859%" y="485" width="0.0806%" height="15" fill="rgb(231,2,34)" fg:x="217" fg:w="1"/><text x="17.7359%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="17.4859%" y="469" width="0.0806%" height="15" fill="rgb(242,176,48)" fg:x="217" fg:w="1"/><text x="17.7359%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="17.4859%" y="453" width="0.0806%" height="15" fill="rgb(249,31,36)" fg:x="217" fg:w="1"/><text x="17.7359%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="17.4859%" y="437" width="0.0806%" height="15" fill="rgb(205,18,17)" fg:x="217" fg:w="1"/><text x="17.7359%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="17.4859%" y="421" width="0.0806%" height="15" fill="rgb(254,130,5)" fg:x="217" fg:w="1"/><text x="17.7359%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="17.4859%" y="405" width="0.0806%" height="15" fill="rgb(229,42,45)" fg:x="217" fg:w="1"/><text x="17.7359%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="17.4859%" y="389" width="0.0806%" height="15" fill="rgb(245,95,25)" fg:x="217" fg:w="1"/><text x="17.7359%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4859%" y="373" width="0.0806%" height="15" fill="rgb(249,193,38)" fg:x="217" fg:w="1"/><text x="17.7359%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="17.5665%" y="517" width="0.0806%" height="15" fill="rgb(241,140,43)" fg:x="218" fg:w="1"/><text x="17.8165%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.5665%" y="501" width="0.0806%" height="15" fill="rgb(245,78,48)" fg:x="218" fg:w="1"/><text x="17.8165%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.6471%" y="501" width="0.0806%" height="15" fill="rgb(214,92,39)" fg:x="219" fg:w="1"/><text x="17.8971%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.6471%" y="485" width="0.0806%" height="15" fill="rgb(211,189,14)" fg:x="219" fg:w="1"/><text x="17.8971%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.6471%" y="469" width="0.0806%" height="15" fill="rgb(218,7,24)" fg:x="219" fg:w="1"/><text x="17.8971%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.6471%" y="453" width="0.0806%" height="15" fill="rgb(224,200,49)" fg:x="219" fg:w="1"/><text x="17.8971%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.6471%" y="437" width="0.0806%" height="15" fill="rgb(218,210,14)" fg:x="219" fg:w="1"/><text x="17.8971%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="17.5665%" y="549" width="0.2417%" height="15" fill="rgb(234,142,31)" fg:x="218" fg:w="3"/><text x="17.8165%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="17.5665%" y="533" width="0.2417%" height="15" fill="rgb(227,165,2)" fg:x="218" fg:w="3"/><text x="17.8165%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.6471%" y="517" width="0.1612%" height="15" fill="rgb(232,44,46)" fg:x="219" fg:w="2"/><text x="17.8971%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.7276%" y="501" width="0.0806%" height="15" fill="rgb(236,149,47)" fg:x="220" fg:w="1"/><text x="17.9776%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.7276%" y="485" width="0.0806%" height="15" fill="rgb(227,45,31)" fg:x="220" fg:w="1"/><text x="17.9776%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.7276%" y="469" width="0.0806%" height="15" fill="rgb(240,176,51)" fg:x="220" fg:w="1"/><text x="17.9776%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.7276%" y="453" width="0.0806%" height="15" fill="rgb(249,146,41)" fg:x="220" fg:w="1"/><text x="17.9776%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.7276%" y="437" width="0.0806%" height="15" fill="rgb(213,208,4)" fg:x="220" fg:w="1"/><text x="17.9776%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.7276%" y="421" width="0.0806%" height="15" fill="rgb(245,84,36)" fg:x="220" fg:w="1"/><text x="17.9776%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="17.8082%" y="517" width="0.0806%" height="15" fill="rgb(254,84,18)" fg:x="221" fg:w="1"/><text x="18.0582%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.8082%" y="501" width="0.0806%" height="15" fill="rgb(225,38,54)" fg:x="221" fg:w="1"/><text x="18.0582%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8082%" y="485" width="0.0806%" height="15" fill="rgb(246,50,30)" fg:x="221" fg:w="1"/><text x="18.0582%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.8082%" y="469" width="0.0806%" height="15" fill="rgb(246,148,9)" fg:x="221" fg:w="1"/><text x="18.0582%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8082%" y="453" width="0.0806%" height="15" fill="rgb(223,75,4)" fg:x="221" fg:w="1"/><text x="18.0582%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.8082%" y="437" width="0.0806%" height="15" fill="rgb(239,148,41)" fg:x="221" fg:w="1"/><text x="18.0582%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8082%" y="421" width="0.0806%" height="15" fill="rgb(205,195,3)" fg:x="221" fg:w="1"/><text x="18.0582%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.8888%" y="469" width="0.1612%" height="15" fill="rgb(254,161,1)" fg:x="222" fg:w="2"/><text x="18.1388%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="17.9694%" y="453" width="0.0806%" height="15" fill="rgb(211,229,8)" fg:x="223" fg:w="1"/><text x="18.2194%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="17.9694%" y="437" width="0.0806%" height="15" fill="rgb(220,97,9)" fg:x="223" fg:w="1"/><text x="18.2194%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="17.8888%" y="485" width="0.2417%" height="15" fill="rgb(240,218,8)" fg:x="222" fg:w="3"/><text x="18.1388%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.0500%" y="469" width="0.0806%" height="15" fill="rgb(250,44,0)" fg:x="224" fg:w="1"/><text x="18.3000%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.1305%" y="485" width="0.0806%" height="15" fill="rgb(236,41,53)" fg:x="225" fg:w="1"/><text x="18.3805%" y="495.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="18.1305%" y="469" width="0.0806%" height="15" fill="rgb(218,227,13)" fg:x="225" fg:w="1"/><text x="18.3805%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.37%)</title><rect x="16.9218%" y="565" width="1.3699%" height="15" fill="rgb(217,94,32)" fg:x="210" fg:w="17"/><text x="17.1718%" y="575.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.48%)</title><rect x="17.8082%" y="549" width="0.4835%" height="15" fill="rgb(213,217,12)" fg:x="221" fg:w="6"/><text x="18.0582%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="17.8082%" y="533" width="0.4835%" height="15" fill="rgb(229,13,46)" fg:x="221" fg:w="6"/><text x="18.0582%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="17.8888%" y="517" width="0.4029%" height="15" fill="rgb(243,139,5)" fg:x="222" fg:w="5"/><text x="18.1388%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="17.8888%" y="501" width="0.4029%" height="15" fill="rgb(249,38,45)" fg:x="222" fg:w="5"/><text x="18.1388%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.2111%" y="485" width="0.0806%" height="15" fill="rgb(216,70,11)" fg:x="226" fg:w="1"/><text x="18.4611%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2111%" y="469" width="0.0806%" height="15" fill="rgb(253,101,25)" fg:x="226" fg:w="1"/><text x="18.4611%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.2111%" y="453" width="0.0806%" height="15" fill="rgb(207,197,30)" fg:x="226" fg:w="1"/><text x="18.4611%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2111%" y="437" width="0.0806%" height="15" fill="rgb(238,87,13)" fg:x="226" fg:w="1"/><text x="18.4611%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (18 samples, 1.45%)</title><rect x="16.9218%" y="581" width="1.4504%" height="15" fill="rgb(215,155,8)" fg:x="210" fg:w="18"/><text x="17.1718%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.2917%" y="565" width="0.0806%" height="15" fill="rgb(239,166,38)" fg:x="227" fg:w="1"/><text x="18.5417%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.2917%" y="549" width="0.0806%" height="15" fill="rgb(240,194,35)" fg:x="227" fg:w="1"/><text x="18.5417%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2917%" y="533" width="0.0806%" height="15" fill="rgb(219,10,44)" fg:x="227" fg:w="1"/><text x="18.5417%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2917%" y="517" width="0.0806%" height="15" fill="rgb(251,220,35)" fg:x="227" fg:w="1"/><text x="18.5417%" y="527.50"></text></g><g><title>plugins_core::build::Build::leads_to (19 samples, 1.53%)</title><rect x="16.9218%" y="597" width="1.5310%" height="15" fill="rgb(218,117,13)" fg:x="210" fg:w="19"/><text x="17.1718%" y="607.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="18.3723%" y="581" width="0.0806%" height="15" fill="rgb(221,213,40)" fg:x="228" fg:w="1"/><text x="18.6223%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="18.3723%" y="565" width="0.0806%" height="15" fill="rgb(251,224,35)" fg:x="228" fg:w="1"/><text x="18.6223%" y="575.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="18.3723%" y="549" width="0.0806%" height="15" fill="rgb(241,33,39)" fg:x="228" fg:w="1"/><text x="18.6223%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="18.3723%" y="533" width="0.0806%" height="15" fill="rgb(222,74,17)" fg:x="228" fg:w="1"/><text x="18.6223%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.3723%" y="517" width="0.0806%" height="15" fill="rgb(225,103,0)" fg:x="228" fg:w="1"/><text x="18.6223%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.3723%" y="501" width="0.0806%" height="15" fill="rgb(240,0,12)" fg:x="228" fg:w="1"/><text x="18.6223%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.3723%" y="485" width="0.0806%" height="15" fill="rgb(233,213,37)" fg:x="228" fg:w="1"/><text x="18.6223%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.3723%" y="469" width="0.0806%" height="15" fill="rgb(225,84,52)" fg:x="228" fg:w="1"/><text x="18.6223%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3723%" y="453" width="0.0806%" height="15" fill="rgb(247,160,51)" fg:x="228" fg:w="1"/><text x="18.6223%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3723%" y="437" width="0.0806%" height="15" fill="rgb(244,60,51)" fg:x="228" fg:w="1"/><text x="18.6223%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.3723%" y="421" width="0.0806%" height="15" fill="rgb(233,114,7)" fg:x="228" fg:w="1"/><text x="18.6223%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.3723%" y="405" width="0.0806%" height="15" fill="rgb(246,136,16)" fg:x="228" fg:w="1"/><text x="18.6223%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.3723%" y="389" width="0.0806%" height="15" fill="rgb(243,114,45)" fg:x="228" fg:w="1"/><text x="18.6223%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3723%" y="373" width="0.0806%" height="15" fill="rgb(247,183,43)" fg:x="228" fg:w="1"/><text x="18.6223%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3723%" y="357" width="0.0806%" height="15" fill="rgb(251,210,42)" fg:x="228" fg:w="1"/><text x="18.6223%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.3723%" y="341" width="0.0806%" height="15" fill="rgb(221,88,35)" fg:x="228" fg:w="1"/><text x="18.6223%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.3723%" y="325" width="0.0806%" height="15" fill="rgb(242,21,20)" fg:x="228" fg:w="1"/><text x="18.6223%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.3723%" y="309" width="0.0806%" height="15" fill="rgb(233,226,36)" fg:x="228" fg:w="1"/><text x="18.6223%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.3723%" y="293" width="0.0806%" height="15" fill="rgb(243,189,34)" fg:x="228" fg:w="1"/><text x="18.6223%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.3723%" y="277" width="0.0806%" height="15" fill="rgb(207,145,50)" fg:x="228" fg:w="1"/><text x="18.6223%" y="287.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="18.4529%" y="597" width="0.0806%" height="15" fill="rgb(242,1,50)" fg:x="229" fg:w="1"/><text x="18.7029%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="18.4529%" y="581" width="0.0806%" height="15" fill="rgb(231,65,32)" fg:x="229" fg:w="1"/><text x="18.7029%" y="591.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="18.4529%" y="565" width="0.0806%" height="15" fill="rgb(208,68,49)" fg:x="229" fg:w="1"/><text x="18.7029%" y="575.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="18.4529%" y="549" width="0.0806%" height="15" fill="rgb(253,54,49)" fg:x="229" fg:w="1"/><text x="18.7029%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (24 samples, 1.93%)</title><rect x="16.6801%" y="645" width="1.9339%" height="15" fill="rgb(245,186,24)" fg:x="207" fg:w="24"/><text x="16.9301%" y="655.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 1.93%)</title><rect x="16.6801%" y="629" width="1.9339%" height="15" fill="rgb(209,2,41)" fg:x="207" fg:w="24"/><text x="16.9301%" y="639.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (24 samples, 1.93%)</title><rect x="16.6801%" y="613" width="1.9339%" height="15" fill="rgb(242,208,54)" fg:x="207" fg:w="24"/><text x="16.9301%" y="623.50">p..</text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="18.5334%" y="597" width="0.0806%" height="15" fill="rgb(225,9,51)" fg:x="230" fg:w="1"/><text x="18.7834%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5334%" y="581" width="0.0806%" height="15" fill="rgb(207,207,25)" fg:x="230" fg:w="1"/><text x="18.7834%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5334%" y="565" width="0.0806%" height="15" fill="rgb(253,96,18)" fg:x="230" fg:w="1"/><text x="18.7834%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.5334%" y="549" width="0.0806%" height="15" fill="rgb(252,215,20)" fg:x="230" fg:w="1"/><text x="18.7834%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.5334%" y="533" width="0.0806%" height="15" fill="rgb(245,227,26)" fg:x="230" fg:w="1"/><text x="18.7834%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.5334%" y="517" width="0.0806%" height="15" fill="rgb(241,208,0)" fg:x="230" fg:w="1"/><text x="18.7834%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="18.5334%" y="501" width="0.0806%" height="15" fill="rgb(224,130,10)" fg:x="230" fg:w="1"/><text x="18.7834%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.5334%" y="485" width="0.0806%" height="15" fill="rgb(237,29,0)" fg:x="230" fg:w="1"/><text x="18.7834%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="18.6140%" y="629" width="0.0806%" height="15" fill="rgb(219,27,41)" fg:x="231" fg:w="1"/><text x="18.8640%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6140%" y="613" width="0.0806%" height="15" fill="rgb(245,101,19)" fg:x="231" fg:w="1"/><text x="18.8640%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6140%" y="597" width="0.0806%" height="15" fill="rgb(243,44,37)" fg:x="231" fg:w="1"/><text x="18.8640%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.6140%" y="581" width="0.0806%" height="15" fill="rgb(228,213,43)" fg:x="231" fg:w="1"/><text x="18.8640%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.6140%" y="565" width="0.0806%" height="15" fill="rgb(219,163,21)" fg:x="231" fg:w="1"/><text x="18.8640%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.6140%" y="549" width="0.0806%" height="15" fill="rgb(234,86,24)" fg:x="231" fg:w="1"/><text x="18.8640%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.6140%" y="533" width="0.0806%" height="15" fill="rgb(225,10,24)" fg:x="231" fg:w="1"/><text x="18.8640%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.6140%" y="517" width="0.0806%" height="15" fill="rgb(218,109,7)" fg:x="231" fg:w="1"/><text x="18.8640%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.6140%" y="501" width="0.0806%" height="15" fill="rgb(210,20,26)" fg:x="231" fg:w="1"/><text x="18.8640%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.6140%" y="485" width="0.0806%" height="15" fill="rgb(216,18,1)" fg:x="231" fg:w="1"/><text x="18.8640%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.6140%" y="469" width="0.0806%" height="15" fill="rgb(206,163,23)" fg:x="231" fg:w="1"/><text x="18.8640%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.6140%" y="453" width="0.0806%" height="15" fill="rgb(229,150,31)" fg:x="231" fg:w="1"/><text x="18.8640%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6140%" y="437" width="0.0806%" height="15" fill="rgb(231,10,5)" fg:x="231" fg:w="1"/><text x="18.8640%" y="447.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="18.6946%" y="613" width="0.1612%" height="15" fill="rgb(250,40,50)" fg:x="232" fg:w="2"/><text x="18.9446%" y="623.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="18.6946%" y="597" width="0.1612%" height="15" fill="rgb(217,119,7)" fg:x="232" fg:w="2"/><text x="18.9446%" y="607.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="18.6946%" y="581" width="0.1612%" height="15" fill="rgb(245,214,40)" fg:x="232" fg:w="2"/><text x="18.9446%" y="591.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="18.6946%" y="565" width="0.1612%" height="15" fill="rgb(216,187,1)" fg:x="232" fg:w="2"/><text x="18.9446%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="18.6946%" y="549" width="0.1612%" height="15" fill="rgb(237,146,21)" fg:x="232" fg:w="2"/><text x="18.9446%" y="559.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="18.6946%" y="533" width="0.1612%" height="15" fill="rgb(210,174,47)" fg:x="232" fg:w="2"/><text x="18.9446%" y="543.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="18.6946%" y="517" width="0.1612%" height="15" fill="rgb(218,111,39)" fg:x="232" fg:w="2"/><text x="18.9446%" y="527.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="18.7752%" y="501" width="0.0806%" height="15" fill="rgb(224,95,19)" fg:x="233" fg:w="1"/><text x="19.0252%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="18.9363%" y="581" width="0.1612%" height="15" fill="rgb(234,15,38)" fg:x="235" fg:w="2"/><text x="19.1863%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="18.9363%" y="565" width="0.1612%" height="15" fill="rgb(246,56,12)" fg:x="235" fg:w="2"/><text x="19.1863%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="19.0169%" y="549" width="0.0806%" height="15" fill="rgb(247,16,17)" fg:x="236" fg:w="1"/><text x="19.2669%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0169%" y="533" width="0.0806%" height="15" fill="rgb(215,151,11)" fg:x="236" fg:w="1"/><text x="19.2669%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="19.1781%" y="469" width="0.1612%" height="15" fill="rgb(225,16,24)" fg:x="238" fg:w="2"/><text x="19.4281%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="19.1781%" y="453" width="0.1612%" height="15" fill="rgb(217,117,5)" fg:x="238" fg:w="2"/><text x="19.4281%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.2587%" y="437" width="0.0806%" height="15" fill="rgb(246,187,53)" fg:x="239" fg:w="1"/><text x="19.5087%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.2587%" y="421" width="0.0806%" height="15" fill="rgb(241,71,40)" fg:x="239" fg:w="1"/><text x="19.5087%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.2587%" y="405" width="0.0806%" height="15" fill="rgb(231,67,39)" fg:x="239" fg:w="1"/><text x="19.5087%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="19.1781%" y="501" width="0.2417%" height="15" fill="rgb(222,120,24)" fg:x="238" fg:w="3"/><text x="19.4281%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="19.1781%" y="485" width="0.2417%" height="15" fill="rgb(248,3,3)" fg:x="238" fg:w="3"/><text x="19.4281%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.3392%" y="469" width="0.0806%" height="15" fill="rgb(228,218,5)" fg:x="240" fg:w="1"/><text x="19.5892%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.3392%" y="453" width="0.0806%" height="15" fill="rgb(212,202,43)" fg:x="240" fg:w="1"/><text x="19.5892%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.3392%" y="437" width="0.0806%" height="15" fill="rgb(235,183,2)" fg:x="240" fg:w="1"/><text x="19.5892%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.3392%" y="421" width="0.0806%" height="15" fill="rgb(230,165,10)" fg:x="240" fg:w="1"/><text x="19.5892%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.3392%" y="405" width="0.0806%" height="15" fill="rgb(219,54,40)" fg:x="240" fg:w="1"/><text x="19.5892%" y="415.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="19.3392%" y="389" width="0.0806%" height="15" fill="rgb(244,73,9)" fg:x="240" fg:w="1"/><text x="19.5892%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="19.3392%" y="373" width="0.0806%" height="15" fill="rgb(212,32,45)" fg:x="240" fg:w="1"/><text x="19.5892%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.4198%" y="437" width="0.0806%" height="15" fill="rgb(205,58,31)" fg:x="241" fg:w="1"/><text x="19.6698%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.4198%" y="501" width="0.1612%" height="15" fill="rgb(250,120,43)" fg:x="241" fg:w="2"/><text x="19.6698%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="19.4198%" y="485" width="0.1612%" height="15" fill="rgb(235,13,10)" fg:x="241" fg:w="2"/><text x="19.6698%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.4198%" y="469" width="0.1612%" height="15" fill="rgb(232,219,31)" fg:x="241" fg:w="2"/><text x="19.6698%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.4198%" y="453" width="0.1612%" height="15" fill="rgb(218,157,51)" fg:x="241" fg:w="2"/><text x="19.6698%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.5004%" y="437" width="0.0806%" height="15" fill="rgb(211,91,52)" fg:x="242" fg:w="1"/><text x="19.7504%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.5004%" y="421" width="0.0806%" height="15" fill="rgb(240,173,1)" fg:x="242" fg:w="1"/><text x="19.7504%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="19.5004%" y="405" width="0.0806%" height="15" fill="rgb(248,20,47)" fg:x="242" fg:w="1"/><text x="19.7504%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="19.6616%" y="453" width="0.2417%" height="15" fill="rgb(217,221,40)" fg:x="244" fg:w="3"/><text x="19.9116%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="19.6616%" y="437" width="0.2417%" height="15" fill="rgb(226,149,51)" fg:x="244" fg:w="3"/><text x="19.9116%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8227%" y="421" width="0.0806%" height="15" fill="rgb(252,193,7)" fg:x="246" fg:w="1"/><text x="20.0727%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9033%" y="437" width="0.0806%" height="15" fill="rgb(205,123,0)" fg:x="247" fg:w="1"/><text x="20.1533%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9033%" y="421" width="0.0806%" height="15" fill="rgb(233,173,25)" fg:x="247" fg:w="1"/><text x="20.1533%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9839%" y="405" width="0.0806%" height="15" fill="rgb(216,63,32)" fg:x="248" fg:w="1"/><text x="20.2339%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.05%)</title><rect x="19.0975%" y="533" width="1.0475%" height="15" fill="rgb(209,56,45)" fg:x="237" fg:w="13"/><text x="19.3475%" y="543.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (13 samples, 1.05%)</title><rect x="19.0975%" y="517" width="1.0475%" height="15" fill="rgb(226,111,49)" fg:x="237" fg:w="13"/><text x="19.3475%" y="527.50"></text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.56%)</title><rect x="19.5810%" y="501" width="0.5641%" height="15" fill="rgb(244,181,21)" fg:x="243" fg:w="7"/><text x="19.8310%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (7 samples, 0.56%)</title><rect x="19.5810%" y="485" width="0.5641%" height="15" fill="rgb(222,126,15)" fg:x="243" fg:w="7"/><text x="19.8310%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="19.5810%" y="469" width="0.5641%" height="15" fill="rgb(222,95,17)" fg:x="243" fg:w="7"/><text x="19.8310%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="19.9033%" y="453" width="0.2417%" height="15" fill="rgb(254,46,5)" fg:x="247" fg:w="3"/><text x="20.1533%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="19.9839%" y="437" width="0.1612%" height="15" fill="rgb(236,216,35)" fg:x="248" fg:w="2"/><text x="20.2339%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="19.9839%" y="421" width="0.1612%" height="15" fill="rgb(217,187,26)" fg:x="248" fg:w="2"/><text x="20.2339%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="20.0645%" y="405" width="0.0806%" height="15" fill="rgb(207,192,25)" fg:x="249" fg:w="1"/><text x="20.3145%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.0645%" y="389" width="0.0806%" height="15" fill="rgb(253,135,27)" fg:x="249" fg:w="1"/><text x="20.3145%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.1450%" y="485" width="0.0806%" height="15" fill="rgb(211,122,29)" fg:x="250" fg:w="1"/><text x="20.3950%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.1450%" y="469" width="0.0806%" height="15" fill="rgb(233,162,40)" fg:x="250" fg:w="1"/><text x="20.3950%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="20.1450%" y="501" width="0.3223%" height="15" fill="rgb(222,184,47)" fg:x="250" fg:w="4"/><text x="20.3950%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="20.2256%" y="485" width="0.2417%" height="15" fill="rgb(249,99,23)" fg:x="251" fg:w="3"/><text x="20.4756%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="20.2256%" y="469" width="0.2417%" height="15" fill="rgb(214,60,12)" fg:x="251" fg:w="3"/><text x="20.4756%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.3062%" y="453" width="0.1612%" height="15" fill="rgb(250,229,36)" fg:x="252" fg:w="2"/><text x="20.5562%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="20.5479%" y="485" width="0.0806%" height="15" fill="rgb(232,195,10)" fg:x="255" fg:w="1"/><text x="20.7979%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="20.6285%" y="485" width="0.4029%" height="15" fill="rgb(205,213,31)" fg:x="256" fg:w="5"/><text x="20.8785%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="20.7091%" y="469" width="0.3223%" height="15" fill="rgb(237,43,8)" fg:x="257" fg:w="4"/><text x="20.9591%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.8703%" y="453" width="0.1612%" height="15" fill="rgb(216,208,3)" fg:x="259" fg:w="2"/><text x="21.1203%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.9508%" y="437" width="0.0806%" height="15" fill="rgb(228,179,44)" fg:x="260" fg:w="1"/><text x="21.2008%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="21.1120%" y="469" width="0.2417%" height="15" fill="rgb(230,192,27)" fg:x="262" fg:w="3"/><text x="21.3620%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="21.1120%" y="453" width="0.2417%" height="15" fill="rgb(251,30,38)" fg:x="262" fg:w="3"/><text x="21.3620%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="21.1120%" y="437" width="0.2417%" height="15" fill="rgb(246,55,52)" fg:x="262" fg:w="3"/><text x="21.3620%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="21.1120%" y="421" width="0.2417%" height="15" fill="rgb(249,79,26)" fg:x="262" fg:w="3"/><text x="21.3620%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.2732%" y="405" width="0.0806%" height="15" fill="rgb(220,202,16)" fg:x="264" fg:w="1"/><text x="21.5232%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.2732%" y="389" width="0.0806%" height="15" fill="rgb(250,170,23)" fg:x="264" fg:w="1"/><text x="21.5232%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.2732%" y="373" width="0.0806%" height="15" fill="rgb(230,7,37)" fg:x="264" fg:w="1"/><text x="21.5232%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.2732%" y="357" width="0.0806%" height="15" fill="rgb(213,71,1)" fg:x="264" fg:w="1"/><text x="21.5232%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="21.2732%" y="341" width="0.0806%" height="15" fill="rgb(227,87,39)" fg:x="264" fg:w="1"/><text x="21.5232%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="21.3537%" y="469" width="0.4029%" height="15" fill="rgb(210,41,29)" fg:x="265" fg:w="5"/><text x="21.6037%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="21.4343%" y="453" width="0.3223%" height="15" fill="rgb(206,191,31)" fg:x="266" fg:w="4"/><text x="21.6843%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="21.5149%" y="437" width="0.2417%" height="15" fill="rgb(247,75,54)" fg:x="267" fg:w="3"/><text x="21.7649%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="21.5149%" y="421" width="0.2417%" height="15" fill="rgb(208,54,50)" fg:x="267" fg:w="3"/><text x="21.7649%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.6761%" y="405" width="0.0806%" height="15" fill="rgb(214,90,37)" fg:x="269" fg:w="1"/><text x="21.9261%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.6761%" y="389" width="0.0806%" height="15" fill="rgb(220,132,6)" fg:x="269" fg:w="1"/><text x="21.9261%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="21.6761%" y="373" width="0.0806%" height="15" fill="rgb(213,167,7)" fg:x="269" fg:w="1"/><text x="21.9261%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="21.7566%" y="453" width="0.0806%" height="15" fill="rgb(243,36,27)" fg:x="270" fg:w="1"/><text x="22.0066%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.7566%" y="437" width="0.0806%" height="15" fill="rgb(235,147,12)" fg:x="270" fg:w="1"/><text x="22.0066%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.7566%" y="421" width="0.0806%" height="15" fill="rgb(212,198,44)" fg:x="270" fg:w="1"/><text x="22.0066%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.7566%" y="405" width="0.0806%" height="15" fill="rgb(218,68,50)" fg:x="270" fg:w="1"/><text x="22.0066%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="21.8372%" y="437" width="0.2417%" height="15" fill="rgb(224,79,48)" fg:x="271" fg:w="3"/><text x="22.0872%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="21.8372%" y="421" width="0.2417%" height="15" fill="rgb(213,191,50)" fg:x="271" fg:w="3"/><text x="22.0872%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.9984%" y="405" width="0.0806%" height="15" fill="rgb(254,146,10)" fg:x="273" fg:w="1"/><text x="22.2484%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.9984%" y="389" width="0.0806%" height="15" fill="rgb(215,175,11)" fg:x="273" fg:w="1"/><text x="22.2484%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="21.8372%" y="453" width="0.4029%" height="15" fill="rgb(207,49,7)" fg:x="271" fg:w="5"/><text x="22.0872%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="22.0790%" y="437" width="0.1612%" height="15" fill="rgb(234,144,29)" fg:x="274" fg:w="2"/><text x="22.3290%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.0790%" y="421" width="0.1612%" height="15" fill="rgb(213,222,48)" fg:x="274" fg:w="2"/><text x="22.3290%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="21.0314%" y="485" width="1.2893%" height="15" fill="rgb(222,8,6)" fg:x="261" fg:w="16"/><text x="21.2814%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="21.7566%" y="469" width="0.5641%" height="15" fill="rgb(221,114,49)" fg:x="270" fg:w="7"/><text x="22.0066%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.2401%" y="453" width="0.0806%" height="15" fill="rgb(250,140,42)" fg:x="276" fg:w="1"/><text x="22.4901%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.2401%" y="437" width="0.0806%" height="15" fill="rgb(250,150,27)" fg:x="276" fg:w="1"/><text x="22.4901%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.93%)</title><rect x="20.4674%" y="501" width="1.9339%" height="15" fill="rgb(252,159,3)" fg:x="254" fg:w="24"/><text x="20.7174%" y="511.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.3207%" y="485" width="0.0806%" height="15" fill="rgb(241,182,3)" fg:x="277" fg:w="1"/><text x="22.5707%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.3207%" y="469" width="0.0806%" height="15" fill="rgb(236,3,9)" fg:x="277" fg:w="1"/><text x="22.5707%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.3207%" y="453" width="0.0806%" height="15" fill="rgb(223,227,51)" fg:x="277" fg:w="1"/><text x="22.5707%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.3207%" y="437" width="0.0806%" height="15" fill="rgb(232,133,30)" fg:x="277" fg:w="1"/><text x="22.5707%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.3207%" y="421" width="0.0806%" height="15" fill="rgb(209,93,27)" fg:x="277" fg:w="1"/><text x="22.5707%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="22.3207%" y="405" width="0.0806%" height="15" fill="rgb(208,108,34)" fg:x="277" fg:w="1"/><text x="22.5707%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.34%)</title><rect x="20.1450%" y="517" width="2.3368%" height="15" fill="rgb(215,189,13)" fg:x="250" fg:w="29"/><text x="20.3950%" y="527.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.4013%" y="501" width="0.0806%" height="15" fill="rgb(206,88,23)" fg:x="278" fg:w="1"/><text x="22.6513%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.4013%" y="485" width="0.0806%" height="15" fill="rgb(240,173,0)" fg:x="278" fg:w="1"/><text x="22.6513%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.4013%" y="469" width="0.0806%" height="15" fill="rgb(223,106,52)" fg:x="278" fg:w="1"/><text x="22.6513%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.4013%" y="453" width="0.0806%" height="15" fill="rgb(206,130,16)" fg:x="278" fg:w="1"/><text x="22.6513%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.4013%" y="437" width="0.0806%" height="15" fill="rgb(220,54,25)" fg:x="278" fg:w="1"/><text x="22.6513%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.4013%" y="421" width="0.0806%" height="15" fill="rgb(210,4,38)" fg:x="278" fg:w="1"/><text x="22.6513%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.5624%" y="485" width="0.0806%" height="15" fill="rgb(238,94,39)" fg:x="280" fg:w="1"/><text x="22.8124%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.6430%" y="469" width="0.0806%" height="15" fill="rgb(234,124,34)" fg:x="281" fg:w="1"/><text x="22.8930%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.7236%" y="453" width="0.0806%" height="15" fill="rgb(221,91,40)" fg:x="282" fg:w="1"/><text x="22.9736%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.8848%" y="437" width="0.0806%" height="15" fill="rgb(246,53,28)" fg:x="284" fg:w="1"/><text x="23.1348%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="22.9654%" y="437" width="0.0806%" height="15" fill="rgb(229,109,7)" fg:x="285" fg:w="1"/><text x="23.2154%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.9654%" y="421" width="0.0806%" height="15" fill="rgb(249,117,8)" fg:x="285" fg:w="1"/><text x="23.2154%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.9654%" y="405" width="0.0806%" height="15" fill="rgb(210,181,1)" fg:x="285" fg:w="1"/><text x="23.2154%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="22.4819%" y="517" width="0.6446%" height="15" fill="rgb(211,66,1)" fg:x="279" fg:w="8"/><text x="22.7319%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="22.4819%" y="501" width="0.6446%" height="15" fill="rgb(221,90,14)" fg:x="279" fg:w="8"/><text x="22.7319%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="22.6430%" y="485" width="0.4835%" height="15" fill="rgb(219,222,44)" fg:x="281" fg:w="6"/><text x="22.8930%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="22.7236%" y="469" width="0.4029%" height="15" fill="rgb(246,34,33)" fg:x="282" fg:w="5"/><text x="22.9736%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="22.8042%" y="453" width="0.3223%" height="15" fill="rgb(227,135,41)" fg:x="283" fg:w="4"/><text x="23.0542%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.0459%" y="437" width="0.0806%" height="15" fill="rgb(226,15,14)" fg:x="286" fg:w="1"/><text x="23.2959%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.0459%" y="421" width="0.0806%" height="15" fill="rgb(236,148,47)" fg:x="286" fg:w="1"/><text x="23.2959%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.1265%" y="469" width="0.0806%" height="15" fill="rgb(233,162,52)" fg:x="287" fg:w="1"/><text x="23.3765%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="23.2071%" y="469" width="0.2417%" height="15" fill="rgb(244,35,28)" fg:x="288" fg:w="3"/><text x="23.4571%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.2877%" y="453" width="0.1612%" height="15" fill="rgb(205,121,10)" fg:x="289" fg:w="2"/><text x="23.5377%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4488%" y="469" width="0.0806%" height="15" fill="rgb(250,58,18)" fg:x="291" fg:w="1"/><text x="23.6988%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="23.4488%" y="453" width="0.0806%" height="15" fill="rgb(216,37,13)" fg:x="291" fg:w="1"/><text x="23.6988%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="23.5294%" y="453" width="0.1612%" height="15" fill="rgb(221,215,42)" fg:x="292" fg:w="2"/><text x="23.7794%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.8517%" y="421" width="0.0806%" height="15" fill="rgb(217,214,19)" fg:x="296" fg:w="1"/><text x="24.1017%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.8517%" y="405" width="0.0806%" height="15" fill="rgb(233,139,13)" fg:x="296" fg:w="1"/><text x="24.1017%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8517%" y="389" width="0.0806%" height="15" fill="rgb(247,168,23)" fg:x="296" fg:w="1"/><text x="24.1017%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.9323%" y="421" width="0.0806%" height="15" fill="rgb(207,202,1)" fg:x="297" fg:w="1"/><text x="24.1823%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="23.9323%" y="405" width="0.0806%" height="15" fill="rgb(220,155,48)" fg:x="297" fg:w="1"/><text x="24.1823%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.9323%" y="389" width="0.0806%" height="15" fill="rgb(250,43,26)" fg:x="297" fg:w="1"/><text x="24.1823%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9323%" y="373" width="0.0806%" height="15" fill="rgb(212,190,23)" fg:x="297" fg:w="1"/><text x="24.1823%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.1741%" y="357" width="0.1612%" height="15" fill="rgb(216,39,24)" fg:x="300" fg:w="2"/><text x="24.4241%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="24.0935%" y="389" width="0.3223%" height="15" fill="rgb(252,113,16)" fg:x="299" fg:w="4"/><text x="24.3435%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.1741%" y="373" width="0.2417%" height="15" fill="rgb(208,113,19)" fg:x="300" fg:w="3"/><text x="24.4241%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="24.3352%" y="357" width="0.0806%" height="15" fill="rgb(234,107,25)" fg:x="302" fg:w="1"/><text x="24.5852%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="24.4964%" y="373" width="0.2417%" height="15" fill="rgb(234,217,51)" fg:x="304" fg:w="3"/><text x="24.7464%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.6575%" y="357" width="0.0806%" height="15" fill="rgb(251,29,42)" fg:x="306" fg:w="1"/><text x="24.9075%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.73%)</title><rect x="24.0935%" y="405" width="0.7252%" height="15" fill="rgb(221,62,51)" fg:x="299" fg:w="9"/><text x="24.3435%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="24.4158%" y="389" width="0.4029%" height="15" fill="rgb(240,192,43)" fg:x="303" fg:w="5"/><text x="24.6658%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7381%" y="373" width="0.0806%" height="15" fill="rgb(224,157,47)" fg:x="307" fg:w="1"/><text x="24.9881%" y="383.50"></text></g><g><title>engine::session::Session::flush (78 samples, 6.29%)</title><rect x="18.6140%" y="645" width="6.2853%" height="15" fill="rgb(226,84,45)" fg:x="231" fg:w="78"/><text x="18.8640%" y="655.50">engine::..</text></g><g><title>engine::session::Session::save_changes (77 samples, 6.20%)</title><rect x="18.6946%" y="629" width="6.2047%" height="15" fill="rgb(208,207,23)" fg:x="232" fg:w="77"/><text x="18.9446%" y="639.50">engine::..</text></g><g><title>engine::session::state::State::close (75 samples, 6.04%)</title><rect x="18.8558%" y="613" width="6.0435%" height="15" fill="rgb(253,34,51)" fg:x="234" fg:w="75"/><text x="19.1058%" y="623.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (74 samples, 5.96%)</title><rect x="18.9363%" y="597" width="5.9629%" height="15" fill="rgb(227,26,34)" fg:x="235" fg:w="74"/><text x="19.1863%" y="607.50">engine::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (72 samples, 5.80%)</title><rect x="19.0975%" y="581" width="5.8018%" height="15" fill="rgb(245,75,19)" fg:x="237" fg:w="72"/><text x="19.3475%" y="591.50">engine:..</text></g><g><title>core::iter::adapters::try_process (72 samples, 5.80%)</title><rect x="19.0975%" y="565" width="5.8018%" height="15" fill="rgb(250,191,31)" fg:x="237" fg:w="72"/><text x="19.3475%" y="575.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (72 samples, 5.80%)</title><rect x="19.0975%" y="549" width="5.8018%" height="15" fill="rgb(224,11,50)" fg:x="237" fg:w="72"/><text x="19.3475%" y="559.50">&lt;alloc:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (59 samples, 4.75%)</title><rect x="20.1450%" y="533" width="4.7542%" height="15" fill="rgb(231,171,7)" fg:x="250" fg:w="59"/><text x="20.3950%" y="543.50">engine..</text></g><g><title>kernel::model::any_entity_changes (22 samples, 1.77%)</title><rect x="23.1265%" y="517" width="1.7728%" height="15" fill="rgb(252,214,10)" fg:x="287" fg:w="22"/><text x="23.3765%" y="527.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (22 samples, 1.77%)</title><rect x="23.1265%" y="501" width="1.7728%" height="15" fill="rgb(249,45,46)" fg:x="287" fg:w="22"/><text x="23.3765%" y="511.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.77%)</title><rect x="23.1265%" y="485" width="1.7728%" height="15" fill="rgb(240,173,7)" fg:x="287" fg:w="22"/><text x="23.3765%" y="495.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 1.37%)</title><rect x="23.5294%" y="469" width="1.3699%" height="15" fill="rgb(235,214,13)" fg:x="292" fg:w="17"/><text x="23.7794%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="23.6906%" y="453" width="1.2087%" height="15" fill="rgb(245,156,8)" fg:x="294" fg:w="15"/><text x="23.9406%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.21%)</title><rect x="23.6906%" y="437" width="1.2087%" height="15" fill="rgb(235,46,12)" fg:x="294" fg:w="15"/><text x="23.9406%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="24.0129%" y="421" width="0.8864%" height="15" fill="rgb(221,81,14)" fg:x="298" fg:w="11"/><text x="24.2629%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.8187%" y="405" width="0.0806%" height="15" fill="rgb(238,207,9)" fg:x="308" fg:w="1"/><text x="25.0687%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="24.8993%" y="613" width="0.0806%" height="15" fill="rgb(224,129,35)" fg:x="309" fg:w="1"/><text x="25.1493%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="24.8993%" y="597" width="0.0806%" height="15" fill="rgb(243,218,34)" fg:x="309" fg:w="1"/><text x="25.1493%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.9799%" y="549" width="0.0806%" height="15" fill="rgb(220,166,13)" fg:x="310" fg:w="1"/><text x="25.2299%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.9799%" y="533" width="0.0806%" height="15" fill="rgb(227,167,49)" fg:x="310" fg:w="1"/><text x="25.2299%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.9799%" y="517" width="0.0806%" height="15" fill="rgb(234,142,12)" fg:x="310" fg:w="1"/><text x="25.2299%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="25.0604%" y="485" width="0.0806%" height="15" fill="rgb(207,100,48)" fg:x="311" fg:w="1"/><text x="25.3104%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="24.9799%" y="581" width="0.2417%" height="15" fill="rgb(210,25,14)" fg:x="310" fg:w="3"/><text x="25.2299%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="24.9799%" y="565" width="0.2417%" height="15" fill="rgb(246,116,27)" fg:x="310" fg:w="3"/><text x="25.2299%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.0604%" y="549" width="0.1612%" height="15" fill="rgb(214,193,42)" fg:x="311" fg:w="2"/><text x="25.3104%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.0604%" y="533" width="0.1612%" height="15" fill="rgb(214,122,8)" fg:x="311" fg:w="2"/><text x="25.3104%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="25.0604%" y="517" width="0.1612%" height="15" fill="rgb(244,173,18)" fg:x="311" fg:w="2"/><text x="25.3104%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.0604%" y="501" width="0.1612%" height="15" fill="rgb(232,68,19)" fg:x="311" fg:w="2"/><text x="25.3104%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.1410%" y="485" width="0.0806%" height="15" fill="rgb(236,224,1)" fg:x="312" fg:w="1"/><text x="25.3910%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.1410%" y="469" width="0.0806%" height="15" fill="rgb(240,11,8)" fg:x="312" fg:w="1"/><text x="25.3910%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.3022%" y="549" width="0.0806%" height="15" fill="rgb(244,159,20)" fg:x="314" fg:w="1"/><text x="25.5522%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.3022%" y="533" width="0.0806%" height="15" fill="rgb(240,223,54)" fg:x="314" fg:w="1"/><text x="25.5522%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="24.9799%" y="613" width="0.4835%" height="15" fill="rgb(237,146,5)" fg:x="310" fg:w="6"/><text x="25.2299%" y="623.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="24.9799%" y="597" width="0.4835%" height="15" fill="rgb(218,221,32)" fg:x="310" fg:w="6"/><text x="25.2299%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="25.2216%" y="581" width="0.2417%" height="15" fill="rgb(244,96,26)" fg:x="313" fg:w="3"/><text x="25.4716%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="25.2216%" y="565" width="0.2417%" height="15" fill="rgb(245,184,37)" fg:x="313" fg:w="3"/><text x="25.4716%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.3828%" y="549" width="0.0806%" height="15" fill="rgb(248,91,47)" fg:x="315" fg:w="1"/><text x="25.6328%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.3828%" y="533" width="0.0806%" height="15" fill="rgb(243,199,8)" fg:x="315" fg:w="1"/><text x="25.6328%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.3828%" y="517" width="0.0806%" height="15" fill="rgb(249,12,15)" fg:x="315" fg:w="1"/><text x="25.6328%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="25.4633%" y="613" width="0.0806%" height="15" fill="rgb(245,97,12)" fg:x="316" fg:w="1"/><text x="25.7133%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.4633%" y="597" width="0.0806%" height="15" fill="rgb(244,61,1)" fg:x="316" fg:w="1"/><text x="25.7133%" y="607.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="25.4633%" y="581" width="0.0806%" height="15" fill="rgb(222,194,10)" fg:x="316" fg:w="1"/><text x="25.7133%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="25.4633%" y="565" width="0.0806%" height="15" fill="rgb(226,178,8)" fg:x="316" fg:w="1"/><text x="25.7133%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="25.5439%" y="549" width="0.1612%" height="15" fill="rgb(241,32,34)" fg:x="317" fg:w="2"/><text x="25.7939%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="25.5439%" y="565" width="0.2417%" height="15" fill="rgb(254,26,6)" fg:x="317" fg:w="3"/><text x="25.7939%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.7051%" y="549" width="0.0806%" height="15" fill="rgb(249,71,11)" fg:x="319" fg:w="1"/><text x="25.9551%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7051%" y="533" width="0.0806%" height="15" fill="rgb(232,170,27)" fg:x="319" fg:w="1"/><text x="25.9551%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7051%" y="517" width="0.0806%" height="15" fill="rgb(214,223,17)" fg:x="319" fg:w="1"/><text x="25.9551%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7051%" y="501" width="0.0806%" height="15" fill="rgb(250,18,15)" fg:x="319" fg:w="1"/><text x="25.9551%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.7051%" y="485" width="0.0806%" height="15" fill="rgb(212,153,51)" fg:x="319" fg:w="1"/><text x="25.9551%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.7051%" y="469" width="0.0806%" height="15" fill="rgb(219,194,12)" fg:x="319" fg:w="1"/><text x="25.9551%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.7051%" y="453" width="0.0806%" height="15" fill="rgb(212,58,17)" fg:x="319" fg:w="1"/><text x="25.9551%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.7051%" y="437" width="0.0806%" height="15" fill="rgb(254,5,10)" fg:x="319" fg:w="1"/><text x="25.9551%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.7051%" y="421" width="0.0806%" height="15" fill="rgb(246,91,7)" fg:x="319" fg:w="1"/><text x="25.9551%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.7051%" y="405" width="0.0806%" height="15" fill="rgb(218,108,49)" fg:x="319" fg:w="1"/><text x="25.9551%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.7051%" y="389" width="0.0806%" height="15" fill="rgb(238,123,20)" fg:x="319" fg:w="1"/><text x="25.9551%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.7051%" y="373" width="0.0806%" height="15" fill="rgb(231,69,23)" fg:x="319" fg:w="1"/><text x="25.9551%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.7051%" y="357" width="0.0806%" height="15" fill="rgb(230,209,3)" fg:x="319" fg:w="1"/><text x="25.9551%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.7051%" y="341" width="0.0806%" height="15" fill="rgb(231,19,0)" fg:x="319" fg:w="1"/><text x="25.9551%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.7051%" y="325" width="0.0806%" height="15" fill="rgb(226,192,25)" fg:x="319" fg:w="1"/><text x="25.9551%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.7051%" y="309" width="0.0806%" height="15" fill="rgb(223,175,53)" fg:x="319" fg:w="1"/><text x="25.9551%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7857%" y="533" width="0.0806%" height="15" fill="rgb(248,35,51)" fg:x="320" fg:w="1"/><text x="26.0357%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7857%" y="517" width="0.0806%" height="15" fill="rgb(230,37,26)" fg:x="320" fg:w="1"/><text x="26.0357%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7857%" y="501" width="0.0806%" height="15" fill="rgb(206,120,22)" fg:x="320" fg:w="1"/><text x="26.0357%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.7857%" y="485" width="0.0806%" height="15" fill="rgb(207,165,28)" fg:x="320" fg:w="1"/><text x="26.0357%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.7857%" y="469" width="0.0806%" height="15" fill="rgb(226,23,46)" fg:x="320" fg:w="1"/><text x="26.0357%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.7857%" y="453" width="0.0806%" height="15" fill="rgb(208,130,44)" fg:x="320" fg:w="1"/><text x="26.0357%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.7857%" y="437" width="0.0806%" height="15" fill="rgb(231,67,8)" fg:x="320" fg:w="1"/><text x="26.0357%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.7857%" y="421" width="0.0806%" height="15" fill="rgb(205,183,22)" fg:x="320" fg:w="1"/><text x="26.0357%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.7857%" y="405" width="0.0806%" height="15" fill="rgb(224,47,9)" fg:x="320" fg:w="1"/><text x="26.0357%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.7857%" y="389" width="0.0806%" height="15" fill="rgb(250,183,49)" fg:x="320" fg:w="1"/><text x="26.0357%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.7857%" y="373" width="0.0806%" height="15" fill="rgb(220,151,39)" fg:x="320" fg:w="1"/><text x="26.0357%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.7857%" y="357" width="0.0806%" height="15" fill="rgb(220,118,20)" fg:x="320" fg:w="1"/><text x="26.0357%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.7857%" y="341" width="0.0806%" height="15" fill="rgb(231,65,51)" fg:x="320" fg:w="1"/><text x="26.0357%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.7857%" y="325" width="0.0806%" height="15" fill="rgb(253,125,37)" fg:x="320" fg:w="1"/><text x="26.0357%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.7857%" y="309" width="0.0806%" height="15" fill="rgb(232,102,6)" fg:x="320" fg:w="1"/><text x="26.0357%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8662%" y="533" width="0.0806%" height="15" fill="rgb(251,105,13)" fg:x="321" fg:w="1"/><text x="26.1162%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.8662%" y="517" width="0.0806%" height="15" fill="rgb(222,179,29)" fg:x="321" fg:w="1"/><text x="26.1162%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8662%" y="501" width="0.0806%" height="15" fill="rgb(229,180,53)" fg:x="321" fg:w="1"/><text x="26.1162%" y="511.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="25.5439%" y="613" width="0.4835%" height="15" fill="rgb(238,104,13)" fg:x="317" fg:w="6"/><text x="25.7939%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="25.5439%" y="597" width="0.4835%" height="15" fill="rgb(210,130,5)" fg:x="317" fg:w="6"/><text x="25.7939%" y="607.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="25.5439%" y="581" width="0.4835%" height="15" fill="rgb(233,87,49)" fg:x="317" fg:w="6"/><text x="25.7939%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="25.7857%" y="565" width="0.2417%" height="15" fill="rgb(243,34,9)" fg:x="320" fg:w="3"/><text x="26.0357%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="25.7857%" y="549" width="0.2417%" height="15" fill="rgb(235,225,10)" fg:x="320" fg:w="3"/><text x="26.0357%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.9468%" y="533" width="0.0806%" height="15" fill="rgb(212,0,30)" fg:x="322" fg:w="1"/><text x="26.1968%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9468%" y="517" width="0.0806%" height="15" fill="rgb(211,177,0)" fg:x="322" fg:w="1"/><text x="26.1968%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.9468%" y="501" width="0.0806%" height="15" fill="rgb(225,220,11)" fg:x="322" fg:w="1"/><text x="26.1968%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9468%" y="485" width="0.0806%" height="15" fill="rgb(215,10,13)" fg:x="322" fg:w="1"/><text x="26.1968%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (16 samples, 1.29%)</title><rect x="24.8993%" y="645" width="1.2893%" height="15" fill="rgb(240,177,14)" fg:x="309" fg:w="16"/><text x="25.1493%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (16 samples, 1.29%)</title><rect x="24.8993%" y="629" width="1.2893%" height="15" fill="rgb(243,7,39)" fg:x="309" fg:w="16"/><text x="25.1493%" y="639.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="26.0274%" y="613" width="0.1612%" height="15" fill="rgb(212,99,0)" fg:x="323" fg:w="2"/><text x="26.2774%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="26.0274%" y="597" width="0.1612%" height="15" fill="rgb(225,162,48)" fg:x="323" fg:w="2"/><text x="26.2774%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.1080%" y="581" width="0.0806%" height="15" fill="rgb(246,16,25)" fg:x="324" fg:w="1"/><text x="26.3580%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1080%" y="565" width="0.0806%" height="15" fill="rgb(220,150,2)" fg:x="324" fg:w="1"/><text x="26.3580%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="26.1886%" y="613" width="0.1612%" height="15" fill="rgb(237,113,11)" fg:x="325" fg:w="2"/><text x="26.4386%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.1886%" y="597" width="0.1612%" height="15" fill="rgb(236,70,20)" fg:x="325" fg:w="2"/><text x="26.4386%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="26.1886%" y="581" width="0.1612%" height="15" fill="rgb(234,94,7)" fg:x="325" fg:w="2"/><text x="26.4386%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="26.1886%" y="565" width="0.1612%" height="15" fill="rgb(250,221,0)" fg:x="325" fg:w="2"/><text x="26.4386%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.4303%" y="581" width="0.0806%" height="15" fill="rgb(245,149,46)" fg:x="328" fg:w="1"/><text x="26.6803%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.5109%" y="549" width="0.0806%" height="15" fill="rgb(215,37,27)" fg:x="329" fg:w="1"/><text x="26.7609%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.5109%" y="533" width="0.0806%" height="15" fill="rgb(232,65,3)" fg:x="329" fg:w="1"/><text x="26.7609%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.5109%" y="517" width="0.0806%" height="15" fill="rgb(214,2,16)" fg:x="329" fg:w="1"/><text x="26.7609%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="26.5915%" y="517" width="0.0806%" height="15" fill="rgb(227,131,50)" fg:x="330" fg:w="1"/><text x="26.8415%" y="527.50"></text></g><g><title>plugins_core::build::Build::named (7 samples, 0.56%)</title><rect x="26.1886%" y="645" width="0.5641%" height="15" fill="rgb(247,131,45)" fg:x="325" fg:w="7"/><text x="26.4386%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (7 samples, 0.56%)</title><rect x="26.1886%" y="629" width="0.5641%" height="15" fill="rgb(215,97,47)" fg:x="325" fg:w="7"/><text x="26.4386%" y="639.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="26.3497%" y="613" width="0.4029%" height="15" fill="rgb(233,143,12)" fg:x="327" fg:w="5"/><text x="26.5997%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="26.3497%" y="597" width="0.4029%" height="15" fill="rgb(222,57,17)" fg:x="327" fg:w="5"/><text x="26.5997%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="26.5109%" y="581" width="0.2417%" height="15" fill="rgb(214,119,38)" fg:x="329" fg:w="3"/><text x="26.7609%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="26.5109%" y="565" width="0.2417%" height="15" fill="rgb(217,28,47)" fg:x="329" fg:w="3"/><text x="26.7609%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="26.5915%" y="549" width="0.1612%" height="15" fill="rgb(231,14,52)" fg:x="330" fg:w="2"/><text x="26.8415%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="26.5915%" y="533" width="0.1612%" height="15" fill="rgb(220,158,18)" fg:x="330" fg:w="2"/><text x="26.8415%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6720%" y="517" width="0.0806%" height="15" fill="rgb(222,143,46)" fg:x="331" fg:w="1"/><text x="26.9220%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="26.8332%" y="613" width="0.0806%" height="15" fill="rgb(227,165,5)" fg:x="333" fg:w="1"/><text x="27.0832%" y="623.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="26.8332%" y="597" width="0.0806%" height="15" fill="rgb(216,222,49)" fg:x="333" fg:w="1"/><text x="27.0832%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.8332%" y="581" width="0.0806%" height="15" fill="rgb(238,73,39)" fg:x="333" fg:w="1"/><text x="27.0832%" y="591.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="26.8332%" y="565" width="0.0806%" height="15" fill="rgb(252,115,9)" fg:x="333" fg:w="1"/><text x="27.0832%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="26.8332%" y="549" width="0.0806%" height="15" fill="rgb(238,202,4)" fg:x="333" fg:w="1"/><text x="27.0832%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.8332%" y="533" width="0.0806%" height="15" fill="rgb(252,153,44)" fg:x="333" fg:w="1"/><text x="27.0832%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.8332%" y="517" width="0.0806%" height="15" fill="rgb(235,128,27)" fg:x="333" fg:w="1"/><text x="27.0832%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.8332%" y="501" width="0.0806%" height="15" fill="rgb(221,121,47)" fg:x="333" fg:w="1"/><text x="27.0832%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.8332%" y="485" width="0.0806%" height="15" fill="rgb(247,211,47)" fg:x="333" fg:w="1"/><text x="27.0832%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.8332%" y="469" width="0.0806%" height="15" fill="rgb(252,47,49)" fg:x="333" fg:w="1"/><text x="27.0832%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.8332%" y="453" width="0.0806%" height="15" fill="rgb(219,119,53)" fg:x="333" fg:w="1"/><text x="27.0832%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.8332%" y="437" width="0.0806%" height="15" fill="rgb(243,165,53)" fg:x="333" fg:w="1"/><text x="27.0832%" y="447.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="26.7526%" y="645" width="0.2417%" height="15" fill="rgb(230,12,35)" fg:x="332" fg:w="3"/><text x="27.0026%" y="655.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="26.8332%" y="629" width="0.1612%" height="15" fill="rgb(239,57,49)" fg:x="333" fg:w="2"/><text x="27.0832%" y="639.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="26.9138%" y="613" width="0.0806%" height="15" fill="rgb(231,154,7)" fg:x="334" fg:w="1"/><text x="27.1638%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="26.9138%" y="597" width="0.0806%" height="15" fill="rgb(248,81,34)" fg:x="334" fg:w="1"/><text x="27.1638%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.0749%" y="629" width="0.0806%" height="15" fill="rgb(247,9,5)" fg:x="336" fg:w="1"/><text x="27.3249%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="27.1555%" y="597" width="0.0806%" height="15" fill="rgb(228,172,27)" fg:x="337" fg:w="1"/><text x="27.4055%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.1555%" y="581" width="0.0806%" height="15" fill="rgb(230,57,44)" fg:x="337" fg:w="1"/><text x="27.4055%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.1555%" y="565" width="0.0806%" height="15" fill="rgb(249,35,22)" fg:x="337" fg:w="1"/><text x="27.4055%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.1555%" y="549" width="0.0806%" height="15" fill="rgb(250,137,27)" fg:x="337" fg:w="1"/><text x="27.4055%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.1555%" y="533" width="0.0806%" height="15" fill="rgb(251,57,31)" fg:x="337" fg:w="1"/><text x="27.4055%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="27.2361%" y="597" width="0.0806%" height="15" fill="rgb(238,60,0)" fg:x="338" fg:w="1"/><text x="27.4861%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="27.2361%" y="581" width="0.0806%" height="15" fill="rgb(242,185,39)" fg:x="338" fg:w="1"/><text x="27.4861%" y="591.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="27.2361%" y="565" width="0.0806%" height="15" fill="rgb(240,63,43)" fg:x="338" fg:w="1"/><text x="27.4861%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.2361%" y="549" width="0.0806%" height="15" fill="rgb(236,155,6)" fg:x="338" fg:w="1"/><text x="27.4861%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="27.2361%" y="533" width="0.0806%" height="15" fill="rgb(215,11,29)" fg:x="338" fg:w="1"/><text x="27.4861%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.2361%" y="517" width="0.0806%" height="15" fill="rgb(228,180,48)" fg:x="338" fg:w="1"/><text x="27.4861%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="27.2361%" y="501" width="0.0806%" height="15" fill="rgb(241,102,12)" fg:x="338" fg:w="1"/><text x="27.4861%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="27.2361%" y="485" width="0.0806%" height="15" fill="rgb(246,213,4)" fg:x="338" fg:w="1"/><text x="27.4861%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.3167%" y="517" width="0.0806%" height="15" fill="rgb(218,134,35)" fg:x="339" fg:w="1"/><text x="27.5667%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="27.3167%" y="597" width="0.1612%" height="15" fill="rgb(251,117,35)" fg:x="339" fg:w="2"/><text x="27.5667%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="27.3167%" y="581" width="0.1612%" height="15" fill="rgb(206,156,45)" fg:x="339" fg:w="2"/><text x="27.5667%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="27.3167%" y="565" width="0.1612%" height="15" fill="rgb(218,52,27)" fg:x="339" fg:w="2"/><text x="27.5667%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="27.3167%" y="549" width="0.1612%" height="15" fill="rgb(238,83,36)" fg:x="339" fg:w="2"/><text x="27.5667%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="27.3167%" y="533" width="0.1612%" height="15" fill="rgb(218,53,43)" fg:x="339" fg:w="2"/><text x="27.5667%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="27.3973%" y="517" width="0.0806%" height="15" fill="rgb(239,54,39)" fg:x="340" fg:w="1"/><text x="27.6473%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.3973%" y="501" width="0.0806%" height="15" fill="rgb(212,198,13)" fg:x="340" fg:w="1"/><text x="27.6473%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="27.3973%" y="485" width="0.0806%" height="15" fill="rgb(234,54,46)" fg:x="340" fg:w="1"/><text x="27.6473%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="27.3973%" y="469" width="0.0806%" height="15" fill="rgb(217,120,7)" fg:x="340" fg:w="1"/><text x="27.6473%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.3973%" y="453" width="0.0806%" height="15" fill="rgb(246,39,15)" fg:x="340" fg:w="1"/><text x="27.6473%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="27.4778%" y="581" width="0.0806%" height="15" fill="rgb(242,143,31)" fg:x="341" fg:w="1"/><text x="27.7278%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.4778%" y="565" width="0.0806%" height="15" fill="rgb(252,60,24)" fg:x="341" fg:w="1"/><text x="27.7278%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.4778%" y="549" width="0.0806%" height="15" fill="rgb(249,220,7)" fg:x="341" fg:w="1"/><text x="27.7278%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.4778%" y="533" width="0.0806%" height="15" fill="rgb(236,67,13)" fg:x="341" fg:w="1"/><text x="27.7278%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.4778%" y="517" width="0.0806%" height="15" fill="rgb(210,62,39)" fg:x="341" fg:w="1"/><text x="27.7278%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.4778%" y="501" width="0.0806%" height="15" fill="rgb(219,122,53)" fg:x="341" fg:w="1"/><text x="27.7278%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.4778%" y="485" width="0.0806%" height="15" fill="rgb(218,87,25)" fg:x="341" fg:w="1"/><text x="27.7278%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.4778%" y="469" width="0.0806%" height="15" fill="rgb(234,179,48)" fg:x="341" fg:w="1"/><text x="27.7278%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.4778%" y="453" width="0.0806%" height="15" fill="rgb(248,90,0)" fg:x="341" fg:w="1"/><text x="27.7278%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.4778%" y="437" width="0.0806%" height="15" fill="rgb(207,228,37)" fg:x="341" fg:w="1"/><text x="27.7278%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.4778%" y="421" width="0.0806%" height="15" fill="rgb(235,214,15)" fg:x="341" fg:w="1"/><text x="27.7278%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.4778%" y="405" width="0.0806%" height="15" fill="rgb(210,144,39)" fg:x="341" fg:w="1"/><text x="27.7278%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.4778%" y="389" width="0.0806%" height="15" fill="rgb(222,67,41)" fg:x="341" fg:w="1"/><text x="27.7278%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.4778%" y="373" width="0.0806%" height="15" fill="rgb(205,35,37)" fg:x="341" fg:w="1"/><text x="27.7278%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.4778%" y="357" width="0.0806%" height="15" fill="rgb(216,125,40)" fg:x="341" fg:w="1"/><text x="27.7278%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4778%" y="341" width="0.0806%" height="15" fill="rgb(228,227,20)" fg:x="341" fg:w="1"/><text x="27.7278%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.6390%" y="517" width="0.0806%" height="15" fill="rgb(242,173,45)" fg:x="343" fg:w="1"/><text x="27.8890%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.6390%" y="501" width="0.0806%" height="15" fill="rgb(215,79,24)" fg:x="343" fg:w="1"/><text x="27.8890%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="27.4778%" y="597" width="0.3223%" height="15" fill="rgb(238,164,38)" fg:x="341" fg:w="4"/><text x="27.7278%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="27.5584%" y="581" width="0.2417%" height="15" fill="rgb(245,196,38)" fg:x="342" fg:w="3"/><text x="27.8084%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="27.5584%" y="565" width="0.2417%" height="15" fill="rgb(231,217,29)" fg:x="342" fg:w="3"/><text x="27.8084%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.6390%" y="549" width="0.1612%" height="15" fill="rgb(245,6,4)" fg:x="343" fg:w="2"/><text x="27.8890%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.6390%" y="533" width="0.1612%" height="15" fill="rgb(214,76,49)" fg:x="343" fg:w="2"/><text x="27.8890%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.7196%" y="517" width="0.0806%" height="15" fill="rgb(205,96,12)" fg:x="344" fg:w="1"/><text x="27.9696%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.7196%" y="501" width="0.0806%" height="15" fill="rgb(243,131,4)" fg:x="344" fg:w="1"/><text x="27.9696%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.7196%" y="485" width="0.0806%" height="15" fill="rgb(214,114,4)" fg:x="344" fg:w="1"/><text x="27.9696%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.7196%" y="469" width="0.0806%" height="15" fill="rgb(234,215,15)" fg:x="344" fg:w="1"/><text x="27.9696%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.7196%" y="453" width="0.0806%" height="15" fill="rgb(250,216,45)" fg:x="344" fg:w="1"/><text x="27.9696%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.7196%" y="437" width="0.0806%" height="15" fill="rgb(236,128,4)" fg:x="344" fg:w="1"/><text x="27.9696%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.7196%" y="421" width="0.0806%" height="15" fill="rgb(234,50,33)" fg:x="344" fg:w="1"/><text x="27.9696%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.7196%" y="405" width="0.0806%" height="15" fill="rgb(253,131,37)" fg:x="344" fg:w="1"/><text x="27.9696%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.7196%" y="389" width="0.0806%" height="15" fill="rgb(218,55,27)" fg:x="344" fg:w="1"/><text x="27.9696%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.7196%" y="373" width="0.0806%" height="15" fill="rgb(241,220,28)" fg:x="344" fg:w="1"/><text x="27.9696%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.7196%" y="357" width="0.0806%" height="15" fill="rgb(241,90,48)" fg:x="344" fg:w="1"/><text x="27.9696%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.7196%" y="341" width="0.0806%" height="15" fill="rgb(216,43,37)" fg:x="344" fg:w="1"/><text x="27.9696%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="27.8002%" y="565" width="0.0806%" height="15" fill="rgb(207,173,9)" fg:x="345" fg:w="1"/><text x="28.0502%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.8002%" y="549" width="0.0806%" height="15" fill="rgb(240,126,30)" fg:x="345" fg:w="1"/><text x="28.0502%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8002%" y="533" width="0.0806%" height="15" fill="rgb(228,178,53)" fg:x="345" fg:w="1"/><text x="28.0502%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8002%" y="517" width="0.0806%" height="15" fill="rgb(217,33,4)" fg:x="345" fg:w="1"/><text x="28.0502%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8002%" y="501" width="0.0806%" height="15" fill="rgb(206,124,34)" fg:x="345" fg:w="1"/><text x="28.0502%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="27.1555%" y="613" width="0.8058%" height="15" fill="rgb(208,122,53)" fg:x="337" fg:w="10"/><text x="27.4055%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="27.8002%" y="597" width="0.1612%" height="15" fill="rgb(215,202,26)" fg:x="345" fg:w="2"/><text x="28.0502%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="27.8002%" y="581" width="0.1612%" height="15" fill="rgb(232,198,31)" fg:x="345" fg:w="2"/><text x="28.0502%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="27.8807%" y="565" width="0.0806%" height="15" fill="rgb(222,23,35)" fg:x="346" fg:w="1"/><text x="28.1307%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.8807%" y="549" width="0.0806%" height="15" fill="rgb(242,27,53)" fg:x="346" fg:w="1"/><text x="28.1307%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="27.9613%" y="597" width="0.0806%" height="15" fill="rgb(210,216,42)" fg:x="347" fg:w="1"/><text x="28.2113%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.9613%" y="581" width="0.0806%" height="15" fill="rgb(234,39,38)" fg:x="347" fg:w="1"/><text x="28.2113%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.1225%" y="485" width="0.0806%" height="15" fill="rgb(235,126,54)" fg:x="349" fg:w="1"/><text x="28.3725%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (14 samples, 1.13%)</title><rect x="27.1555%" y="629" width="1.1281%" height="15" fill="rgb(235,150,33)" fg:x="337" fg:w="14"/><text x="27.4055%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="27.9613%" y="613" width="0.3223%" height="15" fill="rgb(249,49,53)" fg:x="347" fg:w="4"/><text x="28.2113%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="28.0419%" y="597" width="0.2417%" height="15" fill="rgb(238,60,50)" fg:x="348" fg:w="3"/><text x="28.2919%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="28.0419%" y="581" width="0.2417%" height="15" fill="rgb(210,5,2)" fg:x="348" fg:w="3"/><text x="28.2919%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.0419%" y="565" width="0.2417%" height="15" fill="rgb(214,207,24)" fg:x="348" fg:w="3"/><text x="28.2919%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="28.1225%" y="549" width="0.1612%" height="15" fill="rgb(228,173,2)" fg:x="349" fg:w="2"/><text x="28.3725%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.1225%" y="533" width="0.1612%" height="15" fill="rgb(244,26,8)" fg:x="349" fg:w="2"/><text x="28.3725%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.1225%" y="517" width="0.1612%" height="15" fill="rgb(249,153,35)" fg:x="349" fg:w="2"/><text x="28.3725%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.1225%" y="501" width="0.1612%" height="15" fill="rgb(221,215,40)" fg:x="349" fg:w="2"/><text x="28.3725%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.2031%" y="485" width="0.0806%" height="15" fill="rgb(238,106,35)" fg:x="350" fg:w="1"/><text x="28.4531%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.2031%" y="469" width="0.0806%" height="15" fill="rgb(207,195,21)" fg:x="350" fg:w="1"/><text x="28.4531%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="28.2836%" y="613" width="0.0806%" height="15" fill="rgb(205,43,29)" fg:x="351" fg:w="1"/><text x="28.5336%" y="623.50"></text></g><g><title>&lt;plugins_core::moving::model::MovingHooks as plugins_core::moving::model::AfterMoveHook&gt;::after_move (1 samples, 0.08%)</title><rect x="28.3642%" y="613" width="0.0806%" height="15" fill="rgb(236,35,21)" fg:x="352" fg:w="1"/><text x="28.6142%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.4448%" y="581" width="0.1612%" height="15" fill="rgb(244,74,8)" fg:x="353" fg:w="2"/><text x="28.6948%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.4448%" y="565" width="0.1612%" height="15" fill="rgb(241,229,7)" fg:x="353" fg:w="2"/><text x="28.6948%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.4448%" y="549" width="0.1612%" height="15" fill="rgb(212,223,25)" fg:x="353" fg:w="2"/><text x="28.6948%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.4448%" y="533" width="0.1612%" height="15" fill="rgb(234,58,53)" fg:x="353" fg:w="2"/><text x="28.6948%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="28.4448%" y="517" width="0.1612%" height="15" fill="rgb(244,36,1)" fg:x="353" fg:w="2"/><text x="28.6948%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.5254%" y="501" width="0.0806%" height="15" fill="rgb(222,40,54)" fg:x="354" fg:w="1"/><text x="28.7754%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.5254%" y="485" width="0.0806%" height="15" fill="rgb(210,207,39)" fg:x="354" fg:w="1"/><text x="28.7754%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.5254%" y="469" width="0.0806%" height="15" fill="rgb(234,52,14)" fg:x="354" fg:w="1"/><text x="28.7754%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.6865%" y="549" width="0.0806%" height="15" fill="rgb(239,108,46)" fg:x="356" fg:w="1"/><text x="28.9365%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.6865%" y="533" width="0.0806%" height="15" fill="rgb(252,223,5)" fg:x="356" fg:w="1"/><text x="28.9365%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.6865%" y="517" width="0.0806%" height="15" fill="rgb(227,181,11)" fg:x="356" fg:w="1"/><text x="28.9365%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.6865%" y="501" width="0.0806%" height="15" fill="rgb(248,126,40)" fg:x="356" fg:w="1"/><text x="28.9365%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.6865%" y="485" width="0.0806%" height="15" fill="rgb(243,1,18)" fg:x="356" fg:w="1"/><text x="28.9365%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.6865%" y="469" width="0.0806%" height="15" fill="rgb(214,145,23)" fg:x="356" fg:w="1"/><text x="28.9365%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.6865%" y="453" width="0.0806%" height="15" fill="rgb(241,218,11)" fg:x="356" fg:w="1"/><text x="28.9365%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.6865%" y="437" width="0.0806%" height="15" fill="rgb(214,219,24)" fg:x="356" fg:w="1"/><text x="28.9365%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="28.6865%" y="421" width="0.0806%" height="15" fill="rgb(235,32,7)" fg:x="356" fg:w="1"/><text x="28.9365%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="28.6865%" y="405" width="0.0806%" height="15" fill="rgb(227,121,28)" fg:x="356" fg:w="1"/><text x="28.9365%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="28.4448%" y="613" width="0.4029%" height="15" fill="rgb(216,129,49)" fg:x="353" fg:w="5"/><text x="28.6948%" y="623.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="28.4448%" y="597" width="0.4029%" height="15" fill="rgb(207,194,50)" fg:x="353" fg:w="5"/><text x="28.6948%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="28.6060%" y="581" width="0.2417%" height="15" fill="rgb(207,4,18)" fg:x="355" fg:w="3"/><text x="28.8560%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="28.6060%" y="565" width="0.2417%" height="15" fill="rgb(213,50,30)" fg:x="355" fg:w="3"/><text x="28.8560%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.7671%" y="549" width="0.0806%" height="15" fill="rgb(208,77,22)" fg:x="357" fg:w="1"/><text x="29.0171%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.7671%" y="533" width="0.0806%" height="15" fill="rgb(244,204,34)" fg:x="357" fg:w="1"/><text x="29.0171%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.7671%" y="517" width="0.0806%" height="15" fill="rgb(230,20,17)" fg:x="357" fg:w="1"/><text x="29.0171%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.7671%" y="501" width="0.0806%" height="15" fill="rgb(237,83,15)" fg:x="357" fg:w="1"/><text x="29.0171%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.8477%" y="597" width="0.0806%" height="15" fill="rgb(221,109,25)" fg:x="358" fg:w="1"/><text x="29.0977%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.8477%" y="581" width="0.0806%" height="15" fill="rgb(205,194,52)" fg:x="358" fg:w="1"/><text x="29.0977%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="28.8477%" y="565" width="0.0806%" height="15" fill="rgb(244,173,54)" fg:x="358" fg:w="1"/><text x="29.0977%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="28.8477%" y="613" width="0.2417%" height="15" fill="rgb(227,181,18)" fg:x="358" fg:w="3"/><text x="29.0977%" y="623.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="28.9283%" y="597" width="0.1612%" height="15" fill="rgb(238,36,30)" fg:x="359" fg:w="2"/><text x="29.1783%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="28.9283%" y="581" width="0.1612%" height="15" fill="rgb(254,85,0)" fg:x="359" fg:w="2"/><text x="29.1783%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="29.0089%" y="565" width="0.0806%" height="15" fill="rgb(247,63,33)" fg:x="360" fg:w="1"/><text x="29.2589%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.0089%" y="549" width="0.0806%" height="15" fill="rgb(220,7,54)" fg:x="360" fg:w="1"/><text x="29.2589%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="29.0089%" y="533" width="0.0806%" height="15" fill="rgb(238,227,21)" fg:x="360" fg:w="1"/><text x="29.2589%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="29.0894%" y="597" width="0.0806%" height="15" fill="rgb(237,29,31)" fg:x="361" fg:w="1"/><text x="29.3394%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.0894%" y="581" width="0.0806%" height="15" fill="rgb(211,21,50)" fg:x="361" fg:w="1"/><text x="29.3394%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.0894%" y="565" width="0.0806%" height="15" fill="rgb(239,119,2)" fg:x="361" fg:w="1"/><text x="29.3394%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.2506%" y="533" width="0.0806%" height="15" fill="rgb(250,2,39)" fg:x="363" fg:w="1"/><text x="29.5006%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.2506%" y="517" width="0.0806%" height="15" fill="rgb(244,46,53)" fg:x="363" fg:w="1"/><text x="29.5006%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.2506%" y="501" width="0.0806%" height="15" fill="rgb(209,21,19)" fg:x="363" fg:w="1"/><text x="29.5006%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.2506%" y="485" width="0.0806%" height="15" fill="rgb(236,145,4)" fg:x="363" fg:w="1"/><text x="29.5006%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.2506%" y="469" width="0.0806%" height="15" fill="rgb(220,133,36)" fg:x="363" fg:w="1"/><text x="29.5006%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.2506%" y="453" width="0.0806%" height="15" fill="rgb(244,18,3)" fg:x="363" fg:w="1"/><text x="29.5006%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.2506%" y="437" width="0.0806%" height="15" fill="rgb(232,171,48)" fg:x="363" fg:w="1"/><text x="29.5006%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.2506%" y="421" width="0.0806%" height="15" fill="rgb(223,223,53)" fg:x="363" fg:w="1"/><text x="29.5006%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.2506%" y="405" width="0.0806%" height="15" fill="rgb(246,92,13)" fg:x="363" fg:w="1"/><text x="29.5006%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.2506%" y="389" width="0.0806%" height="15" fill="rgb(229,171,10)" fg:x="363" fg:w="1"/><text x="29.5006%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.2506%" y="373" width="0.0806%" height="15" fill="rgb(213,131,26)" fg:x="363" fg:w="1"/><text x="29.5006%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.2506%" y="357" width="0.0806%" height="15" fill="rgb(242,87,54)" fg:x="363" fg:w="1"/><text x="29.5006%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.2506%" y="341" width="0.0806%" height="15" fill="rgb(237,21,35)" fg:x="363" fg:w="1"/><text x="29.5006%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2506%" y="325" width="0.0806%" height="15" fill="rgb(253,13,47)" fg:x="363" fg:w="1"/><text x="29.5006%" y="335.50"></text></g><g><title>plugins_core::build::Build::occupying (30 samples, 2.42%)</title><rect x="26.9944%" y="645" width="2.4174%" height="15" fill="rgb(215,122,49)" fg:x="335" fg:w="30"/><text x="27.2444%" y="655.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (14 samples, 1.13%)</title><rect x="28.2836%" y="629" width="1.1281%" height="15" fill="rgb(209,179,30)" fg:x="351" fg:w="14"/><text x="28.5336%" y="639.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.32%)</title><rect x="29.0894%" y="613" width="0.3223%" height="15" fill="rgb(235,100,24)" fg:x="361" fg:w="4"/><text x="29.3394%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="29.1700%" y="597" width="0.2417%" height="15" fill="rgb(209,67,24)" fg:x="362" fg:w="3"/><text x="29.4200%" y="607.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="29.1700%" y="581" width="0.2417%" height="15" fill="rgb(206,74,32)" fg:x="362" fg:w="3"/><text x="29.4200%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="29.1700%" y="565" width="0.2417%" height="15" fill="rgb(212,45,25)" fg:x="362" fg:w="3"/><text x="29.4200%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="29.1700%" y="549" width="0.2417%" height="15" fill="rgb(239,26,3)" fg:x="362" fg:w="3"/><text x="29.4200%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.3312%" y="533" width="0.0806%" height="15" fill="rgb(218,36,15)" fg:x="364" fg:w="1"/><text x="29.5812%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3312%" y="517" width="0.0806%" height="15" fill="rgb(206,108,24)" fg:x="364" fg:w="1"/><text x="29.5812%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.3312%" y="501" width="0.0806%" height="15" fill="rgb(234,204,42)" fg:x="364" fg:w="1"/><text x="29.5812%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3312%" y="485" width="0.0806%" height="15" fill="rgb(229,2,11)" fg:x="364" fg:w="1"/><text x="29.5812%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.3312%" y="469" width="0.0806%" height="15" fill="rgb(221,20,48)" fg:x="364" fg:w="1"/><text x="29.5812%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3312%" y="453" width="0.0806%" height="15" fill="rgb(244,164,10)" fg:x="364" fg:w="1"/><text x="29.5812%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.4923%" y="597" width="0.0806%" height="15" fill="rgb(243,229,2)" fg:x="366" fg:w="1"/><text x="29.7423%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.4923%" y="581" width="0.0806%" height="15" fill="rgb(232,131,37)" fg:x="366" fg:w="1"/><text x="29.7423%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.4923%" y="565" width="0.0806%" height="15" fill="rgb(217,156,11)" fg:x="366" fg:w="1"/><text x="29.7423%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.4923%" y="549" width="0.0806%" height="15" fill="rgb(239,99,48)" fg:x="366" fg:w="1"/><text x="29.7423%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.4923%" y="533" width="0.0806%" height="15" fill="rgb(231,209,9)" fg:x="366" fg:w="1"/><text x="29.7423%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="29.4923%" y="517" width="0.0806%" height="15" fill="rgb(254,97,27)" fg:x="366" fg:w="1"/><text x="29.7423%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="29.4923%" y="501" width="0.0806%" height="15" fill="rgb(223,151,38)" fg:x="366" fg:w="1"/><text x="29.7423%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="29.5729%" y="597" width="0.0806%" height="15" fill="rgb(219,206,35)" fg:x="367" fg:w="1"/><text x="29.8229%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.5729%" y="581" width="0.0806%" height="15" fill="rgb(216,130,31)" fg:x="367" fg:w="1"/><text x="29.8229%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5729%" y="565" width="0.0806%" height="15" fill="rgb(251,97,34)" fg:x="367" fg:w="1"/><text x="29.8229%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.5729%" y="549" width="0.0806%" height="15" fill="rgb(246,159,47)" fg:x="367" fg:w="1"/><text x="29.8229%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="29.6535%" y="597" width="0.0806%" height="15" fill="rgb(232,87,10)" fg:x="368" fg:w="1"/><text x="29.9035%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.6535%" y="581" width="0.0806%" height="15" fill="rgb(249,1,37)" fg:x="368" fg:w="1"/><text x="29.9035%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6535%" y="565" width="0.0806%" height="15" fill="rgb(239,135,14)" fg:x="368" fg:w="1"/><text x="29.9035%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.6535%" y="549" width="0.0806%" height="15" fill="rgb(253,116,46)" fg:x="368" fg:w="1"/><text x="29.9035%" y="559.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="29.7341%" y="549" width="0.0806%" height="15" fill="rgb(222,217,37)" fg:x="369" fg:w="1"/><text x="29.9841%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.7341%" y="533" width="0.0806%" height="15" fill="rgb(252,96,8)" fg:x="369" fg:w="1"/><text x="29.9841%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.7341%" y="517" width="0.0806%" height="15" fill="rgb(254,103,41)" fg:x="369" fg:w="1"/><text x="29.9841%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.7341%" y="501" width="0.0806%" height="15" fill="rgb(218,213,19)" fg:x="369" fg:w="1"/><text x="29.9841%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.7341%" y="485" width="0.0806%" height="15" fill="rgb(253,95,21)" fg:x="369" fg:w="1"/><text x="29.9841%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.7341%" y="469" width="0.0806%" height="15" fill="rgb(229,26,28)" fg:x="369" fg:w="1"/><text x="29.9841%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8147%" y="533" width="0.0806%" height="15" fill="rgb(230,129,16)" fg:x="370" fg:w="1"/><text x="30.0647%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8147%" y="517" width="0.0806%" height="15" fill="rgb(236,126,17)" fg:x="370" fg:w="1"/><text x="30.0647%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.8147%" y="501" width="0.0806%" height="15" fill="rgb(209,33,33)" fg:x="370" fg:w="1"/><text x="30.0647%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="29.7341%" y="581" width="0.2417%" height="15" fill="rgb(227,85,29)" fg:x="369" fg:w="3"/><text x="29.9841%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="29.7341%" y="565" width="0.2417%" height="15" fill="rgb(241,53,46)" fg:x="369" fg:w="3"/><text x="29.9841%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.8147%" y="549" width="0.1612%" height="15" fill="rgb(228,167,53)" fg:x="370" fg:w="2"/><text x="30.0647%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.8952%" y="533" width="0.0806%" height="15" fill="rgb(238,195,45)" fg:x="371" fg:w="1"/><text x="30.1452%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.8952%" y="517" width="0.0806%" height="15" fill="rgb(252,124,45)" fg:x="371" fg:w="1"/><text x="30.1452%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.8952%" y="501" width="0.0806%" height="15" fill="rgb(251,38,35)" fg:x="371" fg:w="1"/><text x="30.1452%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.8952%" y="485" width="0.0806%" height="15" fill="rgb(227,33,2)" fg:x="371" fg:w="1"/><text x="30.1452%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.8952%" y="469" width="0.0806%" height="15" fill="rgb(223,157,46)" fg:x="371" fg:w="1"/><text x="30.1452%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.8952%" y="453" width="0.0806%" height="15" fill="rgb(222,78,41)" fg:x="371" fg:w="1"/><text x="30.1452%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.8952%" y="437" width="0.0806%" height="15" fill="rgb(248,176,11)" fg:x="371" fg:w="1"/><text x="30.1452%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.9758%" y="517" width="0.0806%" height="15" fill="rgb(241,221,18)" fg:x="372" fg:w="1"/><text x="30.2258%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="29.7341%" y="597" width="0.4029%" height="15" fill="rgb(218,85,22)" fg:x="369" fg:w="5"/><text x="29.9841%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="29.9758%" y="581" width="0.1612%" height="15" fill="rgb(222,223,7)" fg:x="372" fg:w="2"/><text x="30.2258%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.9758%" y="565" width="0.1612%" height="15" fill="rgb(254,59,39)" fg:x="372" fg:w="2"/><text x="30.2258%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="29.9758%" y="549" width="0.1612%" height="15" fill="rgb(247,100,27)" fg:x="372" fg:w="2"/><text x="30.2258%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="29.9758%" y="533" width="0.1612%" height="15" fill="rgb(237,207,10)" fg:x="372" fg:w="2"/><text x="30.2258%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="30.0564%" y="517" width="0.0806%" height="15" fill="rgb(220,121,28)" fg:x="373" fg:w="1"/><text x="30.3064%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="30.0564%" y="501" width="0.0806%" height="15" fill="rgb(213,223,20)" fg:x="373" fg:w="1"/><text x="30.3064%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="30.0564%" y="485" width="0.0806%" height="15" fill="rgb(205,121,27)" fg:x="373" fg:w="1"/><text x="30.3064%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="30.0564%" y="469" width="0.0806%" height="15" fill="rgb(253,24,53)" fg:x="373" fg:w="1"/><text x="30.3064%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="30.0564%" y="453" width="0.0806%" height="15" fill="rgb(224,224,47)" fg:x="373" fg:w="1"/><text x="30.3064%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0564%" y="437" width="0.0806%" height="15" fill="rgb(250,125,36)" fg:x="373" fg:w="1"/><text x="30.3064%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0564%" y="421" width="0.0806%" height="15" fill="rgb(240,144,38)" fg:x="373" fg:w="1"/><text x="30.3064%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.0564%" y="405" width="0.0806%" height="15" fill="rgb(250,15,50)" fg:x="373" fg:w="1"/><text x="30.3064%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.1370%" y="581" width="0.0806%" height="15" fill="rgb(210,24,26)" fg:x="374" fg:w="1"/><text x="30.3870%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="30.1370%" y="565" width="0.0806%" height="15" fill="rgb(234,53,53)" fg:x="374" fg:w="1"/><text x="30.3870%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.1370%" y="549" width="0.0806%" height="15" fill="rgb(208,108,28)" fg:x="374" fg:w="1"/><text x="30.3870%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.2176%" y="549" width="0.0806%" height="15" fill="rgb(227,143,7)" fg:x="375" fg:w="1"/><text x="30.4676%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.2981%" y="549" width="0.0806%" height="15" fill="rgb(238,189,38)" fg:x="376" fg:w="1"/><text x="30.5481%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.2981%" y="533" width="0.0806%" height="15" fill="rgb(222,69,15)" fg:x="376" fg:w="1"/><text x="30.5481%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.2981%" y="517" width="0.0806%" height="15" fill="rgb(213,169,7)" fg:x="376" fg:w="1"/><text x="30.5481%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.2981%" y="501" width="0.0806%" height="15" fill="rgb(251,219,4)" fg:x="376" fg:w="1"/><text x="30.5481%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="30.1370%" y="597" width="0.3223%" height="15" fill="rgb(241,55,40)" fg:x="374" fg:w="4"/><text x="30.3870%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="30.2176%" y="581" width="0.2417%" height="15" fill="rgb(243,57,30)" fg:x="375" fg:w="3"/><text x="30.4676%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="30.2176%" y="565" width="0.2417%" height="15" fill="rgb(234,50,30)" fg:x="375" fg:w="3"/><text x="30.4676%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.3787%" y="549" width="0.0806%" height="15" fill="rgb(239,23,42)" fg:x="377" fg:w="1"/><text x="30.6287%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.3787%" y="533" width="0.0806%" height="15" fill="rgb(217,38,19)" fg:x="377" fg:w="1"/><text x="30.6287%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.3787%" y="517" width="0.0806%" height="15" fill="rgb(215,179,16)" fg:x="377" fg:w="1"/><text x="30.6287%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.3787%" y="501" width="0.0806%" height="15" fill="rgb(254,21,37)" fg:x="377" fg:w="1"/><text x="30.6287%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.3787%" y="485" width="0.0806%" height="15" fill="rgb(219,207,48)" fg:x="377" fg:w="1"/><text x="30.6287%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.3787%" y="469" width="0.0806%" height="15" fill="rgb(227,225,41)" fg:x="377" fg:w="1"/><text x="30.6287%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="30.3787%" y="453" width="0.0806%" height="15" fill="rgb(223,130,1)" fg:x="377" fg:w="1"/><text x="30.6287%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4593%" y="533" width="0.0806%" height="15" fill="rgb(249,54,42)" fg:x="378" fg:w="1"/><text x="30.7093%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4593%" y="517" width="0.0806%" height="15" fill="rgb(248,69,25)" fg:x="378" fg:w="1"/><text x="30.7093%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4593%" y="501" width="0.0806%" height="15" fill="rgb(234,21,32)" fg:x="378" fg:w="1"/><text x="30.7093%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4593%" y="485" width="0.0806%" height="15" fill="rgb(252,136,6)" fg:x="378" fg:w="1"/><text x="30.7093%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4593%" y="469" width="0.0806%" height="15" fill="rgb(245,87,12)" fg:x="378" fg:w="1"/><text x="30.7093%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.4593%" y="453" width="0.0806%" height="15" fill="rgb(208,12,15)" fg:x="378" fg:w="1"/><text x="30.7093%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.4593%" y="437" width="0.0806%" height="15" fill="rgb(250,98,2)" fg:x="378" fg:w="1"/><text x="30.7093%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.4593%" y="421" width="0.0806%" height="15" fill="rgb(205,213,15)" fg:x="378" fg:w="1"/><text x="30.7093%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.4593%" y="405" width="0.0806%" height="15" fill="rgb(248,192,44)" fg:x="378" fg:w="1"/><text x="30.7093%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.4593%" y="389" width="0.0806%" height="15" fill="rgb(221,89,17)" fg:x="378" fg:w="1"/><text x="30.7093%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.4593%" y="373" width="0.0806%" height="15" fill="rgb(209,55,3)" fg:x="378" fg:w="1"/><text x="30.7093%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.4593%" y="357" width="0.0806%" height="15" fill="rgb(247,23,45)" fg:x="378" fg:w="1"/><text x="30.7093%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.4593%" y="341" width="0.0806%" height="15" fill="rgb(235,152,23)" fg:x="378" fg:w="1"/><text x="30.7093%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.4593%" y="325" width="0.0806%" height="15" fill="rgb(244,63,13)" fg:x="378" fg:w="1"/><text x="30.7093%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.4593%" y="309" width="0.0806%" height="15" fill="rgb(227,30,37)" fg:x="378" fg:w="1"/><text x="30.7093%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.4593%" y="565" width="0.1612%" height="15" fill="rgb(224,49,42)" fg:x="378" fg:w="2"/><text x="30.7093%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.4593%" y="549" width="0.1612%" height="15" fill="rgb(218,129,5)" fg:x="378" fg:w="2"/><text x="30.7093%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5399%" y="533" width="0.0806%" height="15" fill="rgb(240,199,54)" fg:x="379" fg:w="1"/><text x="30.7899%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5399%" y="517" width="0.0806%" height="15" fill="rgb(234,31,13)" fg:x="379" fg:w="1"/><text x="30.7899%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.5399%" y="501" width="0.0806%" height="15" fill="rgb(219,73,54)" fg:x="379" fg:w="1"/><text x="30.7899%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5399%" y="485" width="0.0806%" height="15" fill="rgb(251,162,10)" fg:x="379" fg:w="1"/><text x="30.7899%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5399%" y="469" width="0.0806%" height="15" fill="rgb(240,138,47)" fg:x="379" fg:w="1"/><text x="30.7899%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5399%" y="453" width="0.0806%" height="15" fill="rgb(216,138,26)" fg:x="379" fg:w="1"/><text x="30.7899%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.21%)</title><rect x="29.4923%" y="613" width="1.2087%" height="15" fill="rgb(243,17,35)" fg:x="366" fg:w="15"/><text x="29.7423%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="30.4593%" y="597" width="0.2417%" height="15" fill="rgb(241,60,18)" fg:x="378" fg:w="3"/><text x="30.7093%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="30.4593%" y="581" width="0.2417%" height="15" fill="rgb(234,2,44)" fg:x="378" fg:w="3"/><text x="30.7093%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="30.6205%" y="565" width="0.0806%" height="15" fill="rgb(225,225,33)" fg:x="380" fg:w="1"/><text x="30.8705%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.6205%" y="549" width="0.0806%" height="15" fill="rgb(234,50,31)" fg:x="380" fg:w="1"/><text x="30.8705%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.6205%" y="533" width="0.0806%" height="15" fill="rgb(249,6,25)" fg:x="380" fg:w="1"/><text x="30.8705%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="30.6205%" y="517" width="0.0806%" height="15" fill="rgb(241,5,17)" fg:x="380" fg:w="1"/><text x="30.8705%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7010%" y="533" width="0.0806%" height="15" fill="rgb(207,116,10)" fg:x="381" fg:w="1"/><text x="30.9510%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7010%" y="517" width="0.0806%" height="15" fill="rgb(222,128,18)" fg:x="381" fg:w="1"/><text x="30.9510%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.7010%" y="501" width="0.0806%" height="15" fill="rgb(229,109,25)" fg:x="381" fg:w="1"/><text x="30.9510%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.7010%" y="485" width="0.0806%" height="15" fill="rgb(222,102,25)" fg:x="381" fg:w="1"/><text x="30.9510%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.7010%" y="469" width="0.0806%" height="15" fill="rgb(239,211,5)" fg:x="381" fg:w="1"/><text x="30.9510%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7010%" y="453" width="0.0806%" height="15" fill="rgb(223,136,26)" fg:x="381" fg:w="1"/><text x="30.9510%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7010%" y="437" width="0.0806%" height="15" fill="rgb(227,30,15)" fg:x="381" fg:w="1"/><text x="30.9510%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.7010%" y="421" width="0.0806%" height="15" fill="rgb(247,76,4)" fg:x="381" fg:w="1"/><text x="30.9510%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.7010%" y="405" width="0.0806%" height="15" fill="rgb(245,38,48)" fg:x="381" fg:w="1"/><text x="30.9510%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.7010%" y="389" width="0.0806%" height="15" fill="rgb(210,220,14)" fg:x="381" fg:w="1"/><text x="30.9510%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.7010%" y="373" width="0.0806%" height="15" fill="rgb(224,60,51)" fg:x="381" fg:w="1"/><text x="30.9510%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (17 samples, 1.37%)</title><rect x="29.4923%" y="629" width="1.3699%" height="15" fill="rgb(212,133,49)" fg:x="366" fg:w="17"/><text x="29.7423%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.7010%" y="613" width="0.1612%" height="15" fill="rgb(231,39,22)" fg:x="381" fg:w="2"/><text x="30.9510%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.7010%" y="597" width="0.1612%" height="15" fill="rgb(236,173,22)" fg:x="381" fg:w="2"/><text x="30.9510%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.7010%" y="581" width="0.1612%" height="15" fill="rgb(210,70,0)" fg:x="381" fg:w="2"/><text x="30.9510%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.7010%" y="565" width="0.1612%" height="15" fill="rgb(215,170,11)" fg:x="381" fg:w="2"/><text x="30.9510%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.7010%" y="549" width="0.1612%" height="15" fill="rgb(220,154,28)" fg:x="381" fg:w="2"/><text x="30.9510%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7816%" y="533" width="0.0806%" height="15" fill="rgb(240,160,41)" fg:x="382" fg:w="1"/><text x="31.0316%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (182 samples, 14.67%)</title><rect x="16.2772%" y="661" width="14.6656%" height="15" fill="rgb(243,215,41)" fg:x="202" fg:w="182"/><text x="16.5272%" y="671.50">plugins_core::build::B..</text></g><g><title>plugins_core::build::Build::wearing (19 samples, 1.53%)</title><rect x="29.4118%" y="645" width="1.5310%" height="15" fill="rgb(214,208,31)" fg:x="365" fg:w="19"/><text x="29.6618%" y="655.50"></text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="30.8622%" y="629" width="0.0806%" height="15" fill="rgb(247,57,22)" fg:x="383" fg:w="1"/><text x="31.1122%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.8622%" y="613" width="0.0806%" height="15" fill="rgb(228,73,52)" fg:x="383" fg:w="1"/><text x="31.1122%" y="623.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (1 samples, 0.08%)</title><rect x="30.8622%" y="597" width="0.0806%" height="15" fill="rgb(252,60,9)" fg:x="383" fg:w="1"/><text x="31.1122%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.8622%" y="581" width="0.0806%" height="15" fill="rgb(233,9,51)" fg:x="383" fg:w="1"/><text x="31.1122%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="30.9428%" y="629" width="0.0806%" height="15" fill="rgb(223,67,14)" fg:x="384" fg:w="1"/><text x="31.1928%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="30.9428%" y="613" width="0.0806%" height="15" fill="rgb(222,86,2)" fg:x="384" fg:w="1"/><text x="31.1928%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.9428%" y="597" width="0.0806%" height="15" fill="rgb(243,58,54)" fg:x="384" fg:w="1"/><text x="31.1928%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="30.9428%" y="581" width="0.0806%" height="15" fill="rgb(210,200,39)" fg:x="384" fg:w="1"/><text x="31.1928%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.9428%" y="565" width="0.0806%" height="15" fill="rgb(238,135,9)" fg:x="384" fg:w="1"/><text x="31.1928%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="30.9428%" y="549" width="0.0806%" height="15" fill="rgb(232,179,7)" fg:x="384" fg:w="1"/><text x="31.1928%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="31.0234%" y="597" width="0.0806%" height="15" fill="rgb(245,65,41)" fg:x="385" fg:w="1"/><text x="31.2734%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="31.0234%" y="581" width="0.0806%" height="15" fill="rgb(227,43,8)" fg:x="385" fg:w="1"/><text x="31.2734%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.0234%" y="565" width="0.0806%" height="15" fill="rgb(235,91,14)" fg:x="385" fg:w="1"/><text x="31.2734%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="31.1039%" y="549" width="0.0806%" height="15" fill="rgb(235,219,31)" fg:x="386" fg:w="1"/><text x="31.3539%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.1039%" y="533" width="0.0806%" height="15" fill="rgb(227,121,25)" fg:x="386" fg:w="1"/><text x="31.3539%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.1039%" y="517" width="0.0806%" height="15" fill="rgb(254,129,24)" fg:x="386" fg:w="1"/><text x="31.3539%" y="527.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="31.1845%" y="549" width="0.0806%" height="15" fill="rgb(226,144,49)" fg:x="387" fg:w="1"/><text x="31.4345%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.1845%" y="533" width="0.0806%" height="15" fill="rgb(214,187,32)" fg:x="387" fg:w="1"/><text x="31.4345%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.1845%" y="517" width="0.0806%" height="15" fill="rgb(243,129,46)" fg:x="387" fg:w="1"/><text x="31.4345%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.2651%" y="533" width="0.0806%" height="15" fill="rgb(221,185,35)" fg:x="388" fg:w="1"/><text x="31.5151%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.2651%" y="517" width="0.0806%" height="15" fill="rgb(205,0,32)" fg:x="388" fg:w="1"/><text x="31.5151%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.2651%" y="501" width="0.0806%" height="15" fill="rgb(229,179,12)" fg:x="388" fg:w="1"/><text x="31.5151%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.2651%" y="485" width="0.0806%" height="15" fill="rgb(252,107,19)" fg:x="388" fg:w="1"/><text x="31.5151%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.3457%" y="533" width="0.0806%" height="15" fill="rgb(220,95,27)" fg:x="389" fg:w="1"/><text x="31.5957%" y="543.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="31.3457%" y="517" width="0.0806%" height="15" fill="rgb(240,113,40)" fg:x="389" fg:w="1"/><text x="31.5957%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="31.1039%" y="581" width="0.4029%" height="15" fill="rgb(208,4,43)" fg:x="386" fg:w="5"/><text x="31.3539%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="31.1039%" y="565" width="0.4029%" height="15" fill="rgb(247,189,30)" fg:x="386" fg:w="5"/><text x="31.3539%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.2651%" y="549" width="0.2417%" height="15" fill="rgb(231,157,17)" fg:x="388" fg:w="3"/><text x="31.5151%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.4263%" y="533" width="0.0806%" height="15" fill="rgb(224,139,6)" fg:x="390" fg:w="1"/><text x="31.6763%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.4263%" y="517" width="0.0806%" height="15" fill="rgb(223,83,16)" fg:x="390" fg:w="1"/><text x="31.6763%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.4263%" y="501" width="0.0806%" height="15" fill="rgb(232,211,20)" fg:x="390" fg:w="1"/><text x="31.6763%" y="511.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="31.5068%" y="581" width="0.0806%" height="15" fill="rgb(225,203,35)" fg:x="391" fg:w="1"/><text x="31.7568%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.5068%" y="565" width="0.0806%" height="15" fill="rgb(215,211,44)" fg:x="391" fg:w="1"/><text x="31.7568%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.5068%" y="549" width="0.0806%" height="15" fill="rgb(248,213,26)" fg:x="391" fg:w="1"/><text x="31.7568%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.5068%" y="533" width="0.0806%" height="15" fill="rgb(214,23,52)" fg:x="391" fg:w="1"/><text x="31.7568%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.5068%" y="517" width="0.0806%" height="15" fill="rgb(225,173,50)" fg:x="391" fg:w="1"/><text x="31.7568%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.5068%" y="501" width="0.0806%" height="15" fill="rgb(206,150,22)" fg:x="391" fg:w="1"/><text x="31.7568%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.5068%" y="485" width="0.0806%" height="15" fill="rgb(239,64,23)" fg:x="391" fg:w="1"/><text x="31.7568%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.5068%" y="469" width="0.0806%" height="15" fill="rgb(242,50,38)" fg:x="391" fg:w="1"/><text x="31.7568%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.5068%" y="453" width="0.0806%" height="15" fill="rgb(217,91,15)" fg:x="391" fg:w="1"/><text x="31.7568%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.5068%" y="437" width="0.0806%" height="15" fill="rgb(230,172,6)" fg:x="391" fg:w="1"/><text x="31.7568%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.5068%" y="421" width="0.0806%" height="15" fill="rgb(221,98,26)" fg:x="391" fg:w="1"/><text x="31.7568%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.5068%" y="405" width="0.0806%" height="15" fill="rgb(227,210,45)" fg:x="391" fg:w="1"/><text x="31.7568%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.5068%" y="389" width="0.0806%" height="15" fill="rgb(206,8,30)" fg:x="391" fg:w="1"/><text x="31.7568%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="31.5874%" y="549" width="0.0806%" height="15" fill="rgb(241,219,17)" fg:x="392" fg:w="1"/><text x="31.8374%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.5874%" y="533" width="0.0806%" height="15" fill="rgb(247,121,29)" fg:x="392" fg:w="1"/><text x="31.8374%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.5874%" y="517" width="0.0806%" height="15" fill="rgb(219,169,49)" fg:x="392" fg:w="1"/><text x="31.8374%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.5874%" y="501" width="0.0806%" height="15" fill="rgb(253,49,49)" fg:x="392" fg:w="1"/><text x="31.8374%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="31.6680%" y="533" width="0.0806%" height="15" fill="rgb(217,178,3)" fg:x="393" fg:w="1"/><text x="31.9180%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="31.6680%" y="517" width="0.0806%" height="15" fill="rgb(234,73,37)" fg:x="393" fg:w="1"/><text x="31.9180%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6680%" y="501" width="0.0806%" height="15" fill="rgb(250,98,22)" fg:x="393" fg:w="1"/><text x="31.9180%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="31.6680%" y="485" width="0.0806%" height="15" fill="rgb(220,108,37)" fg:x="393" fg:w="1"/><text x="31.9180%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6680%" y="469" width="0.0806%" height="15" fill="rgb(225,168,10)" fg:x="393" fg:w="1"/><text x="31.9180%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="31.6680%" y="453" width="0.0806%" height="15" fill="rgb(247,215,21)" fg:x="393" fg:w="1"/><text x="31.9180%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6680%" y="437" width="0.0806%" height="15" fill="rgb(253,189,31)" fg:x="393" fg:w="1"/><text x="31.9180%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.73%)</title><rect x="31.1039%" y="597" width="0.7252%" height="15" fill="rgb(241,54,22)" fg:x="386" fg:w="9"/><text x="31.3539%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="31.5874%" y="581" width="0.2417%" height="15" fill="rgb(211,87,4)" fg:x="392" fg:w="3"/><text x="31.8374%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="31.5874%" y="565" width="0.2417%" height="15" fill="rgb(245,112,24)" fg:x="392" fg:w="3"/><text x="31.8374%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="31.6680%" y="549" width="0.1612%" height="15" fill="rgb(235,190,41)" fg:x="393" fg:w="2"/><text x="31.9180%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.7486%" y="533" width="0.0806%" height="15" fill="rgb(214,89,8)" fg:x="394" fg:w="1"/><text x="31.9986%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.9098%" y="549" width="0.0806%" height="15" fill="rgb(249,155,35)" fg:x="396" fg:w="1"/><text x="32.1598%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.9098%" y="533" width="0.0806%" height="15" fill="rgb(249,88,26)" fg:x="396" fg:w="1"/><text x="32.1598%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.9098%" y="517" width="0.0806%" height="15" fill="rgb(232,56,8)" fg:x="396" fg:w="1"/><text x="32.1598%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.9098%" y="501" width="0.0806%" height="15" fill="rgb(240,95,3)" fg:x="396" fg:w="1"/><text x="32.1598%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.9098%" y="485" width="0.0806%" height="15" fill="rgb(222,44,28)" fg:x="396" fg:w="1"/><text x="32.1598%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="31.8292%" y="597" width="0.2417%" height="15" fill="rgb(234,16,30)" fg:x="395" fg:w="3"/><text x="32.0792%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="31.8292%" y="581" width="0.2417%" height="15" fill="rgb(223,26,17)" fg:x="395" fg:w="3"/><text x="32.0792%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="31.9098%" y="565" width="0.1612%" height="15" fill="rgb(239,187,47)" fg:x="396" fg:w="2"/><text x="32.1598%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.9903%" y="549" width="0.0806%" height="15" fill="rgb(247,102,50)" fg:x="397" fg:w="1"/><text x="32.2403%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.9903%" y="533" width="0.0806%" height="15" fill="rgb(231,216,22)" fg:x="397" fg:w="1"/><text x="32.2403%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.9903%" y="517" width="0.0806%" height="15" fill="rgb(216,201,26)" fg:x="397" fg:w="1"/><text x="32.2403%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.9903%" y="501" width="0.0806%" height="15" fill="rgb(214,186,23)" fg:x="397" fg:w="1"/><text x="32.2403%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="31.9903%" y="485" width="0.0806%" height="15" fill="rgb(235,184,4)" fg:x="397" fg:w="1"/><text x="32.2403%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.0709%" y="565" width="0.0806%" height="15" fill="rgb(244,46,17)" fg:x="398" fg:w="1"/><text x="32.3209%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.0709%" y="549" width="0.0806%" height="15" fill="rgb(248,74,46)" fg:x="398" fg:w="1"/><text x="32.3209%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.0709%" y="533" width="0.0806%" height="15" fill="rgb(243,79,5)" fg:x="398" fg:w="1"/><text x="32.3209%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.0709%" y="517" width="0.0806%" height="15" fill="rgb(213,148,1)" fg:x="398" fg:w="1"/><text x="32.3209%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.0709%" y="501" width="0.0806%" height="15" fill="rgb(221,30,0)" fg:x="398" fg:w="1"/><text x="32.3209%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.0709%" y="485" width="0.0806%" height="15" fill="rgb(207,85,29)" fg:x="398" fg:w="1"/><text x="32.3209%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.0709%" y="469" width="0.0806%" height="15" fill="rgb(239,31,46)" fg:x="398" fg:w="1"/><text x="32.3209%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.0709%" y="453" width="0.0806%" height="15" fill="rgb(219,6,1)" fg:x="398" fg:w="1"/><text x="32.3209%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.0709%" y="437" width="0.0806%" height="15" fill="rgb(229,90,29)" fg:x="398" fg:w="1"/><text x="32.3209%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="32.0709%" y="421" width="0.0806%" height="15" fill="rgb(242,201,42)" fg:x="398" fg:w="1"/><text x="32.3209%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.0709%" y="405" width="0.0806%" height="15" fill="rgb(243,80,54)" fg:x="398" fg:w="1"/><text x="32.3209%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.21%)</title><rect x="31.0234%" y="613" width="1.2087%" height="15" fill="rgb(223,166,15)" fg:x="385" fg:w="15"/><text x="31.2734%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="32.0709%" y="597" width="0.1612%" height="15" fill="rgb(238,78,27)" fg:x="398" fg:w="2"/><text x="32.3209%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="32.0709%" y="581" width="0.1612%" height="15" fill="rgb(235,28,43)" fg:x="398" fg:w="2"/><text x="32.3209%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="32.1515%" y="565" width="0.0806%" height="15" fill="rgb(240,210,28)" fg:x="399" fg:w="1"/><text x="32.4015%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.1515%" y="549" width="0.0806%" height="15" fill="rgb(253,6,46)" fg:x="399" fg:w="1"/><text x="32.4015%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.1515%" y="533" width="0.0806%" height="15" fill="rgb(250,159,47)" fg:x="399" fg:w="1"/><text x="32.4015%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1515%" y="517" width="0.0806%" height="15" fill="rgb(216,139,2)" fg:x="399" fg:w="1"/><text x="32.4015%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.1515%" y="501" width="0.0806%" height="15" fill="rgb(221,124,44)" fg:x="399" fg:w="1"/><text x="32.4015%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1515%" y="485" width="0.0806%" height="15" fill="rgb(205,37,22)" fg:x="399" fg:w="1"/><text x="32.4015%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.1515%" y="469" width="0.0806%" height="15" fill="rgb(250,55,8)" fg:x="399" fg:w="1"/><text x="32.4015%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.1515%" y="453" width="0.0806%" height="15" fill="rgb(215,83,48)" fg:x="399" fg:w="1"/><text x="32.4015%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="32.2321%" y="597" width="0.0806%" height="15" fill="rgb(253,2,32)" fg:x="400" fg:w="1"/><text x="32.4821%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.2321%" y="581" width="0.0806%" height="15" fill="rgb(236,67,28)" fg:x="400" fg:w="1"/><text x="32.4821%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="32.2321%" y="565" width="0.0806%" height="15" fill="rgb(252,55,15)" fg:x="400" fg:w="1"/><text x="32.4821%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3127%" y="549" width="0.0806%" height="15" fill="rgb(243,173,17)" fg:x="401" fg:w="1"/><text x="32.5627%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (18 samples, 1.45%)</title><rect x="31.0234%" y="629" width="1.4504%" height="15" fill="rgb(215,212,13)" fg:x="385" fg:w="18"/><text x="31.2734%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="32.2321%" y="613" width="0.2417%" height="15" fill="rgb(253,176,6)" fg:x="400" fg:w="3"/><text x="32.4821%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.3127%" y="597" width="0.1612%" height="15" fill="rgb(236,105,26)" fg:x="401" fg:w="2"/><text x="32.5627%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.3127%" y="581" width="0.1612%" height="15" fill="rgb(239,226,32)" fg:x="401" fg:w="2"/><text x="32.5627%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.3127%" y="565" width="0.1612%" height="15" fill="rgb(236,104,51)" fg:x="401" fg:w="2"/><text x="32.5627%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3932%" y="549" width="0.0806%" height="15" fill="rgb(220,172,33)" fg:x="402" fg:w="1"/><text x="32.6432%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3932%" y="533" width="0.0806%" height="15" fill="rgb(224,182,25)" fg:x="402" fg:w="1"/><text x="32.6432%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.3932%" y="517" width="0.0806%" height="15" fill="rgb(236,184,24)" fg:x="402" fg:w="1"/><text x="32.6432%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.3932%" y="501" width="0.0806%" height="15" fill="rgb(241,221,14)" fg:x="402" fg:w="1"/><text x="32.6432%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.3932%" y="485" width="0.0806%" height="15" fill="rgb(227,146,5)" fg:x="402" fg:w="1"/><text x="32.6432%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="32.3932%" y="469" width="0.0806%" height="15" fill="rgb(214,15,23)" fg:x="402" fg:w="1"/><text x="32.6432%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.3932%" y="453" width="0.0806%" height="15" fill="rgb(233,157,31)" fg:x="402" fg:w="1"/><text x="32.6432%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (20 samples, 1.61%)</title><rect x="30.9428%" y="661" width="1.6116%" height="15" fill="rgb(211,27,52)" fg:x="384" fg:w="20"/><text x="31.1928%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (20 samples, 1.61%)</title><rect x="30.9428%" y="645" width="1.6116%" height="15" fill="rgb(212,223,15)" fg:x="384" fg:w="20"/><text x="31.1928%" y="655.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="32.4738%" y="629" width="0.0806%" height="15" fill="rgb(254,211,0)" fg:x="403" fg:w="1"/><text x="32.7238%" y="639.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="32.4738%" y="613" width="0.0806%" height="15" fill="rgb(205,43,38)" fg:x="403" fg:w="1"/><text x="32.7238%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="32.4738%" y="597" width="0.0806%" height="15" fill="rgb(242,206,46)" fg:x="403" fg:w="1"/><text x="32.7238%" y="607.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="32.4738%" y="581" width="0.0806%" height="15" fill="rgb(220,221,12)" fg:x="403" fg:w="1"/><text x="32.7238%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="32.4738%" y="565" width="0.0806%" height="15" fill="rgb(217,156,35)" fg:x="403" fg:w="1"/><text x="32.7238%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="32.4738%" y="549" width="0.0806%" height="15" fill="rgb(207,181,49)" fg:x="403" fg:w="1"/><text x="32.7238%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.4738%" y="533" width="0.0806%" height="15" fill="rgb(235,103,47)" fg:x="403" fg:w="1"/><text x="32.7238%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.4738%" y="517" width="0.0806%" height="15" fill="rgb(222,63,28)" fg:x="403" fg:w="1"/><text x="32.7238%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.4738%" y="501" width="0.0806%" height="15" fill="rgb(244,137,21)" fg:x="403" fg:w="1"/><text x="32.7238%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="32.4738%" y="485" width="0.0806%" height="15" fill="rgb(228,35,27)" fg:x="403" fg:w="1"/><text x="32.7238%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="32.4738%" y="469" width="0.0806%" height="15" fill="rgb(226,191,41)" fg:x="403" fg:w="1"/><text x="32.7238%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="32.4738%" y="453" width="0.0806%" height="15" fill="rgb(210,154,3)" fg:x="403" fg:w="1"/><text x="32.7238%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="32.4738%" y="437" width="0.0806%" height="15" fill="rgb(216,60,49)" fg:x="403" fg:w="1"/><text x="32.7238%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.4738%" y="421" width="0.0806%" height="15" fill="rgb(226,17,20)" fg:x="403" fg:w="1"/><text x="32.7238%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="32.5544%" y="645" width="0.0806%" height="15" fill="rgb(206,115,35)" fg:x="404" fg:w="1"/><text x="32.8044%" y="655.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="32.5544%" y="629" width="0.0806%" height="15" fill="rgb(227,88,1)" fg:x="404" fg:w="1"/><text x="32.8044%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5544%" y="613" width="0.0806%" height="15" fill="rgb(230,222,24)" fg:x="404" fg:w="1"/><text x="32.8044%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.6350%" y="613" width="0.0806%" height="15" fill="rgb(214,124,32)" fg:x="405" fg:w="1"/><text x="32.8850%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.6350%" y="597" width="0.0806%" height="15" fill="rgb(240,41,36)" fg:x="405" fg:w="1"/><text x="32.8850%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.6350%" y="581" width="0.0806%" height="15" fill="rgb(221,17,52)" fg:x="405" fg:w="1"/><text x="32.8850%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.6350%" y="565" width="0.0806%" height="15" fill="rgb(252,70,16)" fg:x="405" fg:w="1"/><text x="32.8850%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.6350%" y="549" width="0.0806%" height="15" fill="rgb(250,177,4)" fg:x="405" fg:w="1"/><text x="32.8850%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.6350%" y="533" width="0.0806%" height="15" fill="rgb(240,188,47)" fg:x="405" fg:w="1"/><text x="32.8850%" y="543.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="32.7961%" y="565" width="0.0806%" height="15" fill="rgb(215,92,12)" fg:x="407" fg:w="1"/><text x="33.0461%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="32.7961%" y="549" width="0.0806%" height="15" fill="rgb(242,110,29)" fg:x="407" fg:w="1"/><text x="33.0461%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.8767%" y="533" width="0.0806%" height="15" fill="rgb(208,211,26)" fg:x="408" fg:w="1"/><text x="33.1267%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.8767%" y="517" width="0.0806%" height="15" fill="rgb(244,147,6)" fg:x="408" fg:w="1"/><text x="33.1267%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.8767%" y="501" width="0.0806%" height="15" fill="rgb(211,130,42)" fg:x="408" fg:w="1"/><text x="33.1267%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.8767%" y="485" width="0.0806%" height="15" fill="rgb(220,63,1)" fg:x="408" fg:w="1"/><text x="33.1267%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.8767%" y="469" width="0.0806%" height="15" fill="rgb(241,212,30)" fg:x="408" fg:w="1"/><text x="33.1267%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.8767%" y="453" width="0.0806%" height="15" fill="rgb(233,153,17)" fg:x="408" fg:w="1"/><text x="33.1267%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.8767%" y="437" width="0.0806%" height="15" fill="rgb(236,3,10)" fg:x="408" fg:w="1"/><text x="33.1267%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="32.8767%" y="421" width="0.0806%" height="15" fill="rgb(232,41,21)" fg:x="408" fg:w="1"/><text x="33.1267%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.8767%" y="405" width="0.0806%" height="15" fill="rgb(206,63,51)" fg:x="408" fg:w="1"/><text x="33.1267%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.8767%" y="549" width="0.1612%" height="15" fill="rgb(250,214,3)" fg:x="408" fg:w="2"/><text x="33.1267%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.9573%" y="533" width="0.0806%" height="15" fill="rgb(254,89,27)" fg:x="409" fg:w="1"/><text x="33.2073%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.9573%" y="517" width="0.0806%" height="15" fill="rgb(249,41,14)" fg:x="409" fg:w="1"/><text x="33.2073%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.9573%" y="501" width="0.0806%" height="15" fill="rgb(221,196,51)" fg:x="409" fg:w="1"/><text x="33.2073%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.9573%" y="485" width="0.0806%" height="15" fill="rgb(214,116,26)" fg:x="409" fg:w="1"/><text x="33.2073%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.9573%" y="469" width="0.0806%" height="15" fill="rgb(236,67,7)" fg:x="409" fg:w="1"/><text x="33.2073%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.9573%" y="453" width="0.0806%" height="15" fill="rgb(253,179,32)" fg:x="409" fg:w="1"/><text x="33.2073%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.9573%" y="437" width="0.0806%" height="15" fill="rgb(218,33,15)" fg:x="409" fg:w="1"/><text x="33.2073%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.9573%" y="421" width="0.0806%" height="15" fill="rgb(217,202,41)" fg:x="409" fg:w="1"/><text x="33.2073%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.9573%" y="405" width="0.0806%" height="15" fill="rgb(234,133,5)" fg:x="409" fg:w="1"/><text x="33.2073%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.9573%" y="389" width="0.0806%" height="15" fill="rgb(240,47,40)" fg:x="409" fg:w="1"/><text x="33.2073%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.9573%" y="373" width="0.0806%" height="15" fill="rgb(234,166,26)" fg:x="409" fg:w="1"/><text x="33.2073%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9573%" y="357" width="0.0806%" height="15" fill="rgb(244,125,51)" fg:x="409" fg:w="1"/><text x="33.2073%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="32.7156%" y="597" width="0.4835%" height="15" fill="rgb(229,171,11)" fg:x="406" fg:w="6"/><text x="32.9656%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="32.7961%" y="581" width="0.4029%" height="15" fill="rgb(224,38,45)" fg:x="407" fg:w="5"/><text x="33.0461%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="32.8767%" y="565" width="0.3223%" height="15" fill="rgb(237,27,7)" fg:x="408" fg:w="4"/><text x="33.1267%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.0379%" y="549" width="0.1612%" height="15" fill="rgb(216,52,7)" fg:x="410" fg:w="2"/><text x="33.2879%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.1185%" y="533" width="0.0806%" height="15" fill="rgb(243,11,11)" fg:x="411" fg:w="1"/><text x="33.3685%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.1185%" y="517" width="0.0806%" height="15" fill="rgb(253,167,20)" fg:x="411" fg:w="1"/><text x="33.3685%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.1185%" y="501" width="0.0806%" height="15" fill="rgb(215,207,5)" fg:x="411" fg:w="1"/><text x="33.3685%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="33.1185%" y="485" width="0.0806%" height="15" fill="rgb(252,127,31)" fg:x="411" fg:w="1"/><text x="33.3685%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.1185%" y="469" width="0.0806%" height="15" fill="rgb(209,106,27)" fg:x="411" fg:w="1"/><text x="33.3685%" y="479.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="33.1990%" y="597" width="0.1612%" height="15" fill="rgb(214,220,18)" fg:x="412" fg:w="2"/><text x="33.4490%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.1990%" y="581" width="0.1612%" height="15" fill="rgb(237,89,12)" fg:x="412" fg:w="2"/><text x="33.4490%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.1990%" y="565" width="0.1612%" height="15" fill="rgb(209,167,36)" fg:x="412" fg:w="2"/><text x="33.4490%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="33.1990%" y="549" width="0.1612%" height="15" fill="rgb(243,45,22)" fg:x="412" fg:w="2"/><text x="33.4490%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="33.3602%" y="565" width="0.0806%" height="15" fill="rgb(239,2,46)" fg:x="414" fg:w="1"/><text x="33.6102%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="33.4408%" y="565" width="0.0806%" height="15" fill="rgb(241,101,0)" fg:x="415" fg:w="1"/><text x="33.6908%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.4408%" y="549" width="0.0806%" height="15" fill="rgb(244,34,31)" fg:x="415" fg:w="1"/><text x="33.6908%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.4408%" y="533" width="0.0806%" height="15" fill="rgb(248,23,22)" fg:x="415" fg:w="1"/><text x="33.6908%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="33.5214%" y="549" width="0.0806%" height="15" fill="rgb(218,27,48)" fg:x="416" fg:w="1"/><text x="33.7714%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.97%)</title><rect x="32.7156%" y="613" width="0.9670%" height="15" fill="rgb(232,78,1)" fg:x="406" fg:w="12"/><text x="32.9656%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="33.3602%" y="597" width="0.3223%" height="15" fill="rgb(233,169,12)" fg:x="414" fg:w="4"/><text x="33.6102%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="33.3602%" y="581" width="0.3223%" height="15" fill="rgb(225,222,54)" fg:x="414" fg:w="4"/><text x="33.6102%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="33.5214%" y="565" width="0.1612%" height="15" fill="rgb(245,126,29)" fg:x="416" fg:w="2"/><text x="33.7714%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="33.6019%" y="549" width="0.0806%" height="15" fill="rgb(241,63,48)" fg:x="417" fg:w="1"/><text x="33.8519%" y="559.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="33.6825%" y="613" width="0.0806%" height="15" fill="rgb(235,126,38)" fg:x="418" fg:w="1"/><text x="33.9325%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6825%" y="597" width="0.0806%" height="15" fill="rgb(232,96,49)" fg:x="418" fg:w="1"/><text x="33.9325%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="33.7631%" y="597" width="0.0806%" height="15" fill="rgb(211,146,40)" fg:x="419" fg:w="1"/><text x="34.0131%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.7631%" y="581" width="0.0806%" height="15" fill="rgb(247,93,44)" fg:x="419" fg:w="1"/><text x="34.0131%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7631%" y="565" width="0.0806%" height="15" fill="rgb(251,41,49)" fg:x="419" fg:w="1"/><text x="34.0131%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7631%" y="549" width="0.0806%" height="15" fill="rgb(218,155,12)" fg:x="419" fg:w="1"/><text x="34.0131%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.7631%" y="533" width="0.0806%" height="15" fill="rgb(221,161,30)" fg:x="419" fg:w="1"/><text x="34.0131%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.7631%" y="517" width="0.0806%" height="15" fill="rgb(221,179,11)" fg:x="419" fg:w="1"/><text x="34.0131%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.7631%" y="501" width="0.0806%" height="15" fill="rgb(224,170,48)" fg:x="419" fg:w="1"/><text x="34.0131%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.7631%" y="485" width="0.0806%" height="15" fill="rgb(223,117,5)" fg:x="419" fg:w="1"/><text x="34.0131%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.7631%" y="469" width="0.0806%" height="15" fill="rgb(209,52,20)" fg:x="419" fg:w="1"/><text x="34.0131%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.7631%" y="453" width="0.0806%" height="15" fill="rgb(209,19,41)" fg:x="419" fg:w="1"/><text x="34.0131%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.7631%" y="437" width="0.0806%" height="15" fill="rgb(210,177,12)" fg:x="419" fg:w="1"/><text x="34.0131%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.7631%" y="421" width="0.0806%" height="15" fill="rgb(211,159,37)" fg:x="419" fg:w="1"/><text x="34.0131%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.7631%" y="405" width="0.0806%" height="15" fill="rgb(209,20,2)" fg:x="419" fg:w="1"/><text x="34.0131%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.7631%" y="389" width="0.0806%" height="15" fill="rgb(244,3,46)" fg:x="419" fg:w="1"/><text x="34.0131%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.7631%" y="373" width="0.0806%" height="15" fill="rgb(220,94,38)" fg:x="419" fg:w="1"/><text x="34.0131%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.7631%" y="357" width="0.0806%" height="15" fill="rgb(253,14,31)" fg:x="419" fg:w="1"/><text x="34.0131%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.37%)</title><rect x="32.6350%" y="629" width="1.3699%" height="15" fill="rgb(234,176,13)" fg:x="405" fg:w="17"/><text x="32.8850%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="33.7631%" y="613" width="0.2417%" height="15" fill="rgb(218,62,25)" fg:x="419" fg:w="3"/><text x="34.0131%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="33.8437%" y="597" width="0.1612%" height="15" fill="rgb(216,124,40)" fg:x="420" fg:w="2"/><text x="34.0937%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="33.8437%" y="581" width="0.1612%" height="15" fill="rgb(228,170,12)" fg:x="420" fg:w="2"/><text x="34.0937%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9243%" y="565" width="0.0806%" height="15" fill="rgb(231,226,5)" fg:x="421" fg:w="1"/><text x="34.1743%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.9243%" y="549" width="0.0806%" height="15" fill="rgb(237,122,22)" fg:x="421" fg:w="1"/><text x="34.1743%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9243%" y="533" width="0.0806%" height="15" fill="rgb(209,185,25)" fg:x="421" fg:w="1"/><text x="34.1743%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.9243%" y="517" width="0.0806%" height="15" fill="rgb(228,200,32)" fg:x="421" fg:w="1"/><text x="34.1743%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.9243%" y="501" width="0.0806%" height="15" fill="rgb(217,140,10)" fg:x="421" fg:w="1"/><text x="34.1743%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (18 samples, 1.45%)</title><rect x="32.6350%" y="645" width="1.4504%" height="15" fill="rgb(253,17,24)" fg:x="405" fg:w="18"/><text x="32.8850%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="34.0048%" y="629" width="0.0806%" height="15" fill="rgb(212,61,6)" fg:x="422" fg:w="1"/><text x="34.2548%" y="639.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="34.0048%" y="613" width="0.0806%" height="15" fill="rgb(205,14,25)" fg:x="422" fg:w="1"/><text x="34.2548%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="34.0854%" y="629" width="0.0806%" height="15" fill="rgb(232,69,41)" fg:x="423" fg:w="1"/><text x="34.3354%" y="639.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="34.1660%" y="629" width="0.1612%" height="15" fill="rgb(241,106,47)" fg:x="424" fg:w="2"/><text x="34.4160%" y="639.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (341 samples, 27.48%)</title><rect x="6.9299%" y="677" width="27.4778%" height="15" fill="rgb(210,213,53)" fg:x="86" fg:w="341"/><text x="7.1799%" y="687.50">&lt;tests::HoldingKeyInVessel as tests::WorldFi..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (23 samples, 1.85%)</title><rect x="32.5544%" y="661" width="1.8533%" height="15" fill="rgb(253,175,27)" fg:x="404" fg:w="23"/><text x="32.8044%" y="671.50">p..</text></g><g><title>plugins_core::build::Build::new_world (4 samples, 0.32%)</title><rect x="34.0854%" y="645" width="0.3223%" height="15" fill="rgb(211,171,24)" fg:x="423" fg:w="4"/><text x="34.3354%" y="655.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="34.3272%" y="629" width="0.0806%" height="15" fill="rgb(229,80,7)" fg:x="426" fg:w="1"/><text x="34.5772%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="34.4077%" y="661" width="0.0806%" height="15" fill="rgb(212,46,39)" fg:x="427" fg:w="1"/><text x="34.6577%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.4883%" y="661" width="0.0806%" height="15" fill="rgb(240,80,45)" fg:x="428" fg:w="1"/><text x="34.7383%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.4883%" y="645" width="0.0806%" height="15" fill="rgb(253,177,40)" fg:x="428" fg:w="1"/><text x="34.7383%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.4883%" y="629" width="0.0806%" height="15" fill="rgb(249,200,15)" fg:x="428" fg:w="1"/><text x="34.7383%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.4883%" y="613" width="0.0806%" height="15" fill="rgb(217,78,26)" fg:x="428" fg:w="1"/><text x="34.7383%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="34.4883%" y="597" width="0.0806%" height="15" fill="rgb(254,151,32)" fg:x="428" fg:w="1"/><text x="34.7383%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="34.4883%" y="581" width="0.0806%" height="15" fill="rgb(226,165,27)" fg:x="428" fg:w="1"/><text x="34.7383%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="34.4883%" y="565" width="0.0806%" height="15" fill="rgb(250,206,4)" fg:x="428" fg:w="1"/><text x="34.7383%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.4883%" y="549" width="0.0806%" height="15" fill="rgb(231,229,27)" fg:x="428" fg:w="1"/><text x="34.7383%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.4883%" y="533" width="0.0806%" height="15" fill="rgb(239,217,8)" fg:x="428" fg:w="1"/><text x="34.7383%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="34.5689%" y="629" width="0.0806%" height="15" fill="rgb(225,204,27)" fg:x="429" fg:w="1"/><text x="34.8189%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="34.5689%" y="613" width="0.0806%" height="15" fill="rgb(230,56,32)" fg:x="429" fg:w="1"/><text x="34.8189%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.5689%" y="597" width="0.0806%" height="15" fill="rgb(222,56,27)" fg:x="429" fg:w="1"/><text x="34.8189%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="34.5689%" y="581" width="0.0806%" height="15" fill="rgb(253,108,27)" fg:x="429" fg:w="1"/><text x="34.8189%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="34.7301%" y="453" width="0.0806%" height="15" fill="rgb(212,87,36)" fg:x="431" fg:w="1"/><text x="34.9801%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="34.6495%" y="549" width="0.2417%" height="15" fill="rgb(247,82,36)" fg:x="430" fg:w="3"/><text x="34.8995%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="34.6495%" y="533" width="0.2417%" height="15" fill="rgb(222,143,9)" fg:x="430" fg:w="3"/><text x="34.8995%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="34.6495%" y="517" width="0.2417%" height="15" fill="rgb(238,162,48)" fg:x="430" fg:w="3"/><text x="34.8995%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="34.6495%" y="501" width="0.2417%" height="15" fill="rgb(221,59,43)" fg:x="430" fg:w="3"/><text x="34.8995%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="34.7301%" y="485" width="0.1612%" height="15" fill="rgb(205,166,41)" fg:x="431" fg:w="2"/><text x="34.9801%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="34.7301%" y="469" width="0.1612%" height="15" fill="rgb(241,186,40)" fg:x="431" fg:w="2"/><text x="34.9801%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.8106%" y="453" width="0.0806%" height="15" fill="rgb(216,119,35)" fg:x="432" fg:w="1"/><text x="35.0606%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.8106%" y="437" width="0.0806%" height="15" fill="rgb(208,68,38)" fg:x="432" fg:w="1"/><text x="35.0606%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.8106%" y="421" width="0.0806%" height="15" fill="rgb(217,113,1)" fg:x="432" fg:w="1"/><text x="35.0606%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.8912%" y="517" width="0.0806%" height="15" fill="rgb(242,153,3)" fg:x="433" fg:w="1"/><text x="35.1412%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.8912%" y="501" width="0.0806%" height="15" fill="rgb(229,76,35)" fg:x="433" fg:w="1"/><text x="35.1412%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.0524%" y="485" width="0.0806%" height="15" fill="rgb(229,125,34)" fg:x="435" fg:w="1"/><text x="35.3024%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="34.8912%" y="549" width="0.3223%" height="15" fill="rgb(238,179,36)" fg:x="433" fg:w="4"/><text x="35.1412%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="34.8912%" y="533" width="0.3223%" height="15" fill="rgb(244,183,19)" fg:x="433" fg:w="4"/><text x="35.1412%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="34.9718%" y="517" width="0.2417%" height="15" fill="rgb(216,85,49)" fg:x="434" fg:w="3"/><text x="35.2218%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.0524%" y="501" width="0.1612%" height="15" fill="rgb(208,161,47)" fg:x="435" fg:w="2"/><text x="35.3024%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.1330%" y="485" width="0.0806%" height="15" fill="rgb(233,210,18)" fg:x="436" fg:w="1"/><text x="35.3830%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.2941%" y="485" width="0.0806%" height="15" fill="rgb(205,104,42)" fg:x="438" fg:w="1"/><text x="35.5441%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="35.3747%" y="453" width="0.1612%" height="15" fill="rgb(248,90,43)" fg:x="439" fg:w="2"/><text x="35.6247%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="35.2135%" y="517" width="0.4029%" height="15" fill="rgb(206,198,11)" fg:x="437" fg:w="5"/><text x="35.4635%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="35.2135%" y="501" width="0.4029%" height="15" fill="rgb(239,165,27)" fg:x="437" fg:w="5"/><text x="35.4635%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="35.3747%" y="485" width="0.2417%" height="15" fill="rgb(246,44,32)" fg:x="439" fg:w="3"/><text x="35.6247%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="35.3747%" y="469" width="0.2417%" height="15" fill="rgb(252,65,42)" fg:x="439" fg:w="3"/><text x="35.6247%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.5359%" y="453" width="0.0806%" height="15" fill="rgb(246,197,18)" fg:x="441" fg:w="1"/><text x="35.7859%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.5359%" y="437" width="0.0806%" height="15" fill="rgb(216,192,4)" fg:x="441" fg:w="1"/><text x="35.7859%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="35.6164%" y="501" width="0.1612%" height="15" fill="rgb(208,117,10)" fg:x="442" fg:w="2"/><text x="35.8664%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="35.6164%" y="485" width="0.1612%" height="15" fill="rgb(240,61,47)" fg:x="442" fg:w="2"/><text x="35.8664%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="35.6970%" y="469" width="0.0806%" height="15" fill="rgb(228,178,21)" fg:x="443" fg:w="1"/><text x="35.9470%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="35.6970%" y="453" width="0.0806%" height="15" fill="rgb(219,96,54)" fg:x="443" fg:w="1"/><text x="35.9470%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="35.6970%" y="437" width="0.0806%" height="15" fill="rgb(250,177,24)" fg:x="443" fg:w="1"/><text x="35.9470%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (8 samples, 0.64%)</title><rect x="35.2135%" y="533" width="0.6446%" height="15" fill="rgb(242,154,46)" fg:x="437" fg:w="8"/><text x="35.4635%" y="543.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="35.6164%" y="517" width="0.2417%" height="15" fill="rgb(226,176,29)" fg:x="442" fg:w="3"/><text x="35.8664%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="35.7776%" y="501" width="0.0806%" height="15" fill="rgb(226,29,2)" fg:x="444" fg:w="1"/><text x="36.0276%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.7776%" y="485" width="0.0806%" height="15" fill="rgb(237,104,14)" fg:x="444" fg:w="1"/><text x="36.0276%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.7776%" y="469" width="0.0806%" height="15" fill="rgb(245,207,31)" fg:x="444" fg:w="1"/><text x="36.0276%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.8582%" y="501" width="0.0806%" height="15" fill="rgb(229,211,45)" fg:x="445" fg:w="1"/><text x="36.1082%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.8582%" y="485" width="0.0806%" height="15" fill="rgb(229,113,15)" fg:x="445" fg:w="1"/><text x="36.1082%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="35.8582%" y="469" width="0.0806%" height="15" fill="rgb(237,147,15)" fg:x="445" fg:w="1"/><text x="36.1082%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.9388%" y="485" width="0.0806%" height="15" fill="rgb(244,120,12)" fg:x="446" fg:w="1"/><text x="36.1888%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.0193%" y="485" width="0.0806%" height="15" fill="rgb(205,120,12)" fg:x="447" fg:w="1"/><text x="36.2693%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="36.0999%" y="453" width="0.0806%" height="15" fill="rgb(231,26,45)" fg:x="448" fg:w="1"/><text x="36.3499%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0999%" y="437" width="0.0806%" height="15" fill="rgb(246,98,1)" fg:x="448" fg:w="1"/><text x="36.3499%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="36.0999%" y="421" width="0.0806%" height="15" fill="rgb(207,68,45)" fg:x="448" fg:w="1"/><text x="36.3499%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.0999%" y="405" width="0.0806%" height="15" fill="rgb(231,27,38)" fg:x="448" fg:w="1"/><text x="36.3499%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.1805%" y="421" width="0.0806%" height="15" fill="rgb(214,223,3)" fg:x="449" fg:w="1"/><text x="36.4305%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.1805%" y="405" width="0.0806%" height="15" fill="rgb(228,195,46)" fg:x="449" fg:w="1"/><text x="36.4305%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.3417%" y="405" width="0.0806%" height="15" fill="rgb(231,100,42)" fg:x="451" fg:w="1"/><text x="36.5917%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="36.4222%" y="405" width="0.0806%" height="15" fill="rgb(236,53,4)" fg:x="452" fg:w="1"/><text x="36.6722%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.4222%" y="389" width="0.0806%" height="15" fill="rgb(230,152,12)" fg:x="452" fg:w="1"/><text x="36.6722%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.4222%" y="373" width="0.0806%" height="15" fill="rgb(226,101,19)" fg:x="452" fg:w="1"/><text x="36.6722%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4222%" y="357" width="0.0806%" height="15" fill="rgb(250,149,32)" fg:x="452" fg:w="1"/><text x="36.6722%" y="367.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.73%)</title><rect x="35.8582%" y="533" width="0.7252%" height="15" fill="rgb(232,178,12)" fg:x="445" fg:w="9"/><text x="36.1082%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.73%)</title><rect x="35.8582%" y="517" width="0.7252%" height="15" fill="rgb(246,151,17)" fg:x="445" fg:w="9"/><text x="36.1082%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="35.9388%" y="501" width="0.6446%" height="15" fill="rgb(252,17,51)" fg:x="446" fg:w="8"/><text x="36.1888%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="36.0999%" y="485" width="0.4835%" height="15" fill="rgb(250,207,23)" fg:x="448" fg:w="6"/><text x="36.3499%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="36.0999%" y="469" width="0.4835%" height="15" fill="rgb(205,27,5)" fg:x="448" fg:w="6"/><text x="36.3499%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="36.1805%" y="453" width="0.4029%" height="15" fill="rgb(224,32,19)" fg:x="449" fg:w="5"/><text x="36.4305%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="36.1805%" y="437" width="0.4029%" height="15" fill="rgb(247,214,40)" fg:x="449" fg:w="5"/><text x="36.4305%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="36.2611%" y="421" width="0.3223%" height="15" fill="rgb(239,199,17)" fg:x="450" fg:w="4"/><text x="36.5111%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5028%" y="405" width="0.0806%" height="15" fill="rgb(251,159,9)" fg:x="453" fg:w="1"/><text x="36.7528%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.5834%" y="469" width="0.0806%" height="15" fill="rgb(225,78,32)" fg:x="454" fg:w="1"/><text x="36.8334%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.5834%" y="453" width="0.0806%" height="15" fill="rgb(206,97,47)" fg:x="454" fg:w="1"/><text x="36.8334%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.5834%" y="437" width="0.0806%" height="15" fill="rgb(227,107,4)" fg:x="454" fg:w="1"/><text x="36.8334%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.5834%" y="421" width="0.0806%" height="15" fill="rgb(241,146,50)" fg:x="454" fg:w="1"/><text x="36.8334%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.5834%" y="405" width="0.0806%" height="15" fill="rgb(232,92,30)" fg:x="454" fg:w="1"/><text x="36.8334%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.5834%" y="389" width="0.0806%" height="15" fill="rgb(222,0,40)" fg:x="454" fg:w="1"/><text x="36.8334%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.6640%" y="469" width="0.0806%" height="15" fill="rgb(219,54,33)" fg:x="455" fg:w="1"/><text x="36.9140%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6640%" y="453" width="0.0806%" height="15" fill="rgb(226,209,28)" fg:x="455" fg:w="1"/><text x="36.9140%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 2.18%)</title><rect x="34.6495%" y="581" width="2.1757%" height="15" fill="rgb(254,205,35)" fg:x="430" fg:w="27"/><text x="34.8995%" y="591.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (27 samples, 2.18%)</title><rect x="34.6495%" y="565" width="2.1757%" height="15" fill="rgb(230,159,3)" fg:x="430" fg:w="27"/><text x="34.8995%" y="575.50">e..</text></g><g><title>kernel::model::any_entity_changes (20 samples, 1.61%)</title><rect x="35.2135%" y="549" width="1.6116%" height="15" fill="rgb(232,190,24)" fg:x="437" fg:w="20"/><text x="35.4635%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="36.5834%" y="533" width="0.2417%" height="15" fill="rgb(217,227,44)" fg:x="454" fg:w="3"/><text x="36.8334%" y="543.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="36.5834%" y="517" width="0.2417%" height="15" fill="rgb(236,211,1)" fg:x="454" fg:w="3"/><text x="36.8334%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="36.5834%" y="501" width="0.2417%" height="15" fill="rgb(250,127,46)" fg:x="454" fg:w="3"/><text x="36.8334%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="36.5834%" y="485" width="0.2417%" height="15" fill="rgb(229,213,6)" fg:x="454" fg:w="3"/><text x="36.8334%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7446%" y="469" width="0.0806%" height="15" fill="rgb(237,15,36)" fg:x="456" fg:w="1"/><text x="36.9946%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7446%" y="453" width="0.0806%" height="15" fill="rgb(213,131,41)" fg:x="456" fg:w="1"/><text x="36.9946%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.7446%" y="437" width="0.0806%" height="15" fill="rgb(225,82,44)" fg:x="456" fg:w="1"/><text x="36.9946%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="36.8251%" y="533" width="0.5641%" height="15" fill="rgb(249,42,11)" fg:x="457" fg:w="7"/><text x="37.0751%" y="543.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="36.9057%" y="517" width="0.4835%" height="15" fill="rgb(253,11,29)" fg:x="458" fg:w="6"/><text x="37.1557%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="37.0669%" y="501" width="0.3223%" height="15" fill="rgb(206,8,54)" fg:x="460" fg:w="4"/><text x="37.3169%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="37.2280%" y="485" width="0.1612%" height="15" fill="rgb(222,186,2)" fg:x="462" fg:w="2"/><text x="37.4780%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.81%)</title><rect x="36.8251%" y="549" width="0.8058%" height="15" fill="rgb(221,206,53)" fg:x="457" fg:w="10"/><text x="37.0751%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="37.3892%" y="533" width="0.2417%" height="15" fill="rgb(230,150,21)" fg:x="464" fg:w="3"/><text x="37.6392%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="37.3892%" y="517" width="0.2417%" height="15" fill="rgb(253,202,10)" fg:x="464" fg:w="3"/><text x="37.6392%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="37.4698%" y="501" width="0.1612%" height="15" fill="rgb(238,109,40)" fg:x="465" fg:w="2"/><text x="37.7198%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="37.6309%" y="533" width="0.0806%" height="15" fill="rgb(247,120,22)" fg:x="467" fg:w="1"/><text x="37.8809%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.6309%" y="517" width="0.0806%" height="15" fill="rgb(207,43,30)" fg:x="467" fg:w="1"/><text x="37.8809%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.6309%" y="501" width="0.0806%" height="15" fill="rgb(213,211,24)" fg:x="467" fg:w="1"/><text x="37.8809%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.6309%" y="485" width="0.0806%" height="15" fill="rgb(239,73,39)" fg:x="467" fg:w="1"/><text x="37.8809%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="37.7115%" y="533" width="0.0806%" height="15" fill="rgb(245,182,19)" fg:x="468" fg:w="1"/><text x="37.9615%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.7115%" y="517" width="0.0806%" height="15" fill="rgb(247,143,26)" fg:x="468" fg:w="1"/><text x="37.9615%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.7115%" y="501" width="0.0806%" height="15" fill="rgb(228,191,23)" fg:x="468" fg:w="1"/><text x="37.9615%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.7115%" y="485" width="0.0806%" height="15" fill="rgb(253,165,31)" fg:x="468" fg:w="1"/><text x="37.9615%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="37.7921%" y="517" width="0.1612%" height="15" fill="rgb(234,138,20)" fg:x="469" fg:w="2"/><text x="38.0421%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="37.8727%" y="501" width="0.0806%" height="15" fill="rgb(218,191,29)" fg:x="470" fg:w="1"/><text x="38.1227%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.8727%" y="485" width="0.0806%" height="15" fill="rgb(221,157,19)" fg:x="470" fg:w="1"/><text x="38.1227%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.8727%" y="469" width="0.0806%" height="15" fill="rgb(237,26,42)" fg:x="470" fg:w="1"/><text x="38.1227%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.8727%" y="453" width="0.0806%" height="15" fill="rgb(220,163,24)" fg:x="470" fg:w="1"/><text x="38.1227%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="37.9533%" y="517" width="0.3223%" height="15" fill="rgb(242,115,20)" fg:x="471" fg:w="4"/><text x="38.2033%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="38.1144%" y="501" width="0.1612%" height="15" fill="rgb(210,206,9)" fg:x="473" fg:w="2"/><text x="38.3644%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="38.1144%" y="485" width="0.1612%" height="15" fill="rgb(208,71,17)" fg:x="473" fg:w="2"/><text x="38.3644%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="38.1144%" y="469" width="0.1612%" height="15" fill="rgb(233,7,5)" fg:x="473" fg:w="2"/><text x="38.3644%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="38.2756%" y="501" width="0.0806%" height="15" fill="rgb(207,92,33)" fg:x="475" fg:w="1"/><text x="38.5256%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="38.3562%" y="485" width="0.0806%" height="15" fill="rgb(218,87,9)" fg:x="476" fg:w="1"/><text x="38.6062%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="38.4367%" y="485" width="0.0806%" height="15" fill="rgb(219,47,37)" fg:x="477" fg:w="1"/><text x="38.6867%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="38.6785%" y="469" width="0.0806%" height="15" fill="rgb(221,152,34)" fg:x="480" fg:w="1"/><text x="38.9285%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.6785%" y="453" width="0.0806%" height="15" fill="rgb(235,176,21)" fg:x="480" fg:w="1"/><text x="38.9285%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="38.5173%" y="485" width="0.3223%" height="15" fill="rgb(232,212,21)" fg:x="478" fg:w="4"/><text x="38.7673%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.7591%" y="469" width="0.0806%" height="15" fill="rgb(245,82,39)" fg:x="481" fg:w="1"/><text x="39.0091%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="38.3562%" y="501" width="0.6446%" height="15" fill="rgb(241,52,51)" fg:x="476" fg:w="8"/><text x="38.6062%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="38.8396%" y="485" width="0.1612%" height="15" fill="rgb(219,91,24)" fg:x="482" fg:w="2"/><text x="39.0896%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.9202%" y="469" width="0.0806%" height="15" fill="rgb(241,142,12)" fg:x="483" fg:w="1"/><text x="39.1702%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.9202%" y="453" width="0.0806%" height="15" fill="rgb(230,27,9)" fg:x="483" fg:w="1"/><text x="39.1702%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="38.2756%" y="517" width="0.8058%" height="15" fill="rgb(249,181,32)" fg:x="475" fg:w="10"/><text x="38.5256%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.0008%" y="501" width="0.0806%" height="15" fill="rgb(230,107,3)" fg:x="484" fg:w="1"/><text x="39.2508%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.0008%" y="485" width="0.0806%" height="15" fill="rgb(246,204,14)" fg:x="484" fg:w="1"/><text x="39.2508%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.45%)</title><rect x="37.7921%" y="533" width="1.4504%" height="15" fill="rgb(213,192,47)" fg:x="469" fg:w="18"/><text x="38.0421%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="39.0814%" y="517" width="0.1612%" height="15" fill="rgb(240,44,36)" fg:x="485" fg:w="2"/><text x="39.3314%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="39.0814%" y="501" width="0.1612%" height="15" fill="rgb(244,209,38)" fg:x="485" fg:w="2"/><text x="39.3314%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.1620%" y="485" width="0.0806%" height="15" fill="rgb(219,34,37)" fg:x="486" fg:w="1"/><text x="39.4120%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.58%)</title><rect x="36.8251%" y="565" width="2.5786%" height="15" fill="rgb(210,28,6)" fg:x="457" fg:w="32"/><text x="37.0751%" y="575.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.77%)</title><rect x="37.6309%" y="549" width="1.7728%" height="15" fill="rgb(244,110,52)" fg:x="467" fg:w="22"/><text x="37.8809%" y="559.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="39.2425%" y="533" width="0.1612%" height="15" fill="rgb(254,124,47)" fg:x="487" fg:w="2"/><text x="39.4925%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="39.2425%" y="517" width="0.1612%" height="15" fill="rgb(254,110,13)" fg:x="487" fg:w="2"/><text x="39.4925%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="39.2425%" y="501" width="0.1612%" height="15" fill="rgb(252,57,21)" fg:x="487" fg:w="2"/><text x="39.4925%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="39.2425%" y="485" width="0.1612%" height="15" fill="rgb(242,60,45)" fg:x="487" fg:w="2"/><text x="39.4925%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="39.2425%" y="469" width="0.1612%" height="15" fill="rgb(234,49,30)" fg:x="487" fg:w="2"/><text x="39.4925%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="39.2425%" y="453" width="0.1612%" height="15" fill="rgb(218,98,6)" fg:x="487" fg:w="2"/><text x="39.4925%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.5649%" y="533" width="0.0806%" height="15" fill="rgb(220,174,29)" fg:x="491" fg:w="1"/><text x="39.8149%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="39.6454%" y="533" width="0.1612%" height="15" fill="rgb(236,163,23)" fg:x="492" fg:w="2"/><text x="39.8954%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.7260%" y="517" width="0.0806%" height="15" fill="rgb(242,114,45)" fg:x="493" fg:w="1"/><text x="39.9760%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.8872%" y="517" width="0.0806%" height="15" fill="rgb(232,10,53)" fg:x="495" fg:w="1"/><text x="40.1372%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="39.9678%" y="517" width="0.2417%" height="15" fill="rgb(245,108,29)" fg:x="496" fg:w="3"/><text x="40.2178%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.0483%" y="501" width="0.1612%" height="15" fill="rgb(240,89,53)" fg:x="497" fg:w="2"/><text x="40.2983%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.2095%" y="501" width="0.0806%" height="15" fill="rgb(226,60,45)" fg:x="499" fg:w="1"/><text x="40.4595%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.2901%" y="501" width="0.0806%" height="15" fill="rgb(230,41,44)" fg:x="500" fg:w="1"/><text x="40.5401%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="39.4037%" y="565" width="1.1281%" height="15" fill="rgb(230,26,20)" fg:x="489" fg:w="14"/><text x="39.6537%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.13%)</title><rect x="39.4037%" y="549" width="1.1281%" height="15" fill="rgb(237,170,32)" fg:x="489" fg:w="14"/><text x="39.6537%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="39.8066%" y="533" width="0.7252%" height="15" fill="rgb(212,35,42)" fg:x="494" fg:w="9"/><text x="40.0566%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="40.2095%" y="517" width="0.3223%" height="15" fill="rgb(227,31,34)" fg:x="499" fg:w="4"/><text x="40.4595%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.3707%" y="501" width="0.1612%" height="15" fill="rgb(216,19,18)" fg:x="501" fg:w="2"/><text x="40.6207%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.3707%" y="485" width="0.1612%" height="15" fill="rgb(211,133,42)" fg:x="501" fg:w="2"/><text x="40.6207%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.6124%" y="533" width="0.0806%" height="15" fill="rgb(244,66,13)" fg:x="504" fg:w="1"/><text x="40.8624%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="40.7736%" y="501" width="0.2417%" height="15" fill="rgb(218,185,50)" fg:x="506" fg:w="3"/><text x="41.0236%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.0153%" y="501" width="0.0806%" height="15" fill="rgb(219,149,13)" fg:x="509" fg:w="1"/><text x="41.2653%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.0153%" y="485" width="0.0806%" height="15" fill="rgb(221,125,0)" fg:x="509" fg:w="1"/><text x="41.2653%" y="495.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="41.1765%" y="485" width="0.3223%" height="15" fill="rgb(247,126,27)" fg:x="511" fg:w="4"/><text x="41.4265%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.4988%" y="485" width="0.0806%" height="15" fill="rgb(250,138,30)" fg:x="515" fg:w="1"/><text x="41.7488%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4988%" y="469" width="0.0806%" height="15" fill="rgb(230,151,9)" fg:x="515" fg:w="1"/><text x="41.7488%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.6600%" y="469" width="0.0806%" height="15" fill="rgb(233,80,38)" fg:x="517" fg:w="1"/><text x="41.9100%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.7405%" y="453" width="0.0806%" height="15" fill="rgb(232,68,43)" fg:x="518" fg:w="1"/><text x="41.9905%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.8211%" y="453" width="0.0806%" height="15" fill="rgb(254,5,50)" fg:x="519" fg:w="1"/><text x="42.0711%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8211%" y="437" width="0.0806%" height="15" fill="rgb(225,45,5)" fg:x="519" fg:w="1"/><text x="42.0711%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.37%)</title><rect x="40.6930%" y="533" width="1.3699%" height="15" fill="rgb(239,22,3)" fg:x="505" fg:w="17"/><text x="40.9430%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.37%)</title><rect x="40.6930%" y="517" width="1.3699%" height="15" fill="rgb(243,129,0)" fg:x="505" fg:w="17"/><text x="40.9430%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="41.0959%" y="501" width="0.9670%" height="15" fill="rgb(223,164,0)" fg:x="510" fg:w="12"/><text x="41.3459%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="41.5794%" y="485" width="0.4835%" height="15" fill="rgb(221,46,29)" fg:x="516" fg:w="6"/><text x="41.8294%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="41.7405%" y="469" width="0.3223%" height="15" fill="rgb(205,97,47)" fg:x="518" fg:w="4"/><text x="41.9905%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.9017%" y="453" width="0.1612%" height="15" fill="rgb(249,14,8)" fg:x="520" fg:w="2"/><text x="42.1517%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.9823%" y="437" width="0.0806%" height="15" fill="rgb(216,77,3)" fg:x="521" fg:w="1"/><text x="42.2323%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.9823%" y="421" width="0.0806%" height="15" fill="rgb(206,168,54)" fg:x="521" fg:w="1"/><text x="42.2323%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="42.2240%" y="469" width="0.2417%" height="15" fill="rgb(236,3,41)" fg:x="524" fg:w="3"/><text x="42.4740%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="42.3046%" y="453" width="0.1612%" height="15" fill="rgb(231,132,24)" fg:x="525" fg:w="2"/><text x="42.5546%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (24 samples, 1.93%)</title><rect x="40.6124%" y="549" width="1.9339%" height="15" fill="rgb(227,221,40)" fg:x="504" fg:w="24"/><text x="40.8624%" y="559.50">&lt;..</text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="42.0629%" y="533" width="0.4835%" height="15" fill="rgb(233,151,11)" fg:x="522" fg:w="6"/><text x="42.3129%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="42.0629%" y="517" width="0.4835%" height="15" fill="rgb(247,81,35)" fg:x="522" fg:w="6"/><text x="42.3129%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="42.1434%" y="501" width="0.4029%" height="15" fill="rgb(243,128,48)" fg:x="523" fg:w="5"/><text x="42.3934%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="42.1434%" y="485" width="0.4029%" height="15" fill="rgb(253,16,10)" fg:x="523" fg:w="5"/><text x="42.3934%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.4658%" y="469" width="0.0806%" height="15" fill="rgb(228,67,27)" fg:x="527" fg:w="1"/><text x="42.7158%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="42.5463%" y="517" width="0.1612%" height="15" fill="rgb(231,105,25)" fg:x="528" fg:w="2"/><text x="42.7963%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7881%" y="485" width="0.0806%" height="15" fill="rgb(213,166,47)" fg:x="531" fg:w="1"/><text x="43.0381%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="42.7075%" y="517" width="0.3223%" height="15" fill="rgb(209,27,10)" fg:x="530" fg:w="4"/><text x="42.9575%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="42.7881%" y="501" width="0.2417%" height="15" fill="rgb(241,44,30)" fg:x="531" fg:w="3"/><text x="43.0381%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="42.8687%" y="485" width="0.1612%" height="15" fill="rgb(223,216,15)" fg:x="532" fg:w="2"/><text x="43.1187%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="43.0298%" y="517" width="0.0806%" height="15" fill="rgb(227,14,7)" fg:x="534" fg:w="1"/><text x="43.2798%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="43.1104%" y="517" width="0.3223%" height="15" fill="rgb(237,14,5)" fg:x="535" fg:w="4"/><text x="43.3604%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="43.1910%" y="501" width="0.2417%" height="15" fill="rgb(232,14,36)" fg:x="536" fg:w="3"/><text x="43.4410%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.2716%" y="485" width="0.1612%" height="15" fill="rgb(234,0,38)" fg:x="537" fg:w="2"/><text x="43.5216%" y="495.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="43.5939%" y="501" width="0.2417%" height="15" fill="rgb(207,170,14)" fg:x="541" fg:w="3"/><text x="43.8439%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.8356%" y="501" width="0.0806%" height="15" fill="rgb(252,45,13)" fg:x="544" fg:w="1"/><text x="44.0856%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.8356%" y="485" width="0.0806%" height="15" fill="rgb(213,142,7)" fg:x="544" fg:w="1"/><text x="44.0856%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="43.8356%" y="469" width="0.0806%" height="15" fill="rgb(216,157,23)" fg:x="544" fg:w="1"/><text x="44.0856%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="43.9162%" y="485" width="0.2417%" height="15" fill="rgb(212,145,33)" fg:x="545" fg:w="3"/><text x="44.1662%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="44.1579%" y="469" width="0.3223%" height="15" fill="rgb(233,26,13)" fg:x="548" fg:w="4"/><text x="44.4079%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.3191%" y="453" width="0.1612%" height="15" fill="rgb(219,196,19)" fg:x="550" fg:w="2"/><text x="44.5691%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.3191%" y="437" width="0.1612%" height="15" fill="rgb(246,56,21)" fg:x="550" fg:w="2"/><text x="44.5691%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="44.4803%" y="469" width="0.0806%" height="15" fill="rgb(222,28,53)" fg:x="552" fg:w="1"/><text x="44.7303%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="44.4803%" y="453" width="0.0806%" height="15" fill="rgb(224,5,27)" fg:x="552" fg:w="1"/><text x="44.7303%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.4803%" y="437" width="0.0806%" height="15" fill="rgb(220,153,33)" fg:x="552" fg:w="1"/><text x="44.7303%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.7220%" y="437" width="0.0806%" height="15" fill="rgb(226,58,19)" fg:x="555" fg:w="1"/><text x="44.9720%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.7220%" y="421" width="0.0806%" height="15" fill="rgb(239,112,23)" fg:x="555" fg:w="1"/><text x="44.9720%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.7220%" y="405" width="0.0806%" height="15" fill="rgb(251,213,20)" fg:x="555" fg:w="1"/><text x="44.9720%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.9637%" y="421" width="0.0806%" height="15" fill="rgb(215,181,21)" fg:x="558" fg:w="1"/><text x="45.2137%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.0443%" y="405" width="0.2417%" height="15" fill="rgb(240,8,35)" fg:x="559" fg:w="3"/><text x="45.2943%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.1249%" y="389" width="0.1612%" height="15" fill="rgb(232,203,3)" fg:x="560" fg:w="2"/><text x="45.3749%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="45.1249%" y="373" width="0.1612%" height="15" fill="rgb(214,202,43)" fg:x="560" fg:w="2"/><text x="45.3749%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.21%)</title><rect x="44.1579%" y="485" width="1.2087%" height="15" fill="rgb(254,35,11)" fg:x="548" fg:w="15"/><text x="44.4079%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="44.5608%" y="469" width="0.8058%" height="15" fill="rgb(239,173,13)" fg:x="553" fg:w="10"/><text x="44.8108%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="44.7220%" y="453" width="0.6446%" height="15" fill="rgb(220,141,0)" fg:x="555" fg:w="8"/><text x="44.9720%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="44.8026%" y="437" width="0.5641%" height="15" fill="rgb(210,98,12)" fg:x="556" fg:w="7"/><text x="45.0526%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="45.0443%" y="421" width="0.3223%" height="15" fill="rgb(254,153,22)" fg:x="559" fg:w="4"/><text x="45.2943%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="45.2861%" y="405" width="0.0806%" height="15" fill="rgb(247,223,17)" fg:x="562" fg:w="1"/><text x="45.5361%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.2861%" y="389" width="0.0806%" height="15" fill="rgb(246,56,7)" fg:x="562" fg:w="1"/><text x="45.5361%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (36 samples, 2.90%)</title><rect x="42.5463%" y="549" width="2.9009%" height="15" fill="rgb(240,226,12)" fg:x="528" fg:w="36"/><text x="42.7963%" y="559.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (36 samples, 2.90%)</title><rect x="42.5463%" y="533" width="2.9009%" height="15" fill="rgb(205,87,46)" fg:x="528" fg:w="36"/><text x="42.7963%" y="543.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (25 samples, 2.01%)</title><rect x="43.4327%" y="517" width="2.0145%" height="15" fill="rgb(245,214,51)" fg:x="539" fg:w="25"/><text x="43.6827%" y="527.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.53%)</title><rect x="43.9162%" y="501" width="1.5310%" height="15" fill="rgb(223,172,33)" fg:x="545" fg:w="19"/><text x="44.1662%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3666%" y="485" width="0.0806%" height="15" fill="rgb(227,203,34)" fg:x="563" fg:w="1"/><text x="45.6166%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="45.6890%" y="405" width="0.1612%" height="15" fill="rgb(248,143,44)" fg:x="567" fg:w="2"/><text x="45.9390%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.6890%" y="389" width="0.1612%" height="15" fill="rgb(226,162,5)" fg:x="567" fg:w="2"/><text x="45.9390%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.6890%" y="373" width="0.1612%" height="15" fill="rgb(211,143,1)" fg:x="567" fg:w="2"/><text x="45.9390%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.8501%" y="389" width="0.0806%" height="15" fill="rgb(224,96,15)" fg:x="569" fg:w="1"/><text x="46.1001%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8501%" y="373" width="0.0806%" height="15" fill="rgb(222,4,38)" fg:x="569" fg:w="1"/><text x="46.1001%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.9307%" y="389" width="0.0806%" height="15" fill="rgb(253,228,15)" fg:x="570" fg:w="1"/><text x="46.1807%" y="399.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="45.9307%" y="373" width="0.0806%" height="15" fill="rgb(242,194,12)" fg:x="570" fg:w="1"/><text x="46.1807%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="45.9307%" y="357" width="0.0806%" height="15" fill="rgb(214,177,31)" fg:x="570" fg:w="1"/><text x="46.1807%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="45.6084%" y="421" width="0.4835%" height="15" fill="rgb(226,58,51)" fg:x="566" fg:w="6"/><text x="45.8584%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="45.8501%" y="405" width="0.2417%" height="15" fill="rgb(250,119,16)" fg:x="569" fg:w="3"/><text x="46.1001%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.0113%" y="389" width="0.0806%" height="15" fill="rgb(223,128,53)" fg:x="571" fg:w="1"/><text x="46.2613%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.0113%" y="373" width="0.0806%" height="15" fill="rgb(251,199,15)" fg:x="571" fg:w="1"/><text x="46.2613%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.0113%" y="357" width="0.0806%" height="15" fill="rgb(235,168,42)" fg:x="571" fg:w="1"/><text x="46.2613%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.0919%" y="421" width="0.0806%" height="15" fill="rgb(250,210,17)" fg:x="572" fg:w="1"/><text x="46.3419%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="45.6084%" y="453" width="0.7252%" height="15" fill="rgb(226,36,41)" fg:x="566" fg:w="9"/><text x="45.8584%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="45.6084%" y="437" width="0.7252%" height="15" fill="rgb(225,87,10)" fg:x="566" fg:w="9"/><text x="45.8584%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.1724%" y="421" width="0.1612%" height="15" fill="rgb(228,83,9)" fg:x="573" fg:w="2"/><text x="46.4224%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.1724%" y="405" width="0.1612%" height="15" fill="rgb(225,16,36)" fg:x="573" fg:w="2"/><text x="46.4224%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.1724%" y="389" width="0.1612%" height="15" fill="rgb(242,198,13)" fg:x="573" fg:w="2"/><text x="46.4224%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="46.4142%" y="437" width="0.1612%" height="15" fill="rgb(239,25,51)" fg:x="576" fg:w="2"/><text x="46.6642%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="46.3336%" y="453" width="0.3223%" height="15" fill="rgb(239,28,37)" fg:x="575" fg:w="4"/><text x="46.5836%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.5753%" y="437" width="0.0806%" height="15" fill="rgb(234,70,17)" fg:x="578" fg:w="1"/><text x="46.8253%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.13%)</title><rect x="45.6084%" y="485" width="1.1281%" height="15" fill="rgb(231,215,53)" fg:x="566" fg:w="14"/><text x="45.8584%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.13%)</title><rect x="45.6084%" y="469" width="1.1281%" height="15" fill="rgb(218,140,42)" fg:x="566" fg:w="14"/><text x="45.8584%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.6559%" y="453" width="0.0806%" height="15" fill="rgb(233,227,45)" fg:x="579" fg:w="1"/><text x="46.9059%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.6559%" y="437" width="0.0806%" height="15" fill="rgb(225,189,21)" fg:x="579" fg:w="1"/><text x="46.9059%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6559%" y="421" width="0.0806%" height="15" fill="rgb(237,176,54)" fg:x="579" fg:w="1"/><text x="46.9059%" y="431.50"></text></g><g><title>engine::session::state::State::close (153 samples, 12.33%)</title><rect x="34.5689%" y="661" width="12.3288%" height="15" fill="rgb(215,131,46)" fg:x="429" fg:w="153"/><text x="34.8189%" y="671.50">engine::session::s..</text></g><g><title>engine::session::state::State::flush_entities (153 samples, 12.33%)</title><rect x="34.5689%" y="645" width="12.3288%" height="15" fill="rgb(218,95,20)" fg:x="429" fg:w="153"/><text x="34.8189%" y="655.50">engine::session::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (152 samples, 12.25%)</title><rect x="34.6495%" y="629" width="12.2482%" height="15" fill="rgb(208,198,12)" fg:x="430" fg:w="152"/><text x="34.8995%" y="639.50">engine::session::i..</text></g><g><title>core::iter::adapters::try_process (152 samples, 12.25%)</title><rect x="34.6495%" y="613" width="12.2482%" height="15" fill="rgb(239,107,50)" fg:x="430" fg:w="152"/><text x="34.8995%" y="623.50">core::iter::adapte..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (152 samples, 12.25%)</title><rect x="34.6495%" y="597" width="12.2482%" height="15" fill="rgb(240,217,37)" fg:x="430" fg:w="152"/><text x="34.8995%" y="607.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (125 samples, 10.07%)</title><rect x="36.8251%" y="581" width="10.0725%" height="15" fill="rgb(242,197,49)" fg:x="457" fg:w="125"/><text x="37.0751%" y="591.50">engine::session..</text></g><g><title>kernel::model::any_entity_changes (79 samples, 6.37%)</title><rect x="40.5318%" y="565" width="6.3658%" height="15" fill="rgb(219,171,17)" fg:x="503" fg:w="79"/><text x="40.7818%" y="575.50">kernel::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (18 samples, 1.45%)</title><rect x="45.4472%" y="549" width="1.4504%" height="15" fill="rgb(209,81,40)" fg:x="564" fg:w="18"/><text x="45.6972%" y="559.50"></text></g><g><title>serde_json::de::from_trait (18 samples, 1.45%)</title><rect x="45.4472%" y="533" width="1.4504%" height="15" fill="rgb(237,156,30)" fg:x="564" fg:w="18"/><text x="45.6972%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.45%)</title><rect x="45.4472%" y="517" width="1.4504%" height="15" fill="rgb(212,127,16)" fg:x="564" fg:w="18"/><text x="45.6972%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.45%)</title><rect x="45.4472%" y="501" width="1.4504%" height="15" fill="rgb(226,66,32)" fg:x="564" fg:w="18"/><text x="45.6972%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.7365%" y="485" width="0.1612%" height="15" fill="rgb(245,22,46)" fg:x="580" fg:w="2"/><text x="46.9865%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.8171%" y="469" width="0.0806%" height="15" fill="rgb(210,112,21)" fg:x="581" fg:w="1"/><text x="47.0671%" y="479.50"></text></g><g><title>engine::session::Session::close (156 samples, 12.57%)</title><rect x="34.4077%" y="677" width="12.5705%" height="15" fill="rgb(207,118,39)" fg:x="427" fg:w="156"/><text x="34.6577%" y="687.50">engine::session::Se..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="46.8977%" y="661" width="0.0806%" height="15" fill="rgb(205,206,35)" fg:x="582" fg:w="1"/><text x="47.1477%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.1394%" y="581" width="0.0806%" height="15" fill="rgb(222,120,2)" fg:x="585" fg:w="1"/><text x="47.3894%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.1394%" y="565" width="0.0806%" height="15" fill="rgb(205,38,18)" fg:x="585" fg:w="1"/><text x="47.3894%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.1394%" y="549" width="0.0806%" height="15" fill="rgb(226,61,2)" fg:x="585" fg:w="1"/><text x="47.3894%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.1394%" y="533" width="0.0806%" height="15" fill="rgb(242,161,23)" fg:x="585" fg:w="1"/><text x="47.3894%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.1394%" y="517" width="0.0806%" height="15" fill="rgb(213,13,52)" fg:x="585" fg:w="1"/><text x="47.3894%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.1394%" y="501" width="0.0806%" height="15" fill="rgb(246,209,47)" fg:x="585" fg:w="1"/><text x="47.3894%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.1394%" y="485" width="0.0806%" height="15" fill="rgb(214,41,3)" fg:x="585" fg:w="1"/><text x="47.3894%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.1394%" y="469" width="0.0806%" height="15" fill="rgb(236,119,38)" fg:x="585" fg:w="1"/><text x="47.3894%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.1394%" y="453" width="0.0806%" height="15" fill="rgb(218,50,11)" fg:x="585" fg:w="1"/><text x="47.3894%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.1394%" y="437" width="0.0806%" height="15" fill="rgb(228,38,11)" fg:x="585" fg:w="1"/><text x="47.3894%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.1394%" y="421" width="0.0806%" height="15" fill="rgb(212,13,9)" fg:x="585" fg:w="1"/><text x="47.3894%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.1394%" y="405" width="0.0806%" height="15" fill="rgb(208,211,9)" fg:x="585" fg:w="1"/><text x="47.3894%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.3006%" y="469" width="0.0806%" height="15" fill="rgb(239,39,32)" fg:x="587" fg:w="1"/><text x="47.5506%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.3006%" y="453" width="0.0806%" height="15" fill="rgb(254,179,26)" fg:x="587" fg:w="1"/><text x="47.5506%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.3006%" y="437" width="0.0806%" height="15" fill="rgb(249,165,28)" fg:x="587" fg:w="1"/><text x="47.5506%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.3006%" y="421" width="0.0806%" height="15" fill="rgb(225,59,50)" fg:x="587" fg:w="1"/><text x="47.5506%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.3006%" y="405" width="0.0806%" height="15" fill="rgb(209,122,5)" fg:x="587" fg:w="1"/><text x="47.5506%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.3006%" y="389" width="0.0806%" height="15" fill="rgb(214,65,34)" fg:x="587" fg:w="1"/><text x="47.5506%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.3006%" y="373" width="0.0806%" height="15" fill="rgb(249,183,32)" fg:x="587" fg:w="1"/><text x="47.5506%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.3006%" y="357" width="0.0806%" height="15" fill="rgb(218,122,24)" fg:x="587" fg:w="1"/><text x="47.5506%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.3006%" y="341" width="0.0806%" height="15" fill="rgb(224,109,18)" fg:x="587" fg:w="1"/><text x="47.5506%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.3006%" y="325" width="0.0806%" height="15" fill="rgb(210,68,50)" fg:x="587" fg:w="1"/><text x="47.5506%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.3006%" y="309" width="0.0806%" height="15" fill="rgb(212,184,34)" fg:x="587" fg:w="1"/><text x="47.5506%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.3006%" y="293" width="0.0806%" height="15" fill="rgb(238,105,48)" fg:x="587" fg:w="1"/><text x="47.5506%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.3006%" y="277" width="0.0806%" height="15" fill="rgb(222,134,54)" fg:x="587" fg:w="1"/><text x="47.5506%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.3006%" y="261" width="0.0806%" height="15" fill="rgb(246,24,43)" fg:x="587" fg:w="1"/><text x="47.5506%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.3006%" y="245" width="0.0806%" height="15" fill="rgb(227,169,22)" fg:x="587" fg:w="1"/><text x="47.5506%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.3811%" y="469" width="0.0806%" height="15" fill="rgb(253,152,4)" fg:x="588" fg:w="1"/><text x="47.6311%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="47.3006%" y="501" width="0.2417%" height="15" fill="rgb(219,158,36)" fg:x="587" fg:w="3"/><text x="47.5506%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="47.3006%" y="485" width="0.2417%" height="15" fill="rgb(251,128,40)" fg:x="587" fg:w="3"/><text x="47.5506%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.4617%" y="469" width="0.0806%" height="15" fill="rgb(254,101,39)" fg:x="589" fg:w="1"/><text x="47.7117%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.4617%" y="453" width="0.0806%" height="15" fill="rgb(221,168,40)" fg:x="589" fg:w="1"/><text x="47.7117%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.4617%" y="437" width="0.0806%" height="15" fill="rgb(221,14,27)" fg:x="589" fg:w="1"/><text x="47.7117%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.4617%" y="421" width="0.0806%" height="15" fill="rgb(207,36,43)" fg:x="589" fg:w="1"/><text x="47.7117%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.5423%" y="437" width="0.0806%" height="15" fill="rgb(240,172,53)" fg:x="590" fg:w="1"/><text x="47.7923%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.5423%" y="421" width="0.0806%" height="15" fill="rgb(241,138,43)" fg:x="590" fg:w="1"/><text x="47.7923%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.5423%" y="405" width="0.0806%" height="15" fill="rgb(227,78,19)" fg:x="590" fg:w="1"/><text x="47.7923%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.5423%" y="389" width="0.0806%" height="15" fill="rgb(215,127,44)" fg:x="590" fg:w="1"/><text x="47.7923%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.5423%" y="373" width="0.0806%" height="15" fill="rgb(227,13,10)" fg:x="590" fg:w="1"/><text x="47.7923%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.5423%" y="357" width="0.0806%" height="15" fill="rgb(249,177,6)" fg:x="590" fg:w="1"/><text x="47.7923%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.5423%" y="341" width="0.0806%" height="15" fill="rgb(215,154,26)" fg:x="590" fg:w="1"/><text x="47.7923%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.5423%" y="325" width="0.0806%" height="15" fill="rgb(250,168,20)" fg:x="590" fg:w="1"/><text x="47.7923%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.5423%" y="309" width="0.0806%" height="15" fill="rgb(222,53,38)" fg:x="590" fg:w="1"/><text x="47.7923%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.5423%" y="293" width="0.0806%" height="15" fill="rgb(245,154,5)" fg:x="590" fg:w="1"/><text x="47.7923%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.5423%" y="277" width="0.0806%" height="15" fill="rgb(214,89,50)" fg:x="590" fg:w="1"/><text x="47.7923%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.5423%" y="261" width="0.0806%" height="15" fill="rgb(232,73,14)" fg:x="590" fg:w="1"/><text x="47.7923%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.5423%" y="245" width="0.0806%" height="15" fill="rgb(230,101,20)" fg:x="590" fg:w="1"/><text x="47.7923%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.5423%" y="469" width="0.1612%" height="15" fill="rgb(208,56,28)" fg:x="590" fg:w="2"/><text x="47.7923%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.5423%" y="453" width="0.1612%" height="15" fill="rgb(247,205,22)" fg:x="590" fg:w="2"/><text x="47.7923%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="47.6229%" y="437" width="0.0806%" height="15" fill="rgb(252,109,51)" fg:x="591" fg:w="1"/><text x="47.8729%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="47.6229%" y="421" width="0.0806%" height="15" fill="rgb(220,40,24)" fg:x="591" fg:w="1"/><text x="47.8729%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="47.5423%" y="501" width="0.2417%" height="15" fill="rgb(251,108,7)" fg:x="590" fg:w="3"/><text x="47.7923%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="47.5423%" y="485" width="0.2417%" height="15" fill="rgb(238,102,51)" fg:x="590" fg:w="3"/><text x="47.7923%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.7035%" y="469" width="0.0806%" height="15" fill="rgb(219,149,34)" fg:x="592" fg:w="1"/><text x="47.9535%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.7035%" y="453" width="0.0806%" height="15" fill="rgb(239,70,0)" fg:x="592" fg:w="1"/><text x="47.9535%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.7035%" y="437" width="0.0806%" height="15" fill="rgb(246,214,23)" fg:x="592" fg:w="1"/><text x="47.9535%" y="447.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (7 samples, 0.56%)</title><rect x="47.3006%" y="549" width="0.5641%" height="15" fill="rgb(239,221,51)" fg:x="587" fg:w="7"/><text x="47.5506%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (7 samples, 0.56%)</title><rect x="47.3006%" y="533" width="0.5641%" height="15" fill="rgb(254,62,14)" fg:x="587" fg:w="7"/><text x="47.5506%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="47.3006%" y="517" width="0.5641%" height="15" fill="rgb(253,57,33)" fg:x="587" fg:w="7"/><text x="47.5506%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.7840%" y="501" width="0.0806%" height="15" fill="rgb(229,34,6)" fg:x="593" fg:w="1"/><text x="48.0340%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="47.8646%" y="549" width="0.0806%" height="15" fill="rgb(235,191,23)" fg:x="594" fg:w="1"/><text x="48.1146%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="47.9452%" y="469" width="0.2417%" height="15" fill="rgb(217,207,27)" fg:x="595" fg:w="3"/><text x="48.1952%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="47.9452%" y="453" width="0.2417%" height="15" fill="rgb(232,41,44)" fg:x="595" fg:w="3"/><text x="48.1952%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="47.9452%" y="437" width="0.2417%" height="15" fill="rgb(221,188,19)" fg:x="595" fg:w="3"/><text x="48.1952%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="47.9452%" y="421" width="0.2417%" height="15" fill="rgb(245,180,45)" fg:x="595" fg:w="3"/><text x="48.1952%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.1064%" y="405" width="0.0806%" height="15" fill="rgb(250,220,42)" fg:x="597" fg:w="1"/><text x="48.3564%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.1064%" y="389" width="0.0806%" height="15" fill="rgb(234,16,34)" fg:x="597" fg:w="1"/><text x="48.3564%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.1064%" y="373" width="0.0806%" height="15" fill="rgb(233,217,23)" fg:x="597" fg:w="1"/><text x="48.3564%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.1064%" y="357" width="0.0806%" height="15" fill="rgb(209,22,46)" fg:x="597" fg:w="1"/><text x="48.3564%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.1064%" y="341" width="0.0806%" height="15" fill="rgb(213,101,18)" fg:x="597" fg:w="1"/><text x="48.3564%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.1064%" y="325" width="0.0806%" height="15" fill="rgb(215,179,52)" fg:x="597" fg:w="1"/><text x="48.3564%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.1064%" y="309" width="0.0806%" height="15" fill="rgb(223,50,25)" fg:x="597" fg:w="1"/><text x="48.3564%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.1064%" y="293" width="0.0806%" height="15" fill="rgb(224,51,44)" fg:x="597" fg:w="1"/><text x="48.3564%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.1064%" y="277" width="0.0806%" height="15" fill="rgb(224,13,54)" fg:x="597" fg:w="1"/><text x="48.3564%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.1064%" y="261" width="0.0806%" height="15" fill="rgb(219,58,47)" fg:x="597" fg:w="1"/><text x="48.3564%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.1064%" y="245" width="0.0806%" height="15" fill="rgb(246,124,34)" fg:x="597" fg:w="1"/><text x="48.3564%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.1064%" y="229" width="0.0806%" height="15" fill="rgb(245,109,25)" fg:x="597" fg:w="1"/><text x="48.3564%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.1064%" y="213" width="0.0806%" height="15" fill="rgb(235,48,23)" fg:x="597" fg:w="1"/><text x="48.3564%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="47.9452%" y="517" width="0.3223%" height="15" fill="rgb(229,203,36)" fg:x="595" fg:w="4"/><text x="48.1952%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (4 samples, 0.32%)</title><rect x="47.9452%" y="501" width="0.3223%" height="15" fill="rgb(234,180,9)" fg:x="595" fg:w="4"/><text x="48.1952%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="47.9452%" y="485" width="0.3223%" height="15" fill="rgb(228,98,45)" fg:x="595" fg:w="4"/><text x="48.1952%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="48.1869%" y="469" width="0.0806%" height="15" fill="rgb(240,24,36)" fg:x="598" fg:w="1"/><text x="48.4369%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="48.1869%" y="453" width="0.0806%" height="15" fill="rgb(227,154,19)" fg:x="598" fg:w="1"/><text x="48.4369%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.1869%" y="437" width="0.0806%" height="15" fill="rgb(231,2,48)" fg:x="598" fg:w="1"/><text x="48.4369%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.1869%" y="421" width="0.0806%" height="15" fill="rgb(219,216,0)" fg:x="598" fg:w="1"/><text x="48.4369%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.1869%" y="405" width="0.0806%" height="15" fill="rgb(251,88,0)" fg:x="598" fg:w="1"/><text x="48.4369%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.1869%" y="389" width="0.0806%" height="15" fill="rgb(242,45,45)" fg:x="598" fg:w="1"/><text x="48.4369%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.1869%" y="373" width="0.0806%" height="15" fill="rgb(218,149,45)" fg:x="598" fg:w="1"/><text x="48.4369%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.1869%" y="357" width="0.0806%" height="15" fill="rgb(247,194,10)" fg:x="598" fg:w="1"/><text x="48.4369%" y="367.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.2675%" y="517" width="0.0806%" height="15" fill="rgb(234,33,37)" fg:x="599" fg:w="1"/><text x="48.5175%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.2675%" y="501" width="0.0806%" height="15" fill="rgb(218,61,13)" fg:x="599" fg:w="1"/><text x="48.5175%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.2675%" y="485" width="0.0806%" height="15" fill="rgb(210,80,52)" fg:x="599" fg:w="1"/><text x="48.5175%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.2675%" y="469" width="0.0806%" height="15" fill="rgb(218,203,27)" fg:x="599" fg:w="1"/><text x="48.5175%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.2675%" y="453" width="0.0806%" height="15" fill="rgb(209,126,33)" fg:x="599" fg:w="1"/><text x="48.5175%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.2675%" y="437" width="0.0806%" height="15" fill="rgb(234,173,41)" fg:x="599" fg:w="1"/><text x="48.5175%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.2675%" y="421" width="0.0806%" height="15" fill="rgb(228,166,9)" fg:x="599" fg:w="1"/><text x="48.5175%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.2675%" y="405" width="0.0806%" height="15" fill="rgb(208,124,43)" fg:x="599" fg:w="1"/><text x="48.5175%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="48.2675%" y="389" width="0.0806%" height="15" fill="rgb(212,154,38)" fg:x="599" fg:w="1"/><text x="48.5175%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="48.2675%" y="373" width="0.0806%" height="15" fill="rgb(246,179,35)" fg:x="599" fg:w="1"/><text x="48.5175%" y="383.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (15 samples, 1.21%)</title><rect x="47.3006%" y="565" width="1.2087%" height="15" fill="rgb(251,3,50)" fg:x="587" fg:w="15"/><text x="47.5506%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="47.9452%" y="549" width="0.5641%" height="15" fill="rgb(219,96,8)" fg:x="595" fg:w="7"/><text x="48.1952%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="47.9452%" y="533" width="0.5641%" height="15" fill="rgb(251,216,33)" fg:x="595" fg:w="7"/><text x="48.1952%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.3481%" y="517" width="0.1612%" height="15" fill="rgb(243,145,29)" fg:x="600" fg:w="2"/><text x="48.5981%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.4287%" y="501" width="0.0806%" height="15" fill="rgb(210,75,20)" fg:x="601" fg:w="1"/><text x="48.6787%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.4287%" y="485" width="0.0806%" height="15" fill="rgb(235,56,8)" fg:x="601" fg:w="1"/><text x="48.6787%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.4287%" y="469" width="0.0806%" height="15" fill="rgb(226,175,49)" fg:x="601" fg:w="1"/><text x="48.6787%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.4287%" y="453" width="0.0806%" height="15" fill="rgb(242,204,23)" fg:x="601" fg:w="1"/><text x="48.6787%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.5093%" y="485" width="0.0806%" height="15" fill="rgb(225,104,24)" fg:x="602" fg:w="1"/><text x="48.7593%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.5093%" y="469" width="0.0806%" height="15" fill="rgb(253,34,1)" fg:x="602" fg:w="1"/><text x="48.7593%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.5093%" y="453" width="0.0806%" height="15" fill="rgb(233,199,23)" fg:x="602" fg:w="1"/><text x="48.7593%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.5898%" y="421" width="0.0806%" height="15" fill="rgb(247,7,51)" fg:x="603" fg:w="1"/><text x="48.8398%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.5898%" y="405" width="0.0806%" height="15" fill="rgb(214,146,12)" fg:x="603" fg:w="1"/><text x="48.8398%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="48.5093%" y="517" width="0.2417%" height="15" fill="rgb(234,181,43)" fg:x="602" fg:w="3"/><text x="48.7593%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="48.5093%" y="501" width="0.2417%" height="15" fill="rgb(239,148,6)" fg:x="602" fg:w="3"/><text x="48.7593%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.5898%" y="485" width="0.1612%" height="15" fill="rgb(206,151,17)" fg:x="603" fg:w="2"/><text x="48.8398%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.5898%" y="469" width="0.1612%" height="15" fill="rgb(213,215,10)" fg:x="603" fg:w="2"/><text x="48.8398%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="48.5898%" y="453" width="0.1612%" height="15" fill="rgb(215,220,44)" fg:x="603" fg:w="2"/><text x="48.8398%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.5898%" y="437" width="0.1612%" height="15" fill="rgb(245,205,37)" fg:x="603" fg:w="2"/><text x="48.8398%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.6704%" y="421" width="0.0806%" height="15" fill="rgb(245,130,43)" fg:x="604" fg:w="1"/><text x="48.9204%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.7510%" y="485" width="0.0806%" height="15" fill="rgb(231,227,38)" fg:x="605" fg:w="1"/><text x="49.0010%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.7510%" y="469" width="0.0806%" height="15" fill="rgb(233,185,4)" fg:x="605" fg:w="1"/><text x="49.0010%" y="479.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (22 samples, 1.77%)</title><rect x="47.2200%" y="581" width="1.7728%" height="15" fill="rgb(224,154,43)" fg:x="586" fg:w="22"/><text x="47.4700%" y="591.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (6 samples, 0.48%)</title><rect x="48.5093%" y="565" width="0.4835%" height="15" fill="rgb(235,156,15)" fg:x="602" fg:w="6"/><text x="48.7593%" y="575.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.48%)</title><rect x="48.5093%" y="549" width="0.4835%" height="15" fill="rgb(211,55,43)" fg:x="602" fg:w="6"/><text x="48.7593%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="48.5093%" y="533" width="0.4835%" height="15" fill="rgb(247,149,40)" fg:x="602" fg:w="6"/><text x="48.7593%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="48.7510%" y="517" width="0.2417%" height="15" fill="rgb(232,171,16)" fg:x="605" fg:w="3"/><text x="49.0010%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="48.7510%" y="501" width="0.2417%" height="15" fill="rgb(215,117,49)" fg:x="605" fg:w="3"/><text x="49.0010%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.8316%" y="485" width="0.1612%" height="15" fill="rgb(246,194,11)" fg:x="606" fg:w="2"/><text x="49.0816%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.8316%" y="469" width="0.1612%" height="15" fill="rgb(242,101,44)" fg:x="606" fg:w="2"/><text x="49.0816%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.9122%" y="453" width="0.0806%" height="15" fill="rgb(226,174,6)" fg:x="607" fg:w="1"/><text x="49.1622%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.9122%" y="437" width="0.0806%" height="15" fill="rgb(213,150,20)" fg:x="607" fg:w="1"/><text x="49.1622%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9122%" y="421" width="0.0806%" height="15" fill="rgb(222,124,42)" fg:x="607" fg:w="1"/><text x="49.1622%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9122%" y="405" width="0.0806%" height="15" fill="rgb(250,19,47)" fg:x="607" fg:w="1"/><text x="49.1622%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="49.3151%" y="421" width="0.0806%" height="15" fill="rgb(241,217,19)" fg:x="612" fg:w="1"/><text x="49.5651%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.3151%" y="405" width="0.0806%" height="15" fill="rgb(207,210,34)" fg:x="612" fg:w="1"/><text x="49.5651%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.3151%" y="389" width="0.0806%" height="15" fill="rgb(244,45,4)" fg:x="612" fg:w="1"/><text x="49.5651%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.3956%" y="421" width="0.0806%" height="15" fill="rgb(252,134,50)" fg:x="613" fg:w="1"/><text x="49.6456%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.3956%" y="405" width="0.0806%" height="15" fill="rgb(238,74,2)" fg:x="613" fg:w="1"/><text x="49.6456%" y="415.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (1 samples, 0.08%)</title><rect x="49.4762%" y="389" width="0.0806%" height="15" fill="rgb(226,58,46)" fg:x="614" fg:w="1"/><text x="49.7262%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="49.4762%" y="373" width="0.0806%" height="15" fill="rgb(232,83,35)" fg:x="614" fg:w="1"/><text x="49.7262%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.4762%" y="357" width="0.0806%" height="15" fill="rgb(212,148,47)" fg:x="614" fg:w="1"/><text x="49.7262%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.4762%" y="341" width="0.0806%" height="15" fill="rgb(235,29,1)" fg:x="614" fg:w="1"/><text x="49.7262%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.5568%" y="341" width="0.1612%" height="15" fill="rgb(247,55,37)" fg:x="615" fg:w="2"/><text x="49.8068%" y="351.50"></text></g><g><title>&lt;replies::AreaObservation as replies::ToTaggedJson&gt;::to_tagged_json (7 samples, 0.56%)</title><rect x="49.3151%" y="437" width="0.5641%" height="15" fill="rgb(222,48,3)" fg:x="612" fg:w="7"/><text x="49.5651%" y="447.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::AreaObservation&gt;::serialize (5 samples, 0.40%)</title><rect x="49.4762%" y="421" width="0.4029%" height="15" fill="rgb(234,21,33)" fg:x="614" fg:w="5"/><text x="49.7262%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="49.4762%" y="405" width="0.4029%" height="15" fill="rgb(247,178,53)" fg:x="614" fg:w="5"/><text x="49.7262%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="49.5568%" y="389" width="0.3223%" height="15" fill="rgb(225,75,7)" fg:x="615" fg:w="4"/><text x="49.8068%" y="399.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (4 samples, 0.32%)</title><rect x="49.5568%" y="373" width="0.3223%" height="15" fill="rgb(219,199,7)" fg:x="615" fg:w="4"/><text x="49.8068%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="49.5568%" y="357" width="0.3223%" height="15" fill="rgb(209,93,42)" fg:x="615" fg:w="4"/><text x="49.8068%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.7180%" y="341" width="0.1612%" height="15" fill="rgb(240,175,17)" fg:x="617" fg:w="2"/><text x="49.9680%" y="351.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::AreaObservation&gt;&gt;::try_from (8 samples, 0.64%)</title><rect x="49.3151%" y="453" width="0.6446%" height="15" fill="rgb(232,106,7)" fg:x="612" fg:w="8"/><text x="49.5651%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (1 samples, 0.08%)</title><rect x="49.8791%" y="437" width="0.0806%" height="15" fill="rgb(242,106,43)" fg:x="619" fg:w="1"/><text x="50.1291%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="49.8791%" y="421" width="0.0806%" height="15" fill="rgb(242,61,37)" fg:x="619" fg:w="1"/><text x="50.1291%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.8791%" y="405" width="0.0806%" height="15" fill="rgb(205,72,10)" fg:x="619" fg:w="1"/><text x="50.1291%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.9597%" y="453" width="0.0806%" height="15" fill="rgb(214,184,36)" fg:x="620" fg:w="1"/><text x="50.2097%" y="463.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="50.0403%" y="453" width="0.1612%" height="15" fill="rgb(206,107,18)" fg:x="621" fg:w="2"/><text x="50.2903%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.0403%" y="437" width="0.1612%" height="15" fill="rgb(210,75,5)" fg:x="621" fg:w="2"/><text x="50.2903%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.0403%" y="421" width="0.1612%" height="15" fill="rgb(205,3,19)" fg:x="621" fg:w="2"/><text x="50.2903%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="50.0403%" y="405" width="0.1612%" height="15" fill="rgb(207,181,42)" fg:x="621" fg:w="2"/><text x="50.2903%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="50.0403%" y="389" width="0.1612%" height="15" fill="rgb(229,179,43)" fg:x="621" fg:w="2"/><text x="50.2903%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="50.0403%" y="373" width="0.1612%" height="15" fill="rgb(246,95,30)" fg:x="621" fg:w="2"/><text x="50.2903%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.0403%" y="357" width="0.1612%" height="15" fill="rgb(234,144,45)" fg:x="621" fg:w="2"/><text x="50.2903%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.0403%" y="341" width="0.1612%" height="15" fill="rgb(250,54,25)" fg:x="621" fg:w="2"/><text x="50.2903%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="50.0403%" y="325" width="0.1612%" height="15" fill="rgb(215,195,40)" fg:x="621" fg:w="2"/><text x="50.2903%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="50.0403%" y="309" width="0.1612%" height="15" fill="rgb(233,188,42)" fg:x="621" fg:w="2"/><text x="50.2903%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="50.0403%" y="293" width="0.1612%" height="15" fill="rgb(247,227,35)" fg:x="621" fg:w="2"/><text x="50.2903%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="50.0403%" y="277" width="0.1612%" height="15" fill="rgb(249,124,27)" fg:x="621" fg:w="2"/><text x="50.2903%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.0403%" y="261" width="0.1612%" height="15" fill="rgb(219,207,25)" fg:x="621" fg:w="2"/><text x="50.2903%" y="271.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="50.5238%" y="421" width="0.0806%" height="15" fill="rgb(241,216,47)" fg:x="627" fg:w="1"/><text x="50.7738%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="50.5238%" y="405" width="0.0806%" height="15" fill="rgb(233,82,50)" fg:x="627" fg:w="1"/><text x="50.7738%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.6044%" y="405" width="0.0806%" height="15" fill="rgb(232,63,2)" fg:x="628" fg:w="1"/><text x="50.8544%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="50.6849%" y="389" width="0.3223%" height="15" fill="rgb(236,184,28)" fg:x="629" fg:w="4"/><text x="50.9349%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="50.6849%" y="373" width="0.3223%" height="15" fill="rgb(254,63,27)" fg:x="629" fg:w="4"/><text x="50.9349%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="50.6849%" y="357" width="0.3223%" height="15" fill="rgb(253,106,28)" fg:x="629" fg:w="4"/><text x="50.9349%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="50.7655%" y="341" width="0.2417%" height="15" fill="rgb(225,141,39)" fg:x="630" fg:w="3"/><text x="51.0155%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="50.7655%" y="325" width="0.2417%" height="15" fill="rgb(222,157,20)" fg:x="630" fg:w="3"/><text x="51.0155%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="50.7655%" y="309" width="0.2417%" height="15" fill="rgb(210,190,9)" fg:x="630" fg:w="3"/><text x="51.0155%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="50.7655%" y="293" width="0.2417%" height="15" fill="rgb(242,167,7)" fg:x="630" fg:w="3"/><text x="51.0155%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="50.7655%" y="277" width="0.2417%" height="15" fill="rgb(227,82,41)" fg:x="630" fg:w="3"/><text x="51.0155%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="50.7655%" y="261" width="0.2417%" height="15" fill="rgb(222,131,13)" fg:x="630" fg:w="3"/><text x="51.0155%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="50.7655%" y="245" width="0.2417%" height="15" fill="rgb(221,98,26)" fg:x="630" fg:w="3"/><text x="51.0155%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="50.7655%" y="229" width="0.2417%" height="15" fill="rgb(251,63,52)" fg:x="630" fg:w="3"/><text x="51.0155%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="50.7655%" y="213" width="0.2417%" height="15" fill="rgb(246,25,43)" fg:x="630" fg:w="3"/><text x="51.0155%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="50.7655%" y="197" width="0.2417%" height="15" fill="rgb(247,167,15)" fg:x="630" fg:w="3"/><text x="51.0155%" y="207.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="50.7655%" y="181" width="0.2417%" height="15" fill="rgb(240,104,42)" fg:x="630" fg:w="3"/><text x="51.0155%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.8461%" y="165" width="0.1612%" height="15" fill="rgb(224,54,6)" fg:x="631" fg:w="2"/><text x="51.0961%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.0073%" y="341" width="0.0806%" height="15" fill="rgb(244,108,35)" fg:x="633" fg:w="1"/><text x="51.2573%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="51.0073%" y="389" width="0.1612%" height="15" fill="rgb(216,154,2)" fg:x="633" fg:w="2"/><text x="51.2573%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="51.0073%" y="373" width="0.1612%" height="15" fill="rgb(222,8,47)" fg:x="633" fg:w="2"/><text x="51.2573%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="51.0073%" y="357" width="0.1612%" height="15" fill="rgb(252,93,1)" fg:x="633" fg:w="2"/><text x="51.2573%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="51.0878%" y="341" width="0.0806%" height="15" fill="rgb(223,226,51)" fg:x="634" fg:w="1"/><text x="51.3378%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.0878%" y="325" width="0.0806%" height="15" fill="rgb(206,147,9)" fg:x="634" fg:w="1"/><text x="51.3378%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.0878%" y="309" width="0.0806%" height="15" fill="rgb(248,180,41)" fg:x="634" fg:w="1"/><text x="51.3378%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.2490%" y="357" width="0.0806%" height="15" fill="rgb(209,47,50)" fg:x="636" fg:w="1"/><text x="51.4990%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.3296%" y="325" width="0.0806%" height="15" fill="rgb(243,65,31)" fg:x="637" fg:w="1"/><text x="51.5796%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.3296%" y="309" width="0.0806%" height="15" fill="rgb(228,128,1)" fg:x="637" fg:w="1"/><text x="51.5796%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="51.4907%" y="293" width="0.1612%" height="15" fill="rgb(231,192,16)" fg:x="639" fg:w="2"/><text x="51.7407%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="51.4907%" y="277" width="0.1612%" height="15" fill="rgb(224,26,40)" fg:x="639" fg:w="2"/><text x="51.7407%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (14 samples, 1.13%)</title><rect x="50.6044%" y="421" width="1.1281%" height="15" fill="rgb(214,192,17)" fg:x="628" fg:w="14"/><text x="50.8544%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.05%)</title><rect x="50.6849%" y="405" width="1.0475%" height="15" fill="rgb(225,147,18)" fg:x="629" fg:w="13"/><text x="50.9349%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="51.1684%" y="389" width="0.5641%" height="15" fill="rgb(205,35,11)" fg:x="635" fg:w="7"/><text x="51.4184%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="51.1684%" y="373" width="0.5641%" height="15" fill="rgb(242,40,42)" fg:x="635" fg:w="7"/><text x="51.4184%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="51.3296%" y="357" width="0.4029%" height="15" fill="rgb(250,170,13)" fg:x="637" fg:w="5"/><text x="51.5796%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="51.3296%" y="341" width="0.4029%" height="15" fill="rgb(240,161,28)" fg:x="637" fg:w="5"/><text x="51.5796%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="51.4102%" y="325" width="0.3223%" height="15" fill="rgb(245,179,12)" fg:x="638" fg:w="4"/><text x="51.6602%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="51.4102%" y="309" width="0.3223%" height="15" fill="rgb(250,92,32)" fg:x="638" fg:w="4"/><text x="51.6602%" y="319.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="51.6519%" y="293" width="0.0806%" height="15" fill="rgb(233,10,40)" fg:x="641" fg:w="1"/><text x="51.9019%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7325%" y="405" width="0.0806%" height="15" fill="rgb(217,98,1)" fg:x="642" fg:w="1"/><text x="51.9825%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7325%" y="389" width="0.0806%" height="15" fill="rgb(238,202,7)" fg:x="642" fg:w="1"/><text x="51.9825%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.7325%" y="373" width="0.0806%" height="15" fill="rgb(222,91,3)" fg:x="642" fg:w="1"/><text x="51.9825%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.7325%" y="357" width="0.0806%" height="15" fill="rgb(211,170,49)" fg:x="642" fg:w="1"/><text x="51.9825%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.7325%" y="341" width="0.0806%" height="15" fill="rgb(253,139,18)" fg:x="642" fg:w="1"/><text x="51.9825%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.7325%" y="325" width="0.0806%" height="15" fill="rgb(222,4,43)" fg:x="642" fg:w="1"/><text x="51.9825%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.7325%" y="309" width="0.0806%" height="15" fill="rgb(207,205,12)" fg:x="642" fg:w="1"/><text x="51.9825%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.7325%" y="293" width="0.0806%" height="15" fill="rgb(216,159,46)" fg:x="642" fg:w="1"/><text x="51.9825%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.7325%" y="277" width="0.0806%" height="15" fill="rgb(236,115,1)" fg:x="642" fg:w="1"/><text x="51.9825%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.7325%" y="261" width="0.0806%" height="15" fill="rgb(251,35,33)" fg:x="642" fg:w="1"/><text x="51.9825%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.7325%" y="245" width="0.0806%" height="15" fill="rgb(248,62,51)" fg:x="642" fg:w="1"/><text x="51.9825%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.7325%" y="229" width="0.0806%" height="15" fill="rgb(254,180,19)" fg:x="642" fg:w="1"/><text x="51.9825%" y="239.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.8131%" y="405" width="0.1612%" height="15" fill="rgb(217,100,32)" fg:x="643" fg:w="2"/><text x="52.0631%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.0548%" y="357" width="0.0806%" height="15" fill="rgb(224,71,22)" fg:x="646" fg:w="1"/><text x="52.3048%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.0548%" y="341" width="0.0806%" height="15" fill="rgb(251,185,33)" fg:x="646" fg:w="1"/><text x="52.3048%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.0548%" y="325" width="0.0806%" height="15" fill="rgb(209,75,48)" fg:x="646" fg:w="1"/><text x="52.3048%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.0548%" y="309" width="0.0806%" height="15" fill="rgb(253,190,16)" fg:x="646" fg:w="1"/><text x="52.3048%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.0548%" y="293" width="0.0806%" height="15" fill="rgb(226,140,1)" fg:x="646" fg:w="1"/><text x="52.3048%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.0548%" y="277" width="0.0806%" height="15" fill="rgb(206,75,30)" fg:x="646" fg:w="1"/><text x="52.3048%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.0548%" y="261" width="0.0806%" height="15" fill="rgb(231,208,37)" fg:x="646" fg:w="1"/><text x="52.3048%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.0548%" y="245" width="0.0806%" height="15" fill="rgb(238,136,40)" fg:x="646" fg:w="1"/><text x="52.3048%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.0548%" y="229" width="0.0806%" height="15" fill="rgb(247,137,17)" fg:x="646" fg:w="1"/><text x="52.3048%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.0548%" y="213" width="0.0806%" height="15" fill="rgb(240,60,40)" fg:x="646" fg:w="1"/><text x="52.3048%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.0548%" y="197" width="0.0806%" height="15" fill="rgb(236,68,50)" fg:x="646" fg:w="1"/><text x="52.3048%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.0548%" y="181" width="0.0806%" height="15" fill="rgb(230,42,12)" fg:x="646" fg:w="1"/><text x="52.3048%" y="191.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="52.0548%" y="165" width="0.0806%" height="15" fill="rgb(219,16,16)" fg:x="646" fg:w="1"/><text x="52.3048%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="52.0548%" y="149" width="0.0806%" height="15" fill="rgb(220,38,35)" fg:x="646" fg:w="1"/><text x="52.3048%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.9742%" y="389" width="0.2417%" height="15" fill="rgb(228,33,1)" fg:x="645" fg:w="3"/><text x="52.2242%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.0548%" y="373" width="0.1612%" height="15" fill="rgb(241,46,31)" fg:x="646" fg:w="2"/><text x="52.3048%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.1354%" y="357" width="0.0806%" height="15" fill="rgb(232,58,20)" fg:x="647" fg:w="1"/><text x="52.3854%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.2160%" y="389" width="0.0806%" height="15" fill="rgb(206,228,53)" fg:x="648" fg:w="1"/><text x="52.4660%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="52.2160%" y="373" width="0.0806%" height="15" fill="rgb(206,88,33)" fg:x="648" fg:w="1"/><text x="52.4660%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.2965%" y="389" width="0.0806%" height="15" fill="rgb(238,69,7)" fg:x="649" fg:w="1"/><text x="52.5465%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="52.2965%" y="373" width="0.0806%" height="15" fill="rgb(250,21,46)" fg:x="649" fg:w="1"/><text x="52.5465%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2965%" y="357" width="0.0806%" height="15" fill="rgb(215,212,21)" fg:x="649" fg:w="1"/><text x="52.5465%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.3771%" y="357" width="0.0806%" height="15" fill="rgb(211,35,12)" fg:x="650" fg:w="1"/><text x="52.6271%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.3771%" y="341" width="0.0806%" height="15" fill="rgb(231,184,16)" fg:x="650" fg:w="1"/><text x="52.6271%" y="351.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (30 samples, 2.42%)</title><rect x="50.2015%" y="437" width="2.4174%" height="15" fill="rgb(242,140,15)" fg:x="623" fg:w="30"/><text x="50.4515%" y="447.50">&lt;&amp;..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.89%)</title><rect x="51.7325%" y="421" width="0.8864%" height="15" fill="rgb(220,37,14)" fg:x="642" fg:w="11"/><text x="51.9825%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="51.9742%" y="405" width="0.6446%" height="15" fill="rgb(223,146,22)" fg:x="645" fg:w="8"/><text x="52.2242%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="52.3771%" y="389" width="0.2417%" height="15" fill="rgb(216,132,15)" fg:x="650" fg:w="3"/><text x="52.6271%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="52.3771%" y="373" width="0.2417%" height="15" fill="rgb(248,83,5)" fg:x="650" fg:w="3"/><text x="52.6271%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="52.4577%" y="357" width="0.1612%" height="15" fill="rgb(231,206,48)" fg:x="651" fg:w="2"/><text x="52.7077%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.4577%" y="341" width="0.1612%" height="15" fill="rgb(253,185,37)" fg:x="651" fg:w="2"/><text x="52.7077%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.4577%" y="325" width="0.1612%" height="15" fill="rgb(208,21,44)" fg:x="651" fg:w="2"/><text x="52.7077%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.4577%" y="309" width="0.1612%" height="15" fill="rgb(236,125,4)" fg:x="651" fg:w="2"/><text x="52.7077%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.5383%" y="293" width="0.0806%" height="15" fill="rgb(226,134,25)" fg:x="652" fg:w="1"/><text x="52.7883%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.5383%" y="277" width="0.0806%" height="15" fill="rgb(250,201,12)" fg:x="652" fg:w="1"/><text x="52.7883%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.6189%" y="357" width="0.2417%" height="15" fill="rgb(225,92,18)" fg:x="653" fg:w="3"/><text x="52.8689%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.6994%" y="341" width="0.1612%" height="15" fill="rgb(227,35,22)" fg:x="654" fg:w="2"/><text x="52.9494%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.6994%" y="325" width="0.1612%" height="15" fill="rgb(214,180,52)" fg:x="654" fg:w="2"/><text x="52.9494%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.6994%" y="309" width="0.1612%" height="15" fill="rgb(233,55,38)" fg:x="654" fg:w="2"/><text x="52.9494%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="52.6994%" y="293" width="0.1612%" height="15" fill="rgb(249,171,43)" fg:x="654" fg:w="2"/><text x="52.9494%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="52.6994%" y="277" width="0.1612%" height="15" fill="rgb(239,87,2)" fg:x="654" fg:w="2"/><text x="52.9494%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="52.6994%" y="261" width="0.1612%" height="15" fill="rgb(248,141,5)" fg:x="654" fg:w="2"/><text x="52.9494%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="52.6994%" y="245" width="0.1612%" height="15" fill="rgb(238,33,42)" fg:x="654" fg:w="2"/><text x="52.9494%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="52.6994%" y="229" width="0.1612%" height="15" fill="rgb(231,57,19)" fg:x="654" fg:w="2"/><text x="52.9494%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="52.6994%" y="213" width="0.1612%" height="15" fill="rgb(214,78,53)" fg:x="654" fg:w="2"/><text x="52.9494%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="52.6994%" y="197" width="0.1612%" height="15" fill="rgb(206,132,29)" fg:x="654" fg:w="2"/><text x="52.9494%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="52.6994%" y="181" width="0.1612%" height="15" fill="rgb(248,174,31)" fg:x="654" fg:w="2"/><text x="52.9494%" y="191.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="52.6994%" y="165" width="0.1612%" height="15" fill="rgb(221,87,13)" fg:x="654" fg:w="2"/><text x="52.9494%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7800%" y="149" width="0.0806%" height="15" fill="rgb(223,197,17)" fg:x="655" fg:w="1"/><text x="53.0300%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.8606%" y="357" width="0.0806%" height="15" fill="rgb(220,144,50)" fg:x="656" fg:w="1"/><text x="53.1106%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.9412%" y="357" width="0.0806%" height="15" fill="rgb(244,201,11)" fg:x="657" fg:w="1"/><text x="53.1912%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.0218%" y="357" width="0.0806%" height="15" fill="rgb(249,81,34)" fg:x="658" fg:w="1"/><text x="53.2718%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="53.0218%" y="341" width="0.0806%" height="15" fill="rgb(205,161,12)" fg:x="658" fg:w="1"/><text x="53.2718%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.0218%" y="325" width="0.0806%" height="15" fill="rgb(252,139,50)" fg:x="658" fg:w="1"/><text x="53.2718%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.0218%" y="309" width="0.0806%" height="15" fill="rgb(205,169,14)" fg:x="658" fg:w="1"/><text x="53.2718%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.1023%" y="325" width="0.0806%" height="15" fill="rgb(248,198,33)" fg:x="659" fg:w="1"/><text x="53.3523%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.1829%" y="293" width="0.0806%" height="15" fill="rgb(236,23,21)" fg:x="660" fg:w="1"/><text x="53.4329%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.2635%" y="261" width="0.0806%" height="15" fill="rgb(231,13,38)" fg:x="661" fg:w="1"/><text x="53.5135%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.81%)</title><rect x="52.6189%" y="389" width="0.8058%" height="15" fill="rgb(239,139,21)" fg:x="653" fg:w="10"/><text x="52.8689%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.81%)</title><rect x="52.6189%" y="373" width="0.8058%" height="15" fill="rgb(222,164,45)" fg:x="653" fg:w="10"/><text x="52.8689%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="53.1023%" y="357" width="0.3223%" height="15" fill="rgb(230,52,27)" fg:x="659" fg:w="4"/><text x="53.3523%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="53.1023%" y="341" width="0.3223%" height="15" fill="rgb(227,143,42)" fg:x="659" fg:w="4"/><text x="53.3523%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="53.1829%" y="325" width="0.2417%" height="15" fill="rgb(249,127,1)" fg:x="660" fg:w="3"/><text x="53.4329%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="53.1829%" y="309" width="0.2417%" height="15" fill="rgb(243,107,26)" fg:x="660" fg:w="3"/><text x="53.4329%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.2635%" y="293" width="0.1612%" height="15" fill="rgb(225,7,45)" fg:x="661" fg:w="2"/><text x="53.5135%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.2635%" y="277" width="0.1612%" height="15" fill="rgb(241,88,38)" fg:x="661" fg:w="2"/><text x="53.5135%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.3441%" y="261" width="0.0806%" height="15" fill="rgb(226,121,9)" fg:x="662" fg:w="1"/><text x="53.5941%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.3441%" y="245" width="0.0806%" height="15" fill="rgb(253,60,29)" fg:x="662" fg:w="1"/><text x="53.5941%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.4247%" y="357" width="0.0806%" height="15" fill="rgb(244,181,39)" fg:x="663" fg:w="1"/><text x="53.6747%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.4247%" y="341" width="0.0806%" height="15" fill="rgb(252,203,31)" fg:x="663" fg:w="1"/><text x="53.6747%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.4247%" y="325" width="0.0806%" height="15" fill="rgb(224,120,8)" fg:x="663" fg:w="1"/><text x="53.6747%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.4247%" y="309" width="0.0806%" height="15" fill="rgb(205,171,54)" fg:x="663" fg:w="1"/><text x="53.6747%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.4247%" y="293" width="0.0806%" height="15" fill="rgb(235,89,11)" fg:x="663" fg:w="1"/><text x="53.6747%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.4247%" y="277" width="0.0806%" height="15" fill="rgb(212,180,28)" fg:x="663" fg:w="1"/><text x="53.6747%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.4247%" y="261" width="0.0806%" height="15" fill="rgb(247,84,49)" fg:x="663" fg:w="1"/><text x="53.6747%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.4247%" y="245" width="0.0806%" height="15" fill="rgb(236,187,52)" fg:x="663" fg:w="1"/><text x="53.6747%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.4247%" y="229" width="0.0806%" height="15" fill="rgb(227,24,15)" fg:x="663" fg:w="1"/><text x="53.6747%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.4247%" y="213" width="0.0806%" height="15" fill="rgb(227,211,13)" fg:x="663" fg:w="1"/><text x="53.6747%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.4247%" y="197" width="0.0806%" height="15" fill="rgb(245,52,14)" fg:x="663" fg:w="1"/><text x="53.6747%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.4247%" y="181" width="0.0806%" height="15" fill="rgb(225,185,13)" fg:x="663" fg:w="1"/><text x="53.6747%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.4247%" y="165" width="0.0806%" height="15" fill="rgb(217,160,29)" fg:x="663" fg:w="1"/><text x="53.6747%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.4247%" y="149" width="0.0806%" height="15" fill="rgb(216,115,53)" fg:x="663" fg:w="1"/><text x="53.6747%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.4247%" y="133" width="0.0806%" height="15" fill="rgb(236,99,5)" fg:x="663" fg:w="1"/><text x="53.6747%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.5052%" y="357" width="0.0806%" height="15" fill="rgb(222,60,38)" fg:x="664" fg:w="1"/><text x="53.7552%" y="367.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (13 samples, 1.05%)</title><rect x="52.6189%" y="437" width="1.0475%" height="15" fill="rgb(212,82,22)" fg:x="653" fg:w="13"/><text x="52.8689%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (13 samples, 1.05%)</title><rect x="52.6189%" y="421" width="1.0475%" height="15" fill="rgb(214,48,28)" fg:x="653" fg:w="13"/><text x="52.8689%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (13 samples, 1.05%)</title><rect x="52.6189%" y="405" width="1.0475%" height="15" fill="rgb(245,196,50)" fg:x="653" fg:w="13"/><text x="52.8689%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="53.4247%" y="389" width="0.2417%" height="15" fill="rgb(225,159,46)" fg:x="663" fg:w="3"/><text x="53.6747%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="53.4247%" y="373" width="0.2417%" height="15" fill="rgb(207,195,48)" fg:x="663" fg:w="3"/><text x="53.6747%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.5858%" y="357" width="0.0806%" height="15" fill="rgb(240,73,3)" fg:x="665" fg:w="1"/><text x="53.8358%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.5858%" y="341" width="0.0806%" height="15" fill="rgb(245,57,23)" fg:x="665" fg:w="1"/><text x="53.8358%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="53.5858%" y="325" width="0.0806%" height="15" fill="rgb(240,75,18)" fg:x="665" fg:w="1"/><text x="53.8358%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.5858%" y="309" width="0.0806%" height="15" fill="rgb(238,168,12)" fg:x="665" fg:w="1"/><text x="53.8358%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.5858%" y="293" width="0.0806%" height="15" fill="rgb(226,20,40)" fg:x="665" fg:w="1"/><text x="53.8358%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.5858%" y="277" width="0.0806%" height="15" fill="rgb(224,130,35)" fg:x="665" fg:w="1"/><text x="53.8358%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="53.6664%" y="437" width="0.1612%" height="15" fill="rgb(225,63,41)" fg:x="666" fg:w="2"/><text x="53.9164%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="53.6664%" y="421" width="0.1612%" height="15" fill="rgb(219,3,3)" fg:x="666" fg:w="2"/><text x="53.9164%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7470%" y="405" width="0.0806%" height="15" fill="rgb(218,157,4)" fg:x="667" fg:w="1"/><text x="53.9970%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9081%" y="405" width="0.0806%" height="15" fill="rgb(232,76,36)" fg:x="669" fg:w="1"/><text x="54.1581%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.9081%" y="389" width="0.0806%" height="15" fill="rgb(247,36,0)" fg:x="669" fg:w="1"/><text x="54.1581%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9081%" y="373" width="0.0806%" height="15" fill="rgb(205,2,34)" fg:x="669" fg:w="1"/><text x="54.1581%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.9081%" y="357" width="0.0806%" height="15" fill="rgb(239,136,13)" fg:x="669" fg:w="1"/><text x="54.1581%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="53.9887%" y="293" width="0.0806%" height="15" fill="rgb(253,122,12)" fg:x="670" fg:w="1"/><text x="54.2387%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.9887%" y="277" width="0.0806%" height="15" fill="rgb(222,174,7)" fg:x="670" fg:w="1"/><text x="54.2387%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.0693%" y="261" width="0.0806%" height="15" fill="rgb(208,191,42)" fg:x="671" fg:w="1"/><text x="54.3193%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.0693%" y="245" width="0.0806%" height="15" fill="rgb(237,212,15)" fg:x="671" fg:w="1"/><text x="54.3193%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.0693%" y="229" width="0.0806%" height="15" fill="rgb(215,65,20)" fg:x="671" fg:w="1"/><text x="54.3193%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.0693%" y="213" width="0.0806%" height="15" fill="rgb(232,103,11)" fg:x="671" fg:w="1"/><text x="54.3193%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.0693%" y="197" width="0.0806%" height="15" fill="rgb(235,148,18)" fg:x="671" fg:w="1"/><text x="54.3193%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.0693%" y="181" width="0.0806%" height="15" fill="rgb(240,173,7)" fg:x="671" fg:w="1"/><text x="54.3193%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.0693%" y="165" width="0.0806%" height="15" fill="rgb(228,182,25)" fg:x="671" fg:w="1"/><text x="54.3193%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.0693%" y="149" width="0.0806%" height="15" fill="rgb(247,3,52)" fg:x="671" fg:w="1"/><text x="54.3193%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.0693%" y="133" width="0.0806%" height="15" fill="rgb(226,155,8)" fg:x="671" fg:w="1"/><text x="54.3193%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.0693%" y="117" width="0.0806%" height="15" fill="rgb(243,195,38)" fg:x="671" fg:w="1"/><text x="54.3193%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.0693%" y="101" width="0.0806%" height="15" fill="rgb(254,181,33)" fg:x="671" fg:w="1"/><text x="54.3193%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.0693%" y="85" width="0.0806%" height="15" fill="rgb(232,98,23)" fg:x="671" fg:w="1"/><text x="54.3193%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.0693%" y="69" width="0.0806%" height="15" fill="rgb(205,23,10)" fg:x="671" fg:w="1"/><text x="54.3193%" y="79.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="54.0693%" y="53" width="0.0806%" height="15" fill="rgb(212,124,38)" fg:x="671" fg:w="1"/><text x="54.3193%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="54.0693%" y="37" width="0.0806%" height="15" fill="rgb(228,207,2)" fg:x="671" fg:w="1"/><text x="54.3193%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.0693%" y="277" width="0.2417%" height="15" fill="rgb(215,120,22)" fg:x="671" fg:w="3"/><text x="54.3193%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.1499%" y="261" width="0.1612%" height="15" fill="rgb(251,172,33)" fg:x="672" fg:w="2"/><text x="54.3999%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.1499%" y="245" width="0.1612%" height="15" fill="rgb(250,83,2)" fg:x="672" fg:w="2"/><text x="54.3999%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="54.1499%" y="229" width="0.1612%" height="15" fill="rgb(210,132,53)" fg:x="672" fg:w="2"/><text x="54.3999%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="54.1499%" y="213" width="0.1612%" height="15" fill="rgb(221,208,36)" fg:x="672" fg:w="2"/><text x="54.3999%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="54.1499%" y="197" width="0.1612%" height="15" fill="rgb(205,192,46)" fg:x="672" fg:w="2"/><text x="54.3999%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.1499%" y="181" width="0.1612%" height="15" fill="rgb(223,163,14)" fg:x="672" fg:w="2"/><text x="54.3999%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.1499%" y="165" width="0.1612%" height="15" fill="rgb(218,41,28)" fg:x="672" fg:w="2"/><text x="54.3999%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="54.1499%" y="149" width="0.1612%" height="15" fill="rgb(235,104,10)" fg:x="672" fg:w="2"/><text x="54.3999%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="54.1499%" y="133" width="0.1612%" height="15" fill="rgb(246,17,4)" fg:x="672" fg:w="2"/><text x="54.3999%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="54.1499%" y="117" width="0.1612%" height="15" fill="rgb(240,7,16)" fg:x="672" fg:w="2"/><text x="54.3999%" y="127.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="54.1499%" y="101" width="0.1612%" height="15" fill="rgb(213,160,23)" fg:x="672" fg:w="2"/><text x="54.3999%" y="111.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.1499%" y="85" width="0.1612%" height="15" fill="rgb(251,179,49)" fg:x="672" fg:w="2"/><text x="54.3999%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.3110%" y="277" width="0.0806%" height="15" fill="rgb(247,198,10)" fg:x="674" fg:w="1"/><text x="54.5610%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="54.3110%" y="261" width="0.0806%" height="15" fill="rgb(220,65,29)" fg:x="674" fg:w="1"/><text x="54.5610%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.3110%" y="245" width="0.0806%" height="15" fill="rgb(237,171,28)" fg:x="674" fg:w="1"/><text x="54.5610%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.3110%" y="229" width="0.0806%" height="15" fill="rgb(228,44,26)" fg:x="674" fg:w="1"/><text x="54.5610%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.3110%" y="213" width="0.0806%" height="15" fill="rgb(216,210,27)" fg:x="674" fg:w="1"/><text x="54.5610%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.3916%" y="245" width="0.0806%" height="15" fill="rgb(252,10,17)" fg:x="675" fg:w="1"/><text x="54.6416%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="53.9887%" y="309" width="0.5641%" height="15" fill="rgb(214,172,30)" fg:x="670" fg:w="7"/><text x="54.2387%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="54.0693%" y="293" width="0.4835%" height="15" fill="rgb(253,130,48)" fg:x="671" fg:w="6"/><text x="54.3193%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.3916%" y="277" width="0.1612%" height="15" fill="rgb(226,99,43)" fg:x="675" fg:w="2"/><text x="54.6416%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.3916%" y="261" width="0.1612%" height="15" fill="rgb(239,111,26)" fg:x="675" fg:w="2"/><text x="54.6416%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="54.4722%" y="245" width="0.0806%" height="15" fill="rgb(240,27,53)" fg:x="676" fg:w="1"/><text x="54.7222%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.4722%" y="229" width="0.0806%" height="15" fill="rgb(254,163,12)" fg:x="676" fg:w="1"/><text x="54.7222%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.4722%" y="213" width="0.0806%" height="15" fill="rgb(225,51,48)" fg:x="676" fg:w="1"/><text x="54.7222%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.4722%" y="197" width="0.0806%" height="15" fill="rgb(205,19,32)" fg:x="676" fg:w="1"/><text x="54.7222%" y="207.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.6334%" y="293" width="0.1612%" height="15" fill="rgb(218,119,26)" fg:x="678" fg:w="2"/><text x="54.8834%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.8751%" y="181" width="0.0806%" height="15" fill="rgb(231,173,33)" fg:x="681" fg:w="1"/><text x="55.1251%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (13 samples, 1.05%)</title><rect x="53.9887%" y="357" width="1.0475%" height="15" fill="rgb(241,100,29)" fg:x="670" fg:w="13"/><text x="54.2387%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (13 samples, 1.05%)</title><rect x="53.9887%" y="341" width="1.0475%" height="15" fill="rgb(250,194,34)" fg:x="670" fg:w="13"/><text x="54.2387%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (13 samples, 1.05%)</title><rect x="53.9887%" y="325" width="1.0475%" height="15" fill="rgb(215,23,50)" fg:x="670" fg:w="13"/><text x="54.2387%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="54.5528%" y="309" width="0.4835%" height="15" fill="rgb(206,49,37)" fg:x="677" fg:w="6"/><text x="54.8028%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="54.7945%" y="293" width="0.2417%" height="15" fill="rgb(247,39,21)" fg:x="680" fg:w="3"/><text x="55.0445%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="54.7945%" y="277" width="0.2417%" height="15" fill="rgb(209,220,15)" fg:x="680" fg:w="3"/><text x="55.0445%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.7945%" y="261" width="0.2417%" height="15" fill="rgb(206,41,33)" fg:x="680" fg:w="3"/><text x="55.0445%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="54.7945%" y="245" width="0.2417%" height="15" fill="rgb(221,225,45)" fg:x="680" fg:w="3"/><text x="55.0445%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.7945%" y="229" width="0.2417%" height="15" fill="rgb(216,27,18)" fg:x="680" fg:w="3"/><text x="55.0445%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="54.7945%" y="213" width="0.2417%" height="15" fill="rgb(250,193,34)" fg:x="680" fg:w="3"/><text x="55.0445%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.8751%" y="197" width="0.1612%" height="15" fill="rgb(227,215,20)" fg:x="681" fg:w="2"/><text x="55.1251%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.9557%" y="181" width="0.0806%" height="15" fill="rgb(242,211,27)" fg:x="682" fg:w="1"/><text x="55.2057%" y="191.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (14 samples, 1.13%)</title><rect x="53.9887%" y="405" width="1.1281%" height="15" fill="rgb(229,190,30)" fg:x="670" fg:w="14"/><text x="54.2387%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (14 samples, 1.13%)</title><rect x="53.9887%" y="389" width="1.1281%" height="15" fill="rgb(253,31,29)" fg:x="670" fg:w="14"/><text x="54.2387%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.13%)</title><rect x="53.9887%" y="373" width="1.1281%" height="15" fill="rgb(229,177,52)" fg:x="670" fg:w="14"/><text x="54.2387%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.0363%" y="357" width="0.0806%" height="15" fill="rgb(226,88,8)" fg:x="683" fg:w="1"/><text x="55.2863%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.1168%" y="277" width="0.0806%" height="15" fill="rgb(214,55,27)" fg:x="684" fg:w="1"/><text x="55.3668%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.1168%" y="261" width="0.0806%" height="15" fill="rgb(233,202,5)" fg:x="684" fg:w="1"/><text x="55.3668%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.1168%" y="245" width="0.0806%" height="15" fill="rgb(251,49,30)" fg:x="684" fg:w="1"/><text x="55.3668%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.1974%" y="277" width="0.0806%" height="15" fill="rgb(235,18,52)" fg:x="685" fg:w="1"/><text x="55.4474%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="55.1974%" y="261" width="0.0806%" height="15" fill="rgb(250,111,51)" fg:x="685" fg:w="1"/><text x="55.4474%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="55.1168%" y="309" width="0.2417%" height="15" fill="rgb(218,13,25)" fg:x="684" fg:w="3"/><text x="55.3668%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="55.1168%" y="293" width="0.2417%" height="15" fill="rgb(248,96,7)" fg:x="684" fg:w="3"/><text x="55.3668%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.2780%" y="277" width="0.0806%" height="15" fill="rgb(217,31,15)" fg:x="686" fg:w="1"/><text x="55.5280%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.2780%" y="261" width="0.0806%" height="15" fill="rgb(228,59,49)" fg:x="686" fg:w="1"/><text x="55.5280%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="55.2780%" y="245" width="0.0806%" height="15" fill="rgb(210,152,38)" fg:x="686" fg:w="1"/><text x="55.5280%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.2780%" y="229" width="0.0806%" height="15" fill="rgb(206,71,11)" fg:x="686" fg:w="1"/><text x="55.5280%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.2780%" y="213" width="0.0806%" height="15" fill="rgb(244,199,5)" fg:x="686" fg:w="1"/><text x="55.5280%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.2780%" y="197" width="0.0806%" height="15" fill="rgb(253,49,1)" fg:x="686" fg:w="1"/><text x="55.5280%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="55.1168%" y="373" width="0.3223%" height="15" fill="rgb(225,206,40)" fg:x="684" fg:w="4"/><text x="55.3668%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="55.1168%" y="357" width="0.3223%" height="15" fill="rgb(243,116,47)" fg:x="684" fg:w="4"/><text x="55.3668%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (4 samples, 0.32%)</title><rect x="55.1168%" y="341" width="0.3223%" height="15" fill="rgb(219,225,16)" fg:x="684" fg:w="4"/><text x="55.3668%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="55.1168%" y="325" width="0.3223%" height="15" fill="rgb(233,29,47)" fg:x="684" fg:w="4"/><text x="55.3668%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="55.3586%" y="309" width="0.0806%" height="15" fill="rgb(250,179,18)" fg:x="687" fg:w="1"/><text x="55.6086%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="55.3586%" y="293" width="0.0806%" height="15" fill="rgb(215,176,6)" fg:x="687" fg:w="1"/><text x="55.6086%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.3586%" y="277" width="0.0806%" height="15" fill="rgb(214,117,39)" fg:x="687" fg:w="1"/><text x="55.6086%" y="287.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (5 samples, 0.40%)</title><rect x="55.1168%" y="405" width="0.4029%" height="15" fill="rgb(247,183,36)" fg:x="684" fg:w="5"/><text x="55.3668%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="55.1168%" y="389" width="0.4029%" height="15" fill="rgb(237,200,3)" fg:x="684" fg:w="5"/><text x="55.3668%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.4392%" y="373" width="0.0806%" height="15" fill="rgb(212,220,24)" fg:x="688" fg:w="1"/><text x="55.6892%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.5197%" y="405" width="0.0806%" height="15" fill="rgb(245,216,20)" fg:x="689" fg:w="1"/><text x="55.7697%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="55.8421%" y="341" width="0.0806%" height="15" fill="rgb(219,124,7)" fg:x="693" fg:w="1"/><text x="56.0921%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (113 samples, 9.11%)</title><rect x="47.0588%" y="645" width="9.1056%" height="15" fill="rgb(227,167,8)" fg:x="584" fg:w="113"/><text x="47.3088%" y="655.50">&lt;engine::sess..</text></g><g><title>kernel::plugins::mw::apply_middleware (113 samples, 9.11%)</title><rect x="47.0588%" y="629" width="9.1056%" height="15" fill="rgb(241,37,2)" fg:x="584" fg:w="113"/><text x="47.3088%" y="639.50">kernel::plugi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (113 samples, 9.11%)</title><rect x="47.0588%" y="613" width="9.1056%" height="15" fill="rgb(238,134,33)" fg:x="584" fg:w="113"/><text x="47.3088%" y="623.50">kernel::plugi..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (113 samples, 9.11%)</title><rect x="47.0588%" y="597" width="9.1056%" height="15" fill="rgb(248,48,27)" fg:x="584" fg:w="113"/><text x="47.3088%" y="607.50">&lt;engine::sess..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (89 samples, 7.17%)</title><rect x="48.9927%" y="581" width="7.1716%" height="15" fill="rgb(212,14,16)" fg:x="608" fg:w="89"/><text x="49.2427%" y="591.50">kernel::pl..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (89 samples, 7.17%)</title><rect x="48.9927%" y="565" width="7.1716%" height="15" fill="rgb(217,205,37)" fg:x="608" fg:w="89"/><text x="49.2427%" y="575.50">&lt;plugins_d..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (89 samples, 7.17%)</title><rect x="48.9927%" y="549" width="7.1716%" height="15" fill="rgb(233,185,47)" fg:x="608" fg:w="89"/><text x="49.2427%" y="559.50">kernel::pl..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (88 samples, 7.09%)</title><rect x="49.0733%" y="533" width="7.0911%" height="15" fill="rgb(244,88,8)" fg:x="609" fg:w="88"/><text x="49.3233%" y="543.50">core::ops:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (88 samples, 7.09%)</title><rect x="49.0733%" y="517" width="7.0911%" height="15" fill="rgb(213,0,20)" fg:x="609" fg:w="88"/><text x="49.3233%" y="527.50">kernel::pl..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (88 samples, 7.09%)</title><rect x="49.0733%" y="501" width="7.0911%" height="15" fill="rgb(238,159,36)" fg:x="609" fg:w="88"/><text x="49.3233%" y="511.50">core::ops:..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (87 samples, 7.01%)</title><rect x="49.1539%" y="485" width="7.0105%" height="15" fill="rgb(253,173,17)" fg:x="610" fg:w="87"/><text x="49.4039%" y="495.50">&lt;engine::..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (85 samples, 6.85%)</title><rect x="49.3151%" y="469" width="6.8493%" height="15" fill="rgb(221,23,28)" fg:x="612" fg:w="85"/><text x="49.5651%" y="479.50">&lt;plugins_..</text></g><g><title>plugins_core::looking::model::new_area_observation (74 samples, 5.96%)</title><rect x="50.2015%" y="453" width="5.9629%" height="15" fill="rgb(218,113,15)" fg:x="623" fg:w="74"/><text x="50.4515%" y="463.50">plugins_..</text></g><g><title>kernel::model::entry::Entry::scope (29 samples, 2.34%)</title><rect x="53.8276%" y="437" width="2.3368%" height="15" fill="rgb(233,58,3)" fg:x="668" fg:w="29"/><text x="54.0776%" y="447.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (29 samples, 2.34%)</title><rect x="53.8276%" y="421" width="2.3368%" height="15" fill="rgb(250,46,35)" fg:x="668" fg:w="29"/><text x="54.0776%" y="431.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="55.6003%" y="405" width="0.5641%" height="15" fill="rgb(210,169,11)" fg:x="690" fg:w="7"/><text x="55.8503%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="55.6809%" y="389" width="0.4835%" height="15" fill="rgb(246,88,19)" fg:x="691" fg:w="6"/><text x="55.9309%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.40%)</title><rect x="55.7615%" y="373" width="0.4029%" height="15" fill="rgb(206,81,49)" fg:x="692" fg:w="5"/><text x="56.0115%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (5 samples, 0.40%)</title><rect x="55.7615%" y="357" width="0.4029%" height="15" fill="rgb(232,144,18)" fg:x="692" fg:w="5"/><text x="56.0115%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="55.9226%" y="341" width="0.2417%" height="15" fill="rgb(235,2,27)" fg:x="694" fg:w="3"/><text x="56.1726%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.0032%" y="325" width="0.1612%" height="15" fill="rgb(239,157,39)" fg:x="695" fg:w="2"/><text x="56.2532%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.0032%" y="309" width="0.1612%" height="15" fill="rgb(220,11,17)" fg:x="695" fg:w="2"/><text x="56.2532%" y="319.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="56.1644%" y="645" width="0.1612%" height="15" fill="rgb(243,94,50)" fg:x="697" fg:w="2"/><text x="56.4144%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="56.1644%" y="629" width="0.1612%" height="15" fill="rgb(218,22,0)" fg:x="697" fg:w="2"/><text x="56.4144%" y="639.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="56.2450%" y="613" width="0.0806%" height="15" fill="rgb(249,70,21)" fg:x="698" fg:w="1"/><text x="56.4950%" y="623.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="56.2450%" y="597" width="0.0806%" height="15" fill="rgb(245,111,46)" fg:x="698" fg:w="1"/><text x="56.4950%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="56.2450%" y="581" width="0.0806%" height="15" fill="rgb(244,183,12)" fg:x="698" fg:w="1"/><text x="56.4950%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="56.2450%" y="565" width="0.0806%" height="15" fill="rgb(207,117,0)" fg:x="698" fg:w="1"/><text x="56.4950%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="56.4061%" y="613" width="0.0806%" height="15" fill="rgb(206,20,43)" fg:x="700" fg:w="1"/><text x="56.6561%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.4867%" y="565" width="0.0806%" height="15" fill="rgb(221,104,11)" fg:x="701" fg:w="1"/><text x="56.7367%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4867%" y="549" width="0.0806%" height="15" fill="rgb(254,36,50)" fg:x="701" fg:w="1"/><text x="56.7367%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4867%" y="533" width="0.0806%" height="15" fill="rgb(252,17,15)" fg:x="701" fg:w="1"/><text x="56.7367%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.4867%" y="517" width="0.0806%" height="15" fill="rgb(219,129,43)" fg:x="701" fg:w="1"/><text x="56.7367%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.4867%" y="501" width="0.0806%" height="15" fill="rgb(205,34,45)" fg:x="701" fg:w="1"/><text x="56.7367%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.4867%" y="485" width="0.0806%" height="15" fill="rgb(251,201,32)" fg:x="701" fg:w="1"/><text x="56.7367%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4867%" y="469" width="0.0806%" height="15" fill="rgb(205,56,0)" fg:x="701" fg:w="1"/><text x="56.7367%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4867%" y="453" width="0.0806%" height="15" fill="rgb(211,193,27)" fg:x="701" fg:w="1"/><text x="56.7367%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.4867%" y="437" width="0.0806%" height="15" fill="rgb(231,100,42)" fg:x="701" fg:w="1"/><text x="56.7367%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.4867%" y="421" width="0.0806%" height="15" fill="rgb(245,85,27)" fg:x="701" fg:w="1"/><text x="56.7367%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.4867%" y="405" width="0.0806%" height="15" fill="rgb(241,76,24)" fg:x="701" fg:w="1"/><text x="56.7367%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.4867%" y="389" width="0.0806%" height="15" fill="rgb(249,157,15)" fg:x="701" fg:w="1"/><text x="56.7367%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.4867%" y="373" width="0.0806%" height="15" fill="rgb(222,218,25)" fg:x="701" fg:w="1"/><text x="56.7367%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.4867%" y="581" width="0.1612%" height="15" fill="rgb(252,156,52)" fg:x="701" fg:w="2"/><text x="56.7367%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5673%" y="565" width="0.0806%" height="15" fill="rgb(211,185,7)" fg:x="702" fg:w="1"/><text x="56.8173%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5673%" y="549" width="0.0806%" height="15" fill="rgb(234,108,24)" fg:x="702" fg:w="1"/><text x="56.8173%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.5673%" y="533" width="0.0806%" height="15" fill="rgb(227,218,2)" fg:x="702" fg:w="1"/><text x="56.8173%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.5673%" y="517" width="0.0806%" height="15" fill="rgb(224,0,36)" fg:x="702" fg:w="1"/><text x="56.8173%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.5673%" y="501" width="0.0806%" height="15" fill="rgb(233,201,10)" fg:x="702" fg:w="1"/><text x="56.8173%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5673%" y="485" width="0.0806%" height="15" fill="rgb(252,209,14)" fg:x="702" fg:w="1"/><text x="56.8173%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5673%" y="469" width="0.0806%" height="15" fill="rgb(205,93,49)" fg:x="702" fg:w="1"/><text x="56.8173%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.5673%" y="453" width="0.0806%" height="15" fill="rgb(234,116,45)" fg:x="702" fg:w="1"/><text x="56.8173%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.5673%" y="437" width="0.0806%" height="15" fill="rgb(248,89,35)" fg:x="702" fg:w="1"/><text x="56.8173%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.5673%" y="421" width="0.0806%" height="15" fill="rgb(233,167,45)" fg:x="702" fg:w="1"/><text x="56.8173%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.5673%" y="405" width="0.0806%" height="15" fill="rgb(248,228,14)" fg:x="702" fg:w="1"/><text x="56.8173%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5673%" y="389" width="0.0806%" height="15" fill="rgb(246,91,14)" fg:x="702" fg:w="1"/><text x="56.8173%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.6479%" y="549" width="0.0806%" height="15" fill="rgb(227,142,5)" fg:x="703" fg:w="1"/><text x="56.8979%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.6479%" y="533" width="0.0806%" height="15" fill="rgb(221,63,33)" fg:x="703" fg:w="1"/><text x="56.8979%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.6479%" y="517" width="0.0806%" height="15" fill="rgb(233,49,0)" fg:x="703" fg:w="1"/><text x="56.8979%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.6479%" y="501" width="0.0806%" height="15" fill="rgb(251,115,38)" fg:x="703" fg:w="1"/><text x="56.8979%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.6479%" y="485" width="0.0806%" height="15" fill="rgb(231,214,32)" fg:x="703" fg:w="1"/><text x="56.8979%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.6479%" y="469" width="0.0806%" height="15" fill="rgb(248,73,46)" fg:x="703" fg:w="1"/><text x="56.8979%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.6479%" y="453" width="0.0806%" height="15" fill="rgb(237,156,4)" fg:x="703" fg:w="1"/><text x="56.8979%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.6479%" y="437" width="0.0806%" height="15" fill="rgb(227,132,2)" fg:x="703" fg:w="1"/><text x="56.8979%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.6479%" y="421" width="0.0806%" height="15" fill="rgb(248,161,9)" fg:x="703" fg:w="1"/><text x="56.8979%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.6479%" y="405" width="0.0806%" height="15" fill="rgb(238,77,38)" fg:x="703" fg:w="1"/><text x="56.8979%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.6479%" y="389" width="0.0806%" height="15" fill="rgb(222,166,40)" fg:x="703" fg:w="1"/><text x="56.8979%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.6479%" y="373" width="0.0806%" height="15" fill="rgb(214,168,45)" fg:x="703" fg:w="1"/><text x="56.8979%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.6479%" y="357" width="0.0806%" height="15" fill="rgb(226,64,37)" fg:x="703" fg:w="1"/><text x="56.8979%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.6479%" y="341" width="0.0806%" height="15" fill="rgb(232,210,43)" fg:x="703" fg:w="1"/><text x="56.8979%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="56.6479%" y="581" width="0.3223%" height="15" fill="rgb(214,76,33)" fg:x="703" fg:w="4"/><text x="56.8979%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="56.6479%" y="565" width="0.3223%" height="15" fill="rgb(210,78,5)" fg:x="703" fg:w="4"/><text x="56.8979%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="56.7284%" y="549" width="0.2417%" height="15" fill="rgb(211,107,37)" fg:x="704" fg:w="3"/><text x="56.9784%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.8090%" y="533" width="0.1612%" height="15" fill="rgb(249,67,16)" fg:x="705" fg:w="2"/><text x="57.0590%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="56.8090%" y="517" width="0.1612%" height="15" fill="rgb(222,114,31)" fg:x="705" fg:w="2"/><text x="57.0590%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.8090%" y="501" width="0.1612%" height="15" fill="rgb(242,118,19)" fg:x="705" fg:w="2"/><text x="57.0590%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.8896%" y="485" width="0.0806%" height="15" fill="rgb(223,115,1)" fg:x="706" fg:w="1"/><text x="57.1396%" y="495.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="56.9702%" y="581" width="0.0806%" height="15" fill="rgb(241,182,54)" fg:x="707" fg:w="1"/><text x="57.2202%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.9702%" y="565" width="0.0806%" height="15" fill="rgb(244,166,36)" fg:x="707" fg:w="1"/><text x="57.2202%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.9702%" y="549" width="0.0806%" height="15" fill="rgb(241,52,43)" fg:x="707" fg:w="1"/><text x="57.2202%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="56.9702%" y="533" width="0.0806%" height="15" fill="rgb(236,82,9)" fg:x="707" fg:w="1"/><text x="57.2202%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.1313%" y="421" width="0.0806%" height="15" fill="rgb(241,119,0)" fg:x="709" fg:w="1"/><text x="57.3813%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.1313%" y="405" width="0.0806%" height="15" fill="rgb(221,19,22)" fg:x="709" fg:w="1"/><text x="57.3813%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.1313%" y="389" width="0.0806%" height="15" fill="rgb(254,144,35)" fg:x="709" fg:w="1"/><text x="57.3813%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.1313%" y="373" width="0.0806%" height="15" fill="rgb(246,132,30)" fg:x="709" fg:w="1"/><text x="57.3813%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.1313%" y="357" width="0.0806%" height="15" fill="rgb(234,69,28)" fg:x="709" fg:w="1"/><text x="57.3813%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="57.2119%" y="421" width="0.0806%" height="15" fill="rgb(219,106,47)" fg:x="710" fg:w="1"/><text x="57.4619%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.2119%" y="405" width="0.0806%" height="15" fill="rgb(218,79,24)" fg:x="710" fg:w="1"/><text x="57.4619%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.2119%" y="389" width="0.0806%" height="15" fill="rgb(225,26,21)" fg:x="710" fg:w="1"/><text x="57.4619%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2119%" y="373" width="0.0806%" height="15" fill="rgb(217,68,49)" fg:x="710" fg:w="1"/><text x="57.4619%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2119%" y="357" width="0.0806%" height="15" fill="rgb(220,204,28)" fg:x="710" fg:w="1"/><text x="57.4619%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="57.1313%" y="485" width="0.2417%" height="15" fill="rgb(237,208,43)" fg:x="709" fg:w="3"/><text x="57.3813%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="57.1313%" y="469" width="0.2417%" height="15" fill="rgb(213,97,42)" fg:x="709" fg:w="3"/><text x="57.3813%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="57.1313%" y="453" width="0.2417%" height="15" fill="rgb(238,96,52)" fg:x="709" fg:w="3"/><text x="57.3813%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="57.1313%" y="437" width="0.2417%" height="15" fill="rgb(228,14,13)" fg:x="709" fg:w="3"/><text x="57.3813%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2925%" y="421" width="0.0806%" height="15" fill="rgb(219,123,13)" fg:x="711" fg:w="1"/><text x="57.5425%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.4537%" y="437" width="0.0806%" height="15" fill="rgb(216,144,17)" fg:x="713" fg:w="1"/><text x="57.7037%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.32%)</title><rect x="57.3731%" y="485" width="0.3223%" height="15" fill="rgb(230,228,29)" fg:x="712" fg:w="4"/><text x="57.6231%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="57.3731%" y="469" width="0.3223%" height="15" fill="rgb(233,18,5)" fg:x="712" fg:w="4"/><text x="57.6231%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="57.4537%" y="453" width="0.2417%" height="15" fill="rgb(233,197,12)" fg:x="713" fg:w="3"/><text x="57.7037%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="57.5342%" y="437" width="0.1612%" height="15" fill="rgb(234,140,29)" fg:x="714" fg:w="2"/><text x="57.7842%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.9371%" y="373" width="0.0806%" height="15" fill="rgb(233,113,19)" fg:x="719" fg:w="1"/><text x="58.1871%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.05%)</title><rect x="57.1313%" y="533" width="1.0475%" height="15" fill="rgb(246,209,13)" fg:x="709" fg:w="13"/><text x="57.3813%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.05%)</title><rect x="57.1313%" y="517" width="1.0475%" height="15" fill="rgb(242,79,54)" fg:x="709" fg:w="13"/><text x="57.3813%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (13 samples, 1.05%)</title><rect x="57.1313%" y="501" width="1.0475%" height="15" fill="rgb(219,73,16)" fg:x="709" fg:w="13"/><text x="57.3813%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="57.6954%" y="485" width="0.4835%" height="15" fill="rgb(224,52,10)" fg:x="716" fg:w="6"/><text x="57.9454%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="57.6954%" y="469" width="0.4835%" height="15" fill="rgb(237,179,5)" fg:x="716" fg:w="6"/><text x="57.9454%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="57.7760%" y="453" width="0.4029%" height="15" fill="rgb(231,20,6)" fg:x="717" fg:w="5"/><text x="58.0260%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="57.7760%" y="437" width="0.4029%" height="15" fill="rgb(253,171,45)" fg:x="717" fg:w="5"/><text x="58.0260%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="57.8566%" y="421" width="0.3223%" height="15" fill="rgb(230,75,49)" fg:x="718" fg:w="4"/><text x="58.1066%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="57.9371%" y="405" width="0.2417%" height="15" fill="rgb(216,83,46)" fg:x="719" fg:w="3"/><text x="58.1871%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.9371%" y="389" width="0.2417%" height="15" fill="rgb(236,56,9)" fg:x="719" fg:w="3"/><text x="58.1871%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.0177%" y="373" width="0.1612%" height="15" fill="rgb(215,28,34)" fg:x="720" fg:w="2"/><text x="58.2677%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="58.0177%" y="357" width="0.1612%" height="15" fill="rgb(230,222,20)" fg:x="720" fg:w="2"/><text x="58.2677%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.0983%" y="341" width="0.0806%" height="15" fill="rgb(235,209,51)" fg:x="721" fg:w="1"/><text x="58.3483%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (16 samples, 1.29%)</title><rect x="57.0508%" y="581" width="1.2893%" height="15" fill="rgb(235,167,1)" fg:x="708" fg:w="16"/><text x="57.3008%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (16 samples, 1.29%)</title><rect x="57.0508%" y="565" width="1.2893%" height="15" fill="rgb(248,220,0)" fg:x="708" fg:w="16"/><text x="57.3008%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (16 samples, 1.29%)</title><rect x="57.0508%" y="549" width="1.2893%" height="15" fill="rgb(239,0,18)" fg:x="708" fg:w="16"/><text x="57.3008%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.1789%" y="533" width="0.1612%" height="15" fill="rgb(229,179,11)" fg:x="722" fg:w="2"/><text x="58.4289%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.1789%" y="517" width="0.1612%" height="15" fill="rgb(226,116,53)" fg:x="722" fg:w="2"/><text x="58.4289%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.2595%" y="501" width="0.0806%" height="15" fill="rgb(218,1,49)" fg:x="723" fg:w="1"/><text x="58.5095%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="58.6624%" y="453" width="0.1612%" height="15" fill="rgb(208,184,47)" fg:x="728" fg:w="2"/><text x="58.9124%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.6624%" y="437" width="0.1612%" height="15" fill="rgb(238,174,3)" fg:x="728" fg:w="2"/><text x="58.9124%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.7429%" y="421" width="0.0806%" height="15" fill="rgb(247,188,6)" fg:x="729" fg:w="1"/><text x="58.9929%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.7429%" y="405" width="0.0806%" height="15" fill="rgb(211,165,46)" fg:x="729" fg:w="1"/><text x="58.9929%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.7429%" y="389" width="0.0806%" height="15" fill="rgb(222,190,10)" fg:x="729" fg:w="1"/><text x="58.9929%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.7429%" y="373" width="0.0806%" height="15" fill="rgb(206,185,3)" fg:x="729" fg:w="1"/><text x="58.9929%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="58.5818%" y="485" width="0.3223%" height="15" fill="rgb(244,125,37)" fg:x="727" fg:w="4"/><text x="58.8318%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="58.6624%" y="469" width="0.2417%" height="15" fill="rgb(211,43,7)" fg:x="728" fg:w="3"/><text x="58.9124%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.8235%" y="453" width="0.0806%" height="15" fill="rgb(250,41,42)" fg:x="730" fg:w="1"/><text x="59.0735%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="58.4206%" y="517" width="0.6446%" height="15" fill="rgb(254,54,42)" fg:x="725" fg:w="8"/><text x="58.6706%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="58.5012%" y="501" width="0.5641%" height="15" fill="rgb(213,71,43)" fg:x="726" fg:w="7"/><text x="58.7512%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="58.9041%" y="485" width="0.1612%" height="15" fill="rgb(249,3,44)" fg:x="731" fg:w="2"/><text x="59.1541%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.9041%" y="469" width="0.1612%" height="15" fill="rgb(229,80,41)" fg:x="731" fg:w="2"/><text x="59.1541%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.0653%" y="501" width="0.0806%" height="15" fill="rgb(231,25,28)" fg:x="733" fg:w="1"/><text x="59.3153%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="59.0653%" y="517" width="0.1612%" height="15" fill="rgb(208,79,48)" fg:x="733" fg:w="2"/><text x="59.3153%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.1459%" y="501" width="0.0806%" height="15" fill="rgb(207,196,38)" fg:x="734" fg:w="1"/><text x="59.3959%" y="511.50"></text></g><g><title>engine::session::Session::load_entity (35 samples, 2.82%)</title><rect x="56.4867%" y="613" width="2.8203%" height="15" fill="rgb(228,105,49)" fg:x="701" fg:w="35"/><text x="56.7367%" y="623.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (35 samples, 2.82%)</title><rect x="56.4867%" y="597" width="2.8203%" height="15" fill="rgb(237,99,15)" fg:x="701" fg:w="35"/><text x="56.7367%" y="607.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.97%)</title><rect x="58.3400%" y="581" width="0.9670%" height="15" fill="rgb(224,207,46)" fg:x="724" fg:w="12"/><text x="58.5900%" y="591.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.97%)</title><rect x="58.3400%" y="565" width="0.9670%" height="15" fill="rgb(249,117,50)" fg:x="724" fg:w="12"/><text x="58.5900%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.97%)</title><rect x="58.3400%" y="549" width="0.9670%" height="15" fill="rgb(248,17,13)" fg:x="724" fg:w="12"/><text x="58.5900%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="58.3400%" y="533" width="0.9670%" height="15" fill="rgb(228,187,36)" fg:x="724" fg:w="12"/><text x="58.5900%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.2264%" y="517" width="0.0806%" height="15" fill="rgb(234,132,20)" fg:x="735" fg:w="1"/><text x="59.4764%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.4682%" y="533" width="0.1612%" height="15" fill="rgb(209,170,46)" fg:x="738" fg:w="2"/><text x="59.7182%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.4682%" y="517" width="0.1612%" height="15" fill="rgb(237,23,19)" fg:x="738" fg:w="2"/><text x="59.7182%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5488%" y="501" width="0.0806%" height="15" fill="rgb(227,21,26)" fg:x="739" fg:w="1"/><text x="59.7988%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5488%" y="485" width="0.0806%" height="15" fill="rgb(222,220,48)" fg:x="739" fg:w="1"/><text x="59.7988%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.5488%" y="469" width="0.0806%" height="15" fill="rgb(214,9,16)" fg:x="739" fg:w="1"/><text x="59.7988%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.5488%" y="453" width="0.0806%" height="15" fill="rgb(209,73,30)" fg:x="739" fg:w="1"/><text x="59.7988%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.5488%" y="437" width="0.0806%" height="15" fill="rgb(207,20,33)" fg:x="739" fg:w="1"/><text x="59.7988%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5488%" y="421" width="0.0806%" height="15" fill="rgb(219,153,12)" fg:x="739" fg:w="1"/><text x="59.7988%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5488%" y="405" width="0.0806%" height="15" fill="rgb(235,97,25)" fg:x="739" fg:w="1"/><text x="59.7988%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.5488%" y="389" width="0.0806%" height="15" fill="rgb(244,30,34)" fg:x="739" fg:w="1"/><text x="59.7988%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.5488%" y="373" width="0.0806%" height="15" fill="rgb(214,106,45)" fg:x="739" fg:w="1"/><text x="59.7988%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.5488%" y="357" width="0.0806%" height="15" fill="rgb(226,41,9)" fg:x="739" fg:w="1"/><text x="59.7988%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.5488%" y="341" width="0.0806%" height="15" fill="rgb(253,139,29)" fg:x="739" fg:w="1"/><text x="59.7988%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5488%" y="325" width="0.0806%" height="15" fill="rgb(213,205,39)" fg:x="739" fg:w="1"/><text x="59.7988%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="59.3876%" y="565" width="0.3223%" height="15" fill="rgb(209,27,10)" fg:x="737" fg:w="4"/><text x="59.6376%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="59.3876%" y="549" width="0.3223%" height="15" fill="rgb(249,142,16)" fg:x="737" fg:w="4"/><text x="59.6376%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6293%" y="533" width="0.0806%" height="15" fill="rgb(242,65,12)" fg:x="740" fg:w="1"/><text x="59.8793%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="59.3876%" y="581" width="0.4835%" height="15" fill="rgb(232,48,10)" fg:x="737" fg:w="6"/><text x="59.6376%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.7099%" y="565" width="0.1612%" height="15" fill="rgb(253,67,19)" fg:x="741" fg:w="2"/><text x="59.9599%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.7099%" y="549" width="0.1612%" height="15" fill="rgb(227,93,29)" fg:x="741" fg:w="2"/><text x="59.9599%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="59.7099%" y="533" width="0.1612%" height="15" fill="rgb(226,189,53)" fg:x="741" fg:w="2"/><text x="59.9599%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="59.7099%" y="517" width="0.1612%" height="15" fill="rgb(223,224,1)" fg:x="741" fg:w="2"/><text x="59.9599%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="59.7099%" y="501" width="0.1612%" height="15" fill="rgb(221,84,32)" fg:x="741" fg:w="2"/><text x="59.9599%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.7099%" y="485" width="0.1612%" height="15" fill="rgb(214,189,28)" fg:x="741" fg:w="2"/><text x="59.9599%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.7099%" y="469" width="0.1612%" height="15" fill="rgb(234,7,52)" fg:x="741" fg:w="2"/><text x="59.9599%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="59.7099%" y="453" width="0.1612%" height="15" fill="rgb(249,73,31)" fg:x="741" fg:w="2"/><text x="59.9599%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="59.7099%" y="437" width="0.1612%" height="15" fill="rgb(253,153,41)" fg:x="741" fg:w="2"/><text x="59.9599%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="59.7099%" y="421" width="0.1612%" height="15" fill="rgb(249,52,34)" fg:x="741" fg:w="2"/><text x="59.9599%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="59.7099%" y="405" width="0.1612%" height="15" fill="rgb(236,177,47)" fg:x="741" fg:w="2"/><text x="59.9599%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7905%" y="389" width="0.0806%" height="15" fill="rgb(252,185,45)" fg:x="742" fg:w="1"/><text x="60.0405%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.0322%" y="469" width="0.0806%" height="15" fill="rgb(251,15,30)" fg:x="745" fg:w="1"/><text x="60.2822%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.0322%" y="501" width="0.1612%" height="15" fill="rgb(233,31,4)" fg:x="745" fg:w="2"/><text x="60.2822%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.0322%" y="485" width="0.1612%" height="15" fill="rgb(254,44,24)" fg:x="745" fg:w="2"/><text x="60.2822%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="60.1128%" y="469" width="0.0806%" height="15" fill="rgb(218,54,1)" fg:x="746" fg:w="1"/><text x="60.3628%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="60.1128%" y="453" width="0.0806%" height="15" fill="rgb(243,209,39)" fg:x="746" fg:w="1"/><text x="60.3628%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="60.0322%" y="533" width="0.3223%" height="15" fill="rgb(206,75,33)" fg:x="745" fg:w="4"/><text x="60.2822%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="60.0322%" y="517" width="0.3223%" height="15" fill="rgb(223,108,18)" fg:x="745" fg:w="4"/><text x="60.2822%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.1934%" y="501" width="0.1612%" height="15" fill="rgb(244,89,31)" fg:x="747" fg:w="2"/><text x="60.4434%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.1934%" y="485" width="0.1612%" height="15" fill="rgb(222,167,27)" fg:x="747" fg:w="2"/><text x="60.4434%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="60.1934%" y="469" width="0.1612%" height="15" fill="rgb(247,41,16)" fg:x="747" fg:w="2"/><text x="60.4434%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="60.1934%" y="453" width="0.1612%" height="15" fill="rgb(233,168,40)" fg:x="747" fg:w="2"/><text x="60.4434%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="60.1934%" y="437" width="0.1612%" height="15" fill="rgb(205,211,8)" fg:x="747" fg:w="2"/><text x="60.4434%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.1934%" y="421" width="0.1612%" height="15" fill="rgb(238,105,11)" fg:x="747" fg:w="2"/><text x="60.4434%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.1934%" y="405" width="0.1612%" height="15" fill="rgb(223,142,52)" fg:x="747" fg:w="2"/><text x="60.4434%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="60.1934%" y="389" width="0.1612%" height="15" fill="rgb(238,51,33)" fg:x="747" fg:w="2"/><text x="60.4434%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="60.1934%" y="373" width="0.1612%" height="15" fill="rgb(231,188,43)" fg:x="747" fg:w="2"/><text x="60.4434%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="60.1934%" y="357" width="0.1612%" height="15" fill="rgb(216,92,17)" fg:x="747" fg:w="2"/><text x="60.4434%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="60.1934%" y="341" width="0.1612%" height="15" fill="rgb(228,2,40)" fg:x="747" fg:w="2"/><text x="60.4434%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.1934%" y="325" width="0.1612%" height="15" fill="rgb(226,73,15)" fg:x="747" fg:w="2"/><text x="60.4434%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="60.4351%" y="501" width="0.0806%" height="15" fill="rgb(227,66,46)" fg:x="750" fg:w="1"/><text x="60.6851%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.5157%" y="485" width="0.0806%" height="15" fill="rgb(209,71,6)" fg:x="751" fg:w="1"/><text x="60.7657%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.5157%" y="469" width="0.0806%" height="15" fill="rgb(246,100,25)" fg:x="751" fg:w="1"/><text x="60.7657%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.5157%" y="453" width="0.0806%" height="15" fill="rgb(248,185,27)" fg:x="751" fg:w="1"/><text x="60.7657%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.5157%" y="437" width="0.0806%" height="15" fill="rgb(225,118,47)" fg:x="751" fg:w="1"/><text x="60.7657%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.5157%" y="421" width="0.0806%" height="15" fill="rgb(220,185,44)" fg:x="751" fg:w="1"/><text x="60.7657%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.5157%" y="405" width="0.0806%" height="15" fill="rgb(227,95,24)" fg:x="751" fg:w="1"/><text x="60.7657%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.5157%" y="389" width="0.0806%" height="15" fill="rgb(252,84,24)" fg:x="751" fg:w="1"/><text x="60.7657%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.5157%" y="373" width="0.0806%" height="15" fill="rgb(240,34,44)" fg:x="751" fg:w="1"/><text x="60.7657%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.5157%" y="357" width="0.0806%" height="15" fill="rgb(209,72,54)" fg:x="751" fg:w="1"/><text x="60.7657%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.5157%" y="341" width="0.0806%" height="15" fill="rgb(226,19,45)" fg:x="751" fg:w="1"/><text x="60.7657%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.5157%" y="325" width="0.0806%" height="15" fill="rgb(246,7,45)" fg:x="751" fg:w="1"/><text x="60.7657%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.5157%" y="309" width="0.0806%" height="15" fill="rgb(225,45,2)" fg:x="751" fg:w="1"/><text x="60.7657%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.5157%" y="293" width="0.0806%" height="15" fill="rgb(221,80,29)" fg:x="751" fg:w="1"/><text x="60.7657%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.5157%" y="277" width="0.0806%" height="15" fill="rgb(228,11,19)" fg:x="751" fg:w="1"/><text x="60.7657%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.5963%" y="389" width="0.0806%" height="15" fill="rgb(243,17,21)" fg:x="752" fg:w="1"/><text x="60.8463%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.5963%" y="373" width="0.0806%" height="15" fill="rgb(243,88,8)" fg:x="752" fg:w="1"/><text x="60.8463%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="60.6769%" y="389" width="0.0806%" height="15" fill="rgb(214,17,9)" fg:x="753" fg:w="1"/><text x="60.9269%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="60.6769%" y="373" width="0.0806%" height="15" fill="rgb(232,169,15)" fg:x="753" fg:w="1"/><text x="60.9269%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="60.5963%" y="437" width="0.2417%" height="15" fill="rgb(232,86,53)" fg:x="752" fg:w="3"/><text x="60.8463%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="60.5963%" y="421" width="0.2417%" height="15" fill="rgb(222,100,4)" fg:x="752" fg:w="3"/><text x="60.8463%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="60.5963%" y="405" width="0.2417%" height="15" fill="rgb(253,151,38)" fg:x="752" fg:w="3"/><text x="60.8463%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.7575%" y="389" width="0.0806%" height="15" fill="rgb(238,215,29)" fg:x="754" fg:w="1"/><text x="61.0075%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.7575%" y="373" width="0.0806%" height="15" fill="rgb(205,128,53)" fg:x="754" fg:w="1"/><text x="61.0075%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.8380%" y="405" width="0.0806%" height="15" fill="rgb(248,183,14)" fg:x="755" fg:w="1"/><text x="61.0880%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.8380%" y="389" width="0.0806%" height="15" fill="rgb(244,172,35)" fg:x="755" fg:w="1"/><text x="61.0880%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="60.5963%" y="469" width="0.4029%" height="15" fill="rgb(234,93,19)" fg:x="752" fg:w="5"/><text x="60.8463%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.40%)</title><rect x="60.5963%" y="453" width="0.4029%" height="15" fill="rgb(227,109,7)" fg:x="752" fg:w="5"/><text x="60.8463%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.8380%" y="437" width="0.1612%" height="15" fill="rgb(233,136,54)" fg:x="755" fg:w="2"/><text x="61.0880%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.8380%" y="421" width="0.1612%" height="15" fill="rgb(233,19,40)" fg:x="755" fg:w="2"/><text x="61.0880%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="60.9186%" y="405" width="0.0806%" height="15" fill="rgb(247,41,18)" fg:x="756" fg:w="1"/><text x="61.1686%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.9186%" y="389" width="0.0806%" height="15" fill="rgb(220,34,34)" fg:x="756" fg:w="1"/><text x="61.1686%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="60.9186%" y="373" width="0.0806%" height="15" fill="rgb(222,135,32)" fg:x="756" fg:w="1"/><text x="61.1686%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.9186%" y="357" width="0.0806%" height="15" fill="rgb(214,80,19)" fg:x="756" fg:w="1"/><text x="61.1686%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="60.5963%" y="485" width="0.4835%" height="15" fill="rgb(234,54,46)" fg:x="752" fg:w="6"/><text x="60.8463%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.9992%" y="469" width="0.0806%" height="15" fill="rgb(251,48,23)" fg:x="757" fg:w="1"/><text x="61.2492%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.97%)</title><rect x="60.3546%" y="533" width="0.9670%" height="15" fill="rgb(254,109,52)" fg:x="749" fg:w="12"/><text x="60.6046%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.97%)</title><rect x="60.3546%" y="517" width="0.9670%" height="15" fill="rgb(240,186,19)" fg:x="749" fg:w="12"/><text x="60.6046%" y="527.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.81%)</title><rect x="60.5157%" y="501" width="0.8058%" height="15" fill="rgb(246,187,17)" fg:x="751" fg:w="10"/><text x="60.7657%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.0798%" y="485" width="0.2417%" height="15" fill="rgb(212,21,5)" fg:x="758" fg:w="3"/><text x="61.3298%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.0798%" y="469" width="0.2417%" height="15" fill="rgb(225,185,18)" fg:x="758" fg:w="3"/><text x="61.3298%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="61.0798%" y="453" width="0.2417%" height="15" fill="rgb(245,114,17)" fg:x="758" fg:w="3"/><text x="61.3298%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="61.1604%" y="437" width="0.1612%" height="15" fill="rgb(223,164,24)" fg:x="759" fg:w="2"/><text x="61.4104%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="61.1604%" y="421" width="0.1612%" height="15" fill="rgb(211,228,3)" fg:x="759" fg:w="2"/><text x="61.4104%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="61.1604%" y="405" width="0.1612%" height="15" fill="rgb(223,16,38)" fg:x="759" fg:w="2"/><text x="61.4104%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="61.3215%" y="453" width="0.1612%" height="15" fill="rgb(207,31,54)" fg:x="761" fg:w="2"/><text x="61.5715%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.4021%" y="437" width="0.0806%" height="15" fill="rgb(220,39,11)" fg:x="762" fg:w="1"/><text x="61.6521%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 1.69%)</title><rect x="59.8711%" y="581" width="1.6922%" height="15" fill="rgb(235,185,0)" fg:x="743" fg:w="21"/><text x="60.1211%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 1.69%)</title><rect x="59.8711%" y="565" width="1.6922%" height="15" fill="rgb(249,39,18)" fg:x="743" fg:w="21"/><text x="60.1211%" y="575.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (20 samples, 1.61%)</title><rect x="59.9517%" y="549" width="1.6116%" height="15" fill="rgb(240,110,33)" fg:x="744" fg:w="20"/><text x="60.2017%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.3215%" y="533" width="0.2417%" height="15" fill="rgb(210,92,42)" fg:x="761" fg:w="3"/><text x="61.5715%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.3215%" y="517" width="0.2417%" height="15" fill="rgb(218,215,28)" fg:x="761" fg:w="3"/><text x="61.5715%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="61.3215%" y="501" width="0.2417%" height="15" fill="rgb(238,215,36)" fg:x="761" fg:w="3"/><text x="61.5715%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="61.3215%" y="485" width="0.2417%" height="15" fill="rgb(220,31,10)" fg:x="761" fg:w="3"/><text x="61.5715%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="61.3215%" y="469" width="0.2417%" height="15" fill="rgb(212,93,14)" fg:x="761" fg:w="3"/><text x="61.5715%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.4827%" y="453" width="0.0806%" height="15" fill="rgb(254,207,2)" fg:x="763" fg:w="1"/><text x="61.7327%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.4827%" y="437" width="0.0806%" height="15" fill="rgb(205,57,44)" fg:x="763" fg:w="1"/><text x="61.7327%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.8050%" y="501" width="0.0806%" height="15" fill="rgb(226,151,19)" fg:x="767" fg:w="1"/><text x="62.0550%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.8050%" y="485" width="0.0806%" height="15" fill="rgb(230,72,30)" fg:x="767" fg:w="1"/><text x="62.0550%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="61.8050%" y="549" width="0.3223%" height="15" fill="rgb(244,0,8)" fg:x="767" fg:w="4"/><text x="62.0550%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="61.8050%" y="533" width="0.3223%" height="15" fill="rgb(230,192,6)" fg:x="767" fg:w="4"/><text x="62.0550%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="61.8050%" y="517" width="0.3223%" height="15" fill="rgb(233,207,13)" fg:x="767" fg:w="4"/><text x="62.0550%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="61.8856%" y="501" width="0.2417%" height="15" fill="rgb(206,227,7)" fg:x="768" fg:w="3"/><text x="62.1356%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="61.9662%" y="485" width="0.1612%" height="15" fill="rgb(213,217,25)" fg:x="769" fg:w="2"/><text x="62.2162%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.0467%" y="469" width="0.0806%" height="15" fill="rgb(249,75,4)" fg:x="770" fg:w="1"/><text x="62.2967%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.0467%" y="453" width="0.0806%" height="15" fill="rgb(225,114,18)" fg:x="770" fg:w="1"/><text x="62.2967%" y="463.50"></text></g><g><title>engine::session::internal::Added::find_refs (36 samples, 2.90%)</title><rect x="59.3070%" y="613" width="2.9009%" height="15" fill="rgb(211,162,40)" fg:x="736" fg:w="36"/><text x="59.5570%" y="623.50">en..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (36 samples, 2.90%)</title><rect x="59.3070%" y="597" width="2.9009%" height="15" fill="rgb(206,49,29)" fg:x="736" fg:w="36"/><text x="59.5570%" y="607.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="61.5633%" y="581" width="0.6446%" height="15" fill="rgb(244,8,6)" fg:x="764" fg:w="8"/><text x="61.8133%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="61.5633%" y="565" width="0.6446%" height="15" fill="rgb(231,194,28)" fg:x="764" fg:w="8"/><text x="61.8133%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.1273%" y="549" width="0.0806%" height="15" fill="rgb(210,69,5)" fg:x="771" fg:w="1"/><text x="62.3773%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.2885%" y="549" width="0.0806%" height="15" fill="rgb(216,186,12)" fg:x="773" fg:w="1"/><text x="62.5385%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.2885%" y="533" width="0.0806%" height="15" fill="rgb(238,61,15)" fg:x="773" fg:w="1"/><text x="62.5385%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2885%" y="517" width="0.0806%" height="15" fill="rgb(226,104,1)" fg:x="773" fg:w="1"/><text x="62.5385%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="62.2079%" y="565" width="0.4029%" height="15" fill="rgb(229,128,15)" fg:x="772" fg:w="5"/><text x="62.4579%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="62.3691%" y="549" width="0.2417%" height="15" fill="rgb(247,110,15)" fg:x="774" fg:w="3"/><text x="62.6191%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.4496%" y="533" width="0.1612%" height="15" fill="rgb(210,74,48)" fg:x="775" fg:w="2"/><text x="62.6996%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.5302%" y="517" width="0.0806%" height="15" fill="rgb(246,121,10)" fg:x="776" fg:w="1"/><text x="62.7802%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.6108%" y="485" width="0.0806%" height="15" fill="rgb(214,156,37)" fg:x="777" fg:w="1"/><text x="62.8608%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.6108%" y="469" width="0.0806%" height="15" fill="rgb(214,210,34)" fg:x="777" fg:w="1"/><text x="62.8608%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.6108%" y="453" width="0.0806%" height="15" fill="rgb(237,93,35)" fg:x="777" fg:w="1"/><text x="62.8608%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.6108%" y="437" width="0.0806%" height="15" fill="rgb(206,36,8)" fg:x="777" fg:w="1"/><text x="62.8608%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.6108%" y="421" width="0.0806%" height="15" fill="rgb(208,151,12)" fg:x="777" fg:w="1"/><text x="62.8608%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.6108%" y="405" width="0.0806%" height="15" fill="rgb(225,133,52)" fg:x="777" fg:w="1"/><text x="62.8608%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.6108%" y="389" width="0.0806%" height="15" fill="rgb(231,71,53)" fg:x="777" fg:w="1"/><text x="62.8608%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="62.2079%" y="597" width="0.6446%" height="15" fill="rgb(243,76,21)" fg:x="772" fg:w="8"/><text x="62.4579%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="62.2079%" y="581" width="0.6446%" height="15" fill="rgb(252,144,3)" fg:x="772" fg:w="8"/><text x="62.4579%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="62.6108%" y="565" width="0.2417%" height="15" fill="rgb(231,199,10)" fg:x="777" fg:w="3"/><text x="62.8608%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="62.6108%" y="549" width="0.2417%" height="15" fill="rgb(215,18,11)" fg:x="777" fg:w="3"/><text x="62.8608%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="62.6108%" y="533" width="0.2417%" height="15" fill="rgb(241,65,24)" fg:x="777" fg:w="3"/><text x="62.8608%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="62.6108%" y="517" width="0.2417%" height="15" fill="rgb(251,192,38)" fg:x="777" fg:w="3"/><text x="62.8608%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="62.6108%" y="501" width="0.2417%" height="15" fill="rgb(205,9,35)" fg:x="777" fg:w="3"/><text x="62.8608%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="62.6914%" y="485" width="0.1612%" height="15" fill="rgb(229,225,49)" fg:x="778" fg:w="2"/><text x="62.9414%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="62.6914%" y="469" width="0.1612%" height="15" fill="rgb(207,125,39)" fg:x="778" fg:w="2"/><text x="62.9414%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8525%" y="565" width="0.0806%" height="15" fill="rgb(222,78,19)" fg:x="780" fg:w="1"/><text x="63.1025%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8525%" y="549" width="0.0806%" height="15" fill="rgb(248,207,20)" fg:x="780" fg:w="1"/><text x="63.1025%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.8525%" y="533" width="0.0806%" height="15" fill="rgb(205,103,49)" fg:x="780" fg:w="1"/><text x="63.1025%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.9331%" y="501" width="0.0806%" height="15" fill="rgb(216,42,28)" fg:x="781" fg:w="1"/><text x="63.1831%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.9331%" y="485" width="0.0806%" height="15" fill="rgb(213,205,53)" fg:x="781" fg:w="1"/><text x="63.1831%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="62.8525%" y="597" width="0.3223%" height="15" fill="rgb(239,140,53)" fg:x="780" fg:w="4"/><text x="63.1025%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="62.8525%" y="581" width="0.3223%" height="15" fill="rgb(248,95,9)" fg:x="780" fg:w="4"/><text x="63.1025%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.9331%" y="565" width="0.2417%" height="15" fill="rgb(254,58,47)" fg:x="781" fg:w="3"/><text x="63.1831%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.9331%" y="549" width="0.2417%" height="15" fill="rgb(234,227,14)" fg:x="781" fg:w="3"/><text x="63.1831%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="62.9331%" y="533" width="0.2417%" height="15" fill="rgb(205,192,45)" fg:x="781" fg:w="3"/><text x="63.1831%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.9331%" y="517" width="0.2417%" height="15" fill="rgb(253,187,31)" fg:x="781" fg:w="3"/><text x="63.1831%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.0137%" y="501" width="0.1612%" height="15" fill="rgb(222,6,32)" fg:x="782" fg:w="2"/><text x="63.2637%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.0137%" y="485" width="0.1612%" height="15" fill="rgb(249,190,19)" fg:x="782" fg:w="2"/><text x="63.2637%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.1749%" y="517" width="0.0806%" height="15" fill="rgb(251,28,20)" fg:x="784" fg:w="1"/><text x="63.4249%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.1749%" y="501" width="0.0806%" height="15" fill="rgb(210,223,40)" fg:x="784" fg:w="1"/><text x="63.4249%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.3360%" y="469" width="0.0806%" height="15" fill="rgb(216,137,22)" fg:x="786" fg:w="1"/><text x="63.5860%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.3360%" y="453" width="0.0806%" height="15" fill="rgb(247,39,34)" fg:x="786" fg:w="1"/><text x="63.5860%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.4166%" y="469" width="0.0806%" height="15" fill="rgb(239,43,50)" fg:x="787" fg:w="1"/><text x="63.6666%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.4166%" y="453" width="0.0806%" height="15" fill="rgb(241,212,9)" fg:x="787" fg:w="1"/><text x="63.6666%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.4166%" y="437" width="0.0806%" height="15" fill="rgb(205,8,2)" fg:x="787" fg:w="1"/><text x="63.6666%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.4166%" y="421" width="0.0806%" height="15" fill="rgb(217,173,54)" fg:x="787" fg:w="1"/><text x="63.6666%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="63.4972%" y="437" width="0.0806%" height="15" fill="rgb(208,149,52)" fg:x="788" fg:w="1"/><text x="63.7472%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="63.2554%" y="501" width="0.4029%" height="15" fill="rgb(239,99,40)" fg:x="785" fg:w="5"/><text x="63.5054%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="63.2554%" y="485" width="0.4029%" height="15" fill="rgb(233,214,26)" fg:x="785" fg:w="5"/><text x="63.5054%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="63.4972%" y="469" width="0.1612%" height="15" fill="rgb(231,225,37)" fg:x="788" fg:w="2"/><text x="63.7472%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="63.4972%" y="453" width="0.1612%" height="15" fill="rgb(252,55,35)" fg:x="788" fg:w="2"/><text x="63.7472%" y="463.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="63.5778%" y="437" width="0.0806%" height="15" fill="rgb(239,43,18)" fg:x="789" fg:w="1"/><text x="63.8278%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="63.5778%" y="421" width="0.0806%" height="15" fill="rgb(251,125,49)" fg:x="789" fg:w="1"/><text x="63.8278%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.73%)</title><rect x="63.1749%" y="549" width="0.7252%" height="15" fill="rgb(212,83,54)" fg:x="784" fg:w="9"/><text x="63.4249%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="63.1749%" y="533" width="0.7252%" height="15" fill="rgb(250,75,6)" fg:x="784" fg:w="9"/><text x="63.4249%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="63.2554%" y="517" width="0.6446%" height="15" fill="rgb(252,36,40)" fg:x="785" fg:w="8"/><text x="63.5054%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.6583%" y="501" width="0.2417%" height="15" fill="rgb(230,91,51)" fg:x="790" fg:w="3"/><text x="63.9083%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="63.6583%" y="485" width="0.2417%" height="15" fill="rgb(212,92,28)" fg:x="790" fg:w="3"/><text x="63.9083%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="63.6583%" y="469" width="0.2417%" height="15" fill="rgb(227,13,22)" fg:x="790" fg:w="3"/><text x="63.9083%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="63.6583%" y="453" width="0.2417%" height="15" fill="rgb(239,204,32)" fg:x="790" fg:w="3"/><text x="63.9083%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="63.6583%" y="437" width="0.2417%" height="15" fill="rgb(228,49,41)" fg:x="790" fg:w="3"/><text x="63.9083%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.6583%" y="421" width="0.2417%" height="15" fill="rgb(206,95,6)" fg:x="790" fg:w="3"/><text x="63.9083%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="63.6583%" y="405" width="0.2417%" height="15" fill="rgb(251,20,14)" fg:x="790" fg:w="3"/><text x="63.9083%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.8195%" y="389" width="0.0806%" height="15" fill="rgb(214,99,28)" fg:x="792" fg:w="1"/><text x="64.0695%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::from_value (10 samples, 0.81%)</title><rect x="63.1749%" y="597" width="0.8058%" height="15" fill="rgb(239,122,54)" fg:x="784" fg:w="10"/><text x="63.4249%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.81%)</title><rect x="63.1749%" y="581" width="0.8058%" height="15" fill="rgb(218,217,46)" fg:x="784" fg:w="10"/><text x="63.4249%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="63.1749%" y="565" width="0.8058%" height="15" fill="rgb(249,106,28)" fg:x="784" fg:w="10"/><text x="63.4249%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.9001%" y="549" width="0.0806%" height="15" fill="rgb(250,158,18)" fg:x="793" fg:w="1"/><text x="64.1501%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9001%" y="533" width="0.0806%" height="15" fill="rgb(226,137,29)" fg:x="793" fg:w="1"/><text x="64.1501%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.9001%" y="517" width="0.0806%" height="15" fill="rgb(210,188,1)" fg:x="793" fg:w="1"/><text x="64.1501%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.0612%" y="485" width="0.0806%" height="15" fill="rgb(227,84,42)" fg:x="795" fg:w="1"/><text x="64.3112%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.1418%" y="421" width="0.0806%" height="15" fill="rgb(222,147,48)" fg:x="796" fg:w="1"/><text x="64.3918%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.1418%" y="405" width="0.0806%" height="15" fill="rgb(241,150,43)" fg:x="796" fg:w="1"/><text x="64.3918%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.1418%" y="453" width="0.1612%" height="15" fill="rgb(206,139,52)" fg:x="796" fg:w="2"/><text x="64.3918%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.1418%" y="437" width="0.1612%" height="15" fill="rgb(230,63,14)" fg:x="796" fg:w="2"/><text x="64.3918%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.2224%" y="421" width="0.0806%" height="15" fill="rgb(247,8,20)" fg:x="797" fg:w="1"/><text x="64.4724%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.3030%" y="437" width="0.0806%" height="15" fill="rgb(213,115,4)" fg:x="798" fg:w="1"/><text x="64.5530%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.3030%" y="421" width="0.0806%" height="15" fill="rgb(241,79,49)" fg:x="798" fg:w="1"/><text x="64.5530%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.3836%" y="437" width="0.0806%" height="15" fill="rgb(222,42,35)" fg:x="799" fg:w="1"/><text x="64.6336%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.3836%" y="421" width="0.0806%" height="15" fill="rgb(247,59,23)" fg:x="799" fg:w="1"/><text x="64.6336%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="64.0612%" y="501" width="0.4835%" height="15" fill="rgb(247,93,18)" fg:x="795" fg:w="6"/><text x="64.3112%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="64.1418%" y="485" width="0.4029%" height="15" fill="rgb(249,107,47)" fg:x="796" fg:w="5"/><text x="64.3918%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="64.1418%" y="469" width="0.4029%" height="15" fill="rgb(219,27,1)" fg:x="796" fg:w="5"/><text x="64.3918%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.3030%" y="453" width="0.2417%" height="15" fill="rgb(217,82,32)" fg:x="798" fg:w="3"/><text x="64.5530%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.4641%" y="437" width="0.0806%" height="15" fill="rgb(250,129,47)" fg:x="800" fg:w="1"/><text x="64.7141%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.5447%" y="501" width="0.0806%" height="15" fill="rgb(253,88,35)" fg:x="801" fg:w="1"/><text x="64.7947%" y="511.50"></text></g><g><title>engine::session::Session::load_entity (104 samples, 8.38%)</title><rect x="56.3255%" y="629" width="8.3803%" height="15" fill="rgb(245,221,14)" fg:x="699" fg:w="104"/><text x="56.5755%" y="639.50">engine::sess..</text></g><g><title>engine::session::internal::Entities::add_persisted (31 samples, 2.50%)</title><rect x="62.2079%" y="613" width="2.4980%" height="15" fill="rgb(217,119,54)" fg:x="772" fg:w="31"/><text x="62.4579%" y="623.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.73%)</title><rect x="63.9807%" y="597" width="0.7252%" height="15" fill="rgb(247,128,31)" fg:x="794" fg:w="9"/><text x="64.2307%" y="607.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.73%)</title><rect x="63.9807%" y="581" width="0.7252%" height="15" fill="rgb(211,99,22)" fg:x="794" fg:w="9"/><text x="64.2307%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="63.9807%" y="565" width="0.7252%" height="15" fill="rgb(212,20,17)" fg:x="794" fg:w="9"/><text x="64.2307%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="63.9807%" y="549" width="0.7252%" height="15" fill="rgb(209,159,29)" fg:x="794" fg:w="9"/><text x="64.2307%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="64.0612%" y="533" width="0.6446%" height="15" fill="rgb(222,177,53)" fg:x="795" fg:w="8"/><text x="64.3112%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="64.0612%" y="517" width="0.6446%" height="15" fill="rgb(234,46,43)" fg:x="795" fg:w="8"/><text x="64.3112%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6253%" y="501" width="0.0806%" height="15" fill="rgb(208,108,14)" fg:x="802" fg:w="1"/><text x="64.8753%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6253%" y="485" width="0.0806%" height="15" fill="rgb(226,78,53)" fg:x="802" fg:w="1"/><text x="64.8753%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="64.6253%" y="469" width="0.0806%" height="15" fill="rgb(230,20,41)" fg:x="802" fg:w="1"/><text x="64.8753%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="64.6253%" y="453" width="0.0806%" height="15" fill="rgb(213,195,35)" fg:x="802" fg:w="1"/><text x="64.8753%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.7059%" y="565" width="0.0806%" height="15" fill="rgb(242,62,36)" fg:x="803" fg:w="1"/><text x="64.9559%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.7059%" y="549" width="0.0806%" height="15" fill="rgb(222,210,37)" fg:x="803" fg:w="1"/><text x="64.9559%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.7059%" y="533" width="0.0806%" height="15" fill="rgb(232,107,19)" fg:x="803" fg:w="1"/><text x="64.9559%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.7059%" y="517" width="0.0806%" height="15" fill="rgb(235,85,17)" fg:x="803" fg:w="1"/><text x="64.9559%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.7059%" y="501" width="0.0806%" height="15" fill="rgb(219,195,31)" fg:x="803" fg:w="1"/><text x="64.9559%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.7059%" y="485" width="0.0806%" height="15" fill="rgb(231,183,30)" fg:x="803" fg:w="1"/><text x="64.9559%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.7059%" y="469" width="0.0806%" height="15" fill="rgb(212,0,11)" fg:x="803" fg:w="1"/><text x="64.9559%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7059%" y="453" width="0.0806%" height="15" fill="rgb(249,53,54)" fg:x="803" fg:w="1"/><text x="64.9559%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7059%" y="437" width="0.0806%" height="15" fill="rgb(211,118,13)" fg:x="803" fg:w="1"/><text x="64.9559%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.7059%" y="421" width="0.0806%" height="15" fill="rgb(237,42,9)" fg:x="803" fg:w="1"/><text x="64.9559%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.7059%" y="405" width="0.0806%" height="15" fill="rgb(227,68,32)" fg:x="803" fg:w="1"/><text x="64.9559%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.7059%" y="389" width="0.0806%" height="15" fill="rgb(238,10,7)" fg:x="803" fg:w="1"/><text x="64.9559%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.7059%" y="373" width="0.0806%" height="15" fill="rgb(224,42,12)" fg:x="803" fg:w="1"/><text x="64.9559%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7059%" y="357" width="0.0806%" height="15" fill="rgb(252,190,5)" fg:x="803" fg:w="1"/><text x="64.9559%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.7059%" y="597" width="0.1612%" height="15" fill="rgb(220,214,39)" fg:x="803" fg:w="2"/><text x="64.9559%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.7059%" y="581" width="0.1612%" height="15" fill="rgb(247,98,4)" fg:x="803" fg:w="2"/><text x="64.9559%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.7865%" y="565" width="0.0806%" height="15" fill="rgb(211,60,12)" fg:x="804" fg:w="1"/><text x="65.0365%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.7865%" y="549" width="0.0806%" height="15" fill="rgb(224,42,10)" fg:x="804" fg:w="1"/><text x="65.0365%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.7865%" y="533" width="0.0806%" height="15" fill="rgb(217,167,4)" fg:x="804" fg:w="1"/><text x="65.0365%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.7865%" y="517" width="0.0806%" height="15" fill="rgb(253,18,17)" fg:x="804" fg:w="1"/><text x="65.0365%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.7865%" y="501" width="0.0806%" height="15" fill="rgb(249,186,44)" fg:x="804" fg:w="1"/><text x="65.0365%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7865%" y="485" width="0.0806%" height="15" fill="rgb(254,124,54)" fg:x="804" fg:w="1"/><text x="65.0365%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7865%" y="469" width="0.0806%" height="15" fill="rgb(220,124,39)" fg:x="804" fg:w="1"/><text x="65.0365%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.7865%" y="453" width="0.0806%" height="15" fill="rgb(225,96,46)" fg:x="804" fg:w="1"/><text x="65.0365%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.7865%" y="437" width="0.0806%" height="15" fill="rgb(221,106,12)" fg:x="804" fg:w="1"/><text x="65.0365%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.7865%" y="421" width="0.0806%" height="15" fill="rgb(227,133,23)" fg:x="804" fg:w="1"/><text x="65.0365%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.7865%" y="405" width="0.0806%" height="15" fill="rgb(216,44,52)" fg:x="804" fg:w="1"/><text x="65.0365%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.8670%" y="533" width="0.1612%" height="15" fill="rgb(239,149,7)" fg:x="805" fg:w="2"/><text x="65.1170%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9476%" y="517" width="0.0806%" height="15" fill="rgb(211,157,31)" fg:x="806" fg:w="1"/><text x="65.1976%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.0282%" y="453" width="0.0806%" height="15" fill="rgb(206,215,22)" fg:x="807" fg:w="1"/><text x="65.2782%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.0282%" y="437" width="0.0806%" height="15" fill="rgb(208,113,15)" fg:x="807" fg:w="1"/><text x="65.2782%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.0282%" y="421" width="0.0806%" height="15" fill="rgb(207,189,15)" fg:x="807" fg:w="1"/><text x="65.2782%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.0282%" y="405" width="0.0806%" height="15" fill="rgb(231,115,4)" fg:x="807" fg:w="1"/><text x="65.2782%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.0282%" y="389" width="0.0806%" height="15" fill="rgb(253,117,2)" fg:x="807" fg:w="1"/><text x="65.2782%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.0282%" y="373" width="0.0806%" height="15" fill="rgb(248,48,24)" fg:x="807" fg:w="1"/><text x="65.2782%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="65.0282%" y="357" width="0.0806%" height="15" fill="rgb(241,28,46)" fg:x="807" fg:w="1"/><text x="65.2782%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="65.0282%" y="341" width="0.0806%" height="15" fill="rgb(216,165,52)" fg:x="807" fg:w="1"/><text x="65.2782%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="64.8670%" y="549" width="0.3223%" height="15" fill="rgb(220,222,34)" fg:x="805" fg:w="4"/><text x="65.1170%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.0282%" y="533" width="0.1612%" height="15" fill="rgb(247,222,49)" fg:x="807" fg:w="2"/><text x="65.2782%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.0282%" y="517" width="0.1612%" height="15" fill="rgb(240,10,31)" fg:x="807" fg:w="2"/><text x="65.2782%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="65.0282%" y="501" width="0.1612%" height="15" fill="rgb(221,199,35)" fg:x="807" fg:w="2"/><text x="65.2782%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="65.0282%" y="485" width="0.1612%" height="15" fill="rgb(230,223,11)" fg:x="807" fg:w="2"/><text x="65.2782%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="65.0282%" y="469" width="0.1612%" height="15" fill="rgb(218,82,45)" fg:x="807" fg:w="2"/><text x="65.2782%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.1088%" y="453" width="0.0806%" height="15" fill="rgb(233,213,33)" fg:x="808" fg:w="1"/><text x="65.3588%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.1088%" y="437" width="0.0806%" height="15" fill="rgb(210,143,52)" fg:x="808" fg:w="1"/><text x="65.3588%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.1894%" y="501" width="0.1612%" height="15" fill="rgb(206,95,4)" fg:x="809" fg:w="2"/><text x="65.4394%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.1894%" y="485" width="0.1612%" height="15" fill="rgb(246,164,46)" fg:x="809" fg:w="2"/><text x="65.4394%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.1894%" y="469" width="0.1612%" height="15" fill="rgb(213,210,47)" fg:x="809" fg:w="2"/><text x="65.4394%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.3505%" y="501" width="0.0806%" height="15" fill="rgb(210,12,38)" fg:x="811" fg:w="1"/><text x="65.6005%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="65.3505%" y="485" width="0.0806%" height="15" fill="rgb(252,192,54)" fg:x="811" fg:w="1"/><text x="65.6005%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="65.3505%" y="469" width="0.0806%" height="15" fill="rgb(242,92,6)" fg:x="811" fg:w="1"/><text x="65.6005%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.3505%" y="453" width="0.0806%" height="15" fill="rgb(253,154,15)" fg:x="811" fg:w="1"/><text x="65.6005%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="65.3505%" y="437" width="0.0806%" height="15" fill="rgb(209,20,43)" fg:x="811" fg:w="1"/><text x="65.6005%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="65.3505%" y="421" width="0.0806%" height="15" fill="rgb(232,28,49)" fg:x="811" fg:w="1"/><text x="65.6005%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.3505%" y="405" width="0.0806%" height="15" fill="rgb(248,131,53)" fg:x="811" fg:w="1"/><text x="65.6005%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3505%" y="389" width="0.0806%" height="15" fill="rgb(214,16,30)" fg:x="811" fg:w="1"/><text x="65.6005%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.3505%" y="373" width="0.0806%" height="15" fill="rgb(245,16,0)" fg:x="811" fg:w="1"/><text x="65.6005%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="65.1894%" y="549" width="0.3223%" height="15" fill="rgb(245,17,35)" fg:x="809" fg:w="4"/><text x="65.4394%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="65.1894%" y="533" width="0.3223%" height="15" fill="rgb(249,27,53)" fg:x="809" fg:w="4"/><text x="65.4394%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="65.1894%" y="517" width="0.3223%" height="15" fill="rgb(214,73,24)" fg:x="809" fg:w="4"/><text x="65.4394%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.4311%" y="501" width="0.0806%" height="15" fill="rgb(223,84,37)" fg:x="812" fg:w="1"/><text x="65.6811%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.4311%" y="485" width="0.0806%" height="15" fill="rgb(210,109,28)" fg:x="812" fg:w="1"/><text x="65.6811%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.4311%" y="469" width="0.0806%" height="15" fill="rgb(208,186,6)" fg:x="812" fg:w="1"/><text x="65.6811%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="65.4311%" y="453" width="0.0806%" height="15" fill="rgb(235,201,30)" fg:x="812" fg:w="1"/><text x="65.6811%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="65.4311%" y="437" width="0.0806%" height="15" fill="rgb(216,198,48)" fg:x="812" fg:w="1"/><text x="65.6811%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.4311%" y="421" width="0.0806%" height="15" fill="rgb(254,186,25)" fg:x="812" fg:w="1"/><text x="65.6811%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.81%)</title><rect x="64.8670%" y="597" width="0.8058%" height="15" fill="rgb(227,87,5)" fg:x="805" fg:w="10"/><text x="65.1170%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.81%)</title><rect x="64.8670%" y="581" width="0.8058%" height="15" fill="rgb(236,205,25)" fg:x="805" fg:w="10"/><text x="65.1170%" y="591.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.81%)</title><rect x="64.8670%" y="565" width="0.8058%" height="15" fill="rgb(229,99,32)" fg:x="805" fg:w="10"/><text x="65.1170%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.5117%" y="549" width="0.1612%" height="15" fill="rgb(231,177,31)" fg:x="813" fg:w="2"/><text x="65.7617%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.5117%" y="533" width="0.1612%" height="15" fill="rgb(246,15,2)" fg:x="813" fg:w="2"/><text x="65.7617%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.5923%" y="517" width="0.0806%" height="15" fill="rgb(207,39,15)" fg:x="814" fg:w="1"/><text x="65.8423%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="65.5923%" y="501" width="0.0806%" height="15" fill="rgb(207,44,9)" fg:x="814" fg:w="1"/><text x="65.8423%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.5923%" y="485" width="0.0806%" height="15" fill="rgb(225,224,33)" fg:x="814" fg:w="1"/><text x="65.8423%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.5923%" y="469" width="0.0806%" height="15" fill="rgb(252,151,3)" fg:x="814" fg:w="1"/><text x="65.8423%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="65.6728%" y="565" width="0.1612%" height="15" fill="rgb(211,140,13)" fg:x="815" fg:w="2"/><text x="65.9228%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="65.6728%" y="549" width="0.1612%" height="15" fill="rgb(239,225,17)" fg:x="815" fg:w="2"/><text x="65.9228%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="65.6728%" y="533" width="0.1612%" height="15" fill="rgb(223,170,52)" fg:x="815" fg:w="2"/><text x="65.9228%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.7534%" y="517" width="0.0806%" height="15" fill="rgb(212,64,21)" fg:x="816" fg:w="1"/><text x="66.0034%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.7534%" y="501" width="0.0806%" height="15" fill="rgb(236,126,48)" fg:x="816" fg:w="1"/><text x="66.0034%" y="511.50"></text></g><g><title>engine::session::internal::Added::find_refs (15 samples, 1.21%)</title><rect x="64.7059%" y="629" width="1.2087%" height="15" fill="rgb(209,135,11)" fg:x="803" fg:w="15"/><text x="64.9559%" y="639.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (15 samples, 1.21%)</title><rect x="64.7059%" y="613" width="1.2087%" height="15" fill="rgb(228,126,40)" fg:x="803" fg:w="15"/><text x="64.9559%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="65.6728%" y="597" width="0.2417%" height="15" fill="rgb(205,196,36)" fg:x="815" fg:w="3"/><text x="65.9228%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.6728%" y="581" width="0.2417%" height="15" fill="rgb(243,160,33)" fg:x="815" fg:w="3"/><text x="65.9228%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="65.8340%" y="565" width="0.0806%" height="15" fill="rgb(210,84,20)" fg:x="817" fg:w="1"/><text x="66.0840%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="65.8340%" y="549" width="0.0806%" height="15" fill="rgb(228,213,30)" fg:x="817" fg:w="1"/><text x="66.0840%" y="559.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="65.8340%" y="533" width="0.0806%" height="15" fill="rgb(252,33,45)" fg:x="817" fg:w="1"/><text x="66.0840%" y="543.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="65.8340%" y="517" width="0.0806%" height="15" fill="rgb(254,227,20)" fg:x="817" fg:w="1"/><text x="66.0840%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="65.8340%" y="501" width="0.0806%" height="15" fill="rgb(228,192,2)" fg:x="817" fg:w="1"/><text x="66.0840%" y="511.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="65.8340%" y="485" width="0.0806%" height="15" fill="rgb(233,32,8)" fg:x="817" fg:w="1"/><text x="66.0840%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="65.8340%" y="469" width="0.0806%" height="15" fill="rgb(220,146,47)" fg:x="817" fg:w="1"/><text x="66.0840%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="65.8340%" y="453" width="0.0806%" height="15" fill="rgb(246,194,1)" fg:x="817" fg:w="1"/><text x="66.0840%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="65.8340%" y="437" width="0.0806%" height="15" fill="rgb(218,203,9)" fg:x="817" fg:w="1"/><text x="66.0840%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="65.8340%" y="421" width="0.0806%" height="15" fill="rgb(237,97,14)" fg:x="817" fg:w="1"/><text x="66.0840%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="65.8340%" y="405" width="0.0806%" height="15" fill="rgb(239,76,15)" fg:x="817" fg:w="1"/><text x="66.0840%" y="415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="65.8340%" y="389" width="0.0806%" height="15" fill="rgb(222,53,45)" fg:x="817" fg:w="1"/><text x="66.0840%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.9952%" y="597" width="0.0806%" height="15" fill="rgb(237,88,5)" fg:x="819" fg:w="1"/><text x="66.2452%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.9146%" y="613" width="0.2417%" height="15" fill="rgb(218,223,35)" fg:x="818" fg:w="3"/><text x="66.1646%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.0757%" y="597" width="0.0806%" height="15" fill="rgb(243,229,38)" fg:x="820" fg:w="1"/><text x="66.3257%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.0757%" y="581" width="0.0806%" height="15" fill="rgb(240,75,41)" fg:x="820" fg:w="1"/><text x="66.3257%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.0757%" y="565" width="0.0806%" height="15" fill="rgb(209,110,37)" fg:x="820" fg:w="1"/><text x="66.3257%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.0757%" y="549" width="0.0806%" height="15" fill="rgb(221,130,46)" fg:x="820" fg:w="1"/><text x="66.3257%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.0757%" y="533" width="0.0806%" height="15" fill="rgb(237,160,20)" fg:x="820" fg:w="1"/><text x="66.3257%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.0757%" y="517" width="0.0806%" height="15" fill="rgb(234,126,24)" fg:x="820" fg:w="1"/><text x="66.3257%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.0757%" y="501" width="0.0806%" height="15" fill="rgb(207,177,9)" fg:x="820" fg:w="1"/><text x="66.3257%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.0757%" y="485" width="0.0806%" height="15" fill="rgb(231,191,33)" fg:x="820" fg:w="1"/><text x="66.3257%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.0757%" y="469" width="0.0806%" height="15" fill="rgb(207,42,1)" fg:x="820" fg:w="1"/><text x="66.3257%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.0757%" y="453" width="0.0806%" height="15" fill="rgb(218,34,50)" fg:x="820" fg:w="1"/><text x="66.3257%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.0757%" y="437" width="0.0806%" height="15" fill="rgb(254,126,39)" fg:x="820" fg:w="1"/><text x="66.3257%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.0757%" y="421" width="0.0806%" height="15" fill="rgb(251,17,26)" fg:x="820" fg:w="1"/><text x="66.3257%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.1563%" y="581" width="0.0806%" height="15" fill="rgb(252,215,34)" fg:x="821" fg:w="1"/><text x="66.4063%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.1563%" y="565" width="0.0806%" height="15" fill="rgb(217,120,44)" fg:x="821" fg:w="1"/><text x="66.4063%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.1563%" y="549" width="0.0806%" height="15" fill="rgb(211,31,11)" fg:x="821" fg:w="1"/><text x="66.4063%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.1563%" y="533" width="0.0806%" height="15" fill="rgb(222,69,51)" fg:x="821" fg:w="1"/><text x="66.4063%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.1563%" y="517" width="0.0806%" height="15" fill="rgb(215,229,42)" fg:x="821" fg:w="1"/><text x="66.4063%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.1563%" y="501" width="0.0806%" height="15" fill="rgb(212,102,15)" fg:x="821" fg:w="1"/><text x="66.4063%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.1563%" y="485" width="0.0806%" height="15" fill="rgb(205,179,41)" fg:x="821" fg:w="1"/><text x="66.4063%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.1563%" y="469" width="0.0806%" height="15" fill="rgb(219,148,46)" fg:x="821" fg:w="1"/><text x="66.4063%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.1563%" y="453" width="0.0806%" height="15" fill="rgb(243,40,19)" fg:x="821" fg:w="1"/><text x="66.4063%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.1563%" y="437" width="0.0806%" height="15" fill="rgb(208,206,34)" fg:x="821" fg:w="1"/><text x="66.4063%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.1563%" y="421" width="0.0806%" height="15" fill="rgb(244,184,38)" fg:x="821" fg:w="1"/><text x="66.4063%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.1563%" y="405" width="0.0806%" height="15" fill="rgb(244,151,47)" fg:x="821" fg:w="1"/><text x="66.4063%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.1563%" y="389" width="0.0806%" height="15" fill="rgb(236,134,42)" fg:x="821" fg:w="1"/><text x="66.4063%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.1563%" y="373" width="0.0806%" height="15" fill="rgb(233,93,22)" fg:x="821" fg:w="1"/><text x="66.4063%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.1563%" y="357" width="0.0806%" height="15" fill="rgb(211,202,10)" fg:x="821" fg:w="1"/><text x="66.4063%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.2369%" y="549" width="0.0806%" height="15" fill="rgb(240,63,8)" fg:x="822" fg:w="1"/><text x="66.4869%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.2369%" y="533" width="0.0806%" height="15" fill="rgb(214,9,4)" fg:x="822" fg:w="1"/><text x="66.4869%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="66.1563%" y="613" width="0.3223%" height="15" fill="rgb(243,66,45)" fg:x="821" fg:w="4"/><text x="66.4063%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="66.1563%" y="597" width="0.3223%" height="15" fill="rgb(220,50,42)" fg:x="821" fg:w="4"/><text x="66.4063%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.2369%" y="581" width="0.2417%" height="15" fill="rgb(220,134,27)" fg:x="822" fg:w="3"/><text x="66.4869%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.2369%" y="565" width="0.2417%" height="15" fill="rgb(246,151,50)" fg:x="822" fg:w="3"/><text x="66.4869%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="66.3175%" y="549" width="0.1612%" height="15" fill="rgb(238,216,27)" fg:x="823" fg:w="2"/><text x="66.5675%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.3175%" y="533" width="0.1612%" height="15" fill="rgb(250,92,11)" fg:x="823" fg:w="2"/><text x="66.5675%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.3981%" y="517" width="0.0806%" height="15" fill="rgb(248,183,6)" fg:x="824" fg:w="1"/><text x="66.6481%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.3981%" y="501" width="0.0806%" height="15" fill="rgb(211,204,50)" fg:x="824" fg:w="1"/><text x="66.6481%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.5592%" y="517" width="0.0806%" height="15" fill="rgb(252,55,47)" fg:x="826" fg:w="1"/><text x="66.8092%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.5592%" y="501" width="0.0806%" height="15" fill="rgb(240,198,32)" fg:x="826" fg:w="1"/><text x="66.8092%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.5592%" y="485" width="0.0806%" height="15" fill="rgb(224,203,19)" fg:x="826" fg:w="1"/><text x="66.8092%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.5592%" y="469" width="0.0806%" height="15" fill="rgb(205,27,16)" fg:x="826" fg:w="1"/><text x="66.8092%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="66.5592%" y="453" width="0.0806%" height="15" fill="rgb(224,226,17)" fg:x="826" fg:w="1"/><text x="66.8092%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.5592%" y="437" width="0.0806%" height="15" fill="rgb(205,216,54)" fg:x="826" fg:w="1"/><text x="66.8092%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="66.5592%" y="421" width="0.0806%" height="15" fill="rgb(248,168,46)" fg:x="826" fg:w="1"/><text x="66.8092%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.7204%" y="469" width="0.0806%" height="15" fill="rgb(226,111,45)" fg:x="828" fg:w="1"/><text x="66.9704%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="66.4786%" y="565" width="0.4029%" height="15" fill="rgb(231,15,9)" fg:x="825" fg:w="5"/><text x="66.7286%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="66.4786%" y="549" width="0.4029%" height="15" fill="rgb(243,168,3)" fg:x="825" fg:w="5"/><text x="66.7286%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="66.5592%" y="533" width="0.3223%" height="15" fill="rgb(221,220,54)" fg:x="826" fg:w="4"/><text x="66.8092%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="66.6398%" y="517" width="0.2417%" height="15" fill="rgb(232,174,38)" fg:x="827" fg:w="3"/><text x="66.8898%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="66.6398%" y="501" width="0.2417%" height="15" fill="rgb(205,14,38)" fg:x="827" fg:w="3"/><text x="66.8898%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="66.6398%" y="485" width="0.2417%" height="15" fill="rgb(234,89,19)" fg:x="827" fg:w="3"/><text x="66.8898%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="66.8010%" y="469" width="0.0806%" height="15" fill="rgb(216,68,51)" fg:x="829" fg:w="1"/><text x="67.0510%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="66.8010%" y="453" width="0.0806%" height="15" fill="rgb(213,49,2)" fg:x="829" fg:w="1"/><text x="67.0510%" y="463.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.48%)</title><rect x="66.4786%" y="613" width="0.4835%" height="15" fill="rgb(242,146,30)" fg:x="825" fg:w="6"/><text x="66.7286%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="66.4786%" y="597" width="0.4835%" height="15" fill="rgb(224,188,11)" fg:x="825" fg:w="6"/><text x="66.7286%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="66.4786%" y="581" width="0.4835%" height="15" fill="rgb(213,159,11)" fg:x="825" fg:w="6"/><text x="66.7286%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.8815%" y="565" width="0.0806%" height="15" fill="rgb(229,13,31)" fg:x="830" fg:w="1"/><text x="67.1315%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.8815%" y="549" width="0.0806%" height="15" fill="rgb(209,103,11)" fg:x="830" fg:w="1"/><text x="67.1315%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.0427%" y="469" width="0.0806%" height="15" fill="rgb(206,3,4)" fg:x="832" fg:w="1"/><text x="67.2927%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="67.0427%" y="485" width="0.2417%" height="15" fill="rgb(252,10,49)" fg:x="832" fg:w="3"/><text x="67.2927%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.1233%" y="469" width="0.1612%" height="15" fill="rgb(217,160,32)" fg:x="833" fg:w="2"/><text x="67.3733%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="67.1233%" y="453" width="0.1612%" height="15" fill="rgb(249,196,0)" fg:x="833" fg:w="2"/><text x="67.3733%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="67.0427%" y="517" width="0.3223%" height="15" fill="rgb(213,17,48)" fg:x="832" fg:w="4"/><text x="67.2927%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="67.0427%" y="501" width="0.3223%" height="15" fill="rgb(206,42,46)" fg:x="832" fg:w="4"/><text x="67.2927%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.2844%" y="485" width="0.0806%" height="15" fill="rgb(212,105,24)" fg:x="835" fg:w="1"/><text x="67.5344%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.2844%" y="469" width="0.0806%" height="15" fill="rgb(243,216,30)" fg:x="835" fg:w="1"/><text x="67.5344%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.2844%" y="453" width="0.0806%" height="15" fill="rgb(207,121,3)" fg:x="835" fg:w="1"/><text x="67.5344%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="66.9621%" y="549" width="0.5641%" height="15" fill="rgb(249,78,0)" fg:x="831" fg:w="7"/><text x="67.2121%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="66.9621%" y="533" width="0.5641%" height="15" fill="rgb(244,151,32)" fg:x="831" fg:w="7"/><text x="67.2121%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="67.3650%" y="517" width="0.1612%" height="15" fill="rgb(228,63,25)" fg:x="836" fg:w="2"/><text x="67.6150%" y="527.50"></text></g><g><title>engine::session::Session::load_entity (140 samples, 11.28%)</title><rect x="56.3255%" y="645" width="11.2812%" height="15" fill="rgb(231,158,23)" fg:x="699" fg:w="140"/><text x="56.5755%" y="655.50">engine::session::..</text></g><g><title>engine::session::internal::Entities::add_persisted (21 samples, 1.69%)</title><rect x="65.9146%" y="629" width="1.6922%" height="15" fill="rgb(248,107,23)" fg:x="818" fg:w="21"/><text x="66.1646%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.64%)</title><rect x="66.9621%" y="613" width="0.6446%" height="15" fill="rgb(215,168,21)" fg:x="831" fg:w="8"/><text x="67.2121%" y="623.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="66.9621%" y="597" width="0.6446%" height="15" fill="rgb(227,83,22)" fg:x="831" fg:w="8"/><text x="67.2121%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="66.9621%" y="581" width="0.6446%" height="15" fill="rgb(217,118,43)" fg:x="831" fg:w="8"/><text x="67.2121%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="66.9621%" y="565" width="0.6446%" height="15" fill="rgb(229,220,41)" fg:x="831" fg:w="8"/><text x="67.2121%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.5262%" y="549" width="0.0806%" height="15" fill="rgb(254,146,46)" fg:x="838" fg:w="1"/><text x="67.7762%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.5262%" y="533" width="0.0806%" height="15" fill="rgb(233,208,31)" fg:x="838" fg:w="1"/><text x="67.7762%" y="543.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="67.6068%" y="645" width="0.2417%" height="15" fill="rgb(222,162,7)" fg:x="839" fg:w="3"/><text x="67.8568%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="67.6068%" y="629" width="0.2417%" height="15" fill="rgb(230,117,45)" fg:x="839" fg:w="3"/><text x="67.8568%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="67.6068%" y="613" width="0.2417%" height="15" fill="rgb(239,163,6)" fg:x="839" fg:w="3"/><text x="67.8568%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="67.6873%" y="597" width="0.1612%" height="15" fill="rgb(246,130,17)" fg:x="840" fg:w="2"/><text x="67.9373%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.7679%" y="581" width="0.0806%" height="15" fill="rgb(216,84,5)" fg:x="841" fg:w="1"/><text x="68.0179%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.7679%" y="565" width="0.0806%" height="15" fill="rgb(230,200,21)" fg:x="841" fg:w="1"/><text x="68.0179%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.7679%" y="549" width="0.0806%" height="15" fill="rgb(224,2,8)" fg:x="841" fg:w="1"/><text x="68.0179%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.7679%" y="533" width="0.0806%" height="15" fill="rgb(238,178,10)" fg:x="841" fg:w="1"/><text x="68.0179%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.8485%" y="581" width="0.1612%" height="15" fill="rgb(242,153,24)" fg:x="842" fg:w="2"/><text x="68.0985%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.8485%" y="565" width="0.1612%" height="15" fill="rgb(242,32,48)" fg:x="842" fg:w="2"/><text x="68.0985%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.8485%" y="549" width="0.1612%" height="15" fill="rgb(227,36,0)" fg:x="842" fg:w="2"/><text x="68.0985%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.8485%" y="533" width="0.1612%" height="15" fill="rgb(251,33,35)" fg:x="842" fg:w="2"/><text x="68.0985%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="67.8485%" y="517" width="0.1612%" height="15" fill="rgb(232,168,51)" fg:x="842" fg:w="2"/><text x="68.0985%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="67.8485%" y="501" width="0.1612%" height="15" fill="rgb(228,56,10)" fg:x="842" fg:w="2"/><text x="68.0985%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="67.8485%" y="485" width="0.1612%" height="15" fill="rgb(231,10,26)" fg:x="842" fg:w="2"/><text x="68.0985%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="67.8485%" y="469" width="0.1612%" height="15" fill="rgb(226,202,12)" fg:x="842" fg:w="2"/><text x="68.0985%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="67.8485%" y="453" width="0.1612%" height="15" fill="rgb(251,49,21)" fg:x="842" fg:w="2"/><text x="68.0985%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="67.8485%" y="437" width="0.1612%" height="15" fill="rgb(206,228,28)" fg:x="842" fg:w="2"/><text x="68.0985%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="67.8485%" y="421" width="0.1612%" height="15" fill="rgb(205,198,31)" fg:x="842" fg:w="2"/><text x="68.0985%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="67.8485%" y="405" width="0.1612%" height="15" fill="rgb(213,69,1)" fg:x="842" fg:w="2"/><text x="68.0985%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="67.8485%" y="389" width="0.1612%" height="15" fill="rgb(209,177,9)" fg:x="842" fg:w="2"/><text x="68.0985%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9291%" y="373" width="0.0806%" height="15" fill="rgb(227,119,30)" fg:x="843" fg:w="1"/><text x="68.1791%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="67.8485%" y="629" width="0.2417%" height="15" fill="rgb(234,106,41)" fg:x="842" fg:w="3"/><text x="68.0985%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="67.8485%" y="613" width="0.2417%" height="15" fill="rgb(244,103,47)" fg:x="842" fg:w="3"/><text x="68.0985%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.8485%" y="597" width="0.2417%" height="15" fill="rgb(212,211,25)" fg:x="842" fg:w="3"/><text x="68.0985%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.0097%" y="581" width="0.0806%" height="15" fill="rgb(208,63,53)" fg:x="844" fg:w="1"/><text x="68.2597%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.0097%" y="565" width="0.0806%" height="15" fill="rgb(213,176,21)" fg:x="844" fg:w="1"/><text x="68.2597%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.0097%" y="549" width="0.0806%" height="15" fill="rgb(243,124,12)" fg:x="844" fg:w="1"/><text x="68.2597%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.0097%" y="533" width="0.0806%" height="15" fill="rgb(239,2,35)" fg:x="844" fg:w="1"/><text x="68.2597%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.0097%" y="517" width="0.0806%" height="15" fill="rgb(253,169,22)" fg:x="844" fg:w="1"/><text x="68.2597%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.0097%" y="501" width="0.0806%" height="15" fill="rgb(254,51,12)" fg:x="844" fg:w="1"/><text x="68.2597%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.0097%" y="485" width="0.0806%" height="15" fill="rgb(244,17,47)" fg:x="844" fg:w="1"/><text x="68.2597%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.0097%" y="469" width="0.0806%" height="15" fill="rgb(251,45,46)" fg:x="844" fg:w="1"/><text x="68.2597%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.0097%" y="453" width="0.0806%" height="15" fill="rgb(223,87,43)" fg:x="844" fg:w="1"/><text x="68.2597%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.0097%" y="437" width="0.0806%" height="15" fill="rgb(230,132,31)" fg:x="844" fg:w="1"/><text x="68.2597%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.0097%" y="421" width="0.0806%" height="15" fill="rgb(206,99,1)" fg:x="844" fg:w="1"/><text x="68.2597%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.0097%" y="405" width="0.0806%" height="15" fill="rgb(227,110,25)" fg:x="844" fg:w="1"/><text x="68.2597%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.1708%" y="565" width="0.1612%" height="15" fill="rgb(217,182,7)" fg:x="846" fg:w="2"/><text x="68.4208%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.2514%" y="549" width="0.0806%" height="15" fill="rgb(250,176,4)" fg:x="847" fg:w="1"/><text x="68.5014%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.2514%" y="533" width="0.0806%" height="15" fill="rgb(244,98,30)" fg:x="847" fg:w="1"/><text x="68.5014%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.2514%" y="517" width="0.0806%" height="15" fill="rgb(228,150,42)" fg:x="847" fg:w="1"/><text x="68.5014%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.2514%" y="501" width="0.0806%" height="15" fill="rgb(231,91,46)" fg:x="847" fg:w="1"/><text x="68.5014%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.2514%" y="485" width="0.0806%" height="15" fill="rgb(252,161,32)" fg:x="847" fg:w="1"/><text x="68.5014%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.2514%" y="469" width="0.0806%" height="15" fill="rgb(236,69,41)" fg:x="847" fg:w="1"/><text x="68.5014%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.2514%" y="453" width="0.0806%" height="15" fill="rgb(212,160,3)" fg:x="847" fg:w="1"/><text x="68.5014%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.2514%" y="437" width="0.0806%" height="15" fill="rgb(216,5,50)" fg:x="847" fg:w="1"/><text x="68.5014%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.2514%" y="421" width="0.0806%" height="15" fill="rgb(241,138,25)" fg:x="847" fg:w="1"/><text x="68.5014%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.2514%" y="405" width="0.0806%" height="15" fill="rgb(239,42,18)" fg:x="847" fg:w="1"/><text x="68.5014%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.2514%" y="389" width="0.0806%" height="15" fill="rgb(239,40,7)" fg:x="847" fg:w="1"/><text x="68.5014%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.2514%" y="373" width="0.0806%" height="15" fill="rgb(239,11,31)" fg:x="847" fg:w="1"/><text x="68.5014%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="68.0902%" y="597" width="0.3223%" height="15" fill="rgb(224,77,40)" fg:x="845" fg:w="4"/><text x="68.3402%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="68.0902%" y="581" width="0.3223%" height="15" fill="rgb(226,15,5)" fg:x="845" fg:w="4"/><text x="68.3402%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3320%" y="565" width="0.0806%" height="15" fill="rgb(254,188,5)" fg:x="848" fg:w="1"/><text x="68.5820%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="67.8485%" y="645" width="0.6446%" height="15" fill="rgb(241,148,52)" fg:x="842" fg:w="8"/><text x="68.0985%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="68.0902%" y="629" width="0.4029%" height="15" fill="rgb(251,48,36)" fg:x="845" fg:w="5"/><text x="68.3402%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="68.0902%" y="613" width="0.4029%" height="15" fill="rgb(243,83,13)" fg:x="845" fg:w="5"/><text x="68.3402%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.4126%" y="597" width="0.0806%" height="15" fill="rgb(210,105,0)" fg:x="849" fg:w="1"/><text x="68.6626%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.4126%" y="581" width="0.0806%" height="15" fill="rgb(239,60,36)" fg:x="849" fg:w="1"/><text x="68.6626%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.4126%" y="565" width="0.0806%" height="15" fill="rgb(210,20,0)" fg:x="849" fg:w="1"/><text x="68.6626%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.4126%" y="549" width="0.0806%" height="15" fill="rgb(244,26,53)" fg:x="849" fg:w="1"/><text x="68.6626%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="68.5737%" y="613" width="0.0806%" height="15" fill="rgb(240,100,49)" fg:x="851" fg:w="1"/><text x="68.8237%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.7349%" y="581" width="0.1612%" height="15" fill="rgb(250,46,45)" fg:x="853" fg:w="2"/><text x="68.9849%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.7349%" y="565" width="0.1612%" height="15" fill="rgb(220,181,29)" fg:x="853" fg:w="2"/><text x="68.9849%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8155%" y="549" width="0.0806%" height="15" fill="rgb(213,137,33)" fg:x="854" fg:w="1"/><text x="69.0655%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8155%" y="533" width="0.0806%" height="15" fill="rgb(213,27,48)" fg:x="854" fg:w="1"/><text x="69.0655%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.8155%" y="517" width="0.0806%" height="15" fill="rgb(245,180,39)" fg:x="854" fg:w="1"/><text x="69.0655%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.8155%" y="501" width="0.0806%" height="15" fill="rgb(212,158,42)" fg:x="854" fg:w="1"/><text x="69.0655%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.8155%" y="485" width="0.0806%" height="15" fill="rgb(228,193,18)" fg:x="854" fg:w="1"/><text x="69.0655%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.8155%" y="469" width="0.0806%" height="15" fill="rgb(245,172,29)" fg:x="854" fg:w="1"/><text x="69.0655%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.8155%" y="453" width="0.0806%" height="15" fill="rgb(207,98,24)" fg:x="854" fg:w="1"/><text x="69.0655%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.8961%" y="501" width="0.0806%" height="15" fill="rgb(249,92,26)" fg:x="855" fg:w="1"/><text x="69.1461%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.8961%" y="485" width="0.0806%" height="15" fill="rgb(217,176,26)" fg:x="855" fg:w="1"/><text x="69.1461%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.8961%" y="469" width="0.0806%" height="15" fill="rgb(221,8,39)" fg:x="855" fg:w="1"/><text x="69.1461%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.8961%" y="453" width="0.0806%" height="15" fill="rgb(208,90,18)" fg:x="855" fg:w="1"/><text x="69.1461%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.8961%" y="437" width="0.0806%" height="15" fill="rgb(207,202,30)" fg:x="855" fg:w="1"/><text x="69.1461%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.8961%" y="421" width="0.0806%" height="15" fill="rgb(231,124,22)" fg:x="855" fg:w="1"/><text x="69.1461%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8961%" y="405" width="0.0806%" height="15" fill="rgb(206,15,5)" fg:x="855" fg:w="1"/><text x="69.1461%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="68.6543%" y="597" width="0.4029%" height="15" fill="rgb(239,16,52)" fg:x="852" fg:w="5"/><text x="68.9043%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.8961%" y="581" width="0.1612%" height="15" fill="rgb(245,213,29)" fg:x="855" fg:w="2"/><text x="69.1461%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.8961%" y="565" width="0.1612%" height="15" fill="rgb(213,203,36)" fg:x="855" fg:w="2"/><text x="69.1461%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="68.8961%" y="549" width="0.1612%" height="15" fill="rgb(209,55,18)" fg:x="855" fg:w="2"/><text x="69.1461%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="68.8961%" y="533" width="0.1612%" height="15" fill="rgb(207,133,49)" fg:x="855" fg:w="2"/><text x="69.1461%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="68.8961%" y="517" width="0.1612%" height="15" fill="rgb(240,33,46)" fg:x="855" fg:w="2"/><text x="69.1461%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.9766%" y="501" width="0.0806%" height="15" fill="rgb(212,35,2)" fg:x="856" fg:w="1"/><text x="69.2266%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.9766%" y="485" width="0.0806%" height="15" fill="rgb(231,119,28)" fg:x="856" fg:w="1"/><text x="69.2266%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="69.0572%" y="581" width="0.0806%" height="15" fill="rgb(252,178,7)" fg:x="857" fg:w="1"/><text x="69.3072%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.0572%" y="565" width="0.0806%" height="15" fill="rgb(251,91,4)" fg:x="857" fg:w="1"/><text x="69.3072%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.1378%" y="565" width="0.0806%" height="15" fill="rgb(233,122,19)" fg:x="858" fg:w="1"/><text x="69.3878%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.1378%" y="549" width="0.0806%" height="15" fill="rgb(231,208,46)" fg:x="858" fg:w="1"/><text x="69.3878%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="69.0572%" y="597" width="0.2417%" height="15" fill="rgb(243,15,41)" fg:x="857" fg:w="3"/><text x="69.3072%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="69.1378%" y="581" width="0.1612%" height="15" fill="rgb(210,32,43)" fg:x="858" fg:w="2"/><text x="69.3878%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.2184%" y="565" width="0.0806%" height="15" fill="rgb(222,177,15)" fg:x="859" fg:w="1"/><text x="69.4684%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.2990%" y="597" width="0.0806%" height="15" fill="rgb(244,121,34)" fg:x="860" fg:w="1"/><text x="69.5490%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::from_value (1 samples, 0.08%)</title><rect x="69.3795%" y="597" width="0.0806%" height="15" fill="rgb(234,138,4)" fg:x="861" fg:w="1"/><text x="69.6295%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.3795%" y="581" width="0.0806%" height="15" fill="rgb(240,97,48)" fg:x="861" fg:w="1"/><text x="69.6295%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.3795%" y="565" width="0.0806%" height="15" fill="rgb(237,65,54)" fg:x="861" fg:w="1"/><text x="69.6295%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="69.3795%" y="549" width="0.0806%" height="15" fill="rgb(214,25,24)" fg:x="861" fg:w="1"/><text x="69.6295%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.3795%" y="533" width="0.0806%" height="15" fill="rgb(213,5,3)" fg:x="861" fg:w="1"/><text x="69.6295%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.3795%" y="517" width="0.0806%" height="15" fill="rgb(219,81,29)" fg:x="861" fg:w="1"/><text x="69.6295%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.3795%" y="501" width="0.0806%" height="15" fill="rgb(220,43,48)" fg:x="861" fg:w="1"/><text x="69.6295%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.3795%" y="485" width="0.0806%" height="15" fill="rgb(239,157,2)" fg:x="861" fg:w="1"/><text x="69.6295%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.3795%" y="469" width="0.0806%" height="15" fill="rgb(213,104,43)" fg:x="861" fg:w="1"/><text x="69.6295%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="69.4601%" y="469" width="0.2417%" height="15" fill="rgb(237,84,9)" fg:x="862" fg:w="3"/><text x="69.7101%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.4601%" y="453" width="0.2417%" height="15" fill="rgb(252,6,33)" fg:x="862" fg:w="3"/><text x="69.7101%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.5407%" y="437" width="0.1612%" height="15" fill="rgb(251,172,22)" fg:x="863" fg:w="2"/><text x="69.7907%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.5407%" y="421" width="0.1612%" height="15" fill="rgb(244,91,53)" fg:x="863" fg:w="2"/><text x="69.7907%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.6213%" y="405" width="0.0806%" height="15" fill="rgb(219,29,30)" fg:x="864" fg:w="1"/><text x="69.8713%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.13%)</title><rect x="68.6543%" y="613" width="1.1281%" height="15" fill="rgb(213,3,15)" fg:x="852" fg:w="14"/><text x="68.9043%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="69.4601%" y="597" width="0.3223%" height="15" fill="rgb(208,25,28)" fg:x="862" fg:w="4"/><text x="69.7101%" y="607.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="69.4601%" y="581" width="0.3223%" height="15" fill="rgb(252,144,25)" fg:x="862" fg:w="4"/><text x="69.7101%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="69.4601%" y="565" width="0.3223%" height="15" fill="rgb(226,220,25)" fg:x="862" fg:w="4"/><text x="69.7101%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="69.4601%" y="549" width="0.3223%" height="15" fill="rgb(212,131,28)" fg:x="862" fg:w="4"/><text x="69.7101%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="69.4601%" y="533" width="0.3223%" height="15" fill="rgb(219,143,52)" fg:x="862" fg:w="4"/><text x="69.7101%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="69.4601%" y="517" width="0.3223%" height="15" fill="rgb(215,56,7)" fg:x="862" fg:w="4"/><text x="69.7101%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="69.4601%" y="501" width="0.3223%" height="15" fill="rgb(239,59,51)" fg:x="862" fg:w="4"/><text x="69.7101%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="69.4601%" y="485" width="0.3223%" height="15" fill="rgb(209,215,4)" fg:x="862" fg:w="4"/><text x="69.7101%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.7019%" y="469" width="0.0806%" height="15" fill="rgb(221,118,39)" fg:x="865" fg:w="1"/><text x="69.9519%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7019%" y="453" width="0.0806%" height="15" fill="rgb(236,6,44)" fg:x="865" fg:w="1"/><text x="69.9519%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (16 samples, 1.29%)</title><rect x="68.5737%" y="629" width="1.2893%" height="15" fill="rgb(216,122,9)" fg:x="851" fg:w="16"/><text x="68.8237%" y="639.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="69.7824%" y="613" width="0.0806%" height="15" fill="rgb(244,134,42)" fg:x="866" fg:w="1"/><text x="70.0324%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.7824%" y="597" width="0.0806%" height="15" fill="rgb(209,189,35)" fg:x="866" fg:w="1"/><text x="70.0324%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="69.8630%" y="613" width="0.0806%" height="15" fill="rgb(250,47,36)" fg:x="867" fg:w="1"/><text x="70.1130%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.8630%" y="597" width="0.0806%" height="15" fill="rgb(252,112,4)" fg:x="867" fg:w="1"/><text x="70.1130%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.8630%" y="581" width="0.0806%" height="15" fill="rgb(221,79,51)" fg:x="867" fg:w="1"/><text x="70.1130%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.8630%" y="565" width="0.0806%" height="15" fill="rgb(232,65,53)" fg:x="867" fg:w="1"/><text x="70.1130%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.8630%" y="549" width="0.0806%" height="15" fill="rgb(211,37,7)" fg:x="867" fg:w="1"/><text x="70.1130%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="69.9436%" y="613" width="0.0806%" height="15" fill="rgb(234,221,18)" fg:x="868" fg:w="1"/><text x="70.1936%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.9436%" y="597" width="0.0806%" height="15" fill="rgb(220,158,26)" fg:x="868" fg:w="1"/><text x="70.1936%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.9436%" y="581" width="0.0806%" height="15" fill="rgb(220,70,6)" fg:x="868" fg:w="1"/><text x="70.1936%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="69.9436%" y="565" width="0.0806%" height="15" fill="rgb(250,39,48)" fg:x="868" fg:w="1"/><text x="70.1936%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.9436%" y="549" width="0.0806%" height="15" fill="rgb(206,40,27)" fg:x="868" fg:w="1"/><text x="70.1936%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.9436%" y="533" width="0.0806%" height="15" fill="rgb(247,80,36)" fg:x="868" fg:w="1"/><text x="70.1936%" y="543.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (287 samples, 23.13%)</title><rect x="46.9782%" y="677" width="23.1265%" height="15" fill="rgb(222,9,20)" fg:x="583" fg:w="287"/><text x="47.2282%" y="687.50">engine::session::Session::evaluate_an..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (287 samples, 23.13%)</title><rect x="46.9782%" y="661" width="23.1265%" height="15" fill="rgb(217,26,45)" fg:x="583" fg:w="287"/><text x="47.2282%" y="671.50">engine::session::Session::evaluate_an..</text></g><g><title>kernel::model::entry::EntryResolver::world (20 samples, 1.61%)</title><rect x="68.4932%" y="645" width="1.6116%" height="15" fill="rgb(221,67,14)" fg:x="850" fg:w="20"/><text x="68.7432%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="69.8630%" y="629" width="0.2417%" height="15" fill="rgb(248,100,24)" fg:x="867" fg:w="3"/><text x="70.1130%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="70.0242%" y="613" width="0.0806%" height="15" fill="rgb(230,187,16)" fg:x="869" fg:w="1"/><text x="70.2742%" y="623.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="70.0242%" y="597" width="0.0806%" height="15" fill="rgb(205,108,13)" fg:x="869" fg:w="1"/><text x="70.2742%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="70.0242%" y="581" width="0.0806%" height="15" fill="rgb(235,71,51)" fg:x="869" fg:w="1"/><text x="70.2742%" y="591.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="70.0242%" y="565" width="0.0806%" height="15" fill="rgb(251,172,48)" fg:x="869" fg:w="1"/><text x="70.2742%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="70.0242%" y="549" width="0.0806%" height="15" fill="rgb(240,96,49)" fg:x="869" fg:w="1"/><text x="70.2742%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="70.0242%" y="533" width="0.0806%" height="15" fill="rgb(235,46,36)" fg:x="869" fg:w="1"/><text x="70.2742%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="70.0242%" y="517" width="0.0806%" height="15" fill="rgb(244,3,49)" fg:x="869" fg:w="1"/><text x="70.2742%" y="527.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="70.0242%" y="501" width="0.0806%" height="15" fill="rgb(206,78,54)" fg:x="869" fg:w="1"/><text x="70.2742%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (872 samples, 70.27%)</title><rect x="0.0000%" y="725" width="70.2659%" height="15" fill="rgb(208,85,42)" fg:x="0" fg:w="872"/><text x="0.2500%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (872 samples, 70.27%)</title><rect x="0.0000%" y="709" width="70.2659%" height="15" fill="rgb(219,196,21)" fg:x="0" fg:w="872"/><text x="0.2500%" y="719.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (872 samples, 70.27%)</title><rect x="0.0000%" y="693" width="70.2659%" height="15" fill="rgb(238,19,9)" fg:x="0" fg:w="872"/><text x="0.2500%" y="703.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="70.1048%" y="677" width="0.1612%" height="15" fill="rgb(206,86,13)" fg:x="870" fg:w="2"/><text x="70.3548%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="70.1048%" y="661" width="0.1612%" height="15" fill="rgb(214,123,40)" fg:x="870" fg:w="2"/><text x="70.3548%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="70.1048%" y="645" width="0.1612%" height="15" fill="rgb(243,53,5)" fg:x="870" fg:w="2"/><text x="70.3548%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="70.1853%" y="629" width="0.0806%" height="15" fill="rgb(254,186,31)" fg:x="871" fg:w="1"/><text x="70.4353%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.2659%" y="677" width="0.0806%" height="15" fill="rgb(221,216,25)" fg:x="872" fg:w="1"/><text x="70.5159%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.2659%" y="661" width="0.0806%" height="15" fill="rgb(248,107,42)" fg:x="872" fg:w="1"/><text x="70.5159%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.2659%" y="645" width="0.0806%" height="15" fill="rgb(221,85,43)" fg:x="872" fg:w="1"/><text x="70.5159%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="70.4271%" y="661" width="0.0806%" height="15" fill="rgb(225,34,24)" fg:x="874" fg:w="1"/><text x="70.6771%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.4271%" y="645" width="0.0806%" height="15" fill="rgb(211,119,1)" fg:x="874" fg:w="1"/><text x="70.6771%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="70.5077%" y="581" width="0.1612%" height="15" fill="rgb(254,216,46)" fg:x="875" fg:w="2"/><text x="70.7577%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.6688%" y="581" width="0.0806%" height="15" fill="rgb(238,11,38)" fg:x="877" fg:w="1"/><text x="70.9188%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6688%" y="565" width="0.0806%" height="15" fill="rgb(233,50,15)" fg:x="877" fg:w="1"/><text x="70.9188%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8300%" y="565" width="0.0806%" height="15" fill="rgb(217,181,29)" fg:x="879" fg:w="1"/><text x="71.0800%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.9106%" y="565" width="0.0806%" height="15" fill="rgb(214,56,3)" fg:x="880" fg:w="1"/><text x="71.1606%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.0717%" y="533" width="0.0806%" height="15" fill="rgb(230,69,45)" fg:x="882" fg:w="1"/><text x="71.3217%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.1523%" y="533" width="0.0806%" height="15" fill="rgb(224,201,50)" fg:x="883" fg:w="1"/><text x="71.4023%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.97%)</title><rect x="70.5077%" y="597" width="0.9670%" height="15" fill="rgb(217,228,18)" fg:x="875" fg:w="12"/><text x="70.7577%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="70.7494%" y="581" width="0.7252%" height="15" fill="rgb(239,33,44)" fg:x="878" fg:w="9"/><text x="70.9994%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="70.9911%" y="565" width="0.4835%" height="15" fill="rgb(248,210,23)" fg:x="881" fg:w="6"/><text x="71.2411%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="71.0717%" y="549" width="0.4029%" height="15" fill="rgb(253,135,8)" fg:x="882" fg:w="5"/><text x="71.3217%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="71.2329%" y="533" width="0.2417%" height="15" fill="rgb(217,98,21)" fg:x="884" fg:w="3"/><text x="71.4829%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="71.2329%" y="517" width="0.2417%" height="15" fill="rgb(253,130,21)" fg:x="884" fg:w="3"/><text x="71.4829%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="71.5552%" y="565" width="0.4029%" height="15" fill="rgb(207,81,54)" fg:x="888" fg:w="5"/><text x="71.8052%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="71.7164%" y="549" width="0.2417%" height="15" fill="rgb(232,48,33)" fg:x="890" fg:w="3"/><text x="71.9664%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="71.9581%" y="549" width="0.1612%" height="15" fill="rgb(211,9,35)" fg:x="893" fg:w="2"/><text x="72.2081%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="71.9581%" y="533" width="0.1612%" height="15" fill="rgb(205,152,21)" fg:x="893" fg:w="2"/><text x="72.2081%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="71.9581%" y="517" width="0.1612%" height="15" fill="rgb(249,21,27)" fg:x="893" fg:w="2"/><text x="72.2081%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.1193%" y="549" width="0.0806%" height="15" fill="rgb(252,29,24)" fg:x="895" fg:w="1"/><text x="72.3693%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.2804%" y="533" width="0.0806%" height="15" fill="rgb(230,130,50)" fg:x="897" fg:w="1"/><text x="72.5304%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.10%)</title><rect x="70.3465%" y="677" width="2.0951%" height="15" fill="rgb(239,144,14)" fg:x="873" fg:w="26"/><text x="70.5965%" y="687.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (24 samples, 1.93%)</title><rect x="70.5077%" y="661" width="1.9339%" height="15" fill="rgb(227,111,50)" fg:x="875" fg:w="24"/><text x="70.7577%" y="671.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.93%)</title><rect x="70.5077%" y="645" width="1.9339%" height="15" fill="rgb(254,84,20)" fg:x="875" fg:w="24"/><text x="70.7577%" y="655.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (24 samples, 1.93%)</title><rect x="70.5077%" y="629" width="1.9339%" height="15" fill="rgb(232,90,48)" fg:x="875" fg:w="24"/><text x="70.7577%" y="639.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.93%)</title><rect x="70.5077%" y="613" width="1.9339%" height="15" fill="rgb(253,63,47)" fg:x="875" fg:w="24"/><text x="70.7577%" y="623.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.97%)</title><rect x="71.4746%" y="597" width="0.9670%" height="15" fill="rgb(251,146,35)" fg:x="887" fg:w="12"/><text x="71.7246%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="71.5552%" y="581" width="0.8864%" height="15" fill="rgb(229,192,35)" fg:x="888" fg:w="11"/><text x="71.8052%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="71.9581%" y="565" width="0.4835%" height="15" fill="rgb(225,68,9)" fg:x="893" fg:w="6"/><text x="72.2081%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="72.1998%" y="549" width="0.2417%" height="15" fill="rgb(214,97,34)" fg:x="896" fg:w="3"/><text x="72.4498%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.3610%" y="533" width="0.0806%" height="15" fill="rgb(253,31,26)" fg:x="898" fg:w="1"/><text x="72.6110%" y="543.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="72.5222%" y="565" width="0.0806%" height="15" fill="rgb(225,151,47)" fg:x="900" fg:w="1"/><text x="72.7722%" y="575.50"></text></g><g><title>dlopen (2 samples, 0.16%)</title><rect x="72.6027%" y="565" width="0.1612%" height="15" fill="rgb(206,185,9)" fg:x="901" fg:w="2"/><text x="72.8527%" y="575.50"></text></g><g><title>_dl_catch_error (2 samples, 0.16%)</title><rect x="72.6027%" y="549" width="0.1612%" height="15" fill="rgb(249,65,17)" fg:x="901" fg:w="2"/><text x="72.8527%" y="559.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="72.6027%" y="533" width="0.1612%" height="15" fill="rgb(220,110,10)" fg:x="901" fg:w="2"/><text x="72.8527%" y="543.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="72.6027%" y="517" width="0.1612%" height="15" fill="rgb(222,198,49)" fg:x="901" fg:w="2"/><text x="72.8527%" y="527.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="72.6027%" y="501" width="0.1612%" height="15" fill="rgb(239,81,13)" fg:x="901" fg:w="2"/><text x="72.8527%" y="511.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (5 samples, 0.40%)</title><rect x="72.4416%" y="613" width="0.4029%" height="15" fill="rgb(216,128,11)" fg:x="899" fg:w="5"/><text x="72.6916%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (4 samples, 0.32%)</title><rect x="72.5222%" y="597" width="0.3223%" height="15" fill="rgb(247,156,8)" fg:x="900" fg:w="4"/><text x="72.7722%" y="607.50"></text></g><g><title>libloading::safe::Library::new (4 samples, 0.32%)</title><rect x="72.5222%" y="581" width="0.3223%" height="15" fill="rgb(219,173,1)" fg:x="900" fg:w="4"/><text x="72.7722%" y="591.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="72.7639%" y="565" width="0.0806%" height="15" fill="rgb(227,42,24)" fg:x="903" fg:w="1"/><text x="73.0139%" y="575.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="72.7639%" y="549" width="0.0806%" height="15" fill="rgb(253,219,50)" fg:x="903" fg:w="1"/><text x="73.0139%" y="559.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="72.7639%" y="533" width="0.0806%" height="15" fill="rgb(215,191,54)" fg:x="903" fg:w="1"/><text x="73.0139%" y="543.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.08%)</title><rect x="72.7639%" y="517" width="0.0806%" height="15" fill="rgb(238,83,12)" fg:x="903" fg:w="1"/><text x="73.0139%" y="527.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (7 samples, 0.56%)</title><rect x="72.4416%" y="677" width="0.5641%" height="15" fill="rgb(205,124,9)" fg:x="899" fg:w="7"/><text x="72.6916%" y="687.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (7 samples, 0.56%)</title><rect x="72.4416%" y="661" width="0.5641%" height="15" fill="rgb(253,174,7)" fg:x="899" fg:w="7"/><text x="72.6916%" y="671.50"></text></g><g><title>engine::session::Session::new (7 samples, 0.56%)</title><rect x="72.4416%" y="645" width="0.5641%" height="15" fill="rgb(206,134,49)" fg:x="899" fg:w="7"/><text x="72.6916%" y="655.50"></text></g><g><title>engine::session::Session::initialize (7 samples, 0.56%)</title><rect x="72.4416%" y="629" width="0.5641%" height="15" fill="rgb(221,89,20)" fg:x="899" fg:w="7"/><text x="72.6916%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="72.8445%" y="613" width="0.1612%" height="15" fill="rgb(240,205,13)" fg:x="904" fg:w="2"/><text x="73.0945%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="72.9251%" y="597" width="0.0806%" height="15" fill="rgb(237,174,32)" fg:x="905" fg:w="1"/><text x="73.1751%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="72.9251%" y="581" width="0.0806%" height="15" fill="rgb(226,12,15)" fg:x="905" fg:w="1"/><text x="73.1751%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.9251%" y="565" width="0.0806%" height="15" fill="rgb(245,160,52)" fg:x="905" fg:w="1"/><text x="73.1751%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.9251%" y="549" width="0.0806%" height="15" fill="rgb(253,80,21)" fg:x="905" fg:w="1"/><text x="73.1751%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.9251%" y="533" width="0.0806%" height="15" fill="rgb(231,225,22)" fg:x="905" fg:w="1"/><text x="73.1751%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="73.0056%" y="613" width="0.0806%" height="15" fill="rgb(253,185,12)" fg:x="906" fg:w="1"/><text x="73.2556%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="73.0056%" y="597" width="0.0806%" height="15" fill="rgb(234,197,21)" fg:x="906" fg:w="1"/><text x="73.2556%" y="607.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="73.0056%" y="581" width="0.0806%" height="15" fill="rgb(210,47,30)" fg:x="906" fg:w="1"/><text x="73.2556%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.0056%" y="565" width="0.0806%" height="15" fill="rgb(246,139,27)" fg:x="906" fg:w="1"/><text x="73.2556%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="73.0862%" y="517" width="0.1612%" height="15" fill="rgb(226,130,16)" fg:x="907" fg:w="2"/><text x="73.3362%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.0862%" y="501" width="0.1612%" height="15" fill="rgb(237,208,20)" fg:x="907" fg:w="2"/><text x="73.3362%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="73.0862%" y="485" width="0.1612%" height="15" fill="rgb(245,186,28)" fg:x="907" fg:w="2"/><text x="73.3362%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="73.1668%" y="469" width="0.0806%" height="15" fill="rgb(238,105,39)" fg:x="908" fg:w="1"/><text x="73.4168%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="73.0862%" y="533" width="0.2417%" height="15" fill="rgb(253,228,11)" fg:x="907" fg:w="3"/><text x="73.3362%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.2474%" y="517" width="0.0806%" height="15" fill="rgb(224,136,38)" fg:x="909" fg:w="1"/><text x="73.4974%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.2474%" y="501" width="0.0806%" height="15" fill="rgb(211,3,25)" fg:x="909" fg:w="1"/><text x="73.4974%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.2474%" y="485" width="0.0806%" height="15" fill="rgb(238,66,34)" fg:x="909" fg:w="1"/><text x="73.4974%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.2474%" y="469" width="0.0806%" height="15" fill="rgb(223,188,11)" fg:x="909" fg:w="1"/><text x="73.4974%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.2474%" y="453" width="0.0806%" height="15" fill="rgb(221,10,35)" fg:x="909" fg:w="1"/><text x="73.4974%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.2474%" y="437" width="0.0806%" height="15" fill="rgb(223,18,44)" fg:x="909" fg:w="1"/><text x="73.4974%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.2474%" y="421" width="0.0806%" height="15" fill="rgb(220,97,41)" fg:x="909" fg:w="1"/><text x="73.4974%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.2474%" y="405" width="0.0806%" height="15" fill="rgb(206,95,45)" fg:x="909" fg:w="1"/><text x="73.4974%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.2474%" y="389" width="0.0806%" height="15" fill="rgb(209,96,13)" fg:x="909" fg:w="1"/><text x="73.4974%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.3280%" y="437" width="0.0806%" height="15" fill="rgb(237,39,34)" fg:x="910" fg:w="1"/><text x="73.5780%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.3280%" y="421" width="0.0806%" height="15" fill="rgb(213,49,47)" fg:x="910" fg:w="1"/><text x="73.5780%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.3280%" y="405" width="0.0806%" height="15" fill="rgb(205,107,27)" fg:x="910" fg:w="1"/><text x="73.5780%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="73.0862%" y="565" width="0.4029%" height="15" fill="rgb(212,142,9)" fg:x="907" fg:w="5"/><text x="73.3362%" y="575.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (5 samples, 0.40%)</title><rect x="73.0862%" y="549" width="0.4029%" height="15" fill="rgb(226,182,0)" fg:x="907" fg:w="5"/><text x="73.3362%" y="559.50"></text></g><g><title>kernel::model::any_entity_changes (2 samples, 0.16%)</title><rect x="73.3280%" y="533" width="0.1612%" height="15" fill="rgb(231,3,53)" fg:x="910" fg:w="2"/><text x="73.5780%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="73.3280%" y="517" width="0.1612%" height="15" fill="rgb(246,111,28)" fg:x="910" fg:w="2"/><text x="73.5780%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.3280%" y="501" width="0.1612%" height="15" fill="rgb(254,183,7)" fg:x="910" fg:w="2"/><text x="73.5780%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="73.3280%" y="485" width="0.1612%" height="15" fill="rgb(247,177,28)" fg:x="910" fg:w="2"/><text x="73.5780%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.3280%" y="469" width="0.1612%" height="15" fill="rgb(244,43,1)" fg:x="910" fg:w="2"/><text x="73.5780%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="73.3280%" y="453" width="0.1612%" height="15" fill="rgb(207,2,35)" fg:x="910" fg:w="2"/><text x="73.5780%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.4085%" y="437" width="0.0806%" height="15" fill="rgb(213,83,22)" fg:x="911" fg:w="1"/><text x="73.6585%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="73.4085%" y="421" width="0.0806%" height="15" fill="rgb(246,212,13)" fg:x="911" fg:w="1"/><text x="73.6585%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.4085%" y="405" width="0.0806%" height="15" fill="rgb(213,127,46)" fg:x="911" fg:w="1"/><text x="73.6585%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="73.4085%" y="389" width="0.0806%" height="15" fill="rgb(219,215,39)" fg:x="911" fg:w="1"/><text x="73.6585%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.4085%" y="373" width="0.0806%" height="15" fill="rgb(227,99,17)" fg:x="911" fg:w="1"/><text x="73.6585%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.4085%" y="357" width="0.0806%" height="15" fill="rgb(208,155,18)" fg:x="911" fg:w="1"/><text x="73.6585%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.4085%" y="341" width="0.0806%" height="15" fill="rgb(223,204,38)" fg:x="911" fg:w="1"/><text x="73.6585%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="73.4891%" y="533" width="0.0806%" height="15" fill="rgb(212,114,21)" fg:x="912" fg:w="1"/><text x="73.7391%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="73.5697%" y="533" width="0.0806%" height="15" fill="rgb(250,74,13)" fg:x="913" fg:w="1"/><text x="73.8197%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.5697%" y="517" width="0.0806%" height="15" fill="rgb(234,7,1)" fg:x="913" fg:w="1"/><text x="73.8197%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.5697%" y="501" width="0.0806%" height="15" fill="rgb(207,138,31)" fg:x="913" fg:w="1"/><text x="73.8197%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.5697%" y="485" width="0.0806%" height="15" fill="rgb(215,186,42)" fg:x="913" fg:w="1"/><text x="73.8197%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.6503%" y="501" width="0.0806%" height="15" fill="rgb(229,205,49)" fg:x="914" fg:w="1"/><text x="73.9003%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.6503%" y="485" width="0.0806%" height="15" fill="rgb(216,156,32)" fg:x="914" fg:w="1"/><text x="73.9003%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.6503%" y="469" width="0.0806%" height="15" fill="rgb(238,7,21)" fg:x="914" fg:w="1"/><text x="73.9003%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.6503%" y="453" width="0.0806%" height="15" fill="rgb(249,190,22)" fg:x="914" fg:w="1"/><text x="73.9003%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.7309%" y="485" width="0.1612%" height="15" fill="rgb(253,51,31)" fg:x="915" fg:w="2"/><text x="73.9809%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.7309%" y="469" width="0.1612%" height="15" fill="rgb(237,90,54)" fg:x="915" fg:w="2"/><text x="73.9809%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.8114%" y="453" width="0.0806%" height="15" fill="rgb(250,214,33)" fg:x="916" fg:w="1"/><text x="74.0614%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="73.6503%" y="517" width="0.4029%" height="15" fill="rgb(237,10,49)" fg:x="914" fg:w="5"/><text x="73.9003%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="73.7309%" y="501" width="0.3223%" height="15" fill="rgb(241,56,36)" fg:x="915" fg:w="4"/><text x="73.9809%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.8920%" y="485" width="0.1612%" height="15" fill="rgb(227,164,12)" fg:x="917" fg:w="2"/><text x="74.1420%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.8920%" y="469" width="0.1612%" height="15" fill="rgb(249,149,35)" fg:x="917" fg:w="2"/><text x="74.1420%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.9726%" y="453" width="0.0806%" height="15" fill="rgb(238,227,50)" fg:x="918" fg:w="1"/><text x="74.2226%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.81%)</title><rect x="73.4891%" y="549" width="0.8058%" height="15" fill="rgb(235,102,45)" fg:x="912" fg:w="10"/><text x="73.7391%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="73.6503%" y="533" width="0.6446%" height="15" fill="rgb(211,10,38)" fg:x="914" fg:w="8"/><text x="73.9003%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="74.0532%" y="517" width="0.2417%" height="15" fill="rgb(219,77,48)" fg:x="919" fg:w="3"/><text x="74.3032%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="74.0532%" y="501" width="0.2417%" height="15" fill="rgb(246,6,15)" fg:x="919" fg:w="3"/><text x="74.3032%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="74.1338%" y="485" width="0.1612%" height="15" fill="rgb(207,220,2)" fg:x="920" fg:w="2"/><text x="74.3838%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.2949%" y="517" width="0.0806%" height="15" fill="rgb(242,48,14)" fg:x="922" fg:w="1"/><text x="74.5449%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.2949%" y="501" width="0.0806%" height="15" fill="rgb(218,19,27)" fg:x="922" fg:w="1"/><text x="74.5449%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.3755%" y="485" width="0.0806%" height="15" fill="rgb(228,0,35)" fg:x="923" fg:w="1"/><text x="74.6255%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.3755%" y="469" width="0.0806%" height="15" fill="rgb(244,142,54)" fg:x="923" fg:w="1"/><text x="74.6255%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="74.5367%" y="469" width="0.0806%" height="15" fill="rgb(243,217,40)" fg:x="925" fg:w="1"/><text x="74.7867%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.5367%" y="453" width="0.0806%" height="15" fill="rgb(207,114,16)" fg:x="925" fg:w="1"/><text x="74.7867%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.5367%" y="437" width="0.0806%" height="15" fill="rgb(224,33,25)" fg:x="925" fg:w="1"/><text x="74.7867%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="74.2949%" y="549" width="0.4029%" height="15" fill="rgb(230,93,54)" fg:x="922" fg:w="5"/><text x="74.5449%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="74.2949%" y="533" width="0.4029%" height="15" fill="rgb(224,56,24)" fg:x="922" fg:w="5"/><text x="74.5449%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="74.3755%" y="517" width="0.3223%" height="15" fill="rgb(235,189,50)" fg:x="923" fg:w="4"/><text x="74.6255%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="74.3755%" y="501" width="0.3223%" height="15" fill="rgb(242,173,8)" fg:x="923" fg:w="4"/><text x="74.6255%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.4561%" y="485" width="0.2417%" height="15" fill="rgb(209,206,10)" fg:x="924" fg:w="3"/><text x="74.7061%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.6172%" y="469" width="0.0806%" height="15" fill="rgb(213,182,44)" fg:x="926" fg:w="1"/><text x="74.8672%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.6172%" y="453" width="0.0806%" height="15" fill="rgb(243,51,15)" fg:x="926" fg:w="1"/><text x="74.8672%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.6978%" y="501" width="0.0806%" height="15" fill="rgb(241,13,14)" fg:x="927" fg:w="1"/><text x="74.9478%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.6978%" y="485" width="0.0806%" height="15" fill="rgb(239,147,24)" fg:x="927" fg:w="1"/><text x="74.9478%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="74.6978%" y="469" width="0.0806%" height="15" fill="rgb(223,129,16)" fg:x="927" fg:w="1"/><text x="74.9478%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7784%" y="485" width="0.0806%" height="15" fill="rgb(209,169,13)" fg:x="928" fg:w="1"/><text x="75.0284%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7784%" y="469" width="0.0806%" height="15" fill="rgb(235,159,41)" fg:x="928" fg:w="1"/><text x="75.0284%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="74.7784%" y="453" width="0.0806%" height="15" fill="rgb(223,219,48)" fg:x="928" fg:w="1"/><text x="75.0284%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.9396%" y="453" width="0.0806%" height="15" fill="rgb(236,80,13)" fg:x="930" fg:w="1"/><text x="75.1896%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.9396%" y="437" width="0.0806%" height="15" fill="rgb(213,5,6)" fg:x="930" fg:w="1"/><text x="75.1896%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="74.9396%" y="421" width="0.0806%" height="15" fill="rgb(205,59,21)" fg:x="930" fg:w="1"/><text x="75.1896%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="75.0201%" y="453" width="0.1612%" height="15" fill="rgb(247,137,35)" fg:x="931" fg:w="2"/><text x="75.2701%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.0201%" y="437" width="0.1612%" height="15" fill="rgb(242,208,28)" fg:x="931" fg:w="2"/><text x="75.2701%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.1007%" y="421" width="0.0806%" height="15" fill="rgb(245,62,25)" fg:x="932" fg:w="1"/><text x="75.3507%" y="431.50"></text></g><g><title>engine::session::Session::flush (29 samples, 2.34%)</title><rect x="73.0056%" y="661" width="2.3368%" height="15" fill="rgb(233,99,54)" fg:x="906" fg:w="29"/><text x="73.2556%" y="671.50">e..</text></g><g><title>engine::session::state::State::close (29 samples, 2.34%)</title><rect x="73.0056%" y="645" width="2.3368%" height="15" fill="rgb(213,10,37)" fg:x="906" fg:w="29"/><text x="73.2556%" y="655.50">e..</text></g><g><title>engine::session::state::State::flush_entities (29 samples, 2.34%)</title><rect x="73.0056%" y="629" width="2.3368%" height="15" fill="rgb(235,143,30)" fg:x="906" fg:w="29"/><text x="73.2556%" y="639.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (28 samples, 2.26%)</title><rect x="73.0862%" y="613" width="2.2562%" height="15" fill="rgb(250,146,33)" fg:x="907" fg:w="28"/><text x="73.3362%" y="623.50">e..</text></g><g><title>core::iter::adapters::try_process (28 samples, 2.26%)</title><rect x="73.0862%" y="597" width="2.2562%" height="15" fill="rgb(226,198,42)" fg:x="907" fg:w="28"/><text x="73.3362%" y="607.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 2.26%)</title><rect x="73.0862%" y="581" width="2.2562%" height="15" fill="rgb(222,55,6)" fg:x="907" fg:w="28"/><text x="73.3362%" y="591.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (23 samples, 1.85%)</title><rect x="73.4891%" y="565" width="1.8533%" height="15" fill="rgb(213,224,31)" fg:x="912" fg:w="23"/><text x="73.7391%" y="575.50">e..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.64%)</title><rect x="74.6978%" y="549" width="0.6446%" height="15" fill="rgb(226,103,35)" fg:x="927" fg:w="8"/><text x="74.9478%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="74.6978%" y="533" width="0.6446%" height="15" fill="rgb(205,66,45)" fg:x="927" fg:w="8"/><text x="74.9478%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="74.6978%" y="517" width="0.6446%" height="15" fill="rgb(226,51,42)" fg:x="927" fg:w="8"/><text x="74.9478%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="74.7784%" y="501" width="0.5641%" height="15" fill="rgb(206,69,1)" fg:x="928" fg:w="7"/><text x="75.0284%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="74.8590%" y="485" width="0.4835%" height="15" fill="rgb(213,228,47)" fg:x="929" fg:w="6"/><text x="75.1090%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="74.9396%" y="469" width="0.4029%" height="15" fill="rgb(224,204,18)" fg:x="930" fg:w="5"/><text x="75.1896%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.1813%" y="453" width="0.1612%" height="15" fill="rgb(253,187,47)" fg:x="933" fg:w="2"/><text x="75.4313%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.2619%" y="437" width="0.0806%" height="15" fill="rgb(232,61,2)" fg:x="934" fg:w="1"/><text x="75.5119%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.2619%" y="421" width="0.0806%" height="15" fill="rgb(213,132,35)" fg:x="934" fg:w="1"/><text x="75.5119%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.2619%" y="405" width="0.0806%" height="15" fill="rgb(247,33,21)" fg:x="934" fg:w="1"/><text x="75.5119%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="75.3425%" y="613" width="0.0806%" height="15" fill="rgb(233,71,46)" fg:x="935" fg:w="1"/><text x="75.5925%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.3425%" y="597" width="0.0806%" height="15" fill="rgb(222,173,43)" fg:x="935" fg:w="1"/><text x="75.5925%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.3425%" y="581" width="0.0806%" height="15" fill="rgb(249,218,47)" fg:x="935" fg:w="1"/><text x="75.5925%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.3425%" y="565" width="0.0806%" height="15" fill="rgb(254,185,48)" fg:x="935" fg:w="1"/><text x="75.5925%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="75.4230%" y="597" width="0.0806%" height="15" fill="rgb(252,165,50)" fg:x="936" fg:w="1"/><text x="75.6730%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="75.4230%" y="581" width="0.0806%" height="15" fill="rgb(206,219,6)" fg:x="936" fg:w="1"/><text x="75.6730%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="75.4230%" y="565" width="0.0806%" height="15" fill="rgb(212,212,45)" fg:x="936" fg:w="1"/><text x="75.6730%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.4230%" y="549" width="0.0806%" height="15" fill="rgb(221,31,9)" fg:x="936" fg:w="1"/><text x="75.6730%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="75.4230%" y="533" width="0.0806%" height="15" fill="rgb(234,198,39)" fg:x="936" fg:w="1"/><text x="75.6730%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.4230%" y="517" width="0.0806%" height="15" fill="rgb(252,145,46)" fg:x="936" fg:w="1"/><text x="75.6730%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="75.4230%" y="501" width="0.0806%" height="15" fill="rgb(237,149,0)" fg:x="936" fg:w="1"/><text x="75.6730%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="75.4230%" y="485" width="0.0806%" height="15" fill="rgb(229,65,5)" fg:x="936" fg:w="1"/><text x="75.6730%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.4230%" y="469" width="0.0806%" height="15" fill="rgb(235,60,36)" fg:x="936" fg:w="1"/><text x="75.6730%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4230%" y="453" width="0.0806%" height="15" fill="rgb(222,47,18)" fg:x="936" fg:w="1"/><text x="75.6730%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4230%" y="437" width="0.0806%" height="15" fill="rgb(235,114,22)" fg:x="936" fg:w="1"/><text x="75.6730%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="75.4230%" y="613" width="0.1612%" height="15" fill="rgb(209,167,11)" fg:x="936" fg:w="2"/><text x="75.6730%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="75.5036%" y="597" width="0.0806%" height="15" fill="rgb(251,73,18)" fg:x="937" fg:w="1"/><text x="75.7536%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.5036%" y="581" width="0.0806%" height="15" fill="rgb(217,60,17)" fg:x="937" fg:w="1"/><text x="75.7536%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="75.5036%" y="565" width="0.0806%" height="15" fill="rgb(224,36,37)" fg:x="937" fg:w="1"/><text x="75.7536%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="75.5036%" y="549" width="0.0806%" height="15" fill="rgb(211,21,32)" fg:x="937" fg:w="1"/><text x="75.7536%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="75.5036%" y="533" width="0.0806%" height="15" fill="rgb(231,55,48)" fg:x="937" fg:w="1"/><text x="75.7536%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.5036%" y="517" width="0.0806%" height="15" fill="rgb(227,42,18)" fg:x="937" fg:w="1"/><text x="75.7536%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="75.5036%" y="501" width="0.0806%" height="15" fill="rgb(217,2,27)" fg:x="937" fg:w="1"/><text x="75.7536%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.5036%" y="485" width="0.0806%" height="15" fill="rgb(251,138,23)" fg:x="937" fg:w="1"/><text x="75.7536%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="75.5036%" y="469" width="0.0806%" height="15" fill="rgb(226,184,11)" fg:x="937" fg:w="1"/><text x="75.7536%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.5036%" y="453" width="0.0806%" height="15" fill="rgb(242,142,12)" fg:x="937" fg:w="1"/><text x="75.7536%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="75.3425%" y="645" width="0.3223%" height="15" fill="rgb(234,187,18)" fg:x="935" fg:w="4"/><text x="75.5925%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="75.3425%" y="629" width="0.3223%" height="15" fill="rgb(237,44,42)" fg:x="935" fg:w="4"/><text x="75.5925%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="75.5842%" y="613" width="0.0806%" height="15" fill="rgb(211,90,23)" fg:x="938" fg:w="1"/><text x="75.8342%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="75.5842%" y="597" width="0.0806%" height="15" fill="rgb(207,81,18)" fg:x="938" fg:w="1"/><text x="75.8342%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.5842%" y="581" width="0.0806%" height="15" fill="rgb(222,107,28)" fg:x="938" fg:w="1"/><text x="75.8342%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.5842%" y="565" width="0.0806%" height="15" fill="rgb(237,83,52)" fg:x="938" fg:w="1"/><text x="75.8342%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5842%" y="549" width="0.0806%" height="15" fill="rgb(208,67,11)" fg:x="938" fg:w="1"/><text x="75.8342%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="75.6648%" y="629" width="0.0806%" height="15" fill="rgb(249,157,49)" fg:x="939" fg:w="1"/><text x="75.9148%" y="639.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="75.6648%" y="613" width="0.0806%" height="15" fill="rgb(243,200,1)" fg:x="939" fg:w="1"/><text x="75.9148%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.6648%" y="597" width="0.0806%" height="15" fill="rgb(225,162,37)" fg:x="939" fg:w="1"/><text x="75.9148%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.6648%" y="581" width="0.0806%" height="15" fill="rgb(242,92,13)" fg:x="939" fg:w="1"/><text x="75.9148%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.6648%" y="565" width="0.0806%" height="15" fill="rgb(220,43,36)" fg:x="939" fg:w="1"/><text x="75.9148%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6648%" y="549" width="0.0806%" height="15" fill="rgb(213,165,48)" fg:x="939" fg:w="1"/><text x="75.9148%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="75.6648%" y="533" width="0.0806%" height="15" fill="rgb(227,200,9)" fg:x="939" fg:w="1"/><text x="75.9148%" y="543.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="75.7454%" y="629" width="0.0806%" height="15" fill="rgb(221,222,28)" fg:x="940" fg:w="1"/><text x="75.9954%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="75.7454%" y="613" width="0.0806%" height="15" fill="rgb(223,142,26)" fg:x="940" fg:w="1"/><text x="75.9954%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.7454%" y="597" width="0.0806%" height="15" fill="rgb(243,46,9)" fg:x="940" fg:w="1"/><text x="75.9954%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="75.7454%" y="581" width="0.0806%" height="15" fill="rgb(250,56,11)" fg:x="940" fg:w="1"/><text x="75.9954%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="75.3425%" y="661" width="0.5641%" height="15" fill="rgb(229,113,5)" fg:x="935" fg:w="7"/><text x="75.5925%" y="671.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="75.6648%" y="645" width="0.2417%" height="15" fill="rgb(244,108,28)" fg:x="939" fg:w="3"/><text x="75.9148%" y="655.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="75.8259%" y="629" width="0.0806%" height="15" fill="rgb(242,119,50)" fg:x="941" fg:w="1"/><text x="76.0759%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.8259%" y="613" width="0.0806%" height="15" fill="rgb(224,164,23)" fg:x="941" fg:w="1"/><text x="76.0759%" y="623.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="75.8259%" y="597" width="0.0806%" height="15" fill="rgb(214,227,44)" fg:x="941" fg:w="1"/><text x="76.0759%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.8259%" y="581" width="0.0806%" height="15" fill="rgb(238,202,4)" fg:x="941" fg:w="1"/><text x="76.0759%" y="591.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="75.8259%" y="565" width="0.0806%" height="15" fill="rgb(213,190,30)" fg:x="941" fg:w="1"/><text x="76.0759%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.8259%" y="549" width="0.0806%" height="15" fill="rgb(239,15,2)" fg:x="941" fg:w="1"/><text x="76.0759%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.8259%" y="533" width="0.0806%" height="15" fill="rgb(249,229,4)" fg:x="941" fg:w="1"/><text x="76.0759%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.8259%" y="517" width="0.0806%" height="15" fill="rgb(239,75,44)" fg:x="941" fg:w="1"/><text x="76.0759%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="75.8259%" y="501" width="0.0806%" height="15" fill="rgb(251,206,23)" fg:x="941" fg:w="1"/><text x="76.0759%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="75.9065%" y="629" width="0.0806%" height="15" fill="rgb(215,208,0)" fg:x="942" fg:w="1"/><text x="76.1565%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="75.9065%" y="613" width="0.0806%" height="15" fill="rgb(230,75,50)" fg:x="942" fg:w="1"/><text x="76.1565%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.9065%" y="597" width="0.0806%" height="15" fill="rgb(246,180,39)" fg:x="942" fg:w="1"/><text x="76.1565%" y="607.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.9065%" y="581" width="0.0806%" height="15" fill="rgb(249,175,24)" fg:x="942" fg:w="1"/><text x="76.1565%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9065%" y="565" width="0.0806%" height="15" fill="rgb(247,176,22)" fg:x="942" fg:w="1"/><text x="76.1565%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="75.9065%" y="549" width="0.0806%" height="15" fill="rgb(241,100,24)" fg:x="942" fg:w="1"/><text x="76.1565%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="75.9871%" y="629" width="0.0806%" height="15" fill="rgb(233,4,35)" fg:x="943" fg:w="1"/><text x="76.2371%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="75.9871%" y="613" width="0.0806%" height="15" fill="rgb(211,164,46)" fg:x="943" fg:w="1"/><text x="76.2371%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.9871%" y="597" width="0.0806%" height="15" fill="rgb(242,99,53)" fg:x="943" fg:w="1"/><text x="76.2371%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9871%" y="581" width="0.0806%" height="15" fill="rgb(243,45,33)" fg:x="943" fg:w="1"/><text x="76.2371%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9871%" y="565" width="0.0806%" height="15" fill="rgb(217,55,21)" fg:x="943" fg:w="1"/><text x="76.2371%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.9871%" y="549" width="0.0806%" height="15" fill="rgb(245,145,46)" fg:x="943" fg:w="1"/><text x="76.2371%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9871%" y="533" width="0.0806%" height="15" fill="rgb(215,112,45)" fg:x="943" fg:w="1"/><text x="76.2371%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9871%" y="517" width="0.0806%" height="15" fill="rgb(228,104,16)" fg:x="943" fg:w="1"/><text x="76.2371%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.9871%" y="501" width="0.0806%" height="15" fill="rgb(239,186,38)" fg:x="943" fg:w="1"/><text x="76.2371%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="75.9065%" y="645" width="0.2417%" height="15" fill="rgb(228,38,35)" fg:x="942" fg:w="3"/><text x="76.1565%" y="655.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="76.0677%" y="629" width="0.0806%" height="15" fill="rgb(251,42,40)" fg:x="944" fg:w="1"/><text x="76.3177%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="76.0677%" y="613" width="0.0806%" height="15" fill="rgb(210,51,19)" fg:x="944" fg:w="1"/><text x="76.3177%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.0677%" y="597" width="0.0806%" height="15" fill="rgb(236,94,42)" fg:x="944" fg:w="1"/><text x="76.3177%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.0677%" y="581" width="0.0806%" height="15" fill="rgb(239,167,16)" fg:x="944" fg:w="1"/><text x="76.3177%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.0677%" y="565" width="0.0806%" height="15" fill="rgb(252,175,31)" fg:x="944" fg:w="1"/><text x="76.3177%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.0677%" y="549" width="0.0806%" height="15" fill="rgb(206,166,30)" fg:x="944" fg:w="1"/><text x="76.3177%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.0677%" y="533" width="0.0806%" height="15" fill="rgb(206,209,37)" fg:x="944" fg:w="1"/><text x="76.3177%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.0677%" y="517" width="0.0806%" height="15" fill="rgb(226,91,4)" fg:x="944" fg:w="1"/><text x="76.3177%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.0677%" y="501" width="0.0806%" height="15" fill="rgb(222,167,0)" fg:x="944" fg:w="1"/><text x="76.3177%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.0677%" y="485" width="0.0806%" height="15" fill="rgb(211,70,14)" fg:x="944" fg:w="1"/><text x="76.3177%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="76.1483%" y="629" width="0.0806%" height="15" fill="rgb(214,84,42)" fg:x="945" fg:w="1"/><text x="76.3983%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.1483%" y="613" width="0.0806%" height="15" fill="rgb(235,157,37)" fg:x="945" fg:w="1"/><text x="76.3983%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2288%" y="549" width="0.0806%" height="15" fill="rgb(225,13,6)" fg:x="946" fg:w="1"/><text x="76.4788%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="75.9065%" y="661" width="0.4835%" height="15" fill="rgb(205,202,1)" fg:x="942" fg:w="6"/><text x="76.1565%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="76.1483%" y="645" width="0.2417%" height="15" fill="rgb(232,195,26)" fg:x="945" fg:w="3"/><text x="76.3983%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.2288%" y="629" width="0.1612%" height="15" fill="rgb(208,102,26)" fg:x="946" fg:w="2"/><text x="76.4788%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.2288%" y="613" width="0.1612%" height="15" fill="rgb(215,41,39)" fg:x="946" fg:w="2"/><text x="76.4788%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.2288%" y="597" width="0.1612%" height="15" fill="rgb(247,139,11)" fg:x="946" fg:w="2"/><text x="76.4788%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="76.2288%" y="581" width="0.1612%" height="15" fill="rgb(243,99,6)" fg:x="946" fg:w="2"/><text x="76.4788%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.2288%" y="565" width="0.1612%" height="15" fill="rgb(230,168,48)" fg:x="946" fg:w="2"/><text x="76.4788%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.3094%" y="549" width="0.0806%" height="15" fill="rgb(238,227,13)" fg:x="947" fg:w="1"/><text x="76.5594%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="76.3900%" y="645" width="0.0806%" height="15" fill="rgb(209,109,13)" fg:x="948" fg:w="1"/><text x="76.6400%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="76.3900%" y="629" width="0.0806%" height="15" fill="rgb(228,195,1)" fg:x="948" fg:w="1"/><text x="76.6400%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.3900%" y="613" width="0.0806%" height="15" fill="rgb(230,218,0)" fg:x="948" fg:w="1"/><text x="76.6400%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3900%" y="597" width="0.0806%" height="15" fill="rgb(206,1,45)" fg:x="948" fg:w="1"/><text x="76.6400%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.4706%" y="501" width="0.0806%" height="15" fill="rgb(209,124,26)" fg:x="949" fg:w="1"/><text x="76.7206%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4706%" y="485" width="0.0806%" height="15" fill="rgb(220,59,8)" fg:x="949" fg:w="1"/><text x="76.7206%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="76.4706%" y="549" width="0.1612%" height="15" fill="rgb(251,41,37)" fg:x="949" fg:w="2"/><text x="76.7206%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="76.4706%" y="533" width="0.1612%" height="15" fill="rgb(239,152,21)" fg:x="949" fg:w="2"/><text x="76.7206%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.4706%" y="517" width="0.1612%" height="15" fill="rgb(226,32,1)" fg:x="949" fg:w="2"/><text x="76.7206%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.5512%" y="501" width="0.0806%" height="15" fill="rgb(230,154,36)" fg:x="950" fg:w="1"/><text x="76.8012%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5512%" y="485" width="0.0806%" height="15" fill="rgb(208,228,43)" fg:x="950" fg:w="1"/><text x="76.8012%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.5512%" y="469" width="0.0806%" height="15" fill="rgb(214,203,3)" fg:x="950" fg:w="1"/><text x="76.8012%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5512%" y="453" width="0.0806%" height="15" fill="rgb(207,149,29)" fg:x="950" fg:w="1"/><text x="76.8012%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5512%" y="437" width="0.0806%" height="15" fill="rgb(250,105,7)" fg:x="950" fg:w="1"/><text x="76.8012%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="76.4706%" y="581" width="0.3223%" height="15" fill="rgb(232,222,16)" fg:x="949" fg:w="4"/><text x="76.7206%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="76.4706%" y="565" width="0.3223%" height="15" fill="rgb(209,32,24)" fg:x="949" fg:w="4"/><text x="76.7206%" y="575.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="76.6317%" y="549" width="0.1612%" height="15" fill="rgb(225,13,6)" fg:x="951" fg:w="2"/><text x="76.8817%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="76.6317%" y="533" width="0.1612%" height="15" fill="rgb(245,226,26)" fg:x="951" fg:w="2"/><text x="76.8817%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.6317%" y="517" width="0.1612%" height="15" fill="rgb(229,178,27)" fg:x="951" fg:w="2"/><text x="76.8817%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.6317%" y="501" width="0.1612%" height="15" fill="rgb(205,227,28)" fg:x="951" fg:w="2"/><text x="76.8817%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7123%" y="485" width="0.0806%" height="15" fill="rgb(210,191,45)" fg:x="952" fg:w="1"/><text x="76.9623%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7123%" y="469" width="0.0806%" height="15" fill="rgb(206,124,16)" fg:x="952" fg:w="1"/><text x="76.9623%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7123%" y="453" width="0.0806%" height="15" fill="rgb(210,162,0)" fg:x="952" fg:w="1"/><text x="76.9623%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.7929%" y="533" width="0.0806%" height="15" fill="rgb(211,54,38)" fg:x="953" fg:w="1"/><text x="77.0429%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.7929%" y="517" width="0.0806%" height="15" fill="rgb(248,192,3)" fg:x="953" fg:w="1"/><text x="77.0429%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7929%" y="501" width="0.0806%" height="15" fill="rgb(233,187,18)" fg:x="953" fg:w="1"/><text x="77.0429%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7929%" y="485" width="0.0806%" height="15" fill="rgb(237,208,14)" fg:x="953" fg:w="1"/><text x="77.0429%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7929%" y="469" width="0.0806%" height="15" fill="rgb(212,77,1)" fg:x="953" fg:w="1"/><text x="77.0429%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.7929%" y="453" width="0.0806%" height="15" fill="rgb(210,163,22)" fg:x="953" fg:w="1"/><text x="77.0429%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.7929%" y="437" width="0.0806%" height="15" fill="rgb(250,58,28)" fg:x="953" fg:w="1"/><text x="77.0429%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.7929%" y="421" width="0.0806%" height="15" fill="rgb(254,28,41)" fg:x="953" fg:w="1"/><text x="77.0429%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.7929%" y="405" width="0.0806%" height="15" fill="rgb(237,162,36)" fg:x="953" fg:w="1"/><text x="77.0429%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.7929%" y="389" width="0.0806%" height="15" fill="rgb(232,56,6)" fg:x="953" fg:w="1"/><text x="77.0429%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="76.4706%" y="645" width="0.4835%" height="15" fill="rgb(216,127,42)" fg:x="949" fg:w="6"/><text x="76.7206%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="76.4706%" y="629" width="0.4835%" height="15" fill="rgb(241,69,15)" fg:x="949" fg:w="6"/><text x="76.7206%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="76.4706%" y="613" width="0.4835%" height="15" fill="rgb(227,180,19)" fg:x="949" fg:w="6"/><text x="76.7206%" y="623.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.48%)</title><rect x="76.4706%" y="597" width="0.4835%" height="15" fill="rgb(231,188,29)" fg:x="949" fg:w="6"/><text x="76.7206%" y="607.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="76.7929%" y="581" width="0.1612%" height="15" fill="rgb(224,176,27)" fg:x="953" fg:w="2"/><text x="77.0429%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="76.7929%" y="565" width="0.1612%" height="15" fill="rgb(249,214,19)" fg:x="953" fg:w="2"/><text x="77.0429%" y="575.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="76.7929%" y="549" width="0.1612%" height="15" fill="rgb(240,0,4)" fg:x="953" fg:w="2"/><text x="77.0429%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.8735%" y="533" width="0.0806%" height="15" fill="rgb(233,28,41)" fg:x="954" fg:w="1"/><text x="77.1235%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="76.9541%" y="645" width="0.0806%" height="15" fill="rgb(220,90,51)" fg:x="955" fg:w="1"/><text x="77.2041%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.9541%" y="629" width="0.0806%" height="15" fill="rgb(250,52,22)" fg:x="955" fg:w="1"/><text x="77.2041%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.0346%" y="549" width="0.0806%" height="15" fill="rgb(231,152,36)" fg:x="956" fg:w="1"/><text x="77.2846%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="77.0346%" y="581" width="0.1612%" height="15" fill="rgb(250,218,4)" fg:x="956" fg:w="2"/><text x="77.2846%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="77.0346%" y="565" width="0.1612%" height="15" fill="rgb(210,38,21)" fg:x="956" fg:w="2"/><text x="77.2846%" y="575.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="77.1152%" y="549" width="0.0806%" height="15" fill="rgb(230,75,13)" fg:x="957" fg:w="1"/><text x="77.3652%" y="559.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="77.1152%" y="533" width="0.0806%" height="15" fill="rgb(250,68,53)" fg:x="957" fg:w="1"/><text x="77.3652%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="77.1958%" y="485" width="0.0806%" height="15" fill="rgb(250,210,16)" fg:x="958" fg:w="1"/><text x="77.4458%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.1958%" y="469" width="0.0806%" height="15" fill="rgb(240,132,5)" fg:x="958" fg:w="1"/><text x="77.4458%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.1958%" y="453" width="0.0806%" height="15" fill="rgb(222,148,48)" fg:x="958" fg:w="1"/><text x="77.4458%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.1958%" y="437" width="0.0806%" height="15" fill="rgb(247,181,24)" fg:x="958" fg:w="1"/><text x="77.4458%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.1958%" y="421" width="0.0806%" height="15" fill="rgb(239,5,31)" fg:x="958" fg:w="1"/><text x="77.4458%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.2764%" y="453" width="0.0806%" height="15" fill="rgb(241,152,38)" fg:x="959" fg:w="1"/><text x="77.5264%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="77.2764%" y="437" width="0.0806%" height="15" fill="rgb(246,200,37)" fg:x="959" fg:w="1"/><text x="77.5264%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.2764%" y="421" width="0.0806%" height="15" fill="rgb(243,210,26)" fg:x="959" fg:w="1"/><text x="77.5264%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.2764%" y="405" width="0.0806%" height="15" fill="rgb(222,22,22)" fg:x="959" fg:w="1"/><text x="77.5264%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="77.1958%" y="501" width="0.2417%" height="15" fill="rgb(208,129,28)" fg:x="958" fg:w="3"/><text x="77.4458%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="77.2764%" y="485" width="0.1612%" height="15" fill="rgb(254,169,28)" fg:x="959" fg:w="2"/><text x="77.5264%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="77.2764%" y="469" width="0.1612%" height="15" fill="rgb(225,45,17)" fg:x="959" fg:w="2"/><text x="77.5264%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.3570%" y="453" width="0.0806%" height="15" fill="rgb(232,199,2)" fg:x="960" fg:w="1"/><text x="77.6070%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.3570%" y="437" width="0.0806%" height="15" fill="rgb(235,33,40)" fg:x="960" fg:w="1"/><text x="77.6070%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.3570%" y="421" width="0.0806%" height="15" fill="rgb(237,89,50)" fg:x="960" fg:w="1"/><text x="77.6070%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.3570%" y="405" width="0.0806%" height="15" fill="rgb(238,126,5)" fg:x="960" fg:w="1"/><text x="77.6070%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.4376%" y="453" width="0.0806%" height="15" fill="rgb(247,214,42)" fg:x="961" fg:w="1"/><text x="77.6876%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.5181%" y="437" width="0.0806%" height="15" fill="rgb(238,60,45)" fg:x="962" fg:w="1"/><text x="77.7681%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.5181%" y="421" width="0.0806%" height="15" fill="rgb(225,69,44)" fg:x="962" fg:w="1"/><text x="77.7681%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5181%" y="405" width="0.0806%" height="15" fill="rgb(241,13,44)" fg:x="962" fg:w="1"/><text x="77.7681%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="77.6793%" y="389" width="0.0806%" height="15" fill="rgb(227,121,22)" fg:x="964" fg:w="1"/><text x="77.9293%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.6793%" y="373" width="0.0806%" height="15" fill="rgb(231,160,23)" fg:x="964" fg:w="1"/><text x="77.9293%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="77.1958%" y="533" width="0.6446%" height="15" fill="rgb(250,179,43)" fg:x="958" fg:w="8"/><text x="77.4458%" y="543.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (8 samples, 0.64%)</title><rect x="77.1958%" y="517" width="0.6446%" height="15" fill="rgb(233,54,46)" fg:x="958" fg:w="8"/><text x="77.4458%" y="527.50"></text></g><g><title>kernel::model::any_entity_changes (5 samples, 0.40%)</title><rect x="77.4376%" y="501" width="0.4029%" height="15" fill="rgb(247,120,42)" fg:x="961" fg:w="5"/><text x="77.6876%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="77.4376%" y="485" width="0.4029%" height="15" fill="rgb(221,219,12)" fg:x="961" fg:w="5"/><text x="77.6876%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="77.4376%" y="469" width="0.4029%" height="15" fill="rgb(211,126,8)" fg:x="961" fg:w="5"/><text x="77.6876%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="77.5181%" y="453" width="0.3223%" height="15" fill="rgb(218,154,33)" fg:x="962" fg:w="4"/><text x="77.7681%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="77.5987%" y="437" width="0.2417%" height="15" fill="rgb(212,199,16)" fg:x="963" fg:w="3"/><text x="77.8487%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="77.5987%" y="421" width="0.2417%" height="15" fill="rgb(236,215,46)" fg:x="963" fg:w="3"/><text x="77.8487%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="77.5987%" y="405" width="0.2417%" height="15" fill="rgb(232,32,22)" fg:x="963" fg:w="3"/><text x="77.8487%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7599%" y="389" width="0.0806%" height="15" fill="rgb(234,79,15)" fg:x="965" fg:w="1"/><text x="78.0099%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="77.8405%" y="501" width="0.3223%" height="15" fill="rgb(235,187,47)" fg:x="966" fg:w="4"/><text x="78.0905%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="77.9210%" y="485" width="0.2417%" height="15" fill="rgb(244,69,37)" fg:x="967" fg:w="3"/><text x="78.1710%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.0016%" y="469" width="0.1612%" height="15" fill="rgb(249,140,25)" fg:x="968" fg:w="2"/><text x="78.2516%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.1628%" y="485" width="0.0806%" height="15" fill="rgb(213,69,8)" fg:x="970" fg:w="1"/><text x="78.4128%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="78.2434%" y="485" width="0.3223%" height="15" fill="rgb(220,136,2)" fg:x="971" fg:w="4"/><text x="78.4934%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.4045%" y="469" width="0.1612%" height="15" fill="rgb(237,50,36)" fg:x="973" fg:w="2"/><text x="78.6545%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.4851%" y="453" width="0.0806%" height="15" fill="rgb(226,18,11)" fg:x="974" fg:w="1"/><text x="78.7351%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.5657%" y="469" width="0.0806%" height="15" fill="rgb(243,156,2)" fg:x="975" fg:w="1"/><text x="78.8157%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="78.6463%" y="469" width="0.0806%" height="15" fill="rgb(218,8,34)" fg:x="976" fg:w="1"/><text x="78.8963%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.6463%" y="453" width="0.0806%" height="15" fill="rgb(250,94,35)" fg:x="976" fg:w="1"/><text x="78.8963%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.6463%" y="437" width="0.0806%" height="15" fill="rgb(229,127,21)" fg:x="976" fg:w="1"/><text x="78.8963%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="78.7268%" y="469" width="0.2417%" height="15" fill="rgb(234,49,5)" fg:x="977" fg:w="3"/><text x="78.9768%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="78.7268%" y="453" width="0.2417%" height="15" fill="rgb(248,12,16)" fg:x="977" fg:w="3"/><text x="78.9768%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.8880%" y="437" width="0.0806%" height="15" fill="rgb(208,220,31)" fg:x="979" fg:w="1"/><text x="79.1380%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.9686%" y="453" width="0.0806%" height="15" fill="rgb(243,184,0)" fg:x="980" fg:w="1"/><text x="79.2186%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.9686%" y="437" width="0.0806%" height="15" fill="rgb(217,38,21)" fg:x="980" fg:w="1"/><text x="79.2186%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.0492%" y="437" width="0.1612%" height="15" fill="rgb(239,120,45)" fg:x="981" fg:w="2"/><text x="79.2992%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.1297%" y="421" width="0.0806%" height="15" fill="rgb(235,33,2)" fg:x="982" fg:w="1"/><text x="79.3797%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.1297%" y="405" width="0.0806%" height="15" fill="rgb(249,161,5)" fg:x="982" fg:w="1"/><text x="79.3797%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.1297%" y="389" width="0.0806%" height="15" fill="rgb(250,165,48)" fg:x="982" fg:w="1"/><text x="79.3797%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="79.0492%" y="453" width="0.2417%" height="15" fill="rgb(221,23,45)" fg:x="981" fg:w="3"/><text x="79.2992%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.2103%" y="437" width="0.0806%" height="15" fill="rgb(217,108,46)" fg:x="983" fg:w="1"/><text x="79.4603%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.2103%" y="421" width="0.0806%" height="15" fill="rgb(254,26,35)" fg:x="983" fg:w="1"/><text x="79.4603%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="78.9686%" y="469" width="0.4835%" height="15" fill="rgb(218,223,28)" fg:x="980" fg:w="6"/><text x="79.2186%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.2909%" y="453" width="0.1612%" height="15" fill="rgb(242,27,47)" fg:x="984" fg:w="2"/><text x="79.5409%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.3715%" y="437" width="0.0806%" height="15" fill="rgb(218,39,35)" fg:x="985" fg:w="1"/><text x="79.6215%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="78.5657%" y="485" width="0.9670%" height="15" fill="rgb(232,127,16)" fg:x="975" fg:w="12"/><text x="78.8157%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.4521%" y="469" width="0.0806%" height="15" fill="rgb(231,219,51)" fg:x="986" fg:w="1"/><text x="79.7021%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.4521%" y="453" width="0.0806%" height="15" fill="rgb(217,220,46)" fg:x="986" fg:w="1"/><text x="79.7021%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (23 samples, 1.85%)</title><rect x="77.8405%" y="517" width="1.8533%" height="15" fill="rgb(230,75,1)" fg:x="966" fg:w="23"/><text x="78.0905%" y="527.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.53%)</title><rect x="78.1628%" y="501" width="1.5310%" height="15" fill="rgb(218,2,8)" fg:x="970" fg:w="19"/><text x="78.4128%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.5326%" y="485" width="0.1612%" height="15" fill="rgb(206,111,30)" fg:x="987" fg:w="2"/><text x="79.7826%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.5326%" y="469" width="0.1612%" height="15" fill="rgb(209,135,6)" fg:x="987" fg:w="2"/><text x="79.7826%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="79.5326%" y="453" width="0.1612%" height="15" fill="rgb(205,169,10)" fg:x="987" fg:w="2"/><text x="79.7826%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.6132%" y="437" width="0.0806%" height="15" fill="rgb(212,204,38)" fg:x="988" fg:w="1"/><text x="79.8632%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.6132%" y="421" width="0.0806%" height="15" fill="rgb(205,199,14)" fg:x="988" fg:w="1"/><text x="79.8632%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.6132%" y="405" width="0.0806%" height="15" fill="rgb(212,4,6)" fg:x="988" fg:w="1"/><text x="79.8632%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6938%" y="469" width="0.0806%" height="15" fill="rgb(250,15,10)" fg:x="989" fg:w="1"/><text x="79.9438%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.6938%" y="453" width="0.0806%" height="15" fill="rgb(212,49,51)" fg:x="989" fg:w="1"/><text x="79.9438%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.6938%" y="437" width="0.0806%" height="15" fill="rgb(235,21,9)" fg:x="989" fg:w="1"/><text x="79.9438%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.8550%" y="453" width="0.0806%" height="15" fill="rgb(251,31,32)" fg:x="991" fg:w="1"/><text x="80.1050%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.8550%" y="437" width="0.0806%" height="15" fill="rgb(246,23,9)" fg:x="991" fg:w="1"/><text x="80.1050%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8550%" y="421" width="0.0806%" height="15" fill="rgb(225,216,14)" fg:x="991" fg:w="1"/><text x="80.1050%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.9355%" y="389" width="0.0806%" height="15" fill="rgb(215,200,26)" fg:x="992" fg:w="1"/><text x="80.1855%" y="399.50"></text></g><g><title>engine::session::Session::flush (38 samples, 3.06%)</title><rect x="77.0346%" y="645" width="3.0620%" height="15" fill="rgb(237,130,47)" fg:x="956" fg:w="38"/><text x="77.2846%" y="655.50">eng..</text></g><g><title>engine::session::Session::save_changes (38 samples, 3.06%)</title><rect x="77.0346%" y="629" width="3.0620%" height="15" fill="rgb(247,74,14)" fg:x="956" fg:w="38"/><text x="77.2846%" y="639.50">eng..</text></g><g><title>engine::session::state::State::close (38 samples, 3.06%)</title><rect x="77.0346%" y="613" width="3.0620%" height="15" fill="rgb(254,97,46)" fg:x="956" fg:w="38"/><text x="77.2846%" y="623.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (38 samples, 3.06%)</title><rect x="77.0346%" y="597" width="3.0620%" height="15" fill="rgb(234,191,1)" fg:x="956" fg:w="38"/><text x="77.2846%" y="607.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (36 samples, 2.90%)</title><rect x="77.1958%" y="581" width="2.9009%" height="15" fill="rgb(215,165,14)" fg:x="958" fg:w="36"/><text x="77.4458%" y="591.50">en..</text></g><g><title>core::iter::adapters::try_process (36 samples, 2.90%)</title><rect x="77.1958%" y="565" width="2.9009%" height="15" fill="rgb(230,182,6)" fg:x="958" fg:w="36"/><text x="77.4458%" y="575.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 2.90%)</title><rect x="77.1958%" y="549" width="2.9009%" height="15" fill="rgb(210,127,39)" fg:x="958" fg:w="36"/><text x="77.4458%" y="559.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (28 samples, 2.26%)</title><rect x="77.8405%" y="533" width="2.2562%" height="15" fill="rgb(223,212,51)" fg:x="966" fg:w="28"/><text x="78.0905%" y="543.50">e..</text></g><g><title>kernel::model::any_entity_changes (5 samples, 0.40%)</title><rect x="79.6938%" y="517" width="0.4029%" height="15" fill="rgb(226,176,43)" fg:x="989" fg:w="5"/><text x="79.9438%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="79.6938%" y="501" width="0.4029%" height="15" fill="rgb(222,155,4)" fg:x="989" fg:w="5"/><text x="79.9438%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="79.6938%" y="485" width="0.4029%" height="15" fill="rgb(215,149,7)" fg:x="989" fg:w="5"/><text x="79.9438%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="79.7744%" y="469" width="0.3223%" height="15" fill="rgb(252,199,23)" fg:x="990" fg:w="4"/><text x="80.0244%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.9355%" y="453" width="0.1612%" height="15" fill="rgb(245,52,29)" fg:x="992" fg:w="2"/><text x="80.1855%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="79.9355%" y="437" width="0.1612%" height="15" fill="rgb(221,228,19)" fg:x="992" fg:w="2"/><text x="80.1855%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.9355%" y="421" width="0.1612%" height="15" fill="rgb(253,101,6)" fg:x="992" fg:w="2"/><text x="80.1855%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="79.9355%" y="405" width="0.1612%" height="15" fill="rgb(211,130,8)" fg:x="992" fg:w="2"/><text x="80.1855%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.0161%" y="389" width="0.0806%" height="15" fill="rgb(238,37,53)" fg:x="993" fg:w="1"/><text x="80.2661%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="80.0161%" y="373" width="0.0806%" height="15" fill="rgb(235,145,5)" fg:x="993" fg:w="1"/><text x="80.2661%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="80.0967%" y="629" width="0.0806%" height="15" fill="rgb(244,12,43)" fg:x="994" fg:w="1"/><text x="80.3467%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0967%" y="613" width="0.0806%" height="15" fill="rgb(246,195,24)" fg:x="994" fg:w="1"/><text x="80.3467%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0967%" y="597" width="0.0806%" height="15" fill="rgb(235,163,6)" fg:x="994" fg:w="1"/><text x="80.3467%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.0967%" y="581" width="0.0806%" height="15" fill="rgb(236,218,17)" fg:x="994" fg:w="1"/><text x="80.3467%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.0967%" y="565" width="0.0806%" height="15" fill="rgb(235,12,38)" fg:x="994" fg:w="1"/><text x="80.3467%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.0967%" y="549" width="0.0806%" height="15" fill="rgb(225,195,33)" fg:x="994" fg:w="1"/><text x="80.3467%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="80.0967%" y="533" width="0.0806%" height="15" fill="rgb(238,54,35)" fg:x="994" fg:w="1"/><text x="80.3467%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="80.0967%" y="517" width="0.0806%" height="15" fill="rgb(238,33,7)" fg:x="994" fg:w="1"/><text x="80.3467%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="80.1773%" y="613" width="0.0806%" height="15" fill="rgb(245,5,14)" fg:x="995" fg:w="1"/><text x="80.4273%" y="623.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="80.1773%" y="597" width="0.0806%" height="15" fill="rgb(251,95,31)" fg:x="995" fg:w="1"/><text x="80.4273%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="80.1773%" y="581" width="0.0806%" height="15" fill="rgb(222,15,46)" fg:x="995" fg:w="1"/><text x="80.4273%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.1773%" y="565" width="0.0806%" height="15" fill="rgb(226,182,24)" fg:x="995" fg:w="1"/><text x="80.4273%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.1773%" y="549" width="0.0806%" height="15" fill="rgb(229,105,41)" fg:x="995" fg:w="1"/><text x="80.4273%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.1773%" y="533" width="0.0806%" height="15" fill="rgb(216,99,53)" fg:x="995" fg:w="1"/><text x="80.4273%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="80.2579%" y="613" width="0.0806%" height="15" fill="rgb(253,26,20)" fg:x="996" fg:w="1"/><text x="80.5079%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="80.2579%" y="597" width="0.0806%" height="15" fill="rgb(249,155,28)" fg:x="996" fg:w="1"/><text x="80.5079%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.2579%" y="581" width="0.0806%" height="15" fill="rgb(241,221,2)" fg:x="996" fg:w="1"/><text x="80.5079%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.2579%" y="565" width="0.0806%" height="15" fill="rgb(219,124,6)" fg:x="996" fg:w="1"/><text x="80.5079%" y="575.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="80.2579%" y="549" width="0.0806%" height="15" fill="rgb(233,37,6)" fg:x="996" fg:w="1"/><text x="80.5079%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.2579%" y="533" width="0.0806%" height="15" fill="rgb(238,20,14)" fg:x="996" fg:w="1"/><text x="80.5079%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2579%" y="517" width="0.0806%" height="15" fill="rgb(232,106,27)" fg:x="996" fg:w="1"/><text x="80.5079%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2579%" y="501" width="0.0806%" height="15" fill="rgb(246,157,24)" fg:x="996" fg:w="1"/><text x="80.5079%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.3384%" y="533" width="0.0806%" height="15" fill="rgb(214,153,10)" fg:x="997" fg:w="1"/><text x="80.5884%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.3384%" y="517" width="0.0806%" height="15" fill="rgb(212,94,6)" fg:x="997" fg:w="1"/><text x="80.5884%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.3384%" y="501" width="0.0806%" height="15" fill="rgb(254,25,27)" fg:x="997" fg:w="1"/><text x="80.5884%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3384%" y="485" width="0.0806%" height="15" fill="rgb(250,43,52)" fg:x="997" fg:w="1"/><text x="80.5884%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="80.3384%" y="597" width="0.2417%" height="15" fill="rgb(221,226,40)" fg:x="997" fg:w="3"/><text x="80.5884%" y="607.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="80.3384%" y="581" width="0.2417%" height="15" fill="rgb(235,162,34)" fg:x="997" fg:w="3"/><text x="80.5884%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="80.3384%" y="565" width="0.2417%" height="15" fill="rgb(239,24,26)" fg:x="997" fg:w="3"/><text x="80.5884%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="80.3384%" y="549" width="0.2417%" height="15" fill="rgb(244,226,11)" fg:x="997" fg:w="3"/><text x="80.5884%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="80.4190%" y="533" width="0.1612%" height="15" fill="rgb(225,23,10)" fg:x="998" fg:w="2"/><text x="80.6690%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.4190%" y="517" width="0.1612%" height="15" fill="rgb(249,125,6)" fg:x="998" fg:w="2"/><text x="80.6690%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="80.4190%" y="501" width="0.1612%" height="15" fill="rgb(246,212,12)" fg:x="998" fg:w="2"/><text x="80.6690%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.4190%" y="485" width="0.1612%" height="15" fill="rgb(230,43,32)" fg:x="998" fg:w="2"/><text x="80.6690%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.4996%" y="469" width="0.0806%" height="15" fill="rgb(210,95,23)" fg:x="999" fg:w="1"/><text x="80.7496%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.4996%" y="453" width="0.0806%" height="15" fill="rgb(229,103,33)" fg:x="999" fg:w="1"/><text x="80.7496%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="80.4996%" y="437" width="0.0806%" height="15" fill="rgb(222,104,27)" fg:x="999" fg:w="1"/><text x="80.7496%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="80.3384%" y="613" width="0.3223%" height="15" fill="rgb(239,221,23)" fg:x="997" fg:w="4"/><text x="80.5884%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="80.5802%" y="597" width="0.0806%" height="15" fill="rgb(222,98,21)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.5802%" y="581" width="0.0806%" height="15" fill="rgb(231,101,20)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="591.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="80.5802%" y="565" width="0.0806%" height="15" fill="rgb(215,150,22)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="80.5802%" y="549" width="0.0806%" height="15" fill="rgb(248,3,34)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="80.5802%" y="533" width="0.0806%" height="15" fill="rgb(220,141,21)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="80.5802%" y="517" width="0.0806%" height="15" fill="rgb(223,41,48)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.5802%" y="501" width="0.0806%" height="15" fill="rgb(247,12,5)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.5802%" y="485" width="0.0806%" height="15" fill="rgb(206,173,10)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.5802%" y="469" width="0.0806%" height="15" fill="rgb(233,214,37)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="80.5802%" y="453" width="0.0806%" height="15" fill="rgb(238,86,43)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="463.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.64%)</title><rect x="80.0967%" y="645" width="0.6446%" height="15" fill="rgb(212,182,8)" fg:x="994" fg:w="8"/><text x="80.3467%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="80.1773%" y="629" width="0.5641%" height="15" fill="rgb(240,91,47)" fg:x="995" fg:w="7"/><text x="80.4273%" y="639.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="80.6608%" y="613" width="0.0806%" height="15" fill="rgb(209,138,26)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="80.6608%" y="597" width="0.0806%" height="15" fill="rgb(231,163,20)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="80.6608%" y="581" width="0.0806%" height="15" fill="rgb(214,91,54)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.6608%" y="565" width="0.0806%" height="15" fill="rgb(230,32,17)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="80.7413%" y="645" width="0.0806%" height="15" fill="rgb(231,34,34)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="80.7413%" y="629" width="0.0806%" height="15" fill="rgb(224,228,27)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="80.7413%" y="613" width="0.0806%" height="15" fill="rgb(219,35,40)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="80.7413%" y="597" width="0.0806%" height="15" fill="rgb(234,42,8)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7413%" y="581" width="0.0806%" height="15" fill="rgb(226,75,22)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.7413%" y="565" width="0.0806%" height="15" fill="rgb(242,203,28)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.7413%" y="549" width="0.0806%" height="15" fill="rgb(221,3,9)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.7413%" y="533" width="0.0806%" height="15" fill="rgb(214,34,31)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.7413%" y="517" width="0.0806%" height="15" fill="rgb(252,119,15)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.8219%" y="597" width="0.0806%" height="15" fill="rgb(244,224,31)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.8219%" y="581" width="0.0806%" height="15" fill="rgb(215,8,51)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.8219%" y="565" width="0.0806%" height="15" fill="rgb(207,24,1)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.8219%" y="549" width="0.0806%" height="15" fill="rgb(245,90,0)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.8219%" y="533" width="0.0806%" height="15" fill="rgb(246,43,48)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.8219%" y="517" width="0.0806%" height="15" fill="rgb(252,218,10)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.8219%" y="501" width="0.0806%" height="15" fill="rgb(231,24,35)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.8219%" y="485" width="0.0806%" height="15" fill="rgb(225,66,19)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.8219%" y="469" width="0.0806%" height="15" fill="rgb(214,96,51)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.8219%" y="453" width="0.0806%" height="15" fill="rgb(251,151,47)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.8219%" y="437" width="0.0806%" height="15" fill="rgb(236,79,14)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.8219%" y="421" width="0.0806%" height="15" fill="rgb(210,205,11)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.8219%" y="405" width="0.0806%" height="15" fill="rgb(233,142,53)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.8219%" y="389" width="0.0806%" height="15" fill="rgb(212,116,48)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.8219%" y="373" width="0.0806%" height="15" fill="rgb(234,55,33)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="80.9025%" y="597" width="0.0806%" height="15" fill="rgb(253,92,27)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="80.9025%" y="581" width="0.0806%" height="15" fill="rgb(220,7,35)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="80.9025%" y="565" width="0.0806%" height="15" fill="rgb(246,124,6)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.9025%" y="549" width="0.0806%" height="15" fill="rgb(212,111,51)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9025%" y="533" width="0.0806%" height="15" fill="rgb(253,116,7)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="80.9831%" y="597" width="0.0806%" height="15" fill="rgb(213,145,18)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="80.9831%" y="581" width="0.0806%" height="15" fill="rgb(219,149,7)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="80.9831%" y="565" width="0.0806%" height="15" fill="rgb(225,156,20)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.9831%" y="549" width="0.0806%" height="15" fill="rgb(211,98,19)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="81.0637%" y="565" width="0.0806%" height="15" fill="rgb(231,192,31)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.0637%" y="549" width="0.0806%" height="15" fill="rgb(249,95,19)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="81.0637%" y="533" width="0.0806%" height="15" fill="rgb(247,101,36)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="81.0637%" y="581" width="0.1612%" height="15" fill="rgb(221,45,43)" fg:x="1006" fg:w="2"/><text x="81.3137%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.1442%" y="565" width="0.0806%" height="15" fill="rgb(220,42,1)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.1442%" y="549" width="0.0806%" height="15" fill="rgb(236,19,24)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.1442%" y="533" width="0.0806%" height="15" fill="rgb(225,192,6)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.1442%" y="517" width="0.0806%" height="15" fill="rgb(242,30,19)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1442%" y="501" width="0.0806%" height="15" fill="rgb(240,36,6)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1442%" y="485" width="0.0806%" height="15" fill="rgb(246,40,28)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.1442%" y="469" width="0.0806%" height="15" fill="rgb(225,155,33)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.1442%" y="453" width="0.0806%" height="15" fill="rgb(240,65,18)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.1442%" y="437" width="0.0806%" height="15" fill="rgb(217,0,48)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.1442%" y="421" width="0.0806%" height="15" fill="rgb(217,80,15)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.1442%" y="405" width="0.0806%" height="15" fill="rgb(253,43,51)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.1442%" y="389" width="0.0806%" height="15" fill="rgb(246,60,4)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.1442%" y="373" width="0.0806%" height="15" fill="rgb(230,40,54)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.1442%" y="357" width="0.0806%" height="15" fill="rgb(208,20,44)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.1442%" y="341" width="0.0806%" height="15" fill="rgb(230,22,22)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.1442%" y="325" width="0.0806%" height="15" fill="rgb(207,57,4)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="81.0637%" y="597" width="0.2417%" height="15" fill="rgb(242,130,33)" fg:x="1006" fg:w="3"/><text x="81.3137%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.2248%" y="581" width="0.0806%" height="15" fill="rgb(218,66,43)" fg:x="1008" fg:w="1"/><text x="81.4748%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.2248%" y="565" width="0.0806%" height="15" fill="rgb(236,105,16)" fg:x="1008" fg:w="1"/><text x="81.4748%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.2248%" y="549" width="0.0806%" height="15" fill="rgb(230,46,15)" fg:x="1008" fg:w="1"/><text x="81.4748%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="80.8219%" y="629" width="0.5641%" height="15" fill="rgb(251,172,40)" fg:x="1003" fg:w="7"/><text x="81.0719%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="80.8219%" y="613" width="0.5641%" height="15" fill="rgb(225,217,32)" fg:x="1003" fg:w="7"/><text x="81.0719%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="81.3054%" y="597" width="0.0806%" height="15" fill="rgb(243,10,29)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="81.3054%" y="581" width="0.0806%" height="15" fill="rgb(207,102,10)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.3054%" y="565" width="0.0806%" height="15" fill="rgb(241,125,5)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.3054%" y="549" width="0.0806%" height="15" fill="rgb(230,125,29)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.3054%" y="533" width="0.0806%" height="15" fill="rgb(223,65,44)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3054%" y="517" width="0.0806%" height="15" fill="rgb(224,188,28)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.3054%" y="501" width="0.0806%" height="15" fill="rgb(254,197,27)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3054%" y="485" width="0.0806%" height="15" fill="rgb(220,200,25)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.3054%" y="469" width="0.0806%" height="15" fill="rgb(239,225,54)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3054%" y="453" width="0.0806%" height="15" fill="rgb(211,59,40)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3054%" y="437" width="0.0806%" height="15" fill="rgb(213,176,46)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.3860%" y="581" width="0.0806%" height="15" fill="rgb(226,99,4)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.3860%" y="565" width="0.0806%" height="15" fill="rgb(239,203,43)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3860%" y="549" width="0.0806%" height="15" fill="rgb(246,1,45)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3860%" y="533" width="0.0806%" height="15" fill="rgb(231,42,52)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3860%" y="517" width="0.0806%" height="15" fill="rgb(240,13,50)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.3860%" y="501" width="0.0806%" height="15" fill="rgb(225,81,14)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.3860%" y="485" width="0.0806%" height="15" fill="rgb(216,182,23)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.3860%" y="469" width="0.0806%" height="15" fill="rgb(233,137,19)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.3860%" y="453" width="0.0806%" height="15" fill="rgb(242,61,46)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.3860%" y="437" width="0.0806%" height="15" fill="rgb(221,168,51)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.3860%" y="421" width="0.0806%" height="15" fill="rgb(238,48,15)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.3860%" y="405" width="0.0806%" height="15" fill="rgb(216,13,16)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.3860%" y="389" width="0.0806%" height="15" fill="rgb(223,185,34)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.3860%" y="373" width="0.0806%" height="15" fill="rgb(228,94,42)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.3860%" y="357" width="0.0806%" height="15" fill="rgb(218,166,43)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.3860%" y="341" width="0.0806%" height="15" fill="rgb(232,30,50)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.3860%" y="325" width="0.0806%" height="15" fill="rgb(245,206,45)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4666%" y="565" width="0.0806%" height="15" fill="rgb(220,56,22)" fg:x="1011" fg:w="1"/><text x="81.7166%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="81.3860%" y="613" width="0.2417%" height="15" fill="rgb(239,129,38)" fg:x="1010" fg:w="3"/><text x="81.6360%" y="623.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="81.3860%" y="597" width="0.2417%" height="15" fill="rgb(207,68,41)" fg:x="1010" fg:w="3"/><text x="81.6360%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="81.4666%" y="581" width="0.1612%" height="15" fill="rgb(221,21,7)" fg:x="1011" fg:w="2"/><text x="81.7166%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.5471%" y="565" width="0.0806%" height="15" fill="rgb(240,33,25)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.5471%" y="549" width="0.0806%" height="15" fill="rgb(242,119,10)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5471%" y="533" width="0.0806%" height="15" fill="rgb(214,149,40)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.5471%" y="517" width="0.0806%" height="15" fill="rgb(228,25,36)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5471%" y="501" width="0.0806%" height="15" fill="rgb(222,59,15)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="81.5471%" y="485" width="0.0806%" height="15" fill="rgb(218,170,0)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.5471%" y="469" width="0.0806%" height="15" fill="rgb(232,173,23)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.5471%" y="453" width="0.0806%" height="15" fill="rgb(218,116,1)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.6277%" y="613" width="0.0806%" height="15" fill="rgb(207,34,4)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.7083%" y="565" width="0.0806%" height="15" fill="rgb(229,54,52)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.7083%" y="549" width="0.0806%" height="15" fill="rgb(211,86,23)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7083%" y="533" width="0.0806%" height="15" fill="rgb(254,153,34)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7083%" y="517" width="0.0806%" height="15" fill="rgb(219,220,14)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.7083%" y="501" width="0.0806%" height="15" fill="rgb(247,8,26)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7083%" y="485" width="0.0806%" height="15" fill="rgb(213,129,42)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="81.7083%" y="469" width="0.0806%" height="15" fill="rgb(225,95,41)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="479.50"></text></g><g><title>plugins_core::build::Build::occupying (13 samples, 1.05%)</title><rect x="80.8219%" y="645" width="1.0475%" height="15" fill="rgb(215,134,24)" fg:x="1003" fg:w="13"/><text x="81.0719%" y="655.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.48%)</title><rect x="81.3860%" y="629" width="0.4835%" height="15" fill="rgb(235,23,54)" fg:x="1010" fg:w="6"/><text x="81.6360%" y="639.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="81.7083%" y="613" width="0.1612%" height="15" fill="rgb(229,96,31)" fg:x="1014" fg:w="2"/><text x="81.9583%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="81.7083%" y="597" width="0.1612%" height="15" fill="rgb(206,111,12)" fg:x="1014" fg:w="2"/><text x="81.9583%" y="607.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="81.7083%" y="581" width="0.1612%" height="15" fill="rgb(222,177,8)" fg:x="1014" fg:w="2"/><text x="81.9583%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.7889%" y="565" width="0.0806%" height="15" fill="rgb(251,36,52)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.7889%" y="549" width="0.0806%" height="15" fill="rgb(216,182,29)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.7889%" y="533" width="0.0806%" height="15" fill="rgb(241,145,50)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.7889%" y="517" width="0.0806%" height="15" fill="rgb(231,71,35)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.7889%" y="501" width="0.0806%" height="15" fill="rgb(218,22,17)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.7889%" y="485" width="0.0806%" height="15" fill="rgb(225,227,6)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.7889%" y="469" width="0.0806%" height="15" fill="rgb(224,204,17)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.8695%" y="629" width="0.0806%" height="15" fill="rgb(227,61,28)" fg:x="1016" fg:w="1"/><text x="82.1195%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0306%" y="517" width="0.0806%" height="15" fill="rgb(242,148,23)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0306%" y="501" width="0.0806%" height="15" fill="rgb(237,105,33)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.0306%" y="485" width="0.0806%" height="15" fill="rgb(238,218,40)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.0306%" y="469" width="0.0806%" height="15" fill="rgb(209,126,11)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.0306%" y="453" width="0.0806%" height="15" fill="rgb(245,90,11)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.0306%" y="437" width="0.0806%" height="15" fill="rgb(211,195,10)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.0306%" y="421" width="0.0806%" height="15" fill="rgb(231,45,45)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.0306%" y="405" width="0.0806%" height="15" fill="rgb(246,100,43)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.0306%" y="389" width="0.0806%" height="15" fill="rgb(241,193,8)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.0306%" y="373" width="0.0806%" height="15" fill="rgb(208,76,19)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.0306%" y="357" width="0.0806%" height="15" fill="rgb(223,69,40)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.0306%" y="341" width="0.0806%" height="15" fill="rgb(207,120,39)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="81.9500%" y="565" width="0.2417%" height="15" fill="rgb(212,209,28)" fg:x="1017" fg:w="3"/><text x="82.2000%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="81.9500%" y="549" width="0.2417%" height="15" fill="rgb(246,82,29)" fg:x="1017" fg:w="3"/><text x="82.2000%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="81.9500%" y="533" width="0.2417%" height="15" fill="rgb(239,6,40)" fg:x="1017" fg:w="3"/><text x="82.2000%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1112%" y="517" width="0.0806%" height="15" fill="rgb(228,181,35)" fg:x="1019" fg:w="1"/><text x="82.3612%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="81.9500%" y="597" width="0.3223%" height="15" fill="rgb(238,151,2)" fg:x="1017" fg:w="4"/><text x="82.2000%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="81.9500%" y="581" width="0.3223%" height="15" fill="rgb(236,94,18)" fg:x="1017" fg:w="4"/><text x="82.2000%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.1918%" y="565" width="0.0806%" height="15" fill="rgb(208,38,14)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1918%" y="549" width="0.0806%" height="15" fill="rgb(234,215,27)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.1918%" y="533" width="0.0806%" height="15" fill="rgb(254,211,53)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1918%" y="517" width="0.0806%" height="15" fill="rgb(216,175,11)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.1918%" y="501" width="0.0806%" height="15" fill="rgb(246,179,26)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1918%" y="485" width="0.0806%" height="15" fill="rgb(249,19,52)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.1918%" y="469" width="0.0806%" height="15" fill="rgb(230,42,52)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.2724%" y="517" width="0.0806%" height="15" fill="rgb(221,171,0)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="82.2724%" y="549" width="0.1612%" height="15" fill="rgb(222,177,40)" fg:x="1021" fg:w="2"/><text x="82.5224%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="82.2724%" y="533" width="0.1612%" height="15" fill="rgb(247,34,16)" fg:x="1021" fg:w="2"/><text x="82.5224%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.3529%" y="517" width="0.0806%" height="15" fill="rgb(213,217,37)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3529%" y="501" width="0.0806%" height="15" fill="rgb(231,189,24)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="82.2724%" y="597" width="0.2417%" height="15" fill="rgb(214,22,9)" fg:x="1021" fg:w="3"/><text x="82.5224%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="82.2724%" y="581" width="0.2417%" height="15" fill="rgb(212,70,22)" fg:x="1021" fg:w="3"/><text x="82.5224%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="82.2724%" y="565" width="0.2417%" height="15" fill="rgb(249,64,51)" fg:x="1021" fg:w="3"/><text x="82.5224%" y="575.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.4335%" y="549" width="0.0806%" height="15" fill="rgb(249,148,20)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4335%" y="533" width="0.0806%" height="15" fill="rgb(246,46,48)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4335%" y="517" width="0.0806%" height="15" fill="rgb(217,34,48)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4335%" y="501" width="0.0806%" height="15" fill="rgb(222,45,26)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.4335%" y="485" width="0.0806%" height="15" fill="rgb(230,201,36)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.4335%" y="469" width="0.0806%" height="15" fill="rgb(217,30,43)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="82.5141%" y="597" width="0.0806%" height="15" fill="rgb(230,197,40)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.5141%" y="581" width="0.0806%" height="15" fill="rgb(239,181,18)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.5141%" y="565" width="0.0806%" height="15" fill="rgb(222,60,39)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.5141%" y="549" width="0.0806%" height="15" fill="rgb(210,60,22)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="82.5947%" y="597" width="0.0806%" height="15" fill="rgb(239,213,48)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.5947%" y="581" width="0.0806%" height="15" fill="rgb(253,214,23)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.5947%" y="565" width="0.0806%" height="15" fill="rgb(211,98,45)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.5947%" y="549" width="0.0806%" height="15" fill="rgb(239,130,44)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.5947%" y="533" width="0.0806%" height="15" fill="rgb(222,181,35)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.5947%" y="517" width="0.0806%" height="15" fill="rgb(219,219,49)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.5947%" y="501" width="0.0806%" height="15" fill="rgb(227,161,51)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5947%" y="485" width="0.0806%" height="15" fill="rgb(239,112,27)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="81.9500%" y="613" width="0.8058%" height="15" fill="rgb(248,122,18)" fg:x="1017" fg:w="10"/><text x="82.2000%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="82.6753%" y="597" width="0.0806%" height="15" fill="rgb(245,130,23)" fg:x="1026" fg:w="1"/><text x="82.9253%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="82.6753%" y="581" width="0.0806%" height="15" fill="rgb(211,225,28)" fg:x="1026" fg:w="1"/><text x="82.9253%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.6753%" y="565" width="0.0806%" height="15" fill="rgb(242,105,44)" fg:x="1026" fg:w="1"/><text x="82.9253%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.6753%" y="549" width="0.0806%" height="15" fill="rgb(216,183,46)" fg:x="1026" fg:w="1"/><text x="82.9253%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.6753%" y="533" width="0.0806%" height="15" fill="rgb(227,112,9)" fg:x="1026" fg:w="1"/><text x="82.9253%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.6753%" y="517" width="0.0806%" height="15" fill="rgb(244,21,0)" fg:x="1026" fg:w="1"/><text x="82.9253%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.6753%" y="501" width="0.0806%" height="15" fill="rgb(236,185,14)" fg:x="1026" fg:w="1"/><text x="82.9253%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (80 samples, 6.45%)</title><rect x="76.3900%" y="661" width="6.4464%" height="15" fill="rgb(236,170,30)" fg:x="948" fg:w="80"/><text x="76.6400%" y="671.50">plugins_..</text></g><g><title>plugins_core::build::Build::wearing (12 samples, 0.97%)</title><rect x="81.8695%" y="645" width="0.9670%" height="15" fill="rgb(209,198,51)" fg:x="1016" fg:w="12"/><text x="82.1195%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (11 samples, 0.89%)</title><rect x="81.9500%" y="629" width="0.8864%" height="15" fill="rgb(205,171,26)" fg:x="1017" fg:w="11"/><text x="82.2000%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.7558%" y="613" width="0.0806%" height="15" fill="rgb(246,41,49)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.7558%" y="597" width="0.0806%" height="15" fill="rgb(240,229,12)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7558%" y="581" width="0.0806%" height="15" fill="rgb(212,8,54)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7558%" y="565" width="0.0806%" height="15" fill="rgb(230,114,13)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="82.7558%" y="549" width="0.0806%" height="15" fill="rgb(229,130,28)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="82.7558%" y="533" width="0.0806%" height="15" fill="rgb(206,139,15)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="82.8364%" y="661" width="0.0806%" height="15" fill="rgb(241,188,35)" fg:x="1028" fg:w="1"/><text x="83.0864%" y="671.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="82.8364%" y="645" width="0.0806%" height="15" fill="rgb(208,224,26)" fg:x="1028" fg:w="1"/><text x="83.0864%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.9976%" y="613" width="0.0806%" height="15" fill="rgb(251,131,28)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="82.9976%" y="629" width="0.3223%" height="15" fill="rgb(208,153,1)" fg:x="1030" fg:w="4"/><text x="83.2476%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="83.0782%" y="613" width="0.2417%" height="15" fill="rgb(234,33,36)" fg:x="1031" fg:w="3"/><text x="83.3282%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="83.0782%" y="597" width="0.2417%" height="15" fill="rgb(246,42,29)" fg:x="1031" fg:w="3"/><text x="83.3282%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="83.0782%" y="581" width="0.2417%" height="15" fill="rgb(251,114,16)" fg:x="1031" fg:w="3"/><text x="83.3282%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.2393%" y="565" width="0.0806%" height="15" fill="rgb(233,13,38)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.2393%" y="549" width="0.0806%" height="15" fill="rgb(247,120,19)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="83.2393%" y="533" width="0.0806%" height="15" fill="rgb(205,11,16)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.3199%" y="597" width="0.0806%" height="15" fill="rgb(228,185,19)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.3199%" y="581" width="0.0806%" height="15" fill="rgb(239,88,52)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.3199%" y="565" width="0.0806%" height="15" fill="rgb(219,23,1)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.3199%" y="549" width="0.0806%" height="15" fill="rgb(253,177,16)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.3199%" y="533" width="0.0806%" height="15" fill="rgb(225,150,40)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.3199%" y="517" width="0.0806%" height="15" fill="rgb(208,108,30)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.3199%" y="501" width="0.0806%" height="15" fill="rgb(214,122,4)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.3199%" y="485" width="0.0806%" height="15" fill="rgb(229,74,37)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.3199%" y="469" width="0.0806%" height="15" fill="rgb(233,61,41)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.3199%" y="453" width="0.0806%" height="15" fill="rgb(238,191,5)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="83.4005%" y="597" width="0.0806%" height="15" fill="rgb(233,78,24)" fg:x="1035" fg:w="1"/><text x="83.6505%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.4005%" y="581" width="0.0806%" height="15" fill="rgb(211,142,8)" fg:x="1035" fg:w="1"/><text x="83.6505%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.4005%" y="565" width="0.0806%" height="15" fill="rgb(253,38,53)" fg:x="1035" fg:w="1"/><text x="83.6505%" y="575.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="83.4811%" y="597" width="0.0806%" height="15" fill="rgb(234,63,51)" fg:x="1036" fg:w="1"/><text x="83.7311%" y="607.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="83.4811%" y="581" width="0.0806%" height="15" fill="rgb(205,23,31)" fg:x="1036" fg:w="1"/><text x="83.7311%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.4811%" y="565" width="0.0806%" height="15" fill="rgb(210,184,50)" fg:x="1036" fg:w="1"/><text x="83.7311%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.4811%" y="549" width="0.0806%" height="15" fill="rgb(222,112,26)" fg:x="1036" fg:w="1"/><text x="83.7311%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="83.5616%" y="597" width="0.0806%" height="15" fill="rgb(250,98,18)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="83.5616%" y="581" width="0.0806%" height="15" fill="rgb(250,34,12)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="83.5616%" y="565" width="0.0806%" height="15" fill="rgb(236,141,30)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.5616%" y="549" width="0.0806%" height="15" fill="rgb(246,134,38)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.5616%" y="533" width="0.0806%" height="15" fill="rgb(240,114,4)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.5616%" y="517" width="0.0806%" height="15" fill="rgb(243,113,39)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.5616%" y="501" width="0.0806%" height="15" fill="rgb(239,215,4)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5616%" y="485" width="0.0806%" height="15" fill="rgb(236,229,45)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="83.6422%" y="581" width="0.1612%" height="15" fill="rgb(242,2,6)" fg:x="1038" fg:w="2"/><text x="83.8922%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.6422%" y="565" width="0.1612%" height="15" fill="rgb(239,108,21)" fg:x="1038" fg:w="2"/><text x="83.8922%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.6422%" y="549" width="0.1612%" height="15" fill="rgb(215,168,34)" fg:x="1038" fg:w="2"/><text x="83.8922%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7228%" y="533" width="0.0806%" height="15" fill="rgb(238,31,17)" fg:x="1039" fg:w="1"/><text x="83.9728%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="83.6422%" y="597" width="0.2417%" height="15" fill="rgb(220,133,11)" fg:x="1038" fg:w="3"/><text x="83.8922%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="83.8034%" y="581" width="0.0806%" height="15" fill="rgb(212,158,23)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.8034%" y="565" width="0.0806%" height="15" fill="rgb(223,172,7)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.8034%" y="549" width="0.0806%" height="15" fill="rgb(244,3,52)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.8034%" y="533" width="0.0806%" height="15" fill="rgb(207,69,27)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.8034%" y="517" width="0.0806%" height="15" fill="rgb(213,136,45)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (13 samples, 1.05%)</title><rect x="82.9170%" y="661" width="1.0475%" height="15" fill="rgb(218,79,17)" fg:x="1029" fg:w="13"/><text x="83.1670%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (13 samples, 1.05%)</title><rect x="82.9170%" y="645" width="1.0475%" height="15" fill="rgb(216,106,36)" fg:x="1029" fg:w="13"/><text x="83.1670%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="83.3199%" y="629" width="0.6446%" height="15" fill="rgb(251,27,45)" fg:x="1034" fg:w="8"/><text x="83.5699%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="83.3199%" y="613" width="0.6446%" height="15" fill="rgb(232,21,34)" fg:x="1034" fg:w="8"/><text x="83.5699%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="83.8840%" y="597" width="0.0806%" height="15" fill="rgb(249,191,16)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="83.8840%" y="581" width="0.0806%" height="15" fill="rgb(224,88,20)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.8840%" y="565" width="0.0806%" height="15" fill="rgb(237,93,27)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.8840%" y="549" width="0.0806%" height="15" fill="rgb(226,198,48)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.8840%" y="533" width="0.0806%" height="15" fill="rgb(207,162,53)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.8840%" y="517" width="0.0806%" height="15" fill="rgb(207,169,9)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0451%" y="565" width="0.0806%" height="15" fill="rgb(224,166,46)" fg:x="1043" fg:w="1"/><text x="84.2951%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="84.0451%" y="613" width="0.1612%" height="15" fill="rgb(233,26,6)" fg:x="1043" fg:w="2"/><text x="84.2951%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="84.0451%" y="597" width="0.1612%" height="15" fill="rgb(218,106,45)" fg:x="1043" fg:w="2"/><text x="84.2951%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.0451%" y="581" width="0.1612%" height="15" fill="rgb(240,217,4)" fg:x="1043" fg:w="2"/><text x="84.2951%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1257%" y="565" width="0.0806%" height="15" fill="rgb(246,171,10)" fg:x="1044" fg:w="1"/><text x="84.3757%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="84.1257%" y="549" width="0.0806%" height="15" fill="rgb(223,197,30)" fg:x="1044" fg:w="1"/><text x="84.3757%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="84.2063%" y="613" width="0.0806%" height="15" fill="rgb(207,92,16)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.2063%" y="597" width="0.0806%" height="15" fill="rgb(211,6,44)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.2063%" y="581" width="0.0806%" height="15" fill="rgb(219,139,2)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2063%" y="565" width="0.0806%" height="15" fill="rgb(224,103,21)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2063%" y="549" width="0.0806%" height="15" fill="rgb(254,110,48)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2063%" y="533" width="0.0806%" height="15" fill="rgb(212,88,19)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2063%" y="517" width="0.0806%" height="15" fill="rgb(248,103,6)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="84.0451%" y="629" width="0.3223%" height="15" fill="rgb(214,53,46)" fg:x="1043" fg:w="4"/><text x="84.2951%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="84.2869%" y="613" width="0.0806%" height="15" fill="rgb(236,190,24)" fg:x="1046" fg:w="1"/><text x="84.5369%" y="623.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="84.2869%" y="597" width="0.0806%" height="15" fill="rgb(254,58,28)" fg:x="1046" fg:w="1"/><text x="84.5369%" y="607.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="84.2869%" y="581" width="0.0806%" height="15" fill="rgb(243,63,27)" fg:x="1046" fg:w="1"/><text x="84.5369%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="84.2869%" y="565" width="0.0806%" height="15" fill="rgb(206,81,20)" fg:x="1046" fg:w="1"/><text x="84.5369%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="84.0451%" y="645" width="0.4029%" height="15" fill="rgb(252,69,51)" fg:x="1043" fg:w="5"/><text x="84.2951%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.3674%" y="629" width="0.0806%" height="15" fill="rgb(222,213,4)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.3674%" y="613" width="0.0806%" height="15" fill="rgb(226,198,12)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3674%" y="597" width="0.0806%" height="15" fill="rgb(248,115,11)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3674%" y="581" width="0.0806%" height="15" fill="rgb(221,148,54)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="591.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (143 samples, 11.52%)</title><rect x="73.0056%" y="677" width="11.5230%" height="15" fill="rgb(214,209,51)" fg:x="906" fg:w="143"/><text x="73.2556%" y="687.50">&lt;tests::HoldingKe..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (7 samples, 0.56%)</title><rect x="83.9645%" y="661" width="0.5641%" height="15" fill="rgb(249,116,53)" fg:x="1042" fg:w="7"/><text x="84.2145%" y="671.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="84.4480%" y="645" width="0.0806%" height="15" fill="rgb(248,170,1)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="655.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="84.4480%" y="629" width="0.0806%" height="15" fill="rgb(244,105,10)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="84.4480%" y="613" width="0.0806%" height="15" fill="rgb(229,100,5)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="623.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="84.4480%" y="597" width="0.0806%" height="15" fill="rgb(233,221,39)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="84.4480%" y="581" width="0.0806%" height="15" fill="rgb(233,88,21)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="591.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="84.4480%" y="565" width="0.0806%" height="15" fill="rgb(206,13,0)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="84.4480%" y="549" width="0.0806%" height="15" fill="rgb(242,15,35)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4480%" y="533" width="0.0806%" height="15" fill="rgb(247,142,41)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4480%" y="517" width="0.0806%" height="15" fill="rgb(245,51,29)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.4480%" y="501" width="0.0806%" height="15" fill="rgb(228,209,43)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.4480%" y="485" width="0.0806%" height="15" fill="rgb(233,185,9)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.4480%" y="469" width="0.0806%" height="15" fill="rgb(226,93,0)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.4480%" y="453" width="0.0806%" height="15" fill="rgb(245,194,43)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="463.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="84.6092%" y="661" width="0.0806%" height="15" fill="rgb(211,145,34)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="671.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="84.6092%" y="645" width="0.0806%" height="15" fill="rgb(231,228,28)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="655.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="84.6092%" y="629" width="0.0806%" height="15" fill="rgb(236,149,4)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="639.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="84.6092%" y="613" width="0.0806%" height="15" fill="rgb(234,114,38)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="623.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="84.6092%" y="597" width="0.0806%" height="15" fill="rgb(246,132,51)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="607.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="84.6092%" y="581" width="0.0806%" height="15" fill="rgb(251,137,22)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="84.6092%" y="565" width="0.0806%" height="15" fill="rgb(243,59,52)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="575.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="84.6092%" y="549" width="0.0806%" height="15" fill="rgb(239,56,28)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.6898%" y="629" width="0.0806%" height="15" fill="rgb(218,168,27)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.6898%" y="613" width="0.0806%" height="15" fill="rgb(232,165,11)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="84.6898%" y="597" width="0.0806%" height="15" fill="rgb(253,55,41)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.6898%" y="581" width="0.0806%" height="15" fill="rgb(233,206,24)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.6898%" y="565" width="0.0806%" height="15" fill="rgb(220,199,8)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.6898%" y="549" width="0.0806%" height="15" fill="rgb(254,65,26)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.6898%" y="533" width="0.0806%" height="15" fill="rgb(253,102,23)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.6898%" y="517" width="0.0806%" height="15" fill="rgb(231,103,35)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.6898%" y="501" width="0.0806%" height="15" fill="rgb(238,26,10)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.6898%" y="485" width="0.0806%" height="15" fill="rgb(234,191,34)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.6898%" y="469" width="0.0806%" height="15" fill="rgb(206,210,9)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.6898%" y="453" width="0.0806%" height="15" fill="rgb(219,155,3)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.6898%" y="437" width="0.0806%" height="15" fill="rgb(221,62,52)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.6898%" y="421" width="0.0806%" height="15" fill="rgb(215,197,36)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.7703%" y="517" width="0.0806%" height="15" fill="rgb(226,222,6)" fg:x="1052" fg:w="1"/><text x="85.0203%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="84.7703%" y="549" width="0.1612%" height="15" fill="rgb(215,58,28)" fg:x="1052" fg:w="2"/><text x="85.0203%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="84.7703%" y="533" width="0.1612%" height="15" fill="rgb(212,148,2)" fg:x="1052" fg:w="2"/><text x="85.0203%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="84.8509%" y="517" width="0.0806%" height="15" fill="rgb(208,21,42)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="84.8509%" y="501" width="0.0806%" height="15" fill="rgb(209,107,26)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.8509%" y="485" width="0.0806%" height="15" fill="rgb(254,60,47)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.8509%" y="469" width="0.0806%" height="15" fill="rgb(207,226,45)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.8509%" y="453" width="0.0806%" height="15" fill="rgb(223,124,22)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.8509%" y="437" width="0.0806%" height="15" fill="rgb(240,162,13)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="84.9315%" y="533" width="0.0806%" height="15" fill="rgb(244,199,31)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.9315%" y="517" width="0.0806%" height="15" fill="rgb(207,92,16)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.9315%" y="501" width="0.0806%" height="15" fill="rgb(215,31,19)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.9315%" y="485" width="0.0806%" height="15" fill="rgb(245,118,14)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.9315%" y="469" width="0.0806%" height="15" fill="rgb(248,12,46)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.9315%" y="453" width="0.0806%" height="15" fill="rgb(209,119,0)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0121%" y="501" width="0.0806%" height="15" fill="rgb(254,51,44)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.0121%" y="485" width="0.0806%" height="15" fill="rgb(253,182,35)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0121%" y="469" width="0.0806%" height="15" fill="rgb(205,198,39)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1732%" y="453" width="0.0806%" height="15" fill="rgb(251,175,48)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1732%" y="437" width="0.0806%" height="15" fill="rgb(239,38,17)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="85.0927%" y="501" width="0.2417%" height="15" fill="rgb(212,101,8)" fg:x="1056" fg:w="3"/><text x="85.3427%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="85.1732%" y="485" width="0.1612%" height="15" fill="rgb(228,35,17)" fg:x="1057" fg:w="2"/><text x="85.4232%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="85.1732%" y="469" width="0.1612%" height="15" fill="rgb(214,95,8)" fg:x="1057" fg:w="2"/><text x="85.4232%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.2538%" y="453" width="0.0806%" height="15" fill="rgb(210,176,35)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2538%" y="437" width="0.0806%" height="15" fill="rgb(226,4,3)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2538%" y="421" width="0.0806%" height="15" fill="rgb(232,133,14)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="85.0121%" y="533" width="0.4029%" height="15" fill="rgb(250,191,8)" fg:x="1055" fg:w="5"/><text x="85.2621%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="85.0121%" y="517" width="0.4029%" height="15" fill="rgb(213,12,45)" fg:x="1055" fg:w="5"/><text x="85.2621%" y="527.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="85.3344%" y="501" width="0.0806%" height="15" fill="rgb(233,78,26)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="511.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.3344%" y="485" width="0.0806%" height="15" fill="rgb(245,222,11)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.4150%" y="389" width="0.0806%" height="15" fill="rgb(216,174,12)" fg:x="1060" fg:w="1"/><text x="85.6650%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.4150%" y="373" width="0.0806%" height="15" fill="rgb(213,15,9)" fg:x="1060" fg:w="1"/><text x="85.6650%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="85.4150%" y="405" width="0.1612%" height="15" fill="rgb(238,103,32)" fg:x="1060" fg:w="2"/><text x="85.6650%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.4956%" y="389" width="0.0806%" height="15" fill="rgb(245,85,15)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.4956%" y="373" width="0.0806%" height="15" fill="rgb(254,204,5)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.4956%" y="357" width="0.0806%" height="15" fill="rgb(231,178,15)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.5761%" y="405" width="0.0806%" height="15" fill="rgb(248,151,3)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.5761%" y="389" width="0.0806%" height="15" fill="rgb(250,139,13)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.97%)</title><rect x="84.7703%" y="581" width="0.9670%" height="15" fill="rgb(243,107,53)" fg:x="1052" fg:w="12"/><text x="85.0203%" y="591.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (12 samples, 0.97%)</title><rect x="84.7703%" y="565" width="0.9670%" height="15" fill="rgb(232,81,15)" fg:x="1052" fg:w="12"/><text x="85.0203%" y="575.50"></text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.81%)</title><rect x="84.9315%" y="549" width="0.8058%" height="15" fill="rgb(225,187,48)" fg:x="1054" fg:w="10"/><text x="85.1815%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="85.4150%" y="533" width="0.3223%" height="15" fill="rgb(205,116,12)" fg:x="1060" fg:w="4"/><text x="85.6650%" y="543.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="85.4150%" y="517" width="0.3223%" height="15" fill="rgb(220,222,31)" fg:x="1060" fg:w="4"/><text x="85.6650%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="85.4150%" y="501" width="0.3223%" height="15" fill="rgb(233,187,49)" fg:x="1060" fg:w="4"/><text x="85.6650%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="85.4150%" y="485" width="0.3223%" height="15" fill="rgb(211,168,53)" fg:x="1060" fg:w="4"/><text x="85.6650%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="85.4150%" y="469" width="0.3223%" height="15" fill="rgb(206,160,16)" fg:x="1060" fg:w="4"/><text x="85.6650%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="85.4150%" y="453" width="0.3223%" height="15" fill="rgb(254,164,13)" fg:x="1060" fg:w="4"/><text x="85.6650%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="85.4150%" y="437" width="0.3223%" height="15" fill="rgb(229,45,30)" fg:x="1060" fg:w="4"/><text x="85.6650%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="85.4150%" y="421" width="0.3223%" height="15" fill="rgb(237,32,10)" fg:x="1060" fg:w="4"/><text x="85.6650%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6567%" y="405" width="0.0806%" height="15" fill="rgb(251,20,47)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6567%" y="389" width="0.0806%" height="15" fill="rgb(251,116,12)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.6567%" y="373" width="0.0806%" height="15" fill="rgb(214,227,27)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.7373%" y="581" width="0.0806%" height="15" fill="rgb(248,10,53)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.7373%" y="565" width="0.0806%" height="15" fill="rgb(221,176,25)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.7373%" y="549" width="0.0806%" height="15" fill="rgb(205,70,46)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="85.8179%" y="549" width="0.0806%" height="15" fill="rgb(217,45,38)" fg:x="1065" fg:w="1"/><text x="86.0679%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.8179%" y="533" width="0.0806%" height="15" fill="rgb(243,6,54)" fg:x="1065" fg:w="1"/><text x="86.0679%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.8179%" y="517" width="0.0806%" height="15" fill="rgb(242,76,23)" fg:x="1065" fg:w="1"/><text x="86.0679%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.8179%" y="501" width="0.0806%" height="15" fill="rgb(239,166,0)" fg:x="1065" fg:w="1"/><text x="86.0679%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.8985%" y="533" width="0.0806%" height="15" fill="rgb(238,174,32)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="85.9790%" y="533" width="0.1612%" height="15" fill="rgb(238,124,44)" fg:x="1067" fg:w="2"/><text x="86.2290%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.9790%" y="517" width="0.1612%" height="15" fill="rgb(206,185,9)" fg:x="1067" fg:w="2"/><text x="86.2290%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.0596%" y="501" width="0.0806%" height="15" fill="rgb(215,157,17)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.0596%" y="485" width="0.0806%" height="15" fill="rgb(251,17,29)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.2208%" y="517" width="0.0806%" height="15" fill="rgb(227,113,27)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.2208%" y="501" width="0.0806%" height="15" fill="rgb(217,226,24)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.3014%" y="517" width="0.0806%" height="15" fill="rgb(251,99,38)" fg:x="1071" fg:w="1"/><text x="86.5514%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.4625%" y="501" width="0.0806%" height="15" fill="rgb(231,147,19)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.4625%" y="485" width="0.0806%" height="15" fill="rgb(230,86,8)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.4625%" y="469" width="0.0806%" height="15" fill="rgb(237,159,39)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.5431%" y="501" width="0.1612%" height="15" fill="rgb(247,179,47)" fg:x="1074" fg:w="2"/><text x="86.7931%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.6237%" y="485" width="0.0806%" height="15" fill="rgb(253,152,26)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.6237%" y="469" width="0.0806%" height="15" fill="rgb(222,211,15)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.6237%" y="453" width="0.0806%" height="15" fill="rgb(236,193,6)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="86.3820%" y="517" width="0.4835%" height="15" fill="rgb(226,206,10)" fg:x="1072" fg:w="6"/><text x="86.6320%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="86.7043%" y="501" width="0.1612%" height="15" fill="rgb(213,125,22)" fg:x="1076" fg:w="2"/><text x="86.9543%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.7849%" y="485" width="0.0806%" height="15" fill="rgb(221,66,28)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="85.8985%" y="549" width="1.0475%" height="15" fill="rgb(222,84,53)" fg:x="1066" fg:w="13"/><text x="86.1485%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="86.1402%" y="533" width="0.8058%" height="15" fill="rgb(243,50,15)" fg:x="1069" fg:w="10"/><text x="86.3902%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.8654%" y="517" width="0.0806%" height="15" fill="rgb(208,184,23)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.21%)</title><rect x="85.8179%" y="565" width="1.2087%" height="15" fill="rgb(221,83,2)" fg:x="1065" fg:w="15"/><text x="86.0679%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.9460%" y="549" width="0.0806%" height="15" fill="rgb(236,53,24)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.9460%" y="533" width="0.0806%" height="15" fill="rgb(244,171,29)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.9460%" y="517" width="0.0806%" height="15" fill="rgb(205,19,11)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0266%" y="565" width="0.0806%" height="15" fill="rgb(207,108,29)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.0266%" y="549" width="0.0806%" height="15" fill="rgb(236,215,43)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0266%" y="533" width="0.0806%" height="15" fill="rgb(213,58,35)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0266%" y="517" width="0.0806%" height="15" fill="rgb(220,211,46)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0266%" y="501" width="0.0806%" height="15" fill="rgb(212,134,16)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0266%" y="485" width="0.0806%" height="15" fill="rgb(232,90,44)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.1072%" y="485" width="0.1612%" height="15" fill="rgb(212,18,36)" fg:x="1081" fg:w="2"/><text x="87.3572%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2683%" y="469" width="0.0806%" height="15" fill="rgb(206,112,24)" fg:x="1083" fg:w="1"/><text x="87.5183%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="87.1072%" y="533" width="0.4029%" height="15" fill="rgb(238,223,40)" fg:x="1081" fg:w="5"/><text x="87.3572%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="87.1072%" y="517" width="0.4029%" height="15" fill="rgb(226,169,20)" fg:x="1081" fg:w="5"/><text x="87.3572%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="87.1072%" y="501" width="0.4029%" height="15" fill="rgb(241,64,52)" fg:x="1081" fg:w="5"/><text x="87.3572%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="87.2683%" y="485" width="0.2417%" height="15" fill="rgb(228,120,25)" fg:x="1083" fg:w="3"/><text x="87.5183%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.3489%" y="469" width="0.1612%" height="15" fill="rgb(234,108,19)" fg:x="1084" fg:w="2"/><text x="87.5989%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.4295%" y="453" width="0.0806%" height="15" fill="rgb(236,133,29)" fg:x="1085" fg:w="1"/><text x="87.6795%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (6 samples, 0.48%)</title><rect x="87.1072%" y="549" width="0.4835%" height="15" fill="rgb(246,174,53)" fg:x="1081" fg:w="6"/><text x="87.3572%" y="559.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="87.5101%" y="533" width="0.0806%" height="15" fill="rgb(210,105,35)" fg:x="1086" fg:w="1"/><text x="87.7601%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="87.5101%" y="517" width="0.0806%" height="15" fill="rgb(225,27,26)" fg:x="1086" fg:w="1"/><text x="87.7601%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.5101%" y="501" width="0.0806%" height="15" fill="rgb(233,2,39)" fg:x="1086" fg:w="1"/><text x="87.7601%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="87.5907%" y="517" width="0.0806%" height="15" fill="rgb(219,164,26)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="87.6712%" y="517" width="0.0806%" height="15" fill="rgb(236,211,5)" fg:x="1088" fg:w="1"/><text x="87.9212%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.6712%" y="501" width="0.0806%" height="15" fill="rgb(244,227,23)" fg:x="1088" fg:w="1"/><text x="87.9212%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.7518%" y="501" width="0.0806%" height="15" fill="rgb(230,184,8)" fg:x="1089" fg:w="1"/><text x="88.0018%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.9936%" y="437" width="0.0806%" height="15" fill="rgb(217,125,48)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="87.9130%" y="469" width="0.2417%" height="15" fill="rgb(223,192,47)" fg:x="1091" fg:w="3"/><text x="88.1630%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="87.9130%" y="453" width="0.2417%" height="15" fill="rgb(226,119,10)" fg:x="1091" fg:w="3"/><text x="88.1630%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="88.0741%" y="437" width="0.0806%" height="15" fill="rgb(221,49,29)" fg:x="1093" fg:w="1"/><text x="88.3241%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="88.0741%" y="421" width="0.0806%" height="15" fill="rgb(217,205,19)" fg:x="1093" fg:w="1"/><text x="88.3241%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="88.1547%" y="469" width="0.3223%" height="15" fill="rgb(242,104,7)" fg:x="1094" fg:w="4"/><text x="88.4047%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="88.1547%" y="453" width="0.3223%" height="15" fill="rgb(209,154,48)" fg:x="1094" fg:w="4"/><text x="88.4047%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="88.2353%" y="437" width="0.2417%" height="15" fill="rgb(219,213,46)" fg:x="1095" fg:w="3"/><text x="88.4853%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="88.2353%" y="421" width="0.2417%" height="15" fill="rgb(229,105,38)" fg:x="1095" fg:w="3"/><text x="88.4853%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.3159%" y="405" width="0.1612%" height="15" fill="rgb(205,151,5)" fg:x="1096" fg:w="2"/><text x="88.5659%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.3965%" y="389" width="0.0806%" height="15" fill="rgb(248,115,40)" fg:x="1097" fg:w="1"/><text x="88.6465%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.4770%" y="437" width="0.1612%" height="15" fill="rgb(206,179,2)" fg:x="1098" fg:w="2"/><text x="88.7270%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.5576%" y="421" width="0.0806%" height="15" fill="rgb(230,103,24)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="88.5576%" y="405" width="0.0806%" height="15" fill="rgb(218,152,4)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="88.4770%" y="453" width="0.2417%" height="15" fill="rgb(236,161,54)" fg:x="1098" fg:w="3"/><text x="88.7270%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.6382%" y="437" width="0.0806%" height="15" fill="rgb(226,65,17)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.6382%" y="421" width="0.0806%" height="15" fill="rgb(221,134,44)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6382%" y="405" width="0.0806%" height="15" fill="rgb(251,129,4)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6382%" y="389" width="0.0806%" height="15" fill="rgb(244,32,34)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6382%" y="373" width="0.0806%" height="15" fill="rgb(251,224,37)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="383.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (15 samples, 1.21%)</title><rect x="87.5907%" y="549" width="1.2087%" height="15" fill="rgb(248,117,31)" fg:x="1087" fg:w="15"/><text x="87.8407%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.21%)</title><rect x="87.5907%" y="533" width="1.2087%" height="15" fill="rgb(222,208,37)" fg:x="1087" fg:w="15"/><text x="87.8407%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.05%)</title><rect x="87.7518%" y="517" width="1.0475%" height="15" fill="rgb(234,211,25)" fg:x="1089" fg:w="13"/><text x="88.0018%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="87.8324%" y="501" width="0.9670%" height="15" fill="rgb(211,72,6)" fg:x="1090" fg:w="12"/><text x="88.0824%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.97%)</title><rect x="87.8324%" y="485" width="0.9670%" height="15" fill="rgb(249,198,38)" fg:x="1090" fg:w="12"/><text x="88.0824%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="88.4770%" y="469" width="0.3223%" height="15" fill="rgb(221,86,51)" fg:x="1098" fg:w="4"/><text x="88.7270%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7188%" y="453" width="0.0806%" height="15" fill="rgb(226,178,43)" fg:x="1101" fg:w="1"/><text x="88.9688%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.1217%" y="389" width="0.0806%" height="15" fill="rgb(215,145,7)" fg:x="1106" fg:w="1"/><text x="89.3717%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1217%" y="373" width="0.0806%" height="15" fill="rgb(250,202,36)" fg:x="1106" fg:w="1"/><text x="89.3717%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.1217%" y="357" width="0.0806%" height="15" fill="rgb(215,86,13)" fg:x="1106" fg:w="1"/><text x="89.3717%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.1217%" y="341" width="0.0806%" height="15" fill="rgb(221,134,12)" fg:x="1106" fg:w="1"/><text x="89.3717%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.1217%" y="325" width="0.0806%" height="15" fill="rgb(213,82,10)" fg:x="1106" fg:w="1"/><text x="89.3717%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="88.9605%" y="421" width="0.4029%" height="15" fill="rgb(214,142,0)" fg:x="1104" fg:w="5"/><text x="89.2105%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="88.9605%" y="405" width="0.4029%" height="15" fill="rgb(205,145,9)" fg:x="1104" fg:w="5"/><text x="89.2105%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.2023%" y="389" width="0.1612%" height="15" fill="rgb(244,214,8)" fg:x="1107" fg:w="2"/><text x="89.4523%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.2023%" y="373" width="0.1612%" height="15" fill="rgb(224,72,51)" fg:x="1107" fg:w="2"/><text x="89.4523%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="89.2023%" y="357" width="0.1612%" height="15" fill="rgb(233,137,37)" fg:x="1107" fg:w="2"/><text x="89.4523%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="88.9605%" y="437" width="0.5641%" height="15" fill="rgb(208,71,28)" fg:x="1104" fg:w="7"/><text x="89.2105%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.3634%" y="421" width="0.1612%" height="15" fill="rgb(226,31,7)" fg:x="1109" fg:w="2"/><text x="89.6134%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.4440%" y="405" width="0.0806%" height="15" fill="rgb(229,62,18)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4440%" y="389" width="0.0806%" height="15" fill="rgb(226,74,28)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="88.9605%" y="453" width="0.6446%" height="15" fill="rgb(214,170,18)" fg:x="1104" fg:w="8"/><text x="89.2105%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.5246%" y="437" width="0.0806%" height="15" fill="rgb(227,229,35)" fg:x="1111" fg:w="1"/><text x="89.7746%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.89%)</title><rect x="88.7994%" y="485" width="0.8864%" height="15" fill="rgb(225,181,39)" fg:x="1102" fg:w="11"/><text x="89.0494%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="88.7994%" y="469" width="0.8864%" height="15" fill="rgb(253,124,44)" fg:x="1102" fg:w="11"/><text x="89.0494%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.6052%" y="453" width="0.0806%" height="15" fill="rgb(220,75,18)" fg:x="1112" fg:w="1"/><text x="89.8552%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.6052%" y="437" width="0.0806%" height="15" fill="rgb(239,175,43)" fg:x="1112" fg:w="1"/><text x="89.8552%" y="447.50"></text></g><g><title>engine::session::Session::close (65 samples, 5.24%)</title><rect x="84.5286%" y="677" width="5.2377%" height="15" fill="rgb(228,112,50)" fg:x="1049" fg:w="65"/><text x="84.7786%" y="687.50">engine..</text></g><g><title>engine::session::state::State::close (63 samples, 5.08%)</title><rect x="84.6898%" y="661" width="5.0766%" height="15" fill="rgb(232,105,36)" fg:x="1051" fg:w="63"/><text x="84.9398%" y="671.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (63 samples, 5.08%)</title><rect x="84.6898%" y="645" width="5.0766%" height="15" fill="rgb(227,137,47)" fg:x="1051" fg:w="63"/><text x="84.9398%" y="655.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (62 samples, 5.00%)</title><rect x="84.7703%" y="629" width="4.9960%" height="15" fill="rgb(217,51,9)" fg:x="1052" fg:w="62"/><text x="85.0203%" y="639.50">engine..</text></g><g><title>core::iter::adapters::try_process (62 samples, 5.00%)</title><rect x="84.7703%" y="613" width="4.9960%" height="15" fill="rgb(245,117,0)" fg:x="1052" fg:w="62"/><text x="85.0203%" y="623.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (62 samples, 5.00%)</title><rect x="84.7703%" y="597" width="4.9960%" height="15" fill="rgb(252,52,30)" fg:x="1052" fg:w="62"/><text x="85.0203%" y="607.50">&lt;alloc..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (49 samples, 3.95%)</title><rect x="85.8179%" y="581" width="3.9484%" height="15" fill="rgb(227,85,33)" fg:x="1065" fg:w="49"/><text x="86.0679%" y="591.50">engi..</text></g><g><title>kernel::model::any_entity_changes (33 samples, 2.66%)</title><rect x="87.1072%" y="565" width="2.6591%" height="15" fill="rgb(220,157,20)" fg:x="1081" fg:w="33"/><text x="87.3572%" y="575.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.97%)</title><rect x="88.7994%" y="549" width="0.9670%" height="15" fill="rgb(254,14,34)" fg:x="1102" fg:w="12"/><text x="89.0494%" y="559.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.97%)</title><rect x="88.7994%" y="533" width="0.9670%" height="15" fill="rgb(216,103,41)" fg:x="1102" fg:w="12"/><text x="89.0494%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.97%)</title><rect x="88.7994%" y="517" width="0.9670%" height="15" fill="rgb(245,221,9)" fg:x="1102" fg:w="12"/><text x="89.0494%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="88.7994%" y="501" width="0.9670%" height="15" fill="rgb(254,136,47)" fg:x="1102" fg:w="12"/><text x="89.0494%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.6857%" y="485" width="0.0806%" height="15" fill="rgb(235,71,46)" fg:x="1113" fg:w="1"/><text x="89.9357%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7663%" y="469" width="0.0806%" height="15" fill="rgb(242,154,29)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7663%" y="453" width="0.0806%" height="15" fill="rgb(210,65,31)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="89.7663%" y="501" width="0.1612%" height="15" fill="rgb(244,9,50)" fg:x="1114" fg:w="2"/><text x="90.0163%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="89.7663%" y="485" width="0.1612%" height="15" fill="rgb(215,141,38)" fg:x="1114" fg:w="2"/><text x="90.0163%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.8469%" y="469" width="0.0806%" height="15" fill="rgb(241,129,6)" fg:x="1115" fg:w="1"/><text x="90.0969%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8469%" y="453" width="0.0806%" height="15" fill="rgb(253,169,4)" fg:x="1115" fg:w="1"/><text x="90.0969%" y="463.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="89.7663%" y="549" width="0.2417%" height="15" fill="rgb(237,82,36)" fg:x="1114" fg:w="3"/><text x="90.0163%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (3 samples, 0.24%)</title><rect x="89.7663%" y="533" width="0.2417%" height="15" fill="rgb(209,171,11)" fg:x="1114" fg:w="3"/><text x="90.0163%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="89.7663%" y="517" width="0.2417%" height="15" fill="rgb(242,19,22)" fg:x="1114" fg:w="3"/><text x="90.0163%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.9275%" y="501" width="0.0806%" height="15" fill="rgb(251,122,24)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.9275%" y="485" width="0.0806%" height="15" fill="rgb(226,166,42)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.9275%" y="469" width="0.0806%" height="15" fill="rgb(244,101,48)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.9275%" y="453" width="0.0806%" height="15" fill="rgb(227,125,1)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.9275%" y="437" width="0.0806%" height="15" fill="rgb(206,79,43)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="89.9275%" y="421" width="0.0806%" height="15" fill="rgb(241,109,41)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="89.9275%" y="405" width="0.0806%" height="15" fill="rgb(219,73,4)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="89.9275%" y="389" width="0.0806%" height="15" fill="rgb(239,25,41)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="89.9275%" y="373" width="0.0806%" height="15" fill="rgb(208,88,46)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="89.9275%" y="357" width="0.0806%" height="15" fill="rgb(239,184,9)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="89.9275%" y="341" width="0.0806%" height="15" fill="rgb(223,114,13)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.9275%" y="325" width="0.0806%" height="15" fill="rgb(214,28,42)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="89.9275%" y="309" width="0.0806%" height="15" fill="rgb(252,32,44)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="89.9275%" y="293" width="0.0806%" height="15" fill="rgb(231,159,4)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="90.0081%" y="469" width="0.3223%" height="15" fill="rgb(210,35,26)" fg:x="1117" fg:w="4"/><text x="90.2581%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="90.0081%" y="453" width="0.3223%" height="15" fill="rgb(208,190,37)" fg:x="1117" fg:w="4"/><text x="90.2581%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.1692%" y="437" width="0.1612%" height="15" fill="rgb(226,148,22)" fg:x="1119" fg:w="2"/><text x="90.4192%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.1692%" y="421" width="0.1612%" height="15" fill="rgb(242,153,24)" fg:x="1119" fg:w="2"/><text x="90.4192%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.1692%" y="405" width="0.1612%" height="15" fill="rgb(213,133,7)" fg:x="1119" fg:w="2"/><text x="90.4192%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2498%" y="389" width="0.0806%" height="15" fill="rgb(248,206,18)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2498%" y="373" width="0.0806%" height="15" fill="rgb(233,157,4)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.2498%" y="357" width="0.0806%" height="15" fill="rgb(249,179,32)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.2498%" y="341" width="0.0806%" height="15" fill="rgb(248,69,35)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.2498%" y="325" width="0.0806%" height="15" fill="rgb(249,158,38)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.2498%" y="309" width="0.0806%" height="15" fill="rgb(223,18,43)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.2498%" y="293" width="0.0806%" height="15" fill="rgb(238,42,45)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.2498%" y="277" width="0.0806%" height="15" fill="rgb(219,65,47)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.2498%" y="261" width="0.0806%" height="15" fill="rgb(248,153,12)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.2498%" y="245" width="0.0806%" height="15" fill="rgb(240,118,4)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.2498%" y="229" width="0.0806%" height="15" fill="rgb(250,96,34)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2498%" y="213" width="0.0806%" height="15" fill="rgb(221,15,4)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="223.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="90.4110%" y="453" width="0.0806%" height="15" fill="rgb(217,149,33)" fg:x="1122" fg:w="1"/><text x="90.6610%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.4915%" y="405" width="0.0806%" height="15" fill="rgb(213,58,29)" fg:x="1123" fg:w="1"/><text x="90.7415%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.4915%" y="389" width="0.0806%" height="15" fill="rgb(236,218,9)" fg:x="1123" fg:w="1"/><text x="90.7415%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="90.0081%" y="517" width="0.6446%" height="15" fill="rgb(248,40,19)" fg:x="1117" fg:w="8"/><text x="90.2581%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (8 samples, 0.64%)</title><rect x="90.0081%" y="501" width="0.6446%" height="15" fill="rgb(212,17,6)" fg:x="1117" fg:w="8"/><text x="90.2581%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="90.0081%" y="485" width="0.6446%" height="15" fill="rgb(206,212,20)" fg:x="1117" fg:w="8"/><text x="90.2581%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="90.3304%" y="469" width="0.3223%" height="15" fill="rgb(229,80,37)" fg:x="1121" fg:w="4"/><text x="90.5804%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.4915%" y="453" width="0.1612%" height="15" fill="rgb(253,8,37)" fg:x="1123" fg:w="2"/><text x="90.7415%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.4915%" y="437" width="0.1612%" height="15" fill="rgb(215,16,43)" fg:x="1123" fg:w="2"/><text x="90.7415%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.4915%" y="421" width="0.1612%" height="15" fill="rgb(236,219,16)" fg:x="1123" fg:w="2"/><text x="90.7415%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.5721%" y="405" width="0.0806%" height="15" fill="rgb(251,0,3)" fg:x="1124" fg:w="1"/><text x="90.8221%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.5721%" y="389" width="0.0806%" height="15" fill="rgb(207,133,37)" fg:x="1124" fg:w="1"/><text x="90.8221%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6527%" y="517" width="0.0806%" height="15" fill="rgb(250,143,20)" fg:x="1125" fg:w="1"/><text x="90.9027%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6527%" y="501" width="0.0806%" height="15" fill="rgb(242,19,50)" fg:x="1125" fg:w="1"/><text x="90.9027%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6527%" y="485" width="0.0806%" height="15" fill="rgb(206,124,43)" fg:x="1125" fg:w="1"/><text x="90.9027%" y="495.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (13 samples, 1.05%)</title><rect x="89.7663%" y="581" width="1.0475%" height="15" fill="rgb(229,4,38)" fg:x="1114" fg:w="13"/><text x="90.0163%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (13 samples, 1.05%)</title><rect x="89.7663%" y="565" width="1.0475%" height="15" fill="rgb(247,220,45)" fg:x="1114" fg:w="13"/><text x="90.0163%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.81%)</title><rect x="90.0081%" y="549" width="0.8058%" height="15" fill="rgb(247,195,0)" fg:x="1117" fg:w="10"/><text x="90.2581%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.81%)</title><rect x="90.0081%" y="533" width="0.8058%" height="15" fill="rgb(252,12,19)" fg:x="1117" fg:w="10"/><text x="90.2581%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.7333%" y="517" width="0.0806%" height="15" fill="rgb(222,49,50)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7333%" y="501" width="0.0806%" height="15" fill="rgb(209,157,28)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.7333%" y="485" width="0.0806%" height="15" fill="rgb(238,174,24)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="495.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (2 samples, 0.16%)</title><rect x="90.8139%" y="389" width="0.1612%" height="15" fill="rgb(224,17,28)" fg:x="1127" fg:w="2"/><text x="91.0639%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="90.8139%" y="373" width="0.1612%" height="15" fill="rgb(249,7,29)" fg:x="1127" fg:w="2"/><text x="91.0639%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.8139%" y="357" width="0.1612%" height="15" fill="rgb(243,178,4)" fg:x="1127" fg:w="2"/><text x="91.0639%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.8944%" y="341" width="0.0806%" height="15" fill="rgb(246,138,35)" fg:x="1128" fg:w="1"/><text x="91.1444%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.8944%" y="325" width="0.0806%" height="15" fill="rgb(251,85,18)" fg:x="1128" fg:w="1"/><text x="91.1444%" y="335.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::AreaObservation&gt;&gt;::try_from (3 samples, 0.24%)</title><rect x="90.8139%" y="453" width="0.2417%" height="15" fill="rgb(254,55,9)" fg:x="1127" fg:w="3"/><text x="91.0639%" y="463.50"></text></g><g><title>&lt;replies::AreaObservation as replies::ToTaggedJson&gt;::to_tagged_json (3 samples, 0.24%)</title><rect x="90.8139%" y="437" width="0.2417%" height="15" fill="rgb(248,4,50)" fg:x="1127" fg:w="3"/><text x="91.0639%" y="447.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::AreaObservation&gt;::serialize (3 samples, 0.24%)</title><rect x="90.8139%" y="421" width="0.2417%" height="15" fill="rgb(215,208,14)" fg:x="1127" fg:w="3"/><text x="91.0639%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="90.8139%" y="405" width="0.2417%" height="15" fill="rgb(218,37,18)" fg:x="1127" fg:w="3"/><text x="91.0639%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.9750%" y="389" width="0.0806%" height="15" fill="rgb(206,104,13)" fg:x="1129" fg:w="1"/><text x="91.2250%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="90.9750%" y="373" width="0.0806%" height="15" fill="rgb(248,94,22)" fg:x="1129" fg:w="1"/><text x="91.2250%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9750%" y="357" width="0.0806%" height="15" fill="rgb(235,42,46)" fg:x="1129" fg:w="1"/><text x="91.2250%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="91.0556%" y="453" width="0.0806%" height="15" fill="rgb(220,228,48)" fg:x="1130" fg:w="1"/><text x="91.3056%" y="463.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="91.1362%" y="453" width="0.0806%" height="15" fill="rgb(216,58,12)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1362%" y="437" width="0.0806%" height="15" fill="rgb(223,97,52)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1362%" y="421" width="0.0806%" height="15" fill="rgb(208,159,17)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.1362%" y="405" width="0.0806%" height="15" fill="rgb(215,172,9)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.1362%" y="389" width="0.0806%" height="15" fill="rgb(252,175,30)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.1362%" y="373" width="0.0806%" height="15" fill="rgb(209,159,10)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1362%" y="357" width="0.0806%" height="15" fill="rgb(229,73,51)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1362%" y="341" width="0.0806%" height="15" fill="rgb(208,212,43)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.1362%" y="325" width="0.0806%" height="15" fill="rgb(254,123,53)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.1362%" y="309" width="0.0806%" height="15" fill="rgb(254,128,49)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.1362%" y="293" width="0.0806%" height="15" fill="rgb(246,16,16)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.1362%" y="277" width="0.0806%" height="15" fill="rgb(209,200,1)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1362%" y="261" width="0.0806%" height="15" fill="rgb(235,9,3)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="271.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="91.2973%" y="421" width="0.0806%" height="15" fill="rgb(233,121,54)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.2973%" y="405" width="0.0806%" height="15" fill="rgb(236,80,25)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.2973%" y="389" width="0.0806%" height="15" fill="rgb(220,44,24)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.2973%" y="373" width="0.0806%" height="15" fill="rgb(236,225,16)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.2973%" y="357" width="0.0806%" height="15" fill="rgb(237,140,0)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3779%" y="405" width="0.0806%" height="15" fill="rgb(243,225,53)" fg:x="1134" fg:w="1"/><text x="91.6279%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.6197%" y="325" width="0.0806%" height="15" fill="rgb(240,140,30)" fg:x="1137" fg:w="1"/><text x="91.8697%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.6197%" y="309" width="0.0806%" height="15" fill="rgb(217,51,16)" fg:x="1137" fg:w="1"/><text x="91.8697%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.6197%" y="293" width="0.0806%" height="15" fill="rgb(245,75,50)" fg:x="1137" fg:w="1"/><text x="91.8697%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (5 samples, 0.40%)</title><rect x="91.3779%" y="421" width="0.4029%" height="15" fill="rgb(208,174,22)" fg:x="1134" fg:w="5"/><text x="91.6279%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="91.4585%" y="405" width="0.3223%" height="15" fill="rgb(219,98,50)" fg:x="1135" fg:w="4"/><text x="91.7085%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="91.4585%" y="389" width="0.3223%" height="15" fill="rgb(243,138,3)" fg:x="1135" fg:w="4"/><text x="91.7085%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="91.5391%" y="373" width="0.2417%" height="15" fill="rgb(243,132,26)" fg:x="1136" fg:w="3"/><text x="91.7891%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="91.5391%" y="357" width="0.2417%" height="15" fill="rgb(250,201,8)" fg:x="1136" fg:w="3"/><text x="91.7891%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="91.5391%" y="341" width="0.2417%" height="15" fill="rgb(213,91,26)" fg:x="1136" fg:w="3"/><text x="91.7891%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.7002%" y="325" width="0.0806%" height="15" fill="rgb(229,117,1)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7002%" y="309" width="0.0806%" height="15" fill="rgb(229,24,6)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.7002%" y="293" width="0.0806%" height="15" fill="rgb(206,69,11)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.7002%" y="277" width="0.0806%" height="15" fill="rgb(234,111,34)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.7808%" y="405" width="0.0806%" height="15" fill="rgb(213,187,51)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.7808%" y="389" width="0.0806%" height="15" fill="rgb(207,45,11)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.7808%" y="373" width="0.0806%" height="15" fill="rgb(225,151,47)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.7808%" y="357" width="0.0806%" height="15" fill="rgb(211,226,5)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.7808%" y="341" width="0.0806%" height="15" fill="rgb(214,83,52)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.7808%" y="325" width="0.0806%" height="15" fill="rgb(229,49,53)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.7808%" y="309" width="0.0806%" height="15" fill="rgb(246,8,28)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.7808%" y="293" width="0.0806%" height="15" fill="rgb(207,28,41)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.7808%" y="277" width="0.0806%" height="15" fill="rgb(254,22,25)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.7808%" y="261" width="0.0806%" height="15" fill="rgb(209,120,42)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.7808%" y="245" width="0.0806%" height="15" fill="rgb(216,194,18)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7808%" y="229" width="0.0806%" height="15" fill="rgb(213,70,17)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.8614%" y="389" width="0.1612%" height="15" fill="rgb(228,66,19)" fg:x="1140" fg:w="2"/><text x="92.1114%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.8614%" y="373" width="0.1612%" height="15" fill="rgb(236,221,54)" fg:x="1140" fg:w="2"/><text x="92.1114%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="91.7808%" y="421" width="0.4835%" height="15" fill="rgb(207,175,15)" fg:x="1139" fg:w="6"/><text x="92.0308%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="91.8614%" y="405" width="0.4029%" height="15" fill="rgb(234,76,8)" fg:x="1140" fg:w="5"/><text x="92.1114%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="92.0226%" y="389" width="0.2417%" height="15" fill="rgb(243,106,0)" fg:x="1142" fg:w="3"/><text x="92.2726%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.0226%" y="373" width="0.2417%" height="15" fill="rgb(208,48,19)" fg:x="1142" fg:w="3"/><text x="92.2726%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.1837%" y="357" width="0.0806%" height="15" fill="rgb(251,50,29)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.1837%" y="341" width="0.0806%" height="15" fill="rgb(222,31,49)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1837%" y="325" width="0.0806%" height="15" fill="rgb(232,33,18)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1837%" y="309" width="0.0806%" height="15" fill="rgb(209,1,44)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="319.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (15 samples, 1.21%)</title><rect x="91.2168%" y="437" width="1.2087%" height="15" fill="rgb(211,7,1)" fg:x="1132" fg:w="15"/><text x="91.4668%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::has_scope (2 samples, 0.16%)</title><rect x="92.2643%" y="421" width="0.1612%" height="15" fill="rgb(224,111,27)" fg:x="1145" fg:w="2"/><text x="92.5143%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="92.2643%" y="405" width="0.1612%" height="15" fill="rgb(252,195,39)" fg:x="1145" fg:w="2"/><text x="92.5143%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.4255%" y="437" width="0.0806%" height="15" fill="rgb(237,198,5)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.4255%" y="421" width="0.0806%" height="15" fill="rgb(232,148,1)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="92.5060%" y="405" width="0.0806%" height="15" fill="rgb(249,41,3)" fg:x="1148" fg:w="1"/><text x="92.7560%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="92.5866%" y="373" width="0.0806%" height="15" fill="rgb(215,14,33)" fg:x="1149" fg:w="1"/><text x="92.8366%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.6672%" y="357" width="0.1612%" height="15" fill="rgb(209,146,24)" fg:x="1150" fg:w="2"/><text x="92.9172%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.6672%" y="341" width="0.1612%" height="15" fill="rgb(219,51,47)" fg:x="1150" fg:w="2"/><text x="92.9172%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.6672%" y="325" width="0.1612%" height="15" fill="rgb(234,217,40)" fg:x="1150" fg:w="2"/><text x="92.9172%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.6672%" y="309" width="0.1612%" height="15" fill="rgb(228,34,26)" fg:x="1150" fg:w="2"/><text x="92.9172%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.7478%" y="293" width="0.0806%" height="15" fill="rgb(224,50,29)" fg:x="1151" fg:w="1"/><text x="92.9978%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.7478%" y="277" width="0.0806%" height="15" fill="rgb(205,79,51)" fg:x="1151" fg:w="1"/><text x="92.9978%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.7478%" y="261" width="0.0806%" height="15" fill="rgb(218,136,28)" fg:x="1151" fg:w="1"/><text x="92.9978%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.7478%" y="245" width="0.0806%" height="15" fill="rgb(220,150,10)" fg:x="1151" fg:w="1"/><text x="92.9978%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.7478%" y="229" width="0.0806%" height="15" fill="rgb(242,158,47)" fg:x="1151" fg:w="1"/><text x="92.9978%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.7478%" y="213" width="0.0806%" height="15" fill="rgb(209,68,0)" fg:x="1151" fg:w="1"/><text x="92.9978%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="92.5866%" y="389" width="0.3223%" height="15" fill="rgb(208,13,41)" fg:x="1149" fg:w="4"/><text x="92.8366%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="92.6672%" y="373" width="0.2417%" height="15" fill="rgb(226,201,7)" fg:x="1150" fg:w="3"/><text x="92.9172%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.8284%" y="357" width="0.0806%" height="15" fill="rgb(236,103,26)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8284%" y="341" width="0.0806%" height="15" fill="rgb(243,162,8)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.8284%" y="325" width="0.0806%" height="15" fill="rgb(237,225,11)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8284%" y="309" width="0.0806%" height="15" fill="rgb(247,186,32)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.8284%" y="293" width="0.0806%" height="15" fill="rgb(215,26,28)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.9089%" y="357" width="0.1612%" height="15" fill="rgb(208,121,6)" fg:x="1153" fg:w="2"/><text x="93.1589%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.9089%" y="341" width="0.1612%" height="15" fill="rgb(225,91,3)" fg:x="1153" fg:w="2"/><text x="93.1589%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.9895%" y="325" width="0.0806%" height="15" fill="rgb(246,119,36)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.9895%" y="309" width="0.0806%" height="15" fill="rgb(254,173,2)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.9895%" y="293" width="0.0806%" height="15" fill="rgb(209,87,54)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.9895%" y="277" width="0.0806%" height="15" fill="rgb(223,216,20)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.9895%" y="261" width="0.0806%" height="15" fill="rgb(220,31,8)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.9895%" y="245" width="0.0806%" height="15" fill="rgb(220,185,15)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.9895%" y="229" width="0.0806%" height="15" fill="rgb(247,190,50)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.9895%" y="213" width="0.0806%" height="15" fill="rgb(239,173,47)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.9895%" y="197" width="0.0806%" height="15" fill="rgb(218,190,42)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="207.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (9 samples, 0.73%)</title><rect x="92.5060%" y="437" width="0.7252%" height="15" fill="rgb(251,207,16)" fg:x="1148" fg:w="9"/><text x="92.7560%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (9 samples, 0.73%)</title><rect x="92.5060%" y="421" width="0.7252%" height="15" fill="rgb(222,199,47)" fg:x="1148" fg:w="9"/><text x="92.7560%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="92.5866%" y="405" width="0.6446%" height="15" fill="rgb(245,190,7)" fg:x="1149" fg:w="8"/><text x="92.8366%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="92.9089%" y="389" width="0.3223%" height="15" fill="rgb(239,85,38)" fg:x="1153" fg:w="4"/><text x="93.1589%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="92.9089%" y="373" width="0.3223%" height="15" fill="rgb(229,69,51)" fg:x="1153" fg:w="4"/><text x="93.1589%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.0701%" y="357" width="0.1612%" height="15" fill="rgb(231,104,51)" fg:x="1155" fg:w="2"/><text x="93.3201%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.0701%" y="341" width="0.1612%" height="15" fill="rgb(235,49,4)" fg:x="1155" fg:w="2"/><text x="93.3201%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="93.0701%" y="325" width="0.1612%" height="15" fill="rgb(246,166,20)" fg:x="1155" fg:w="2"/><text x="93.3201%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.0701%" y="309" width="0.1612%" height="15" fill="rgb(230,119,37)" fg:x="1155" fg:w="2"/><text x="93.3201%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.1507%" y="293" width="0.0806%" height="15" fill="rgb(234,77,34)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1507%" y="277" width="0.0806%" height="15" fill="rgb(211,222,33)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.1507%" y="261" width="0.0806%" height="15" fill="rgb(226,45,42)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.1507%" y="245" width="0.0806%" height="15" fill="rgb(215,174,28)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="93.2313%" y="437" width="0.0806%" height="15" fill="rgb(254,173,49)" fg:x="1157" fg:w="1"/><text x="93.4813%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="93.2313%" y="421" width="0.0806%" height="15" fill="rgb(229,191,6)" fg:x="1157" fg:w="1"/><text x="93.4813%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.2313%" y="405" width="0.0806%" height="15" fill="rgb(212,145,22)" fg:x="1157" fg:w="1"/><text x="93.4813%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3118%" y="405" width="0.0806%" height="15" fill="rgb(226,6,51)" fg:x="1158" fg:w="1"/><text x="93.5618%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.3118%" y="389" width="0.0806%" height="15" fill="rgb(227,128,8)" fg:x="1158" fg:w="1"/><text x="93.5618%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.4730%" y="277" width="0.1612%" height="15" fill="rgb(205,24,10)" fg:x="1160" fg:w="2"/><text x="93.7230%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.4730%" y="261" width="0.1612%" height="15" fill="rgb(217,147,27)" fg:x="1160" fg:w="2"/><text x="93.7230%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.4730%" y="245" width="0.1612%" height="15" fill="rgb(250,82,42)" fg:x="1160" fg:w="2"/><text x="93.7230%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5536%" y="229" width="0.0806%" height="15" fill="rgb(248,93,17)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5536%" y="213" width="0.0806%" height="15" fill="rgb(254,212,40)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.5536%" y="197" width="0.0806%" height="15" fill="rgb(229,209,2)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.5536%" y="181" width="0.0806%" height="15" fill="rgb(211,50,43)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.5536%" y="165" width="0.0806%" height="15" fill="rgb(245,196,29)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.5536%" y="149" width="0.0806%" height="15" fill="rgb(216,132,13)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.5536%" y="133" width="0.0806%" height="15" fill="rgb(251,108,21)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.5536%" y="117" width="0.0806%" height="15" fill="rgb(229,174,54)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.5536%" y="101" width="0.0806%" height="15" fill="rgb(211,175,47)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.5536%" y="85" width="0.0806%" height="15" fill="rgb(234,5,37)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.5536%" y="69" width="0.0806%" height="15" fill="rgb(244,150,43)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5536%" y="53" width="0.0806%" height="15" fill="rgb(242,172,38)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="63.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="93.3924%" y="309" width="0.4835%" height="15" fill="rgb(205,27,8)" fg:x="1159" fg:w="6"/><text x="93.6424%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="93.4730%" y="293" width="0.4029%" height="15" fill="rgb(217,57,3)" fg:x="1160" fg:w="5"/><text x="93.7230%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.6342%" y="277" width="0.2417%" height="15" fill="rgb(242,21,38)" fg:x="1162" fg:w="3"/><text x="93.8842%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.6342%" y="261" width="0.2417%" height="15" fill="rgb(209,64,43)" fg:x="1162" fg:w="3"/><text x="93.8842%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="93.6342%" y="245" width="0.2417%" height="15" fill="rgb(222,2,46)" fg:x="1162" fg:w="3"/><text x="93.8842%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.6342%" y="229" width="0.2417%" height="15" fill="rgb(218,19,44)" fg:x="1162" fg:w="3"/><text x="93.8842%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.6342%" y="213" width="0.2417%" height="15" fill="rgb(240,203,42)" fg:x="1162" fg:w="3"/><text x="93.8842%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.6342%" y="197" width="0.2417%" height="15" fill="rgb(229,23,45)" fg:x="1162" fg:w="3"/><text x="93.8842%" y="207.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="93.7147%" y="181" width="0.1612%" height="15" fill="rgb(205,228,51)" fg:x="1163" fg:w="2"/><text x="93.9647%" y="191.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (7 samples, 0.56%)</title><rect x="93.3924%" y="405" width="0.5641%" height="15" fill="rgb(239,36,20)" fg:x="1159" fg:w="7"/><text x="93.6424%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.56%)</title><rect x="93.3924%" y="389" width="0.5641%" height="15" fill="rgb(248,172,27)" fg:x="1159" fg:w="7"/><text x="93.6424%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="93.3924%" y="373" width="0.5641%" height="15" fill="rgb(244,55,32)" fg:x="1159" fg:w="7"/><text x="93.6424%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="93.3924%" y="357" width="0.5641%" height="15" fill="rgb(215,97,16)" fg:x="1159" fg:w="7"/><text x="93.6424%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (7 samples, 0.56%)</title><rect x="93.3924%" y="341" width="0.5641%" height="15" fill="rgb(224,80,29)" fg:x="1159" fg:w="7"/><text x="93.6424%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="93.3924%" y="325" width="0.5641%" height="15" fill="rgb(216,93,47)" fg:x="1159" fg:w="7"/><text x="93.6424%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="93.8759%" y="309" width="0.0806%" height="15" fill="rgb(238,159,10)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.8759%" y="293" width="0.0806%" height="15" fill="rgb(223,98,29)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.8759%" y="277" width="0.0806%" height="15" fill="rgb(210,176,23)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="287.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="93.9565%" y="405" width="0.0806%" height="15" fill="rgb(242,162,27)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.9565%" y="389" width="0.0806%" height="15" fill="rgb(245,109,32)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="93.9565%" y="373" width="0.0806%" height="15" fill="rgb(248,87,8)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="93.9565%" y="357" width="0.0806%" height="15" fill="rgb(250,160,50)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (1 samples, 0.08%)</title><rect x="93.9565%" y="341" width="0.0806%" height="15" fill="rgb(246,165,25)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="93.9565%" y="325" width="0.0806%" height="15" fill="rgb(249,219,3)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="93.9565%" y="309" width="0.0806%" height="15" fill="rgb(226,66,5)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.9565%" y="293" width="0.0806%" height="15" fill="rgb(250,220,43)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.9565%" y="277" width="0.0806%" height="15" fill="rgb(225,111,31)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.9565%" y="261" width="0.0806%" height="15" fill="rgb(248,106,18)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.9565%" y="245" width="0.0806%" height="15" fill="rgb(220,226,45)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.9565%" y="229" width="0.0806%" height="15" fill="rgb(208,58,53)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.9565%" y="213" width="0.0806%" height="15" fill="rgb(209,133,1)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.9565%" y="197" width="0.0806%" height="15" fill="rgb(228,216,27)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.9565%" y="181" width="0.0806%" height="15" fill="rgb(238,155,2)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.9565%" y="165" width="0.0806%" height="15" fill="rgb(244,99,37)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="93.9565%" y="149" width="0.0806%" height="15" fill="rgb(254,32,3)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.9565%" y="133" width="0.0806%" height="15" fill="rgb(234,46,50)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="94.1176%" y="373" width="0.0806%" height="15" fill="rgb(232,118,51)" fg:x="1168" fg:w="1"/><text x="94.3676%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (56 samples, 4.51%)</title><rect x="89.7663%" y="645" width="4.5125%" height="15" fill="rgb(207,24,32)" fg:x="1114" fg:w="56"/><text x="90.0163%" y="655.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::apply_middleware (56 samples, 4.51%)</title><rect x="89.7663%" y="629" width="4.5125%" height="15" fill="rgb(208,107,43)" fg:x="1114" fg:w="56"/><text x="90.0163%" y="639.50">kerne..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (56 samples, 4.51%)</title><rect x="89.7663%" y="613" width="4.5125%" height="15" fill="rgb(231,28,9)" fg:x="1114" fg:w="56"/><text x="90.0163%" y="623.50">kerne..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (56 samples, 4.51%)</title><rect x="89.7663%" y="597" width="4.5125%" height="15" fill="rgb(241,204,15)" fg:x="1114" fg:w="56"/><text x="90.0163%" y="607.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (43 samples, 3.46%)</title><rect x="90.8139%" y="581" width="3.4649%" height="15" fill="rgb(214,54,15)" fg:x="1127" fg:w="43"/><text x="91.0639%" y="591.50">ker..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (43 samples, 3.46%)</title><rect x="90.8139%" y="565" width="3.4649%" height="15" fill="rgb(230,12,28)" fg:x="1127" fg:w="43"/><text x="91.0639%" y="575.50">&lt;pl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (43 samples, 3.46%)</title><rect x="90.8139%" y="549" width="3.4649%" height="15" fill="rgb(221,171,5)" fg:x="1127" fg:w="43"/><text x="91.0639%" y="559.50">ker..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (43 samples, 3.46%)</title><rect x="90.8139%" y="533" width="3.4649%" height="15" fill="rgb(207,72,25)" fg:x="1127" fg:w="43"/><text x="91.0639%" y="543.50">cor..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (43 samples, 3.46%)</title><rect x="90.8139%" y="517" width="3.4649%" height="15" fill="rgb(249,79,37)" fg:x="1127" fg:w="43"/><text x="91.0639%" y="527.50">ker..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (43 samples, 3.46%)</title><rect x="90.8139%" y="501" width="3.4649%" height="15" fill="rgb(209,98,49)" fg:x="1127" fg:w="43"/><text x="91.0639%" y="511.50">cor..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (43 samples, 3.46%)</title><rect x="90.8139%" y="485" width="3.4649%" height="15" fill="rgb(221,62,13)" fg:x="1127" fg:w="43"/><text x="91.0639%" y="495.50">&lt;en..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (43 samples, 3.46%)</title><rect x="90.8139%" y="469" width="3.4649%" height="15" fill="rgb(223,39,6)" fg:x="1127" fg:w="43"/><text x="91.0639%" y="479.50">&lt;pl..</text></g><g><title>plugins_core::looking::model::new_area_observation (38 samples, 3.06%)</title><rect x="91.2168%" y="453" width="3.0620%" height="15" fill="rgb(246,163,20)" fg:x="1132" fg:w="38"/><text x="91.4668%" y="463.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (12 samples, 0.97%)</title><rect x="93.3118%" y="437" width="0.9670%" height="15" fill="rgb(211,111,29)" fg:x="1158" fg:w="12"/><text x="93.5618%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.97%)</title><rect x="93.3118%" y="421" width="0.9670%" height="15" fill="rgb(243,118,5)" fg:x="1158" fg:w="12"/><text x="93.5618%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="94.0371%" y="405" width="0.2417%" height="15" fill="rgb(240,144,52)" fg:x="1167" fg:w="3"/><text x="94.2871%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.1176%" y="389" width="0.1612%" height="15" fill="rgb(244,158,36)" fg:x="1168" fg:w="2"/><text x="94.3676%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="94.1982%" y="373" width="0.0806%" height="15" fill="rgb(241,109,37)" fg:x="1169" fg:w="1"/><text x="94.4482%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.1982%" y="357" width="0.0806%" height="15" fill="rgb(213,95,32)" fg:x="1169" fg:w="1"/><text x="94.4482%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="94.1982%" y="341" width="0.0806%" height="15" fill="rgb(252,193,9)" fg:x="1169" fg:w="1"/><text x="94.4482%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.3594%" y="581" width="0.1612%" height="15" fill="rgb(225,213,21)" fg:x="1171" fg:w="2"/><text x="94.6094%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.3594%" y="565" width="0.1612%" height="15" fill="rgb(220,172,46)" fg:x="1171" fg:w="2"/><text x="94.6094%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4400%" y="549" width="0.0806%" height="15" fill="rgb(235,75,41)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4400%" y="533" width="0.0806%" height="15" fill="rgb(213,86,9)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4400%" y="517" width="0.0806%" height="15" fill="rgb(238,127,51)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4400%" y="501" width="0.0806%" height="15" fill="rgb(215,2,54)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.4400%" y="485" width="0.0806%" height="15" fill="rgb(245,80,6)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.4400%" y="469" width="0.0806%" height="15" fill="rgb(233,106,42)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.4400%" y="453" width="0.0806%" height="15" fill="rgb(244,86,38)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4400%" y="437" width="0.0806%" height="15" fill="rgb(242,167,7)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4400%" y="421" width="0.0806%" height="15" fill="rgb(218,216,3)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.4400%" y="405" width="0.0806%" height="15" fill="rgb(206,136,36)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.4400%" y="389" width="0.0806%" height="15" fill="rgb(206,206,15)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.4400%" y="373" width="0.0806%" height="15" fill="rgb(207,163,34)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.4400%" y="357" width="0.0806%" height="15" fill="rgb(240,127,22)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.4400%" y="341" width="0.0806%" height="15" fill="rgb(227,49,5)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="94.5205%" y="581" width="0.1612%" height="15" fill="rgb(231,8,6)" fg:x="1173" fg:w="2"/><text x="94.7705%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.5205%" y="565" width="0.1612%" height="15" fill="rgb(223,21,24)" fg:x="1173" fg:w="2"/><text x="94.7705%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.5205%" y="549" width="0.1612%" height="15" fill="rgb(244,44,52)" fg:x="1173" fg:w="2"/><text x="94.7705%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.5205%" y="533" width="0.1612%" height="15" fill="rgb(207,73,28)" fg:x="1173" fg:w="2"/><text x="94.7705%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.5205%" y="517" width="0.1612%" height="15" fill="rgb(234,215,10)" fg:x="1173" fg:w="2"/><text x="94.7705%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.5205%" y="501" width="0.1612%" height="15" fill="rgb(236,85,3)" fg:x="1173" fg:w="2"/><text x="94.7705%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.5205%" y="485" width="0.1612%" height="15" fill="rgb(236,102,39)" fg:x="1173" fg:w="2"/><text x="94.7705%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.5205%" y="469" width="0.1612%" height="15" fill="rgb(243,50,8)" fg:x="1173" fg:w="2"/><text x="94.7705%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.6011%" y="453" width="0.0806%" height="15" fill="rgb(207,111,4)" fg:x="1174" fg:w="1"/><text x="94.8511%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.6817%" y="485" width="0.0806%" height="15" fill="rgb(230,52,42)" fg:x="1175" fg:w="1"/><text x="94.9317%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.6817%" y="469" width="0.0806%" height="15" fill="rgb(252,178,50)" fg:x="1175" fg:w="1"/><text x="94.9317%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="94.3594%" y="597" width="0.4835%" height="15" fill="rgb(234,46,35)" fg:x="1171" fg:w="6"/><text x="94.6094%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="94.6817%" y="581" width="0.1612%" height="15" fill="rgb(228,69,37)" fg:x="1175" fg:w="2"/><text x="94.9317%" y="591.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="94.6817%" y="565" width="0.1612%" height="15" fill="rgb(221,21,11)" fg:x="1175" fg:w="2"/><text x="94.9317%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.6817%" y="549" width="0.1612%" height="15" fill="rgb(223,56,9)" fg:x="1175" fg:w="2"/><text x="94.9317%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.6817%" y="533" width="0.1612%" height="15" fill="rgb(234,30,19)" fg:x="1175" fg:w="2"/><text x="94.9317%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.6817%" y="517" width="0.1612%" height="15" fill="rgb(211,64,54)" fg:x="1175" fg:w="2"/><text x="94.9317%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.6817%" y="501" width="0.1612%" height="15" fill="rgb(250,189,5)" fg:x="1175" fg:w="2"/><text x="94.9317%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.7623%" y="485" width="0.0806%" height="15" fill="rgb(214,180,13)" fg:x="1176" fg:w="1"/><text x="95.0123%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.7623%" y="469" width="0.0806%" height="15" fill="rgb(238,40,40)" fg:x="1176" fg:w="1"/><text x="95.0123%" y="479.50"></text></g><g><title>engine::session::Session::load_entity (7 samples, 0.56%)</title><rect x="94.3594%" y="613" width="0.5641%" height="15" fill="rgb(214,101,38)" fg:x="1171" fg:w="7"/><text x="94.6094%" y="623.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="94.8429%" y="597" width="0.0806%" height="15" fill="rgb(242,65,53)" fg:x="1177" fg:w="1"/><text x="95.0929%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="94.9234%" y="597" width="0.2417%" height="15" fill="rgb(230,22,45)" fg:x="1178" fg:w="3"/><text x="95.1734%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="95.0040%" y="581" width="0.1612%" height="15" fill="rgb(223,77,1)" fg:x="1179" fg:w="2"/><text x="95.2540%" y="591.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as core::convert::Into&lt;kernel::model::base::EntityKey&gt;&gt;::into (1 samples, 0.08%)</title><rect x="95.0846%" y="565" width="0.0806%" height="15" fill="rgb(227,33,37)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0846%" y="549" width="0.0806%" height="15" fill="rgb(224,148,39)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1652%" y="533" width="0.0806%" height="15" fill="rgb(232,212,39)" fg:x="1181" fg:w="1"/><text x="95.4152%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1652%" y="517" width="0.0806%" height="15" fill="rgb(251,172,7)" fg:x="1181" fg:w="1"/><text x="95.4152%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.1652%" y="501" width="0.0806%" height="15" fill="rgb(219,39,9)" fg:x="1181" fg:w="1"/><text x="95.4152%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.1652%" y="485" width="0.0806%" height="15" fill="rgb(228,118,14)" fg:x="1181" fg:w="1"/><text x="95.4152%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.1652%" y="469" width="0.0806%" height="15" fill="rgb(207,140,10)" fg:x="1181" fg:w="1"/><text x="95.4152%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.1652%" y="453" width="0.0806%" height="15" fill="rgb(227,111,53)" fg:x="1181" fg:w="1"/><text x="95.4152%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.1652%" y="437" width="0.0806%" height="15" fill="rgb(216,165,16)" fg:x="1181" fg:w="1"/><text x="95.4152%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.1652%" y="581" width="0.1612%" height="15" fill="rgb(226,111,18)" fg:x="1181" fg:w="2"/><text x="95.4152%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.1652%" y="565" width="0.1612%" height="15" fill="rgb(251,27,17)" fg:x="1181" fg:w="2"/><text x="95.4152%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.1652%" y="549" width="0.1612%" height="15" fill="rgb(254,69,9)" fg:x="1181" fg:w="2"/><text x="95.4152%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2458%" y="533" width="0.0806%" height="15" fill="rgb(234,140,37)" fg:x="1182" fg:w="1"/><text x="95.4958%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.3263%" y="485" width="0.0806%" height="15" fill="rgb(220,93,8)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3263%" y="469" width="0.0806%" height="15" fill="rgb(236,113,3)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.3263%" y="533" width="0.1612%" height="15" fill="rgb(234,108,23)" fg:x="1183" fg:w="2"/><text x="95.5763%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.3263%" y="517" width="0.1612%" height="15" fill="rgb(205,114,34)" fg:x="1183" fg:w="2"/><text x="95.5763%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.3263%" y="501" width="0.1612%" height="15" fill="rgb(236,200,45)" fg:x="1183" fg:w="2"/><text x="95.5763%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4069%" y="485" width="0.0806%" height="15" fill="rgb(227,194,29)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.4875%" y="501" width="0.0806%" height="15" fill="rgb(250,76,42)" fg:x="1185" fg:w="1"/><text x="95.7375%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.6487%" y="437" width="0.0806%" height="15" fill="rgb(208,128,8)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6487%" y="421" width="0.0806%" height="15" fill="rgb(229,209,35)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6487%" y="405" width="0.0806%" height="15" fill="rgb(215,39,53)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.6487%" y="389" width="0.0806%" height="15" fill="rgb(219,123,41)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.6487%" y="373" width="0.0806%" height="15" fill="rgb(212,158,18)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.6487%" y="357" width="0.0806%" height="15" fill="rgb(234,196,53)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6487%" y="341" width="0.0806%" height="15" fill="rgb(210,139,12)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6487%" y="325" width="0.0806%" height="15" fill="rgb(220,116,54)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.6487%" y="309" width="0.0806%" height="15" fill="rgb(247,103,28)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.6487%" y="293" width="0.0806%" height="15" fill="rgb(253,156,45)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.6487%" y="277" width="0.0806%" height="15" fill="rgb(237,157,52)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.6487%" y="261" width="0.0806%" height="15" fill="rgb(253,112,16)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6487%" y="245" width="0.0806%" height="15" fill="rgb(234,70,18)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="95.6487%" y="469" width="0.2417%" height="15" fill="rgb(247,138,19)" fg:x="1187" fg:w="3"/><text x="95.8987%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="95.6487%" y="453" width="0.2417%" height="15" fill="rgb(207,171,1)" fg:x="1187" fg:w="3"/><text x="95.8987%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="95.7293%" y="437" width="0.1612%" height="15" fill="rgb(239,213,3)" fg:x="1188" fg:w="2"/><text x="95.9793%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="95.7293%" y="421" width="0.1612%" height="15" fill="rgb(226,112,4)" fg:x="1188" fg:w="2"/><text x="95.9793%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="95.8098%" y="405" width="0.0806%" height="15" fill="rgb(252,170,12)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.8098%" y="389" width="0.0806%" height="15" fill="rgb(241,106,13)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.8098%" y="373" width="0.0806%" height="15" fill="rgb(225,73,23)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="95.5681%" y="485" width="0.4029%" height="15" fill="rgb(251,227,29)" fg:x="1186" fg:w="5"/><text x="95.8181%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8904%" y="469" width="0.0806%" height="15" fill="rgb(237,144,13)" fg:x="1190" fg:w="1"/><text x="96.1404%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.9710%" y="453" width="0.0806%" height="15" fill="rgb(232,106,46)" fg:x="1191" fg:w="1"/><text x="96.2210%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.81%)</title><rect x="95.3263%" y="581" width="0.8058%" height="15" fill="rgb(245,154,53)" fg:x="1183" fg:w="10"/><text x="95.5763%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.81%)</title><rect x="95.3263%" y="565" width="0.8058%" height="15" fill="rgb(212,119,47)" fg:x="1183" fg:w="10"/><text x="95.5763%" y="575.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.81%)</title><rect x="95.3263%" y="549" width="0.8058%" height="15" fill="rgb(253,135,25)" fg:x="1183" fg:w="10"/><text x="95.5763%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="95.4875%" y="533" width="0.6446%" height="15" fill="rgb(253,208,39)" fg:x="1185" fg:w="8"/><text x="95.7375%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="95.4875%" y="517" width="0.6446%" height="15" fill="rgb(226,64,12)" fg:x="1185" fg:w="8"/><text x="95.7375%" y="527.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="95.5681%" y="501" width="0.5641%" height="15" fill="rgb(214,162,37)" fg:x="1186" fg:w="7"/><text x="95.8181%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.9710%" y="485" width="0.1612%" height="15" fill="rgb(250,104,5)" fg:x="1191" fg:w="2"/><text x="96.2210%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.9710%" y="469" width="0.1612%" height="15" fill="rgb(220,202,50)" fg:x="1191" fg:w="2"/><text x="96.2210%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0516%" y="453" width="0.0806%" height="15" fill="rgb(248,67,38)" fg:x="1192" fg:w="1"/><text x="96.3016%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="96.0516%" y="437" width="0.0806%" height="15" fill="rgb(242,94,35)" fg:x="1192" fg:w="1"/><text x="96.3016%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.0516%" y="421" width="0.0806%" height="15" fill="rgb(209,78,37)" fg:x="1192" fg:w="1"/><text x="96.3016%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0516%" y="405" width="0.0806%" height="15" fill="rgb(230,126,47)" fg:x="1192" fg:w="1"/><text x="96.3016%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.1322%" y="485" width="0.0806%" height="15" fill="rgb(222,110,35)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="96.2127%" y="485" width="0.0806%" height="15" fill="rgb(233,154,20)" fg:x="1194" fg:w="1"/><text x="96.4627%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.2127%" y="469" width="0.0806%" height="15" fill="rgb(223,53,50)" fg:x="1194" fg:w="1"/><text x="96.4627%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="96.1322%" y="549" width="0.3223%" height="15" fill="rgb(251,27,26)" fg:x="1193" fg:w="4"/><text x="96.3822%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="96.1322%" y="533" width="0.3223%" height="15" fill="rgb(223,189,16)" fg:x="1193" fg:w="4"/><text x="96.3822%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="96.1322%" y="517" width="0.3223%" height="15" fill="rgb(207,5,54)" fg:x="1193" fg:w="4"/><text x="96.3822%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="96.1322%" y="501" width="0.3223%" height="15" fill="rgb(254,124,50)" fg:x="1193" fg:w="4"/><text x="96.3822%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.2933%" y="485" width="0.1612%" height="15" fill="rgb(253,193,24)" fg:x="1195" fg:w="2"/><text x="96.5433%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="96.2933%" y="469" width="0.1612%" height="15" fill="rgb(235,170,24)" fg:x="1195" fg:w="2"/><text x="96.5433%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.4545%" y="549" width="0.0806%" height="15" fill="rgb(222,212,52)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.4545%" y="533" width="0.0806%" height="15" fill="rgb(223,17,45)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.4545%" y="517" width="0.0806%" height="15" fill="rgb(227,103,26)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="96.4545%" y="501" width="0.0806%" height="15" fill="rgb(251,151,25)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="511.50"></text></g><g><title>engine::session::internal::Added::find_refs (21 samples, 1.69%)</title><rect x="94.9234%" y="613" width="1.6922%" height="15" fill="rgb(248,144,29)" fg:x="1178" fg:w="21"/><text x="95.1734%" y="623.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (18 samples, 1.45%)</title><rect x="95.1652%" y="597" width="1.4504%" height="15" fill="rgb(245,97,16)" fg:x="1181" fg:w="18"/><text x="95.4152%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="96.1322%" y="581" width="0.4835%" height="15" fill="rgb(220,200,29)" fg:x="1193" fg:w="6"/><text x="96.3822%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="96.1322%" y="565" width="0.4835%" height="15" fill="rgb(206,38,29)" fg:x="1193" fg:w="6"/><text x="96.3822%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="96.5351%" y="549" width="0.0806%" height="15" fill="rgb(245,19,52)" fg:x="1198" fg:w="1"/><text x="96.7851%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="96.5351%" y="533" width="0.0806%" height="15" fill="rgb(205,67,43)" fg:x="1198" fg:w="1"/><text x="96.7851%" y="543.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="96.5351%" y="517" width="0.0806%" height="15" fill="rgb(217,128,23)" fg:x="1198" fg:w="1"/><text x="96.7851%" y="527.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="96.5351%" y="501" width="0.0806%" height="15" fill="rgb(210,109,28)" fg:x="1198" fg:w="1"/><text x="96.7851%" y="511.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="96.5351%" y="485" width="0.0806%" height="15" fill="rgb(233,181,7)" fg:x="1198" fg:w="1"/><text x="96.7851%" y="495.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.08%)</title><rect x="96.5351%" y="469" width="0.0806%" height="15" fill="rgb(244,11,22)" fg:x="1198" fg:w="1"/><text x="96.7851%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.6156%" y="565" width="0.0806%" height="15" fill="rgb(205,124,54)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.6156%" y="549" width="0.0806%" height="15" fill="rgb(218,21,27)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.6156%" y="533" width="0.0806%" height="15" fill="rgb(224,153,33)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.6156%" y="517" width="0.0806%" height="15" fill="rgb(240,219,28)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.6156%" y="501" width="0.0806%" height="15" fill="rgb(214,80,29)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.6156%" y="485" width="0.0806%" height="15" fill="rgb(247,148,44)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.6156%" y="469" width="0.0806%" height="15" fill="rgb(243,110,30)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.6156%" y="453" width="0.0806%" height="15" fill="rgb(243,173,41)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.6156%" y="437" width="0.0806%" height="15" fill="rgb(225,160,47)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.6156%" y="421" width="0.0806%" height="15" fill="rgb(215,44,21)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.6156%" y="405" width="0.0806%" height="15" fill="rgb(248,90,3)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.6156%" y="389" width="0.0806%" height="15" fill="rgb(220,196,49)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.6156%" y="373" width="0.0806%" height="15" fill="rgb(217,138,14)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6156%" y="357" width="0.0806%" height="15" fill="rgb(219,111,20)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.6156%" y="597" width="0.1612%" height="15" fill="rgb(218,114,4)" fg:x="1199" fg:w="2"/><text x="96.8656%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.6156%" y="581" width="0.1612%" height="15" fill="rgb(238,133,3)" fg:x="1199" fg:w="2"/><text x="96.8656%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6962%" y="565" width="0.0806%" height="15" fill="rgb(224,95,0)" fg:x="1200" fg:w="1"/><text x="96.9462%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7768%" y="501" width="0.0806%" height="15" fill="rgb(220,169,35)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7768%" y="485" width="0.0806%" height="15" fill="rgb(242,116,47)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.7768%" y="469" width="0.0806%" height="15" fill="rgb(251,42,20)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7768%" y="453" width="0.0806%" height="15" fill="rgb(234,7,34)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7768%" y="437" width="0.0806%" height="15" fill="rgb(243,208,13)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7768%" y="421" width="0.0806%" height="15" fill="rgb(227,33,28)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.7768%" y="405" width="0.0806%" height="15" fill="rgb(250,47,37)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="96.7768%" y="597" width="0.1612%" height="15" fill="rgb(235,111,52)" fg:x="1201" fg:w="2"/><text x="97.0268%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.7768%" y="581" width="0.1612%" height="15" fill="rgb(223,64,28)" fg:x="1201" fg:w="2"/><text x="97.0268%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.7768%" y="565" width="0.1612%" height="15" fill="rgb(236,67,22)" fg:x="1201" fg:w="2"/><text x="97.0268%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.7768%" y="549" width="0.1612%" height="15" fill="rgb(243,79,24)" fg:x="1201" fg:w="2"/><text x="97.0268%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.7768%" y="533" width="0.1612%" height="15" fill="rgb(241,225,22)" fg:x="1201" fg:w="2"/><text x="97.0268%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.7768%" y="517" width="0.1612%" height="15" fill="rgb(228,214,26)" fg:x="1201" fg:w="2"/><text x="97.0268%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8574%" y="501" width="0.0806%" height="15" fill="rgb(219,84,52)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8574%" y="485" width="0.0806%" height="15" fill="rgb(220,12,22)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.8574%" y="469" width="0.0806%" height="15" fill="rgb(219,9,49)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8574%" y="453" width="0.0806%" height="15" fill="rgb(237,40,43)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8574%" y="437" width="0.0806%" height="15" fill="rgb(212,189,32)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.9380%" y="453" width="0.0806%" height="15" fill="rgb(247,48,9)" fg:x="1203" fg:w="1"/><text x="97.1880%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.9380%" y="469" width="0.1612%" height="15" fill="rgb(247,112,3)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.0185%" y="453" width="0.0806%" height="15" fill="rgb(243,110,18)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.0185%" y="437" width="0.0806%" height="15" fill="rgb(233,223,44)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.0185%" y="421" width="0.0806%" height="15" fill="rgb(245,160,20)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (36 samples, 2.90%)</title><rect x="94.2788%" y="629" width="2.9009%" height="15" fill="rgb(225,37,1)" fg:x="1170" fg:w="36"/><text x="94.5288%" y="639.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="96.6156%" y="613" width="0.5641%" height="15" fill="rgb(253,227,39)" fg:x="1199" fg:w="7"/><text x="96.8656%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="96.9380%" y="597" width="0.2417%" height="15" fill="rgb(240,179,26)" fg:x="1203" fg:w="3"/><text x="97.1880%" y="607.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="96.9380%" y="581" width="0.2417%" height="15" fill="rgb(237,212,23)" fg:x="1203" fg:w="3"/><text x="97.1880%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.9380%" y="565" width="0.2417%" height="15" fill="rgb(221,38,11)" fg:x="1203" fg:w="3"/><text x="97.1880%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.9380%" y="549" width="0.2417%" height="15" fill="rgb(215,85,6)" fg:x="1203" fg:w="3"/><text x="97.1880%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.9380%" y="533" width="0.2417%" height="15" fill="rgb(239,64,14)" fg:x="1203" fg:w="3"/><text x="97.1880%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.9380%" y="517" width="0.2417%" height="15" fill="rgb(215,150,32)" fg:x="1203" fg:w="3"/><text x="97.1880%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.9380%" y="501" width="0.2417%" height="15" fill="rgb(238,15,13)" fg:x="1203" fg:w="3"/><text x="97.1880%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.9380%" y="485" width="0.2417%" height="15" fill="rgb(251,87,8)" fg:x="1203" fg:w="3"/><text x="97.1880%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0991%" y="469" width="0.0806%" height="15" fill="rgb(206,86,1)" fg:x="1205" fg:w="1"/><text x="97.3491%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1797%" y="597" width="0.0806%" height="15" fill="rgb(208,151,45)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1797%" y="581" width="0.0806%" height="15" fill="rgb(231,181,24)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1797%" y="565" width="0.0806%" height="15" fill="rgb(240,106,29)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1797%" y="549" width="0.0806%" height="15" fill="rgb(227,166,11)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.1797%" y="533" width="0.0806%" height="15" fill="rgb(254,14,34)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.1797%" y="517" width="0.0806%" height="15" fill="rgb(223,222,6)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.1797%" y="501" width="0.0806%" height="15" fill="rgb(245,69,24)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1797%" y="485" width="0.0806%" height="15" fill="rgb(213,193,7)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1797%" y="469" width="0.0806%" height="15" fill="rgb(237,92,51)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.1797%" y="453" width="0.0806%" height="15" fill="rgb(225,194,6)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="97.2603%" y="549" width="0.2417%" height="15" fill="rgb(205,159,49)" fg:x="1207" fg:w="3"/><text x="97.5103%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="97.2603%" y="533" width="0.2417%" height="15" fill="rgb(219,69,2)" fg:x="1207" fg:w="3"/><text x="97.5103%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="97.2603%" y="517" width="0.2417%" height="15" fill="rgb(215,107,24)" fg:x="1207" fg:w="3"/><text x="97.5103%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="97.2603%" y="501" width="0.2417%" height="15" fill="rgb(249,208,29)" fg:x="1207" fg:w="3"/><text x="97.5103%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.4214%" y="485" width="0.0806%" height="15" fill="rgb(213,147,10)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5826%" y="453" width="0.0806%" height="15" fill="rgb(254,140,42)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.5826%" y="501" width="0.1612%" height="15" fill="rgb(249,9,15)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.5826%" y="485" width="0.1612%" height="15" fill="rgb(210,19,33)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.5826%" y="469" width="0.1612%" height="15" fill="rgb(241,121,22)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6632%" y="453" width="0.0806%" height="15" fill="rgb(244,69,52)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6632%" y="437" width="0.0806%" height="15" fill="rgb(244,191,54)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.6632%" y="421" width="0.0806%" height="15" fill="rgb(250,3,53)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.6632%" y="405" width="0.0806%" height="15" fill="rgb(205,77,3)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="97.5020%" y="549" width="0.3223%" height="15" fill="rgb(207,155,3)" fg:x="1210" fg:w="4"/><text x="97.7520%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="97.5020%" y="533" width="0.3223%" height="15" fill="rgb(224,79,2)" fg:x="1210" fg:w="4"/><text x="97.7520%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="97.5826%" y="517" width="0.2417%" height="15" fill="rgb(243,172,5)" fg:x="1211" fg:w="3"/><text x="97.8326%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7438%" y="501" width="0.0806%" height="15" fill="rgb(217,23,43)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7438%" y="485" width="0.0806%" height="15" fill="rgb(223,109,20)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="97.2603%" y="597" width="0.6446%" height="15" fill="rgb(232,159,21)" fg:x="1207" fg:w="8"/><text x="97.5103%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="97.2603%" y="581" width="0.6446%" height="15" fill="rgb(219,58,2)" fg:x="1207" fg:w="8"/><text x="97.5103%" y="591.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.64%)</title><rect x="97.2603%" y="565" width="0.6446%" height="15" fill="rgb(241,56,8)" fg:x="1207" fg:w="8"/><text x="97.5103%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8243%" y="549" width="0.0806%" height="15" fill="rgb(249,10,27)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8243%" y="533" width="0.0806%" height="15" fill="rgb(248,177,5)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.8243%" y="517" width="0.0806%" height="15" fill="rgb(239,12,30)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.8243%" y="501" width="0.0806%" height="15" fill="rgb(229,164,25)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.8243%" y="485" width="0.0806%" height="15" fill="rgb(231,217,50)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.8243%" y="469" width="0.0806%" height="15" fill="rgb(247,99,32)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.8243%" y="453" width="0.0806%" height="15" fill="rgb(240,74,50)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="463.50"></text></g><g><title>engine::session::internal::Added::find_refs (10 samples, 0.81%)</title><rect x="97.1797%" y="629" width="0.8058%" height="15" fill="rgb(218,54,8)" fg:x="1206" fg:w="10"/><text x="97.4297%" y="639.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.81%)</title><rect x="97.1797%" y="613" width="0.8058%" height="15" fill="rgb(227,132,20)" fg:x="1206" fg:w="10"/><text x="97.4297%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9049%" y="597" width="0.0806%" height="15" fill="rgb(232,134,12)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9049%" y="581" width="0.0806%" height="15" fill="rgb(250,129,18)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="97.9049%" y="565" width="0.0806%" height="15" fill="rgb(232,129,47)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="97.9049%" y="549" width="0.0806%" height="15" fill="rgb(230,31,40)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="559.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="97.9049%" y="533" width="0.0806%" height="15" fill="rgb(232,126,10)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="543.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="97.9049%" y="517" width="0.0806%" height="15" fill="rgb(205,46,31)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="527.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="97.9049%" y="501" width="0.0806%" height="15" fill="rgb(232,37,37)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9049%" y="485" width="0.0806%" height="15" fill="rgb(240,91,16)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9855%" y="613" width="0.0806%" height="15" fill="rgb(224,160,9)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9855%" y="597" width="0.0806%" height="15" fill="rgb(215,116,14)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="98.0661%" y="613" width="0.0806%" height="15" fill="rgb(235,46,36)" fg:x="1217" fg:w="1"/><text x="98.3161%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.0661%" y="597" width="0.0806%" height="15" fill="rgb(238,39,28)" fg:x="1217" fg:w="1"/><text x="98.3161%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.0661%" y="581" width="0.0806%" height="15" fill="rgb(242,125,29)" fg:x="1217" fg:w="1"/><text x="98.3161%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1467%" y="533" width="0.0806%" height="15" fill="rgb(238,211,30)" fg:x="1218" fg:w="1"/><text x="98.3967%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.2272%" y="517" width="0.0806%" height="15" fill="rgb(227,201,28)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2272%" y="501" width="0.0806%" height="15" fill="rgb(238,77,29)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.2272%" y="485" width="0.0806%" height="15" fill="rgb(213,221,40)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2272%" y="469" width="0.0806%" height="15" fill="rgb(226,220,44)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.2272%" y="453" width="0.0806%" height="15" fill="rgb(228,90,23)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2272%" y="437" width="0.0806%" height="15" fill="rgb(235,72,29)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="98.1467%" y="613" width="0.2417%" height="15" fill="rgb(248,117,39)" fg:x="1218" fg:w="3"/><text x="98.3967%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.1467%" y="597" width="0.2417%" height="15" fill="rgb(225,43,28)" fg:x="1218" fg:w="3"/><text x="98.3967%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.1467%" y="581" width="0.2417%" height="15" fill="rgb(240,93,4)" fg:x="1218" fg:w="3"/><text x="98.3967%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="98.1467%" y="565" width="0.2417%" height="15" fill="rgb(234,178,27)" fg:x="1218" fg:w="3"/><text x="98.3967%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.1467%" y="549" width="0.2417%" height="15" fill="rgb(254,88,22)" fg:x="1218" fg:w="3"/><text x="98.3967%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.2272%" y="533" width="0.1612%" height="15" fill="rgb(240,206,50)" fg:x="1219" fg:w="2"/><text x="98.4772%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3078%" y="517" width="0.0806%" height="15" fill="rgb(249,103,8)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3078%" y="501" width="0.0806%" height="15" fill="rgb(241,178,36)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3884%" y="549" width="0.0806%" height="15" fill="rgb(246,110,15)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3884%" y="533" width="0.0806%" height="15" fill="rgb(207,14,43)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3884%" y="517" width="0.0806%" height="15" fill="rgb(253,219,19)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3884%" y="501" width="0.0806%" height="15" fill="rgb(216,126,5)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3884%" y="485" width="0.0806%" height="15" fill="rgb(218,78,42)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="495.50"></text></g><g><title>engine::session::Session::load_entity (53 samples, 4.27%)</title><rect x="94.2788%" y="645" width="4.2707%" height="15" fill="rgb(215,154,40)" fg:x="1170" fg:w="53"/><text x="94.5288%" y="655.50">engin..</text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="97.9855%" y="629" width="0.5641%" height="15" fill="rgb(235,129,32)" fg:x="1216" fg:w="7"/><text x="98.2355%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="98.3884%" y="613" width="0.1612%" height="15" fill="rgb(218,51,8)" fg:x="1221" fg:w="2"/><text x="98.6384%" y="623.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.3884%" y="597" width="0.1612%" height="15" fill="rgb(245,48,4)" fg:x="1221" fg:w="2"/><text x="98.6384%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.3884%" y="581" width="0.1612%" height="15" fill="rgb(250,175,12)" fg:x="1221" fg:w="2"/><text x="98.6384%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3884%" y="565" width="0.1612%" height="15" fill="rgb(237,95,40)" fg:x="1221" fg:w="2"/><text x="98.6384%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.4690%" y="549" width="0.0806%" height="15" fill="rgb(244,120,0)" fg:x="1222" fg:w="1"/><text x="98.7190%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4690%" y="533" width="0.0806%" height="15" fill="rgb(241,19,42)" fg:x="1222" fg:w="1"/><text x="98.7190%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.5496%" y="629" width="0.0806%" height="15" fill="rgb(217,174,48)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="98.5496%" y="613" width="0.0806%" height="15" fill="rgb(239,36,38)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6301%" y="597" width="0.0806%" height="15" fill="rgb(220,63,49)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.7107%" y="533" width="0.0806%" height="15" fill="rgb(240,101,13)" fg:x="1225" fg:w="1"/><text x="98.9607%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7107%" y="517" width="0.0806%" height="15" fill="rgb(209,184,51)" fg:x="1225" fg:w="1"/><text x="98.9607%" y="527.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="98.5496%" y="645" width="0.3223%" height="15" fill="rgb(206,136,39)" fg:x="1223" fg:w="4"/><text x="98.7996%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="98.6301%" y="629" width="0.2417%" height="15" fill="rgb(254,47,45)" fg:x="1224" fg:w="3"/><text x="98.8801%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="98.6301%" y="613" width="0.2417%" height="15" fill="rgb(252,103,20)" fg:x="1224" fg:w="3"/><text x="98.8801%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.7107%" y="597" width="0.1612%" height="15" fill="rgb(230,69,12)" fg:x="1225" fg:w="2"/><text x="98.9607%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.7107%" y="581" width="0.1612%" height="15" fill="rgb(219,2,28)" fg:x="1225" fg:w="2"/><text x="98.9607%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.7107%" y="565" width="0.1612%" height="15" fill="rgb(210,9,12)" fg:x="1225" fg:w="2"/><text x="98.9607%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.7107%" y="549" width="0.1612%" height="15" fill="rgb(235,99,33)" fg:x="1225" fg:w="2"/><text x="98.9607%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7913%" y="533" width="0.0806%" height="15" fill="rgb(230,11,38)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="98.8719%" y="645" width="0.0806%" height="15" fill="rgb(217,129,0)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.8719%" y="629" width="0.0806%" height="15" fill="rgb(222,198,4)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.8719%" y="613" width="0.0806%" height="15" fill="rgb(246,170,27)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8719%" y="597" width="0.0806%" height="15" fill="rgb(229,17,28)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8719%" y="581" width="0.0806%" height="15" fill="rgb(233,198,48)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8719%" y="565" width="0.0806%" height="15" fill="rgb(238,103,23)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.9525%" y="597" width="0.0806%" height="15" fill="rgb(206,91,41)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.9525%" y="581" width="0.0806%" height="15" fill="rgb(227,34,25)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.9525%" y="565" width="0.0806%" height="15" fill="rgb(210,110,44)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.9525%" y="549" width="0.0806%" height="15" fill="rgb(216,189,8)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.9525%" y="533" width="0.0806%" height="15" fill="rgb(234,9,46)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.9525%" y="517" width="0.0806%" height="15" fill="rgb(251,200,5)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9525%" y="501" width="0.0806%" height="15" fill="rgb(238,165,37)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9525%" y="485" width="0.0806%" height="15" fill="rgb(232,77,38)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="495.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="99.0330%" y="597" width="0.0806%" height="15" fill="rgb(253,179,33)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="99.1136%" y="597" width="0.1612%" height="15" fill="rgb(240,13,35)" fg:x="1230" fg:w="2"/><text x="99.3636%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.1136%" y="581" width="0.1612%" height="15" fill="rgb(242,150,49)" fg:x="1230" fg:w="2"/><text x="99.3636%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1136%" y="565" width="0.1612%" height="15" fill="rgb(237,176,28)" fg:x="1230" fg:w="2"/><text x="99.3636%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.1942%" y="549" width="0.0806%" height="15" fill="rgb(214,176,33)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1942%" y="533" width="0.0806%" height="15" fill="rgb(214,25,12)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1942%" y="517" width="0.0806%" height="15" fill="rgb(238,190,20)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1942%" y="501" width="0.0806%" height="15" fill="rgb(208,11,19)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1942%" y="485" width="0.0806%" height="15" fill="rgb(239,90,4)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.2748%" y="533" width="0.2417%" height="15" fill="rgb(248,110,3)" fg:x="1232" fg:w="3"/><text x="99.5248%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.2748%" y="517" width="0.2417%" height="15" fill="rgb(210,41,30)" fg:x="1232" fg:w="3"/><text x="99.5248%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.2748%" y="501" width="0.2417%" height="15" fill="rgb(239,36,8)" fg:x="1232" fg:w="3"/><text x="99.5248%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4359%" y="485" width="0.0806%" height="15" fill="rgb(237,201,47)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="495.50"></text></g><g><title>engine::session::Session::load_entity (8 samples, 0.64%)</title><rect x="98.9525%" y="629" width="0.6446%" height="15" fill="rgb(224,140,29)" fg:x="1228" fg:w="8"/><text x="99.2025%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="98.9525%" y="613" width="0.6446%" height="15" fill="rgb(231,209,17)" fg:x="1228" fg:w="8"/><text x="99.2025%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="99.2748%" y="597" width="0.3223%" height="15" fill="rgb(249,196,1)" fg:x="1232" fg:w="4"/><text x="99.5248%" y="607.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="99.2748%" y="581" width="0.3223%" height="15" fill="rgb(223,207,51)" fg:x="1232" fg:w="4"/><text x="99.5248%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.2748%" y="565" width="0.3223%" height="15" fill="rgb(210,14,40)" fg:x="1232" fg:w="4"/><text x="99.5248%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.2748%" y="549" width="0.3223%" height="15" fill="rgb(250,20,52)" fg:x="1232" fg:w="4"/><text x="99.5248%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5165%" y="533" width="0.0806%" height="15" fill="rgb(241,46,11)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.5971%" y="613" width="0.0806%" height="15" fill="rgb(219,105,5)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.5971%" y="597" width="0.0806%" height="15" fill="rgb(252,77,35)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.5971%" y="581" width="0.0806%" height="15" fill="rgb(243,119,2)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.5971%" y="565" width="0.0806%" height="15" fill="rgb(206,82,28)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.5971%" y="549" width="0.0806%" height="15" fill="rgb(227,120,12)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="99.5971%" y="533" width="0.0806%" height="15" fill="rgb(229,134,41)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.5971%" y="517" width="0.0806%" height="15" fill="rgb(239,96,32)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.6777%" y="613" width="0.0806%" height="15" fill="rgb(225,46,27)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.6777%" y="597" width="0.0806%" height="15" fill="rgb(215,168,2)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6777%" y="581" width="0.0806%" height="15" fill="rgb(207,170,52)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6777%" y="565" width="0.0806%" height="15" fill="rgb(237,198,36)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6777%" y="549" width="0.0806%" height="15" fill="rgb(213,27,14)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6777%" y="533" width="0.0806%" height="15" fill="rgb(218,77,5)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6777%" y="517" width="0.0806%" height="15" fill="rgb(230,219,39)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.6777%" y="501" width="0.0806%" height="15" fill="rgb(245,177,7)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.6777%" y="485" width="0.0806%" height="15" fill="rgb(246,44,46)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.6777%" y="469" width="0.0806%" height="15" fill="rgb(207,173,15)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6777%" y="453" width="0.0806%" height="15" fill="rgb(245,170,50)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6777%" y="437" width="0.0806%" height="15" fill="rgb(233,156,21)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.6777%" y="421" width="0.0806%" height="15" fill="rgb(253,146,27)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.6777%" y="405" width="0.0806%" height="15" fill="rgb(247,66,29)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.6777%" y="389" width="0.0806%" height="15" fill="rgb(218,207,26)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.6777%" y="373" width="0.0806%" height="15" fill="rgb(234,93,26)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6777%" y="357" width="0.0806%" height="15" fill="rgb(214,75,48)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.7583%" y="581" width="0.0806%" height="15" fill="rgb(229,119,22)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.7583%" y="565" width="0.0806%" height="15" fill="rgb(226,153,19)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.7583%" y="549" width="0.0806%" height="15" fill="rgb(220,204,36)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="559.50"></text></g><g><title>all (1,241 samples, 100%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(253,181,43)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1039.50"></text></g><g><title>simple-d06cd706 (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(211,41,51)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1023.50">simple-d06cd706</text></g><g><title>_start (1,241 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(207,215,0)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1007.50">_start</text></g><g><title>__libc_start_main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(212,153,10)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="991.50">__libc_start_main</text></g><g><title>main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(251,171,36)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="975.50">main</text></g><g><title>std::rt::lang_start_internal (1,241 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(225,219,41)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="959.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,241 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(208,200,1)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,241 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(206,75,47)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,241 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(248,3,16)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="911.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,241 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(242,157,36)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="895.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,241 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(215,175,11)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,241 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(252,222,22)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,241 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(250,121,35)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="847.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,241 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(233,120,49)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="831.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,241 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(205,201,14)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="815.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,241 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(219,58,45)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="799.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(251,65,12)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="783.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,241 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(224,47,31)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="767.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,241 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(233,74,26)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="751.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (369 samples, 29.73%)</title><rect x="70.2659%" y="725" width="29.7341%" height="15" fill="rgb(231,211,31)" fg:x="872" fg:w="369"/><text x="70.5159%" y="735.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterio..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (369 samples, 29.73%)</title><rect x="70.2659%" y="709" width="29.7341%" height="15" fill="rgb(239,167,5)" fg:x="872" fg:w="369"/><text x="70.5159%" y="719.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (369 samples, 29.73%)</title><rect x="70.2659%" y="693" width="29.7341%" height="15" fill="rgb(241,85,0)" fg:x="872" fg:w="369"/><text x="70.5159%" y="703.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (127 samples, 10.23%)</title><rect x="89.7663%" y="677" width="10.2337%" height="15" fill="rgb(229,130,21)" fg:x="1114" fg:w="127"/><text x="90.0163%" y="687.50">engine::session..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (127 samples, 10.23%)</title><rect x="89.7663%" y="661" width="10.2337%" height="15" fill="rgb(254,84,49)" fg:x="1114" fg:w="127"/><text x="90.0163%" y="671.50">engine::session..</text></g><g><title>kernel::model::entry::EntryResolver::world (13 samples, 1.05%)</title><rect x="98.9525%" y="645" width="1.0475%" height="15" fill="rgb(235,85,21)" fg:x="1228" fg:w="13"/><text x="99.2025%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="99.5971%" y="629" width="0.4029%" height="15" fill="rgb(246,128,52)" fg:x="1236" fg:w="5"/><text x="99.8471%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="99.7583%" y="613" width="0.2417%" height="15" fill="rgb(243,114,49)" fg:x="1238" fg:w="3"/><text x="100.0083%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="99.7583%" y="597" width="0.2417%" height="15" fill="rgb(240,224,22)" fg:x="1238" fg:w="3"/><text x="100.0083%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.8388%" y="581" width="0.1612%" height="15" fill="rgb(247,201,52)" fg:x="1239" fg:w="2"/><text x="100.0888%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.8388%" y="565" width="0.1612%" height="15" fill="rgb(231,70,45)" fg:x="1239" fg:w="2"/><text x="100.0888%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.9194%" y="549" width="0.0806%" height="15" fill="rgb(217,215,20)" fg:x="1240" fg:w="1"/><text x="100.1694%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.9194%" y="533" width="0.0806%" height="15" fill="rgb(226,170,30)" fg:x="1240" fg:w="1"/><text x="100.1694%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.9194%" y="517" width="0.0806%" height="15" fill="rgb(220,190,43)" fg:x="1240" fg:w="1"/><text x="100.1694%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.9194%" y="501" width="0.0806%" height="15" fill="rgb(218,20,18)" fg:x="1240" fg:w="1"/><text x="100.1694%" y="511.50"></text></g></svg></svg>