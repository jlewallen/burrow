<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1206" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1189.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1189.00"> </text><svg id="frames" x="10" width="1180" total_samples="1243"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="0.0805%" y="789" width="0.1609%" height="15" fill="rgb(206,185,35)" fg:x="1" fg:w="2"/><text x="0.3305%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.0805%" y="773" width="0.1609%" height="15" fill="rgb(228,140,34)" fg:x="1" fg:w="2"/><text x="0.3305%" y="783.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.0805%" y="757" width="0.1609%" height="15" fill="rgb(208,93,13)" fg:x="1" fg:w="2"/><text x="0.3305%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4023%" y="693" width="0.0805%" height="15" fill="rgb(221,193,39)" fg:x="5" fg:w="1"/><text x="0.6523%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.4827%" y="693" width="0.1609%" height="15" fill="rgb(241,132,34)" fg:x="6" fg:w="2"/><text x="0.7327%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.4827%" y="677" width="0.1609%" height="15" fill="rgb(221,141,10)" fg:x="6" fg:w="2"/><text x="0.7327%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.7241%" y="677" width="0.0805%" height="15" fill="rgb(226,90,31)" fg:x="9" fg:w="1"/><text x="0.9741%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7241%" y="661" width="0.0805%" height="15" fill="rgb(243,75,5)" fg:x="9" fg:w="1"/><text x="0.9741%" y="671.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.8045%" y="677" width="0.2414%" height="15" fill="rgb(227,156,21)" fg:x="10" fg:w="3"/><text x="1.0545%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.0459%" y="677" width="0.0805%" height="15" fill="rgb(250,195,8)" fg:x="13" fg:w="1"/><text x="1.2959%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0459%" y="661" width="0.0805%" height="15" fill="rgb(220,134,5)" fg:x="13" fg:w="1"/><text x="1.2959%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.2068%" y="645" width="0.1609%" height="15" fill="rgb(246,106,34)" fg:x="15" fg:w="2"/><text x="1.4568%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.3677%" y="645" width="0.0805%" height="15" fill="rgb(205,1,4)" fg:x="17" fg:w="1"/><text x="1.6177%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4481%" y="629" width="0.0805%" height="15" fill="rgb(224,151,29)" fg:x="18" fg:w="1"/><text x="1.6981%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.29%)</title><rect x="0.3218%" y="725" width="1.2872%" height="15" fill="rgb(251,196,0)" fg:x="4" fg:w="16"/><text x="0.5718%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.29%)</title><rect x="0.3218%" y="709" width="1.2872%" height="15" fill="rgb(212,127,0)" fg:x="4" fg:w="16"/><text x="0.5718%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="0.6436%" y="693" width="0.9654%" height="15" fill="rgb(236,71,53)" fg:x="8" fg:w="12"/><text x="0.8936%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="1.1263%" y="677" width="0.4827%" height="15" fill="rgb(227,99,0)" fg:x="14" fg:w="6"/><text x="1.3763%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="1.1263%" y="661" width="0.4827%" height="15" fill="rgb(239,89,21)" fg:x="14" fg:w="6"/><text x="1.3763%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.4481%" y="645" width="0.1609%" height="15" fill="rgb(243,122,19)" fg:x="18" fg:w="2"/><text x="1.6981%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.5286%" y="629" width="0.0805%" height="15" fill="rgb(229,192,45)" fg:x="19" fg:w="1"/><text x="1.7786%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.45%)</title><rect x="0.2414%" y="773" width="1.4481%" height="15" fill="rgb(235,165,35)" fg:x="3" fg:w="18"/><text x="0.4914%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (17 samples, 1.37%)</title><rect x="0.3218%" y="757" width="1.3677%" height="15" fill="rgb(253,202,0)" fg:x="4" fg:w="17"/><text x="0.5718%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.37%)</title><rect x="0.3218%" y="741" width="1.3677%" height="15" fill="rgb(235,51,20)" fg:x="4" fg:w="17"/><text x="0.5718%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6090%" y="725" width="0.0805%" height="15" fill="rgb(218,95,46)" fg:x="20" fg:w="1"/><text x="1.8590%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.77%)</title><rect x="0.0000%" y="805" width="1.7699%" height="15" fill="rgb(212,81,10)" fg:x="0" fg:w="22"/><text x="0.2500%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (19 samples, 1.53%)</title><rect x="0.2414%" y="789" width="1.5286%" height="15" fill="rgb(240,59,0)" fg:x="3" fg:w="19"/><text x="0.4914%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6895%" y="773" width="0.0805%" height="15" fill="rgb(212,191,42)" fg:x="21" fg:w="1"/><text x="1.9395%" y="783.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="1.7699%" y="677" width="0.2414%" height="15" fill="rgb(233,140,3)" fg:x="22" fg:w="3"/><text x="2.0199%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="1.9308%" y="661" width="0.0805%" height="15" fill="rgb(215,69,23)" fg:x="24" fg:w="1"/><text x="2.1808%" y="671.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="1.7699%" y="693" width="0.3218%" height="15" fill="rgb(240,202,20)" fg:x="22" fg:w="4"/><text x="2.0199%" y="703.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="2.0113%" y="677" width="0.0805%" height="15" fill="rgb(209,146,50)" fg:x="25" fg:w="1"/><text x="2.2613%" y="687.50"></text></g><g><title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="2.1722%" y="629" width="0.0805%" height="15" fill="rgb(253,102,54)" fg:x="27" fg:w="1"/><text x="2.4222%" y="639.50"></text></g><g><title>dlopen (12 samples, 0.97%)</title><rect x="2.0917%" y="693" width="0.9654%" height="15" fill="rgb(250,173,47)" fg:x="26" fg:w="12"/><text x="2.3417%" y="703.50"></text></g><g><title>_dl_catch_error (12 samples, 0.97%)</title><rect x="2.0917%" y="677" width="0.9654%" height="15" fill="rgb(232,142,7)" fg:x="26" fg:w="12"/><text x="2.3417%" y="687.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.97%)</title><rect x="2.0917%" y="661" width="0.9654%" height="15" fill="rgb(230,157,47)" fg:x="26" fg:w="12"/><text x="2.3417%" y="671.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.97%)</title><rect x="2.0917%" y="645" width="0.9654%" height="15" fill="rgb(214,177,35)" fg:x="26" fg:w="12"/><text x="2.3417%" y="655.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.80%)</title><rect x="2.2526%" y="629" width="0.8045%" height="15" fill="rgb(234,119,46)" fg:x="28" fg:w="10"/><text x="2.5026%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (18 samples, 1.45%)</title><rect x="1.7699%" y="741" width="1.4481%" height="15" fill="rgb(241,180,50)" fg:x="22" fg:w="18"/><text x="2.0199%" y="751.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (18 samples, 1.45%)</title><rect x="1.7699%" y="725" width="1.4481%" height="15" fill="rgb(221,54,25)" fg:x="22" fg:w="18"/><text x="2.0199%" y="735.50"></text></g><g><title>libloading::safe::Library::new (18 samples, 1.45%)</title><rect x="1.7699%" y="709" width="1.4481%" height="15" fill="rgb(209,157,44)" fg:x="22" fg:w="18"/><text x="2.0199%" y="719.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (2 samples, 0.16%)</title><rect x="3.0571%" y="693" width="0.1609%" height="15" fill="rgb(246,115,41)" fg:x="38" fg:w="2"/><text x="3.3071%" y="703.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (2 samples, 0.16%)</title><rect x="3.0571%" y="677" width="0.1609%" height="15" fill="rgb(229,86,1)" fg:x="38" fg:w="2"/><text x="3.3071%" y="687.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (2 samples, 0.16%)</title><rect x="3.0571%" y="661" width="0.1609%" height="15" fill="rgb(240,108,53)" fg:x="38" fg:w="2"/><text x="3.3071%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="3.0571%" y="645" width="0.1609%" height="15" fill="rgb(227,134,2)" fg:x="38" fg:w="2"/><text x="3.3071%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="3.0571%" y="629" width="0.1609%" height="15" fill="rgb(213,129,25)" fg:x="38" fg:w="2"/><text x="3.3071%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="3.0571%" y="613" width="0.1609%" height="15" fill="rgb(226,35,21)" fg:x="38" fg:w="2"/><text x="3.3071%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="3.1376%" y="597" width="0.0805%" height="15" fill="rgb(208,129,26)" fg:x="39" fg:w="1"/><text x="3.3876%" y="607.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="3.2985%" y="709" width="0.0805%" height="15" fill="rgb(224,83,6)" fg:x="41" fg:w="1"/><text x="3.5485%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.2985%" y="693" width="0.0805%" height="15" fill="rgb(227,52,39)" fg:x="41" fg:w="1"/><text x="3.5485%" y="703.50"></text></g><g><title>engine::session::Session::initialize (22 samples, 1.77%)</title><rect x="1.7699%" y="757" width="1.7699%" height="15" fill="rgb(241,30,17)" fg:x="22" fg:w="22"/><text x="2.0199%" y="767.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="3.2180%" y="741" width="0.3218%" height="15" fill="rgb(246,186,42)" fg:x="40" fg:w="4"/><text x="3.4680%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="3.2180%" y="725" width="0.3218%" height="15" fill="rgb(221,169,15)" fg:x="40" fg:w="4"/><text x="3.4680%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="3.3789%" y="709" width="0.1609%" height="15" fill="rgb(235,108,21)" fg:x="42" fg:w="2"/><text x="3.6289%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="3.3789%" y="693" width="0.1609%" height="15" fill="rgb(219,148,30)" fg:x="42" fg:w="2"/><text x="3.6289%" y="703.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="3.3789%" y="677" width="0.1609%" height="15" fill="rgb(220,109,5)" fg:x="42" fg:w="2"/><text x="3.6289%" y="687.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (23 samples, 1.85%)</title><rect x="1.7699%" y="805" width="1.8504%" height="15" fill="rgb(213,203,48)" fg:x="22" fg:w="23"/><text x="2.0199%" y="815.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (23 samples, 1.85%)</title><rect x="1.7699%" y="789" width="1.8504%" height="15" fill="rgb(244,71,33)" fg:x="22" fg:w="23"/><text x="2.0199%" y="799.50">e..</text></g><g><title>engine::session::Session::new (23 samples, 1.85%)</title><rect x="1.7699%" y="773" width="1.8504%" height="15" fill="rgb(209,23,2)" fg:x="22" fg:w="23"/><text x="2.0199%" y="783.50">e..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="3.5398%" y="757" width="0.0805%" height="15" fill="rgb(219,97,7)" fg:x="44" fg:w="1"/><text x="3.7898%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.5398%" y="741" width="0.0805%" height="15" fill="rgb(216,161,23)" fg:x="44" fg:w="1"/><text x="3.7898%" y="751.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="3.5398%" y="725" width="0.0805%" height="15" fill="rgb(207,45,42)" fg:x="44" fg:w="1"/><text x="3.7898%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.5398%" y="709" width="0.0805%" height="15" fill="rgb(241,61,4)" fg:x="44" fg:w="1"/><text x="3.7898%" y="719.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="3.7007%" y="789" width="0.1609%" height="15" fill="rgb(236,170,1)" fg:x="46" fg:w="2"/><text x="3.9507%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="3.7007%" y="773" width="0.1609%" height="15" fill="rgb(239,72,5)" fg:x="46" fg:w="2"/><text x="3.9507%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="3.7007%" y="757" width="0.1609%" height="15" fill="rgb(214,13,50)" fg:x="46" fg:w="2"/><text x="3.9507%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="3.7007%" y="741" width="0.1609%" height="15" fill="rgb(224,88,9)" fg:x="46" fg:w="2"/><text x="3.9507%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="3.7007%" y="725" width="0.1609%" height="15" fill="rgb(238,192,34)" fg:x="46" fg:w="2"/><text x="3.9507%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="3.7007%" y="709" width="0.1609%" height="15" fill="rgb(217,203,50)" fg:x="46" fg:w="2"/><text x="3.9507%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="3.7007%" y="693" width="0.1609%" height="15" fill="rgb(241,123,32)" fg:x="46" fg:w="2"/><text x="3.9507%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="3.7007%" y="677" width="0.1609%" height="15" fill="rgb(248,151,39)" fg:x="46" fg:w="2"/><text x="3.9507%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="3.7007%" y="661" width="0.1609%" height="15" fill="rgb(208,89,6)" fg:x="46" fg:w="2"/><text x="3.9507%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="3.7007%" y="645" width="0.1609%" height="15" fill="rgb(254,43,26)" fg:x="46" fg:w="2"/><text x="3.9507%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="3.7007%" y="629" width="0.1609%" height="15" fill="rgb(216,158,13)" fg:x="46" fg:w="2"/><text x="3.9507%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="3.7007%" y="613" width="0.1609%" height="15" fill="rgb(212,47,37)" fg:x="46" fg:w="2"/><text x="3.9507%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="3.7007%" y="597" width="0.1609%" height="15" fill="rgb(254,16,10)" fg:x="46" fg:w="2"/><text x="3.9507%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.8616%" y="789" width="0.0805%" height="15" fill="rgb(223,228,16)" fg:x="48" fg:w="1"/><text x="4.1116%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="3.8616%" y="773" width="0.0805%" height="15" fill="rgb(249,108,50)" fg:x="48" fg:w="1"/><text x="4.1116%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.8616%" y="757" width="0.0805%" height="15" fill="rgb(208,220,5)" fg:x="48" fg:w="1"/><text x="4.1116%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="3.9421%" y="773" width="0.0805%" height="15" fill="rgb(217,89,48)" fg:x="49" fg:w="1"/><text x="4.1921%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.9421%" y="757" width="0.0805%" height="15" fill="rgb(212,113,41)" fg:x="49" fg:w="1"/><text x="4.1921%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.9421%" y="741" width="0.0805%" height="15" fill="rgb(231,127,5)" fg:x="49" fg:w="1"/><text x="4.1921%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="3.9421%" y="725" width="0.0805%" height="15" fill="rgb(217,141,17)" fg:x="49" fg:w="1"/><text x="4.1921%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="3.9421%" y="709" width="0.0805%" height="15" fill="rgb(245,125,54)" fg:x="49" fg:w="1"/><text x="4.1921%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="3.9421%" y="693" width="0.0805%" height="15" fill="rgb(248,125,3)" fg:x="49" fg:w="1"/><text x="4.1921%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.9421%" y="677" width="0.0805%" height="15" fill="rgb(236,119,51)" fg:x="49" fg:w="1"/><text x="4.1921%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.9421%" y="661" width="0.0805%" height="15" fill="rgb(239,99,8)" fg:x="49" fg:w="1"/><text x="4.1921%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="3.9421%" y="645" width="0.0805%" height="15" fill="rgb(224,228,4)" fg:x="49" fg:w="1"/><text x="4.1921%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="3.9421%" y="629" width="0.0805%" height="15" fill="rgb(220,131,45)" fg:x="49" fg:w="1"/><text x="4.1921%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="3.9421%" y="613" width="0.0805%" height="15" fill="rgb(215,62,5)" fg:x="49" fg:w="1"/><text x="4.1921%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="3.9421%" y="597" width="0.0805%" height="15" fill="rgb(253,12,24)" fg:x="49" fg:w="1"/><text x="4.1921%" y="607.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="4.0225%" y="677" width="0.0805%" height="15" fill="rgb(248,120,50)" fg:x="50" fg:w="1"/><text x="4.2725%" y="687.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="4.0225%" y="773" width="0.1609%" height="15" fill="rgb(245,194,10)" fg:x="50" fg:w="2"/><text x="4.2725%" y="783.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="4.0225%" y="757" width="0.1609%" height="15" fill="rgb(241,149,38)" fg:x="50" fg:w="2"/><text x="4.2725%" y="767.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="4.0225%" y="741" width="0.1609%" height="15" fill="rgb(219,215,7)" fg:x="50" fg:w="2"/><text x="4.2725%" y="751.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="4.0225%" y="725" width="0.1609%" height="15" fill="rgb(208,120,31)" fg:x="50" fg:w="2"/><text x="4.2725%" y="735.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="4.0225%" y="709" width="0.1609%" height="15" fill="rgb(244,30,8)" fg:x="50" fg:w="2"/><text x="4.2725%" y="719.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="4.0225%" y="693" width="0.1609%" height="15" fill="rgb(238,35,44)" fg:x="50" fg:w="2"/><text x="4.2725%" y="703.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="4.1030%" y="677" width="0.0805%" height="15" fill="rgb(243,218,37)" fg:x="51" fg:w="1"/><text x="4.3530%" y="687.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="4.1030%" y="661" width="0.0805%" height="15" fill="rgb(218,169,10)" fg:x="51" fg:w="1"/><text x="4.3530%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="4.2639%" y="725" width="0.0805%" height="15" fill="rgb(221,144,10)" fg:x="53" fg:w="1"/><text x="4.5139%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.2639%" y="709" width="0.0805%" height="15" fill="rgb(226,41,38)" fg:x="53" fg:w="1"/><text x="4.5139%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="4.2639%" y="693" width="0.0805%" height="15" fill="rgb(228,3,1)" fg:x="53" fg:w="1"/><text x="4.5139%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="4.2639%" y="677" width="0.0805%" height="15" fill="rgb(209,129,12)" fg:x="53" fg:w="1"/><text x="4.5139%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="4.3443%" y="709" width="0.1609%" height="15" fill="rgb(213,136,33)" fg:x="54" fg:w="2"/><text x="4.5943%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="4.3443%" y="693" width="0.1609%" height="15" fill="rgb(209,181,29)" fg:x="54" fg:w="2"/><text x="4.5943%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="4.4248%" y="677" width="0.0805%" height="15" fill="rgb(234,173,18)" fg:x="55" fg:w="1"/><text x="4.6748%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="4.4248%" y="661" width="0.0805%" height="15" fill="rgb(227,73,47)" fg:x="55" fg:w="1"/><text x="4.6748%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.4248%" y="645" width="0.0805%" height="15" fill="rgb(234,9,34)" fg:x="55" fg:w="1"/><text x="4.6748%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="4.5052%" y="677" width="0.2414%" height="15" fill="rgb(235,172,15)" fg:x="56" fg:w="3"/><text x="4.7552%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.5857%" y="661" width="0.1609%" height="15" fill="rgb(245,61,2)" fg:x="57" fg:w="2"/><text x="4.8357%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.6661%" y="645" width="0.0805%" height="15" fill="rgb(238,39,47)" fg:x="58" fg:w="1"/><text x="4.9161%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="4.5052%" y="693" width="0.4827%" height="15" fill="rgb(234,37,24)" fg:x="56" fg:w="6"/><text x="4.7552%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="4.7466%" y="677" width="0.2414%" height="15" fill="rgb(248,223,24)" fg:x="59" fg:w="3"/><text x="4.9966%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.8270%" y="661" width="0.1609%" height="15" fill="rgb(223,12,15)" fg:x="60" fg:w="2"/><text x="5.0770%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.9075%" y="645" width="0.0805%" height="15" fill="rgb(249,6,3)" fg:x="61" fg:w="1"/><text x="5.1575%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="5.0684%" y="677" width="0.0805%" height="15" fill="rgb(237,105,33)" fg:x="63" fg:w="1"/><text x="5.3184%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.0684%" y="661" width="0.0805%" height="15" fill="rgb(252,208,35)" fg:x="63" fg:w="1"/><text x="5.3184%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="5.1488%" y="677" width="0.5632%" height="15" fill="rgb(215,181,35)" fg:x="64" fg:w="7"/><text x="5.3988%" y="687.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="5.3097%" y="661" width="0.4023%" height="15" fill="rgb(246,212,3)" fg:x="66" fg:w="5"/><text x="5.5597%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.4706%" y="645" width="0.2414%" height="15" fill="rgb(247,156,24)" fg:x="68" fg:w="3"/><text x="5.7206%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.5511%" y="629" width="0.1609%" height="15" fill="rgb(248,9,31)" fg:x="69" fg:w="2"/><text x="5.8011%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.7924%" y="629" width="0.0805%" height="15" fill="rgb(234,26,45)" fg:x="72" fg:w="1"/><text x="6.0424%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.7924%" y="613" width="0.0805%" height="15" fill="rgb(249,11,32)" fg:x="72" fg:w="1"/><text x="6.0424%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.7924%" y="597" width="0.0805%" height="15" fill="rgb(249,162,33)" fg:x="72" fg:w="1"/><text x="6.0424%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.7924%" y="581" width="0.0805%" height="15" fill="rgb(232,4,32)" fg:x="72" fg:w="1"/><text x="6.0424%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.7924%" y="565" width="0.0805%" height="15" fill="rgb(212,5,45)" fg:x="72" fg:w="1"/><text x="6.0424%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.7924%" y="549" width="0.0805%" height="15" fill="rgb(227,95,13)" fg:x="72" fg:w="1"/><text x="6.0424%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.7924%" y="533" width="0.0805%" height="15" fill="rgb(223,205,10)" fg:x="72" fg:w="1"/><text x="6.0424%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="5.7924%" y="661" width="0.1609%" height="15" fill="rgb(222,178,8)" fg:x="72" fg:w="2"/><text x="6.0424%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.7924%" y="645" width="0.1609%" height="15" fill="rgb(216,13,22)" fg:x="72" fg:w="2"/><text x="6.0424%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="5.8729%" y="629" width="0.0805%" height="15" fill="rgb(240,167,12)" fg:x="73" fg:w="1"/><text x="6.1229%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.8729%" y="613" width="0.0805%" height="15" fill="rgb(235,68,35)" fg:x="73" fg:w="1"/><text x="6.1229%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.8729%" y="597" width="0.0805%" height="15" fill="rgb(253,40,27)" fg:x="73" fg:w="1"/><text x="6.1229%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="5.9533%" y="661" width="0.2414%" height="15" fill="rgb(214,19,28)" fg:x="74" fg:w="3"/><text x="6.2033%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.0338%" y="645" width="0.1609%" height="15" fill="rgb(210,167,45)" fg:x="75" fg:w="2"/><text x="6.2838%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.1947%" y="645" width="0.0805%" height="15" fill="rgb(232,97,40)" fg:x="77" fg:w="1"/><text x="6.4447%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.1947%" y="629" width="0.0805%" height="15" fill="rgb(250,35,23)" fg:x="77" fg:w="1"/><text x="6.4447%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.3556%" y="613" width="0.0805%" height="15" fill="rgb(248,47,53)" fg:x="79" fg:w="1"/><text x="6.6056%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.4360%" y="613" width="0.0805%" height="15" fill="rgb(226,58,50)" fg:x="80" fg:w="1"/><text x="6.6860%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.4360%" y="597" width="0.0805%" height="15" fill="rgb(217,105,26)" fg:x="80" fg:w="1"/><text x="6.6860%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="6.5165%" y="597" width="0.4023%" height="15" fill="rgb(208,64,1)" fg:x="81" fg:w="5"/><text x="6.7665%" y="607.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="6.5165%" y="581" width="0.4023%" height="15" fill="rgb(214,80,1)" fg:x="81" fg:w="5"/><text x="6.7665%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="6.5165%" y="565" width="0.4023%" height="15" fill="rgb(206,175,26)" fg:x="81" fg:w="5"/><text x="6.7665%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="6.5165%" y="549" width="0.4023%" height="15" fill="rgb(235,156,37)" fg:x="81" fg:w="5"/><text x="6.7665%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="6.5165%" y="533" width="0.4023%" height="15" fill="rgb(213,100,9)" fg:x="81" fg:w="5"/><text x="6.7665%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="6.5165%" y="517" width="0.4023%" height="15" fill="rgb(241,15,13)" fg:x="81" fg:w="5"/><text x="6.7665%" y="527.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="6.5165%" y="501" width="0.4023%" height="15" fill="rgb(205,97,43)" fg:x="81" fg:w="5"/><text x="6.7665%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="6.5165%" y="613" width="0.5632%" height="15" fill="rgb(216,106,32)" fg:x="81" fg:w="7"/><text x="6.7665%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.9187%" y="597" width="0.1609%" height="15" fill="rgb(226,200,8)" fg:x="86" fg:w="2"/><text x="7.1687%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.9187%" y="581" width="0.1609%" height="15" fill="rgb(244,54,29)" fg:x="86" fg:w="2"/><text x="7.1687%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.9992%" y="565" width="0.0805%" height="15" fill="rgb(252,169,12)" fg:x="87" fg:w="1"/><text x="7.2492%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="6.2751%" y="645" width="0.9654%" height="15" fill="rgb(231,199,11)" fg:x="78" fg:w="12"/><text x="6.5251%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="6.2751%" y="629" width="0.9654%" height="15" fill="rgb(233,191,18)" fg:x="78" fg:w="12"/><text x="6.5251%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.0796%" y="613" width="0.1609%" height="15" fill="rgb(215,83,47)" fg:x="88" fg:w="2"/><text x="7.3296%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.0796%" y="597" width="0.1609%" height="15" fill="rgb(251,67,19)" fg:x="88" fg:w="2"/><text x="7.3296%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.1601%" y="581" width="0.0805%" height="15" fill="rgb(240,7,20)" fg:x="89" fg:w="1"/><text x="7.4101%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="6.1947%" y="661" width="1.2068%" height="15" fill="rgb(210,150,26)" fg:x="77" fg:w="15"/><text x="6.4447%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.2405%" y="645" width="0.1609%" height="15" fill="rgb(228,75,42)" fg:x="90" fg:w="2"/><text x="7.4905%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.3210%" y="629" width="0.0805%" height="15" fill="rgb(237,134,48)" fg:x="91" fg:w="1"/><text x="7.5710%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3210%" y="613" width="0.0805%" height="15" fill="rgb(205,80,50)" fg:x="91" fg:w="1"/><text x="7.5710%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.77%)</title><rect x="5.7120%" y="677" width="1.7699%" height="15" fill="rgb(217,74,48)" fg:x="71" fg:w="22"/><text x="5.9620%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.4014%" y="661" width="0.0805%" height="15" fill="rgb(205,82,50)" fg:x="92" fg:w="1"/><text x="7.6514%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.4014%" y="645" width="0.0805%" height="15" fill="rgb(228,1,33)" fg:x="92" fg:w="1"/><text x="7.6514%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (34 samples, 2.74%)</title><rect x="4.9879%" y="693" width="2.7353%" height="15" fill="rgb(214,50,23)" fg:x="62" fg:w="34"/><text x="5.2379%" y="703.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.4819%" y="677" width="0.2414%" height="15" fill="rgb(210,62,9)" fg:x="93" fg:w="3"/><text x="7.7319%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.4819%" y="661" width="0.2414%" height="15" fill="rgb(210,104,37)" fg:x="93" fg:w="3"/><text x="7.7319%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.6428%" y="645" width="0.0805%" height="15" fill="rgb(232,104,43)" fg:x="95" fg:w="1"/><text x="7.8928%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.6428%" y="629" width="0.0805%" height="15" fill="rgb(244,52,6)" fg:x="95" fg:w="1"/><text x="7.8928%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (42 samples, 3.38%)</title><rect x="4.5052%" y="709" width="3.3789%" height="15" fill="rgb(211,174,52)" fg:x="56" fg:w="42"/><text x="4.7552%" y="719.50">&lt;se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.7233%" y="693" width="0.1609%" height="15" fill="rgb(229,48,4)" fg:x="96" fg:w="2"/><text x="7.9733%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.8037%" y="677" width="0.0805%" height="15" fill="rgb(205,155,16)" fg:x="97" fg:w="1"/><text x="8.0537%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.8037%" y="661" width="0.0805%" height="15" fill="rgb(211,141,53)" fg:x="97" fg:w="1"/><text x="8.0537%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.8842%" y="677" width="0.0805%" height="15" fill="rgb(240,148,11)" fg:x="98" fg:w="1"/><text x="8.1342%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0451%" y="645" width="0.0805%" height="15" fill="rgb(214,45,23)" fg:x="100" fg:w="1"/><text x="8.2951%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.1255%" y="629" width="0.0805%" height="15" fill="rgb(248,74,26)" fg:x="101" fg:w="1"/><text x="8.3755%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="8.2060%" y="629" width="0.0805%" height="15" fill="rgb(218,121,16)" fg:x="102" fg:w="1"/><text x="8.4560%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="8.2060%" y="613" width="0.0805%" height="15" fill="rgb(218,10,47)" fg:x="102" fg:w="1"/><text x="8.4560%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.2060%" y="597" width="0.0805%" height="15" fill="rgb(227,99,14)" fg:x="102" fg:w="1"/><text x="8.4560%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="8.2864%" y="613" width="0.0805%" height="15" fill="rgb(229,83,46)" fg:x="103" fg:w="1"/><text x="8.5364%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.3669%" y="597" width="0.0805%" height="15" fill="rgb(228,25,1)" fg:x="104" fg:w="1"/><text x="8.6169%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="8.4473%" y="597" width="0.3218%" height="15" fill="rgb(252,190,15)" fg:x="105" fg:w="4"/><text x="8.6973%" y="607.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="8.5278%" y="581" width="0.2414%" height="15" fill="rgb(213,103,51)" fg:x="106" fg:w="3"/><text x="8.7778%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="7.8842%" y="709" width="0.9654%" height="15" fill="rgb(220,38,44)" fg:x="98" fg:w="12"/><text x="8.1342%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.97%)</title><rect x="7.8842%" y="693" width="0.9654%" height="15" fill="rgb(210,45,26)" fg:x="98" fg:w="12"/><text x="8.1342%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="7.9646%" y="677" width="0.8850%" height="15" fill="rgb(205,95,48)" fg:x="99" fg:w="11"/><text x="8.2146%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="7.9646%" y="661" width="0.8850%" height="15" fill="rgb(225,179,37)" fg:x="99" fg:w="11"/><text x="8.2146%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="8.1255%" y="645" width="0.7241%" height="15" fill="rgb(230,209,3)" fg:x="101" fg:w="9"/><text x="8.3755%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="8.2864%" y="629" width="0.5632%" height="15" fill="rgb(248,12,46)" fg:x="103" fg:w="7"/><text x="8.5364%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="8.3669%" y="613" width="0.4827%" height="15" fill="rgb(234,18,0)" fg:x="104" fg:w="6"/><text x="8.6169%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.7691%" y="597" width="0.0805%" height="15" fill="rgb(238,197,14)" fg:x="109" fg:w="1"/><text x="9.0191%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="8.8496%" y="693" width="0.0805%" height="15" fill="rgb(251,162,48)" fg:x="110" fg:w="1"/><text x="9.0996%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="8.8496%" y="677" width="0.0805%" height="15" fill="rgb(237,73,42)" fg:x="110" fg:w="1"/><text x="9.0996%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.0105%" y="661" width="0.0805%" height="15" fill="rgb(211,108,8)" fg:x="112" fg:w="1"/><text x="9.2605%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.0909%" y="661" width="0.0805%" height="15" fill="rgb(213,45,22)" fg:x="113" fg:w="1"/><text x="9.3409%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="9.1714%" y="661" width="0.0805%" height="15" fill="rgb(252,154,5)" fg:x="114" fg:w="1"/><text x="9.4214%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.1714%" y="645" width="0.0805%" height="15" fill="rgb(221,79,52)" fg:x="114" fg:w="1"/><text x="9.4214%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.1714%" y="629" width="0.0805%" height="15" fill="rgb(229,220,36)" fg:x="114" fg:w="1"/><text x="9.4214%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="9.2518%" y="661" width="0.0805%" height="15" fill="rgb(211,17,16)" fg:x="115" fg:w="1"/><text x="9.5018%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="9.4932%" y="581" width="0.0805%" height="15" fill="rgb(222,55,31)" fg:x="118" fg:w="1"/><text x="9.7432%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="9.4932%" y="565" width="0.0805%" height="15" fill="rgb(221,221,31)" fg:x="118" fg:w="1"/><text x="9.7432%" y="575.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="9.4932%" y="549" width="0.0805%" height="15" fill="rgb(227,168,26)" fg:x="118" fg:w="1"/><text x="9.7432%" y="559.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="9.4932%" y="533" width="0.0805%" height="15" fill="rgb(224,139,9)" fg:x="118" fg:w="1"/><text x="9.7432%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="9.4127%" y="613" width="0.3218%" height="15" fill="rgb(254,172,0)" fg:x="117" fg:w="4"/><text x="9.6627%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="9.4127%" y="597" width="0.3218%" height="15" fill="rgb(235,203,1)" fg:x="117" fg:w="4"/><text x="9.6627%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="9.5736%" y="581" width="0.1609%" height="15" fill="rgb(216,205,24)" fg:x="119" fg:w="2"/><text x="9.8236%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="9.7345%" y="597" width="0.0805%" height="15" fill="rgb(233,24,6)" fg:x="121" fg:w="1"/><text x="9.9845%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="9.8150%" y="581" width="0.2414%" height="15" fill="rgb(244,110,9)" fg:x="122" fg:w="3"/><text x="10.0650%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.8954%" y="565" width="0.1609%" height="15" fill="rgb(239,222,42)" fg:x="123" fg:w="2"/><text x="10.1454%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.9759%" y="549" width="0.0805%" height="15" fill="rgb(218,145,13)" fg:x="124" fg:w="1"/><text x="10.2259%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.2172%" y="549" width="0.0805%" height="15" fill="rgb(207,69,11)" fg:x="127" fg:w="1"/><text x="10.4672%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.2172%" y="533" width="0.0805%" height="15" fill="rgb(220,223,22)" fg:x="127" fg:w="1"/><text x="10.4672%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="10.2977%" y="533" width="0.0805%" height="15" fill="rgb(245,102,5)" fg:x="128" fg:w="1"/><text x="10.5477%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.3781%" y="517" width="0.0805%" height="15" fill="rgb(211,148,2)" fg:x="129" fg:w="1"/><text x="10.6281%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.3781%" y="501" width="0.0805%" height="15" fill="rgb(241,13,44)" fg:x="129" fg:w="1"/><text x="10.6281%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="10.3781%" y="533" width="0.3218%" height="15" fill="rgb(219,137,21)" fg:x="129" fg:w="4"/><text x="10.6281%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="10.4586%" y="517" width="0.2414%" height="15" fill="rgb(242,206,5)" fg:x="130" fg:w="3"/><text x="10.7086%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="10.4586%" y="501" width="0.2414%" height="15" fill="rgb(217,114,22)" fg:x="130" fg:w="3"/><text x="10.7086%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="10.5390%" y="485" width="0.1609%" height="15" fill="rgb(253,206,42)" fg:x="131" fg:w="2"/><text x="10.7890%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (2 samples, 0.16%)</title><rect x="10.5390%" y="469" width="0.1609%" height="15" fill="rgb(236,102,18)" fg:x="131" fg:w="2"/><text x="10.7890%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="10.1368%" y="565" width="0.6436%" height="15" fill="rgb(208,59,49)" fg:x="126" fg:w="8"/><text x="10.3868%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="10.2977%" y="549" width="0.4827%" height="15" fill="rgb(215,194,28)" fg:x="128" fg:w="6"/><text x="10.5477%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.6999%" y="533" width="0.0805%" height="15" fill="rgb(243,207,11)" fg:x="133" fg:w="1"/><text x="10.9499%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.05%)</title><rect x="9.8150%" y="597" width="1.0459%" height="15" fill="rgb(254,179,35)" fg:x="122" fg:w="13"/><text x="10.0650%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="10.0563%" y="581" width="0.8045%" height="15" fill="rgb(235,97,3)" fg:x="125" fg:w="10"/><text x="10.3063%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.7804%" y="565" width="0.0805%" height="15" fill="rgb(215,155,33)" fg:x="134" fg:w="1"/><text x="11.0304%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (20 samples, 1.61%)</title><rect x="9.4127%" y="645" width="1.6090%" height="15" fill="rgb(223,128,12)" fg:x="117" fg:w="20"/><text x="9.6627%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.61%)</title><rect x="9.4127%" y="629" width="1.6090%" height="15" fill="rgb(208,157,18)" fg:x="117" fg:w="20"/><text x="9.6627%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.29%)</title><rect x="9.7345%" y="613" width="1.2872%" height="15" fill="rgb(249,70,54)" fg:x="121" fg:w="16"/><text x="9.9845%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.8608%" y="597" width="0.1609%" height="15" fill="rgb(244,118,24)" fg:x="135" fg:w="2"/><text x="11.1108%" y="607.50"></text></g><g><title>engine::session::Session::flush (89 samples, 7.16%)</title><rect x="3.9421%" y="789" width="7.1601%" height="15" fill="rgb(211,54,0)" fg:x="49" fg:w="89"/><text x="4.1921%" y="799.50">engine::se..</text></g><g><title>engine::session::state::State::close (86 samples, 6.92%)</title><rect x="4.1834%" y="773" width="6.9187%" height="15" fill="rgb(245,137,45)" fg:x="52" fg:w="86"/><text x="4.4334%" y="783.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (85 samples, 6.84%)</title><rect x="4.2639%" y="757" width="6.8383%" height="15" fill="rgb(232,154,31)" fg:x="53" fg:w="85"/><text x="4.5139%" y="767.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (85 samples, 6.84%)</title><rect x="4.2639%" y="741" width="6.8383%" height="15" fill="rgb(253,6,39)" fg:x="53" fg:w="85"/><text x="4.5139%" y="751.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (84 samples, 6.76%)</title><rect x="4.3443%" y="725" width="6.7578%" height="15" fill="rgb(234,183,24)" fg:x="54" fg:w="84"/><text x="4.5943%" y="735.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (28 samples, 2.25%)</title><rect x="8.8496%" y="709" width="2.2526%" height="15" fill="rgb(252,84,40)" fg:x="110" fg:w="28"/><text x="9.0996%" y="719.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (27 samples, 2.17%)</title><rect x="8.9300%" y="693" width="2.1722%" height="15" fill="rgb(224,65,2)" fg:x="111" fg:w="27"/><text x="9.1800%" y="703.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 2.17%)</title><rect x="8.9300%" y="677" width="2.1722%" height="15" fill="rgb(229,38,24)" fg:x="111" fg:w="27"/><text x="9.1800%" y="687.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (22 samples, 1.77%)</title><rect x="9.3323%" y="661" width="1.7699%" height="15" fill="rgb(218,131,50)" fg:x="116" fg:w="22"/><text x="9.5823%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.0217%" y="645" width="0.0805%" height="15" fill="rgb(233,106,18)" fg:x="137" fg:w="1"/><text x="11.2717%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="11.1022%" y="757" width="0.0805%" height="15" fill="rgb(220,216,11)" fg:x="138" fg:w="1"/><text x="11.3522%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="11.1022%" y="741" width="0.0805%" height="15" fill="rgb(251,100,45)" fg:x="138" fg:w="1"/><text x="11.3522%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="11.1022%" y="725" width="0.0805%" height="15" fill="rgb(235,143,32)" fg:x="138" fg:w="1"/><text x="11.3522%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.1022%" y="709" width="0.0805%" height="15" fill="rgb(248,124,34)" fg:x="138" fg:w="1"/><text x="11.3522%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.1022%" y="693" width="0.0805%" height="15" fill="rgb(225,221,4)" fg:x="138" fg:w="1"/><text x="11.3522%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.1022%" y="677" width="0.0805%" height="15" fill="rgb(242,27,43)" fg:x="138" fg:w="1"/><text x="11.3522%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="11.1022%" y="661" width="0.0805%" height="15" fill="rgb(227,54,8)" fg:x="138" fg:w="1"/><text x="11.3522%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="11.1022%" y="645" width="0.0805%" height="15" fill="rgb(253,139,49)" fg:x="138" fg:w="1"/><text x="11.3522%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.1022%" y="629" width="0.0805%" height="15" fill="rgb(231,26,43)" fg:x="138" fg:w="1"/><text x="11.3522%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.1022%" y="613" width="0.0805%" height="15" fill="rgb(207,121,39)" fg:x="138" fg:w="1"/><text x="11.3522%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="11.1022%" y="597" width="0.0805%" height="15" fill="rgb(223,101,35)" fg:x="138" fg:w="1"/><text x="11.3522%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="11.1022%" y="581" width="0.0805%" height="15" fill="rgb(232,87,23)" fg:x="138" fg:w="1"/><text x="11.3522%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.1022%" y="565" width="0.0805%" height="15" fill="rgb(225,180,29)" fg:x="138" fg:w="1"/><text x="11.3522%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.1022%" y="549" width="0.0805%" height="15" fill="rgb(225,25,17)" fg:x="138" fg:w="1"/><text x="11.3522%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.1022%" y="533" width="0.0805%" height="15" fill="rgb(223,8,52)" fg:x="138" fg:w="1"/><text x="11.3522%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="11.1022%" y="517" width="0.0805%" height="15" fill="rgb(246,42,21)" fg:x="138" fg:w="1"/><text x="11.3522%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="11.1022%" y="501" width="0.0805%" height="15" fill="rgb(205,64,43)" fg:x="138" fg:w="1"/><text x="11.3522%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="11.1022%" y="485" width="0.0805%" height="15" fill="rgb(221,160,13)" fg:x="138" fg:w="1"/><text x="11.3522%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="11.1022%" y="469" width="0.0805%" height="15" fill="rgb(239,58,35)" fg:x="138" fg:w="1"/><text x="11.3522%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="11.1022%" y="453" width="0.0805%" height="15" fill="rgb(251,26,40)" fg:x="138" fg:w="1"/><text x="11.3522%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="11.1022%" y="437" width="0.0805%" height="15" fill="rgb(247,0,4)" fg:x="138" fg:w="1"/><text x="11.3522%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.1022%" y="421" width="0.0805%" height="15" fill="rgb(218,130,10)" fg:x="138" fg:w="1"/><text x="11.3522%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="11.1022%" y="405" width="0.0805%" height="15" fill="rgb(239,32,7)" fg:x="138" fg:w="1"/><text x="11.3522%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.1022%" y="389" width="0.0805%" height="15" fill="rgb(210,192,24)" fg:x="138" fg:w="1"/><text x="11.3522%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1022%" y="373" width="0.0805%" height="15" fill="rgb(226,212,17)" fg:x="138" fg:w="1"/><text x="11.3522%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1826%" y="693" width="0.0805%" height="15" fill="rgb(219,201,28)" fg:x="139" fg:w="1"/><text x="11.4326%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1826%" y="677" width="0.0805%" height="15" fill="rgb(235,207,41)" fg:x="139" fg:w="1"/><text x="11.4326%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1826%" y="661" width="0.0805%" height="15" fill="rgb(241,95,54)" fg:x="139" fg:w="1"/><text x="11.4326%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="11.1826%" y="757" width="0.1609%" height="15" fill="rgb(248,12,23)" fg:x="139" fg:w="2"/><text x="11.4326%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="11.1826%" y="741" width="0.1609%" height="15" fill="rgb(228,173,4)" fg:x="139" fg:w="2"/><text x="11.4326%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="11.1826%" y="725" width="0.1609%" height="15" fill="rgb(254,99,5)" fg:x="139" fg:w="2"/><text x="11.4326%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.1826%" y="709" width="0.1609%" height="15" fill="rgb(212,184,17)" fg:x="139" fg:w="2"/><text x="11.4326%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.2631%" y="693" width="0.0805%" height="15" fill="rgb(252,174,1)" fg:x="140" fg:w="1"/><text x="11.5131%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.3435%" y="741" width="0.0805%" height="15" fill="rgb(241,118,51)" fg:x="141" fg:w="1"/><text x="11.5935%" y="751.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="11.3435%" y="757" width="0.1609%" height="15" fill="rgb(227,94,47)" fg:x="141" fg:w="2"/><text x="11.5935%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="11.4240%" y="741" width="0.0805%" height="15" fill="rgb(229,104,2)" fg:x="142" fg:w="1"/><text x="11.6740%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.4240%" y="725" width="0.0805%" height="15" fill="rgb(219,28,31)" fg:x="142" fg:w="1"/><text x="11.6740%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="11.5044%" y="741" width="0.2414%" height="15" fill="rgb(233,109,36)" fg:x="143" fg:w="3"/><text x="11.7544%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="11.5044%" y="725" width="0.2414%" height="15" fill="rgb(246,88,11)" fg:x="143" fg:w="3"/><text x="11.7544%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="11.5044%" y="709" width="0.2414%" height="15" fill="rgb(209,212,17)" fg:x="143" fg:w="3"/><text x="11.7544%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="11.5044%" y="693" width="0.2414%" height="15" fill="rgb(243,59,29)" fg:x="143" fg:w="3"/><text x="11.7544%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="11.5849%" y="677" width="0.1609%" height="15" fill="rgb(244,205,48)" fg:x="144" fg:w="2"/><text x="11.8349%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.5849%" y="661" width="0.1609%" height="15" fill="rgb(227,30,6)" fg:x="144" fg:w="2"/><text x="11.8349%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="11.5849%" y="645" width="0.1609%" height="15" fill="rgb(220,205,48)" fg:x="144" fg:w="2"/><text x="11.8349%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.5849%" y="629" width="0.1609%" height="15" fill="rgb(250,94,14)" fg:x="144" fg:w="2"/><text x="11.8349%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="11.5849%" y="613" width="0.1609%" height="15" fill="rgb(216,119,42)" fg:x="144" fg:w="2"/><text x="11.8349%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.5849%" y="597" width="0.1609%" height="15" fill="rgb(232,155,0)" fg:x="144" fg:w="2"/><text x="11.8349%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="11.5849%" y="581" width="0.1609%" height="15" fill="rgb(212,24,32)" fg:x="144" fg:w="2"/><text x="11.8349%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="11.5849%" y="565" width="0.1609%" height="15" fill="rgb(216,69,20)" fg:x="144" fg:w="2"/><text x="11.8349%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.6653%" y="549" width="0.0805%" height="15" fill="rgb(229,73,31)" fg:x="145" fg:w="1"/><text x="11.9153%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="11.1022%" y="773" width="1.0459%" height="15" fill="rgb(224,219,20)" fg:x="138" fg:w="13"/><text x="11.3522%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="11.5044%" y="757" width="0.6436%" height="15" fill="rgb(215,146,41)" fg:x="143" fg:w="8"/><text x="11.7544%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (5 samples, 0.40%)</title><rect x="11.7458%" y="741" width="0.4023%" height="15" fill="rgb(244,71,31)" fg:x="146" fg:w="5"/><text x="11.9958%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="11.7458%" y="725" width="0.4023%" height="15" fill="rgb(224,24,11)" fg:x="146" fg:w="5"/><text x="11.9958%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.40%)</title><rect x="11.7458%" y="709" width="0.4023%" height="15" fill="rgb(229,76,15)" fg:x="146" fg:w="5"/><text x="11.9958%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="11.7458%" y="693" width="0.4023%" height="15" fill="rgb(209,93,2)" fg:x="146" fg:w="5"/><text x="11.9958%" y="703.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="11.7458%" y="677" width="0.4023%" height="15" fill="rgb(216,200,50)" fg:x="146" fg:w="5"/><text x="11.9958%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="12.1480%" y="757" width="0.0805%" height="15" fill="rgb(211,67,34)" fg:x="151" fg:w="1"/><text x="12.3980%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="12.1480%" y="741" width="0.0805%" height="15" fill="rgb(225,87,47)" fg:x="151" fg:w="1"/><text x="12.3980%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.2285%" y="677" width="0.0805%" height="15" fill="rgb(217,185,16)" fg:x="152" fg:w="1"/><text x="12.4785%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2285%" y="661" width="0.0805%" height="15" fill="rgb(205,0,0)" fg:x="152" fg:w="1"/><text x="12.4785%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="12.2285%" y="757" width="0.2414%" height="15" fill="rgb(207,116,45)" fg:x="152" fg:w="3"/><text x="12.4785%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="12.2285%" y="741" width="0.2414%" height="15" fill="rgb(221,156,26)" fg:x="152" fg:w="3"/><text x="12.4785%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="12.2285%" y="725" width="0.2414%" height="15" fill="rgb(213,140,4)" fg:x="152" fg:w="3"/><text x="12.4785%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="12.2285%" y="709" width="0.2414%" height="15" fill="rgb(231,224,15)" fg:x="152" fg:w="3"/><text x="12.4785%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.2285%" y="693" width="0.2414%" height="15" fill="rgb(244,76,20)" fg:x="152" fg:w="3"/><text x="12.4785%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.3089%" y="677" width="0.1609%" height="15" fill="rgb(238,117,7)" fg:x="153" fg:w="2"/><text x="12.5589%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.3089%" y="661" width="0.1609%" height="15" fill="rgb(235,1,10)" fg:x="153" fg:w="2"/><text x="12.5589%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.3089%" y="645" width="0.1609%" height="15" fill="rgb(216,165,6)" fg:x="153" fg:w="2"/><text x="12.5589%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.3089%" y="629" width="0.1609%" height="15" fill="rgb(246,91,35)" fg:x="153" fg:w="2"/><text x="12.5589%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="12.3089%" y="613" width="0.1609%" height="15" fill="rgb(228,96,24)" fg:x="153" fg:w="2"/><text x="12.5589%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.3089%" y="597" width="0.1609%" height="15" fill="rgb(254,217,53)" fg:x="153" fg:w="2"/><text x="12.5589%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.3089%" y="581" width="0.1609%" height="15" fill="rgb(209,60,0)" fg:x="153" fg:w="2"/><text x="12.5589%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.3089%" y="565" width="0.1609%" height="15" fill="rgb(250,93,26)" fg:x="153" fg:w="2"/><text x="12.5589%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.3894%" y="549" width="0.0805%" height="15" fill="rgb(211,9,40)" fg:x="154" fg:w="1"/><text x="12.6394%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.4698%" y="709" width="0.0805%" height="15" fill="rgb(242,57,20)" fg:x="155" fg:w="1"/><text x="12.7198%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.4698%" y="693" width="0.0805%" height="15" fill="rgb(248,85,48)" fg:x="155" fg:w="1"/><text x="12.7198%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.4698%" y="757" width="0.1609%" height="15" fill="rgb(212,117,2)" fg:x="155" fg:w="2"/><text x="12.7198%" y="767.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="12.4698%" y="741" width="0.1609%" height="15" fill="rgb(243,19,3)" fg:x="155" fg:w="2"/><text x="12.7198%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.4698%" y="725" width="0.1609%" height="15" fill="rgb(232,217,24)" fg:x="155" fg:w="2"/><text x="12.7198%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="12.5503%" y="709" width="0.0805%" height="15" fill="rgb(224,175,40)" fg:x="156" fg:w="1"/><text x="12.8003%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="12.5503%" y="693" width="0.0805%" height="15" fill="rgb(212,162,32)" fg:x="156" fg:w="1"/><text x="12.8003%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.5503%" y="677" width="0.0805%" height="15" fill="rgb(215,9,4)" fg:x="156" fg:w="1"/><text x="12.8003%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.5503%" y="661" width="0.0805%" height="15" fill="rgb(242,42,7)" fg:x="156" fg:w="1"/><text x="12.8003%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.6307%" y="661" width="0.0805%" height="15" fill="rgb(242,184,45)" fg:x="157" fg:w="1"/><text x="12.8807%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="12.7112%" y="565" width="0.0805%" height="15" fill="rgb(228,111,51)" fg:x="158" fg:w="1"/><text x="12.9612%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="12.6307%" y="709" width="0.2414%" height="15" fill="rgb(236,147,17)" fg:x="157" fg:w="3"/><text x="12.8807%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="12.6307%" y="693" width="0.2414%" height="15" fill="rgb(210,75,22)" fg:x="157" fg:w="3"/><text x="12.8807%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.6307%" y="677" width="0.2414%" height="15" fill="rgb(217,159,45)" fg:x="157" fg:w="3"/><text x="12.8807%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.7112%" y="661" width="0.1609%" height="15" fill="rgb(245,165,53)" fg:x="158" fg:w="2"/><text x="12.9612%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.7112%" y="645" width="0.1609%" height="15" fill="rgb(251,190,50)" fg:x="158" fg:w="2"/><text x="12.9612%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.7112%" y="629" width="0.1609%" height="15" fill="rgb(208,203,29)" fg:x="158" fg:w="2"/><text x="12.9612%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.7112%" y="613" width="0.1609%" height="15" fill="rgb(207,209,35)" fg:x="158" fg:w="2"/><text x="12.9612%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="12.7112%" y="597" width="0.1609%" height="15" fill="rgb(230,144,49)" fg:x="158" fg:w="2"/><text x="12.9612%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.7112%" y="581" width="0.1609%" height="15" fill="rgb(229,31,6)" fg:x="158" fg:w="2"/><text x="12.9612%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.7916%" y="565" width="0.0805%" height="15" fill="rgb(251,129,24)" fg:x="159" fg:w="1"/><text x="13.0416%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.7916%" y="549" width="0.0805%" height="15" fill="rgb(235,105,15)" fg:x="159" fg:w="1"/><text x="13.0416%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="12.8721%" y="693" width="0.0805%" height="15" fill="rgb(216,52,43)" fg:x="160" fg:w="1"/><text x="13.1221%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.8721%" y="677" width="0.0805%" height="15" fill="rgb(238,144,41)" fg:x="160" fg:w="1"/><text x="13.1221%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9525%" y="661" width="0.0805%" height="15" fill="rgb(243,63,9)" fg:x="161" fg:w="1"/><text x="13.2025%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9525%" y="645" width="0.0805%" height="15" fill="rgb(246,208,1)" fg:x="161" fg:w="1"/><text x="13.2025%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9525%" y="629" width="0.0805%" height="15" fill="rgb(233,182,18)" fg:x="161" fg:w="1"/><text x="13.2025%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9525%" y="613" width="0.0805%" height="15" fill="rgb(242,224,8)" fg:x="161" fg:w="1"/><text x="13.2025%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="12.6307%" y="741" width="0.4827%" height="15" fill="rgb(243,54,37)" fg:x="157" fg:w="6"/><text x="12.8807%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="12.6307%" y="725" width="0.4827%" height="15" fill="rgb(233,192,12)" fg:x="157" fg:w="6"/><text x="12.8807%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="12.8721%" y="709" width="0.2414%" height="15" fill="rgb(251,192,53)" fg:x="160" fg:w="3"/><text x="13.1221%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="12.9525%" y="693" width="0.1609%" height="15" fill="rgb(246,141,26)" fg:x="161" fg:w="2"/><text x="13.2025%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.9525%" y="677" width="0.1609%" height="15" fill="rgb(239,195,19)" fg:x="161" fg:w="2"/><text x="13.2025%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0330%" y="661" width="0.0805%" height="15" fill="rgb(241,16,39)" fg:x="162" fg:w="1"/><text x="13.2830%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0330%" y="645" width="0.0805%" height="15" fill="rgb(223,13,53)" fg:x="162" fg:w="1"/><text x="13.2830%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0330%" y="629" width="0.0805%" height="15" fill="rgb(214,227,0)" fg:x="162" fg:w="1"/><text x="13.2830%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0330%" y="613" width="0.0805%" height="15" fill="rgb(228,103,26)" fg:x="162" fg:w="1"/><text x="13.2830%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.0330%" y="597" width="0.0805%" height="15" fill="rgb(254,177,53)" fg:x="162" fg:w="1"/><text x="13.2830%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0330%" y="581" width="0.0805%" height="15" fill="rgb(208,201,34)" fg:x="162" fg:w="1"/><text x="13.2830%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0330%" y="565" width="0.0805%" height="15" fill="rgb(212,39,5)" fg:x="162" fg:w="1"/><text x="13.2830%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0330%" y="549" width="0.0805%" height="15" fill="rgb(246,117,3)" fg:x="162" fg:w="1"/><text x="13.2830%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="12.6307%" y="757" width="0.5632%" height="15" fill="rgb(244,118,39)" fg:x="157" fg:w="7"/><text x="12.8807%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="13.1134%" y="741" width="0.0805%" height="15" fill="rgb(241,64,10)" fg:x="163" fg:w="1"/><text x="13.3634%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="13.1939%" y="741" width="0.0805%" height="15" fill="rgb(229,39,44)" fg:x="164" fg:w="1"/><text x="13.4439%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="13.1939%" y="725" width="0.0805%" height="15" fill="rgb(230,226,3)" fg:x="164" fg:w="1"/><text x="13.4439%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.1939%" y="709" width="0.0805%" height="15" fill="rgb(222,13,42)" fg:x="164" fg:w="1"/><text x="13.4439%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="13.2743%" y="741" width="0.1609%" height="15" fill="rgb(247,180,54)" fg:x="165" fg:w="2"/><text x="13.5243%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.3548%" y="725" width="0.0805%" height="15" fill="rgb(205,96,16)" fg:x="166" fg:w="1"/><text x="13.6048%" y="735.50"></text></g><g><title>plugins_core::build::Build::holding (30 samples, 2.41%)</title><rect x="11.1022%" y="789" width="2.4135%" height="15" fill="rgb(205,100,21)" fg:x="138" fg:w="30"/><text x="11.3522%" y="799.50">pl..</text></g><g><title>plugins_core::tools::set_container (17 samples, 1.37%)</title><rect x="12.1480%" y="773" width="1.3677%" height="15" fill="rgb(248,51,4)" fg:x="151" fg:w="17"/><text x="12.3980%" y="783.50"></text></g><g><title>plugins_core::location::Location::set (4 samples, 0.32%)</title><rect x="13.1939%" y="757" width="0.3218%" height="15" fill="rgb(217,197,30)" fg:x="164" fg:w="4"/><text x="13.4439%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.4352%" y="741" width="0.0805%" height="15" fill="rgb(240,179,40)" fg:x="167" fg:w="1"/><text x="13.6852%" y="751.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="13.4352%" y="725" width="0.0805%" height="15" fill="rgb(212,185,35)" fg:x="167" fg:w="1"/><text x="13.6852%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.4352%" y="709" width="0.0805%" height="15" fill="rgb(251,222,31)" fg:x="167" fg:w="1"/><text x="13.6852%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="13.4352%" y="693" width="0.0805%" height="15" fill="rgb(208,140,36)" fg:x="167" fg:w="1"/><text x="13.6852%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.4352%" y="677" width="0.0805%" height="15" fill="rgb(220,148,1)" fg:x="167" fg:w="1"/><text x="13.6852%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.4352%" y="661" width="0.0805%" height="15" fill="rgb(254,4,28)" fg:x="167" fg:w="1"/><text x="13.6852%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="13.5157%" y="741" width="0.0805%" height="15" fill="rgb(222,185,44)" fg:x="168" fg:w="1"/><text x="13.7657%" y="751.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="13.5157%" y="725" width="0.0805%" height="15" fill="rgb(215,74,39)" fg:x="168" fg:w="1"/><text x="13.7657%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="13.5157%" y="757" width="0.1609%" height="15" fill="rgb(247,86,4)" fg:x="168" fg:w="2"/><text x="13.7657%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="13.5961%" y="741" width="0.0805%" height="15" fill="rgb(231,105,32)" fg:x="169" fg:w="1"/><text x="13.8461%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.5961%" y="725" width="0.0805%" height="15" fill="rgb(222,65,35)" fg:x="169" fg:w="1"/><text x="13.8461%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.5961%" y="709" width="0.0805%" height="15" fill="rgb(218,145,35)" fg:x="169" fg:w="1"/><text x="13.8461%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.5961%" y="693" width="0.0805%" height="15" fill="rgb(208,7,15)" fg:x="169" fg:w="1"/><text x="13.8461%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.5961%" y="677" width="0.0805%" height="15" fill="rgb(209,83,13)" fg:x="169" fg:w="1"/><text x="13.8461%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.5961%" y="661" width="0.0805%" height="15" fill="rgb(218,3,10)" fg:x="169" fg:w="1"/><text x="13.8461%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.5961%" y="645" width="0.0805%" height="15" fill="rgb(211,219,4)" fg:x="169" fg:w="1"/><text x="13.8461%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.5961%" y="629" width="0.0805%" height="15" fill="rgb(228,194,12)" fg:x="169" fg:w="1"/><text x="13.8461%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.5961%" y="613" width="0.0805%" height="15" fill="rgb(210,175,7)" fg:x="169" fg:w="1"/><text x="13.8461%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.5961%" y="597" width="0.0805%" height="15" fill="rgb(243,132,6)" fg:x="169" fg:w="1"/><text x="13.8461%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.5961%" y="581" width="0.0805%" height="15" fill="rgb(207,72,18)" fg:x="169" fg:w="1"/><text x="13.8461%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.5961%" y="565" width="0.0805%" height="15" fill="rgb(236,1,18)" fg:x="169" fg:w="1"/><text x="13.8461%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.5961%" y="549" width="0.0805%" height="15" fill="rgb(227,0,18)" fg:x="169" fg:w="1"/><text x="13.8461%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="13.5961%" y="533" width="0.0805%" height="15" fill="rgb(247,37,5)" fg:x="169" fg:w="1"/><text x="13.8461%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.5961%" y="517" width="0.0805%" height="15" fill="rgb(237,179,24)" fg:x="169" fg:w="1"/><text x="13.8461%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.5961%" y="501" width="0.0805%" height="15" fill="rgb(226,53,20)" fg:x="169" fg:w="1"/><text x="13.8461%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="13.6766%" y="741" width="0.0805%" height="15" fill="rgb(247,75,7)" fg:x="170" fg:w="1"/><text x="13.9266%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8375%" y="709" width="0.0805%" height="15" fill="rgb(233,96,12)" fg:x="172" fg:w="1"/><text x="14.0875%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8375%" y="693" width="0.0805%" height="15" fill="rgb(224,125,0)" fg:x="172" fg:w="1"/><text x="14.0875%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8375%" y="677" width="0.0805%" height="15" fill="rgb(224,92,25)" fg:x="172" fg:w="1"/><text x="14.0875%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8375%" y="661" width="0.0805%" height="15" fill="rgb(224,42,24)" fg:x="172" fg:w="1"/><text x="14.0875%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8375%" y="645" width="0.0805%" height="15" fill="rgb(234,132,49)" fg:x="172" fg:w="1"/><text x="14.0875%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.9179%" y="709" width="0.0805%" height="15" fill="rgb(248,100,35)" fg:x="173" fg:w="1"/><text x="14.1679%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="13.6766%" y="757" width="0.4827%" height="15" fill="rgb(239,94,40)" fg:x="170" fg:w="6"/><text x="13.9266%" y="767.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="13.7570%" y="741" width="0.4023%" height="15" fill="rgb(235,139,28)" fg:x="171" fg:w="5"/><text x="14.0070%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="13.7570%" y="725" width="0.4023%" height="15" fill="rgb(217,144,7)" fg:x="171" fg:w="5"/><text x="14.0070%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.9984%" y="709" width="0.1609%" height="15" fill="rgb(227,55,4)" fg:x="174" fg:w="2"/><text x="14.2484%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.9984%" y="693" width="0.1609%" height="15" fill="rgb(252,82,54)" fg:x="174" fg:w="2"/><text x="14.2484%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.9984%" y="677" width="0.1609%" height="15" fill="rgb(245,172,4)" fg:x="174" fg:w="2"/><text x="14.2484%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.9984%" y="661" width="0.1609%" height="15" fill="rgb(207,26,27)" fg:x="174" fg:w="2"/><text x="14.2484%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="13.9984%" y="645" width="0.1609%" height="15" fill="rgb(252,98,18)" fg:x="174" fg:w="2"/><text x="14.2484%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.9984%" y="629" width="0.1609%" height="15" fill="rgb(244,8,26)" fg:x="174" fg:w="2"/><text x="14.2484%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.9984%" y="613" width="0.1609%" height="15" fill="rgb(237,173,45)" fg:x="174" fg:w="2"/><text x="14.2484%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.9984%" y="597" width="0.1609%" height="15" fill="rgb(208,213,49)" fg:x="174" fg:w="2"/><text x="14.2484%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.0788%" y="581" width="0.0805%" height="15" fill="rgb(212,122,37)" fg:x="175" fg:w="1"/><text x="14.3288%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.0788%" y="565" width="0.0805%" height="15" fill="rgb(213,80,17)" fg:x="175" fg:w="1"/><text x="14.3288%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="14.1593%" y="709" width="0.0805%" height="15" fill="rgb(206,210,43)" fg:x="176" fg:w="1"/><text x="14.4093%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.1593%" y="693" width="0.0805%" height="15" fill="rgb(229,214,3)" fg:x="176" fg:w="1"/><text x="14.4093%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1593%" y="677" width="0.0805%" height="15" fill="rgb(235,213,29)" fg:x="176" fg:w="1"/><text x="14.4093%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1593%" y="661" width="0.0805%" height="15" fill="rgb(248,135,26)" fg:x="176" fg:w="1"/><text x="14.4093%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1593%" y="645" width="0.0805%" height="15" fill="rgb(242,188,12)" fg:x="176" fg:w="1"/><text x="14.4093%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1593%" y="629" width="0.0805%" height="15" fill="rgb(245,38,12)" fg:x="176" fg:w="1"/><text x="14.4093%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1593%" y="613" width="0.0805%" height="15" fill="rgb(218,42,13)" fg:x="176" fg:w="1"/><text x="14.4093%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1593%" y="597" width="0.0805%" height="15" fill="rgb(238,132,49)" fg:x="176" fg:w="1"/><text x="14.4093%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1593%" y="581" width="0.0805%" height="15" fill="rgb(209,196,19)" fg:x="176" fg:w="1"/><text x="14.4093%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.1593%" y="565" width="0.0805%" height="15" fill="rgb(244,131,22)" fg:x="176" fg:w="1"/><text x="14.4093%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.1593%" y="549" width="0.0805%" height="15" fill="rgb(223,18,34)" fg:x="176" fg:w="1"/><text x="14.4093%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.1593%" y="533" width="0.0805%" height="15" fill="rgb(252,124,54)" fg:x="176" fg:w="1"/><text x="14.4093%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.1593%" y="517" width="0.0805%" height="15" fill="rgb(229,106,42)" fg:x="176" fg:w="1"/><text x="14.4093%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.1593%" y="501" width="0.0805%" height="15" fill="rgb(221,129,1)" fg:x="176" fg:w="1"/><text x="14.4093%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.1593%" y="485" width="0.0805%" height="15" fill="rgb(229,74,15)" fg:x="176" fg:w="1"/><text x="14.4093%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.1593%" y="469" width="0.0805%" height="15" fill="rgb(210,206,50)" fg:x="176" fg:w="1"/><text x="14.4093%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.1593%" y="453" width="0.0805%" height="15" fill="rgb(251,114,31)" fg:x="176" fg:w="1"/><text x="14.4093%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.1593%" y="437" width="0.0805%" height="15" fill="rgb(215,225,28)" fg:x="176" fg:w="1"/><text x="14.4093%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.1593%" y="421" width="0.0805%" height="15" fill="rgb(237,109,14)" fg:x="176" fg:w="1"/><text x="14.4093%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (10 samples, 0.80%)</title><rect x="13.5157%" y="789" width="0.8045%" height="15" fill="rgb(230,13,37)" fg:x="168" fg:w="10"/><text x="13.7657%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="13.5157%" y="773" width="0.8045%" height="15" fill="rgb(231,40,28)" fg:x="168" fg:w="10"/><text x="13.7657%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="14.1593%" y="757" width="0.1609%" height="15" fill="rgb(231,202,18)" fg:x="176" fg:w="2"/><text x="14.4093%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="14.1593%" y="741" width="0.1609%" height="15" fill="rgb(225,33,18)" fg:x="176" fg:w="2"/><text x="14.4093%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="14.1593%" y="725" width="0.1609%" height="15" fill="rgb(223,64,47)" fg:x="176" fg:w="2"/><text x="14.4093%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="14.2397%" y="709" width="0.0805%" height="15" fill="rgb(234,114,13)" fg:x="177" fg:w="1"/><text x="14.4897%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.2397%" y="693" width="0.0805%" height="15" fill="rgb(248,56,40)" fg:x="177" fg:w="1"/><text x="14.4897%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="14.2397%" y="677" width="0.0805%" height="15" fill="rgb(221,194,21)" fg:x="177" fg:w="1"/><text x="14.4897%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.2397%" y="661" width="0.0805%" height="15" fill="rgb(242,108,46)" fg:x="177" fg:w="1"/><text x="14.4897%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="14.2397%" y="645" width="0.0805%" height="15" fill="rgb(220,106,10)" fg:x="177" fg:w="1"/><text x="14.4897%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.2397%" y="629" width="0.0805%" height="15" fill="rgb(211,88,4)" fg:x="177" fg:w="1"/><text x="14.4897%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="14.2397%" y="613" width="0.0805%" height="15" fill="rgb(214,95,34)" fg:x="177" fg:w="1"/><text x="14.4897%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="14.2397%" y="597" width="0.0805%" height="15" fill="rgb(250,160,33)" fg:x="177" fg:w="1"/><text x="14.4897%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.3202%" y="725" width="0.0805%" height="15" fill="rgb(225,29,10)" fg:x="178" fg:w="1"/><text x="14.5702%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="14.3202%" y="757" width="0.2414%" height="15" fill="rgb(224,28,30)" fg:x="178" fg:w="3"/><text x="14.5702%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="14.3202%" y="741" width="0.2414%" height="15" fill="rgb(231,77,4)" fg:x="178" fg:w="3"/><text x="14.5702%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.4006%" y="725" width="0.1609%" height="15" fill="rgb(209,63,21)" fg:x="179" fg:w="2"/><text x="14.6506%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4811%" y="709" width="0.0805%" height="15" fill="rgb(226,22,11)" fg:x="180" fg:w="1"/><text x="14.7311%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.4811%" y="693" width="0.0805%" height="15" fill="rgb(216,82,30)" fg:x="180" fg:w="1"/><text x="14.7311%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4811%" y="677" width="0.0805%" height="15" fill="rgb(246,227,38)" fg:x="180" fg:w="1"/><text x="14.7311%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.4811%" y="661" width="0.0805%" height="15" fill="rgb(251,203,53)" fg:x="180" fg:w="1"/><text x="14.7311%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="14.3202%" y="789" width="0.3218%" height="15" fill="rgb(254,101,1)" fg:x="178" fg:w="4"/><text x="14.5702%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="14.3202%" y="773" width="0.3218%" height="15" fill="rgb(241,180,5)" fg:x="178" fg:w="4"/><text x="14.5702%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="14.5615%" y="757" width="0.0805%" height="15" fill="rgb(218,168,4)" fg:x="181" fg:w="1"/><text x="14.8115%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.5615%" y="741" width="0.0805%" height="15" fill="rgb(224,223,32)" fg:x="181" fg:w="1"/><text x="14.8115%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="14.5615%" y="725" width="0.0805%" height="15" fill="rgb(236,106,22)" fg:x="181" fg:w="1"/><text x="14.8115%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.5615%" y="709" width="0.0805%" height="15" fill="rgb(206,121,5)" fg:x="181" fg:w="1"/><text x="14.8115%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="14.5615%" y="693" width="0.0805%" height="15" fill="rgb(233,87,28)" fg:x="181" fg:w="1"/><text x="14.8115%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.5615%" y="677" width="0.0805%" height="15" fill="rgb(236,137,17)" fg:x="181" fg:w="1"/><text x="14.8115%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="14.5615%" y="661" width="0.0805%" height="15" fill="rgb(209,183,38)" fg:x="181" fg:w="1"/><text x="14.8115%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="14.5615%" y="645" width="0.0805%" height="15" fill="rgb(206,162,44)" fg:x="181" fg:w="1"/><text x="14.8115%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5615%" y="629" width="0.0805%" height="15" fill="rgb(237,70,39)" fg:x="181" fg:w="1"/><text x="14.8115%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="14.7224%" y="741" width="0.0805%" height="15" fill="rgb(212,176,5)" fg:x="183" fg:w="1"/><text x="14.9724%" y="751.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="14.7224%" y="725" width="0.0805%" height="15" fill="rgb(232,95,16)" fg:x="183" fg:w="1"/><text x="14.9724%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.7224%" y="709" width="0.0805%" height="15" fill="rgb(219,115,35)" fg:x="183" fg:w="1"/><text x="14.9724%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.8029%" y="549" width="0.0805%" height="15" fill="rgb(251,67,27)" fg:x="184" fg:w="1"/><text x="15.0529%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.8029%" y="533" width="0.0805%" height="15" fill="rgb(222,95,40)" fg:x="184" fg:w="1"/><text x="15.0529%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="14.8029%" y="517" width="0.0805%" height="15" fill="rgb(250,35,16)" fg:x="184" fg:w="1"/><text x="15.0529%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="14.8029%" y="501" width="0.0805%" height="15" fill="rgb(224,86,44)" fg:x="184" fg:w="1"/><text x="15.0529%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="14.8029%" y="485" width="0.0805%" height="15" fill="rgb(237,53,53)" fg:x="184" fg:w="1"/><text x="15.0529%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="14.8029%" y="469" width="0.0805%" height="15" fill="rgb(208,171,33)" fg:x="184" fg:w="1"/><text x="15.0529%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.8029%" y="453" width="0.0805%" height="15" fill="rgb(222,64,27)" fg:x="184" fg:w="1"/><text x="15.0529%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.8029%" y="437" width="0.0805%" height="15" fill="rgb(221,121,35)" fg:x="184" fg:w="1"/><text x="15.0529%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.8029%" y="421" width="0.0805%" height="15" fill="rgb(228,137,42)" fg:x="184" fg:w="1"/><text x="15.0529%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="14.7224%" y="757" width="0.2414%" height="15" fill="rgb(227,54,21)" fg:x="183" fg:w="3"/><text x="14.9724%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="14.8029%" y="741" width="0.1609%" height="15" fill="rgb(240,168,33)" fg:x="184" fg:w="2"/><text x="15.0529%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="14.8029%" y="725" width="0.1609%" height="15" fill="rgb(243,159,6)" fg:x="184" fg:w="2"/><text x="15.0529%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="14.8029%" y="709" width="0.1609%" height="15" fill="rgb(205,211,41)" fg:x="184" fg:w="2"/><text x="15.0529%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="14.8029%" y="693" width="0.1609%" height="15" fill="rgb(253,30,1)" fg:x="184" fg:w="2"/><text x="15.0529%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="14.8029%" y="677" width="0.1609%" height="15" fill="rgb(226,80,18)" fg:x="184" fg:w="2"/><text x="15.0529%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="14.8029%" y="661" width="0.1609%" height="15" fill="rgb(253,156,46)" fg:x="184" fg:w="2"/><text x="15.0529%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="14.8029%" y="645" width="0.1609%" height="15" fill="rgb(248,87,27)" fg:x="184" fg:w="2"/><text x="15.0529%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="14.8029%" y="629" width="0.1609%" height="15" fill="rgb(227,122,2)" fg:x="184" fg:w="2"/><text x="15.0529%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="14.8029%" y="613" width="0.1609%" height="15" fill="rgb(229,94,39)" fg:x="184" fg:w="2"/><text x="15.0529%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="14.8029%" y="597" width="0.1609%" height="15" fill="rgb(225,173,31)" fg:x="184" fg:w="2"/><text x="15.0529%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="14.8029%" y="581" width="0.1609%" height="15" fill="rgb(239,176,30)" fg:x="184" fg:w="2"/><text x="15.0529%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="14.8029%" y="565" width="0.1609%" height="15" fill="rgb(212,104,21)" fg:x="184" fg:w="2"/><text x="15.0529%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.8833%" y="549" width="0.0805%" height="15" fill="rgb(240,209,40)" fg:x="185" fg:w="1"/><text x="15.1333%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="14.8833%" y="533" width="0.0805%" height="15" fill="rgb(234,195,5)" fg:x="185" fg:w="1"/><text x="15.1333%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.8833%" y="517" width="0.0805%" height="15" fill="rgb(238,213,1)" fg:x="185" fg:w="1"/><text x="15.1333%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.8833%" y="501" width="0.0805%" height="15" fill="rgb(235,182,54)" fg:x="185" fg:w="1"/><text x="15.1333%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.8833%" y="485" width="0.0805%" height="15" fill="rgb(229,50,46)" fg:x="185" fg:w="1"/><text x="15.1333%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.8833%" y="469" width="0.0805%" height="15" fill="rgb(219,145,13)" fg:x="185" fg:w="1"/><text x="15.1333%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.8833%" y="453" width="0.0805%" height="15" fill="rgb(220,226,10)" fg:x="185" fg:w="1"/><text x="15.1333%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="14.8833%" y="437" width="0.0805%" height="15" fill="rgb(248,47,30)" fg:x="185" fg:w="1"/><text x="15.1333%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="14.8833%" y="421" width="0.0805%" height="15" fill="rgb(231,209,44)" fg:x="185" fg:w="1"/><text x="15.1333%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="14.8833%" y="405" width="0.0805%" height="15" fill="rgb(209,80,30)" fg:x="185" fg:w="1"/><text x="15.1333%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="14.8833%" y="389" width="0.0805%" height="15" fill="rgb(232,9,14)" fg:x="185" fg:w="1"/><text x="15.1333%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.8833%" y="373" width="0.0805%" height="15" fill="rgb(243,91,43)" fg:x="185" fg:w="1"/><text x="15.1333%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.8833%" y="357" width="0.0805%" height="15" fill="rgb(231,90,52)" fg:x="185" fg:w="1"/><text x="15.1333%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.8833%" y="341" width="0.0805%" height="15" fill="rgb(253,192,44)" fg:x="185" fg:w="1"/><text x="15.1333%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="14.8833%" y="325" width="0.0805%" height="15" fill="rgb(241,66,31)" fg:x="185" fg:w="1"/><text x="15.1333%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.8833%" y="309" width="0.0805%" height="15" fill="rgb(235,81,37)" fg:x="185" fg:w="1"/><text x="15.1333%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="14.8833%" y="293" width="0.0805%" height="15" fill="rgb(223,221,9)" fg:x="185" fg:w="1"/><text x="15.1333%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="14.8833%" y="277" width="0.0805%" height="15" fill="rgb(242,180,7)" fg:x="185" fg:w="1"/><text x="15.1333%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="14.8833%" y="261" width="0.0805%" height="15" fill="rgb(243,78,19)" fg:x="185" fg:w="1"/><text x="15.1333%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.8833%" y="245" width="0.0805%" height="15" fill="rgb(233,23,17)" fg:x="185" fg:w="1"/><text x="15.1333%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.0442%" y="661" width="0.1609%" height="15" fill="rgb(252,122,45)" fg:x="187" fg:w="2"/><text x="15.2942%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1247%" y="645" width="0.0805%" height="15" fill="rgb(247,108,20)" fg:x="188" fg:w="1"/><text x="15.3747%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1247%" y="629" width="0.0805%" height="15" fill="rgb(235,84,21)" fg:x="188" fg:w="1"/><text x="15.3747%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.1247%" y="613" width="0.0805%" height="15" fill="rgb(247,129,10)" fg:x="188" fg:w="1"/><text x="15.3747%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.1247%" y="597" width="0.0805%" height="15" fill="rgb(208,173,14)" fg:x="188" fg:w="1"/><text x="15.3747%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.1247%" y="581" width="0.0805%" height="15" fill="rgb(236,31,38)" fg:x="188" fg:w="1"/><text x="15.3747%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="15.1247%" y="565" width="0.0805%" height="15" fill="rgb(232,65,17)" fg:x="188" fg:w="1"/><text x="15.3747%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="15.1247%" y="549" width="0.0805%" height="15" fill="rgb(224,45,49)" fg:x="188" fg:w="1"/><text x="15.3747%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="15.0442%" y="677" width="0.2414%" height="15" fill="rgb(225,2,53)" fg:x="187" fg:w="3"/><text x="15.2942%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2051%" y="661" width="0.0805%" height="15" fill="rgb(248,210,53)" fg:x="189" fg:w="1"/><text x="15.4551%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="14.9638%" y="709" width="0.4023%" height="15" fill="rgb(211,1,30)" fg:x="186" fg:w="5"/><text x="15.2138%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="15.0442%" y="693" width="0.3218%" height="15" fill="rgb(224,96,15)" fg:x="187" fg:w="4"/><text x="15.2942%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2856%" y="677" width="0.0805%" height="15" fill="rgb(252,45,11)" fg:x="190" fg:w="1"/><text x="15.5356%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2856%" y="661" width="0.0805%" height="15" fill="rgb(220,125,38)" fg:x="190" fg:w="1"/><text x="15.5356%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.2856%" y="645" width="0.0805%" height="15" fill="rgb(243,161,33)" fg:x="190" fg:w="1"/><text x="15.5356%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.2856%" y="629" width="0.0805%" height="15" fill="rgb(248,197,34)" fg:x="190" fg:w="1"/><text x="15.5356%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.2856%" y="613" width="0.0805%" height="15" fill="rgb(228,165,23)" fg:x="190" fg:w="1"/><text x="15.5356%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.2856%" y="597" width="0.0805%" height="15" fill="rgb(236,94,38)" fg:x="190" fg:w="1"/><text x="15.5356%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.2856%" y="581" width="0.0805%" height="15" fill="rgb(220,13,23)" fg:x="190" fg:w="1"/><text x="15.5356%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.2856%" y="565" width="0.0805%" height="15" fill="rgb(234,26,39)" fg:x="190" fg:w="1"/><text x="15.5356%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.2856%" y="549" width="0.0805%" height="15" fill="rgb(205,117,44)" fg:x="190" fg:w="1"/><text x="15.5356%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.2856%" y="533" width="0.0805%" height="15" fill="rgb(250,42,2)" fg:x="190" fg:w="1"/><text x="15.5356%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.2856%" y="517" width="0.0805%" height="15" fill="rgb(223,83,14)" fg:x="190" fg:w="1"/><text x="15.5356%" y="527.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="15.2856%" y="501" width="0.0805%" height="15" fill="rgb(241,147,50)" fg:x="190" fg:w="1"/><text x="15.5356%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.5270%" y="581" width="0.0805%" height="15" fill="rgb(218,90,6)" fg:x="193" fg:w="1"/><text x="15.7770%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5270%" y="565" width="0.0805%" height="15" fill="rgb(210,191,5)" fg:x="193" fg:w="1"/><text x="15.7770%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.97%)</title><rect x="14.7224%" y="773" width="0.9654%" height="15" fill="rgb(225,139,19)" fg:x="183" fg:w="12"/><text x="14.9724%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="14.9638%" y="757" width="0.7241%" height="15" fill="rgb(210,1,33)" fg:x="186" fg:w="9"/><text x="15.2138%" y="767.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="14.9638%" y="741" width="0.7241%" height="15" fill="rgb(213,50,3)" fg:x="186" fg:w="9"/><text x="15.2138%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="14.9638%" y="725" width="0.7241%" height="15" fill="rgb(234,227,4)" fg:x="186" fg:w="9"/><text x="15.2138%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="15.3660%" y="709" width="0.3218%" height="15" fill="rgb(246,63,5)" fg:x="191" fg:w="4"/><text x="15.6160%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="15.3660%" y="693" width="0.3218%" height="15" fill="rgb(245,136,27)" fg:x="191" fg:w="4"/><text x="15.6160%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="15.4465%" y="677" width="0.2414%" height="15" fill="rgb(247,199,27)" fg:x="192" fg:w="3"/><text x="15.6965%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="15.4465%" y="661" width="0.2414%" height="15" fill="rgb(252,158,49)" fg:x="192" fg:w="3"/><text x="15.6965%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="15.4465%" y="645" width="0.2414%" height="15" fill="rgb(254,73,1)" fg:x="192" fg:w="3"/><text x="15.6965%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="15.4465%" y="629" width="0.2414%" height="15" fill="rgb(248,93,19)" fg:x="192" fg:w="3"/><text x="15.6965%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.5270%" y="613" width="0.1609%" height="15" fill="rgb(206,67,5)" fg:x="193" fg:w="2"/><text x="15.7770%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.5270%" y="597" width="0.1609%" height="15" fill="rgb(209,210,4)" fg:x="193" fg:w="2"/><text x="15.7770%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.6074%" y="581" width="0.0805%" height="15" fill="rgb(214,185,36)" fg:x="194" fg:w="1"/><text x="15.8574%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6074%" y="565" width="0.0805%" height="15" fill="rgb(233,191,26)" fg:x="194" fg:w="1"/><text x="15.8574%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="15.6074%" y="549" width="0.0805%" height="15" fill="rgb(248,94,17)" fg:x="194" fg:w="1"/><text x="15.8574%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.6879%" y="773" width="0.0805%" height="15" fill="rgb(250,64,4)" fg:x="195" fg:w="1"/><text x="15.9379%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.6879%" y="757" width="0.0805%" height="15" fill="rgb(218,41,53)" fg:x="195" fg:w="1"/><text x="15.9379%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.6879%" y="741" width="0.0805%" height="15" fill="rgb(251,176,28)" fg:x="195" fg:w="1"/><text x="15.9379%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.6879%" y="725" width="0.0805%" height="15" fill="rgb(247,22,9)" fg:x="195" fg:w="1"/><text x="15.9379%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.6879%" y="709" width="0.0805%" height="15" fill="rgb(218,201,14)" fg:x="195" fg:w="1"/><text x="15.9379%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.6879%" y="693" width="0.0805%" height="15" fill="rgb(218,94,10)" fg:x="195" fg:w="1"/><text x="15.9379%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.6879%" y="677" width="0.0805%" height="15" fill="rgb(222,183,52)" fg:x="195" fg:w="1"/><text x="15.9379%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.6879%" y="661" width="0.0805%" height="15" fill="rgb(242,140,25)" fg:x="195" fg:w="1"/><text x="15.9379%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.6879%" y="645" width="0.0805%" height="15" fill="rgb(235,197,38)" fg:x="195" fg:w="1"/><text x="15.9379%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.6879%" y="629" width="0.0805%" height="15" fill="rgb(237,136,15)" fg:x="195" fg:w="1"/><text x="15.9379%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.6879%" y="613" width="0.0805%" height="15" fill="rgb(223,44,49)" fg:x="195" fg:w="1"/><text x="15.9379%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.6879%" y="597" width="0.0805%" height="15" fill="rgb(227,71,15)" fg:x="195" fg:w="1"/><text x="15.9379%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6879%" y="581" width="0.0805%" height="15" fill="rgb(225,153,20)" fg:x="195" fg:w="1"/><text x="15.9379%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="15.7683%" y="773" width="0.1609%" height="15" fill="rgb(210,190,26)" fg:x="196" fg:w="2"/><text x="16.0183%" y="783.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="15.7683%" y="757" width="0.1609%" height="15" fill="rgb(223,147,5)" fg:x="196" fg:w="2"/><text x="16.0183%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.7683%" y="741" width="0.1609%" height="15" fill="rgb(207,14,23)" fg:x="196" fg:w="2"/><text x="16.0183%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="16.0097%" y="709" width="0.0805%" height="15" fill="rgb(211,195,53)" fg:x="199" fg:w="1"/><text x="16.2597%" y="719.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="16.0097%" y="693" width="0.0805%" height="15" fill="rgb(237,75,46)" fg:x="199" fg:w="1"/><text x="16.2597%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.0097%" y="677" width="0.0805%" height="15" fill="rgb(254,55,14)" fg:x="199" fg:w="1"/><text x="16.2597%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.0097%" y="661" width="0.0805%" height="15" fill="rgb(230,185,30)" fg:x="199" fg:w="1"/><text x="16.2597%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="16.0097%" y="645" width="0.0805%" height="15" fill="rgb(220,14,11)" fg:x="199" fg:w="1"/><text x="16.2597%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.0097%" y="629" width="0.0805%" height="15" fill="rgb(215,169,44)" fg:x="199" fg:w="1"/><text x="16.2597%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.0097%" y="613" width="0.0805%" height="15" fill="rgb(253,203,20)" fg:x="199" fg:w="1"/><text x="16.2597%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="16.0097%" y="725" width="0.1609%" height="15" fill="rgb(229,225,17)" fg:x="199" fg:w="2"/><text x="16.2597%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="16.0901%" y="709" width="0.0805%" height="15" fill="rgb(236,76,26)" fg:x="200" fg:w="1"/><text x="16.3401%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.0901%" y="693" width="0.0805%" height="15" fill="rgb(234,15,30)" fg:x="200" fg:w="1"/><text x="16.3401%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.0901%" y="677" width="0.0805%" height="15" fill="rgb(211,113,48)" fg:x="200" fg:w="1"/><text x="16.3401%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.0901%" y="661" width="0.0805%" height="15" fill="rgb(221,31,36)" fg:x="200" fg:w="1"/><text x="16.3401%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0901%" y="645" width="0.0805%" height="15" fill="rgb(215,118,52)" fg:x="200" fg:w="1"/><text x="16.3401%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0901%" y="629" width="0.0805%" height="15" fill="rgb(241,151,27)" fg:x="200" fg:w="1"/><text x="16.3401%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0901%" y="613" width="0.0805%" height="15" fill="rgb(253,51,3)" fg:x="200" fg:w="1"/><text x="16.3401%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="16.1706%" y="677" width="0.0805%" height="15" fill="rgb(216,201,24)" fg:x="201" fg:w="1"/><text x="16.4206%" y="687.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="16.1706%" y="661" width="0.0805%" height="15" fill="rgb(231,107,4)" fg:x="201" fg:w="1"/><text x="16.4206%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="16.1706%" y="693" width="0.1609%" height="15" fill="rgb(243,97,54)" fg:x="201" fg:w="2"/><text x="16.4206%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="16.2510%" y="677" width="0.0805%" height="15" fill="rgb(221,32,51)" fg:x="202" fg:w="1"/><text x="16.5010%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="16.2510%" y="661" width="0.0805%" height="15" fill="rgb(218,171,35)" fg:x="202" fg:w="1"/><text x="16.5010%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="16.2510%" y="645" width="0.0805%" height="15" fill="rgb(214,20,53)" fg:x="202" fg:w="1"/><text x="16.5010%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.2510%" y="629" width="0.0805%" height="15" fill="rgb(239,9,52)" fg:x="202" fg:w="1"/><text x="16.5010%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.2510%" y="613" width="0.0805%" height="15" fill="rgb(215,114,45)" fg:x="202" fg:w="1"/><text x="16.5010%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="16.2510%" y="597" width="0.0805%" height="15" fill="rgb(208,118,9)" fg:x="202" fg:w="1"/><text x="16.5010%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.2510%" y="581" width="0.0805%" height="15" fill="rgb(235,7,39)" fg:x="202" fg:w="1"/><text x="16.5010%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.2510%" y="565" width="0.0805%" height="15" fill="rgb(243,225,15)" fg:x="202" fg:w="1"/><text x="16.5010%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.2510%" y="549" width="0.0805%" height="15" fill="rgb(225,216,18)" fg:x="202" fg:w="1"/><text x="16.5010%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="16.2510%" y="533" width="0.0805%" height="15" fill="rgb(233,36,38)" fg:x="202" fg:w="1"/><text x="16.5010%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.2510%" y="517" width="0.0805%" height="15" fill="rgb(239,88,23)" fg:x="202" fg:w="1"/><text x="16.5010%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.2510%" y="501" width="0.0805%" height="15" fill="rgb(219,181,35)" fg:x="202" fg:w="1"/><text x="16.5010%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3315%" y="645" width="0.0805%" height="15" fill="rgb(215,18,46)" fg:x="203" fg:w="1"/><text x="16.5815%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3315%" y="629" width="0.0805%" height="15" fill="rgb(241,38,11)" fg:x="203" fg:w="1"/><text x="16.5815%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3315%" y="613" width="0.0805%" height="15" fill="rgb(248,169,45)" fg:x="203" fg:w="1"/><text x="16.5815%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.4119%" y="645" width="0.0805%" height="15" fill="rgb(239,50,49)" fg:x="204" fg:w="1"/><text x="16.6619%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="16.1706%" y="725" width="0.4023%" height="15" fill="rgb(231,96,31)" fg:x="201" fg:w="5"/><text x="16.4206%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="16.1706%" y="709" width="0.4023%" height="15" fill="rgb(224,193,37)" fg:x="201" fg:w="5"/><text x="16.4206%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="16.3315%" y="693" width="0.2414%" height="15" fill="rgb(227,153,50)" fg:x="203" fg:w="3"/><text x="16.5815%" y="703.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="16.3315%" y="677" width="0.2414%" height="15" fill="rgb(249,228,3)" fg:x="203" fg:w="3"/><text x="16.5815%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="16.3315%" y="661" width="0.2414%" height="15" fill="rgb(219,164,43)" fg:x="203" fg:w="3"/><text x="16.5815%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.4924%" y="645" width="0.0805%" height="15" fill="rgb(216,45,41)" fg:x="205" fg:w="1"/><text x="16.7424%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4924%" y="629" width="0.0805%" height="15" fill="rgb(210,226,51)" fg:x="205" fg:w="1"/><text x="16.7424%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.4924%" y="613" width="0.0805%" height="15" fill="rgb(209,117,49)" fg:x="205" fg:w="1"/><text x="16.7424%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4924%" y="597" width="0.0805%" height="15" fill="rgb(206,196,24)" fg:x="205" fg:w="1"/><text x="16.7424%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.4924%" y="581" width="0.0805%" height="15" fill="rgb(253,218,3)" fg:x="205" fg:w="1"/><text x="16.7424%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4924%" y="565" width="0.0805%" height="15" fill="rgb(252,166,2)" fg:x="205" fg:w="1"/><text x="16.7424%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.4924%" y="549" width="0.0805%" height="15" fill="rgb(236,218,26)" fg:x="205" fg:w="1"/><text x="16.7424%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="16.5728%" y="693" width="0.0805%" height="15" fill="rgb(254,84,19)" fg:x="206" fg:w="1"/><text x="16.8228%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="16.5728%" y="677" width="0.0805%" height="15" fill="rgb(219,137,29)" fg:x="206" fg:w="1"/><text x="16.8228%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="16.5728%" y="661" width="0.0805%" height="15" fill="rgb(227,47,52)" fg:x="206" fg:w="1"/><text x="16.8228%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="16.5728%" y="645" width="0.0805%" height="15" fill="rgb(229,167,24)" fg:x="206" fg:w="1"/><text x="16.8228%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.5728%" y="629" width="0.0805%" height="15" fill="rgb(233,164,1)" fg:x="206" fg:w="1"/><text x="16.8228%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.5728%" y="613" width="0.0805%" height="15" fill="rgb(218,88,48)" fg:x="206" fg:w="1"/><text x="16.8228%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="16.5728%" y="597" width="0.0805%" height="15" fill="rgb(226,214,24)" fg:x="206" fg:w="1"/><text x="16.8228%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.5728%" y="581" width="0.0805%" height="15" fill="rgb(233,29,12)" fg:x="206" fg:w="1"/><text x="16.8228%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.5728%" y="565" width="0.0805%" height="15" fill="rgb(219,120,34)" fg:x="206" fg:w="1"/><text x="16.8228%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.5728%" y="549" width="0.0805%" height="15" fill="rgb(226,78,44)" fg:x="206" fg:w="1"/><text x="16.8228%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="16.5728%" y="533" width="0.0805%" height="15" fill="rgb(240,15,48)" fg:x="206" fg:w="1"/><text x="16.8228%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.5728%" y="517" width="0.0805%" height="15" fill="rgb(253,176,7)" fg:x="206" fg:w="1"/><text x="16.8228%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.5728%" y="501" width="0.0805%" height="15" fill="rgb(206,166,28)" fg:x="206" fg:w="1"/><text x="16.8228%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.5728%" y="485" width="0.0805%" height="15" fill="rgb(241,53,51)" fg:x="206" fg:w="1"/><text x="16.8228%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="16.6533%" y="693" width="0.0805%" height="15" fill="rgb(249,112,30)" fg:x="207" fg:w="1"/><text x="16.9033%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.6533%" y="677" width="0.0805%" height="15" fill="rgb(217,85,30)" fg:x="207" fg:w="1"/><text x="16.9033%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.6533%" y="661" width="0.0805%" height="15" fill="rgb(233,49,7)" fg:x="207" fg:w="1"/><text x="16.9033%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="16.6533%" y="645" width="0.0805%" height="15" fill="rgb(234,109,9)" fg:x="207" fg:w="1"/><text x="16.9033%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.6533%" y="629" width="0.0805%" height="15" fill="rgb(253,95,22)" fg:x="207" fg:w="1"/><text x="16.9033%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.6533%" y="613" width="0.0805%" height="15" fill="rgb(233,176,25)" fg:x="207" fg:w="1"/><text x="16.9033%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.7337%" y="645" width="0.0805%" height="15" fill="rgb(236,33,39)" fg:x="208" fg:w="1"/><text x="16.9837%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.7337%" y="629" width="0.0805%" height="15" fill="rgb(223,226,42)" fg:x="208" fg:w="1"/><text x="16.9837%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="16.5728%" y="709" width="0.3218%" height="15" fill="rgb(216,99,33)" fg:x="206" fg:w="4"/><text x="16.8228%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="16.7337%" y="693" width="0.1609%" height="15" fill="rgb(235,84,23)" fg:x="208" fg:w="2"/><text x="16.9837%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="16.7337%" y="677" width="0.1609%" height="15" fill="rgb(232,2,27)" fg:x="208" fg:w="2"/><text x="16.9837%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="16.7337%" y="661" width="0.1609%" height="15" fill="rgb(241,23,22)" fg:x="208" fg:w="2"/><text x="16.9837%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="16.8142%" y="645" width="0.0805%" height="15" fill="rgb(211,73,27)" fg:x="209" fg:w="1"/><text x="17.0642%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.8142%" y="629" width="0.0805%" height="15" fill="rgb(235,109,49)" fg:x="209" fg:w="1"/><text x="17.0642%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8142%" y="613" width="0.0805%" height="15" fill="rgb(230,99,29)" fg:x="209" fg:w="1"/><text x="17.0642%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8142%" y="597" width="0.0805%" height="15" fill="rgb(245,199,7)" fg:x="209" fg:w="1"/><text x="17.0642%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.9751%" y="661" width="0.0805%" height="15" fill="rgb(217,179,10)" fg:x="211" fg:w="1"/><text x="17.2251%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.9751%" y="645" width="0.0805%" height="15" fill="rgb(254,99,47)" fg:x="211" fg:w="1"/><text x="17.2251%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.9751%" y="629" width="0.0805%" height="15" fill="rgb(251,121,7)" fg:x="211" fg:w="1"/><text x="17.2251%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.9751%" y="613" width="0.0805%" height="15" fill="rgb(250,177,26)" fg:x="211" fg:w="1"/><text x="17.2251%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.9751%" y="597" width="0.0805%" height="15" fill="rgb(232,88,15)" fg:x="211" fg:w="1"/><text x="17.2251%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.9751%" y="581" width="0.0805%" height="15" fill="rgb(251,54,54)" fg:x="211" fg:w="1"/><text x="17.2251%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.9751%" y="565" width="0.0805%" height="15" fill="rgb(208,177,15)" fg:x="211" fg:w="1"/><text x="17.2251%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.9751%" y="549" width="0.0805%" height="15" fill="rgb(205,97,32)" fg:x="211" fg:w="1"/><text x="17.2251%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.9751%" y="533" width="0.0805%" height="15" fill="rgb(217,192,13)" fg:x="211" fg:w="1"/><text x="17.2251%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.9751%" y="517" width="0.0805%" height="15" fill="rgb(215,163,41)" fg:x="211" fg:w="1"/><text x="17.2251%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.9751%" y="501" width="0.0805%" height="15" fill="rgb(246,83,29)" fg:x="211" fg:w="1"/><text x="17.2251%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.0555%" y="597" width="0.1609%" height="15" fill="rgb(219,2,45)" fg:x="212" fg:w="2"/><text x="17.3055%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.1360%" y="581" width="0.0805%" height="15" fill="rgb(242,215,33)" fg:x="213" fg:w="1"/><text x="17.3860%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.1360%" y="565" width="0.0805%" height="15" fill="rgb(217,1,6)" fg:x="213" fg:w="1"/><text x="17.3860%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.1360%" y="549" width="0.0805%" height="15" fill="rgb(207,85,52)" fg:x="213" fg:w="1"/><text x="17.3860%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="16.8946%" y="693" width="0.4827%" height="15" fill="rgb(231,171,19)" fg:x="210" fg:w="6"/><text x="17.1446%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="16.9751%" y="677" width="0.4023%" height="15" fill="rgb(207,128,4)" fg:x="211" fg:w="5"/><text x="17.2251%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="17.0555%" y="661" width="0.3218%" height="15" fill="rgb(219,208,4)" fg:x="212" fg:w="4"/><text x="17.3055%" y="671.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="17.0555%" y="645" width="0.3218%" height="15" fill="rgb(235,161,42)" fg:x="212" fg:w="4"/><text x="17.3055%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="17.0555%" y="629" width="0.3218%" height="15" fill="rgb(247,218,18)" fg:x="212" fg:w="4"/><text x="17.3055%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="17.0555%" y="613" width="0.3218%" height="15" fill="rgb(232,114,51)" fg:x="212" fg:w="4"/><text x="17.3055%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="17.2164%" y="597" width="0.1609%" height="15" fill="rgb(222,95,3)" fg:x="214" fg:w="2"/><text x="17.4664%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2969%" y="581" width="0.0805%" height="15" fill="rgb(240,65,29)" fg:x="215" fg:w="1"/><text x="17.5469%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.2969%" y="565" width="0.0805%" height="15" fill="rgb(249,209,20)" fg:x="215" fg:w="1"/><text x="17.5469%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.2969%" y="549" width="0.0805%" height="15" fill="rgb(241,48,37)" fg:x="215" fg:w="1"/><text x="17.5469%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.2969%" y="533" width="0.0805%" height="15" fill="rgb(230,140,42)" fg:x="215" fg:w="1"/><text x="17.5469%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.2969%" y="517" width="0.0805%" height="15" fill="rgb(230,176,45)" fg:x="215" fg:w="1"/><text x="17.5469%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.2969%" y="501" width="0.0805%" height="15" fill="rgb(245,112,21)" fg:x="215" fg:w="1"/><text x="17.5469%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.2969%" y="485" width="0.0805%" height="15" fill="rgb(207,183,35)" fg:x="215" fg:w="1"/><text x="17.5469%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.2969%" y="469" width="0.0805%" height="15" fill="rgb(227,44,33)" fg:x="215" fg:w="1"/><text x="17.5469%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.2969%" y="453" width="0.0805%" height="15" fill="rgb(246,120,21)" fg:x="215" fg:w="1"/><text x="17.5469%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.2969%" y="437" width="0.0805%" height="15" fill="rgb(235,57,52)" fg:x="215" fg:w="1"/><text x="17.5469%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2969%" y="421" width="0.0805%" height="15" fill="rgb(238,84,10)" fg:x="215" fg:w="1"/><text x="17.5469%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="17.3773%" y="693" width="0.0805%" height="15" fill="rgb(251,200,32)" fg:x="216" fg:w="1"/><text x="17.6273%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="17.3773%" y="677" width="0.0805%" height="15" fill="rgb(247,159,13)" fg:x="216" fg:w="1"/><text x="17.6273%" y="687.50"></text></g><g><title>plugins_core::build::Build::leads_to (13 samples, 1.05%)</title><rect x="16.5728%" y="725" width="1.0459%" height="15" fill="rgb(238,64,4)" fg:x="206" fg:w="13"/><text x="16.8228%" y="735.50"></text></g><g><title>plugins_core::tools::leads_to (9 samples, 0.72%)</title><rect x="16.8946%" y="709" width="0.7241%" height="15" fill="rgb(221,131,51)" fg:x="210" fg:w="9"/><text x="17.1446%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.4578%" y="693" width="0.1609%" height="15" fill="rgb(242,5,29)" fg:x="217" fg:w="2"/><text x="17.7078%" y="703.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="17.5382%" y="677" width="0.0805%" height="15" fill="rgb(214,130,32)" fg:x="218" fg:w="1"/><text x="17.7882%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.5382%" y="661" width="0.0805%" height="15" fill="rgb(244,210,16)" fg:x="218" fg:w="1"/><text x="17.7882%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="17.5382%" y="645" width="0.0805%" height="15" fill="rgb(234,48,26)" fg:x="218" fg:w="1"/><text x="17.7882%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.5382%" y="629" width="0.0805%" height="15" fill="rgb(231,82,38)" fg:x="218" fg:w="1"/><text x="17.7882%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="17.6187%" y="693" width="0.0805%" height="15" fill="rgb(254,128,41)" fg:x="219" fg:w="1"/><text x="17.8687%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.6187%" y="677" width="0.0805%" height="15" fill="rgb(212,73,49)" fg:x="219" fg:w="1"/><text x="17.8687%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.6187%" y="661" width="0.0805%" height="15" fill="rgb(205,62,54)" fg:x="219" fg:w="1"/><text x="17.8687%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="17.6187%" y="645" width="0.0805%" height="15" fill="rgb(228,0,8)" fg:x="219" fg:w="1"/><text x="17.8687%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.6991%" y="629" width="0.0805%" height="15" fill="rgb(251,28,17)" fg:x="220" fg:w="1"/><text x="17.9491%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.6991%" y="613" width="0.0805%" height="15" fill="rgb(238,105,27)" fg:x="220" fg:w="1"/><text x="17.9491%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6991%" y="597" width="0.0805%" height="15" fill="rgb(237,216,33)" fg:x="220" fg:w="1"/><text x="17.9491%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="17.6187%" y="725" width="0.2414%" height="15" fill="rgb(229,228,25)" fg:x="219" fg:w="3"/><text x="17.8687%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="17.6187%" y="709" width="0.2414%" height="15" fill="rgb(233,75,23)" fg:x="219" fg:w="3"/><text x="17.8687%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="17.6991%" y="693" width="0.1609%" height="15" fill="rgb(231,207,16)" fg:x="220" fg:w="2"/><text x="17.9491%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.6991%" y="677" width="0.1609%" height="15" fill="rgb(231,191,45)" fg:x="220" fg:w="2"/><text x="17.9491%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="17.6991%" y="661" width="0.1609%" height="15" fill="rgb(224,133,17)" fg:x="220" fg:w="2"/><text x="17.9491%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.6991%" y="645" width="0.1609%" height="15" fill="rgb(209,178,27)" fg:x="220" fg:w="2"/><text x="17.9491%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="17.7796%" y="629" width="0.0805%" height="15" fill="rgb(218,37,11)" fg:x="221" fg:w="1"/><text x="18.0296%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.7796%" y="613" width="0.0805%" height="15" fill="rgb(251,226,25)" fg:x="221" fg:w="1"/><text x="18.0296%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.7796%" y="597" width="0.0805%" height="15" fill="rgb(209,222,27)" fg:x="221" fg:w="1"/><text x="18.0296%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="17.7796%" y="581" width="0.0805%" height="15" fill="rgb(238,22,21)" fg:x="221" fg:w="1"/><text x="18.0296%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (25 samples, 2.01%)</title><rect x="15.9292%" y="773" width="2.0113%" height="15" fill="rgb(233,161,25)" fg:x="198" fg:w="25"/><text x="16.1792%" y="783.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 1.93%)</title><rect x="16.0097%" y="757" width="1.9308%" height="15" fill="rgb(226,122,53)" fg:x="199" fg:w="24"/><text x="16.2597%" y="767.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (24 samples, 1.93%)</title><rect x="16.0097%" y="741" width="1.9308%" height="15" fill="rgb(220,123,17)" fg:x="199" fg:w="24"/><text x="16.2597%" y="751.50">p..</text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="17.8600%" y="725" width="0.0805%" height="15" fill="rgb(230,224,35)" fg:x="222" fg:w="1"/><text x="18.1100%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="17.9405%" y="773" width="0.0805%" height="15" fill="rgb(246,83,8)" fg:x="223" fg:w="1"/><text x="18.1905%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="17.9405%" y="757" width="0.0805%" height="15" fill="rgb(230,214,17)" fg:x="223" fg:w="1"/><text x="18.1905%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="17.9405%" y="741" width="0.0805%" height="15" fill="rgb(222,97,18)" fg:x="223" fg:w="1"/><text x="18.1905%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.0209%" y="741" width="0.0805%" height="15" fill="rgb(206,79,1)" fg:x="224" fg:w="1"/><text x="18.2709%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.0209%" y="725" width="0.0805%" height="15" fill="rgb(214,121,34)" fg:x="224" fg:w="1"/><text x="18.2709%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.0209%" y="709" width="0.0805%" height="15" fill="rgb(249,199,46)" fg:x="224" fg:w="1"/><text x="18.2709%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.0209%" y="693" width="0.0805%" height="15" fill="rgb(214,222,46)" fg:x="224" fg:w="1"/><text x="18.2709%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.0209%" y="677" width="0.0805%" height="15" fill="rgb(248,168,30)" fg:x="224" fg:w="1"/><text x="18.2709%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.0209%" y="661" width="0.0805%" height="15" fill="rgb(226,14,28)" fg:x="224" fg:w="1"/><text x="18.2709%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.0209%" y="645" width="0.0805%" height="15" fill="rgb(253,123,1)" fg:x="224" fg:w="1"/><text x="18.2709%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.0209%" y="629" width="0.0805%" height="15" fill="rgb(225,24,42)" fg:x="224" fg:w="1"/><text x="18.2709%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.0209%" y="613" width="0.0805%" height="15" fill="rgb(216,161,37)" fg:x="224" fg:w="1"/><text x="18.2709%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.0209%" y="597" width="0.0805%" height="15" fill="rgb(251,164,26)" fg:x="224" fg:w="1"/><text x="18.2709%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.0209%" y="581" width="0.0805%" height="15" fill="rgb(219,177,3)" fg:x="224" fg:w="1"/><text x="18.2709%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.0209%" y="565" width="0.0805%" height="15" fill="rgb(222,65,0)" fg:x="224" fg:w="1"/><text x="18.2709%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.1014%" y="741" width="0.0805%" height="15" fill="rgb(223,69,54)" fg:x="225" fg:w="1"/><text x="18.3514%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.1014%" y="725" width="0.0805%" height="15" fill="rgb(235,30,27)" fg:x="225" fg:w="1"/><text x="18.3514%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="18.1014%" y="709" width="0.0805%" height="15" fill="rgb(220,183,50)" fg:x="225" fg:w="1"/><text x="18.3514%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1014%" y="693" width="0.0805%" height="15" fill="rgb(248,198,15)" fg:x="225" fg:w="1"/><text x="18.3514%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="18.0209%" y="757" width="0.2414%" height="15" fill="rgb(222,211,4)" fg:x="224" fg:w="3"/><text x="18.2709%" y="767.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="18.1818%" y="741" width="0.0805%" height="15" fill="rgb(214,102,34)" fg:x="226" fg:w="1"/><text x="18.4318%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1818%" y="725" width="0.0805%" height="15" fill="rgb(245,92,5)" fg:x="226" fg:w="1"/><text x="18.4318%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="18.2623%" y="709" width="0.1609%" height="15" fill="rgb(252,72,51)" fg:x="227" fg:w="2"/><text x="18.5123%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="18.2623%" y="693" width="0.1609%" height="15" fill="rgb(252,208,19)" fg:x="227" fg:w="2"/><text x="18.5123%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="18.2623%" y="677" width="0.1609%" height="15" fill="rgb(211,69,7)" fg:x="227" fg:w="2"/><text x="18.5123%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.2623%" y="661" width="0.1609%" height="15" fill="rgb(211,27,16)" fg:x="227" fg:w="2"/><text x="18.5123%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.2623%" y="645" width="0.1609%" height="15" fill="rgb(219,216,14)" fg:x="227" fg:w="2"/><text x="18.5123%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="18.2623%" y="629" width="0.1609%" height="15" fill="rgb(219,71,8)" fg:x="227" fg:w="2"/><text x="18.5123%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="18.2623%" y="613" width="0.1609%" height="15" fill="rgb(223,170,53)" fg:x="227" fg:w="2"/><text x="18.5123%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="18.2623%" y="597" width="0.1609%" height="15" fill="rgb(246,21,26)" fg:x="227" fg:w="2"/><text x="18.5123%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="18.2623%" y="581" width="0.1609%" height="15" fill="rgb(248,20,46)" fg:x="227" fg:w="2"/><text x="18.5123%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="18.2623%" y="565" width="0.1609%" height="15" fill="rgb(252,94,11)" fg:x="227" fg:w="2"/><text x="18.5123%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="18.2623%" y="549" width="0.1609%" height="15" fill="rgb(236,163,8)" fg:x="227" fg:w="2"/><text x="18.5123%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="18.2623%" y="533" width="0.1609%" height="15" fill="rgb(217,221,45)" fg:x="227" fg:w="2"/><text x="18.5123%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="18.2623%" y="517" width="0.1609%" height="15" fill="rgb(238,38,17)" fg:x="227" fg:w="2"/><text x="18.5123%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="18.2623%" y="501" width="0.1609%" height="15" fill="rgb(242,210,23)" fg:x="227" fg:w="2"/><text x="18.5123%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.2623%" y="485" width="0.1609%" height="15" fill="rgb(250,86,53)" fg:x="227" fg:w="2"/><text x="18.5123%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="18.4232%" y="693" width="0.0805%" height="15" fill="rgb(223,168,25)" fg:x="229" fg:w="1"/><text x="18.6732%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.4232%" y="677" width="0.0805%" height="15" fill="rgb(251,189,4)" fg:x="229" fg:w="1"/><text x="18.6732%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.4232%" y="661" width="0.0805%" height="15" fill="rgb(245,19,28)" fg:x="229" fg:w="1"/><text x="18.6732%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="18.5036%" y="677" width="0.0805%" height="15" fill="rgb(207,10,34)" fg:x="230" fg:w="1"/><text x="18.7536%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.5036%" y="661" width="0.0805%" height="15" fill="rgb(235,153,31)" fg:x="230" fg:w="1"/><text x="18.7536%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.5036%" y="645" width="0.0805%" height="15" fill="rgb(228,72,37)" fg:x="230" fg:w="1"/><text x="18.7536%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.5036%" y="629" width="0.0805%" height="15" fill="rgb(215,15,16)" fg:x="230" fg:w="1"/><text x="18.7536%" y="639.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="18.5036%" y="613" width="0.0805%" height="15" fill="rgb(250,119,29)" fg:x="230" fg:w="1"/><text x="18.7536%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="18.5841%" y="645" width="0.2414%" height="15" fill="rgb(214,59,1)" fg:x="231" fg:w="3"/><text x="18.8341%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.6645%" y="629" width="0.1609%" height="15" fill="rgb(223,109,25)" fg:x="232" fg:w="2"/><text x="18.9145%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.7450%" y="613" width="0.0805%" height="15" fill="rgb(230,198,22)" fg:x="233" fg:w="1"/><text x="18.9950%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="18.5841%" y="661" width="0.4023%" height="15" fill="rgb(245,184,46)" fg:x="231" fg:w="5"/><text x="18.8341%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.8254%" y="645" width="0.1609%" height="15" fill="rgb(253,73,16)" fg:x="234" fg:w="2"/><text x="19.0754%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.9059%" y="629" width="0.0805%" height="15" fill="rgb(206,94,45)" fg:x="235" fg:w="1"/><text x="19.1559%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="19.0668%" y="645" width="0.4827%" height="15" fill="rgb(236,83,27)" fg:x="237" fg:w="6"/><text x="19.3168%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="19.3081%" y="629" width="0.2414%" height="15" fill="rgb(220,196,8)" fg:x="240" fg:w="3"/><text x="19.5581%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.4690%" y="613" width="0.0805%" height="15" fill="rgb(254,185,14)" fg:x="242" fg:w="1"/><text x="19.7190%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.4690%" y="597" width="0.0805%" height="15" fill="rgb(226,50,22)" fg:x="242" fg:w="1"/><text x="19.7190%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.4690%" y="581" width="0.0805%" height="15" fill="rgb(253,147,0)" fg:x="242" fg:w="1"/><text x="19.7190%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.4690%" y="565" width="0.0805%" height="15" fill="rgb(252,46,33)" fg:x="242" fg:w="1"/><text x="19.7190%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.4690%" y="549" width="0.0805%" height="15" fill="rgb(242,22,54)" fg:x="242" fg:w="1"/><text x="19.7190%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.5495%" y="629" width="0.0805%" height="15" fill="rgb(223,178,32)" fg:x="243" fg:w="1"/><text x="19.7995%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.6299%" y="597" width="0.0805%" height="15" fill="rgb(214,106,53)" fg:x="244" fg:w="1"/><text x="19.8799%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.7104%" y="597" width="0.0805%" height="15" fill="rgb(232,65,50)" fg:x="245" fg:w="1"/><text x="19.9604%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.7104%" y="581" width="0.0805%" height="15" fill="rgb(231,110,28)" fg:x="245" fg:w="1"/><text x="19.9604%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="19.6299%" y="629" width="0.4023%" height="15" fill="rgb(216,71,40)" fg:x="244" fg:w="5"/><text x="19.8799%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="19.6299%" y="613" width="0.4023%" height="15" fill="rgb(229,89,53)" fg:x="244" fg:w="5"/><text x="19.8799%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="19.7908%" y="597" width="0.2414%" height="15" fill="rgb(210,124,14)" fg:x="246" fg:w="3"/><text x="20.0408%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.8713%" y="581" width="0.1609%" height="15" fill="rgb(236,213,6)" fg:x="247" fg:w="2"/><text x="20.1213%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.9517%" y="565" width="0.0805%" height="15" fill="rgb(228,41,5)" fg:x="248" fg:w="1"/><text x="20.2017%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.9517%" y="549" width="0.0805%" height="15" fill="rgb(221,167,25)" fg:x="248" fg:w="1"/><text x="20.2017%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.9517%" y="533" width="0.0805%" height="15" fill="rgb(228,144,37)" fg:x="248" fg:w="1"/><text x="20.2017%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.0322%" y="629" width="0.1609%" height="15" fill="rgb(227,189,38)" fg:x="249" fg:w="2"/><text x="20.2822%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.1931%" y="613" width="0.1609%" height="15" fill="rgb(218,8,2)" fg:x="251" fg:w="2"/><text x="20.4431%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.2735%" y="597" width="0.0805%" height="15" fill="rgb(209,61,28)" fg:x="252" fg:w="1"/><text x="20.5235%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.2735%" y="581" width="0.0805%" height="15" fill="rgb(233,140,39)" fg:x="252" fg:w="1"/><text x="20.5235%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.3540%" y="597" width="0.1609%" height="15" fill="rgb(251,66,48)" fg:x="253" fg:w="2"/><text x="20.6040%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.3540%" y="581" width="0.1609%" height="15" fill="rgb(210,44,45)" fg:x="253" fg:w="2"/><text x="20.6040%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.4344%" y="565" width="0.0805%" height="15" fill="rgb(214,136,46)" fg:x="254" fg:w="1"/><text x="20.6844%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.4344%" y="549" width="0.0805%" height="15" fill="rgb(207,130,50)" fg:x="254" fg:w="1"/><text x="20.6844%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.5149%" y="581" width="0.0805%" height="15" fill="rgb(228,102,49)" fg:x="255" fg:w="1"/><text x="20.7649%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.5149%" y="565" width="0.0805%" height="15" fill="rgb(253,55,1)" fg:x="255" fg:w="1"/><text x="20.7649%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.5953%" y="565" width="0.0805%" height="15" fill="rgb(238,222,9)" fg:x="256" fg:w="1"/><text x="20.8453%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.5953%" y="549" width="0.0805%" height="15" fill="rgb(246,99,6)" fg:x="256" fg:w="1"/><text x="20.8453%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="20.5953%" y="581" width="0.2414%" height="15" fill="rgb(219,110,26)" fg:x="256" fg:w="3"/><text x="20.8453%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.6758%" y="565" width="0.1609%" height="15" fill="rgb(239,160,33)" fg:x="257" fg:w="2"/><text x="20.9258%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.6758%" y="549" width="0.1609%" height="15" fill="rgb(220,202,23)" fg:x="257" fg:w="2"/><text x="20.9258%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.7562%" y="533" width="0.0805%" height="15" fill="rgb(208,80,26)" fg:x="258" fg:w="1"/><text x="21.0062%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.7562%" y="517" width="0.0805%" height="15" fill="rgb(243,85,7)" fg:x="258" fg:w="1"/><text x="21.0062%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="20.3540%" y="613" width="0.5632%" height="15" fill="rgb(228,77,47)" fg:x="253" fg:w="7"/><text x="20.6040%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="20.5149%" y="597" width="0.4023%" height="15" fill="rgb(212,226,8)" fg:x="255" fg:w="5"/><text x="20.7649%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.8367%" y="581" width="0.0805%" height="15" fill="rgb(241,120,54)" fg:x="259" fg:w="1"/><text x="21.0867%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.8367%" y="565" width="0.0805%" height="15" fill="rgb(226,80,16)" fg:x="259" fg:w="1"/><text x="21.0867%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.8367%" y="549" width="0.0805%" height="15" fill="rgb(240,76,13)" fg:x="259" fg:w="1"/><text x="21.0867%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="20.1931%" y="629" width="0.9654%" height="15" fill="rgb(252,74,8)" fg:x="251" fg:w="12"/><text x="20.4431%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="20.9171%" y="613" width="0.2414%" height="15" fill="rgb(244,155,2)" fg:x="260" fg:w="3"/><text x="21.1671%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.9976%" y="597" width="0.1609%" height="15" fill="rgb(215,81,35)" fg:x="261" fg:w="2"/><text x="21.2476%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.9976%" y="581" width="0.1609%" height="15" fill="rgb(206,55,2)" fg:x="261" fg:w="2"/><text x="21.2476%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.69%)</title><rect x="19.5495%" y="645" width="1.6895%" height="15" fill="rgb(231,2,34)" fg:x="243" fg:w="21"/><text x="19.7995%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.1585%" y="629" width="0.0805%" height="15" fill="rgb(242,176,48)" fg:x="263" fg:w="1"/><text x="21.4085%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.1585%" y="613" width="0.0805%" height="15" fill="rgb(249,31,36)" fg:x="263" fg:w="1"/><text x="21.4085%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="21.3194%" y="613" width="0.4827%" height="15" fill="rgb(205,18,17)" fg:x="265" fg:w="6"/><text x="21.5694%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="21.3998%" y="597" width="0.4023%" height="15" fill="rgb(254,130,5)" fg:x="266" fg:w="5"/><text x="21.6498%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="21.4803%" y="581" width="0.3218%" height="15" fill="rgb(229,42,45)" fg:x="267" fg:w="4"/><text x="21.7303%" y="591.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="21.4803%" y="565" width="0.3218%" height="15" fill="rgb(245,95,25)" fg:x="267" fg:w="4"/><text x="21.7303%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (41 samples, 3.30%)</title><rect x="18.5841%" y="677" width="3.2985%" height="15" fill="rgb(249,193,38)" fg:x="231" fg:w="41"/><text x="18.8341%" y="687.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (36 samples, 2.90%)</title><rect x="18.9863%" y="661" width="2.8962%" height="15" fill="rgb(241,140,43)" fg:x="236" fg:w="36"/><text x="19.2363%" y="671.50">se..</text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="21.2389%" y="645" width="0.6436%" height="15" fill="rgb(245,78,48)" fg:x="264" fg:w="8"/><text x="21.4889%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.56%)</title><rect x="21.3194%" y="629" width="0.5632%" height="15" fill="rgb(214,92,39)" fg:x="265" fg:w="7"/><text x="21.5694%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="21.8021%" y="613" width="0.0805%" height="15" fill="rgb(211,189,14)" fg:x="271" fg:w="1"/><text x="22.0521%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="21.9630%" y="645" width="0.1609%" height="15" fill="rgb(218,7,24)" fg:x="273" fg:w="2"/><text x="22.2130%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="22.2043%" y="629" width="0.1609%" height="15" fill="rgb(224,200,49)" fg:x="276" fg:w="2"/><text x="22.4543%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.3652%" y="613" width="0.0805%" height="15" fill="rgb(218,210,14)" fg:x="278" fg:w="1"/><text x="22.6152%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.6870%" y="597" width="0.0805%" height="15" fill="rgb(234,142,31)" fg:x="282" fg:w="1"/><text x="22.9370%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.6870%" y="581" width="0.0805%" height="15" fill="rgb(227,165,2)" fg:x="282" fg:w="1"/><text x="22.9370%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.7675%" y="581" width="0.0805%" height="15" fill="rgb(232,44,46)" fg:x="283" fg:w="1"/><text x="23.0175%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="21.8825%" y="677" width="1.0459%" height="15" fill="rgb(236,149,47)" fg:x="272" fg:w="13"/><text x="22.1325%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.05%)</title><rect x="21.8825%" y="661" width="1.0459%" height="15" fill="rgb(227,45,31)" fg:x="272" fg:w="13"/><text x="22.1325%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="22.1239%" y="645" width="0.8045%" height="15" fill="rgb(240,176,51)" fg:x="275" fg:w="10"/><text x="22.3739%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="22.3652%" y="629" width="0.5632%" height="15" fill="rgb(249,146,41)" fg:x="278" fg:w="7"/><text x="22.6152%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="22.4457%" y="613" width="0.4827%" height="15" fill="rgb(213,208,4)" fg:x="279" fg:w="6"/><text x="22.6957%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="22.7675%" y="597" width="0.1609%" height="15" fill="rgb(245,84,36)" fg:x="283" fg:w="2"/><text x="23.0175%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.8479%" y="581" width="0.0805%" height="15" fill="rgb(254,84,18)" fg:x="284" fg:w="1"/><text x="23.0979%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="22.9284%" y="661" width="0.1609%" height="15" fill="rgb(225,38,54)" fg:x="285" fg:w="2"/><text x="23.1784%" y="671.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="22.9284%" y="645" width="0.1609%" height="15" fill="rgb(246,50,30)" fg:x="285" fg:w="2"/><text x="23.1784%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="22.9284%" y="629" width="0.1609%" height="15" fill="rgb(246,148,9)" fg:x="285" fg:w="2"/><text x="23.1784%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="22.9284%" y="613" width="0.1609%" height="15" fill="rgb(223,75,4)" fg:x="285" fg:w="2"/><text x="23.1784%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="22.9284%" y="597" width="0.1609%" height="15" fill="rgb(239,148,41)" fg:x="285" fg:w="2"/><text x="23.1784%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="23.0893%" y="661" width="0.0805%" height="15" fill="rgb(205,195,3)" fg:x="287" fg:w="1"/><text x="23.3393%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="23.3307%" y="629" width="0.2414%" height="15" fill="rgb(254,161,1)" fg:x="290" fg:w="3"/><text x="23.5807%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="23.3307%" y="613" width="0.2414%" height="15" fill="rgb(211,229,8)" fg:x="290" fg:w="3"/><text x="23.5807%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="23.4111%" y="597" width="0.1609%" height="15" fill="rgb(220,97,9)" fg:x="291" fg:w="2"/><text x="23.6611%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="23.5720%" y="629" width="0.2414%" height="15" fill="rgb(240,218,8)" fg:x="293" fg:w="3"/><text x="23.8220%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.6525%" y="613" width="0.1609%" height="15" fill="rgb(250,44,0)" fg:x="294" fg:w="2"/><text x="23.9025%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.6525%" y="597" width="0.1609%" height="15" fill="rgb(236,41,53)" fg:x="294" fg:w="2"/><text x="23.9025%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7329%" y="581" width="0.0805%" height="15" fill="rgb(218,227,13)" fg:x="295" fg:w="1"/><text x="23.9829%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.9743%" y="581" width="0.0805%" height="15" fill="rgb(217,94,32)" fg:x="298" fg:w="1"/><text x="24.2243%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="23.9743%" y="565" width="0.0805%" height="15" fill="rgb(213,217,12)" fg:x="298" fg:w="1"/><text x="24.2243%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.9743%" y="549" width="0.0805%" height="15" fill="rgb(229,13,46)" fg:x="298" fg:w="1"/><text x="24.2243%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="23.9743%" y="533" width="0.0805%" height="15" fill="rgb(243,139,5)" fg:x="298" fg:w="1"/><text x="24.2243%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.1352%" y="549" width="0.0805%" height="15" fill="rgb(249,38,45)" fg:x="300" fg:w="1"/><text x="24.3852%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.1352%" y="533" width="0.0805%" height="15" fill="rgb(216,70,11)" fg:x="300" fg:w="1"/><text x="24.3852%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="24.1352%" y="517" width="0.0805%" height="15" fill="rgb(253,101,25)" fg:x="300" fg:w="1"/><text x="24.3852%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.2156%" y="485" width="0.0805%" height="15" fill="rgb(207,197,30)" fg:x="301" fg:w="1"/><text x="24.4656%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="24.2961%" y="469" width="0.0805%" height="15" fill="rgb(238,87,13)" fg:x="302" fg:w="1"/><text x="24.5461%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="24.2156%" y="501" width="0.2414%" height="15" fill="rgb(215,155,8)" fg:x="301" fg:w="3"/><text x="24.4656%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="24.2961%" y="485" width="0.1609%" height="15" fill="rgb(239,166,38)" fg:x="302" fg:w="2"/><text x="24.5461%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="24.3765%" y="469" width="0.0805%" height="15" fill="rgb(240,194,35)" fg:x="303" fg:w="1"/><text x="24.6265%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="24.2156%" y="533" width="0.3218%" height="15" fill="rgb(219,10,44)" fg:x="301" fg:w="4"/><text x="24.4656%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="24.2156%" y="517" width="0.3218%" height="15" fill="rgb(251,220,35)" fg:x="301" fg:w="4"/><text x="24.4656%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.4570%" y="501" width="0.0805%" height="15" fill="rgb(218,117,13)" fg:x="304" fg:w="1"/><text x="24.7070%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="24.1352%" y="565" width="0.4827%" height="15" fill="rgb(221,213,40)" fg:x="300" fg:w="6"/><text x="24.3852%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="24.2156%" y="549" width="0.4023%" height="15" fill="rgb(251,224,35)" fg:x="301" fg:w="5"/><text x="24.4656%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5374%" y="533" width="0.0805%" height="15" fill="rgb(241,33,39)" fg:x="305" fg:w="1"/><text x="24.7874%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="23.9743%" y="597" width="0.8045%" height="15" fill="rgb(222,74,17)" fg:x="298" fg:w="10"/><text x="24.2243%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="24.0547%" y="581" width="0.7241%" height="15" fill="rgb(225,103,0)" fg:x="299" fg:w="9"/><text x="24.3047%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.6179%" y="565" width="0.1609%" height="15" fill="rgb(240,0,12)" fg:x="306" fg:w="2"/><text x="24.8679%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.05%)</title><rect x="23.8134%" y="613" width="1.0459%" height="15" fill="rgb(233,213,37)" fg:x="296" fg:w="13"/><text x="24.0634%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="24.7788%" y="597" width="0.0805%" height="15" fill="rgb(225,84,52)" fg:x="308" fg:w="1"/><text x="25.0288%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.8592%" y="613" width="0.0805%" height="15" fill="rgb(247,160,51)" fg:x="309" fg:w="1"/><text x="25.1092%" y="623.50"></text></g><g><title>engine::session::Session::flush (87 samples, 7.00%)</title><rect x="18.0209%" y="773" width="6.9992%" height="15" fill="rgb(244,60,51)" fg:x="224" fg:w="87"/><text x="18.2709%" y="783.50">engine::s..</text></g><g><title>engine::session::Session::save_changes (84 samples, 6.76%)</title><rect x="18.2623%" y="757" width="6.7578%" height="15" fill="rgb(233,114,7)" fg:x="227" fg:w="84"/><text x="18.5123%" y="767.50">engine::s..</text></g><g><title>engine::session::state::State::close (84 samples, 6.76%)</title><rect x="18.2623%" y="741" width="6.7578%" height="15" fill="rgb(246,136,16)" fg:x="227" fg:w="84"/><text x="18.5123%" y="751.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (84 samples, 6.76%)</title><rect x="18.2623%" y="725" width="6.7578%" height="15" fill="rgb(243,114,45)" fg:x="227" fg:w="84"/><text x="18.5123%" y="735.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (82 samples, 6.60%)</title><rect x="18.4232%" y="709" width="6.5969%" height="15" fill="rgb(247,183,43)" fg:x="229" fg:w="82"/><text x="18.6732%" y="719.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (81 samples, 6.52%)</title><rect x="18.5036%" y="693" width="6.5165%" height="15" fill="rgb(251,210,42)" fg:x="230" fg:w="81"/><text x="18.7536%" y="703.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (26 samples, 2.09%)</title><rect x="22.9284%" y="677" width="2.0917%" height="15" fill="rgb(221,88,35)" fg:x="285" fg:w="26"/><text x="23.1784%" y="687.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (23 samples, 1.85%)</title><rect x="23.1698%" y="661" width="1.8504%" height="15" fill="rgb(242,21,20)" fg:x="288" fg:w="23"/><text x="23.4198%" y="671.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.77%)</title><rect x="23.2502%" y="645" width="1.7699%" height="15" fill="rgb(233,226,36)" fg:x="289" fg:w="22"/><text x="23.5002%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.21%)</title><rect x="23.8134%" y="629" width="1.2068%" height="15" fill="rgb(243,189,34)" fg:x="296" fg:w="15"/><text x="24.0634%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9397%" y="613" width="0.0805%" height="15" fill="rgb(207,145,50)" fg:x="310" fg:w="1"/><text x="25.1897%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9397%" y="597" width="0.0805%" height="15" fill="rgb(242,1,50)" fg:x="310" fg:w="1"/><text x="25.1897%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="24.9397%" y="581" width="0.0805%" height="15" fill="rgb(231,65,32)" fg:x="310" fg:w="1"/><text x="25.1897%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="25.1006%" y="757" width="0.1609%" height="15" fill="rgb(208,68,49)" fg:x="312" fg:w="2"/><text x="25.3506%" y="767.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="25.1810%" y="741" width="0.0805%" height="15" fill="rgb(253,54,49)" fg:x="313" fg:w="1"/><text x="25.4310%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1810%" y="725" width="0.0805%" height="15" fill="rgb(245,186,24)" fg:x="313" fg:w="1"/><text x="25.4310%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.3419%" y="693" width="0.0805%" height="15" fill="rgb(209,2,41)" fg:x="315" fg:w="1"/><text x="25.5919%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.4224%" y="661" width="0.0805%" height="15" fill="rgb(242,208,54)" fg:x="316" fg:w="1"/><text x="25.6724%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.4224%" y="645" width="0.0805%" height="15" fill="rgb(225,9,51)" fg:x="316" fg:w="1"/><text x="25.6724%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="25.2615%" y="741" width="0.3218%" height="15" fill="rgb(207,207,25)" fg:x="314" fg:w="4"/><text x="25.5115%" y="751.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="25.3419%" y="725" width="0.2414%" height="15" fill="rgb(253,96,18)" fg:x="315" fg:w="3"/><text x="25.5919%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="25.3419%" y="709" width="0.2414%" height="15" fill="rgb(252,215,20)" fg:x="315" fg:w="3"/><text x="25.5919%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.4224%" y="693" width="0.1609%" height="15" fill="rgb(245,227,26)" fg:x="316" fg:w="2"/><text x="25.6724%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.4224%" y="677" width="0.1609%" height="15" fill="rgb(241,208,0)" fg:x="316" fg:w="2"/><text x="25.6724%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5028%" y="661" width="0.0805%" height="15" fill="rgb(224,130,10)" fg:x="317" fg:w="1"/><text x="25.7528%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5028%" y="645" width="0.0805%" height="15" fill="rgb(237,29,0)" fg:x="317" fg:w="1"/><text x="25.7528%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.5028%" y="629" width="0.0805%" height="15" fill="rgb(219,27,41)" fg:x="317" fg:w="1"/><text x="25.7528%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5028%" y="613" width="0.0805%" height="15" fill="rgb(245,101,19)" fg:x="317" fg:w="1"/><text x="25.7528%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (8 samples, 0.64%)</title><rect x="25.0201%" y="773" width="0.6436%" height="15" fill="rgb(243,44,37)" fg:x="311" fg:w="8"/><text x="25.2701%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="25.2615%" y="757" width="0.4023%" height="15" fill="rgb(228,213,43)" fg:x="314" fg:w="5"/><text x="25.5115%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="25.5833%" y="741" width="0.0805%" height="15" fill="rgb(219,163,21)" fg:x="318" fg:w="1"/><text x="25.8333%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="25.5833%" y="725" width="0.0805%" height="15" fill="rgb(234,86,24)" fg:x="318" fg:w="1"/><text x="25.8333%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.5833%" y="709" width="0.0805%" height="15" fill="rgb(225,10,24)" fg:x="318" fg:w="1"/><text x="25.8333%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5833%" y="693" width="0.0805%" height="15" fill="rgb(218,109,7)" fg:x="318" fg:w="1"/><text x="25.8333%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5833%" y="677" width="0.0805%" height="15" fill="rgb(210,20,26)" fg:x="318" fg:w="1"/><text x="25.8333%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5833%" y="661" width="0.0805%" height="15" fill="rgb(216,18,1)" fg:x="318" fg:w="1"/><text x="25.8333%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5833%" y="645" width="0.0805%" height="15" fill="rgb(206,163,23)" fg:x="318" fg:w="1"/><text x="25.8333%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.5833%" y="629" width="0.0805%" height="15" fill="rgb(229,150,31)" fg:x="318" fg:w="1"/><text x="25.8333%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5833%" y="613" width="0.0805%" height="15" fill="rgb(231,10,5)" fg:x="318" fg:w="1"/><text x="25.8333%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.8246%" y="709" width="0.0805%" height="15" fill="rgb(250,40,50)" fg:x="321" fg:w="1"/><text x="26.0746%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.8246%" y="693" width="0.0805%" height="15" fill="rgb(217,119,7)" fg:x="321" fg:w="1"/><text x="26.0746%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.8246%" y="677" width="0.0805%" height="15" fill="rgb(245,214,40)" fg:x="321" fg:w="1"/><text x="26.0746%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.8246%" y="661" width="0.0805%" height="15" fill="rgb(216,187,1)" fg:x="321" fg:w="1"/><text x="26.0746%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.8246%" y="645" width="0.0805%" height="15" fill="rgb(237,146,21)" fg:x="321" fg:w="1"/><text x="26.0746%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.8246%" y="629" width="0.0805%" height="15" fill="rgb(210,174,47)" fg:x="321" fg:w="1"/><text x="26.0746%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.8246%" y="613" width="0.0805%" height="15" fill="rgb(218,111,39)" fg:x="321" fg:w="1"/><text x="26.0746%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.8246%" y="597" width="0.0805%" height="15" fill="rgb(224,95,19)" fg:x="321" fg:w="1"/><text x="26.0746%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.8246%" y="581" width="0.0805%" height="15" fill="rgb(234,15,38)" fg:x="321" fg:w="1"/><text x="26.0746%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.8246%" y="565" width="0.0805%" height="15" fill="rgb(246,56,12)" fg:x="321" fg:w="1"/><text x="26.0746%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.8246%" y="549" width="0.0805%" height="15" fill="rgb(247,16,17)" fg:x="321" fg:w="1"/><text x="26.0746%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.8246%" y="533" width="0.0805%" height="15" fill="rgb(215,151,11)" fg:x="321" fg:w="1"/><text x="26.0746%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="25.8246%" y="741" width="0.1609%" height="15" fill="rgb(225,16,24)" fg:x="321" fg:w="2"/><text x="26.0746%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="25.8246%" y="725" width="0.1609%" height="15" fill="rgb(217,117,5)" fg:x="321" fg:w="2"/><text x="26.0746%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="25.9051%" y="709" width="0.0805%" height="15" fill="rgb(246,187,53)" fg:x="322" fg:w="1"/><text x="26.1551%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.9051%" y="693" width="0.0805%" height="15" fill="rgb(241,71,40)" fg:x="322" fg:w="1"/><text x="26.1551%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.9051%" y="677" width="0.0805%" height="15" fill="rgb(231,67,39)" fg:x="322" fg:w="1"/><text x="26.1551%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.9051%" y="661" width="0.0805%" height="15" fill="rgb(222,120,24)" fg:x="322" fg:w="1"/><text x="26.1551%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.9051%" y="645" width="0.0805%" height="15" fill="rgb(248,3,3)" fg:x="322" fg:w="1"/><text x="26.1551%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.9051%" y="629" width="0.0805%" height="15" fill="rgb(228,218,5)" fg:x="322" fg:w="1"/><text x="26.1551%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.9051%" y="613" width="0.0805%" height="15" fill="rgb(212,202,43)" fg:x="322" fg:w="1"/><text x="26.1551%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.9051%" y="597" width="0.0805%" height="15" fill="rgb(235,183,2)" fg:x="322" fg:w="1"/><text x="26.1551%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.9051%" y="581" width="0.0805%" height="15" fill="rgb(230,165,10)" fg:x="322" fg:w="1"/><text x="26.1551%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.9051%" y="565" width="0.0805%" height="15" fill="rgb(219,54,40)" fg:x="322" fg:w="1"/><text x="26.1551%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.9855%" y="661" width="0.1609%" height="15" fill="rgb(244,73,9)" fg:x="323" fg:w="2"/><text x="26.2355%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.0660%" y="645" width="0.0805%" height="15" fill="rgb(212,32,45)" fg:x="324" fg:w="1"/><text x="26.3160%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.0660%" y="629" width="0.0805%" height="15" fill="rgb(205,58,31)" fg:x="324" fg:w="1"/><text x="26.3160%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.0660%" y="613" width="0.0805%" height="15" fill="rgb(250,120,43)" fg:x="324" fg:w="1"/><text x="26.3160%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="25.9855%" y="677" width="0.2414%" height="15" fill="rgb(235,13,10)" fg:x="323" fg:w="3"/><text x="26.2355%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1464%" y="661" width="0.0805%" height="15" fill="rgb(232,219,31)" fg:x="325" fg:w="1"/><text x="26.3964%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="25.9855%" y="693" width="0.3218%" height="15" fill="rgb(218,157,51)" fg:x="323" fg:w="4"/><text x="26.2355%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.2269%" y="677" width="0.0805%" height="15" fill="rgb(211,91,52)" fg:x="326" fg:w="1"/><text x="26.4769%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="25.9855%" y="741" width="0.4023%" height="15" fill="rgb(240,173,1)" fg:x="323" fg:w="5"/><text x="26.2355%" y="751.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="25.9855%" y="725" width="0.4023%" height="15" fill="rgb(248,20,47)" fg:x="323" fg:w="5"/><text x="26.2355%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="25.9855%" y="709" width="0.4023%" height="15" fill="rgb(217,221,40)" fg:x="323" fg:w="5"/><text x="26.2355%" y="719.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="26.3073%" y="693" width="0.0805%" height="15" fill="rgb(226,149,51)" fg:x="327" fg:w="1"/><text x="26.5573%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="25.8246%" y="757" width="0.6436%" height="15" fill="rgb(252,193,7)" fg:x="321" fg:w="8"/><text x="26.0746%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="26.3878%" y="741" width="0.0805%" height="15" fill="rgb(205,123,0)" fg:x="328" fg:w="1"/><text x="26.6378%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="26.3878%" y="725" width="0.0805%" height="15" fill="rgb(233,173,25)" fg:x="328" fg:w="1"/><text x="26.6378%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="26.3878%" y="709" width="0.0805%" height="15" fill="rgb(216,63,32)" fg:x="328" fg:w="1"/><text x="26.6378%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="26.3878%" y="693" width="0.0805%" height="15" fill="rgb(209,56,45)" fg:x="328" fg:w="1"/><text x="26.6378%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="26.3878%" y="677" width="0.0805%" height="15" fill="rgb(226,111,49)" fg:x="328" fg:w="1"/><text x="26.6378%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3878%" y="661" width="0.0805%" height="15" fill="rgb(244,181,21)" fg:x="328" fg:w="1"/><text x="26.6378%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.3878%" y="645" width="0.0805%" height="15" fill="rgb(222,126,15)" fg:x="328" fg:w="1"/><text x="26.6378%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="26.4682%" y="741" width="0.0805%" height="15" fill="rgb(222,95,17)" fg:x="329" fg:w="1"/><text x="26.7182%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="26.4682%" y="725" width="0.0805%" height="15" fill="rgb(254,46,5)" fg:x="329" fg:w="1"/><text x="26.7182%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.4682%" y="709" width="0.0805%" height="15" fill="rgb(236,216,35)" fg:x="329" fg:w="1"/><text x="26.7182%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="26.6291%" y="693" width="0.0805%" height="15" fill="rgb(217,187,26)" fg:x="331" fg:w="1"/><text x="26.8791%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.6291%" y="677" width="0.0805%" height="15" fill="rgb(207,192,25)" fg:x="331" fg:w="1"/><text x="26.8791%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.7900%" y="597" width="0.0805%" height="15" fill="rgb(253,135,27)" fg:x="333" fg:w="1"/><text x="27.0400%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="26.7096%" y="661" width="0.3218%" height="15" fill="rgb(211,122,29)" fg:x="332" fg:w="4"/><text x="26.9596%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="26.7096%" y="645" width="0.3218%" height="15" fill="rgb(233,162,40)" fg:x="332" fg:w="4"/><text x="26.9596%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.7900%" y="629" width="0.2414%" height="15" fill="rgb(222,184,47)" fg:x="333" fg:w="3"/><text x="27.0400%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.7900%" y="613" width="0.2414%" height="15" fill="rgb(249,99,23)" fg:x="333" fg:w="3"/><text x="27.0400%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="26.8705%" y="597" width="0.1609%" height="15" fill="rgb(214,60,12)" fg:x="334" fg:w="2"/><text x="27.1205%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="26.8705%" y="581" width="0.1609%" height="15" fill="rgb(250,229,36)" fg:x="334" fg:w="2"/><text x="27.1205%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="26.8705%" y="565" width="0.1609%" height="15" fill="rgb(232,195,10)" fg:x="334" fg:w="2"/><text x="27.1205%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="26.8705%" y="549" width="0.1609%" height="15" fill="rgb(205,213,31)" fg:x="334" fg:w="2"/><text x="27.1205%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="26.8705%" y="533" width="0.1609%" height="15" fill="rgb(237,43,8)" fg:x="334" fg:w="2"/><text x="27.1205%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="26.8705%" y="517" width="0.1609%" height="15" fill="rgb(216,208,3)" fg:x="334" fg:w="2"/><text x="27.1205%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="26.8705%" y="501" width="0.1609%" height="15" fill="rgb(228,179,44)" fg:x="334" fg:w="2"/><text x="27.1205%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="26.8705%" y="485" width="0.1609%" height="15" fill="rgb(230,192,27)" fg:x="334" fg:w="2"/><text x="27.1205%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="26.8705%" y="469" width="0.1609%" height="15" fill="rgb(251,30,38)" fg:x="334" fg:w="2"/><text x="27.1205%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="26.8705%" y="453" width="0.1609%" height="15" fill="rgb(246,55,52)" fg:x="334" fg:w="2"/><text x="27.1205%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="26.8705%" y="437" width="0.1609%" height="15" fill="rgb(249,79,26)" fg:x="334" fg:w="2"/><text x="27.1205%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="26.8705%" y="421" width="0.1609%" height="15" fill="rgb(220,202,16)" fg:x="334" fg:w="2"/><text x="27.1205%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.0314%" y="661" width="0.0805%" height="15" fill="rgb(250,170,23)" fg:x="336" fg:w="1"/><text x="27.2814%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.0314%" y="645" width="0.0805%" height="15" fill="rgb(230,7,37)" fg:x="336" fg:w="1"/><text x="27.2814%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.0314%" y="629" width="0.0805%" height="15" fill="rgb(213,71,1)" fg:x="336" fg:w="1"/><text x="27.2814%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.0314%" y="613" width="0.0805%" height="15" fill="rgb(227,87,39)" fg:x="336" fg:w="1"/><text x="27.2814%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.0314%" y="597" width="0.0805%" height="15" fill="rgb(210,41,29)" fg:x="336" fg:w="1"/><text x="27.2814%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.0314%" y="581" width="0.0805%" height="15" fill="rgb(206,191,31)" fg:x="336" fg:w="1"/><text x="27.2814%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.0314%" y="565" width="0.0805%" height="15" fill="rgb(247,75,54)" fg:x="336" fg:w="1"/><text x="27.2814%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.0314%" y="549" width="0.0805%" height="15" fill="rgb(208,54,50)" fg:x="336" fg:w="1"/><text x="27.2814%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.80%)</title><rect x="26.6291%" y="709" width="0.8045%" height="15" fill="rgb(214,90,37)" fg:x="331" fg:w="10"/><text x="26.8791%" y="719.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="26.7096%" y="693" width="0.7241%" height="15" fill="rgb(220,132,6)" fg:x="332" fg:w="9"/><text x="26.9596%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="26.7096%" y="677" width="0.7241%" height="15" fill="rgb(213,167,7)" fg:x="332" fg:w="9"/><text x="26.9596%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="27.1118%" y="661" width="0.3218%" height="15" fill="rgb(243,36,27)" fg:x="337" fg:w="4"/><text x="27.3618%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="27.1118%" y="645" width="0.3218%" height="15" fill="rgb(235,147,12)" fg:x="337" fg:w="4"/><text x="27.3618%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="27.1118%" y="629" width="0.3218%" height="15" fill="rgb(212,198,44)" fg:x="337" fg:w="4"/><text x="27.3618%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="27.1118%" y="613" width="0.3218%" height="15" fill="rgb(218,68,50)" fg:x="337" fg:w="4"/><text x="27.3618%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="27.1923%" y="597" width="0.2414%" height="15" fill="rgb(224,79,48)" fg:x="338" fg:w="3"/><text x="27.4423%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.1923%" y="581" width="0.2414%" height="15" fill="rgb(213,191,50)" fg:x="338" fg:w="3"/><text x="27.4423%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.1923%" y="565" width="0.2414%" height="15" fill="rgb(254,146,10)" fg:x="338" fg:w="3"/><text x="27.4423%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.1923%" y="549" width="0.2414%" height="15" fill="rgb(215,175,11)" fg:x="338" fg:w="3"/><text x="27.4423%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.3532%" y="533" width="0.0805%" height="15" fill="rgb(207,49,7)" fg:x="340" fg:w="1"/><text x="27.6032%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.4336%" y="661" width="0.1609%" height="15" fill="rgb(234,144,29)" fg:x="341" fg:w="2"/><text x="27.6836%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.4336%" y="645" width="0.1609%" height="15" fill="rgb(213,222,48)" fg:x="341" fg:w="2"/><text x="27.6836%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.5141%" y="629" width="0.0805%" height="15" fill="rgb(222,8,6)" fg:x="342" fg:w="1"/><text x="27.7641%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5141%" y="613" width="0.0805%" height="15" fill="rgb(221,114,49)" fg:x="342" fg:w="1"/><text x="27.7641%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5141%" y="597" width="0.0805%" height="15" fill="rgb(250,140,42)" fg:x="342" fg:w="1"/><text x="27.7641%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.5141%" y="581" width="0.0805%" height="15" fill="rgb(250,150,27)" fg:x="342" fg:w="1"/><text x="27.7641%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.5141%" y="565" width="0.0805%" height="15" fill="rgb(252,159,3)" fg:x="342" fg:w="1"/><text x="27.7641%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.5141%" y="549" width="0.0805%" height="15" fill="rgb(241,182,3)" fg:x="342" fg:w="1"/><text x="27.7641%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.5141%" y="533" width="0.0805%" height="15" fill="rgb(236,3,9)" fg:x="342" fg:w="1"/><text x="27.7641%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.5141%" y="517" width="0.0805%" height="15" fill="rgb(223,227,51)" fg:x="342" fg:w="1"/><text x="27.7641%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.5141%" y="501" width="0.0805%" height="15" fill="rgb(232,133,30)" fg:x="342" fg:w="1"/><text x="27.7641%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.5141%" y="485" width="0.0805%" height="15" fill="rgb(209,93,27)" fg:x="342" fg:w="1"/><text x="27.7641%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.5141%" y="469" width="0.0805%" height="15" fill="rgb(208,108,34)" fg:x="342" fg:w="1"/><text x="27.7641%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.5141%" y="453" width="0.0805%" height="15" fill="rgb(215,189,13)" fg:x="342" fg:w="1"/><text x="27.7641%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.5141%" y="437" width="0.0805%" height="15" fill="rgb(206,88,23)" fg:x="342" fg:w="1"/><text x="27.7641%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.5945%" y="661" width="0.0805%" height="15" fill="rgb(240,173,0)" fg:x="343" fg:w="1"/><text x="27.8445%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.5945%" y="645" width="0.0805%" height="15" fill="rgb(223,106,52)" fg:x="343" fg:w="1"/><text x="27.8445%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.5945%" y="629" width="0.0805%" height="15" fill="rgb(206,130,16)" fg:x="343" fg:w="1"/><text x="27.8445%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.5945%" y="613" width="0.0805%" height="15" fill="rgb(220,54,25)" fg:x="343" fg:w="1"/><text x="27.8445%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.5945%" y="597" width="0.0805%" height="15" fill="rgb(210,4,38)" fg:x="343" fg:w="1"/><text x="27.8445%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.5945%" y="581" width="0.0805%" height="15" fill="rgb(238,94,39)" fg:x="343" fg:w="1"/><text x="27.8445%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.6750%" y="597" width="0.0805%" height="15" fill="rgb(234,124,34)" fg:x="344" fg:w="1"/><text x="27.9250%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.6750%" y="581" width="0.0805%" height="15" fill="rgb(221,91,40)" fg:x="344" fg:w="1"/><text x="27.9250%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.7554%" y="533" width="0.0805%" height="15" fill="rgb(246,53,28)" fg:x="345" fg:w="1"/><text x="28.0054%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (17 samples, 1.37%)</title><rect x="26.5487%" y="741" width="1.3677%" height="15" fill="rgb(229,109,7)" fg:x="330" fg:w="17"/><text x="26.7987%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (16 samples, 1.29%)</title><rect x="26.6291%" y="725" width="1.2872%" height="15" fill="rgb(249,117,8)" fg:x="331" fg:w="16"/><text x="26.8791%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="27.4336%" y="709" width="0.4827%" height="15" fill="rgb(210,181,1)" fg:x="341" fg:w="6"/><text x="27.6836%" y="719.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="27.4336%" y="693" width="0.4827%" height="15" fill="rgb(211,66,1)" fg:x="341" fg:w="6"/><text x="27.6836%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="27.4336%" y="677" width="0.4827%" height="15" fill="rgb(221,90,14)" fg:x="341" fg:w="6"/><text x="27.6836%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.6750%" y="661" width="0.2414%" height="15" fill="rgb(219,222,44)" fg:x="344" fg:w="3"/><text x="27.9250%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.6750%" y="645" width="0.2414%" height="15" fill="rgb(246,34,33)" fg:x="344" fg:w="3"/><text x="27.9250%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.6750%" y="629" width="0.2414%" height="15" fill="rgb(227,135,41)" fg:x="344" fg:w="3"/><text x="27.9250%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.6750%" y="613" width="0.2414%" height="15" fill="rgb(226,15,14)" fg:x="344" fg:w="3"/><text x="27.9250%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="27.7554%" y="597" width="0.1609%" height="15" fill="rgb(236,148,47)" fg:x="345" fg:w="2"/><text x="28.0054%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.7554%" y="581" width="0.1609%" height="15" fill="rgb(233,162,52)" fg:x="345" fg:w="2"/><text x="28.0054%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.7554%" y="565" width="0.1609%" height="15" fill="rgb(244,35,28)" fg:x="345" fg:w="2"/><text x="28.0054%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.7554%" y="549" width="0.1609%" height="15" fill="rgb(205,121,10)" fg:x="345" fg:w="2"/><text x="28.0054%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.8359%" y="533" width="0.0805%" height="15" fill="rgb(250,58,18)" fg:x="346" fg:w="1"/><text x="28.0859%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.8359%" y="517" width="0.0805%" height="15" fill="rgb(216,37,13)" fg:x="346" fg:w="1"/><text x="28.0859%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.8359%" y="501" width="0.0805%" height="15" fill="rgb(221,215,42)" fg:x="346" fg:w="1"/><text x="28.0859%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.8359%" y="485" width="0.0805%" height="15" fill="rgb(217,214,19)" fg:x="346" fg:w="1"/><text x="28.0859%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.9163%" y="693" width="0.0805%" height="15" fill="rgb(233,139,13)" fg:x="347" fg:w="1"/><text x="28.1663%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.9968%" y="693" width="0.0805%" height="15" fill="rgb(247,168,23)" fg:x="348" fg:w="1"/><text x="28.2468%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.9968%" y="677" width="0.0805%" height="15" fill="rgb(207,202,1)" fg:x="348" fg:w="1"/><text x="28.2468%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="27.9968%" y="661" width="0.0805%" height="15" fill="rgb(220,155,48)" fg:x="348" fg:w="1"/><text x="28.2468%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="27.9163%" y="741" width="0.2414%" height="15" fill="rgb(250,43,26)" fg:x="347" fg:w="3"/><text x="28.1663%" y="751.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="27.9163%" y="725" width="0.2414%" height="15" fill="rgb(212,190,23)" fg:x="347" fg:w="3"/><text x="28.1663%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="27.9163%" y="709" width="0.2414%" height="15" fill="rgb(216,39,24)" fg:x="347" fg:w="3"/><text x="28.1663%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="28.0772%" y="693" width="0.0805%" height="15" fill="rgb(252,113,16)" fg:x="349" fg:w="1"/><text x="28.3272%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="28.0772%" y="677" width="0.0805%" height="15" fill="rgb(208,113,19)" fg:x="349" fg:w="1"/><text x="28.3272%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="28.0772%" y="661" width="0.0805%" height="15" fill="rgb(234,107,25)" fg:x="349" fg:w="1"/><text x="28.3272%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.1577%" y="581" width="0.0805%" height="15" fill="rgb(234,217,51)" fg:x="350" fg:w="1"/><text x="28.4077%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.1577%" y="645" width="0.1609%" height="15" fill="rgb(251,29,42)" fg:x="350" fg:w="2"/><text x="28.4077%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.1577%" y="629" width="0.1609%" height="15" fill="rgb(221,62,51)" fg:x="350" fg:w="2"/><text x="28.4077%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.1577%" y="613" width="0.1609%" height="15" fill="rgb(240,192,43)" fg:x="350" fg:w="2"/><text x="28.4077%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.1577%" y="597" width="0.1609%" height="15" fill="rgb(224,157,47)" fg:x="350" fg:w="2"/><text x="28.4077%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.2381%" y="581" width="0.0805%" height="15" fill="rgb(226,84,45)" fg:x="351" fg:w="1"/><text x="28.4881%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.3186%" y="645" width="0.0805%" height="15" fill="rgb(208,207,23)" fg:x="352" fg:w="1"/><text x="28.5686%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.3186%" y="629" width="0.0805%" height="15" fill="rgb(253,34,51)" fg:x="352" fg:w="1"/><text x="28.5686%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.3186%" y="613" width="0.0805%" height="15" fill="rgb(227,26,34)" fg:x="352" fg:w="1"/><text x="28.5686%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.3186%" y="597" width="0.0805%" height="15" fill="rgb(245,75,19)" fg:x="352" fg:w="1"/><text x="28.5686%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="28.3990%" y="549" width="0.0805%" height="15" fill="rgb(250,191,31)" fg:x="353" fg:w="1"/><text x="28.6490%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.3990%" y="533" width="0.0805%" height="15" fill="rgb(224,11,50)" fg:x="353" fg:w="1"/><text x="28.6490%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="28.1577%" y="693" width="0.4023%" height="15" fill="rgb(231,171,7)" fg:x="350" fg:w="5"/><text x="28.4077%" y="703.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="28.1577%" y="677" width="0.4023%" height="15" fill="rgb(252,214,10)" fg:x="350" fg:w="5"/><text x="28.4077%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="28.1577%" y="661" width="0.4023%" height="15" fill="rgb(249,45,46)" fg:x="350" fg:w="5"/><text x="28.4077%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.3990%" y="645" width="0.1609%" height="15" fill="rgb(240,173,7)" fg:x="353" fg:w="2"/><text x="28.6490%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.3990%" y="629" width="0.1609%" height="15" fill="rgb(235,214,13)" fg:x="353" fg:w="2"/><text x="28.6490%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.3990%" y="613" width="0.1609%" height="15" fill="rgb(245,156,8)" fg:x="353" fg:w="2"/><text x="28.6490%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.3990%" y="597" width="0.1609%" height="15" fill="rgb(235,46,12)" fg:x="353" fg:w="2"/><text x="28.6490%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="28.3990%" y="581" width="0.1609%" height="15" fill="rgb(221,81,14)" fg:x="353" fg:w="2"/><text x="28.6490%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.3990%" y="565" width="0.1609%" height="15" fill="rgb(238,207,9)" fg:x="353" fg:w="2"/><text x="28.6490%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.4795%" y="549" width="0.0805%" height="15" fill="rgb(224,129,35)" fg:x="354" fg:w="1"/><text x="28.7295%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="28.5599%" y="645" width="0.2414%" height="15" fill="rgb(243,218,34)" fg:x="355" fg:w="3"/><text x="28.8099%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="28.5599%" y="629" width="0.2414%" height="15" fill="rgb(220,166,13)" fg:x="355" fg:w="3"/><text x="28.8099%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="28.5599%" y="613" width="0.2414%" height="15" fill="rgb(227,167,49)" fg:x="355" fg:w="3"/><text x="28.8099%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.6404%" y="597" width="0.1609%" height="15" fill="rgb(234,142,12)" fg:x="356" fg:w="2"/><text x="28.8904%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="28.6404%" y="581" width="0.1609%" height="15" fill="rgb(207,100,48)" fg:x="356" fg:w="2"/><text x="28.8904%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.7208%" y="565" width="0.0805%" height="15" fill="rgb(210,25,14)" fg:x="357" fg:w="1"/><text x="28.9708%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.7208%" y="549" width="0.0805%" height="15" fill="rgb(246,116,27)" fg:x="357" fg:w="1"/><text x="28.9708%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.7208%" y="533" width="0.0805%" height="15" fill="rgb(214,193,42)" fg:x="357" fg:w="1"/><text x="28.9708%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.7208%" y="517" width="0.0805%" height="15" fill="rgb(214,122,8)" fg:x="357" fg:w="1"/><text x="28.9708%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="28.7208%" y="501" width="0.0805%" height="15" fill="rgb(244,173,18)" fg:x="357" fg:w="1"/><text x="28.9708%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="28.7208%" y="485" width="0.0805%" height="15" fill="rgb(232,68,19)" fg:x="357" fg:w="1"/><text x="28.9708%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.8013%" y="645" width="0.0805%" height="15" fill="rgb(236,224,1)" fg:x="358" fg:w="1"/><text x="29.0513%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.8013%" y="629" width="0.0805%" height="15" fill="rgb(240,11,8)" fg:x="358" fg:w="1"/><text x="29.0513%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.8013%" y="613" width="0.0805%" height="15" fill="rgb(244,159,20)" fg:x="358" fg:w="1"/><text x="29.0513%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.8013%" y="597" width="0.0805%" height="15" fill="rgb(240,223,54)" fg:x="358" fg:w="1"/><text x="29.0513%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.8013%" y="581" width="0.0805%" height="15" fill="rgb(237,146,5)" fg:x="358" fg:w="1"/><text x="29.0513%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="28.1577%" y="741" width="0.8850%" height="15" fill="rgb(218,221,32)" fg:x="350" fg:w="11"/><text x="28.4077%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="28.1577%" y="725" width="0.8850%" height="15" fill="rgb(244,96,26)" fg:x="350" fg:w="11"/><text x="28.4077%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.88%)</title><rect x="28.1577%" y="709" width="0.8850%" height="15" fill="rgb(245,184,37)" fg:x="350" fg:w="11"/><text x="28.4077%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="28.5599%" y="693" width="0.4827%" height="15" fill="rgb(248,91,47)" fg:x="355" fg:w="6"/><text x="28.8099%" y="703.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="28.5599%" y="677" width="0.4827%" height="15" fill="rgb(243,199,8)" fg:x="355" fg:w="6"/><text x="28.8099%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="28.5599%" y="661" width="0.4827%" height="15" fill="rgb(249,12,15)" fg:x="355" fg:w="6"/><text x="28.8099%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.8817%" y="645" width="0.1609%" height="15" fill="rgb(245,97,12)" fg:x="359" fg:w="2"/><text x="29.1317%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.8817%" y="629" width="0.1609%" height="15" fill="rgb(244,61,1)" fg:x="359" fg:w="2"/><text x="29.1317%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.8817%" y="613" width="0.1609%" height="15" fill="rgb(222,194,10)" fg:x="359" fg:w="2"/><text x="29.1317%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.8817%" y="597" width="0.1609%" height="15" fill="rgb(226,178,8)" fg:x="359" fg:w="2"/><text x="29.1317%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="28.8817%" y="581" width="0.1609%" height="15" fill="rgb(241,32,34)" fg:x="359" fg:w="2"/><text x="29.1317%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.8817%" y="565" width="0.1609%" height="15" fill="rgb(254,26,6)" fg:x="359" fg:w="2"/><text x="29.1317%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.8817%" y="549" width="0.1609%" height="15" fill="rgb(249,71,11)" fg:x="359" fg:w="2"/><text x="29.1317%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.8817%" y="533" width="0.1609%" height="15" fill="rgb(232,170,27)" fg:x="359" fg:w="2"/><text x="29.1317%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.9622%" y="517" width="0.0805%" height="15" fill="rgb(214,223,17)" fg:x="360" fg:w="1"/><text x="29.2122%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.9622%" y="501" width="0.0805%" height="15" fill="rgb(250,18,15)" fg:x="360" fg:w="1"/><text x="29.2122%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.0426%" y="709" width="0.0805%" height="15" fill="rgb(212,153,51)" fg:x="361" fg:w="1"/><text x="29.2926%" y="719.50"></text></g><g><title>plugins_core::build::Build::holding (45 samples, 3.62%)</title><rect x="25.6637%" y="773" width="3.6203%" height="15" fill="rgb(219,194,12)" fg:x="319" fg:w="45"/><text x="25.9137%" y="783.50">plug..</text></g><g><title>plugins_core::tools::set_container (35 samples, 2.82%)</title><rect x="26.4682%" y="757" width="2.8158%" height="15" fill="rgb(212,58,17)" fg:x="329" fg:w="35"/><text x="26.7182%" y="767.50">pl..</text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="29.0426%" y="741" width="0.2414%" height="15" fill="rgb(254,5,10)" fg:x="361" fg:w="3"/><text x="29.2926%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="29.0426%" y="725" width="0.2414%" height="15" fill="rgb(246,91,7)" fg:x="361" fg:w="3"/><text x="29.2926%" y="735.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="29.1231%" y="709" width="0.1609%" height="15" fill="rgb(218,108,49)" fg:x="362" fg:w="2"/><text x="29.3731%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.1231%" y="693" width="0.1609%" height="15" fill="rgb(238,123,20)" fg:x="362" fg:w="2"/><text x="29.3731%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="29.1231%" y="677" width="0.1609%" height="15" fill="rgb(231,69,23)" fg:x="362" fg:w="2"/><text x="29.3731%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.1231%" y="661" width="0.1609%" height="15" fill="rgb(230,209,3)" fg:x="362" fg:w="2"/><text x="29.3731%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="29.1231%" y="645" width="0.1609%" height="15" fill="rgb(231,19,0)" fg:x="362" fg:w="2"/><text x="29.3731%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="29.2840%" y="741" width="0.0805%" height="15" fill="rgb(226,192,25)" fg:x="364" fg:w="1"/><text x="29.5340%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="29.2840%" y="725" width="0.0805%" height="15" fill="rgb(223,175,53)" fg:x="364" fg:w="1"/><text x="29.5340%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="29.2840%" y="709" width="0.0805%" height="15" fill="rgb(248,35,51)" fg:x="364" fg:w="1"/><text x="29.5340%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.2840%" y="693" width="0.0805%" height="15" fill="rgb(230,37,26)" fg:x="364" fg:w="1"/><text x="29.5340%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.2840%" y="677" width="0.0805%" height="15" fill="rgb(206,120,22)" fg:x="364" fg:w="1"/><text x="29.5340%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="29.2840%" y="661" width="0.0805%" height="15" fill="rgb(207,165,28)" fg:x="364" fg:w="1"/><text x="29.5340%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="29.2840%" y="645" width="0.0805%" height="15" fill="rgb(226,23,46)" fg:x="364" fg:w="1"/><text x="29.5340%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="29.2840%" y="629" width="0.0805%" height="15" fill="rgb(208,130,44)" fg:x="364" fg:w="1"/><text x="29.5340%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.2840%" y="613" width="0.0805%" height="15" fill="rgb(231,67,8)" fg:x="364" fg:w="1"/><text x="29.5340%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="29.2840%" y="597" width="0.0805%" height="15" fill="rgb(205,183,22)" fg:x="364" fg:w="1"/><text x="29.5340%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="29.2840%" y="581" width="0.0805%" height="15" fill="rgb(224,47,9)" fg:x="364" fg:w="1"/><text x="29.5340%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="29.2840%" y="565" width="0.0805%" height="15" fill="rgb(250,183,49)" fg:x="364" fg:w="1"/><text x="29.5340%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.2840%" y="549" width="0.0805%" height="15" fill="rgb(220,151,39)" fg:x="364" fg:w="1"/><text x="29.5340%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.2840%" y="533" width="0.0805%" height="15" fill="rgb(220,118,20)" fg:x="364" fg:w="1"/><text x="29.5340%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.2840%" y="517" width="0.0805%" height="15" fill="rgb(231,65,51)" fg:x="364" fg:w="1"/><text x="29.5340%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="29.2840%" y="501" width="0.0805%" height="15" fill="rgb(253,125,37)" fg:x="364" fg:w="1"/><text x="29.5340%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="29.2840%" y="485" width="0.0805%" height="15" fill="rgb(232,102,6)" fg:x="364" fg:w="1"/><text x="29.5340%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="29.2840%" y="469" width="0.0805%" height="15" fill="rgb(251,105,13)" fg:x="364" fg:w="1"/><text x="29.5340%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="29.2840%" y="453" width="0.0805%" height="15" fill="rgb(222,179,29)" fg:x="364" fg:w="1"/><text x="29.5340%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="29.2840%" y="437" width="0.0805%" height="15" fill="rgb(229,180,53)" fg:x="364" fg:w="1"/><text x="29.5340%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="29.2840%" y="421" width="0.0805%" height="15" fill="rgb(238,104,13)" fg:x="364" fg:w="1"/><text x="29.5340%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.2840%" y="405" width="0.0805%" height="15" fill="rgb(210,130,5)" fg:x="364" fg:w="1"/><text x="29.5340%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="29.2840%" y="389" width="0.0805%" height="15" fill="rgb(233,87,49)" fg:x="364" fg:w="1"/><text x="29.5340%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.2840%" y="373" width="0.0805%" height="15" fill="rgb(243,34,9)" fg:x="364" fg:w="1"/><text x="29.5340%" y="383.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="29.2840%" y="357" width="0.0805%" height="15" fill="rgb(235,225,10)" fg:x="364" fg:w="1"/><text x="29.5340%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.2840%" y="341" width="0.0805%" height="15" fill="rgb(212,0,30)" fg:x="364" fg:w="1"/><text x="29.5340%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.3644%" y="613" width="0.0805%" height="15" fill="rgb(211,177,0)" fg:x="365" fg:w="1"/><text x="29.6144%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.3644%" y="597" width="0.0805%" height="15" fill="rgb(225,220,11)" fg:x="365" fg:w="1"/><text x="29.6144%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.3644%" y="581" width="0.0805%" height="15" fill="rgb(215,10,13)" fg:x="365" fg:w="1"/><text x="29.6144%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.3644%" y="565" width="0.0805%" height="15" fill="rgb(240,177,14)" fg:x="365" fg:w="1"/><text x="29.6144%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.3644%" y="549" width="0.0805%" height="15" fill="rgb(243,7,39)" fg:x="365" fg:w="1"/><text x="29.6144%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="29.3644%" y="533" width="0.0805%" height="15" fill="rgb(212,99,0)" fg:x="365" fg:w="1"/><text x="29.6144%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="29.3644%" y="517" width="0.0805%" height="15" fill="rgb(225,162,48)" fg:x="365" fg:w="1"/><text x="29.6144%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.3644%" y="629" width="0.1609%" height="15" fill="rgb(246,16,25)" fg:x="365" fg:w="2"/><text x="29.6144%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.4449%" y="613" width="0.0805%" height="15" fill="rgb(220,150,2)" fg:x="366" fg:w="1"/><text x="29.6949%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="29.3644%" y="645" width="0.2414%" height="15" fill="rgb(237,113,11)" fg:x="365" fg:w="3"/><text x="29.6144%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.5253%" y="629" width="0.0805%" height="15" fill="rgb(236,70,20)" fg:x="367" fg:w="1"/><text x="29.7753%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="29.3644%" y="693" width="0.3218%" height="15" fill="rgb(234,94,7)" fg:x="365" fg:w="4"/><text x="29.6144%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="29.3644%" y="677" width="0.3218%" height="15" fill="rgb(250,221,0)" fg:x="365" fg:w="4"/><text x="29.6144%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="29.3644%" y="661" width="0.3218%" height="15" fill="rgb(245,149,46)" fg:x="365" fg:w="4"/><text x="29.6144%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6058%" y="645" width="0.0805%" height="15" fill="rgb(215,37,27)" fg:x="368" fg:w="1"/><text x="29.8558%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6058%" y="629" width="0.0805%" height="15" fill="rgb(232,65,3)" fg:x="368" fg:w="1"/><text x="29.8558%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.6058%" y="613" width="0.0805%" height="15" fill="rgb(214,2,16)" fg:x="368" fg:w="1"/><text x="29.8558%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.6058%" y="597" width="0.0805%" height="15" fill="rgb(227,131,50)" fg:x="368" fg:w="1"/><text x="29.8558%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.6058%" y="581" width="0.0805%" height="15" fill="rgb(247,131,45)" fg:x="368" fg:w="1"/><text x="29.8558%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="29.6058%" y="565" width="0.0805%" height="15" fill="rgb(215,97,47)" fg:x="368" fg:w="1"/><text x="29.8558%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="29.6058%" y="549" width="0.0805%" height="15" fill="rgb(233,143,12)" fg:x="368" fg:w="1"/><text x="29.8558%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="29.2840%" y="773" width="0.4827%" height="15" fill="rgb(222,57,17)" fg:x="364" fg:w="6"/><text x="29.5340%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="29.2840%" y="757" width="0.4827%" height="15" fill="rgb(214,119,38)" fg:x="364" fg:w="6"/><text x="29.5340%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="29.3644%" y="741" width="0.4023%" height="15" fill="rgb(217,28,47)" fg:x="365" fg:w="5"/><text x="29.6144%" y="751.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="29.3644%" y="725" width="0.4023%" height="15" fill="rgb(231,14,52)" fg:x="365" fg:w="5"/><text x="29.6144%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="29.3644%" y="709" width="0.4023%" height="15" fill="rgb(220,158,18)" fg:x="365" fg:w="5"/><text x="29.6144%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.6862%" y="693" width="0.0805%" height="15" fill="rgb(222,143,46)" fg:x="369" fg:w="1"/><text x="29.9362%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6862%" y="677" width="0.0805%" height="15" fill="rgb(227,165,5)" fg:x="369" fg:w="1"/><text x="29.9362%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.6862%" y="661" width="0.0805%" height="15" fill="rgb(216,222,49)" fg:x="369" fg:w="1"/><text x="29.9362%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6862%" y="645" width="0.0805%" height="15" fill="rgb(238,73,39)" fg:x="369" fg:w="1"/><text x="29.9362%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.6862%" y="629" width="0.0805%" height="15" fill="rgb(252,115,9)" fg:x="369" fg:w="1"/><text x="29.9362%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6862%" y="613" width="0.0805%" height="15" fill="rgb(238,202,4)" fg:x="369" fg:w="1"/><text x="29.9362%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.6862%" y="597" width="0.0805%" height="15" fill="rgb(252,153,44)" fg:x="369" fg:w="1"/><text x="29.9362%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6862%" y="581" width="0.0805%" height="15" fill="rgb(235,128,27)" fg:x="369" fg:w="1"/><text x="29.9362%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.6862%" y="565" width="0.0805%" height="15" fill="rgb(221,121,47)" fg:x="369" fg:w="1"/><text x="29.9362%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6862%" y="549" width="0.0805%" height="15" fill="rgb(247,211,47)" fg:x="369" fg:w="1"/><text x="29.9362%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="29.6862%" y="533" width="0.0805%" height="15" fill="rgb(252,47,49)" fg:x="369" fg:w="1"/><text x="29.9362%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="29.6862%" y="517" width="0.0805%" height="15" fill="rgb(219,119,53)" fg:x="369" fg:w="1"/><text x="29.9362%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="29.7667%" y="709" width="0.1609%" height="15" fill="rgb(243,165,53)" fg:x="370" fg:w="2"/><text x="30.0167%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.8471%" y="693" width="0.0805%" height="15" fill="rgb(230,12,35)" fg:x="371" fg:w="1"/><text x="30.0971%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.8471%" y="677" width="0.0805%" height="15" fill="rgb(239,57,49)" fg:x="371" fg:w="1"/><text x="30.0971%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.8471%" y="661" width="0.0805%" height="15" fill="rgb(231,154,7)" fg:x="371" fg:w="1"/><text x="30.0971%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.9276%" y="709" width="0.0805%" height="15" fill="rgb(248,81,34)" fg:x="372" fg:w="1"/><text x="30.1776%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.9276%" y="693" width="0.0805%" height="15" fill="rgb(247,9,5)" fg:x="372" fg:w="1"/><text x="30.1776%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="29.7667%" y="773" width="0.4023%" height="15" fill="rgb(228,172,27)" fg:x="370" fg:w="5"/><text x="30.0167%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.40%)</title><rect x="29.7667%" y="757" width="0.4023%" height="15" fill="rgb(230,57,44)" fg:x="370" fg:w="5"/><text x="30.0167%" y="767.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="29.7667%" y="741" width="0.4023%" height="15" fill="rgb(249,35,22)" fg:x="370" fg:w="5"/><text x="30.0167%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="29.7667%" y="725" width="0.4023%" height="15" fill="rgb(250,137,27)" fg:x="370" fg:w="5"/><text x="30.0167%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="30.0080%" y="709" width="0.1609%" height="15" fill="rgb(251,57,31)" fg:x="373" fg:w="2"/><text x="30.2580%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.0080%" y="693" width="0.1609%" height="15" fill="rgb(238,60,0)" fg:x="373" fg:w="2"/><text x="30.2580%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="30.0885%" y="677" width="0.0805%" height="15" fill="rgb(242,185,39)" fg:x="374" fg:w="1"/><text x="30.3385%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.0885%" y="661" width="0.0805%" height="15" fill="rgb(240,63,43)" fg:x="374" fg:w="1"/><text x="30.3385%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0885%" y="645" width="0.0805%" height="15" fill="rgb(236,155,6)" fg:x="374" fg:w="1"/><text x="30.3385%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="30.1689%" y="741" width="0.0805%" height="15" fill="rgb(215,11,29)" fg:x="375" fg:w="1"/><text x="30.4189%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="30.1689%" y="725" width="0.0805%" height="15" fill="rgb(228,180,48)" fg:x="375" fg:w="1"/><text x="30.4189%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.1689%" y="709" width="0.0805%" height="15" fill="rgb(241,102,12)" fg:x="375" fg:w="1"/><text x="30.4189%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.1689%" y="693" width="0.0805%" height="15" fill="rgb(246,213,4)" fg:x="375" fg:w="1"/><text x="30.4189%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.1689%" y="677" width="0.0805%" height="15" fill="rgb(218,134,35)" fg:x="375" fg:w="1"/><text x="30.4189%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.1689%" y="661" width="0.0805%" height="15" fill="rgb(251,117,35)" fg:x="375" fg:w="1"/><text x="30.4189%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.1689%" y="645" width="0.0805%" height="15" fill="rgb(206,156,45)" fg:x="375" fg:w="1"/><text x="30.4189%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.1689%" y="629" width="0.0805%" height="15" fill="rgb(218,52,27)" fg:x="375" fg:w="1"/><text x="30.4189%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.1689%" y="613" width="0.0805%" height="15" fill="rgb(238,83,36)" fg:x="375" fg:w="1"/><text x="30.4189%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.1689%" y="597" width="0.0805%" height="15" fill="rgb(218,53,43)" fg:x="375" fg:w="1"/><text x="30.4189%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.1689%" y="581" width="0.0805%" height="15" fill="rgb(239,54,39)" fg:x="375" fg:w="1"/><text x="30.4189%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.1689%" y="565" width="0.0805%" height="15" fill="rgb(212,198,13)" fg:x="375" fg:w="1"/><text x="30.4189%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.1689%" y="549" width="0.0805%" height="15" fill="rgb(234,54,46)" fg:x="375" fg:w="1"/><text x="30.4189%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.1689%" y="533" width="0.0805%" height="15" fill="rgb(217,120,7)" fg:x="375" fg:w="1"/><text x="30.4189%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="30.1689%" y="517" width="0.0805%" height="15" fill="rgb(246,39,15)" fg:x="375" fg:w="1"/><text x="30.4189%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.1689%" y="501" width="0.0805%" height="15" fill="rgb(242,143,31)" fg:x="375" fg:w="1"/><text x="30.4189%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.1689%" y="485" width="0.0805%" height="15" fill="rgb(252,60,24)" fg:x="375" fg:w="1"/><text x="30.4189%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.1689%" y="469" width="0.0805%" height="15" fill="rgb(249,220,7)" fg:x="375" fg:w="1"/><text x="30.4189%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.1689%" y="453" width="0.0805%" height="15" fill="rgb(236,67,13)" fg:x="375" fg:w="1"/><text x="30.4189%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.1689%" y="437" width="0.0805%" height="15" fill="rgb(210,62,39)" fg:x="375" fg:w="1"/><text x="30.4189%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="30.1689%" y="421" width="0.0805%" height="15" fill="rgb(219,122,53)" fg:x="375" fg:w="1"/><text x="30.4189%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="30.1689%" y="405" width="0.0805%" height="15" fill="rgb(218,87,25)" fg:x="375" fg:w="1"/><text x="30.4189%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="30.1689%" y="389" width="0.0805%" height="15" fill="rgb(234,179,48)" fg:x="375" fg:w="1"/><text x="30.4189%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="30.1689%" y="373" width="0.0805%" height="15" fill="rgb(248,90,0)" fg:x="375" fg:w="1"/><text x="30.4189%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="30.1689%" y="357" width="0.0805%" height="15" fill="rgb(207,228,37)" fg:x="375" fg:w="1"/><text x="30.4189%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.2494%" y="741" width="0.1609%" height="15" fill="rgb(235,214,15)" fg:x="376" fg:w="2"/><text x="30.4994%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="30.2494%" y="725" width="0.1609%" height="15" fill="rgb(210,144,39)" fg:x="376" fg:w="2"/><text x="30.4994%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.2494%" y="709" width="0.1609%" height="15" fill="rgb(222,67,41)" fg:x="376" fg:w="2"/><text x="30.4994%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.2494%" y="693" width="0.1609%" height="15" fill="rgb(205,35,37)" fg:x="376" fg:w="2"/><text x="30.4994%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.3298%" y="677" width="0.0805%" height="15" fill="rgb(216,125,40)" fg:x="377" fg:w="1"/><text x="30.5798%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.3298%" y="661" width="0.0805%" height="15" fill="rgb(228,227,20)" fg:x="377" fg:w="1"/><text x="30.5798%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.3298%" y="645" width="0.0805%" height="15" fill="rgb(242,173,45)" fg:x="377" fg:w="1"/><text x="30.5798%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.3298%" y="629" width="0.0805%" height="15" fill="rgb(215,79,24)" fg:x="377" fg:w="1"/><text x="30.5798%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.3298%" y="613" width="0.0805%" height="15" fill="rgb(238,164,38)" fg:x="377" fg:w="1"/><text x="30.5798%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.3298%" y="597" width="0.0805%" height="15" fill="rgb(245,196,38)" fg:x="377" fg:w="1"/><text x="30.5798%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.3298%" y="581" width="0.0805%" height="15" fill="rgb(231,217,29)" fg:x="377" fg:w="1"/><text x="30.5798%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.3298%" y="565" width="0.0805%" height="15" fill="rgb(245,6,4)" fg:x="377" fg:w="1"/><text x="30.5798%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.3298%" y="549" width="0.0805%" height="15" fill="rgb(214,76,49)" fg:x="377" fg:w="1"/><text x="30.5798%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.3298%" y="533" width="0.0805%" height="15" fill="rgb(205,96,12)" fg:x="377" fg:w="1"/><text x="30.5798%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.3298%" y="517" width="0.0805%" height="15" fill="rgb(243,131,4)" fg:x="377" fg:w="1"/><text x="30.5798%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.3298%" y="501" width="0.0805%" height="15" fill="rgb(214,114,4)" fg:x="377" fg:w="1"/><text x="30.5798%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="30.3298%" y="485" width="0.0805%" height="15" fill="rgb(234,215,15)" fg:x="377" fg:w="1"/><text x="30.5798%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="30.4103%" y="741" width="0.0805%" height="15" fill="rgb(250,216,45)" fg:x="378" fg:w="1"/><text x="30.6603%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.4103%" y="725" width="0.0805%" height="15" fill="rgb(236,128,4)" fg:x="378" fg:w="1"/><text x="30.6603%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="30.4103%" y="709" width="0.0805%" height="15" fill="rgb(234,50,33)" fg:x="378" fg:w="1"/><text x="30.6603%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="30.5712%" y="693" width="0.1609%" height="15" fill="rgb(253,131,37)" fg:x="380" fg:w="2"/><text x="30.8212%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.5712%" y="677" width="0.1609%" height="15" fill="rgb(218,55,27)" fg:x="380" fg:w="2"/><text x="30.8212%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.6516%" y="661" width="0.0805%" height="15" fill="rgb(241,220,28)" fg:x="381" fg:w="1"/><text x="30.9016%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.6516%" y="645" width="0.0805%" height="15" fill="rgb(241,90,48)" fg:x="381" fg:w="1"/><text x="30.9016%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.6516%" y="629" width="0.0805%" height="15" fill="rgb(216,43,37)" fg:x="381" fg:w="1"/><text x="30.9016%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.6516%" y="613" width="0.0805%" height="15" fill="rgb(207,173,9)" fg:x="381" fg:w="1"/><text x="30.9016%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="30.1689%" y="757" width="0.7241%" height="15" fill="rgb(240,126,30)" fg:x="375" fg:w="9"/><text x="30.4189%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="30.4907%" y="741" width="0.4023%" height="15" fill="rgb(228,178,53)" fg:x="379" fg:w="5"/><text x="30.7407%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="30.4907%" y="725" width="0.4023%" height="15" fill="rgb(217,33,4)" fg:x="379" fg:w="5"/><text x="30.7407%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="30.4907%" y="709" width="0.4023%" height="15" fill="rgb(206,124,34)" fg:x="379" fg:w="5"/><text x="30.7407%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="30.7321%" y="693" width="0.1609%" height="15" fill="rgb(208,122,53)" fg:x="382" fg:w="2"/><text x="30.9821%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="30.7321%" y="677" width="0.1609%" height="15" fill="rgb(215,202,26)" fg:x="382" fg:w="2"/><text x="30.9821%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.7321%" y="661" width="0.1609%" height="15" fill="rgb(232,198,31)" fg:x="382" fg:w="2"/><text x="30.9821%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.7321%" y="645" width="0.1609%" height="15" fill="rgb(222,23,35)" fg:x="382" fg:w="2"/><text x="30.9821%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.7321%" y="629" width="0.1609%" height="15" fill="rgb(242,27,53)" fg:x="382" fg:w="2"/><text x="30.9821%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.7321%" y="613" width="0.1609%" height="15" fill="rgb(210,216,42)" fg:x="382" fg:w="2"/><text x="30.9821%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.7321%" y="597" width="0.1609%" height="15" fill="rgb(234,39,38)" fg:x="382" fg:w="2"/><text x="30.9821%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8126%" y="581" width="0.0805%" height="15" fill="rgb(235,126,54)" fg:x="383" fg:w="1"/><text x="31.0626%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8126%" y="565" width="0.0805%" height="15" fill="rgb(235,150,33)" fg:x="383" fg:w="1"/><text x="31.0626%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.8126%" y="549" width="0.0805%" height="15" fill="rgb(249,49,53)" fg:x="383" fg:w="1"/><text x="31.0626%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.8126%" y="533" width="0.0805%" height="15" fill="rgb(238,60,50)" fg:x="383" fg:w="1"/><text x="31.0626%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.8126%" y="517" width="0.0805%" height="15" fill="rgb(210,5,2)" fg:x="383" fg:w="1"/><text x="31.0626%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.8126%" y="501" width="0.0805%" height="15" fill="rgb(214,207,24)" fg:x="383" fg:w="1"/><text x="31.0626%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.8126%" y="485" width="0.0805%" height="15" fill="rgb(228,173,2)" fg:x="383" fg:w="1"/><text x="31.0626%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.8126%" y="469" width="0.0805%" height="15" fill="rgb(244,26,8)" fg:x="383" fg:w="1"/><text x="31.0626%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.8126%" y="453" width="0.0805%" height="15" fill="rgb(249,153,35)" fg:x="383" fg:w="1"/><text x="31.0626%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.8126%" y="437" width="0.0805%" height="15" fill="rgb(221,215,40)" fg:x="383" fg:w="1"/><text x="31.0626%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.8126%" y="421" width="0.0805%" height="15" fill="rgb(238,106,35)" fg:x="383" fg:w="1"/><text x="31.0626%" y="431.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="30.8126%" y="405" width="0.0805%" height="15" fill="rgb(207,195,21)" fg:x="383" fg:w="1"/><text x="31.0626%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.8126%" y="389" width="0.0805%" height="15" fill="rgb(205,43,29)" fg:x="383" fg:w="1"/><text x="31.0626%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="30.8930%" y="741" width="0.0805%" height="15" fill="rgb(236,35,21)" fg:x="384" fg:w="1"/><text x="31.1430%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="30.8930%" y="725" width="0.0805%" height="15" fill="rgb(244,74,8)" fg:x="384" fg:w="1"/><text x="31.1430%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.8930%" y="709" width="0.0805%" height="15" fill="rgb(241,229,7)" fg:x="384" fg:w="1"/><text x="31.1430%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="30.9735%" y="741" width="0.0805%" height="15" fill="rgb(212,223,25)" fg:x="385" fg:w="1"/><text x="31.2235%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="30.9735%" y="725" width="0.0805%" height="15" fill="rgb(234,58,53)" fg:x="385" fg:w="1"/><text x="31.2235%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.9735%" y="709" width="0.0805%" height="15" fill="rgb(244,36,1)" fg:x="385" fg:w="1"/><text x="31.2235%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.0539%" y="693" width="0.0805%" height="15" fill="rgb(222,40,54)" fg:x="386" fg:w="1"/><text x="31.3039%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.1344%" y="661" width="0.0805%" height="15" fill="rgb(210,207,39)" fg:x="387" fg:w="1"/><text x="31.3844%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2148%" y="661" width="0.0805%" height="15" fill="rgb(234,52,14)" fg:x="388" fg:w="1"/><text x="31.4648%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="31.0539%" y="709" width="0.3218%" height="15" fill="rgb(239,108,46)" fg:x="386" fg:w="4"/><text x="31.3039%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="31.1344%" y="693" width="0.2414%" height="15" fill="rgb(252,223,5)" fg:x="387" fg:w="3"/><text x="31.3844%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.1344%" y="677" width="0.2414%" height="15" fill="rgb(227,181,11)" fg:x="387" fg:w="3"/><text x="31.3844%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.2953%" y="661" width="0.0805%" height="15" fill="rgb(248,126,40)" fg:x="389" fg:w="1"/><text x="31.5453%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.2953%" y="645" width="0.0805%" height="15" fill="rgb(243,1,18)" fg:x="389" fg:w="1"/><text x="31.5453%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.2953%" y="629" width="0.0805%" height="15" fill="rgb(214,145,23)" fg:x="389" fg:w="1"/><text x="31.5453%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.2953%" y="613" width="0.0805%" height="15" fill="rgb(241,218,11)" fg:x="389" fg:w="1"/><text x="31.5453%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.2953%" y="597" width="0.0805%" height="15" fill="rgb(214,219,24)" fg:x="389" fg:w="1"/><text x="31.5453%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.2953%" y="581" width="0.0805%" height="15" fill="rgb(235,32,7)" fg:x="389" fg:w="1"/><text x="31.5453%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.2953%" y="565" width="0.0805%" height="15" fill="rgb(227,121,28)" fg:x="389" fg:w="1"/><text x="31.5453%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.2953%" y="549" width="0.0805%" height="15" fill="rgb(216,129,49)" fg:x="389" fg:w="1"/><text x="31.5453%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="31.0539%" y="741" width="0.4827%" height="15" fill="rgb(207,194,50)" fg:x="386" fg:w="6"/><text x="31.3039%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="31.0539%" y="725" width="0.4827%" height="15" fill="rgb(207,4,18)" fg:x="386" fg:w="6"/><text x="31.3039%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="31.3757%" y="709" width="0.1609%" height="15" fill="rgb(213,50,30)" fg:x="390" fg:w="2"/><text x="31.6257%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="31.3757%" y="693" width="0.1609%" height="15" fill="rgb(208,77,22)" fg:x="390" fg:w="2"/><text x="31.6257%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="31.3757%" y="677" width="0.1609%" height="15" fill="rgb(244,204,34)" fg:x="390" fg:w="2"/><text x="31.6257%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.4562%" y="661" width="0.0805%" height="15" fill="rgb(230,20,17)" fg:x="391" fg:w="1"/><text x="31.7062%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.4562%" y="645" width="0.0805%" height="15" fill="rgb(237,83,15)" fg:x="391" fg:w="1"/><text x="31.7062%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.4562%" y="629" width="0.0805%" height="15" fill="rgb(221,109,25)" fg:x="391" fg:w="1"/><text x="31.7062%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.4562%" y="613" width="0.0805%" height="15" fill="rgb(205,194,52)" fg:x="391" fg:w="1"/><text x="31.7062%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="31.4562%" y="597" width="0.0805%" height="15" fill="rgb(244,173,54)" fg:x="391" fg:w="1"/><text x="31.7062%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.4562%" y="581" width="0.0805%" height="15" fill="rgb(227,181,18)" fg:x="391" fg:w="1"/><text x="31.7062%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.5366%" y="693" width="0.0805%" height="15" fill="rgb(238,36,30)" fg:x="392" fg:w="1"/><text x="31.7866%" y="703.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="31.5366%" y="725" width="0.1609%" height="15" fill="rgb(254,85,0)" fg:x="392" fg:w="2"/><text x="31.7866%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.5366%" y="709" width="0.1609%" height="15" fill="rgb(247,63,33)" fg:x="392" fg:w="2"/><text x="31.7866%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="31.6171%" y="693" width="0.0805%" height="15" fill="rgb(220,7,54)" fg:x="393" fg:w="1"/><text x="31.8671%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6171%" y="677" width="0.0805%" height="15" fill="rgb(238,227,21)" fg:x="393" fg:w="1"/><text x="31.8671%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.6171%" y="661" width="0.0805%" height="15" fill="rgb(237,29,31)" fg:x="393" fg:w="1"/><text x="31.8671%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6171%" y="645" width="0.0805%" height="15" fill="rgb(211,21,50)" fg:x="393" fg:w="1"/><text x="31.8671%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="31.5366%" y="741" width="0.2414%" height="15" fill="rgb(239,119,2)" fg:x="392" fg:w="3"/><text x="31.7866%" y="751.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6975%" y="725" width="0.0805%" height="15" fill="rgb(250,2,39)" fg:x="394" fg:w="1"/><text x="31.9475%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.6975%" y="709" width="0.0805%" height="15" fill="rgb(244,46,53)" fg:x="394" fg:w="1"/><text x="31.9475%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="31.7780%" y="725" width="0.0805%" height="15" fill="rgb(209,21,19)" fg:x="395" fg:w="1"/><text x="32.0280%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.8584%" y="629" width="0.0805%" height="15" fill="rgb(236,145,4)" fg:x="396" fg:w="1"/><text x="32.1084%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.8584%" y="613" width="0.0805%" height="15" fill="rgb(220,133,36)" fg:x="396" fg:w="1"/><text x="32.1084%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.8584%" y="597" width="0.0805%" height="15" fill="rgb(244,18,3)" fg:x="396" fg:w="1"/><text x="32.1084%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.8584%" y="645" width="0.1609%" height="15" fill="rgb(232,171,48)" fg:x="396" fg:w="2"/><text x="32.1084%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.9389%" y="629" width="0.0805%" height="15" fill="rgb(223,223,53)" fg:x="397" fg:w="1"/><text x="32.1889%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="31.8584%" y="693" width="0.3218%" height="15" fill="rgb(246,92,13)" fg:x="396" fg:w="4"/><text x="32.1084%" y="703.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="31.8584%" y="677" width="0.3218%" height="15" fill="rgb(229,171,10)" fg:x="396" fg:w="4"/><text x="32.1084%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="31.8584%" y="661" width="0.3218%" height="15" fill="rgb(213,131,26)" fg:x="396" fg:w="4"/><text x="32.1084%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.0193%" y="645" width="0.1609%" height="15" fill="rgb(242,87,54)" fg:x="398" fg:w="2"/><text x="32.2693%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.0193%" y="629" width="0.1609%" height="15" fill="rgb(237,21,35)" fg:x="398" fg:w="2"/><text x="32.2693%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.0998%" y="613" width="0.0805%" height="15" fill="rgb(253,13,47)" fg:x="399" fg:w="1"/><text x="32.3498%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.0998%" y="597" width="0.0805%" height="15" fill="rgb(215,122,49)" fg:x="399" fg:w="1"/><text x="32.3498%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.0998%" y="581" width="0.0805%" height="15" fill="rgb(209,179,30)" fg:x="399" fg:w="1"/><text x="32.3498%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.0998%" y="565" width="0.0805%" height="15" fill="rgb(235,100,24)" fg:x="399" fg:w="1"/><text x="32.3498%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.0998%" y="549" width="0.0805%" height="15" fill="rgb(209,67,24)" fg:x="399" fg:w="1"/><text x="32.3498%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.0998%" y="533" width="0.0805%" height="15" fill="rgb(206,74,32)" fg:x="399" fg:w="1"/><text x="32.3498%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="32.0998%" y="517" width="0.0805%" height="15" fill="rgb(212,45,25)" fg:x="399" fg:w="1"/><text x="32.3498%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="32.1802%" y="677" width="0.0805%" height="15" fill="rgb(239,26,3)" fg:x="400" fg:w="1"/><text x="32.4302%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.2607%" y="597" width="0.1609%" height="15" fill="rgb(218,36,15)" fg:x="401" fg:w="2"/><text x="32.5107%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.2607%" y="581" width="0.1609%" height="15" fill="rgb(206,108,24)" fg:x="401" fg:w="2"/><text x="32.5107%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.2607%" y="565" width="0.1609%" height="15" fill="rgb(234,204,42)" fg:x="401" fg:w="2"/><text x="32.5107%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="32.2607%" y="549" width="0.1609%" height="15" fill="rgb(229,2,11)" fg:x="401" fg:w="2"/><text x="32.5107%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="32.2607%" y="533" width="0.1609%" height="15" fill="rgb(221,20,48)" fg:x="401" fg:w="2"/><text x="32.5107%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="32.2607%" y="517" width="0.1609%" height="15" fill="rgb(244,164,10)" fg:x="401" fg:w="2"/><text x="32.5107%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="32.2607%" y="501" width="0.1609%" height="15" fill="rgb(243,229,2)" fg:x="401" fg:w="2"/><text x="32.5107%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="32.2607%" y="485" width="0.1609%" height="15" fill="rgb(232,131,37)" fg:x="401" fg:w="2"/><text x="32.5107%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="32.2607%" y="469" width="0.1609%" height="15" fill="rgb(217,156,11)" fg:x="401" fg:w="2"/><text x="32.5107%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="32.2607%" y="453" width="0.1609%" height="15" fill="rgb(239,99,48)" fg:x="401" fg:w="2"/><text x="32.5107%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="32.2607%" y="437" width="0.1609%" height="15" fill="rgb(231,209,9)" fg:x="401" fg:w="2"/><text x="32.5107%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="32.2607%" y="421" width="0.1609%" height="15" fill="rgb(254,97,27)" fg:x="401" fg:w="2"/><text x="32.5107%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.2607%" y="405" width="0.1609%" height="15" fill="rgb(223,151,38)" fg:x="401" fg:w="2"/><text x="32.5107%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.2607%" y="645" width="0.2414%" height="15" fill="rgb(219,206,35)" fg:x="401" fg:w="3"/><text x="32.5107%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.2607%" y="629" width="0.2414%" height="15" fill="rgb(216,130,31)" fg:x="401" fg:w="3"/><text x="32.5107%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.2607%" y="613" width="0.2414%" height="15" fill="rgb(251,97,34)" fg:x="401" fg:w="3"/><text x="32.5107%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.4216%" y="597" width="0.0805%" height="15" fill="rgb(246,159,47)" fg:x="403" fg:w="1"/><text x="32.6716%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.5020%" y="645" width="0.0805%" height="15" fill="rgb(232,87,10)" fg:x="404" fg:w="1"/><text x="32.7520%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.5020%" y="629" width="0.0805%" height="15" fill="rgb(249,1,37)" fg:x="404" fg:w="1"/><text x="32.7520%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.5020%" y="613" width="0.0805%" height="15" fill="rgb(239,135,14)" fg:x="404" fg:w="1"/><text x="32.7520%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.5020%" y="597" width="0.0805%" height="15" fill="rgb(253,116,46)" fg:x="404" fg:w="1"/><text x="32.7520%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.5020%" y="581" width="0.0805%" height="15" fill="rgb(222,217,37)" fg:x="404" fg:w="1"/><text x="32.7520%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.5020%" y="565" width="0.0805%" height="15" fill="rgb(252,96,8)" fg:x="404" fg:w="1"/><text x="32.7520%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="32.6629%" y="485" width="0.0805%" height="15" fill="rgb(254,103,41)" fg:x="406" fg:w="1"/><text x="32.9129%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (226 samples, 18.18%)</title><rect x="14.6420%" y="789" width="18.1818%" height="15" fill="rgb(218,213,19)" fg:x="182" fg:w="226"/><text x="14.8920%" y="799.50">plugins_core::build::BuildSu..</text></g><g><title>plugins_core::build::Build::occupying (33 samples, 2.65%)</title><rect x="30.1689%" y="773" width="2.6549%" height="15" fill="rgb(253,95,21)" fg:x="375" fg:w="33"/><text x="30.4189%" y="783.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (24 samples, 1.93%)</title><rect x="30.8930%" y="757" width="1.9308%" height="15" fill="rgb(229,26,28)" fg:x="384" fg:w="24"/><text x="31.1430%" y="767.50">p..</text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (13 samples, 1.05%)</title><rect x="31.7780%" y="741" width="1.0459%" height="15" fill="rgb(230,129,16)" fg:x="395" fg:w="13"/><text x="32.0280%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (12 samples, 0.97%)</title><rect x="31.8584%" y="725" width="0.9654%" height="15" fill="rgb(236,126,17)" fg:x="396" fg:w="12"/><text x="32.1084%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (12 samples, 0.97%)</title><rect x="31.8584%" y="709" width="0.9654%" height="15" fill="rgb(209,33,33)" fg:x="396" fg:w="12"/><text x="32.1084%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="32.1802%" y="693" width="0.6436%" height="15" fill="rgb(227,85,29)" fg:x="400" fg:w="8"/><text x="32.4302%" y="703.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="32.2607%" y="677" width="0.5632%" height="15" fill="rgb(241,53,46)" fg:x="401" fg:w="7"/><text x="32.5107%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="32.2607%" y="661" width="0.5632%" height="15" fill="rgb(228,167,53)" fg:x="401" fg:w="7"/><text x="32.5107%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="32.5825%" y="645" width="0.2414%" height="15" fill="rgb(238,195,45)" fg:x="405" fg:w="3"/><text x="32.8325%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="32.5825%" y="629" width="0.2414%" height="15" fill="rgb(252,124,45)" fg:x="405" fg:w="3"/><text x="32.8325%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="32.5825%" y="613" width="0.2414%" height="15" fill="rgb(251,38,35)" fg:x="405" fg:w="3"/><text x="32.8325%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="32.5825%" y="597" width="0.2414%" height="15" fill="rgb(227,33,2)" fg:x="405" fg:w="3"/><text x="32.8325%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.6629%" y="581" width="0.1609%" height="15" fill="rgb(223,157,46)" fg:x="406" fg:w="2"/><text x="32.9129%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.6629%" y="565" width="0.1609%" height="15" fill="rgb(222,78,41)" fg:x="406" fg:w="2"/><text x="32.9129%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.6629%" y="549" width="0.1609%" height="15" fill="rgb(248,176,11)" fg:x="406" fg:w="2"/><text x="32.9129%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.6629%" y="533" width="0.1609%" height="15" fill="rgb(241,221,18)" fg:x="406" fg:w="2"/><text x="32.9129%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.6629%" y="517" width="0.1609%" height="15" fill="rgb(218,85,22)" fg:x="406" fg:w="2"/><text x="32.9129%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.6629%" y="501" width="0.1609%" height="15" fill="rgb(222,223,7)" fg:x="406" fg:w="2"/><text x="32.9129%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="32.7434%" y="485" width="0.0805%" height="15" fill="rgb(254,59,39)" fg:x="407" fg:w="1"/><text x="32.9934%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="32.7434%" y="469" width="0.0805%" height="15" fill="rgb(247,100,27)" fg:x="407" fg:w="1"/><text x="32.9934%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="32.7434%" y="453" width="0.0805%" height="15" fill="rgb(237,207,10)" fg:x="407" fg:w="1"/><text x="32.9934%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="32.8238%" y="757" width="0.0805%" height="15" fill="rgb(220,121,28)" fg:x="408" fg:w="1"/><text x="33.0738%" y="767.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="32.8238%" y="741" width="0.0805%" height="15" fill="rgb(213,223,20)" fg:x="408" fg:w="1"/><text x="33.0738%" y="751.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="32.9043%" y="757" width="0.0805%" height="15" fill="rgb(205,121,27)" fg:x="409" fg:w="1"/><text x="33.1543%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9043%" y="741" width="0.0805%" height="15" fill="rgb(253,24,53)" fg:x="409" fg:w="1"/><text x="33.1543%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.9847%" y="741" width="0.0805%" height="15" fill="rgb(224,224,47)" fg:x="410" fg:w="1"/><text x="33.2347%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="32.9847%" y="725" width="0.0805%" height="15" fill="rgb(250,125,36)" fg:x="410" fg:w="1"/><text x="33.2347%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.9847%" y="709" width="0.0805%" height="15" fill="rgb(240,144,38)" fg:x="410" fg:w="1"/><text x="33.2347%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.9847%" y="693" width="0.0805%" height="15" fill="rgb(250,15,50)" fg:x="410" fg:w="1"/><text x="33.2347%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.9847%" y="677" width="0.0805%" height="15" fill="rgb(210,24,26)" fg:x="410" fg:w="1"/><text x="33.2347%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.9847%" y="661" width="0.0805%" height="15" fill="rgb(234,53,53)" fg:x="410" fg:w="1"/><text x="33.2347%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.9847%" y="645" width="0.0805%" height="15" fill="rgb(208,108,28)" fg:x="410" fg:w="1"/><text x="33.2347%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.9847%" y="629" width="0.0805%" height="15" fill="rgb(227,143,7)" fg:x="410" fg:w="1"/><text x="33.2347%" y="639.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (4 samples, 0.32%)</title><rect x="32.8238%" y="789" width="0.3218%" height="15" fill="rgb(238,189,38)" fg:x="408" fg:w="4"/><text x="33.0738%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="32.8238%" y="773" width="0.3218%" height="15" fill="rgb(222,69,15)" fg:x="408" fg:w="4"/><text x="33.0738%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="32.9847%" y="757" width="0.1609%" height="15" fill="rgb(213,169,7)" fg:x="410" fg:w="2"/><text x="33.2347%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="33.0652%" y="741" width="0.0805%" height="15" fill="rgb(251,219,4)" fg:x="411" fg:w="1"/><text x="33.3152%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="33.0652%" y="725" width="0.0805%" height="15" fill="rgb(241,55,40)" fg:x="411" fg:w="1"/><text x="33.3152%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.0652%" y="709" width="0.0805%" height="15" fill="rgb(243,57,30)" fg:x="411" fg:w="1"/><text x="33.3152%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.0652%" y="693" width="0.0805%" height="15" fill="rgb(234,50,30)" fg:x="411" fg:w="1"/><text x="33.3152%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.0652%" y="677" width="0.0805%" height="15" fill="rgb(239,23,42)" fg:x="411" fg:w="1"/><text x="33.3152%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.0652%" y="661" width="0.0805%" height="15" fill="rgb(217,38,19)" fg:x="411" fg:w="1"/><text x="33.3152%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.0652%" y="645" width="0.0805%" height="15" fill="rgb(215,179,16)" fg:x="411" fg:w="1"/><text x="33.3152%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.0652%" y="629" width="0.0805%" height="15" fill="rgb(254,21,37)" fg:x="411" fg:w="1"/><text x="33.3152%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.0652%" y="613" width="0.0805%" height="15" fill="rgb(219,207,48)" fg:x="411" fg:w="1"/><text x="33.3152%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="33.3065%" y="725" width="0.0805%" height="15" fill="rgb(227,225,41)" fg:x="414" fg:w="1"/><text x="33.5565%" y="735.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="33.3065%" y="709" width="0.0805%" height="15" fill="rgb(223,130,1)" fg:x="414" fg:w="1"/><text x="33.5565%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3065%" y="693" width="0.0805%" height="15" fill="rgb(249,54,42)" fg:x="414" fg:w="1"/><text x="33.5565%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3065%" y="677" width="0.0805%" height="15" fill="rgb(248,69,25)" fg:x="414" fg:w="1"/><text x="33.5565%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3065%" y="661" width="0.0805%" height="15" fill="rgb(234,21,32)" fg:x="414" fg:w="1"/><text x="33.5565%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.3065%" y="645" width="0.0805%" height="15" fill="rgb(252,136,6)" fg:x="414" fg:w="1"/><text x="33.5565%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.3065%" y="629" width="0.0805%" height="15" fill="rgb(245,87,12)" fg:x="414" fg:w="1"/><text x="33.5565%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.3065%" y="613" width="0.0805%" height="15" fill="rgb(208,12,15)" fg:x="414" fg:w="1"/><text x="33.5565%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="33.3065%" y="597" width="0.0805%" height="15" fill="rgb(250,98,2)" fg:x="414" fg:w="1"/><text x="33.5565%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.3065%" y="581" width="0.0805%" height="15" fill="rgb(205,213,15)" fg:x="414" fg:w="1"/><text x="33.5565%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="33.3065%" y="741" width="0.1609%" height="15" fill="rgb(248,192,44)" fg:x="414" fg:w="2"/><text x="33.5565%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="33.3870%" y="725" width="0.0805%" height="15" fill="rgb(221,89,17)" fg:x="415" fg:w="1"/><text x="33.6370%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="33.3870%" y="709" width="0.0805%" height="15" fill="rgb(209,55,3)" fg:x="415" fg:w="1"/><text x="33.6370%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="33.3870%" y="693" width="0.0805%" height="15" fill="rgb(247,23,45)" fg:x="415" fg:w="1"/><text x="33.6370%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.3870%" y="677" width="0.0805%" height="15" fill="rgb(235,152,23)" fg:x="415" fg:w="1"/><text x="33.6370%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="33.3870%" y="661" width="0.0805%" height="15" fill="rgb(244,63,13)" fg:x="415" fg:w="1"/><text x="33.6370%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="33.3870%" y="645" width="0.0805%" height="15" fill="rgb(227,30,37)" fg:x="415" fg:w="1"/><text x="33.6370%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="33.3870%" y="629" width="0.0805%" height="15" fill="rgb(224,49,42)" fg:x="415" fg:w="1"/><text x="33.6370%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.3870%" y="613" width="0.0805%" height="15" fill="rgb(218,129,5)" fg:x="415" fg:w="1"/><text x="33.6370%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="33.3870%" y="597" width="0.0805%" height="15" fill="rgb(240,199,54)" fg:x="415" fg:w="1"/><text x="33.6370%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="33.3870%" y="581" width="0.0805%" height="15" fill="rgb(234,31,13)" fg:x="415" fg:w="1"/><text x="33.6370%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="33.3870%" y="565" width="0.0805%" height="15" fill="rgb(219,73,54)" fg:x="415" fg:w="1"/><text x="33.6370%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.3870%" y="549" width="0.0805%" height="15" fill="rgb(251,162,10)" fg:x="415" fg:w="1"/><text x="33.6370%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.3870%" y="533" width="0.0805%" height="15" fill="rgb(240,138,47)" fg:x="415" fg:w="1"/><text x="33.6370%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.3870%" y="517" width="0.0805%" height="15" fill="rgb(216,138,26)" fg:x="415" fg:w="1"/><text x="33.6370%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="33.3870%" y="501" width="0.0805%" height="15" fill="rgb(243,17,35)" fg:x="415" fg:w="1"/><text x="33.6370%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="33.3870%" y="485" width="0.0805%" height="15" fill="rgb(241,60,18)" fg:x="415" fg:w="1"/><text x="33.6370%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="33.3870%" y="469" width="0.0805%" height="15" fill="rgb(234,2,44)" fg:x="415" fg:w="1"/><text x="33.6370%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="33.3870%" y="453" width="0.0805%" height="15" fill="rgb(225,225,33)" fg:x="415" fg:w="1"/><text x="33.6370%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="33.3870%" y="437" width="0.0805%" height="15" fill="rgb(234,50,31)" fg:x="415" fg:w="1"/><text x="33.6370%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="33.3870%" y="421" width="0.0805%" height="15" fill="rgb(249,6,25)" fg:x="415" fg:w="1"/><text x="33.6370%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.3870%" y="405" width="0.0805%" height="15" fill="rgb(241,5,17)" fg:x="415" fg:w="1"/><text x="33.6370%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="33.3870%" y="389" width="0.0805%" height="15" fill="rgb(207,116,10)" fg:x="415" fg:w="1"/><text x="33.6370%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.3870%" y="373" width="0.0805%" height="15" fill="rgb(222,128,18)" fg:x="415" fg:w="1"/><text x="33.6370%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3870%" y="357" width="0.0805%" height="15" fill="rgb(229,109,25)" fg:x="415" fg:w="1"/><text x="33.6370%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="33.4674%" y="677" width="0.0805%" height="15" fill="rgb(222,102,25)" fg:x="416" fg:w="1"/><text x="33.7174%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="33.4674%" y="741" width="0.1609%" height="15" fill="rgb(239,211,5)" fg:x="416" fg:w="2"/><text x="33.7174%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="33.4674%" y="725" width="0.1609%" height="15" fill="rgb(223,136,26)" fg:x="416" fg:w="2"/><text x="33.7174%" y="735.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="33.4674%" y="709" width="0.1609%" height="15" fill="rgb(227,30,15)" fg:x="416" fg:w="2"/><text x="33.7174%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.4674%" y="693" width="0.1609%" height="15" fill="rgb(247,76,4)" fg:x="416" fg:w="2"/><text x="33.7174%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="33.5479%" y="677" width="0.0805%" height="15" fill="rgb(245,38,48)" fg:x="417" fg:w="1"/><text x="33.7979%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="33.6283%" y="693" width="0.0805%" height="15" fill="rgb(210,220,14)" fg:x="418" fg:w="1"/><text x="33.8783%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.6283%" y="677" width="0.0805%" height="15" fill="rgb(224,60,51)" fg:x="418" fg:w="1"/><text x="33.8783%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.6283%" y="661" width="0.0805%" height="15" fill="rgb(212,133,49)" fg:x="418" fg:w="1"/><text x="33.8783%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.6283%" y="645" width="0.0805%" height="15" fill="rgb(231,39,22)" fg:x="418" fg:w="1"/><text x="33.8783%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.6283%" y="629" width="0.0805%" height="15" fill="rgb(236,173,22)" fg:x="418" fg:w="1"/><text x="33.8783%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.6283%" y="613" width="0.0805%" height="15" fill="rgb(210,70,0)" fg:x="418" fg:w="1"/><text x="33.8783%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.6283%" y="597" width="0.0805%" height="15" fill="rgb(215,170,11)" fg:x="418" fg:w="1"/><text x="33.8783%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.6283%" y="581" width="0.0805%" height="15" fill="rgb(220,154,28)" fg:x="418" fg:w="1"/><text x="33.8783%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.6283%" y="565" width="0.0805%" height="15" fill="rgb(240,160,41)" fg:x="418" fg:w="1"/><text x="33.8783%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.6283%" y="549" width="0.0805%" height="15" fill="rgb(243,215,41)" fg:x="418" fg:w="1"/><text x="33.8783%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7088%" y="661" width="0.0805%" height="15" fill="rgb(214,208,31)" fg:x="419" fg:w="1"/><text x="33.9588%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7088%" y="645" width="0.0805%" height="15" fill="rgb(247,57,22)" fg:x="419" fg:w="1"/><text x="33.9588%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7088%" y="629" width="0.0805%" height="15" fill="rgb(228,73,52)" fg:x="419" fg:w="1"/><text x="33.9588%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7088%" y="613" width="0.0805%" height="15" fill="rgb(252,60,9)" fg:x="419" fg:w="1"/><text x="33.9588%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.7088%" y="597" width="0.0805%" height="15" fill="rgb(233,9,51)" fg:x="419" fg:w="1"/><text x="33.9588%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.7088%" y="581" width="0.0805%" height="15" fill="rgb(223,67,14)" fg:x="419" fg:w="1"/><text x="33.9588%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.7088%" y="565" width="0.0805%" height="15" fill="rgb(222,86,2)" fg:x="419" fg:w="1"/><text x="33.9588%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.7088%" y="549" width="0.0805%" height="15" fill="rgb(243,58,54)" fg:x="419" fg:w="1"/><text x="33.9588%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.7088%" y="533" width="0.0805%" height="15" fill="rgb(210,200,39)" fg:x="419" fg:w="1"/><text x="33.9588%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.7088%" y="517" width="0.0805%" height="15" fill="rgb(238,135,9)" fg:x="419" fg:w="1"/><text x="33.9588%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.7088%" y="501" width="0.0805%" height="15" fill="rgb(232,179,7)" fg:x="419" fg:w="1"/><text x="33.9588%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.7088%" y="485" width="0.0805%" height="15" fill="rgb(245,65,41)" fg:x="419" fg:w="1"/><text x="33.9588%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.7088%" y="469" width="0.0805%" height="15" fill="rgb(227,43,8)" fg:x="419" fg:w="1"/><text x="33.9588%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.7088%" y="453" width="0.0805%" height="15" fill="rgb(235,91,14)" fg:x="419" fg:w="1"/><text x="33.9588%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.7088%" y="437" width="0.0805%" height="15" fill="rgb(235,219,31)" fg:x="419" fg:w="1"/><text x="33.9588%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.7088%" y="421" width="0.0805%" height="15" fill="rgb(227,121,25)" fg:x="419" fg:w="1"/><text x="33.9588%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="33.2261%" y="757" width="0.6436%" height="15" fill="rgb(254,129,24)" fg:x="413" fg:w="8"/><text x="33.4761%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="33.6283%" y="741" width="0.2414%" height="15" fill="rgb(226,144,49)" fg:x="418" fg:w="3"/><text x="33.8783%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="33.6283%" y="725" width="0.2414%" height="15" fill="rgb(214,187,32)" fg:x="418" fg:w="3"/><text x="33.8783%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="33.6283%" y="709" width="0.2414%" height="15" fill="rgb(243,129,46)" fg:x="418" fg:w="3"/><text x="33.8783%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="33.7088%" y="693" width="0.1609%" height="15" fill="rgb(221,185,35)" fg:x="419" fg:w="2"/><text x="33.9588%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="33.7088%" y="677" width="0.1609%" height="15" fill="rgb(205,0,32)" fg:x="419" fg:w="2"/><text x="33.9588%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="33.7892%" y="661" width="0.0805%" height="15" fill="rgb(229,179,12)" fg:x="420" fg:w="1"/><text x="34.0392%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.7892%" y="645" width="0.0805%" height="15" fill="rgb(252,107,19)" fg:x="420" fg:w="1"/><text x="34.0392%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.7892%" y="629" width="0.0805%" height="15" fill="rgb(220,95,27)" fg:x="420" fg:w="1"/><text x="34.0392%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.7892%" y="613" width="0.0805%" height="15" fill="rgb(240,113,40)" fg:x="420" fg:w="1"/><text x="34.0392%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (3 samples, 0.24%)</title><rect x="33.8697%" y="741" width="0.2414%" height="15" fill="rgb(208,4,43)" fg:x="421" fg:w="3"/><text x="34.1197%" y="751.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="33.9501%" y="725" width="0.1609%" height="15" fill="rgb(247,189,30)" fg:x="422" fg:w="2"/><text x="34.2001%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="33.9501%" y="709" width="0.1609%" height="15" fill="rgb(231,157,17)" fg:x="422" fg:w="2"/><text x="34.2001%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="33.9501%" y="693" width="0.1609%" height="15" fill="rgb(224,139,6)" fg:x="422" fg:w="2"/><text x="34.2001%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="33.9501%" y="677" width="0.1609%" height="15" fill="rgb(223,83,16)" fg:x="422" fg:w="2"/><text x="34.2001%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="33.9501%" y="661" width="0.1609%" height="15" fill="rgb(232,211,20)" fg:x="422" fg:w="2"/><text x="34.2001%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="33.9501%" y="645" width="0.1609%" height="15" fill="rgb(225,203,35)" fg:x="422" fg:w="2"/><text x="34.2001%" y="655.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="33.9501%" y="629" width="0.1609%" height="15" fill="rgb(215,211,44)" fg:x="422" fg:w="2"/><text x="34.2001%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="33.9501%" y="613" width="0.1609%" height="15" fill="rgb(248,213,26)" fg:x="422" fg:w="2"/><text x="34.2001%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="33.9501%" y="597" width="0.1609%" height="15" fill="rgb(214,23,52)" fg:x="422" fg:w="2"/><text x="34.2001%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="33.9501%" y="581" width="0.1609%" height="15" fill="rgb(225,173,50)" fg:x="422" fg:w="2"/><text x="34.2001%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.0306%" y="565" width="0.0805%" height="15" fill="rgb(206,150,22)" fg:x="423" fg:w="1"/><text x="34.2806%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="33.8697%" y="757" width="0.3218%" height="15" fill="rgb(239,64,23)" fg:x="421" fg:w="4"/><text x="34.1197%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="34.1110%" y="741" width="0.0805%" height="15" fill="rgb(242,50,38)" fg:x="424" fg:w="1"/><text x="34.3610%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="34.1110%" y="725" width="0.0805%" height="15" fill="rgb(217,91,15)" fg:x="424" fg:w="1"/><text x="34.3610%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="34.1110%" y="709" width="0.0805%" height="15" fill="rgb(230,172,6)" fg:x="424" fg:w="1"/><text x="34.3610%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.1110%" y="693" width="0.0805%" height="15" fill="rgb(221,98,26)" fg:x="424" fg:w="1"/><text x="34.3610%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="34.1915%" y="725" width="0.0805%" height="15" fill="rgb(227,210,45)" fg:x="425" fg:w="1"/><text x="34.4415%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.1915%" y="709" width="0.0805%" height="15" fill="rgb(206,8,30)" fg:x="425" fg:w="1"/><text x="34.4415%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.1915%" y="693" width="0.0805%" height="15" fill="rgb(241,219,17)" fg:x="425" fg:w="1"/><text x="34.4415%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.1915%" y="677" width="0.0805%" height="15" fill="rgb(247,121,29)" fg:x="425" fg:w="1"/><text x="34.4415%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.1915%" y="661" width="0.0805%" height="15" fill="rgb(219,169,49)" fg:x="425" fg:w="1"/><text x="34.4415%" y="671.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (15 samples, 1.21%)</title><rect x="33.1456%" y="789" width="1.2068%" height="15" fill="rgb(253,49,49)" fg:x="412" fg:w="15"/><text x="33.3956%" y="799.50"></text></g><g><title>plugins_core::build::QuickThing::make (15 samples, 1.21%)</title><rect x="33.1456%" y="773" width="1.2068%" height="15" fill="rgb(217,178,3)" fg:x="412" fg:w="15"/><text x="33.3956%" y="783.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="34.1915%" y="757" width="0.1609%" height="15" fill="rgb(234,73,37)" fg:x="425" fg:w="2"/><text x="34.4415%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="34.1915%" y="741" width="0.1609%" height="15" fill="rgb(250,98,22)" fg:x="425" fg:w="2"/><text x="34.4415%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="34.2719%" y="725" width="0.0805%" height="15" fill="rgb(220,108,37)" fg:x="426" fg:w="1"/><text x="34.5219%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="34.2719%" y="709" width="0.0805%" height="15" fill="rgb(225,168,10)" fg:x="426" fg:w="1"/><text x="34.5219%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="34.2719%" y="693" width="0.0805%" height="15" fill="rgb(247,215,21)" fg:x="426" fg:w="1"/><text x="34.5219%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.2719%" y="677" width="0.0805%" height="15" fill="rgb(253,189,31)" fg:x="426" fg:w="1"/><text x="34.5219%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="34.2719%" y="661" width="0.0805%" height="15" fill="rgb(241,54,22)" fg:x="426" fg:w="1"/><text x="34.5219%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.2719%" y="645" width="0.0805%" height="15" fill="rgb(211,87,4)" fg:x="426" fg:w="1"/><text x="34.5219%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="34.2719%" y="629" width="0.0805%" height="15" fill="rgb(245,112,24)" fg:x="426" fg:w="1"/><text x="34.5219%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="34.2719%" y="613" width="0.0805%" height="15" fill="rgb(235,190,41)" fg:x="426" fg:w="1"/><text x="34.5219%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="34.4328%" y="741" width="0.0805%" height="15" fill="rgb(214,89,8)" fg:x="428" fg:w="1"/><text x="34.6828%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.5133%" y="389" width="0.0805%" height="15" fill="rgb(249,155,35)" fg:x="429" fg:w="1"/><text x="34.7633%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.5133%" y="373" width="0.0805%" height="15" fill="rgb(249,88,26)" fg:x="429" fg:w="1"/><text x="34.7633%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="34.5133%" y="549" width="0.1609%" height="15" fill="rgb(232,56,8)" fg:x="429" fg:w="2"/><text x="34.7633%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="34.5133%" y="533" width="0.1609%" height="15" fill="rgb(240,95,3)" fg:x="429" fg:w="2"/><text x="34.7633%" y="543.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="34.5133%" y="517" width="0.1609%" height="15" fill="rgb(222,44,28)" fg:x="429" fg:w="2"/><text x="34.7633%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="34.5133%" y="501" width="0.1609%" height="15" fill="rgb(234,16,30)" fg:x="429" fg:w="2"/><text x="34.7633%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="34.5133%" y="485" width="0.1609%" height="15" fill="rgb(223,26,17)" fg:x="429" fg:w="2"/><text x="34.7633%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="34.5133%" y="469" width="0.1609%" height="15" fill="rgb(239,187,47)" fg:x="429" fg:w="2"/><text x="34.7633%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="34.5133%" y="453" width="0.1609%" height="15" fill="rgb(247,102,50)" fg:x="429" fg:w="2"/><text x="34.7633%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="34.5133%" y="437" width="0.1609%" height="15" fill="rgb(231,216,22)" fg:x="429" fg:w="2"/><text x="34.7633%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="34.5133%" y="421" width="0.1609%" height="15" fill="rgb(216,201,26)" fg:x="429" fg:w="2"/><text x="34.7633%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="34.5133%" y="405" width="0.1609%" height="15" fill="rgb(214,186,23)" fg:x="429" fg:w="2"/><text x="34.7633%" y="415.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="34.5937%" y="389" width="0.0805%" height="15" fill="rgb(235,184,4)" fg:x="430" fg:w="1"/><text x="34.8437%" y="399.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="34.5937%" y="373" width="0.0805%" height="15" fill="rgb(244,46,17)" fg:x="430" fg:w="1"/><text x="34.8437%" y="383.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="34.5937%" y="357" width="0.0805%" height="15" fill="rgb(248,74,46)" fg:x="430" fg:w="1"/><text x="34.8437%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="34.4328%" y="757" width="0.3218%" height="15" fill="rgb(243,79,5)" fg:x="428" fg:w="4"/><text x="34.6828%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="34.5133%" y="741" width="0.2414%" height="15" fill="rgb(213,148,1)" fg:x="429" fg:w="3"/><text x="34.7633%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="34.5133%" y="725" width="0.2414%" height="15" fill="rgb(221,30,0)" fg:x="429" fg:w="3"/><text x="34.7633%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="34.5133%" y="709" width="0.2414%" height="15" fill="rgb(207,85,29)" fg:x="429" fg:w="3"/><text x="34.7633%" y="719.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="34.5133%" y="693" width="0.2414%" height="15" fill="rgb(239,31,46)" fg:x="429" fg:w="3"/><text x="34.7633%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="34.5133%" y="677" width="0.2414%" height="15" fill="rgb(219,6,1)" fg:x="429" fg:w="3"/><text x="34.7633%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="34.5133%" y="661" width="0.2414%" height="15" fill="rgb(229,90,29)" fg:x="429" fg:w="3"/><text x="34.7633%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="34.5133%" y="645" width="0.2414%" height="15" fill="rgb(242,201,42)" fg:x="429" fg:w="3"/><text x="34.7633%" y="655.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="34.5133%" y="629" width="0.2414%" height="15" fill="rgb(243,80,54)" fg:x="429" fg:w="3"/><text x="34.7633%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="34.5133%" y="613" width="0.2414%" height="15" fill="rgb(223,166,15)" fg:x="429" fg:w="3"/><text x="34.7633%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="34.5133%" y="597" width="0.2414%" height="15" fill="rgb(238,78,27)" fg:x="429" fg:w="3"/><text x="34.7633%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="34.5133%" y="581" width="0.2414%" height="15" fill="rgb(235,28,43)" fg:x="429" fg:w="3"/><text x="34.7633%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="34.5133%" y="565" width="0.2414%" height="15" fill="rgb(240,210,28)" fg:x="429" fg:w="3"/><text x="34.7633%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.6742%" y="549" width="0.0805%" height="15" fill="rgb(253,6,46)" fg:x="431" fg:w="1"/><text x="34.9242%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="34.6742%" y="533" width="0.0805%" height="15" fill="rgb(250,159,47)" fg:x="431" fg:w="1"/><text x="34.9242%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.6742%" y="517" width="0.0805%" height="15" fill="rgb(216,139,2)" fg:x="431" fg:w="1"/><text x="34.9242%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.6742%" y="501" width="0.0805%" height="15" fill="rgb(221,124,44)" fg:x="431" fg:w="1"/><text x="34.9242%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.6742%" y="485" width="0.0805%" height="15" fill="rgb(205,37,22)" fg:x="431" fg:w="1"/><text x="34.9242%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.6742%" y="469" width="0.0805%" height="15" fill="rgb(250,55,8)" fg:x="431" fg:w="1"/><text x="34.9242%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.6742%" y="453" width="0.0805%" height="15" fill="rgb(215,83,48)" fg:x="431" fg:w="1"/><text x="34.9242%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="34.6742%" y="437" width="0.0805%" height="15" fill="rgb(253,2,32)" fg:x="431" fg:w="1"/><text x="34.9242%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="34.6742%" y="421" width="0.0805%" height="15" fill="rgb(236,67,28)" fg:x="431" fg:w="1"/><text x="34.9242%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="34.6742%" y="405" width="0.0805%" height="15" fill="rgb(252,55,15)" fg:x="431" fg:w="1"/><text x="34.9242%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="34.6742%" y="389" width="0.0805%" height="15" fill="rgb(243,173,17)" fg:x="431" fg:w="1"/><text x="34.9242%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="34.6742%" y="373" width="0.0805%" height="15" fill="rgb(215,212,13)" fg:x="431" fg:w="1"/><text x="34.9242%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="34.6742%" y="357" width="0.0805%" height="15" fill="rgb(253,176,6)" fg:x="431" fg:w="1"/><text x="34.9242%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="34.6742%" y="341" width="0.0805%" height="15" fill="rgb(236,105,26)" fg:x="431" fg:w="1"/><text x="34.9242%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="34.6742%" y="325" width="0.0805%" height="15" fill="rgb(239,226,32)" fg:x="431" fg:w="1"/><text x="34.9242%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.6742%" y="309" width="0.0805%" height="15" fill="rgb(236,104,51)" fg:x="431" fg:w="1"/><text x="34.9242%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="34.6742%" y="293" width="0.0805%" height="15" fill="rgb(220,172,33)" fg:x="431" fg:w="1"/><text x="34.9242%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="34.6742%" y="277" width="0.0805%" height="15" fill="rgb(224,182,25)" fg:x="431" fg:w="1"/><text x="34.9242%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="34.6742%" y="261" width="0.0805%" height="15" fill="rgb(236,184,24)" fg:x="431" fg:w="1"/><text x="34.9242%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="34.6742%" y="245" width="0.0805%" height="15" fill="rgb(241,221,14)" fg:x="431" fg:w="1"/><text x="34.9242%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7546%" y="709" width="0.0805%" height="15" fill="rgb(227,146,5)" fg:x="432" fg:w="1"/><text x="35.0046%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7546%" y="693" width="0.0805%" height="15" fill="rgb(214,15,23)" fg:x="432" fg:w="1"/><text x="35.0046%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7546%" y="677" width="0.0805%" height="15" fill="rgb(233,157,31)" fg:x="432" fg:w="1"/><text x="35.0046%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7546%" y="661" width="0.0805%" height="15" fill="rgb(211,27,52)" fg:x="432" fg:w="1"/><text x="35.0046%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.8351%" y="709" width="0.0805%" height="15" fill="rgb(212,223,15)" fg:x="433" fg:w="1"/><text x="35.0851%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.8351%" y="693" width="0.0805%" height="15" fill="rgb(254,211,0)" fg:x="433" fg:w="1"/><text x="35.0851%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.8351%" y="677" width="0.0805%" height="15" fill="rgb(205,43,38)" fg:x="433" fg:w="1"/><text x="35.0851%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.8351%" y="661" width="0.0805%" height="15" fill="rgb(242,206,46)" fg:x="433" fg:w="1"/><text x="35.0851%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.8351%" y="645" width="0.0805%" height="15" fill="rgb(220,221,12)" fg:x="433" fg:w="1"/><text x="35.0851%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="34.7546%" y="757" width="0.2414%" height="15" fill="rgb(217,156,35)" fg:x="432" fg:w="3"/><text x="35.0046%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="34.7546%" y="741" width="0.2414%" height="15" fill="rgb(207,181,49)" fg:x="432" fg:w="3"/><text x="35.0046%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="34.7546%" y="725" width="0.2414%" height="15" fill="rgb(235,103,47)" fg:x="432" fg:w="3"/><text x="35.0046%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9155%" y="709" width="0.0805%" height="15" fill="rgb(222,63,28)" fg:x="434" fg:w="1"/><text x="35.1655%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9155%" y="693" width="0.0805%" height="15" fill="rgb(244,137,21)" fg:x="434" fg:w="1"/><text x="35.1655%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9155%" y="677" width="0.0805%" height="15" fill="rgb(228,35,27)" fg:x="434" fg:w="1"/><text x="35.1655%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9155%" y="661" width="0.0805%" height="15" fill="rgb(226,191,41)" fg:x="434" fg:w="1"/><text x="35.1655%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.9155%" y="645" width="0.0805%" height="15" fill="rgb(210,154,3)" fg:x="434" fg:w="1"/><text x="35.1655%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9155%" y="629" width="0.0805%" height="15" fill="rgb(216,60,49)" fg:x="434" fg:w="1"/><text x="35.1655%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.9960%" y="757" width="0.0805%" height="15" fill="rgb(226,17,20)" fg:x="435" fg:w="1"/><text x="35.2460%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="35.0764%" y="709" width="0.0805%" height="15" fill="rgb(206,115,35)" fg:x="436" fg:w="1"/><text x="35.3264%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.0764%" y="693" width="0.0805%" height="15" fill="rgb(227,88,1)" fg:x="436" fg:w="1"/><text x="35.3264%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.0764%" y="677" width="0.0805%" height="15" fill="rgb(230,222,24)" fg:x="436" fg:w="1"/><text x="35.3264%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.0764%" y="661" width="0.0805%" height="15" fill="rgb(214,124,32)" fg:x="436" fg:w="1"/><text x="35.3264%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.0764%" y="645" width="0.0805%" height="15" fill="rgb(240,41,36)" fg:x="436" fg:w="1"/><text x="35.3264%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.0764%" y="629" width="0.0805%" height="15" fill="rgb(221,17,52)" fg:x="436" fg:w="1"/><text x="35.3264%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.0764%" y="613" width="0.0805%" height="15" fill="rgb(252,70,16)" fg:x="436" fg:w="1"/><text x="35.3264%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.0764%" y="597" width="0.0805%" height="15" fill="rgb(250,177,4)" fg:x="436" fg:w="1"/><text x="35.3264%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.0764%" y="581" width="0.0805%" height="15" fill="rgb(240,188,47)" fg:x="436" fg:w="1"/><text x="35.3264%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.0764%" y="565" width="0.0805%" height="15" fill="rgb(215,92,12)" fg:x="436" fg:w="1"/><text x="35.3264%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.1569%" y="677" width="0.0805%" height="15" fill="rgb(242,110,29)" fg:x="437" fg:w="1"/><text x="35.4069%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.1569%" y="661" width="0.0805%" height="15" fill="rgb(208,211,26)" fg:x="437" fg:w="1"/><text x="35.4069%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.1569%" y="645" width="0.0805%" height="15" fill="rgb(244,147,6)" fg:x="437" fg:w="1"/><text x="35.4069%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.1569%" y="629" width="0.0805%" height="15" fill="rgb(211,130,42)" fg:x="437" fg:w="1"/><text x="35.4069%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.1569%" y="613" width="0.0805%" height="15" fill="rgb(220,63,1)" fg:x="437" fg:w="1"/><text x="35.4069%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.1569%" y="597" width="0.0805%" height="15" fill="rgb(241,212,30)" fg:x="437" fg:w="1"/><text x="35.4069%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.1569%" y="581" width="0.0805%" height="15" fill="rgb(233,153,17)" fg:x="437" fg:w="1"/><text x="35.4069%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.1569%" y="565" width="0.0805%" height="15" fill="rgb(236,3,10)" fg:x="437" fg:w="1"/><text x="35.4069%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.1569%" y="549" width="0.0805%" height="15" fill="rgb(232,41,21)" fg:x="437" fg:w="1"/><text x="35.4069%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.1569%" y="533" width="0.0805%" height="15" fill="rgb(206,63,51)" fg:x="437" fg:w="1"/><text x="35.4069%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.1569%" y="517" width="0.0805%" height="15" fill="rgb(250,214,3)" fg:x="437" fg:w="1"/><text x="35.4069%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.1569%" y="501" width="0.0805%" height="15" fill="rgb(254,89,27)" fg:x="437" fg:w="1"/><text x="35.4069%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.1569%" y="485" width="0.0805%" height="15" fill="rgb(249,41,14)" fg:x="437" fg:w="1"/><text x="35.4069%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.1569%" y="469" width="0.0805%" height="15" fill="rgb(221,196,51)" fg:x="437" fg:w="1"/><text x="35.4069%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.1569%" y="453" width="0.0805%" height="15" fill="rgb(214,116,26)" fg:x="437" fg:w="1"/><text x="35.4069%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.1569%" y="437" width="0.0805%" height="15" fill="rgb(236,67,7)" fg:x="437" fg:w="1"/><text x="35.4069%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.2373%" y="677" width="0.0805%" height="15" fill="rgb(253,179,32)" fg:x="438" fg:w="1"/><text x="35.4873%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.2373%" y="661" width="0.0805%" height="15" fill="rgb(218,33,15)" fg:x="438" fg:w="1"/><text x="35.4873%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.2373%" y="645" width="0.0805%" height="15" fill="rgb(217,202,41)" fg:x="438" fg:w="1"/><text x="35.4873%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.2373%" y="629" width="0.0805%" height="15" fill="rgb(234,133,5)" fg:x="438" fg:w="1"/><text x="35.4873%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.2373%" y="613" width="0.0805%" height="15" fill="rgb(240,47,40)" fg:x="438" fg:w="1"/><text x="35.4873%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="35.3178%" y="661" width="0.0805%" height="15" fill="rgb(234,166,26)" fg:x="439" fg:w="1"/><text x="35.5678%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.13%)</title><rect x="34.3524%" y="773" width="1.1263%" height="15" fill="rgb(244,125,51)" fg:x="427" fg:w="14"/><text x="34.6024%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="35.0764%" y="757" width="0.4023%" height="15" fill="rgb(229,171,11)" fg:x="436" fg:w="5"/><text x="35.3264%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="35.0764%" y="741" width="0.4023%" height="15" fill="rgb(224,38,45)" fg:x="436" fg:w="5"/><text x="35.3264%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="35.0764%" y="725" width="0.4023%" height="15" fill="rgb(237,27,7)" fg:x="436" fg:w="5"/><text x="35.3264%" y="735.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="35.1569%" y="709" width="0.3218%" height="15" fill="rgb(216,52,7)" fg:x="437" fg:w="4"/><text x="35.4069%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="35.1569%" y="693" width="0.3218%" height="15" fill="rgb(243,11,11)" fg:x="437" fg:w="4"/><text x="35.4069%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="35.3178%" y="677" width="0.1609%" height="15" fill="rgb(253,167,20)" fg:x="439" fg:w="2"/><text x="35.5678%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.3982%" y="661" width="0.0805%" height="15" fill="rgb(215,207,5)" fg:x="440" fg:w="1"/><text x="35.6482%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="35.3982%" y="645" width="0.0805%" height="15" fill="rgb(252,127,31)" fg:x="440" fg:w="1"/><text x="35.6482%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.3982%" y="629" width="0.0805%" height="15" fill="rgb(209,106,27)" fg:x="440" fg:w="1"/><text x="35.6482%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="35.3982%" y="613" width="0.0805%" height="15" fill="rgb(214,220,18)" fg:x="440" fg:w="1"/><text x="35.6482%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="35.4787%" y="741" width="0.0805%" height="15" fill="rgb(237,89,12)" fg:x="441" fg:w="1"/><text x="35.7287%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.4787%" y="725" width="0.0805%" height="15" fill="rgb(209,167,36)" fg:x="441" fg:w="1"/><text x="35.7287%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.5591%" y="709" width="0.0805%" height="15" fill="rgb(243,45,22)" fg:x="442" fg:w="1"/><text x="35.8091%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.5591%" y="693" width="0.0805%" height="15" fill="rgb(239,2,46)" fg:x="442" fg:w="1"/><text x="35.8091%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="35.4787%" y="773" width="0.2414%" height="15" fill="rgb(241,101,0)" fg:x="441" fg:w="3"/><text x="35.7287%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="35.4787%" y="757" width="0.2414%" height="15" fill="rgb(244,34,31)" fg:x="441" fg:w="3"/><text x="35.7287%" y="767.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="35.5591%" y="741" width="0.1609%" height="15" fill="rgb(248,23,22)" fg:x="442" fg:w="2"/><text x="35.8091%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="35.5591%" y="725" width="0.1609%" height="15" fill="rgb(218,27,48)" fg:x="442" fg:w="2"/><text x="35.8091%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6396%" y="709" width="0.0805%" height="15" fill="rgb(232,78,1)" fg:x="443" fg:w="1"/><text x="35.8896%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.6396%" y="693" width="0.0805%" height="15" fill="rgb(233,169,12)" fg:x="443" fg:w="1"/><text x="35.8896%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6396%" y="677" width="0.0805%" height="15" fill="rgb(225,222,54)" fg:x="443" fg:w="1"/><text x="35.8896%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.6396%" y="661" width="0.0805%" height="15" fill="rgb(245,126,29)" fg:x="443" fg:w="1"/><text x="35.8896%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="35.6396%" y="645" width="0.0805%" height="15" fill="rgb(241,63,48)" fg:x="443" fg:w="1"/><text x="35.8896%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6396%" y="629" width="0.0805%" height="15" fill="rgb(235,126,38)" fg:x="443" fg:w="1"/><text x="35.8896%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6396%" y="613" width="0.0805%" height="15" fill="rgb(232,96,49)" fg:x="443" fg:w="1"/><text x="35.8896%" y="623.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="35.8005%" y="741" width="0.0805%" height="15" fill="rgb(211,146,40)" fg:x="445" fg:w="1"/><text x="36.0505%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.8005%" y="725" width="0.0805%" height="15" fill="rgb(247,93,44)" fg:x="445" fg:w="1"/><text x="36.0505%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.8005%" y="709" width="0.0805%" height="15" fill="rgb(251,41,49)" fg:x="445" fg:w="1"/><text x="36.0505%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="35.8005%" y="693" width="0.0805%" height="15" fill="rgb(218,155,12)" fg:x="445" fg:w="1"/><text x="36.0505%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="35.7200%" y="757" width="0.2414%" height="15" fill="rgb(221,161,30)" fg:x="444" fg:w="3"/><text x="35.9700%" y="767.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="35.8809%" y="741" width="0.0805%" height="15" fill="rgb(221,179,11)" fg:x="446" fg:w="1"/><text x="36.1309%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="35.8809%" y="725" width="0.0805%" height="15" fill="rgb(224,170,48)" fg:x="446" fg:w="1"/><text x="36.1309%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.8809%" y="709" width="0.0805%" height="15" fill="rgb(223,117,5)" fg:x="446" fg:w="1"/><text x="36.1309%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="35.8809%" y="693" width="0.0805%" height="15" fill="rgb(209,52,20)" fg:x="446" fg:w="1"/><text x="36.1309%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.8809%" y="677" width="0.0805%" height="15" fill="rgb(209,19,41)" fg:x="446" fg:w="1"/><text x="36.1309%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="36.0418%" y="661" width="0.0805%" height="15" fill="rgb(210,177,12)" fg:x="448" fg:w="1"/><text x="36.2918%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (405 samples, 32.58%)</title><rect x="3.6203%" y="805" width="32.5825%" height="15" fill="rgb(211,159,37)" fg:x="45" fg:w="405"/><text x="3.8703%" y="815.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::p..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (23 samples, 1.85%)</title><rect x="34.3524%" y="789" width="1.8504%" height="15" fill="rgb(209,20,2)" fg:x="427" fg:w="23"/><text x="34.6024%" y="799.50">p..</text></g><g><title>plugins_core::build::Build::new_world (6 samples, 0.48%)</title><rect x="35.7200%" y="773" width="0.4827%" height="15" fill="rgb(244,3,46)" fg:x="444" fg:w="6"/><text x="35.9700%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new (3 samples, 0.24%)</title><rect x="35.9614%" y="757" width="0.2414%" height="15" fill="rgb(220,94,38)" fg:x="447" fg:w="3"/><text x="36.2114%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="35.9614%" y="741" width="0.2414%" height="15" fill="rgb(253,14,31)" fg:x="447" fg:w="3"/><text x="36.2114%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="35.9614%" y="725" width="0.2414%" height="15" fill="rgb(234,176,13)" fg:x="447" fg:w="3"/><text x="36.2114%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="35.9614%" y="709" width="0.2414%" height="15" fill="rgb(218,62,25)" fg:x="447" fg:w="3"/><text x="36.2114%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="35.9614%" y="693" width="0.2414%" height="15" fill="rgb(216,124,40)" fg:x="447" fg:w="3"/><text x="36.2114%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="36.0418%" y="677" width="0.1609%" height="15" fill="rgb(228,170,12)" fg:x="448" fg:w="2"/><text x="36.2918%" y="687.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.1223%" y="661" width="0.0805%" height="15" fill="rgb(231,226,5)" fg:x="449" fg:w="1"/><text x="36.3723%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="36.2027%" y="805" width="0.1609%" height="15" fill="rgb(237,122,22)" fg:x="450" fg:w="2"/><text x="36.4527%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="36.2027%" y="789" width="0.1609%" height="15" fill="rgb(209,185,25)" fg:x="450" fg:w="2"/><text x="36.4527%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="36.2027%" y="773" width="0.1609%" height="15" fill="rgb(228,200,32)" fg:x="450" fg:w="2"/><text x="36.4527%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="36.2027%" y="757" width="0.1609%" height="15" fill="rgb(217,140,10)" fg:x="450" fg:w="2"/><text x="36.4527%" y="767.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="36.2027%" y="741" width="0.1609%" height="15" fill="rgb(253,17,24)" fg:x="450" fg:w="2"/><text x="36.4527%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (1 samples, 0.08%)</title><rect x="36.3636%" y="805" width="0.0805%" height="15" fill="rgb(212,61,6)" fg:x="452" fg:w="1"/><text x="36.6136%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="36.3636%" y="789" width="0.0805%" height="15" fill="rgb(205,14,25)" fg:x="452" fg:w="1"/><text x="36.6136%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.3636%" y="773" width="0.0805%" height="15" fill="rgb(232,69,41)" fg:x="452" fg:w="1"/><text x="36.6136%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.5245%" y="773" width="0.1609%" height="15" fill="rgb(241,106,47)" fg:x="454" fg:w="2"/><text x="36.7745%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.5245%" y="757" width="0.1609%" height="15" fill="rgb(210,213,53)" fg:x="454" fg:w="2"/><text x="36.7745%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="36.5245%" y="741" width="0.1609%" height="15" fill="rgb(253,175,27)" fg:x="454" fg:w="2"/><text x="36.7745%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="36.5245%" y="725" width="0.1609%" height="15" fill="rgb(211,171,24)" fg:x="454" fg:w="2"/><text x="36.7745%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="36.5245%" y="709" width="0.1609%" height="15" fill="rgb(229,80,7)" fg:x="454" fg:w="2"/><text x="36.7745%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="36.5245%" y="693" width="0.1609%" height="15" fill="rgb(212,46,39)" fg:x="454" fg:w="2"/><text x="36.7745%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="36.5245%" y="677" width="0.1609%" height="15" fill="rgb(240,80,45)" fg:x="454" fg:w="2"/><text x="36.7745%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="36.5245%" y="661" width="0.1609%" height="15" fill="rgb(253,177,40)" fg:x="454" fg:w="2"/><text x="36.7745%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="36.5245%" y="645" width="0.1609%" height="15" fill="rgb(249,200,15)" fg:x="454" fg:w="2"/><text x="36.7745%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="36.5245%" y="629" width="0.1609%" height="15" fill="rgb(217,78,26)" fg:x="454" fg:w="2"/><text x="36.7745%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="36.5245%" y="613" width="0.1609%" height="15" fill="rgb(254,151,32)" fg:x="454" fg:w="2"/><text x="36.7745%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="36.5245%" y="597" width="0.1609%" height="15" fill="rgb(226,165,27)" fg:x="454" fg:w="2"/><text x="36.7745%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="36.5245%" y="789" width="0.2414%" height="15" fill="rgb(250,206,4)" fg:x="454" fg:w="3"/><text x="36.7745%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.6854%" y="773" width="0.0805%" height="15" fill="rgb(231,229,27)" fg:x="456" fg:w="1"/><text x="36.9354%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="36.7659%" y="677" width="0.0805%" height="15" fill="rgb(239,217,8)" fg:x="457" fg:w="1"/><text x="37.0159%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.7659%" y="661" width="0.0805%" height="15" fill="rgb(225,204,27)" fg:x="457" fg:w="1"/><text x="37.0159%" y="671.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="36.7659%" y="645" width="0.0805%" height="15" fill="rgb(230,56,32)" fg:x="457" fg:w="1"/><text x="37.0159%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="36.7659%" y="629" width="0.0805%" height="15" fill="rgb(222,56,27)" fg:x="457" fg:w="1"/><text x="37.0159%" y="639.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="36.7659%" y="613" width="0.0805%" height="15" fill="rgb(253,108,27)" fg:x="457" fg:w="1"/><text x="37.0159%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="36.7659%" y="789" width="0.2414%" height="15" fill="rgb(212,87,36)" fg:x="457" fg:w="3"/><text x="37.0159%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="36.7659%" y="773" width="0.2414%" height="15" fill="rgb(247,82,36)" fg:x="457" fg:w="3"/><text x="37.0159%" y="783.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="36.7659%" y="757" width="0.2414%" height="15" fill="rgb(222,143,9)" fg:x="457" fg:w="3"/><text x="37.0159%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="36.7659%" y="741" width="0.2414%" height="15" fill="rgb(238,162,48)" fg:x="457" fg:w="3"/><text x="37.0159%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="36.7659%" y="725" width="0.2414%" height="15" fill="rgb(221,59,43)" fg:x="457" fg:w="3"/><text x="37.0159%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="36.7659%" y="709" width="0.2414%" height="15" fill="rgb(205,166,41)" fg:x="457" fg:w="3"/><text x="37.0159%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (3 samples, 0.24%)</title><rect x="36.7659%" y="693" width="0.2414%" height="15" fill="rgb(241,186,40)" fg:x="457" fg:w="3"/><text x="37.0159%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="36.8463%" y="677" width="0.1609%" height="15" fill="rgb(216,119,35)" fg:x="458" fg:w="2"/><text x="37.0963%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="36.8463%" y="661" width="0.1609%" height="15" fill="rgb(208,68,38)" fg:x="458" fg:w="2"/><text x="37.0963%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="36.9268%" y="645" width="0.0805%" height="15" fill="rgb(217,113,1)" fg:x="459" fg:w="1"/><text x="37.1768%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="36.9268%" y="629" width="0.0805%" height="15" fill="rgb(242,153,3)" fg:x="459" fg:w="1"/><text x="37.1768%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.9268%" y="613" width="0.0805%" height="15" fill="rgb(229,76,35)" fg:x="459" fg:w="1"/><text x="37.1768%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="37.0877%" y="757" width="0.3218%" height="15" fill="rgb(229,125,34)" fg:x="461" fg:w="4"/><text x="37.3377%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="37.0877%" y="741" width="0.3218%" height="15" fill="rgb(238,179,36)" fg:x="461" fg:w="4"/><text x="37.3377%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (4 samples, 0.32%)</title><rect x="37.0877%" y="725" width="0.3218%" height="15" fill="rgb(244,183,19)" fg:x="461" fg:w="4"/><text x="37.3377%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.3290%" y="709" width="0.0805%" height="15" fill="rgb(216,85,49)" fg:x="464" fg:w="1"/><text x="37.5790%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.3290%" y="693" width="0.0805%" height="15" fill="rgb(208,161,47)" fg:x="464" fg:w="1"/><text x="37.5790%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.3290%" y="677" width="0.0805%" height="15" fill="rgb(233,210,18)" fg:x="464" fg:w="1"/><text x="37.5790%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.3290%" y="661" width="0.0805%" height="15" fill="rgb(205,104,42)" fg:x="464" fg:w="1"/><text x="37.5790%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.3290%" y="645" width="0.0805%" height="15" fill="rgb(248,90,43)" fg:x="464" fg:w="1"/><text x="37.5790%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="37.3290%" y="629" width="0.0805%" height="15" fill="rgb(206,198,11)" fg:x="464" fg:w="1"/><text x="37.5790%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.3290%" y="613" width="0.0805%" height="15" fill="rgb(239,165,27)" fg:x="464" fg:w="1"/><text x="37.5790%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.5704%" y="709" width="0.0805%" height="15" fill="rgb(246,44,32)" fg:x="467" fg:w="1"/><text x="37.8204%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.24%)</title><rect x="37.5704%" y="741" width="0.2414%" height="15" fill="rgb(252,65,42)" fg:x="467" fg:w="3"/><text x="37.8204%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="37.5704%" y="725" width="0.2414%" height="15" fill="rgb(246,197,18)" fg:x="467" fg:w="3"/><text x="37.8204%" y="735.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="37.6508%" y="709" width="0.1609%" height="15" fill="rgb(216,192,4)" fg:x="468" fg:w="2"/><text x="37.9008%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.8922%" y="725" width="0.0805%" height="15" fill="rgb(208,117,10)" fg:x="471" fg:w="1"/><text x="38.1422%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.8922%" y="709" width="0.0805%" height="15" fill="rgb(240,61,47)" fg:x="471" fg:w="1"/><text x="38.1422%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.8922%" y="693" width="0.0805%" height="15" fill="rgb(228,178,21)" fg:x="471" fg:w="1"/><text x="38.1422%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.8922%" y="677" width="0.0805%" height="15" fill="rgb(219,96,54)" fg:x="471" fg:w="1"/><text x="38.1422%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.8922%" y="661" width="0.0805%" height="15" fill="rgb(250,177,24)" fg:x="471" fg:w="1"/><text x="38.1422%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.8922%" y="645" width="0.0805%" height="15" fill="rgb(242,154,46)" fg:x="471" fg:w="1"/><text x="38.1422%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.8922%" y="629" width="0.0805%" height="15" fill="rgb(226,176,29)" fg:x="471" fg:w="1"/><text x="38.1422%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.8922%" y="613" width="0.0805%" height="15" fill="rgb(226,29,2)" fg:x="471" fg:w="1"/><text x="38.1422%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.8922%" y="597" width="0.0805%" height="15" fill="rgb(237,104,14)" fg:x="471" fg:w="1"/><text x="38.1422%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.8922%" y="581" width="0.0805%" height="15" fill="rgb(245,207,31)" fg:x="471" fg:w="1"/><text x="38.1422%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.8922%" y="565" width="0.0805%" height="15" fill="rgb(229,211,45)" fg:x="471" fg:w="1"/><text x="38.1422%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8922%" y="549" width="0.0805%" height="15" fill="rgb(229,113,15)" fg:x="471" fg:w="1"/><text x="38.1422%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="37.9726%" y="709" width="0.0805%" height="15" fill="rgb(237,147,15)" fg:x="472" fg:w="1"/><text x="38.2226%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="38.0531%" y="693" width="0.5632%" height="15" fill="rgb(244,120,12)" fg:x="473" fg:w="7"/><text x="38.3031%" y="703.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="38.1335%" y="677" width="0.4827%" height="15" fill="rgb(205,120,12)" fg:x="474" fg:w="6"/><text x="38.3835%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="38.2944%" y="661" width="0.3218%" height="15" fill="rgb(231,26,45)" fg:x="476" fg:w="4"/><text x="38.5444%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="38.2944%" y="645" width="0.3218%" height="15" fill="rgb(246,98,1)" fg:x="476" fg:w="4"/><text x="38.5444%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.80%)</title><rect x="38.0531%" y="709" width="0.8045%" height="15" fill="rgb(207,68,45)" fg:x="473" fg:w="10"/><text x="38.3031%" y="719.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="38.6163%" y="693" width="0.2414%" height="15" fill="rgb(231,27,38)" fg:x="480" fg:w="3"/><text x="38.8663%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="38.6967%" y="677" width="0.1609%" height="15" fill="rgb(214,223,3)" fg:x="481" fg:w="2"/><text x="38.9467%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="38.8576%" y="693" width="0.0805%" height="15" fill="rgb(228,195,46)" fg:x="483" fg:w="1"/><text x="39.1076%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (12 samples, 0.97%)</title><rect x="38.9381%" y="693" width="0.9654%" height="15" fill="rgb(231,100,42)" fg:x="484" fg:w="12"/><text x="39.1881%" y="703.50"></text></g><g><title>std::io::Write::write_all (9 samples, 0.72%)</title><rect x="39.1794%" y="677" width="0.7241%" height="15" fill="rgb(236,53,4)" fg:x="487" fg:w="9"/><text x="39.4294%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="39.5817%" y="661" width="0.3218%" height="15" fill="rgb(230,152,12)" fg:x="492" fg:w="4"/><text x="39.8317%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="39.6621%" y="645" width="0.2414%" height="15" fill="rgb(226,101,19)" fg:x="493" fg:w="3"/><text x="39.9121%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.8230%" y="629" width="0.0805%" height="15" fill="rgb(250,149,32)" fg:x="495" fg:w="1"/><text x="40.0730%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.8230%" y="613" width="0.0805%" height="15" fill="rgb(232,178,12)" fg:x="495" fg:w="1"/><text x="40.0730%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.8230%" y="597" width="0.0805%" height="15" fill="rgb(246,151,17)" fg:x="495" fg:w="1"/><text x="40.0730%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="39.9035%" y="645" width="0.1609%" height="15" fill="rgb(252,17,51)" fg:x="496" fg:w="2"/><text x="40.1535%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.9839%" y="629" width="0.0805%" height="15" fill="rgb(250,207,23)" fg:x="497" fg:w="1"/><text x="40.2339%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.9839%" y="613" width="0.0805%" height="15" fill="rgb(205,27,5)" fg:x="497" fg:w="1"/><text x="40.2339%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.9839%" y="597" width="0.0805%" height="15" fill="rgb(224,32,19)" fg:x="497" fg:w="1"/><text x="40.2339%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="39.9035%" y="677" width="0.2414%" height="15" fill="rgb(247,214,40)" fg:x="496" fg:w="3"/><text x="40.1535%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="39.9035%" y="661" width="0.2414%" height="15" fill="rgb(239,199,17)" fg:x="496" fg:w="3"/><text x="40.1535%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.0644%" y="645" width="0.0805%" height="15" fill="rgb(251,159,9)" fg:x="498" fg:w="1"/><text x="40.3144%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.0644%" y="629" width="0.0805%" height="15" fill="rgb(225,78,32)" fg:x="498" fg:w="1"/><text x="40.3144%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.0644%" y="613" width="0.0805%" height="15" fill="rgb(206,97,47)" fg:x="498" fg:w="1"/><text x="40.3144%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="40.1448%" y="677" width="0.1609%" height="15" fill="rgb(227,107,4)" fg:x="499" fg:w="2"/><text x="40.3948%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.2253%" y="661" width="0.0805%" height="15" fill="rgb(241,146,50)" fg:x="500" fg:w="1"/><text x="40.4753%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.2253%" y="645" width="0.0805%" height="15" fill="rgb(232,92,30)" fg:x="500" fg:w="1"/><text x="40.4753%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="40.2253%" y="629" width="0.0805%" height="15" fill="rgb(222,0,40)" fg:x="500" fg:w="1"/><text x="40.4753%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="40.3862%" y="661" width="0.0805%" height="15" fill="rgb(219,54,33)" fg:x="502" fg:w="1"/><text x="40.6362%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.3862%" y="645" width="0.0805%" height="15" fill="rgb(226,209,28)" fg:x="502" fg:w="1"/><text x="40.6362%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="40.4666%" y="645" width="0.1609%" height="15" fill="rgb(254,205,35)" fg:x="503" fg:w="2"/><text x="40.7166%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="40.4666%" y="629" width="0.1609%" height="15" fill="rgb(230,159,3)" fg:x="503" fg:w="2"/><text x="40.7166%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="40.4666%" y="613" width="0.1609%" height="15" fill="rgb(232,190,24)" fg:x="503" fg:w="2"/><text x="40.7166%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="40.4666%" y="597" width="0.1609%" height="15" fill="rgb(217,227,44)" fg:x="503" fg:w="2"/><text x="40.7166%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="40.6275%" y="629" width="0.0805%" height="15" fill="rgb(236,211,1)" fg:x="505" fg:w="1"/><text x="40.8775%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.6275%" y="613" width="0.0805%" height="15" fill="rgb(250,127,46)" fg:x="505" fg:w="1"/><text x="40.8775%" y="623.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="40.7080%" y="517" width="0.0805%" height="15" fill="rgb(229,213,6)" fg:x="506" fg:w="1"/><text x="40.9580%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="40.7080%" y="629" width="0.3218%" height="15" fill="rgb(237,15,36)" fg:x="506" fg:w="4"/><text x="40.9580%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="40.7080%" y="613" width="0.3218%" height="15" fill="rgb(213,131,41)" fg:x="506" fg:w="4"/><text x="40.9580%" y="623.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="40.7080%" y="597" width="0.3218%" height="15" fill="rgb(225,82,44)" fg:x="506" fg:w="4"/><text x="40.9580%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="40.7080%" y="581" width="0.3218%" height="15" fill="rgb(249,42,11)" fg:x="506" fg:w="4"/><text x="40.9580%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="40.7080%" y="565" width="0.3218%" height="15" fill="rgb(253,11,29)" fg:x="506" fg:w="4"/><text x="40.9580%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="40.7080%" y="549" width="0.3218%" height="15" fill="rgb(206,8,54)" fg:x="506" fg:w="4"/><text x="40.9580%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="40.7080%" y="533" width="0.3218%" height="15" fill="rgb(222,186,2)" fg:x="506" fg:w="4"/><text x="40.9580%" y="543.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="40.7884%" y="517" width="0.2414%" height="15" fill="rgb(221,206,53)" fg:x="507" fg:w="3"/><text x="41.0384%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="40.4666%" y="661" width="0.6436%" height="15" fill="rgb(230,150,21)" fg:x="503" fg:w="8"/><text x="40.7166%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="40.6275%" y="645" width="0.4827%" height="15" fill="rgb(253,202,10)" fg:x="505" fg:w="6"/><text x="40.8775%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.0298%" y="629" width="0.0805%" height="15" fill="rgb(238,109,40)" fg:x="510" fg:w="1"/><text x="41.2798%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="40.3057%" y="677" width="0.9654%" height="15" fill="rgb(247,120,22)" fg:x="501" fg:w="12"/><text x="40.5557%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.1102%" y="661" width="0.1609%" height="15" fill="rgb(207,43,30)" fg:x="511" fg:w="2"/><text x="41.3602%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.1907%" y="645" width="0.0805%" height="15" fill="rgb(213,211,24)" fg:x="512" fg:w="1"/><text x="41.4407%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.69%)</title><rect x="39.9035%" y="693" width="1.6895%" height="15" fill="rgb(239,73,39)" fg:x="496" fg:w="21"/><text x="40.1535%" y="703.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="41.2711%" y="677" width="0.3218%" height="15" fill="rgb(245,182,19)" fg:x="513" fg:w="4"/><text x="41.5211%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="41.3516%" y="661" width="0.2414%" height="15" fill="rgb(247,143,26)" fg:x="514" fg:w="3"/><text x="41.6016%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.5125%" y="645" width="0.0805%" height="15" fill="rgb(228,191,23)" fg:x="516" fg:w="1"/><text x="41.7625%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (47 samples, 3.78%)</title><rect x="37.9726%" y="725" width="3.7812%" height="15" fill="rgb(253,165,31)" fg:x="472" fg:w="47"/><text x="38.2226%" y="735.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (36 samples, 2.90%)</title><rect x="38.8576%" y="709" width="2.8962%" height="15" fill="rgb(234,138,20)" fg:x="483" fg:w="36"/><text x="39.1076%" y="719.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.5929%" y="693" width="0.1609%" height="15" fill="rgb(218,191,29)" fg:x="517" fg:w="2"/><text x="41.8429%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="41.5929%" y="677" width="0.1609%" height="15" fill="rgb(221,157,19)" fg:x="517" fg:w="2"/><text x="41.8429%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="41.5929%" y="661" width="0.1609%" height="15" fill="rgb(237,26,42)" fg:x="517" fg:w="2"/><text x="41.8429%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="41.8343%" y="693" width="0.1609%" height="15" fill="rgb(220,163,24)" fg:x="520" fg:w="2"/><text x="42.0843%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.9952%" y="677" width="0.0805%" height="15" fill="rgb(242,115,20)" fg:x="522" fg:w="1"/><text x="42.2452%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.1561%" y="661" width="0.0805%" height="15" fill="rgb(210,206,9)" fg:x="524" fg:w="1"/><text x="42.4061%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.2365%" y="645" width="0.0805%" height="15" fill="rgb(208,71,17)" fg:x="525" fg:w="1"/><text x="42.4865%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="42.3170%" y="645" width="0.1609%" height="15" fill="rgb(233,7,5)" fg:x="526" fg:w="2"/><text x="42.5670%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.3974%" y="629" width="0.0805%" height="15" fill="rgb(207,92,33)" fg:x="527" fg:w="1"/><text x="42.6474%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.3974%" y="613" width="0.0805%" height="15" fill="rgb(218,87,9)" fg:x="527" fg:w="1"/><text x="42.6474%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5583%" y="597" width="0.0805%" height="15" fill="rgb(219,47,37)" fg:x="529" fg:w="1"/><text x="42.8083%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="41.7538%" y="725" width="0.9654%" height="15" fill="rgb(221,152,34)" fg:x="519" fg:w="12"/><text x="42.0038%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.97%)</title><rect x="41.7538%" y="709" width="0.9654%" height="15" fill="rgb(235,176,21)" fg:x="519" fg:w="12"/><text x="42.0038%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="41.9952%" y="693" width="0.7241%" height="15" fill="rgb(232,212,21)" fg:x="522" fg:w="9"/><text x="42.2452%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="42.0756%" y="677" width="0.6436%" height="15" fill="rgb(245,82,39)" fg:x="523" fg:w="8"/><text x="42.3256%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="42.2365%" y="661" width="0.4827%" height="15" fill="rgb(241,52,51)" fg:x="525" fg:w="6"/><text x="42.4865%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="42.4779%" y="645" width="0.2414%" height="15" fill="rgb(219,91,24)" fg:x="528" fg:w="3"/><text x="42.7279%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="42.4779%" y="629" width="0.2414%" height="15" fill="rgb(241,142,12)" fg:x="528" fg:w="3"/><text x="42.7279%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="42.4779%" y="613" width="0.2414%" height="15" fill="rgb(230,27,9)" fg:x="528" fg:w="3"/><text x="42.7279%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.6388%" y="597" width="0.0805%" height="15" fill="rgb(249,181,32)" fg:x="530" fg:w="1"/><text x="42.8888%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6388%" y="581" width="0.0805%" height="15" fill="rgb(230,107,3)" fg:x="530" fg:w="1"/><text x="42.8888%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.8801%" y="661" width="0.0805%" height="15" fill="rgb(246,204,14)" fg:x="533" fg:w="1"/><text x="43.1301%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.9606%" y="661" width="0.0805%" height="15" fill="rgb(213,192,47)" fg:x="534" fg:w="1"/><text x="43.2106%" y="671.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="43.2019%" y="645" width="0.3218%" height="15" fill="rgb(240,44,36)" fg:x="537" fg:w="4"/><text x="43.4519%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="43.5237%" y="645" width="0.1609%" height="15" fill="rgb(244,209,38)" fg:x="541" fg:w="2"/><text x="43.7737%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.6846%" y="629" width="0.0805%" height="15" fill="rgb(219,34,37)" fg:x="543" fg:w="1"/><text x="43.9346%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.7651%" y="613" width="0.1609%" height="15" fill="rgb(210,28,6)" fg:x="544" fg:w="2"/><text x="44.0151%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.9260%" y="613" width="0.0805%" height="15" fill="rgb(244,110,52)" fg:x="546" fg:w="1"/><text x="44.1760%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.9260%" y="597" width="0.0805%" height="15" fill="rgb(254,124,47)" fg:x="546" fg:w="1"/><text x="44.1760%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="44.0064%" y="613" width="0.1609%" height="15" fill="rgb(254,110,13)" fg:x="547" fg:w="2"/><text x="44.2564%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.0869%" y="597" width="0.0805%" height="15" fill="rgb(252,57,21)" fg:x="548" fg:w="1"/><text x="44.3369%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0869%" y="581" width="0.0805%" height="15" fill="rgb(242,60,45)" fg:x="548" fg:w="1"/><text x="44.3369%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.1673%" y="597" width="0.0805%" height="15" fill="rgb(234,49,30)" fg:x="549" fg:w="1"/><text x="44.4173%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.2478%" y="581" width="0.0805%" height="15" fill="rgb(218,98,6)" fg:x="550" fg:w="1"/><text x="44.4978%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.3282%" y="581" width="0.0805%" height="15" fill="rgb(220,174,29)" fg:x="551" fg:w="1"/><text x="44.5782%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.3282%" y="565" width="0.0805%" height="15" fill="rgb(236,163,23)" fg:x="551" fg:w="1"/><text x="44.5782%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (22 samples, 1.77%)</title><rect x="42.7192%" y="693" width="1.7699%" height="15" fill="rgb(242,114,45)" fg:x="531" fg:w="22"/><text x="42.9692%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (22 samples, 1.77%)</title><rect x="42.7192%" y="677" width="1.7699%" height="15" fill="rgb(232,10,53)" fg:x="531" fg:w="22"/><text x="42.9692%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.45%)</title><rect x="43.0410%" y="661" width="1.4481%" height="15" fill="rgb(245,108,29)" fg:x="535" fg:w="18"/><text x="43.2910%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="43.6846%" y="645" width="0.8045%" height="15" fill="rgb(240,89,53)" fg:x="543" fg:w="10"/><text x="43.9346%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="43.7651%" y="629" width="0.7241%" height="15" fill="rgb(226,60,45)" fg:x="544" fg:w="9"/><text x="44.0151%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="44.1673%" y="613" width="0.3218%" height="15" fill="rgb(230,41,44)" fg:x="549" fg:w="4"/><text x="44.4173%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="44.2478%" y="597" width="0.2414%" height="15" fill="rgb(230,26,20)" fg:x="550" fg:w="3"/><text x="44.4978%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.4087%" y="581" width="0.0805%" height="15" fill="rgb(237,170,32)" fg:x="552" fg:w="1"/><text x="44.6587%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="45.0523%" y="629" width="0.0805%" height="15" fill="rgb(212,35,42)" fg:x="560" fg:w="1"/><text x="45.3023%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.0523%" y="613" width="0.0805%" height="15" fill="rgb(227,31,34)" fg:x="560" fg:w="1"/><text x="45.3023%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.2132%" y="613" width="0.0805%" height="15" fill="rgb(216,19,18)" fg:x="562" fg:w="1"/><text x="45.4632%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.2132%" y="597" width="0.0805%" height="15" fill="rgb(211,133,42)" fg:x="562" fg:w="1"/><text x="45.4632%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.2132%" y="581" width="0.0805%" height="15" fill="rgb(244,66,13)" fg:x="562" fg:w="1"/><text x="45.4632%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.2132%" y="565" width="0.0805%" height="15" fill="rgb(218,185,50)" fg:x="562" fg:w="1"/><text x="45.4632%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="45.1327%" y="629" width="0.2414%" height="15" fill="rgb(219,149,13)" fg:x="561" fg:w="3"/><text x="45.3827%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.2936%" y="613" width="0.0805%" height="15" fill="rgb(221,125,0)" fg:x="563" fg:w="1"/><text x="45.5436%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.97%)</title><rect x="44.4891%" y="677" width="0.9654%" height="15" fill="rgb(247,126,27)" fg:x="553" fg:w="12"/><text x="44.7391%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.88%)</title><rect x="44.5696%" y="661" width="0.8850%" height="15" fill="rgb(250,138,30)" fg:x="554" fg:w="11"/><text x="44.8196%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="44.9718%" y="645" width="0.4827%" height="15" fill="rgb(230,151,9)" fg:x="559" fg:w="6"/><text x="45.2218%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.3741%" y="629" width="0.0805%" height="15" fill="rgb(233,80,38)" fg:x="564" fg:w="1"/><text x="45.6241%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (36 samples, 2.90%)</title><rect x="42.7192%" y="709" width="2.8962%" height="15" fill="rgb(232,68,43)" fg:x="531" fg:w="36"/><text x="42.9692%" y="719.50">&lt;k..</text></g><g><title>treediff::diff::diff (14 samples, 1.13%)</title><rect x="44.4891%" y="693" width="1.1263%" height="15" fill="rgb(254,5,50)" fg:x="553" fg:w="14"/><text x="44.7391%" y="703.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (2 samples, 0.16%)</title><rect x="45.4545%" y="677" width="0.1609%" height="15" fill="rgb(225,45,5)" fg:x="565" fg:w="2"/><text x="45.7045%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="45.5350%" y="661" width="0.0805%" height="15" fill="rgb(239,22,3)" fg:x="566" fg:w="1"/><text x="45.7850%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.6959%" y="677" width="0.0805%" height="15" fill="rgb(243,129,0)" fg:x="568" fg:w="1"/><text x="45.9459%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="45.7763%" y="677" width="0.3218%" height="15" fill="rgb(223,164,0)" fg:x="569" fg:w="4"/><text x="46.0263%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.9372%" y="661" width="0.1609%" height="15" fill="rgb(221,46,29)" fg:x="571" fg:w="2"/><text x="46.1872%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="45.9372%" y="645" width="0.1609%" height="15" fill="rgb(205,97,47)" fg:x="571" fg:w="2"/><text x="46.1872%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="46.0981%" y="677" width="0.3218%" height="15" fill="rgb(249,14,8)" fg:x="573" fg:w="4"/><text x="46.3481%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="46.0981%" y="661" width="0.3218%" height="15" fill="rgb(216,77,3)" fg:x="573" fg:w="4"/><text x="46.3481%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="46.0981%" y="645" width="0.3218%" height="15" fill="rgb(206,168,54)" fg:x="573" fg:w="4"/><text x="46.3481%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="46.4200%" y="661" width="0.1609%" height="15" fill="rgb(236,3,41)" fg:x="577" fg:w="2"/><text x="46.6700%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.6613%" y="645" width="0.0805%" height="15" fill="rgb(231,132,24)" fg:x="580" fg:w="1"/><text x="46.9113%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="46.7418%" y="645" width="0.0805%" height="15" fill="rgb(227,221,40)" fg:x="581" fg:w="1"/><text x="46.9918%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.8222%" y="629" width="0.1609%" height="15" fill="rgb(233,151,11)" fg:x="582" fg:w="2"/><text x="47.0722%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.8222%" y="613" width="0.1609%" height="15" fill="rgb(247,81,35)" fg:x="582" fg:w="2"/><text x="47.0722%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9027%" y="597" width="0.0805%" height="15" fill="rgb(243,128,48)" fg:x="583" fg:w="1"/><text x="47.1527%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="47.0636%" y="597" width="0.0805%" height="15" fill="rgb(253,16,10)" fg:x="585" fg:w="1"/><text x="47.3136%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="47.1440%" y="581" width="0.3218%" height="15" fill="rgb(228,67,27)" fg:x="586" fg:w="4"/><text x="47.3940%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.3854%" y="565" width="0.0805%" height="15" fill="rgb(231,105,25)" fg:x="589" fg:w="1"/><text x="47.6354%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="47.1440%" y="597" width="0.4827%" height="15" fill="rgb(213,166,47)" fg:x="586" fg:w="6"/><text x="47.3940%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="47.4658%" y="581" width="0.1609%" height="15" fill="rgb(209,27,10)" fg:x="590" fg:w="2"/><text x="47.7158%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.5463%" y="565" width="0.0805%" height="15" fill="rgb(241,44,30)" fg:x="591" fg:w="1"/><text x="47.7963%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (9 samples, 0.72%)</title><rect x="46.9831%" y="629" width="0.7241%" height="15" fill="rgb(223,216,15)" fg:x="584" fg:w="9"/><text x="47.2331%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="47.0636%" y="613" width="0.6436%" height="15" fill="rgb(227,14,7)" fg:x="585" fg:w="8"/><text x="47.3136%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.6267%" y="597" width="0.0805%" height="15" fill="rgb(237,14,5)" fg:x="592" fg:w="1"/><text x="47.8767%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.1094%" y="565" width="0.0805%" height="15" fill="rgb(232,14,36)" fg:x="598" fg:w="1"/><text x="48.3594%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="47.9485%" y="597" width="0.4023%" height="15" fill="rgb(234,0,38)" fg:x="596" fg:w="5"/><text x="48.1985%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="48.1094%" y="581" width="0.2414%" height="15" fill="rgb(207,170,14)" fg:x="598" fg:w="3"/><text x="48.3594%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="48.1899%" y="565" width="0.1609%" height="15" fill="rgb(252,45,13)" fg:x="599" fg:w="2"/><text x="48.4399%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="48.3508%" y="549" width="0.0805%" height="15" fill="rgb(213,142,7)" fg:x="601" fg:w="1"/><text x="48.6008%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="48.4312%" y="517" width="0.4023%" height="15" fill="rgb(216,157,23)" fg:x="602" fg:w="5"/><text x="48.6812%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="48.5117%" y="501" width="0.3218%" height="15" fill="rgb(212,145,33)" fg:x="603" fg:w="4"/><text x="48.7617%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="48.5117%" y="485" width="0.3218%" height="15" fill="rgb(233,26,13)" fg:x="603" fg:w="4"/><text x="48.7617%" y="495.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="48.5117%" y="469" width="0.3218%" height="15" fill="rgb(219,196,19)" fg:x="603" fg:w="4"/><text x="48.7617%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="48.4312%" y="549" width="0.4827%" height="15" fill="rgb(246,56,21)" fg:x="602" fg:w="6"/><text x="48.6812%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="48.4312%" y="533" width="0.4827%" height="15" fill="rgb(222,28,53)" fg:x="602" fg:w="6"/><text x="48.6812%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.8335%" y="517" width="0.0805%" height="15" fill="rgb(224,5,27)" fg:x="607" fg:w="1"/><text x="49.0835%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="48.3508%" y="581" width="0.7241%" height="15" fill="rgb(220,153,33)" fg:x="601" fg:w="9"/><text x="48.6008%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="48.3508%" y="565" width="0.7241%" height="15" fill="rgb(226,58,19)" fg:x="601" fg:w="9"/><text x="48.6008%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.9139%" y="549" width="0.1609%" height="15" fill="rgb(239,112,23)" fg:x="608" fg:w="2"/><text x="49.1639%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (32 samples, 2.57%)</title><rect x="46.5809%" y="661" width="2.5744%" height="15" fill="rgb(251,213,20)" fg:x="579" fg:w="32"/><text x="46.8309%" y="671.50">&lt;s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (29 samples, 2.33%)</title><rect x="46.8222%" y="645" width="2.3331%" height="15" fill="rgb(215,181,21)" fg:x="582" fg:w="29"/><text x="47.0722%" y="655.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.45%)</title><rect x="47.7072%" y="629" width="1.4481%" height="15" fill="rgb(240,8,35)" fg:x="593" fg:w="18"/><text x="47.9572%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.37%)</title><rect x="47.7876%" y="613" width="1.3677%" height="15" fill="rgb(232,203,3)" fg:x="594" fg:w="17"/><text x="48.0376%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="48.3508%" y="597" width="0.8045%" height="15" fill="rgb(214,202,43)" fg:x="601" fg:w="10"/><text x="48.6008%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.0748%" y="581" width="0.0805%" height="15" fill="rgb(254,35,11)" fg:x="610" fg:w="1"/><text x="49.3248%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.4771%" y="629" width="0.1609%" height="15" fill="rgb(239,173,13)" fg:x="615" fg:w="2"/><text x="49.7271%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (51 samples, 4.10%)</title><rect x="45.6154%" y="709" width="4.1030%" height="15" fill="rgb(220,141,0)" fg:x="567" fg:w="51"/><text x="45.8654%" y="719.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (50 samples, 4.02%)</title><rect x="45.6959%" y="693" width="4.0225%" height="15" fill="rgb(210,98,12)" fg:x="568" fg:w="50"/><text x="45.9459%" y="703.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (41 samples, 3.30%)</title><rect x="46.4200%" y="677" width="3.2985%" height="15" fill="rgb(254,153,22)" fg:x="577" fg:w="41"/><text x="46.6700%" y="687.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="49.1553%" y="661" width="0.5632%" height="15" fill="rgb(247,223,17)" fg:x="611" fg:w="7"/><text x="49.4053%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="49.3966%" y="645" width="0.3218%" height="15" fill="rgb(246,56,7)" fg:x="614" fg:w="4"/><text x="49.6466%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="49.6380%" y="629" width="0.0805%" height="15" fill="rgb(240,226,12)" fg:x="617" fg:w="1"/><text x="49.8880%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.1207%" y="533" width="0.0805%" height="15" fill="rgb(205,87,46)" fg:x="623" fg:w="1"/><text x="50.3707%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.2011%" y="517" width="0.0805%" height="15" fill="rgb(245,214,51)" fg:x="624" fg:w="1"/><text x="50.4511%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="50.1207%" y="565" width="0.2414%" height="15" fill="rgb(223,172,33)" fg:x="623" fg:w="3"/><text x="50.3707%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.1207%" y="549" width="0.2414%" height="15" fill="rgb(227,203,34)" fg:x="623" fg:w="3"/><text x="50.3707%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="50.2011%" y="533" width="0.1609%" height="15" fill="rgb(248,143,44)" fg:x="624" fg:w="2"/><text x="50.4511%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.2816%" y="517" width="0.0805%" height="15" fill="rgb(226,162,5)" fg:x="625" fg:w="1"/><text x="50.5316%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.5229%" y="453" width="0.0805%" height="15" fill="rgb(211,143,1)" fg:x="628" fg:w="1"/><text x="50.7729%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.5229%" y="469" width="0.2414%" height="15" fill="rgb(224,96,15)" fg:x="628" fg:w="3"/><text x="50.7729%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.6034%" y="453" width="0.1609%" height="15" fill="rgb(222,4,38)" fg:x="629" fg:w="2"/><text x="50.8534%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.6838%" y="437" width="0.0805%" height="15" fill="rgb(253,228,15)" fg:x="630" fg:w="1"/><text x="50.9338%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.6838%" y="421" width="0.0805%" height="15" fill="rgb(242,194,12)" fg:x="630" fg:w="1"/><text x="50.9338%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="50.4425%" y="485" width="0.4023%" height="15" fill="rgb(214,177,31)" fg:x="627" fg:w="5"/><text x="50.6925%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.7643%" y="469" width="0.0805%" height="15" fill="rgb(226,58,51)" fg:x="631" fg:w="1"/><text x="51.0143%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="50.3620%" y="549" width="0.6436%" height="15" fill="rgb(250,119,16)" fg:x="626" fg:w="8"/><text x="50.6120%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="50.3620%" y="533" width="0.6436%" height="15" fill="rgb(223,128,53)" fg:x="626" fg:w="8"/><text x="50.6120%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="50.4425%" y="517" width="0.5632%" height="15" fill="rgb(251,199,15)" fg:x="627" fg:w="7"/><text x="50.6925%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="50.4425%" y="501" width="0.5632%" height="15" fill="rgb(235,168,42)" fg:x="627" fg:w="7"/><text x="50.6925%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="50.8447%" y="485" width="0.1609%" height="15" fill="rgb(250,210,17)" fg:x="632" fg:w="2"/><text x="51.0947%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.9252%" y="469" width="0.0805%" height="15" fill="rgb(226,36,41)" fg:x="633" fg:w="1"/><text x="51.1752%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.0056%" y="549" width="0.0805%" height="15" fill="rgb(225,87,10)" fg:x="634" fg:w="1"/><text x="51.2556%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.29%)</title><rect x="49.9598%" y="597" width="1.2872%" height="15" fill="rgb(228,83,9)" fg:x="621" fg:w="16"/><text x="50.2098%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.29%)</title><rect x="49.9598%" y="581" width="1.2872%" height="15" fill="rgb(225,16,36)" fg:x="621" fg:w="16"/><text x="50.2098%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="50.3620%" y="565" width="0.8850%" height="15" fill="rgb(242,198,13)" fg:x="626" fg:w="11"/><text x="50.6120%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.0861%" y="549" width="0.1609%" height="15" fill="rgb(239,25,51)" fg:x="635" fg:w="2"/><text x="51.3361%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.1665%" y="533" width="0.0805%" height="15" fill="rgb(239,28,37)" fg:x="636" fg:w="1"/><text x="51.4165%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.1665%" y="517" width="0.0805%" height="15" fill="rgb(234,70,17)" fg:x="636" fg:w="1"/><text x="51.4165%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.45%)</title><rect x="49.8793%" y="613" width="1.4481%" height="15" fill="rgb(231,215,53)" fg:x="620" fg:w="18"/><text x="50.1293%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2470%" y="597" width="0.0805%" height="15" fill="rgb(218,140,42)" fg:x="637" fg:w="1"/><text x="51.4970%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="51.3274%" y="597" width="0.0805%" height="15" fill="rgb(233,227,45)" fg:x="638" fg:w="1"/><text x="51.5774%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="51.3274%" y="613" width="0.4023%" height="15" fill="rgb(225,189,21)" fg:x="638" fg:w="5"/><text x="51.5774%" y="623.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="51.4079%" y="597" width="0.3218%" height="15" fill="rgb(237,176,54)" fg:x="639" fg:w="4"/><text x="51.6579%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (27 samples, 2.17%)</title><rect x="49.7989%" y="645" width="2.1722%" height="15" fill="rgb(215,131,46)" fg:x="619" fg:w="27"/><text x="50.0489%" y="655.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (26 samples, 2.09%)</title><rect x="49.8793%" y="629" width="2.0917%" height="15" fill="rgb(218,95,20)" fg:x="620" fg:w="26"/><text x="50.1293%" y="639.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="51.7297%" y="613" width="0.2414%" height="15" fill="rgb(208,198,12)" fg:x="643" fg:w="3"/><text x="51.9797%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="51.7297%" y="597" width="0.2414%" height="15" fill="rgb(239,107,50)" fg:x="643" fg:w="3"/><text x="51.9797%" y="607.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="51.7297%" y="581" width="0.2414%" height="15" fill="rgb(240,217,37)" fg:x="643" fg:w="3"/><text x="51.9797%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="51.9710%" y="645" width="0.1609%" height="15" fill="rgb(242,197,49)" fg:x="646" fg:w="2"/><text x="52.2210%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.0515%" y="629" width="0.0805%" height="15" fill="rgb(219,171,17)" fg:x="647" fg:w="1"/><text x="52.3015%" y="639.50"></text></g><g><title>engine::session::Session::close (197 samples, 15.85%)</title><rect x="36.4441%" y="805" width="15.8488%" height="15" fill="rgb(209,81,40)" fg:x="453" fg:w="197"/><text x="36.6941%" y="815.50">engine::session::Session..</text></g><g><title>engine::session::state::State::close (190 samples, 15.29%)</title><rect x="37.0072%" y="789" width="15.2856%" height="15" fill="rgb(237,156,30)" fg:x="460" fg:w="190"/><text x="37.2572%" y="799.50">engine::session::state:..</text></g><g><title>engine::session::state::State::flush_entities (190 samples, 15.29%)</title><rect x="37.0072%" y="773" width="15.2856%" height="15" fill="rgb(212,127,16)" fg:x="460" fg:w="190"/><text x="37.2572%" y="783.50">engine::session::state:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (185 samples, 14.88%)</title><rect x="37.4095%" y="757" width="14.8833%" height="15" fill="rgb(226,66,32)" fg:x="465" fg:w="185"/><text x="37.6595%" y="767.50">engine::session::intern..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (180 samples, 14.48%)</title><rect x="37.8117%" y="741" width="14.4811%" height="15" fill="rgb(245,22,46)" fg:x="470" fg:w="180"/><text x="38.0617%" y="751.50">engine::session::state..</text></g><g><title>kernel::model::any_entity_changes (119 samples, 9.57%)</title><rect x="42.7192%" y="725" width="9.5736%" height="15" fill="rgb(210,112,21)" fg:x="531" fg:w="119"/><text x="42.9692%" y="735.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (32 samples, 2.57%)</title><rect x="49.7184%" y="709" width="2.5744%" height="15" fill="rgb(207,118,39)" fg:x="618" fg:w="32"/><text x="49.9684%" y="719.50">se..</text></g><g><title>serde_json::de::from_trait (32 samples, 2.57%)</title><rect x="49.7184%" y="693" width="2.5744%" height="15" fill="rgb(205,206,35)" fg:x="618" fg:w="32"/><text x="49.9684%" y="703.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 2.57%)</title><rect x="49.7184%" y="677" width="2.5744%" height="15" fill="rgb(222,120,2)" fg:x="618" fg:w="32"/><text x="49.9684%" y="687.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.57%)</title><rect x="49.7184%" y="661" width="2.5744%" height="15" fill="rgb(205,38,18)" fg:x="618" fg:w="32"/><text x="49.9684%" y="671.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.1319%" y="645" width="0.1609%" height="15" fill="rgb(226,61,2)" fg:x="648" fg:w="2"/><text x="52.3819%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.1319%" y="629" width="0.1609%" height="15" fill="rgb(242,161,23)" fg:x="648" fg:w="2"/><text x="52.3819%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2124%" y="613" width="0.0805%" height="15" fill="rgb(213,13,52)" fg:x="649" fg:w="1"/><text x="52.4624%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="52.4537%" y="629" width="0.0805%" height="15" fill="rgb(246,209,47)" fg:x="652" fg:w="1"/><text x="52.7037%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.5342%" y="565" width="0.0805%" height="15" fill="rgb(214,41,3)" fg:x="653" fg:w="1"/><text x="52.7842%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="52.6146%" y="469" width="0.0805%" height="15" fill="rgb(236,119,38)" fg:x="654" fg:w="1"/><text x="52.8646%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.6146%" y="453" width="0.0805%" height="15" fill="rgb(218,50,11)" fg:x="654" fg:w="1"/><text x="52.8646%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="52.5342%" y="613" width="0.3218%" height="15" fill="rgb(228,38,11)" fg:x="653" fg:w="4"/><text x="52.7842%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="52.5342%" y="597" width="0.3218%" height="15" fill="rgb(212,13,9)" fg:x="653" fg:w="4"/><text x="52.7842%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="52.5342%" y="581" width="0.3218%" height="15" fill="rgb(208,211,9)" fg:x="653" fg:w="4"/><text x="52.7842%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="52.6146%" y="565" width="0.2414%" height="15" fill="rgb(239,39,32)" fg:x="654" fg:w="3"/><text x="52.8646%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="52.6146%" y="549" width="0.2414%" height="15" fill="rgb(254,179,26)" fg:x="654" fg:w="3"/><text x="52.8646%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="52.6146%" y="533" width="0.2414%" height="15" fill="rgb(249,165,28)" fg:x="654" fg:w="3"/><text x="52.8646%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="52.6146%" y="517" width="0.2414%" height="15" fill="rgb(225,59,50)" fg:x="654" fg:w="3"/><text x="52.8646%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="52.6146%" y="501" width="0.2414%" height="15" fill="rgb(209,122,5)" fg:x="654" fg:w="3"/><text x="52.8646%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="52.6146%" y="485" width="0.2414%" height="15" fill="rgb(214,65,34)" fg:x="654" fg:w="3"/><text x="52.8646%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="52.6951%" y="469" width="0.1609%" height="15" fill="rgb(249,183,32)" fg:x="655" fg:w="2"/><text x="52.9451%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.6951%" y="453" width="0.1609%" height="15" fill="rgb(218,122,24)" fg:x="655" fg:w="2"/><text x="52.9451%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.6951%" y="437" width="0.1609%" height="15" fill="rgb(224,109,18)" fg:x="655" fg:w="2"/><text x="52.9451%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.6951%" y="421" width="0.1609%" height="15" fill="rgb(210,68,50)" fg:x="655" fg:w="2"/><text x="52.9451%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.6951%" y="405" width="0.1609%" height="15" fill="rgb(212,184,34)" fg:x="655" fg:w="2"/><text x="52.9451%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7755%" y="389" width="0.0805%" height="15" fill="rgb(238,105,48)" fg:x="656" fg:w="1"/><text x="53.0255%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="52.7755%" y="373" width="0.0805%" height="15" fill="rgb(222,134,54)" fg:x="656" fg:w="1"/><text x="53.0255%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="52.7755%" y="357" width="0.0805%" height="15" fill="rgb(246,24,43)" fg:x="656" fg:w="1"/><text x="53.0255%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="52.7755%" y="341" width="0.0805%" height="15" fill="rgb(227,169,22)" fg:x="656" fg:w="1"/><text x="53.0255%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.8560%" y="501" width="0.0805%" height="15" fill="rgb(253,152,4)" fg:x="657" fg:w="1"/><text x="53.1060%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="52.8560%" y="517" width="0.1609%" height="15" fill="rgb(219,158,36)" fg:x="657" fg:w="2"/><text x="53.1060%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.9364%" y="501" width="0.0805%" height="15" fill="rgb(251,128,40)" fg:x="658" fg:w="1"/><text x="53.1864%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.0169%" y="421" width="0.0805%" height="15" fill="rgb(254,101,39)" fg:x="659" fg:w="1"/><text x="53.2669%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.0169%" y="405" width="0.0805%" height="15" fill="rgb(221,168,40)" fg:x="659" fg:w="1"/><text x="53.2669%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.0169%" y="469" width="0.1609%" height="15" fill="rgb(221,14,27)" fg:x="659" fg:w="2"/><text x="53.2669%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.0169%" y="453" width="0.1609%" height="15" fill="rgb(207,36,43)" fg:x="659" fg:w="2"/><text x="53.2669%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.0169%" y="437" width="0.1609%" height="15" fill="rgb(240,172,53)" fg:x="659" fg:w="2"/><text x="53.2669%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="53.0973%" y="421" width="0.0805%" height="15" fill="rgb(241,138,43)" fg:x="660" fg:w="1"/><text x="53.3473%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.0973%" y="405" width="0.0805%" height="15" fill="rgb(227,78,19)" fg:x="660" fg:w="1"/><text x="53.3473%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="53.0973%" y="389" width="0.0805%" height="15" fill="rgb(215,127,44)" fg:x="660" fg:w="1"/><text x="53.3473%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.0973%" y="373" width="0.0805%" height="15" fill="rgb(227,13,10)" fg:x="660" fg:w="1"/><text x="53.3473%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="53.1778%" y="469" width="0.0805%" height="15" fill="rgb(249,177,6)" fg:x="661" fg:w="1"/><text x="53.4278%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.1778%" y="453" width="0.0805%" height="15" fill="rgb(215,154,26)" fg:x="661" fg:w="1"/><text x="53.4278%" y="463.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="52.8560%" y="597" width="0.5632%" height="15" fill="rgb(250,168,20)" fg:x="657" fg:w="7"/><text x="53.1060%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="52.8560%" y="581" width="0.5632%" height="15" fill="rgb(222,53,38)" fg:x="657" fg:w="7"/><text x="53.1060%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="52.8560%" y="565" width="0.5632%" height="15" fill="rgb(245,154,5)" fg:x="657" fg:w="7"/><text x="53.1060%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="52.8560%" y="549" width="0.5632%" height="15" fill="rgb(214,89,50)" fg:x="657" fg:w="7"/><text x="53.1060%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="52.8560%" y="533" width="0.5632%" height="15" fill="rgb(232,73,14)" fg:x="657" fg:w="7"/><text x="53.1060%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="53.0169%" y="517" width="0.4023%" height="15" fill="rgb(230,101,20)" fg:x="659" fg:w="5"/><text x="53.2669%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="53.0169%" y="501" width="0.4023%" height="15" fill="rgb(208,56,28)" fg:x="659" fg:w="5"/><text x="53.2669%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="53.0169%" y="485" width="0.4023%" height="15" fill="rgb(247,205,22)" fg:x="659" fg:w="5"/><text x="53.2669%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.2582%" y="469" width="0.1609%" height="15" fill="rgb(252,109,51)" fg:x="662" fg:w="2"/><text x="53.5082%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.2582%" y="453" width="0.1609%" height="15" fill="rgb(220,40,24)" fg:x="662" fg:w="2"/><text x="53.5082%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="53.3387%" y="437" width="0.0805%" height="15" fill="rgb(251,108,7)" fg:x="663" fg:w="1"/><text x="53.5887%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.4996%" y="565" width="0.0805%" height="15" fill="rgb(238,102,51)" fg:x="665" fg:w="1"/><text x="53.7496%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.6605%" y="421" width="0.0805%" height="15" fill="rgb(219,149,34)" fg:x="667" fg:w="1"/><text x="53.9105%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.6605%" y="405" width="0.0805%" height="15" fill="rgb(239,70,0)" fg:x="667" fg:w="1"/><text x="53.9105%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="53.6605%" y="389" width="0.0805%" height="15" fill="rgb(246,214,23)" fg:x="667" fg:w="1"/><text x="53.9105%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="53.6605%" y="373" width="0.0805%" height="15" fill="rgb(239,221,51)" fg:x="667" fg:w="1"/><text x="53.9105%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.6605%" y="357" width="0.0805%" height="15" fill="rgb(254,62,14)" fg:x="667" fg:w="1"/><text x="53.9105%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="53.6605%" y="485" width="0.1609%" height="15" fill="rgb(253,57,33)" fg:x="667" fg:w="2"/><text x="53.9105%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.6605%" y="469" width="0.1609%" height="15" fill="rgb(229,34,6)" fg:x="667" fg:w="2"/><text x="53.9105%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="53.6605%" y="453" width="0.1609%" height="15" fill="rgb(235,191,23)" fg:x="667" fg:w="2"/><text x="53.9105%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.6605%" y="437" width="0.1609%" height="15" fill="rgb(217,207,27)" fg:x="667" fg:w="2"/><text x="53.9105%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="53.7409%" y="421" width="0.0805%" height="15" fill="rgb(232,41,44)" fg:x="668" fg:w="1"/><text x="53.9909%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.7409%" y="405" width="0.0805%" height="15" fill="rgb(221,188,19)" fg:x="668" fg:w="1"/><text x="53.9909%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.7409%" y="389" width="0.0805%" height="15" fill="rgb(245,180,45)" fg:x="668" fg:w="1"/><text x="53.9909%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="53.7409%" y="373" width="0.0805%" height="15" fill="rgb(250,220,42)" fg:x="668" fg:w="1"/><text x="53.9909%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.7409%" y="357" width="0.0805%" height="15" fill="rgb(234,16,34)" fg:x="668" fg:w="1"/><text x="53.9909%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7409%" y="341" width="0.0805%" height="15" fill="rgb(233,217,23)" fg:x="668" fg:w="1"/><text x="53.9909%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="53.8214%" y="485" width="0.0805%" height="15" fill="rgb(209,22,46)" fg:x="669" fg:w="1"/><text x="54.0714%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="53.8214%" y="469" width="0.0805%" height="15" fill="rgb(213,101,18)" fg:x="669" fg:w="1"/><text x="54.0714%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="53.6605%" y="517" width="0.3218%" height="15" fill="rgb(215,179,52)" fg:x="667" fg:w="4"/><text x="53.9105%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="53.6605%" y="501" width="0.3218%" height="15" fill="rgb(223,50,25)" fg:x="667" fg:w="4"/><text x="53.9105%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.9019%" y="485" width="0.0805%" height="15" fill="rgb(224,51,44)" fg:x="670" fg:w="1"/><text x="54.1519%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.9019%" y="469" width="0.0805%" height="15" fill="rgb(224,13,54)" fg:x="670" fg:w="1"/><text x="54.1519%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="53.9019%" y="453" width="0.0805%" height="15" fill="rgb(219,58,47)" fg:x="670" fg:w="1"/><text x="54.1519%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.0628%" y="485" width="0.0805%" height="15" fill="rgb(246,124,34)" fg:x="672" fg:w="1"/><text x="54.3128%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.0628%" y="469" width="0.0805%" height="15" fill="rgb(245,109,25)" fg:x="672" fg:w="1"/><text x="54.3128%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="53.5800%" y="565" width="0.6436%" height="15" fill="rgb(235,48,23)" fg:x="666" fg:w="8"/><text x="53.8300%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="53.5800%" y="549" width="0.6436%" height="15" fill="rgb(229,203,36)" fg:x="666" fg:w="8"/><text x="53.8300%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="53.6605%" y="533" width="0.5632%" height="15" fill="rgb(234,180,9)" fg:x="667" fg:w="7"/><text x="53.9105%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="53.9823%" y="517" width="0.2414%" height="15" fill="rgb(228,98,45)" fg:x="671" fg:w="3"/><text x="54.2323%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="53.9823%" y="501" width="0.2414%" height="15" fill="rgb(240,24,36)" fg:x="671" fg:w="3"/><text x="54.2323%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="54.1432%" y="485" width="0.0805%" height="15" fill="rgb(227,154,19)" fg:x="673" fg:w="1"/><text x="54.3932%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="54.1432%" y="469" width="0.0805%" height="15" fill="rgb(231,2,48)" fg:x="673" fg:w="1"/><text x="54.3932%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="54.1432%" y="453" width="0.0805%" height="15" fill="rgb(219,216,0)" fg:x="673" fg:w="1"/><text x="54.3932%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.1432%" y="437" width="0.0805%" height="15" fill="rgb(251,88,0)" fg:x="673" fg:w="1"/><text x="54.3932%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.1432%" y="421" width="0.0805%" height="15" fill="rgb(242,45,45)" fg:x="673" fg:w="1"/><text x="54.3932%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.1432%" y="405" width="0.0805%" height="15" fill="rgb(218,149,45)" fg:x="673" fg:w="1"/><text x="54.3932%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (18 samples, 1.45%)</title><rect x="52.8560%" y="613" width="1.4481%" height="15" fill="rgb(247,194,10)" fg:x="657" fg:w="18"/><text x="53.1060%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="53.4191%" y="597" width="0.8850%" height="15" fill="rgb(234,33,37)" fg:x="664" fg:w="11"/><text x="53.6691%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="53.4191%" y="581" width="0.8850%" height="15" fill="rgb(218,61,13)" fg:x="664" fg:w="11"/><text x="53.6691%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.2237%" y="565" width="0.0805%" height="15" fill="rgb(210,80,52)" fg:x="674" fg:w="1"/><text x="54.4737%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.2237%" y="549" width="0.0805%" height="15" fill="rgb(218,203,27)" fg:x="674" fg:w="1"/><text x="54.4737%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.2237%" y="533" width="0.0805%" height="15" fill="rgb(209,126,33)" fg:x="674" fg:w="1"/><text x="54.4737%" y="543.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (25 samples, 2.01%)</title><rect x="52.3733%" y="725" width="2.0113%" height="15" fill="rgb(234,173,41)" fg:x="651" fg:w="25"/><text x="52.6233%" y="735.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (25 samples, 2.01%)</title><rect x="52.3733%" y="709" width="2.0113%" height="15" fill="rgb(228,166,9)" fg:x="651" fg:w="25"/><text x="52.6233%" y="719.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (25 samples, 2.01%)</title><rect x="52.3733%" y="693" width="2.0113%" height="15" fill="rgb(208,124,43)" fg:x="651" fg:w="25"/><text x="52.6233%" y="703.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (25 samples, 2.01%)</title><rect x="52.3733%" y="677" width="2.0113%" height="15" fill="rgb(212,154,38)" fg:x="651" fg:w="25"/><text x="52.6233%" y="687.50">k..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (25 samples, 2.01%)</title><rect x="52.3733%" y="661" width="2.0113%" height="15" fill="rgb(246,179,35)" fg:x="651" fg:w="25"/><text x="52.6233%" y="671.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (24 samples, 1.93%)</title><rect x="52.4537%" y="645" width="1.9308%" height="15" fill="rgb(251,3,50)" fg:x="652" fg:w="24"/><text x="52.7037%" y="655.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (23 samples, 1.85%)</title><rect x="52.5342%" y="629" width="1.8504%" height="15" fill="rgb(219,96,8)" fg:x="653" fg:w="23"/><text x="52.7842%" y="639.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="54.3041%" y="613" width="0.0805%" height="15" fill="rgb(251,216,33)" fg:x="675" fg:w="1"/><text x="54.5541%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="54.3041%" y="597" width="0.0805%" height="15" fill="rgb(243,145,29)" fg:x="675" fg:w="1"/><text x="54.5541%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="54.3041%" y="581" width="0.0805%" height="15" fill="rgb(210,75,20)" fg:x="675" fg:w="1"/><text x="54.5541%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.3041%" y="565" width="0.0805%" height="15" fill="rgb(235,56,8)" fg:x="675" fg:w="1"/><text x="54.5541%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.3041%" y="549" width="0.0805%" height="15" fill="rgb(226,175,49)" fg:x="675" fg:w="1"/><text x="54.5541%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.3041%" y="533" width="0.0805%" height="15" fill="rgb(242,204,23)" fg:x="675" fg:w="1"/><text x="54.5541%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="54.5455%" y="581" width="0.0805%" height="15" fill="rgb(225,104,24)" fg:x="678" fg:w="1"/><text x="54.7955%" y="591.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="54.6259%" y="581" width="0.0805%" height="15" fill="rgb(253,34,1)" fg:x="679" fg:w="1"/><text x="54.8759%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.6259%" y="565" width="0.0805%" height="15" fill="rgb(233,199,23)" fg:x="679" fg:w="1"/><text x="54.8759%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.6259%" y="549" width="0.0805%" height="15" fill="rgb(247,7,51)" fg:x="679" fg:w="1"/><text x="54.8759%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.6259%" y="533" width="0.0805%" height="15" fill="rgb(214,146,12)" fg:x="679" fg:w="1"/><text x="54.8759%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.6259%" y="517" width="0.0805%" height="15" fill="rgb(234,181,43)" fg:x="679" fg:w="1"/><text x="54.8759%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.6259%" y="501" width="0.0805%" height="15" fill="rgb(239,148,6)" fg:x="679" fg:w="1"/><text x="54.8759%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.6259%" y="485" width="0.0805%" height="15" fill="rgb(206,151,17)" fg:x="679" fg:w="1"/><text x="54.8759%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="54.6259%" y="469" width="0.0805%" height="15" fill="rgb(213,215,10)" fg:x="679" fg:w="1"/><text x="54.8759%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="54.6259%" y="453" width="0.0805%" height="15" fill="rgb(215,220,44)" fg:x="679" fg:w="1"/><text x="54.8759%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2695%" y="437" width="0.0805%" height="15" fill="rgb(245,205,37)" fg:x="687" fg:w="1"/><text x="55.5195%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="55.1891%" y="453" width="0.2414%" height="15" fill="rgb(245,130,43)" fg:x="686" fg:w="3"/><text x="55.4391%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.3500%" y="437" width="0.0805%" height="15" fill="rgb(231,227,38)" fg:x="688" fg:w="1"/><text x="55.6000%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.3500%" y="421" width="0.0805%" height="15" fill="rgb(233,185,4)" fg:x="688" fg:w="1"/><text x="55.6000%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.3500%" y="405" width="0.0805%" height="15" fill="rgb(224,154,43)" fg:x="688" fg:w="1"/><text x="55.6000%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.3500%" y="389" width="0.0805%" height="15" fill="rgb(235,156,15)" fg:x="688" fg:w="1"/><text x="55.6000%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.3500%" y="373" width="0.0805%" height="15" fill="rgb(211,55,43)" fg:x="688" fg:w="1"/><text x="55.6000%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.3500%" y="357" width="0.0805%" height="15" fill="rgb(247,149,40)" fg:x="688" fg:w="1"/><text x="55.6000%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.3500%" y="341" width="0.0805%" height="15" fill="rgb(232,171,16)" fg:x="688" fg:w="1"/><text x="55.6000%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.3500%" y="325" width="0.0805%" height="15" fill="rgb(215,117,49)" fg:x="688" fg:w="1"/><text x="55.6000%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.3500%" y="309" width="0.0805%" height="15" fill="rgb(246,194,11)" fg:x="688" fg:w="1"/><text x="55.6000%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.3500%" y="293" width="0.0805%" height="15" fill="rgb(242,101,44)" fg:x="688" fg:w="1"/><text x="55.6000%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.3500%" y="277" width="0.0805%" height="15" fill="rgb(226,174,6)" fg:x="688" fg:w="1"/><text x="55.6000%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3500%" y="261" width="0.0805%" height="15" fill="rgb(213,150,20)" fg:x="688" fg:w="1"/><text x="55.6000%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="55.0282%" y="501" width="0.4827%" height="15" fill="rgb(222,124,42)" fg:x="684" fg:w="6"/><text x="55.2782%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="55.1086%" y="485" width="0.4023%" height="15" fill="rgb(250,19,47)" fg:x="685" fg:w="5"/><text x="55.3586%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="55.1086%" y="469" width="0.4023%" height="15" fill="rgb(241,217,19)" fg:x="685" fg:w="5"/><text x="55.3586%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.4304%" y="453" width="0.0805%" height="15" fill="rgb(207,210,34)" fg:x="689" fg:w="1"/><text x="55.6804%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.4304%" y="437" width="0.0805%" height="15" fill="rgb(244,45,4)" fg:x="689" fg:w="1"/><text x="55.6804%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.4304%" y="421" width="0.0805%" height="15" fill="rgb(252,134,50)" fg:x="689" fg:w="1"/><text x="55.6804%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.4304%" y="405" width="0.0805%" height="15" fill="rgb(238,74,2)" fg:x="689" fg:w="1"/><text x="55.6804%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.4304%" y="389" width="0.0805%" height="15" fill="rgb(226,58,46)" fg:x="689" fg:w="1"/><text x="55.6804%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.4304%" y="373" width="0.0805%" height="15" fill="rgb(232,83,35)" fg:x="689" fg:w="1"/><text x="55.6804%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.4304%" y="357" width="0.0805%" height="15" fill="rgb(212,148,47)" fg:x="689" fg:w="1"/><text x="55.6804%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.4304%" y="341" width="0.0805%" height="15" fill="rgb(235,29,1)" fg:x="689" fg:w="1"/><text x="55.6804%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.4304%" y="325" width="0.0805%" height="15" fill="rgb(247,55,37)" fg:x="689" fg:w="1"/><text x="55.6804%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.4304%" y="309" width="0.0805%" height="15" fill="rgb(222,48,3)" fg:x="689" fg:w="1"/><text x="55.6804%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.4304%" y="293" width="0.0805%" height="15" fill="rgb(234,21,33)" fg:x="689" fg:w="1"/><text x="55.6804%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.4304%" y="277" width="0.0805%" height="15" fill="rgb(247,178,53)" fg:x="689" fg:w="1"/><text x="55.6804%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.5109%" y="501" width="0.0805%" height="15" fill="rgb(225,75,7)" fg:x="690" fg:w="1"/><text x="55.7609%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="55.5109%" y="485" width="0.0805%" height="15" fill="rgb(219,199,7)" fg:x="690" fg:w="1"/><text x="55.7609%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.5109%" y="469" width="0.0805%" height="15" fill="rgb(209,93,42)" fg:x="690" fg:w="1"/><text x="55.7609%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.5109%" y="453" width="0.0805%" height="15" fill="rgb(240,175,17)" fg:x="690" fg:w="1"/><text x="55.7609%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.5109%" y="437" width="0.0805%" height="15" fill="rgb(232,106,7)" fg:x="690" fg:w="1"/><text x="55.7609%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.5109%" y="421" width="0.0805%" height="15" fill="rgb(242,106,43)" fg:x="690" fg:w="1"/><text x="55.7609%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.5109%" y="405" width="0.0805%" height="15" fill="rgb(242,61,37)" fg:x="690" fg:w="1"/><text x="55.7609%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.5913%" y="405" width="0.0805%" height="15" fill="rgb(205,72,10)" fg:x="691" fg:w="1"/><text x="55.8413%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="55.6718%" y="405" width="0.3218%" height="15" fill="rgb(214,184,36)" fg:x="692" fg:w="4"/><text x="55.9218%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="55.8327%" y="389" width="0.1609%" height="15" fill="rgb(206,107,18)" fg:x="694" fg:w="2"/><text x="56.0827%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.1545%" y="373" width="0.0805%" height="15" fill="rgb(210,75,5)" fg:x="698" fg:w="1"/><text x="56.4045%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.1545%" y="357" width="0.0805%" height="15" fill="rgb(205,3,19)" fg:x="698" fg:w="1"/><text x="56.4045%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="56.1545%" y="341" width="0.0805%" height="15" fill="rgb(207,181,42)" fg:x="698" fg:w="1"/><text x="56.4045%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (18 samples, 1.45%)</title><rect x="54.8673%" y="549" width="1.4481%" height="15" fill="rgb(229,179,43)" fg:x="682" fg:w="18"/><text x="55.1173%" y="559.50"></text></g><g><title>kernel::model::props::load_props (17 samples, 1.37%)</title><rect x="54.9477%" y="533" width="1.3677%" height="15" fill="rgb(246,95,30)" fg:x="683" fg:w="17"/><text x="55.1977%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (17 samples, 1.37%)</title><rect x="54.9477%" y="517" width="1.3677%" height="15" fill="rgb(234,144,45)" fg:x="683" fg:w="17"/><text x="55.1977%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="55.5913%" y="501" width="0.7241%" height="15" fill="rgb(250,54,25)" fg:x="691" fg:w="9"/><text x="55.8413%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="55.5913%" y="485" width="0.7241%" height="15" fill="rgb(215,195,40)" fg:x="691" fg:w="9"/><text x="55.8413%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="55.5913%" y="469" width="0.7241%" height="15" fill="rgb(233,188,42)" fg:x="691" fg:w="9"/><text x="55.8413%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="55.5913%" y="453" width="0.7241%" height="15" fill="rgb(247,227,35)" fg:x="691" fg:w="9"/><text x="55.8413%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="55.5913%" y="437" width="0.7241%" height="15" fill="rgb(249,124,27)" fg:x="691" fg:w="9"/><text x="55.8413%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="55.5913%" y="421" width="0.7241%" height="15" fill="rgb(219,207,25)" fg:x="691" fg:w="9"/><text x="55.8413%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="55.9936%" y="405" width="0.3218%" height="15" fill="rgb(241,216,47)" fg:x="696" fg:w="4"/><text x="56.2436%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.9936%" y="389" width="0.3218%" height="15" fill="rgb(233,82,50)" fg:x="696" fg:w="4"/><text x="56.2436%" y="399.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="56.2349%" y="373" width="0.0805%" height="15" fill="rgb(232,63,2)" fg:x="699" fg:w="1"/><text x="56.4849%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.3154%" y="533" width="0.0805%" height="15" fill="rgb(236,184,28)" fg:x="700" fg:w="1"/><text x="56.5654%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.6372%" y="437" width="0.0805%" height="15" fill="rgb(254,63,27)" fg:x="704" fg:w="1"/><text x="56.8872%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.6372%" y="421" width="0.0805%" height="15" fill="rgb(253,106,28)" fg:x="704" fg:w="1"/><text x="56.8872%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.6372%" y="405" width="0.0805%" height="15" fill="rgb(225,141,39)" fg:x="704" fg:w="1"/><text x="56.8872%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.6372%" y="389" width="0.0805%" height="15" fill="rgb(222,157,20)" fg:x="704" fg:w="1"/><text x="56.8872%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.6372%" y="373" width="0.0805%" height="15" fill="rgb(210,190,9)" fg:x="704" fg:w="1"/><text x="56.8872%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.6372%" y="357" width="0.0805%" height="15" fill="rgb(242,167,7)" fg:x="704" fg:w="1"/><text x="56.8872%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="56.6372%" y="341" width="0.0805%" height="15" fill="rgb(227,82,41)" fg:x="704" fg:w="1"/><text x="56.8872%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.6372%" y="325" width="0.0805%" height="15" fill="rgb(222,131,13)" fg:x="704" fg:w="1"/><text x="56.8872%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="56.5567%" y="453" width="0.4023%" height="15" fill="rgb(221,98,26)" fg:x="703" fg:w="5"/><text x="56.8067%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.7176%" y="437" width="0.2414%" height="15" fill="rgb(251,63,52)" fg:x="705" fg:w="3"/><text x="56.9676%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.7176%" y="421" width="0.2414%" height="15" fill="rgb(246,25,43)" fg:x="705" fg:w="3"/><text x="56.9676%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="56.7176%" y="405" width="0.2414%" height="15" fill="rgb(247,167,15)" fg:x="705" fg:w="3"/><text x="56.9676%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="56.7176%" y="389" width="0.2414%" height="15" fill="rgb(240,104,42)" fg:x="705" fg:w="3"/><text x="56.9676%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="56.7176%" y="373" width="0.2414%" height="15" fill="rgb(224,54,6)" fg:x="705" fg:w="3"/><text x="56.9676%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="56.7176%" y="357" width="0.2414%" height="15" fill="rgb(244,108,35)" fg:x="705" fg:w="3"/><text x="56.9676%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="56.7176%" y="341" width="0.2414%" height="15" fill="rgb(216,154,2)" fg:x="705" fg:w="3"/><text x="56.9676%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="56.7176%" y="325" width="0.2414%" height="15" fill="rgb(222,8,47)" fg:x="705" fg:w="3"/><text x="56.9676%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="56.7176%" y="309" width="0.2414%" height="15" fill="rgb(252,93,1)" fg:x="705" fg:w="3"/><text x="56.9676%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="56.7176%" y="293" width="0.2414%" height="15" fill="rgb(223,226,51)" fg:x="705" fg:w="3"/><text x="56.9676%" y="303.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="56.7176%" y="277" width="0.2414%" height="15" fill="rgb(206,147,9)" fg:x="705" fg:w="3"/><text x="56.9676%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="56.7176%" y="261" width="0.2414%" height="15" fill="rgb(248,180,41)" fg:x="705" fg:w="3"/><text x="56.9676%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="56.5567%" y="469" width="0.4827%" height="15" fill="rgb(209,47,50)" fg:x="703" fg:w="6"/><text x="56.8067%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9590%" y="453" width="0.0805%" height="15" fill="rgb(243,65,31)" fg:x="708" fg:w="1"/><text x="57.2090%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9590%" y="437" width="0.0805%" height="15" fill="rgb(228,128,1)" fg:x="708" fg:w="1"/><text x="57.2090%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.9590%" y="421" width="0.0805%" height="15" fill="rgb(231,192,16)" fg:x="708" fg:w="1"/><text x="57.2090%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.9590%" y="405" width="0.0805%" height="15" fill="rgb(224,26,40)" fg:x="708" fg:w="1"/><text x="57.2090%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.9590%" y="389" width="0.0805%" height="15" fill="rgb(214,192,17)" fg:x="708" fg:w="1"/><text x="57.2090%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.9590%" y="373" width="0.0805%" height="15" fill="rgb(225,147,18)" fg:x="708" fg:w="1"/><text x="57.2090%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.9590%" y="357" width="0.0805%" height="15" fill="rgb(205,35,11)" fg:x="708" fg:w="1"/><text x="57.2090%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.9590%" y="341" width="0.0805%" height="15" fill="rgb(242,40,42)" fg:x="708" fg:w="1"/><text x="57.2090%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.9590%" y="325" width="0.0805%" height="15" fill="rgb(250,170,13)" fg:x="708" fg:w="1"/><text x="57.2090%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.9590%" y="309" width="0.0805%" height="15" fill="rgb(240,161,28)" fg:x="708" fg:w="1"/><text x="57.2090%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.9590%" y="293" width="0.0805%" height="15" fill="rgb(245,179,12)" fg:x="708" fg:w="1"/><text x="57.2090%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.9590%" y="277" width="0.0805%" height="15" fill="rgb(250,92,32)" fg:x="708" fg:w="1"/><text x="57.2090%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="56.5567%" y="501" width="0.5632%" height="15" fill="rgb(233,10,40)" fg:x="703" fg:w="7"/><text x="56.8067%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="56.5567%" y="485" width="0.5632%" height="15" fill="rgb(217,98,1)" fg:x="703" fg:w="7"/><text x="56.8067%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.0394%" y="469" width="0.0805%" height="15" fill="rgb(238,202,7)" fg:x="709" fg:w="1"/><text x="57.2894%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.0394%" y="453" width="0.0805%" height="15" fill="rgb(222,91,3)" fg:x="709" fg:w="1"/><text x="57.2894%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.0394%" y="437" width="0.0805%" height="15" fill="rgb(211,170,49)" fg:x="709" fg:w="1"/><text x="57.2894%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.0394%" y="421" width="0.0805%" height="15" fill="rgb(253,139,18)" fg:x="709" fg:w="1"/><text x="57.2894%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.0394%" y="405" width="0.0805%" height="15" fill="rgb(222,4,43)" fg:x="709" fg:w="1"/><text x="57.2894%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.0394%" y="389" width="0.0805%" height="15" fill="rgb(207,205,12)" fg:x="709" fg:w="1"/><text x="57.2894%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.0394%" y="373" width="0.0805%" height="15" fill="rgb(216,159,46)" fg:x="709" fg:w="1"/><text x="57.2894%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.0394%" y="357" width="0.0805%" height="15" fill="rgb(236,115,1)" fg:x="709" fg:w="1"/><text x="57.2894%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.0394%" y="341" width="0.0805%" height="15" fill="rgb(251,35,33)" fg:x="709" fg:w="1"/><text x="57.2894%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.0394%" y="325" width="0.0805%" height="15" fill="rgb(248,62,51)" fg:x="709" fg:w="1"/><text x="57.2894%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.0394%" y="309" width="0.0805%" height="15" fill="rgb(254,180,19)" fg:x="709" fg:w="1"/><text x="57.2894%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.0394%" y="293" width="0.0805%" height="15" fill="rgb(217,100,32)" fg:x="709" fg:w="1"/><text x="57.2894%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.1199%" y="469" width="0.0805%" height="15" fill="rgb(224,71,22)" fg:x="710" fg:w="1"/><text x="57.3699%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.1199%" y="453" width="0.0805%" height="15" fill="rgb(251,185,33)" fg:x="710" fg:w="1"/><text x="57.3699%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.2003%" y="437" width="0.0805%" height="15" fill="rgb(209,75,48)" fg:x="711" fg:w="1"/><text x="57.4503%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="57.4417%" y="405" width="0.1609%" height="15" fill="rgb(253,190,16)" fg:x="714" fg:w="2"/><text x="57.6917%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.6026%" y="405" width="0.0805%" height="15" fill="rgb(226,140,1)" fg:x="716" fg:w="1"/><text x="57.8526%" y="415.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="57.8439%" y="373" width="0.2414%" height="15" fill="rgb(206,75,30)" fg:x="719" fg:w="3"/><text x="58.0939%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (24 samples, 1.93%)</title><rect x="56.3154%" y="549" width="1.9308%" height="15" fill="rgb(231,208,37)" fg:x="700" fg:w="24"/><text x="56.5654%" y="559.50">&lt;..</text></g><g><title>kernel::model::props::load_props (23 samples, 1.85%)</title><rect x="56.3958%" y="533" width="1.8504%" height="15" fill="rgb(238,136,40)" fg:x="701" fg:w="23"/><text x="56.6458%" y="543.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (23 samples, 1.85%)</title><rect x="56.3958%" y="517" width="1.8504%" height="15" fill="rgb(247,137,17)" fg:x="701" fg:w="23"/><text x="56.6458%" y="527.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.13%)</title><rect x="57.1199%" y="501" width="1.1263%" height="15" fill="rgb(240,60,40)" fg:x="710" fg:w="14"/><text x="57.3699%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.13%)</title><rect x="57.1199%" y="485" width="1.1263%" height="15" fill="rgb(236,68,50)" fg:x="710" fg:w="14"/><text x="57.3699%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.05%)</title><rect x="57.2003%" y="469" width="1.0459%" height="15" fill="rgb(230,42,12)" fg:x="711" fg:w="13"/><text x="57.4503%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.05%)</title><rect x="57.2003%" y="453" width="1.0459%" height="15" fill="rgb(219,16,16)" fg:x="711" fg:w="13"/><text x="57.4503%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.97%)</title><rect x="57.2808%" y="437" width="0.9654%" height="15" fill="rgb(220,38,35)" fg:x="712" fg:w="12"/><text x="57.5308%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="57.3612%" y="421" width="0.8850%" height="15" fill="rgb(228,33,1)" fg:x="713" fg:w="11"/><text x="57.6112%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="57.6830%" y="405" width="0.5632%" height="15" fill="rgb(241,46,31)" fg:x="717" fg:w="7"/><text x="57.9330%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="57.7635%" y="389" width="0.4827%" height="15" fill="rgb(232,58,20)" fg:x="718" fg:w="6"/><text x="58.0135%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.0853%" y="373" width="0.1609%" height="15" fill="rgb(206,228,53)" fg:x="722" fg:w="2"/><text x="58.3353%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.0853%" y="357" width="0.1609%" height="15" fill="rgb(206,88,33)" fg:x="722" fg:w="2"/><text x="58.3353%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.1657%" y="341" width="0.0805%" height="15" fill="rgb(238,69,7)" fg:x="723" fg:w="1"/><text x="58.4157%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.2462%" y="549" width="0.0805%" height="15" fill="rgb(250,21,46)" fg:x="724" fg:w="1"/><text x="58.4962%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.2462%" y="533" width="0.0805%" height="15" fill="rgb(215,212,21)" fg:x="724" fg:w="1"/><text x="58.4962%" y="543.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (45 samples, 3.62%)</title><rect x="54.7868%" y="565" width="3.6203%" height="15" fill="rgb(211,35,12)" fg:x="681" fg:w="45"/><text x="55.0368%" y="575.50">&lt;&amp;ke..</text></g><g><title>plugins_core::looking::model::Unqualified::qualify (1 samples, 0.08%)</title><rect x="58.3266%" y="549" width="0.0805%" height="15" fill="rgb(231,184,16)" fg:x="725" fg:w="1"/><text x="58.5766%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="58.4071%" y="565" width="0.0805%" height="15" fill="rgb(242,140,15)" fg:x="726" fg:w="1"/><text x="58.6571%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="58.5680%" y="533" width="0.0805%" height="15" fill="rgb(220,37,14)" fg:x="728" fg:w="1"/><text x="58.8180%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.5680%" y="517" width="0.0805%" height="15" fill="rgb(223,146,22)" fg:x="728" fg:w="1"/><text x="58.8180%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.5680%" y="501" width="0.0805%" height="15" fill="rgb(216,132,15)" fg:x="728" fg:w="1"/><text x="58.8180%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.5680%" y="485" width="0.0805%" height="15" fill="rgb(248,83,5)" fg:x="728" fg:w="1"/><text x="58.8180%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.5680%" y="469" width="0.0805%" height="15" fill="rgb(231,206,48)" fg:x="728" fg:w="1"/><text x="58.8180%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.5680%" y="453" width="0.0805%" height="15" fill="rgb(253,185,37)" fg:x="728" fg:w="1"/><text x="58.8180%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.5680%" y="437" width="0.0805%" height="15" fill="rgb(208,21,44)" fg:x="728" fg:w="1"/><text x="58.8180%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.5680%" y="421" width="0.0805%" height="15" fill="rgb(236,125,4)" fg:x="728" fg:w="1"/><text x="58.8180%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.5680%" y="405" width="0.0805%" height="15" fill="rgb(226,134,25)" fg:x="728" fg:w="1"/><text x="58.8180%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.5680%" y="389" width="0.0805%" height="15" fill="rgb(250,201,12)" fg:x="728" fg:w="1"/><text x="58.8180%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.5680%" y="373" width="0.0805%" height="15" fill="rgb(225,92,18)" fg:x="728" fg:w="1"/><text x="58.8180%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.5680%" y="357" width="0.0805%" height="15" fill="rgb(227,35,22)" fg:x="728" fg:w="1"/><text x="58.8180%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5680%" y="341" width="0.0805%" height="15" fill="rgb(214,180,52)" fg:x="728" fg:w="1"/><text x="58.8180%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8093%" y="373" width="0.0805%" height="15" fill="rgb(233,55,38)" fg:x="731" fg:w="1"/><text x="59.0593%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (6 samples, 0.48%)</title><rect x="58.4875%" y="565" width="0.4827%" height="15" fill="rgb(249,171,43)" fg:x="727" fg:w="6"/><text x="58.7375%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="58.5680%" y="549" width="0.4023%" height="15" fill="rgb(239,87,2)" fg:x="728" fg:w="5"/><text x="58.8180%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="58.6484%" y="533" width="0.3218%" height="15" fill="rgb(248,141,5)" fg:x="729" fg:w="4"/><text x="58.8984%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="58.6484%" y="517" width="0.3218%" height="15" fill="rgb(238,33,42)" fg:x="729" fg:w="4"/><text x="58.8984%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="58.8093%" y="501" width="0.1609%" height="15" fill="rgb(231,57,19)" fg:x="731" fg:w="2"/><text x="59.0593%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="58.8093%" y="485" width="0.1609%" height="15" fill="rgb(214,78,53)" fg:x="731" fg:w="2"/><text x="59.0593%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="58.8093%" y="469" width="0.1609%" height="15" fill="rgb(206,132,29)" fg:x="731" fg:w="2"/><text x="59.0593%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="58.8093%" y="453" width="0.1609%" height="15" fill="rgb(248,174,31)" fg:x="731" fg:w="2"/><text x="59.0593%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="58.8093%" y="437" width="0.1609%" height="15" fill="rgb(221,87,13)" fg:x="731" fg:w="2"/><text x="59.0593%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="58.8093%" y="421" width="0.1609%" height="15" fill="rgb(223,197,17)" fg:x="731" fg:w="2"/><text x="59.0593%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="58.8093%" y="405" width="0.1609%" height="15" fill="rgb(220,144,50)" fg:x="731" fg:w="2"/><text x="59.0593%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="58.8093%" y="389" width="0.1609%" height="15" fill="rgb(244,201,11)" fg:x="731" fg:w="2"/><text x="59.0593%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="58.8898%" y="373" width="0.0805%" height="15" fill="rgb(249,81,34)" fg:x="732" fg:w="1"/><text x="59.1398%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="58.8898%" y="357" width="0.0805%" height="15" fill="rgb(205,161,12)" fg:x="732" fg:w="1"/><text x="59.1398%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="58.8898%" y="341" width="0.0805%" height="15" fill="rgb(252,139,50)" fg:x="732" fg:w="1"/><text x="59.1398%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="58.8898%" y="325" width="0.0805%" height="15" fill="rgb(205,169,14)" fg:x="732" fg:w="1"/><text x="59.1398%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="58.8898%" y="309" width="0.0805%" height="15" fill="rgb(248,198,33)" fg:x="732" fg:w="1"/><text x="59.1398%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="58.8898%" y="293" width="0.0805%" height="15" fill="rgb(236,23,21)" fg:x="732" fg:w="1"/><text x="59.1398%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="58.8898%" y="277" width="0.0805%" height="15" fill="rgb(231,13,38)" fg:x="732" fg:w="1"/><text x="59.1398%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="58.8898%" y="261" width="0.0805%" height="15" fill="rgb(239,139,21)" fg:x="732" fg:w="1"/><text x="59.1398%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="58.8898%" y="245" width="0.0805%" height="15" fill="rgb(222,164,45)" fg:x="732" fg:w="1"/><text x="59.1398%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="58.8898%" y="229" width="0.0805%" height="15" fill="rgb(230,52,27)" fg:x="732" fg:w="1"/><text x="59.1398%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="58.8898%" y="213" width="0.0805%" height="15" fill="rgb(227,143,42)" fg:x="732" fg:w="1"/><text x="59.1398%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="58.8898%" y="197" width="0.0805%" height="15" fill="rgb(249,127,1)" fg:x="732" fg:w="1"/><text x="59.1398%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="58.8898%" y="181" width="0.0805%" height="15" fill="rgb(243,107,26)" fg:x="732" fg:w="1"/><text x="59.1398%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="58.8898%" y="165" width="0.0805%" height="15" fill="rgb(225,7,45)" fg:x="732" fg:w="1"/><text x="59.1398%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="58.8898%" y="149" width="0.0805%" height="15" fill="rgb(241,88,38)" fg:x="732" fg:w="1"/><text x="59.1398%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="58.8898%" y="133" width="0.0805%" height="15" fill="rgb(226,121,9)" fg:x="732" fg:w="1"/><text x="59.1398%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="58.8898%" y="117" width="0.0805%" height="15" fill="rgb(253,60,29)" fg:x="732" fg:w="1"/><text x="59.1398%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="58.8898%" y="101" width="0.0805%" height="15" fill="rgb(244,181,39)" fg:x="732" fg:w="1"/><text x="59.1398%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="58.8898%" y="85" width="0.0805%" height="15" fill="rgb(252,203,31)" fg:x="732" fg:w="1"/><text x="59.1398%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="58.8898%" y="69" width="0.0805%" height="15" fill="rgb(224,120,8)" fg:x="732" fg:w="1"/><text x="59.1398%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="58.8898%" y="53" width="0.0805%" height="15" fill="rgb(205,171,54)" fg:x="732" fg:w="1"/><text x="59.1398%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="58.8898%" y="37" width="0.0805%" height="15" fill="rgb(235,89,11)" fg:x="732" fg:w="1"/><text x="59.1398%" y="47.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.9702%" y="565" width="0.0805%" height="15" fill="rgb(212,180,28)" fg:x="733" fg:w="1"/><text x="59.2202%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="59.0507%" y="565" width="0.1609%" height="15" fill="rgb(247,84,49)" fg:x="734" fg:w="2"/><text x="59.3007%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="59.0507%" y="549" width="0.1609%" height="15" fill="rgb(236,187,52)" fg:x="734" fg:w="2"/><text x="59.3007%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="59.2116%" y="565" width="0.0805%" height="15" fill="rgb(227,24,15)" fg:x="736" fg:w="1"/><text x="59.4616%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="59.2116%" y="549" width="0.0805%" height="15" fill="rgb(227,211,13)" fg:x="736" fg:w="1"/><text x="59.4616%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.2116%" y="533" width="0.0805%" height="15" fill="rgb(245,52,14)" fg:x="736" fg:w="1"/><text x="59.4616%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::moving::model::Occupyable&gt;&gt; (2 samples, 0.16%)</title><rect x="59.2920%" y="565" width="0.1609%" height="15" fill="rgb(225,185,13)" fg:x="737" fg:w="2"/><text x="59.5420%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="59.2920%" y="549" width="0.1609%" height="15" fill="rgb(217,160,29)" fg:x="737" fg:w="2"/><text x="59.5420%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="59.2920%" y="533" width="0.1609%" height="15" fill="rgb(216,115,53)" fg:x="737" fg:w="2"/><text x="59.5420%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4529%" y="501" width="0.0805%" height="15" fill="rgb(236,99,5)" fg:x="739" fg:w="1"/><text x="59.7029%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4529%" y="485" width="0.0805%" height="15" fill="rgb(222,60,38)" fg:x="739" fg:w="1"/><text x="59.7029%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.4529%" y="469" width="0.0805%" height="15" fill="rgb(212,82,22)" fg:x="739" fg:w="1"/><text x="59.7029%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.4529%" y="453" width="0.0805%" height="15" fill="rgb(214,48,28)" fg:x="739" fg:w="1"/><text x="59.7029%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.4529%" y="437" width="0.0805%" height="15" fill="rgb(245,196,50)" fg:x="739" fg:w="1"/><text x="59.7029%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.4529%" y="421" width="0.0805%" height="15" fill="rgb(225,159,46)" fg:x="739" fg:w="1"/><text x="59.7029%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.4529%" y="405" width="0.0805%" height="15" fill="rgb(207,195,48)" fg:x="739" fg:w="1"/><text x="59.7029%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.4529%" y="533" width="0.1609%" height="15" fill="rgb(240,73,3)" fg:x="739" fg:w="2"/><text x="59.7029%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.4529%" y="517" width="0.1609%" height="15" fill="rgb(245,57,23)" fg:x="739" fg:w="2"/><text x="59.7029%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5334%" y="501" width="0.0805%" height="15" fill="rgb(240,75,18)" fg:x="740" fg:w="1"/><text x="59.7834%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.5334%" y="485" width="0.0805%" height="15" fill="rgb(238,168,12)" fg:x="740" fg:w="1"/><text x="59.7834%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5334%" y="469" width="0.0805%" height="15" fill="rgb(226,20,40)" fg:x="740" fg:w="1"/><text x="59.7834%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5334%" y="453" width="0.0805%" height="15" fill="rgb(224,130,35)" fg:x="740" fg:w="1"/><text x="59.7834%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.5334%" y="437" width="0.0805%" height="15" fill="rgb(225,63,41)" fg:x="740" fg:w="1"/><text x="59.7834%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.5334%" y="421" width="0.0805%" height="15" fill="rgb(219,3,3)" fg:x="740" fg:w="1"/><text x="59.7834%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.5334%" y="405" width="0.0805%" height="15" fill="rgb(218,157,4)" fg:x="740" fg:w="1"/><text x="59.7834%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5334%" y="389" width="0.0805%" height="15" fill="rgb(232,76,36)" fg:x="740" fg:w="1"/><text x="59.7834%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5334%" y="373" width="0.0805%" height="15" fill="rgb(247,36,0)" fg:x="740" fg:w="1"/><text x="59.7834%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.5334%" y="357" width="0.0805%" height="15" fill="rgb(205,2,34)" fg:x="740" fg:w="1"/><text x="59.7834%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.5334%" y="341" width="0.0805%" height="15" fill="rgb(239,136,13)" fg:x="740" fg:w="1"/><text x="59.7834%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.5334%" y="325" width="0.0805%" height="15" fill="rgb(253,122,12)" fg:x="740" fg:w="1"/><text x="59.7834%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.5334%" y="309" width="0.0805%" height="15" fill="rgb(222,174,7)" fg:x="740" fg:w="1"/><text x="59.7834%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5334%" y="293" width="0.0805%" height="15" fill="rgb(208,191,42)" fg:x="740" fg:w="1"/><text x="59.7834%" y="303.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="59.6943%" y="437" width="0.0805%" height="15" fill="rgb(237,212,15)" fg:x="742" fg:w="1"/><text x="59.9443%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.7747%" y="341" width="0.0805%" height="15" fill="rgb(215,65,20)" fg:x="743" fg:w="1"/><text x="60.0247%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.7747%" y="325" width="0.0805%" height="15" fill="rgb(232,103,11)" fg:x="743" fg:w="1"/><text x="60.0247%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.7747%" y="309" width="0.0805%" height="15" fill="rgb(235,148,18)" fg:x="743" fg:w="1"/><text x="60.0247%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.7747%" y="293" width="0.0805%" height="15" fill="rgb(240,173,7)" fg:x="743" fg:w="1"/><text x="60.0247%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.7747%" y="277" width="0.0805%" height="15" fill="rgb(228,182,25)" fg:x="743" fg:w="1"/><text x="60.0247%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.7747%" y="261" width="0.0805%" height="15" fill="rgb(247,3,52)" fg:x="743" fg:w="1"/><text x="60.0247%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.7747%" y="245" width="0.0805%" height="15" fill="rgb(226,155,8)" fg:x="743" fg:w="1"/><text x="60.0247%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.7747%" y="229" width="0.0805%" height="15" fill="rgb(243,195,38)" fg:x="743" fg:w="1"/><text x="60.0247%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.7747%" y="213" width="0.0805%" height="15" fill="rgb(254,181,33)" fg:x="743" fg:w="1"/><text x="60.0247%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.7747%" y="197" width="0.0805%" height="15" fill="rgb(232,98,23)" fg:x="743" fg:w="1"/><text x="60.0247%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.7747%" y="181" width="0.0805%" height="15" fill="rgb(205,23,10)" fg:x="743" fg:w="1"/><text x="60.0247%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.7747%" y="165" width="0.0805%" height="15" fill="rgb(212,124,38)" fg:x="743" fg:w="1"/><text x="60.0247%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.7747%" y="149" width="0.0805%" height="15" fill="rgb(228,207,2)" fg:x="743" fg:w="1"/><text x="60.0247%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.7747%" y="133" width="0.0805%" height="15" fill="rgb(215,120,22)" fg:x="743" fg:w="1"/><text x="60.0247%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.7747%" y="117" width="0.0805%" height="15" fill="rgb(251,172,33)" fg:x="743" fg:w="1"/><text x="60.0247%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.7747%" y="101" width="0.0805%" height="15" fill="rgb(250,83,2)" fg:x="743" fg:w="1"/><text x="60.0247%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.7747%" y="85" width="0.0805%" height="15" fill="rgb(210,132,53)" fg:x="743" fg:w="1"/><text x="60.0247%" y="95.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="59.9356%" y="181" width="0.0805%" height="15" fill="rgb(221,208,36)" fg:x="745" fg:w="1"/><text x="60.1856%" y="191.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="59.9356%" y="165" width="0.0805%" height="15" fill="rgb(205,192,46)" fg:x="745" fg:w="1"/><text x="60.1856%" y="175.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="59.9356%" y="149" width="0.0805%" height="15" fill="rgb(223,163,14)" fg:x="745" fg:w="1"/><text x="60.1856%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::SeqDeserializer as serde::de::SeqAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="59.9356%" y="133" width="0.0805%" height="15" fill="rgb(218,41,28)" fg:x="745" fg:w="1"/><text x="60.1856%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="59.7747%" y="389" width="0.3218%" height="15" fill="rgb(235,104,10)" fg:x="743" fg:w="4"/><text x="60.0247%" y="399.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="59.7747%" y="373" width="0.3218%" height="15" fill="rgb(246,17,4)" fg:x="743" fg:w="4"/><text x="60.0247%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="59.7747%" y="357" width="0.3218%" height="15" fill="rgb(240,7,16)" fg:x="743" fg:w="4"/><text x="60.0247%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="59.8552%" y="341" width="0.2414%" height="15" fill="rgb(213,160,23)" fg:x="744" fg:w="3"/><text x="60.1052%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.8552%" y="325" width="0.2414%" height="15" fill="rgb(251,179,49)" fg:x="744" fg:w="3"/><text x="60.1052%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="59.8552%" y="309" width="0.2414%" height="15" fill="rgb(247,198,10)" fg:x="744" fg:w="3"/><text x="60.1052%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.8552%" y="293" width="0.2414%" height="15" fill="rgb(220,65,29)" fg:x="744" fg:w="3"/><text x="60.1052%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="59.8552%" y="277" width="0.2414%" height="15" fill="rgb(237,171,28)" fg:x="744" fg:w="3"/><text x="60.1052%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.8552%" y="261" width="0.2414%" height="15" fill="rgb(228,44,26)" fg:x="744" fg:w="3"/><text x="60.1052%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.9356%" y="245" width="0.1609%" height="15" fill="rgb(216,210,27)" fg:x="745" fg:w="2"/><text x="60.1856%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.9356%" y="229" width="0.1609%" height="15" fill="rgb(252,10,17)" fg:x="745" fg:w="2"/><text x="60.1856%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.9356%" y="213" width="0.1609%" height="15" fill="rgb(214,172,30)" fg:x="745" fg:w="2"/><text x="60.1856%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.9356%" y="197" width="0.1609%" height="15" fill="rgb(253,130,48)" fg:x="745" fg:w="2"/><text x="60.1856%" y="207.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="60.0161%" y="181" width="0.0805%" height="15" fill="rgb(226,99,43)" fg:x="746" fg:w="1"/><text x="60.2661%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.0965%" y="373" width="0.0805%" height="15" fill="rgb(239,111,26)" fg:x="747" fg:w="1"/><text x="60.3465%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.56%)</title><rect x="59.7747%" y="421" width="0.5632%" height="15" fill="rgb(240,27,53)" fg:x="743" fg:w="7"/><text x="60.0247%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="59.7747%" y="405" width="0.5632%" height="15" fill="rgb(254,163,12)" fg:x="743" fg:w="7"/><text x="60.0247%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="60.0965%" y="389" width="0.2414%" height="15" fill="rgb(225,51,48)" fg:x="747" fg:w="3"/><text x="60.3465%" y="399.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="60.1770%" y="373" width="0.1609%" height="15" fill="rgb(205,19,32)" fg:x="748" fg:w="2"/><text x="60.4270%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="60.1770%" y="357" width="0.1609%" height="15" fill="rgb(218,119,26)" fg:x="748" fg:w="2"/><text x="60.4270%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.1770%" y="341" width="0.1609%" height="15" fill="rgb(231,173,33)" fg:x="748" fg:w="2"/><text x="60.4270%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1770%" y="325" width="0.1609%" height="15" fill="rgb(241,100,29)" fg:x="748" fg:w="2"/><text x="60.4270%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.1770%" y="309" width="0.1609%" height="15" fill="rgb(250,194,34)" fg:x="748" fg:w="2"/><text x="60.4270%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1770%" y="293" width="0.1609%" height="15" fill="rgb(215,23,50)" fg:x="748" fg:w="2"/><text x="60.4270%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="60.1770%" y="277" width="0.1609%" height="15" fill="rgb(206,49,37)" fg:x="748" fg:w="2"/><text x="60.4270%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1770%" y="261" width="0.1609%" height="15" fill="rgb(247,39,21)" fg:x="748" fg:w="2"/><text x="60.4270%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.1770%" y="245" width="0.1609%" height="15" fill="rgb(209,220,15)" fg:x="748" fg:w="2"/><text x="60.4270%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1770%" y="229" width="0.1609%" height="15" fill="rgb(206,41,33)" fg:x="748" fg:w="2"/><text x="60.4270%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.2574%" y="213" width="0.0805%" height="15" fill="rgb(221,225,45)" fg:x="749" fg:w="1"/><text x="60.5074%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2574%" y="197" width="0.0805%" height="15" fill="rgb(216,27,18)" fg:x="749" fg:w="1"/><text x="60.5074%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="60.2574%" y="181" width="0.0805%" height="15" fill="rgb(250,193,34)" fg:x="749" fg:w="1"/><text x="60.5074%" y="191.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="60.2574%" y="165" width="0.0805%" height="15" fill="rgb(227,215,20)" fg:x="749" fg:w="1"/><text x="60.5074%" y="175.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="60.2574%" y="149" width="0.0805%" height="15" fill="rgb(242,211,27)" fg:x="749" fg:w="1"/><text x="60.5074%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.3379%" y="357" width="0.0805%" height="15" fill="rgb(229,190,30)" fg:x="750" fg:w="1"/><text x="60.5879%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.4183%" y="325" width="0.0805%" height="15" fill="rgb(253,31,29)" fg:x="751" fg:w="1"/><text x="60.6683%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.4183%" y="309" width="0.0805%" height="15" fill="rgb(229,177,52)" fg:x="751" fg:w="1"/><text x="60.6683%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4988%" y="325" width="0.0805%" height="15" fill="rgb(226,88,8)" fg:x="752" fg:w="1"/><text x="60.7488%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4988%" y="309" width="0.0805%" height="15" fill="rgb(214,55,27)" fg:x="752" fg:w="1"/><text x="60.7488%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.4988%" y="293" width="0.0805%" height="15" fill="rgb(233,202,5)" fg:x="752" fg:w="1"/><text x="60.7488%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.5792%" y="293" width="0.0805%" height="15" fill="rgb(251,49,30)" fg:x="753" fg:w="1"/><text x="60.8292%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.5792%" y="277" width="0.0805%" height="15" fill="rgb(235,18,52)" fg:x="753" fg:w="1"/><text x="60.8292%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.5792%" y="261" width="0.0805%" height="15" fill="rgb(250,111,51)" fg:x="753" fg:w="1"/><text x="60.8292%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.9010%" y="229" width="0.0805%" height="15" fill="rgb(218,13,25)" fg:x="757" fg:w="1"/><text x="61.1510%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.9010%" y="213" width="0.0805%" height="15" fill="rgb(248,96,7)" fg:x="757" fg:w="1"/><text x="61.1510%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9815%" y="197" width="0.0805%" height="15" fill="rgb(217,31,15)" fg:x="758" fg:w="1"/><text x="61.2315%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0619%" y="165" width="0.0805%" height="15" fill="rgb(228,59,49)" fg:x="759" fg:w="1"/><text x="61.3119%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0619%" y="149" width="0.0805%" height="15" fill="rgb(210,152,38)" fg:x="759" fg:w="1"/><text x="61.3119%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.0619%" y="133" width="0.0805%" height="15" fill="rgb(206,71,11)" fg:x="759" fg:w="1"/><text x="61.3119%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="60.8206%" y="245" width="0.4023%" height="15" fill="rgb(244,199,5)" fg:x="756" fg:w="5"/><text x="61.0706%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="60.9815%" y="229" width="0.2414%" height="15" fill="rgb(253,49,1)" fg:x="758" fg:w="3"/><text x="61.2315%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.9815%" y="213" width="0.2414%" height="15" fill="rgb(225,206,40)" fg:x="758" fg:w="3"/><text x="61.2315%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="61.0619%" y="197" width="0.1609%" height="15" fill="rgb(243,116,47)" fg:x="759" fg:w="2"/><text x="61.3119%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.0619%" y="181" width="0.1609%" height="15" fill="rgb(219,225,16)" fg:x="759" fg:w="2"/><text x="61.3119%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.1424%" y="165" width="0.0805%" height="15" fill="rgb(233,29,47)" fg:x="760" fg:w="1"/><text x="61.3924%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="60.7401%" y="277" width="0.5632%" height="15" fill="rgb(250,179,18)" fg:x="755" fg:w="7"/><text x="60.9901%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="60.8206%" y="261" width="0.4827%" height="15" fill="rgb(215,176,6)" fg:x="756" fg:w="6"/><text x="61.0706%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.2228%" y="245" width="0.0805%" height="15" fill="rgb(214,117,39)" fg:x="761" fg:w="1"/><text x="61.4728%" y="255.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 1.05%)</title><rect x="60.3379%" y="405" width="1.0459%" height="15" fill="rgb(247,183,36)" fg:x="750" fg:w="13"/><text x="60.5879%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.05%)</title><rect x="60.3379%" y="389" width="1.0459%" height="15" fill="rgb(237,200,3)" fg:x="750" fg:w="13"/><text x="60.5879%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.05%)</title><rect x="60.3379%" y="373" width="1.0459%" height="15" fill="rgb(212,220,24)" fg:x="750" fg:w="13"/><text x="60.5879%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.97%)</title><rect x="60.4183%" y="357" width="0.9654%" height="15" fill="rgb(245,216,20)" fg:x="751" fg:w="12"/><text x="60.6683%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="60.4183%" y="341" width="0.9654%" height="15" fill="rgb(219,124,7)" fg:x="751" fg:w="12"/><text x="60.6683%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.80%)</title><rect x="60.5792%" y="325" width="0.8045%" height="15" fill="rgb(227,167,8)" fg:x="753" fg:w="10"/><text x="60.8292%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="60.5792%" y="309" width="0.8045%" height="15" fill="rgb(241,37,2)" fg:x="753" fg:w="10"/><text x="60.8292%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="60.6597%" y="293" width="0.7241%" height="15" fill="rgb(238,134,33)" fg:x="754" fg:w="9"/><text x="60.9097%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.3033%" y="277" width="0.0805%" height="15" fill="rgb(248,48,27)" fg:x="762" fg:w="1"/><text x="61.5533%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.3033%" y="261" width="0.0805%" height="15" fill="rgb(212,14,16)" fg:x="762" fg:w="1"/><text x="61.5533%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.4642%" y="341" width="0.0805%" height="15" fill="rgb(217,205,37)" fg:x="764" fg:w="1"/><text x="61.7142%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.5447%" y="325" width="0.1609%" height="15" fill="rgb(233,185,47)" fg:x="765" fg:w="2"/><text x="61.7947%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.5447%" y="309" width="0.1609%" height="15" fill="rgb(244,88,8)" fg:x="765" fg:w="2"/><text x="61.7947%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="61.6251%" y="293" width="0.0805%" height="15" fill="rgb(213,0,20)" fg:x="766" fg:w="1"/><text x="61.8751%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.7056%" y="293" width="0.0805%" height="15" fill="rgb(238,159,36)" fg:x="767" fg:w="1"/><text x="61.9556%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="61.7056%" y="325" width="0.1609%" height="15" fill="rgb(253,173,17)" fg:x="767" fg:w="2"/><text x="61.9556%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="61.7056%" y="309" width="0.1609%" height="15" fill="rgb(221,23,28)" fg:x="767" fg:w="2"/><text x="61.9556%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="61.7860%" y="293" width="0.0805%" height="15" fill="rgb(218,113,15)" fg:x="768" fg:w="1"/><text x="62.0360%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="61.7860%" y="277" width="0.0805%" height="15" fill="rgb(233,58,3)" fg:x="768" fg:w="1"/><text x="62.0360%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="61.7860%" y="261" width="0.0805%" height="15" fill="rgb(250,46,35)" fg:x="768" fg:w="1"/><text x="62.0360%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.0274%" y="245" width="0.0805%" height="15" fill="rgb(210,169,11)" fg:x="771" fg:w="1"/><text x="62.2774%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="62.1078%" y="245" width="0.0805%" height="15" fill="rgb(246,88,19)" fg:x="772" fg:w="1"/><text x="62.3578%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1078%" y="229" width="0.0805%" height="15" fill="rgb(206,81,49)" fg:x="772" fg:w="1"/><text x="62.3578%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.1078%" y="213" width="0.0805%" height="15" fill="rgb(232,144,18)" fg:x="772" fg:w="1"/><text x="62.3578%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (24 samples, 1.93%)</title><rect x="60.3379%" y="421" width="1.9308%" height="15" fill="rgb(235,2,27)" fg:x="750" fg:w="24"/><text x="60.5879%" y="431.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="61.3837%" y="405" width="0.8850%" height="15" fill="rgb(239,157,39)" fg:x="763" fg:w="11"/><text x="61.6337%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="61.3837%" y="389" width="0.8850%" height="15" fill="rgb(220,11,17)" fg:x="763" fg:w="11"/><text x="61.6337%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.80%)</title><rect x="61.4642%" y="373" width="0.8045%" height="15" fill="rgb(243,94,50)" fg:x="764" fg:w="10"/><text x="61.7142%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="61.4642%" y="357" width="0.8045%" height="15" fill="rgb(218,22,0)" fg:x="764" fg:w="10"/><text x="61.7142%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="61.5447%" y="341" width="0.7241%" height="15" fill="rgb(249,70,21)" fg:x="765" fg:w="9"/><text x="61.7947%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="61.8665%" y="325" width="0.4023%" height="15" fill="rgb(245,111,46)" fg:x="769" fg:w="5"/><text x="62.1165%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="61.8665%" y="309" width="0.4023%" height="15" fill="rgb(244,183,12)" fg:x="769" fg:w="5"/><text x="62.1165%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="61.8665%" y="293" width="0.4023%" height="15" fill="rgb(207,117,0)" fg:x="769" fg:w="5"/><text x="62.1165%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="61.8665%" y="277" width="0.4023%" height="15" fill="rgb(206,20,43)" fg:x="769" fg:w="5"/><text x="62.1165%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="61.9469%" y="261" width="0.3218%" height="15" fill="rgb(221,104,11)" fg:x="770" fg:w="4"/><text x="62.1969%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.1883%" y="245" width="0.0805%" height="15" fill="rgb(254,36,50)" fg:x="773" fg:w="1"/><text x="62.4383%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="62.2687%" y="405" width="0.0805%" height="15" fill="rgb(252,17,15)" fg:x="774" fg:w="1"/><text x="62.5187%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.2687%" y="389" width="0.0805%" height="15" fill="rgb(219,129,43)" fg:x="774" fg:w="1"/><text x="62.5187%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.4296%" y="277" width="0.0805%" height="15" fill="rgb(205,34,45)" fg:x="776" fg:w="1"/><text x="62.6796%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="62.2687%" y="421" width="0.3218%" height="15" fill="rgb(251,201,32)" fg:x="774" fg:w="4"/><text x="62.5187%" y="431.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="62.3492%" y="405" width="0.2414%" height="15" fill="rgb(205,56,0)" fg:x="775" fg:w="3"/><text x="62.5992%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="62.3492%" y="389" width="0.2414%" height="15" fill="rgb(211,193,27)" fg:x="775" fg:w="3"/><text x="62.5992%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.4296%" y="373" width="0.1609%" height="15" fill="rgb(231,100,42)" fg:x="776" fg:w="2"/><text x="62.6796%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.4296%" y="357" width="0.1609%" height="15" fill="rgb(245,85,27)" fg:x="776" fg:w="2"/><text x="62.6796%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.4296%" y="341" width="0.1609%" height="15" fill="rgb(241,76,24)" fg:x="776" fg:w="2"/><text x="62.6796%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.4296%" y="325" width="0.1609%" height="15" fill="rgb(249,157,15)" fg:x="776" fg:w="2"/><text x="62.6796%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="62.4296%" y="309" width="0.1609%" height="15" fill="rgb(222,218,25)" fg:x="776" fg:w="2"/><text x="62.6796%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.4296%" y="293" width="0.1609%" height="15" fill="rgb(252,156,52)" fg:x="776" fg:w="2"/><text x="62.6796%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.5101%" y="277" width="0.0805%" height="15" fill="rgb(211,185,7)" fg:x="777" fg:w="1"/><text x="62.7601%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.5101%" y="261" width="0.0805%" height="15" fill="rgb(234,108,24)" fg:x="777" fg:w="1"/><text x="62.7601%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.5101%" y="245" width="0.0805%" height="15" fill="rgb(227,218,2)" fg:x="777" fg:w="1"/><text x="62.7601%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (40 samples, 3.22%)</title><rect x="59.6138%" y="533" width="3.2180%" height="15" fill="rgb(224,0,36)" fg:x="741" fg:w="40"/><text x="59.8638%" y="543.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (39 samples, 3.14%)</title><rect x="59.6943%" y="517" width="3.1376%" height="15" fill="rgb(233,201,10)" fg:x="742" fg:w="39"/><text x="59.9443%" y="527.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 3.14%)</title><rect x="59.6943%" y="501" width="3.1376%" height="15" fill="rgb(252,209,14)" fg:x="742" fg:w="39"/><text x="59.9443%" y="511.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 3.14%)</title><rect x="59.6943%" y="485" width="3.1376%" height="15" fill="rgb(205,93,49)" fg:x="742" fg:w="39"/><text x="59.9443%" y="495.50">&lt;co..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (39 samples, 3.14%)</title><rect x="59.6943%" y="469" width="3.1376%" height="15" fill="rgb(234,116,45)" fg:x="742" fg:w="39"/><text x="59.9443%" y="479.50">&lt;en..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (39 samples, 3.14%)</title><rect x="59.6943%" y="453" width="3.1376%" height="15" fill="rgb(248,89,35)" fg:x="742" fg:w="39"/><text x="59.9443%" y="463.50">&lt;en..</text></g><g><title>engine::session::internal::Entities::add_persisted (38 samples, 3.06%)</title><rect x="59.7747%" y="437" width="3.0571%" height="15" fill="rgb(233,167,45)" fg:x="743" fg:w="38"/><text x="60.0247%" y="447.50">eng..</text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="62.5905%" y="421" width="0.2414%" height="15" fill="rgb(248,228,14)" fg:x="778" fg:w="3"/><text x="62.8405%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="62.5905%" y="405" width="0.2414%" height="15" fill="rgb(246,91,14)" fg:x="778" fg:w="3"/><text x="62.8405%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="62.5905%" y="389" width="0.2414%" height="15" fill="rgb(227,142,5)" fg:x="778" fg:w="3"/><text x="62.8405%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="62.5905%" y="373" width="0.2414%" height="15" fill="rgb(221,63,33)" fg:x="778" fg:w="3"/><text x="62.8405%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="62.5905%" y="357" width="0.2414%" height="15" fill="rgb(233,49,0)" fg:x="778" fg:w="3"/><text x="62.8405%" y="367.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="62.8319%" y="533" width="0.0805%" height="15" fill="rgb(251,115,38)" fg:x="781" fg:w="1"/><text x="63.0819%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="62.8319%" y="517" width="0.0805%" height="15" fill="rgb(231,214,32)" fg:x="781" fg:w="1"/><text x="63.0819%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.9123%" y="501" width="0.0805%" height="15" fill="rgb(248,73,46)" fg:x="782" fg:w="1"/><text x="63.1623%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="62.9928%" y="501" width="0.1609%" height="15" fill="rgb(237,156,4)" fg:x="783" fg:w="2"/><text x="63.2428%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0732%" y="485" width="0.0805%" height="15" fill="rgb(227,132,2)" fg:x="784" fg:w="1"/><text x="63.3232%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.0732%" y="469" width="0.0805%" height="15" fill="rgb(248,161,9)" fg:x="784" fg:w="1"/><text x="63.3232%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.2341%" y="453" width="0.0805%" height="15" fill="rgb(238,77,38)" fg:x="786" fg:w="1"/><text x="63.4841%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="63.1537%" y="501" width="0.2414%" height="15" fill="rgb(222,166,40)" fg:x="785" fg:w="3"/><text x="63.4037%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="63.1537%" y="485" width="0.2414%" height="15" fill="rgb(214,168,45)" fg:x="785" fg:w="3"/><text x="63.4037%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="63.2341%" y="469" width="0.1609%" height="15" fill="rgb(226,64,37)" fg:x="786" fg:w="2"/><text x="63.4841%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.3146%" y="453" width="0.0805%" height="15" fill="rgb(232,210,43)" fg:x="787" fg:w="1"/><text x="63.5646%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.3146%" y="437" width="0.0805%" height="15" fill="rgb(214,76,33)" fg:x="787" fg:w="1"/><text x="63.5646%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.3950%" y="501" width="0.0805%" height="15" fill="rgb(210,78,5)" fg:x="788" fg:w="1"/><text x="63.6450%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.3950%" y="485" width="0.0805%" height="15" fill="rgb(211,107,37)" fg:x="788" fg:w="1"/><text x="63.6450%" y="495.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (113 samples, 9.09%)</title><rect x="54.4650%" y="597" width="9.0909%" height="15" fill="rgb(249,67,16)" fg:x="677" fg:w="113"/><text x="54.7150%" y="607.50">&lt;plugins_core..</text></g><g><title>plugins_core::looking::model::new_area_observation (110 samples, 8.85%)</title><rect x="54.7064%" y="581" width="8.8496%" height="15" fill="rgb(222,114,31)" fg:x="680" fg:w="110"/><text x="54.9564%" y="591.50">plugins_core..</text></g><g><title>kernel::model::entry::Entry::scope (51 samples, 4.10%)</title><rect x="59.4529%" y="565" width="4.1030%" height="15" fill="rgb(242,118,19)" fg:x="739" fg:w="51"/><text x="59.7029%" y="575.50">kern..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (51 samples, 4.10%)</title><rect x="59.4529%" y="549" width="4.1030%" height="15" fill="rgb(223,115,1)" fg:x="739" fg:w="51"/><text x="59.7029%" y="559.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="62.9123%" y="533" width="0.6436%" height="15" fill="rgb(241,182,54)" fg:x="782" fg:w="8"/><text x="63.1623%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="62.9123%" y="517" width="0.6436%" height="15" fill="rgb(244,166,36)" fg:x="782" fg:w="8"/><text x="63.1623%" y="527.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="63.4755%" y="501" width="0.0805%" height="15" fill="rgb(241,52,43)" fg:x="789" fg:w="1"/><text x="63.7255%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (141 samples, 11.34%)</title><rect x="52.2928%" y="789" width="11.3435%" height="15" fill="rgb(236,82,9)" fg:x="650" fg:w="141"/><text x="52.5428%" y="799.50">&lt;engine::session:..</text></g><g><title>kernel::plugins::mw::apply_middleware (141 samples, 11.34%)</title><rect x="52.2928%" y="773" width="11.3435%" height="15" fill="rgb(241,119,0)" fg:x="650" fg:w="141"/><text x="52.5428%" y="783.50">kernel::plugins::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (141 samples, 11.34%)</title><rect x="52.2928%" y="757" width="11.3435%" height="15" fill="rgb(221,19,22)" fg:x="650" fg:w="141"/><text x="52.5428%" y="767.50">kernel::plugins::..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (141 samples, 11.34%)</title><rect x="52.2928%" y="741" width="11.3435%" height="15" fill="rgb(254,144,35)" fg:x="650" fg:w="141"/><text x="52.5428%" y="751.50">&lt;engine::session:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (115 samples, 9.25%)</title><rect x="54.3846%" y="725" width="9.2518%" height="15" fill="rgb(246,132,30)" fg:x="676" fg:w="115"/><text x="54.6346%" y="735.50">kernel::plugi..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (115 samples, 9.25%)</title><rect x="54.3846%" y="709" width="9.2518%" height="15" fill="rgb(234,69,28)" fg:x="676" fg:w="115"/><text x="54.6346%" y="719.50">&lt;plugins_dynl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (114 samples, 9.17%)</title><rect x="54.4650%" y="693" width="9.1714%" height="15" fill="rgb(219,106,47)" fg:x="677" fg:w="114"/><text x="54.7150%" y="703.50">kernel::plugi..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (114 samples, 9.17%)</title><rect x="54.4650%" y="677" width="9.1714%" height="15" fill="rgb(218,79,24)" fg:x="677" fg:w="114"/><text x="54.7150%" y="687.50">core::ops::fu..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (114 samples, 9.17%)</title><rect x="54.4650%" y="661" width="9.1714%" height="15" fill="rgb(225,26,21)" fg:x="677" fg:w="114"/><text x="54.7150%" y="671.50">kernel::plugi..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (114 samples, 9.17%)</title><rect x="54.4650%" y="645" width="9.1714%" height="15" fill="rgb(217,68,49)" fg:x="677" fg:w="114"/><text x="54.7150%" y="655.50">core::ops::fu..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (114 samples, 9.17%)</title><rect x="54.4650%" y="629" width="9.1714%" height="15" fill="rgb(220,204,28)" fg:x="677" fg:w="114"/><text x="54.7150%" y="639.50">&lt;alloc::boxed..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (114 samples, 9.17%)</title><rect x="54.4650%" y="613" width="9.1714%" height="15" fill="rgb(237,208,43)" fg:x="677" fg:w="114"/><text x="54.7150%" y="623.50">&lt;engine::sess..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="63.5559%" y="597" width="0.0805%" height="15" fill="rgb(213,97,42)" fg:x="790" fg:w="1"/><text x="63.8059%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="63.5559%" y="581" width="0.0805%" height="15" fill="rgb(238,96,52)" fg:x="790" fg:w="1"/><text x="63.8059%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.5559%" y="565" width="0.0805%" height="15" fill="rgb(228,14,13)" fg:x="790" fg:w="1"/><text x="63.8059%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="63.6364%" y="709" width="0.0805%" height="15" fill="rgb(219,123,13)" fg:x="791" fg:w="1"/><text x="63.8864%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.6364%" y="693" width="0.0805%" height="15" fill="rgb(216,144,17)" fg:x="791" fg:w="1"/><text x="63.8864%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.7168%" y="645" width="0.0805%" height="15" fill="rgb(230,228,29)" fg:x="792" fg:w="1"/><text x="63.9668%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.7168%" y="629" width="0.0805%" height="15" fill="rgb(233,18,5)" fg:x="792" fg:w="1"/><text x="63.9668%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.7168%" y="613" width="0.0805%" height="15" fill="rgb(233,197,12)" fg:x="792" fg:w="1"/><text x="63.9668%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.7168%" y="597" width="0.0805%" height="15" fill="rgb(234,140,29)" fg:x="792" fg:w="1"/><text x="63.9668%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.7168%" y="581" width="0.0805%" height="15" fill="rgb(233,113,19)" fg:x="792" fg:w="1"/><text x="63.9668%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.7168%" y="565" width="0.0805%" height="15" fill="rgb(246,209,13)" fg:x="792" fg:w="1"/><text x="63.9668%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.7168%" y="549" width="0.0805%" height="15" fill="rgb(242,79,54)" fg:x="792" fg:w="1"/><text x="63.9668%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.7168%" y="533" width="0.0805%" height="15" fill="rgb(219,73,16)" fg:x="792" fg:w="1"/><text x="63.9668%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.7168%" y="517" width="0.0805%" height="15" fill="rgb(224,52,10)" fg:x="792" fg:w="1"/><text x="63.9668%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.7168%" y="501" width="0.0805%" height="15" fill="rgb(237,179,5)" fg:x="792" fg:w="1"/><text x="63.9668%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="63.7168%" y="485" width="0.0805%" height="15" fill="rgb(231,20,6)" fg:x="792" fg:w="1"/><text x="63.9668%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="63.7168%" y="469" width="0.0805%" height="15" fill="rgb(253,171,45)" fg:x="792" fg:w="1"/><text x="63.9668%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="63.6364%" y="757" width="0.2414%" height="15" fill="rgb(230,75,49)" fg:x="791" fg:w="3"/><text x="63.8864%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="63.6364%" y="741" width="0.2414%" height="15" fill="rgb(216,83,46)" fg:x="791" fg:w="3"/><text x="63.8864%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="63.6364%" y="725" width="0.2414%" height="15" fill="rgb(236,56,9)" fg:x="791" fg:w="3"/><text x="63.8864%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="63.7168%" y="709" width="0.1609%" height="15" fill="rgb(215,28,34)" fg:x="792" fg:w="2"/><text x="63.9668%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="63.7168%" y="693" width="0.1609%" height="15" fill="rgb(230,222,20)" fg:x="792" fg:w="2"/><text x="63.9668%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.7168%" y="677" width="0.1609%" height="15" fill="rgb(235,209,51)" fg:x="792" fg:w="2"/><text x="63.9668%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.7168%" y="661" width="0.1609%" height="15" fill="rgb(235,167,1)" fg:x="792" fg:w="2"/><text x="63.9668%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.7973%" y="645" width="0.0805%" height="15" fill="rgb(248,220,0)" fg:x="793" fg:w="1"/><text x="64.0473%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.7973%" y="629" width="0.0805%" height="15" fill="rgb(239,0,18)" fg:x="793" fg:w="1"/><text x="64.0473%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.7973%" y="613" width="0.0805%" height="15" fill="rgb(229,179,11)" fg:x="793" fg:w="1"/><text x="64.0473%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.7973%" y="597" width="0.0805%" height="15" fill="rgb(226,116,53)" fg:x="793" fg:w="1"/><text x="64.0473%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.7973%" y="581" width="0.0805%" height="15" fill="rgb(218,1,49)" fg:x="793" fg:w="1"/><text x="64.0473%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="63.7973%" y="565" width="0.0805%" height="15" fill="rgb(208,184,47)" fg:x="793" fg:w="1"/><text x="64.0473%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="63.7973%" y="549" width="0.0805%" height="15" fill="rgb(238,174,3)" fg:x="793" fg:w="1"/><text x="64.0473%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.8777%" y="693" width="0.0805%" height="15" fill="rgb(247,188,6)" fg:x="794" fg:w="1"/><text x="64.1277%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.8777%" y="677" width="0.0805%" height="15" fill="rgb(211,165,46)" fg:x="794" fg:w="1"/><text x="64.1277%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.0386%" y="661" width="0.0805%" height="15" fill="rgb(222,190,10)" fg:x="796" fg:w="1"/><text x="64.2886%" y="671.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.0386%" y="645" width="0.0805%" height="15" fill="rgb(206,185,3)" fg:x="796" fg:w="1"/><text x="64.2886%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1191%" y="629" width="0.0805%" height="15" fill="rgb(244,125,37)" fg:x="797" fg:w="1"/><text x="64.3691%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1191%" y="613" width="0.0805%" height="15" fill="rgb(211,43,7)" fg:x="797" fg:w="1"/><text x="64.3691%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="64.1191%" y="597" width="0.0805%" height="15" fill="rgb(250,41,42)" fg:x="797" fg:w="1"/><text x="64.3691%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="64.1191%" y="581" width="0.0805%" height="15" fill="rgb(254,54,42)" fg:x="797" fg:w="1"/><text x="64.3691%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1995%" y="597" width="0.0805%" height="15" fill="rgb(213,71,43)" fg:x="798" fg:w="1"/><text x="64.4495%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1995%" y="581" width="0.0805%" height="15" fill="rgb(249,3,44)" fg:x="798" fg:w="1"/><text x="64.4495%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.1995%" y="565" width="0.0805%" height="15" fill="rgb(229,80,41)" fg:x="798" fg:w="1"/><text x="64.4495%" y="575.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="63.8777%" y="741" width="0.4827%" height="15" fill="rgb(231,25,28)" fg:x="794" fg:w="6"/><text x="64.1277%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="63.8777%" y="725" width="0.4827%" height="15" fill="rgb(208,79,48)" fg:x="794" fg:w="6"/><text x="64.1277%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="63.8777%" y="709" width="0.4827%" height="15" fill="rgb(207,196,38)" fg:x="794" fg:w="6"/><text x="64.1277%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="63.9582%" y="693" width="0.4023%" height="15" fill="rgb(228,105,49)" fg:x="795" fg:w="5"/><text x="64.2082%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="63.9582%" y="677" width="0.4023%" height="15" fill="rgb(237,99,15)" fg:x="795" fg:w="5"/><text x="64.2082%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="64.1191%" y="661" width="0.2414%" height="15" fill="rgb(224,207,46)" fg:x="797" fg:w="3"/><text x="64.3691%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.1191%" y="645" width="0.2414%" height="15" fill="rgb(249,117,50)" fg:x="797" fg:w="3"/><text x="64.3691%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.1995%" y="629" width="0.1609%" height="15" fill="rgb(248,17,13)" fg:x="798" fg:w="2"/><text x="64.4495%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.1995%" y="613" width="0.1609%" height="15" fill="rgb(228,187,36)" fg:x="798" fg:w="2"/><text x="64.4495%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.2800%" y="597" width="0.0805%" height="15" fill="rgb(234,132,20)" fg:x="799" fg:w="1"/><text x="64.5300%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.2800%" y="581" width="0.0805%" height="15" fill="rgb(209,170,46)" fg:x="799" fg:w="1"/><text x="64.5300%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.2800%" y="565" width="0.0805%" height="15" fill="rgb(237,23,19)" fg:x="799" fg:w="1"/><text x="64.5300%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2800%" y="549" width="0.0805%" height="15" fill="rgb(227,21,26)" fg:x="799" fg:w="1"/><text x="64.5300%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.4409%" y="629" width="0.0805%" height="15" fill="rgb(222,220,48)" fg:x="801" fg:w="1"/><text x="64.6909%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.4409%" y="613" width="0.0805%" height="15" fill="rgb(214,9,16)" fg:x="801" fg:w="1"/><text x="64.6909%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.4409%" y="597" width="0.0805%" height="15" fill="rgb(209,73,30)" fg:x="801" fg:w="1"/><text x="64.6909%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.4409%" y="581" width="0.0805%" height="15" fill="rgb(207,20,33)" fg:x="801" fg:w="1"/><text x="64.6909%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.4409%" y="565" width="0.0805%" height="15" fill="rgb(219,153,12)" fg:x="801" fg:w="1"/><text x="64.6909%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.4409%" y="549" width="0.0805%" height="15" fill="rgb(235,97,25)" fg:x="801" fg:w="1"/><text x="64.6909%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.4409%" y="533" width="0.0805%" height="15" fill="rgb(244,30,34)" fg:x="801" fg:w="1"/><text x="64.6909%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="64.4409%" y="661" width="0.2414%" height="15" fill="rgb(214,106,45)" fg:x="801" fg:w="3"/><text x="64.6909%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.4409%" y="645" width="0.2414%" height="15" fill="rgb(226,41,9)" fg:x="801" fg:w="3"/><text x="64.6909%" y="655.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="64.5213%" y="629" width="0.1609%" height="15" fill="rgb(253,139,29)" fg:x="802" fg:w="2"/><text x="64.7713%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.5213%" y="613" width="0.1609%" height="15" fill="rgb(213,205,39)" fg:x="802" fg:w="2"/><text x="64.7713%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.5213%" y="597" width="0.1609%" height="15" fill="rgb(209,27,10)" fg:x="802" fg:w="2"/><text x="64.7713%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.5213%" y="581" width="0.1609%" height="15" fill="rgb(249,142,16)" fg:x="802" fg:w="2"/><text x="64.7713%" y="591.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.6018%" y="565" width="0.0805%" height="15" fill="rgb(242,65,12)" fg:x="803" fg:w="1"/><text x="64.8518%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.6018%" y="549" width="0.0805%" height="15" fill="rgb(232,48,10)" fg:x="803" fg:w="1"/><text x="64.8518%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.6018%" y="533" width="0.0805%" height="15" fill="rgb(253,67,19)" fg:x="803" fg:w="1"/><text x="64.8518%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.6822%" y="661" width="0.0805%" height="15" fill="rgb(227,93,29)" fg:x="804" fg:w="1"/><text x="64.9322%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.6822%" y="645" width="0.0805%" height="15" fill="rgb(226,189,53)" fg:x="804" fg:w="1"/><text x="64.9322%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.6822%" y="629" width="0.0805%" height="15" fill="rgb(223,224,1)" fg:x="804" fg:w="1"/><text x="64.9322%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.6822%" y="613" width="0.0805%" height="15" fill="rgb(221,84,32)" fg:x="804" fg:w="1"/><text x="64.9322%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.6822%" y="597" width="0.0805%" height="15" fill="rgb(214,189,28)" fg:x="804" fg:w="1"/><text x="64.9322%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.6822%" y="581" width="0.0805%" height="15" fill="rgb(234,7,52)" fg:x="804" fg:w="1"/><text x="64.9322%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.6822%" y="565" width="0.0805%" height="15" fill="rgb(249,73,31)" fg:x="804" fg:w="1"/><text x="64.9322%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.7627%" y="629" width="0.0805%" height="15" fill="rgb(253,153,41)" fg:x="805" fg:w="1"/><text x="65.0127%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.7627%" y="613" width="0.0805%" height="15" fill="rgb(249,52,34)" fg:x="805" fg:w="1"/><text x="65.0127%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.7627%" y="597" width="0.0805%" height="15" fill="rgb(236,177,47)" fg:x="805" fg:w="1"/><text x="65.0127%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="64.8431%" y="613" width="0.0805%" height="15" fill="rgb(252,185,45)" fg:x="806" fg:w="1"/><text x="65.0931%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="64.8431%" y="597" width="0.0805%" height="15" fill="rgb(251,15,30)" fg:x="806" fg:w="1"/><text x="65.0931%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.8431%" y="581" width="0.0805%" height="15" fill="rgb(233,31,4)" fg:x="806" fg:w="1"/><text x="65.0931%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.8431%" y="565" width="0.0805%" height="15" fill="rgb(254,44,24)" fg:x="806" fg:w="1"/><text x="65.0931%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.8431%" y="549" width="0.0805%" height="15" fill="rgb(218,54,1)" fg:x="806" fg:w="1"/><text x="65.0931%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.8431%" y="533" width="0.0805%" height="15" fill="rgb(243,209,39)" fg:x="806" fg:w="1"/><text x="65.0931%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (14 samples, 1.13%)</title><rect x="63.8777%" y="757" width="1.1263%" height="15" fill="rgb(206,75,33)" fg:x="794" fg:w="14"/><text x="64.1277%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="64.3604%" y="741" width="0.6436%" height="15" fill="rgb(223,108,18)" fg:x="800" fg:w="8"/><text x="64.6104%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="64.3604%" y="725" width="0.6436%" height="15" fill="rgb(244,89,31)" fg:x="800" fg:w="8"/><text x="64.6104%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="64.3604%" y="709" width="0.6436%" height="15" fill="rgb(222,167,27)" fg:x="800" fg:w="8"/><text x="64.6104%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="64.3604%" y="693" width="0.6436%" height="15" fill="rgb(247,41,16)" fg:x="800" fg:w="8"/><text x="64.6104%" y="703.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="64.4409%" y="677" width="0.5632%" height="15" fill="rgb(233,168,40)" fg:x="801" fg:w="7"/><text x="64.6909%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.7627%" y="661" width="0.2414%" height="15" fill="rgb(205,211,8)" fg:x="805" fg:w="3"/><text x="65.0127%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.7627%" y="645" width="0.2414%" height="15" fill="rgb(238,105,11)" fg:x="805" fg:w="3"/><text x="65.0127%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="64.8431%" y="629" width="0.1609%" height="15" fill="rgb(223,142,52)" fg:x="806" fg:w="2"/><text x="65.0931%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.9236%" y="613" width="0.0805%" height="15" fill="rgb(238,51,33)" fg:x="807" fg:w="1"/><text x="65.1736%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.9236%" y="597" width="0.0805%" height="15" fill="rgb(231,188,43)" fg:x="807" fg:w="1"/><text x="65.1736%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.9236%" y="581" width="0.0805%" height="15" fill="rgb(216,92,17)" fg:x="807" fg:w="1"/><text x="65.1736%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.9236%" y="565" width="0.0805%" height="15" fill="rgb(228,2,40)" fg:x="807" fg:w="1"/><text x="65.1736%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.9236%" y="549" width="0.0805%" height="15" fill="rgb(226,73,15)" fg:x="807" fg:w="1"/><text x="65.1736%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.9236%" y="533" width="0.0805%" height="15" fill="rgb(227,66,46)" fg:x="807" fg:w="1"/><text x="65.1736%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.9236%" y="517" width="0.0805%" height="15" fill="rgb(209,71,6)" fg:x="807" fg:w="1"/><text x="65.1736%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.9236%" y="501" width="0.0805%" height="15" fill="rgb(246,100,25)" fg:x="807" fg:w="1"/><text x="65.1736%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.9236%" y="485" width="0.0805%" height="15" fill="rgb(248,185,27)" fg:x="807" fg:w="1"/><text x="65.1736%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.9236%" y="469" width="0.0805%" height="15" fill="rgb(225,118,47)" fg:x="807" fg:w="1"/><text x="65.1736%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.9236%" y="453" width="0.0805%" height="15" fill="rgb(220,185,44)" fg:x="807" fg:w="1"/><text x="65.1736%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9236%" y="437" width="0.0805%" height="15" fill="rgb(227,95,24)" fg:x="807" fg:w="1"/><text x="65.1736%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="65.0040%" y="741" width="0.0805%" height="15" fill="rgb(252,84,24)" fg:x="808" fg:w="1"/><text x="65.2540%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.0040%" y="725" width="0.0805%" height="15" fill="rgb(240,34,44)" fg:x="808" fg:w="1"/><text x="65.2540%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.0845%" y="709" width="0.0805%" height="15" fill="rgb(209,72,54)" fg:x="809" fg:w="1"/><text x="65.3345%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.0845%" y="693" width="0.0805%" height="15" fill="rgb(226,19,45)" fg:x="809" fg:w="1"/><text x="65.3345%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.0845%" y="677" width="0.0805%" height="15" fill="rgb(246,7,45)" fg:x="809" fg:w="1"/><text x="65.3345%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.0845%" y="661" width="0.0805%" height="15" fill="rgb(225,45,2)" fg:x="809" fg:w="1"/><text x="65.3345%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.0845%" y="645" width="0.0805%" height="15" fill="rgb(221,80,29)" fg:x="809" fg:w="1"/><text x="65.3345%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.0845%" y="629" width="0.0805%" height="15" fill="rgb(228,11,19)" fg:x="809" fg:w="1"/><text x="65.3345%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (20 samples, 1.61%)</title><rect x="63.6364%" y="789" width="1.6090%" height="15" fill="rgb(243,17,21)" fg:x="791" fg:w="20"/><text x="63.8864%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.61%)</title><rect x="63.6364%" y="773" width="1.6090%" height="15" fill="rgb(243,88,8)" fg:x="791" fg:w="20"/><text x="63.8864%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="65.0040%" y="757" width="0.2414%" height="15" fill="rgb(214,17,9)" fg:x="808" fg:w="3"/><text x="65.2540%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="65.0845%" y="741" width="0.1609%" height="15" fill="rgb(232,169,15)" fg:x="809" fg:w="2"/><text x="65.3345%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="65.0845%" y="725" width="0.1609%" height="15" fill="rgb(232,86,53)" fg:x="809" fg:w="2"/><text x="65.3345%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.1649%" y="709" width="0.0805%" height="15" fill="rgb(222,100,4)" fg:x="810" fg:w="1"/><text x="65.4149%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.1649%" y="693" width="0.0805%" height="15" fill="rgb(253,151,38)" fg:x="810" fg:w="1"/><text x="65.4149%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.1649%" y="677" width="0.0805%" height="15" fill="rgb(238,215,29)" fg:x="810" fg:w="1"/><text x="65.4149%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.1649%" y="661" width="0.0805%" height="15" fill="rgb(205,128,53)" fg:x="810" fg:w="1"/><text x="65.4149%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.1649%" y="645" width="0.0805%" height="15" fill="rgb(248,183,14)" fg:x="810" fg:w="1"/><text x="65.4149%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.1649%" y="629" width="0.0805%" height="15" fill="rgb(244,172,35)" fg:x="810" fg:w="1"/><text x="65.4149%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.1649%" y="613" width="0.0805%" height="15" fill="rgb(234,93,19)" fg:x="810" fg:w="1"/><text x="65.4149%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="65.3258%" y="709" width="0.0805%" height="15" fill="rgb(227,109,7)" fg:x="812" fg:w="1"/><text x="65.5758%" y="719.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="65.3258%" y="693" width="0.0805%" height="15" fill="rgb(233,136,54)" fg:x="812" fg:w="1"/><text x="65.5758%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4063%" y="661" width="0.0805%" height="15" fill="rgb(233,19,40)" fg:x="813" fg:w="1"/><text x="65.6563%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4063%" y="645" width="0.0805%" height="15" fill="rgb(247,41,18)" fg:x="813" fg:w="1"/><text x="65.6563%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4063%" y="629" width="0.0805%" height="15" fill="rgb(220,34,34)" fg:x="813" fg:w="1"/><text x="65.6563%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4063%" y="613" width="0.0805%" height="15" fill="rgb(222,135,32)" fg:x="813" fg:w="1"/><text x="65.6563%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4063%" y="597" width="0.0805%" height="15" fill="rgb(214,80,19)" fg:x="813" fg:w="1"/><text x="65.6563%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4063%" y="581" width="0.0805%" height="15" fill="rgb(234,54,46)" fg:x="813" fg:w="1"/><text x="65.6563%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.4063%" y="565" width="0.0805%" height="15" fill="rgb(251,48,23)" fg:x="813" fg:w="1"/><text x="65.6563%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.4063%" y="549" width="0.0805%" height="15" fill="rgb(254,109,52)" fg:x="813" fg:w="1"/><text x="65.6563%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.4063%" y="533" width="0.0805%" height="15" fill="rgb(240,186,19)" fg:x="813" fg:w="1"/><text x="65.6563%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.4063%" y="517" width="0.0805%" height="15" fill="rgb(246,187,17)" fg:x="813" fg:w="1"/><text x="65.6563%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.4063%" y="501" width="0.0805%" height="15" fill="rgb(212,21,5)" fg:x="813" fg:w="1"/><text x="65.6563%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.4063%" y="485" width="0.0805%" height="15" fill="rgb(225,185,18)" fg:x="813" fg:w="1"/><text x="65.6563%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.4063%" y="469" width="0.0805%" height="15" fill="rgb(245,114,17)" fg:x="813" fg:w="1"/><text x="65.6563%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.4063%" y="453" width="0.0805%" height="15" fill="rgb(223,164,24)" fg:x="813" fg:w="1"/><text x="65.6563%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.4063%" y="437" width="0.0805%" height="15" fill="rgb(211,228,3)" fg:x="813" fg:w="1"/><text x="65.6563%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.4063%" y="421" width="0.0805%" height="15" fill="rgb(223,16,38)" fg:x="813" fg:w="1"/><text x="65.6563%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="65.3258%" y="741" width="0.3218%" height="15" fill="rgb(207,31,54)" fg:x="812" fg:w="4"/><text x="65.5758%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="65.3258%" y="725" width="0.3218%" height="15" fill="rgb(220,39,11)" fg:x="812" fg:w="4"/><text x="65.5758%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="65.4063%" y="709" width="0.2414%" height="15" fill="rgb(235,185,0)" fg:x="813" fg:w="3"/><text x="65.6563%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="65.4063%" y="693" width="0.2414%" height="15" fill="rgb(249,39,18)" fg:x="813" fg:w="3"/><text x="65.6563%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="65.4063%" y="677" width="0.2414%" height="15" fill="rgb(240,110,33)" fg:x="813" fg:w="3"/><text x="65.6563%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.4867%" y="661" width="0.1609%" height="15" fill="rgb(210,92,42)" fg:x="814" fg:w="2"/><text x="65.7367%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.4867%" y="645" width="0.1609%" height="15" fill="rgb(218,215,28)" fg:x="814" fg:w="2"/><text x="65.7367%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.5672%" y="629" width="0.0805%" height="15" fill="rgb(238,215,36)" fg:x="815" fg:w="1"/><text x="65.8172%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5672%" y="613" width="0.0805%" height="15" fill="rgb(220,31,10)" fg:x="815" fg:w="1"/><text x="65.8172%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.5672%" y="597" width="0.0805%" height="15" fill="rgb(212,93,14)" fg:x="815" fg:w="1"/><text x="65.8172%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5672%" y="581" width="0.0805%" height="15" fill="rgb(254,207,2)" fg:x="815" fg:w="1"/><text x="65.8172%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.5672%" y="565" width="0.0805%" height="15" fill="rgb(205,57,44)" fg:x="815" fg:w="1"/><text x="65.8172%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5672%" y="549" width="0.0805%" height="15" fill="rgb(226,151,19)" fg:x="815" fg:w="1"/><text x="65.8172%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.5672%" y="533" width="0.0805%" height="15" fill="rgb(230,72,30)" fg:x="815" fg:w="1"/><text x="65.8172%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5672%" y="517" width="0.0805%" height="15" fill="rgb(244,0,8)" fg:x="815" fg:w="1"/><text x="65.8172%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.5672%" y="501" width="0.0805%" height="15" fill="rgb(230,192,6)" fg:x="815" fg:w="1"/><text x="65.8172%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="65.6476%" y="645" width="0.2414%" height="15" fill="rgb(233,207,13)" fg:x="816" fg:w="3"/><text x="65.8976%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="65.8890%" y="629" width="0.0805%" height="15" fill="rgb(206,227,7)" fg:x="819" fg:w="1"/><text x="66.1390%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.0499%" y="517" width="0.0805%" height="15" fill="rgb(213,217,25)" fg:x="821" fg:w="1"/><text x="66.2999%" y="527.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="65.6476%" y="725" width="0.5632%" height="15" fill="rgb(249,75,4)" fg:x="816" fg:w="7"/><text x="65.8976%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="65.6476%" y="709" width="0.5632%" height="15" fill="rgb(225,114,18)" fg:x="816" fg:w="7"/><text x="65.8976%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="65.6476%" y="693" width="0.5632%" height="15" fill="rgb(211,162,40)" fg:x="816" fg:w="7"/><text x="65.8976%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="65.6476%" y="677" width="0.5632%" height="15" fill="rgb(206,49,29)" fg:x="816" fg:w="7"/><text x="65.8976%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="65.6476%" y="661" width="0.5632%" height="15" fill="rgb(244,8,6)" fg:x="816" fg:w="7"/><text x="65.8976%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="65.8890%" y="645" width="0.3218%" height="15" fill="rgb(231,194,28)" fg:x="819" fg:w="4"/><text x="66.1390%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="65.9694%" y="629" width="0.2414%" height="15" fill="rgb(210,69,5)" fg:x="820" fg:w="3"/><text x="66.2194%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="65.9694%" y="613" width="0.2414%" height="15" fill="rgb(216,186,12)" fg:x="820" fg:w="3"/><text x="66.2194%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="65.9694%" y="597" width="0.2414%" height="15" fill="rgb(238,61,15)" fg:x="820" fg:w="3"/><text x="66.2194%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="65.9694%" y="581" width="0.2414%" height="15" fill="rgb(226,104,1)" fg:x="820" fg:w="3"/><text x="66.2194%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="65.9694%" y="565" width="0.2414%" height="15" fill="rgb(229,128,15)" fg:x="820" fg:w="3"/><text x="66.2194%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="66.0499%" y="549" width="0.1609%" height="15" fill="rgb(247,110,15)" fg:x="821" fg:w="2"/><text x="66.2999%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.0499%" y="533" width="0.1609%" height="15" fill="rgb(210,74,48)" fg:x="821" fg:w="2"/><text x="66.2999%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="66.1303%" y="517" width="0.0805%" height="15" fill="rgb(246,121,10)" fg:x="822" fg:w="1"/><text x="66.3803%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.1303%" y="501" width="0.0805%" height="15" fill="rgb(214,156,37)" fg:x="822" fg:w="1"/><text x="66.3803%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.4521%" y="661" width="0.0805%" height="15" fill="rgb(214,210,34)" fg:x="826" fg:w="1"/><text x="66.7021%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.4521%" y="645" width="0.0805%" height="15" fill="rgb(237,93,35)" fg:x="826" fg:w="1"/><text x="66.7021%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="66.4521%" y="629" width="0.0805%" height="15" fill="rgb(206,36,8)" fg:x="826" fg:w="1"/><text x="66.7021%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="66.5326%" y="517" width="0.0805%" height="15" fill="rgb(208,151,12)" fg:x="827" fg:w="1"/><text x="66.7826%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.5326%" y="501" width="0.0805%" height="15" fill="rgb(225,133,52)" fg:x="827" fg:w="1"/><text x="66.7826%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.5326%" y="485" width="0.0805%" height="15" fill="rgb(231,71,53)" fg:x="827" fg:w="1"/><text x="66.7826%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="66.5326%" y="469" width="0.0805%" height="15" fill="rgb(243,76,21)" fg:x="827" fg:w="1"/><text x="66.7826%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.5326%" y="453" width="0.0805%" height="15" fill="rgb(252,144,3)" fg:x="827" fg:w="1"/><text x="66.7826%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.5326%" y="437" width="0.0805%" height="15" fill="rgb(231,199,10)" fg:x="827" fg:w="1"/><text x="66.7826%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="66.5326%" y="421" width="0.0805%" height="15" fill="rgb(215,18,11)" fg:x="827" fg:w="1"/><text x="66.7826%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="66.5326%" y="405" width="0.0805%" height="15" fill="rgb(241,65,24)" fg:x="827" fg:w="1"/><text x="66.7826%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="66.4521%" y="693" width="0.2414%" height="15" fill="rgb(251,192,38)" fg:x="826" fg:w="3"/><text x="66.7021%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.4521%" y="677" width="0.2414%" height="15" fill="rgb(205,9,35)" fg:x="826" fg:w="3"/><text x="66.7021%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="66.5326%" y="661" width="0.1609%" height="15" fill="rgb(229,225,49)" fg:x="827" fg:w="2"/><text x="66.7826%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.5326%" y="645" width="0.1609%" height="15" fill="rgb(207,125,39)" fg:x="827" fg:w="2"/><text x="66.7826%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.5326%" y="629" width="0.1609%" height="15" fill="rgb(222,78,19)" fg:x="827" fg:w="2"/><text x="66.7826%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="66.5326%" y="613" width="0.1609%" height="15" fill="rgb(248,207,20)" fg:x="827" fg:w="2"/><text x="66.7826%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.5326%" y="597" width="0.1609%" height="15" fill="rgb(205,103,49)" fg:x="827" fg:w="2"/><text x="66.7826%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.5326%" y="581" width="0.1609%" height="15" fill="rgb(216,42,28)" fg:x="827" fg:w="2"/><text x="66.7826%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="66.5326%" y="565" width="0.1609%" height="15" fill="rgb(213,205,53)" fg:x="827" fg:w="2"/><text x="66.7826%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.5326%" y="549" width="0.1609%" height="15" fill="rgb(239,140,53)" fg:x="827" fg:w="2"/><text x="66.7826%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.5326%" y="533" width="0.1609%" height="15" fill="rgb(248,95,9)" fg:x="827" fg:w="2"/><text x="66.7826%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.6130%" y="517" width="0.0805%" height="15" fill="rgb(254,58,47)" fg:x="828" fg:w="1"/><text x="66.8630%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.6935%" y="661" width="0.0805%" height="15" fill="rgb(234,227,14)" fg:x="829" fg:w="1"/><text x="66.9435%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (15 samples, 1.21%)</title><rect x="65.6476%" y="741" width="1.2068%" height="15" fill="rgb(205,192,45)" fg:x="816" fg:w="15"/><text x="65.8976%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="66.2108%" y="725" width="0.6436%" height="15" fill="rgb(253,187,31)" fg:x="823" fg:w="8"/><text x="66.4608%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="66.2108%" y="709" width="0.6436%" height="15" fill="rgb(222,6,32)" fg:x="823" fg:w="8"/><text x="66.4608%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.6935%" y="693" width="0.1609%" height="15" fill="rgb(249,190,19)" fg:x="829" fg:w="2"/><text x="66.9435%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.6935%" y="677" width="0.1609%" height="15" fill="rgb(251,28,20)" fg:x="829" fg:w="2"/><text x="66.9435%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="66.7739%" y="661" width="0.0805%" height="15" fill="rgb(210,223,40)" fg:x="830" fg:w="1"/><text x="67.0239%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.8544%" y="725" width="0.0805%" height="15" fill="rgb(216,137,22)" fg:x="831" fg:w="1"/><text x="67.1044%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.0153%" y="693" width="0.0805%" height="15" fill="rgb(247,39,34)" fg:x="833" fg:w="1"/><text x="67.2653%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.0153%" y="677" width="0.0805%" height="15" fill="rgb(239,43,50)" fg:x="833" fg:w="1"/><text x="67.2653%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.0153%" y="661" width="0.0805%" height="15" fill="rgb(241,212,9)" fg:x="833" fg:w="1"/><text x="67.2653%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0153%" y="645" width="0.0805%" height="15" fill="rgb(205,8,2)" fg:x="833" fg:w="1"/><text x="67.2653%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0153%" y="629" width="0.0805%" height="15" fill="rgb(217,173,54)" fg:x="833" fg:w="1"/><text x="67.2653%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.0153%" y="613" width="0.0805%" height="15" fill="rgb(208,149,52)" fg:x="833" fg:w="1"/><text x="67.2653%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.0153%" y="597" width="0.0805%" height="15" fill="rgb(239,99,40)" fg:x="833" fg:w="1"/><text x="67.2653%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.0153%" y="581" width="0.0805%" height="15" fill="rgb(233,214,26)" fg:x="833" fg:w="1"/><text x="67.2653%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="67.0153%" y="565" width="0.0805%" height="15" fill="rgb(231,225,37)" fg:x="833" fg:w="1"/><text x="67.2653%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.0153%" y="549" width="0.0805%" height="15" fill="rgb(252,55,35)" fg:x="833" fg:w="1"/><text x="67.2653%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (24 samples, 1.93%)</title><rect x="65.2454%" y="789" width="1.9308%" height="15" fill="rgb(239,43,18)" fg:x="811" fg:w="24"/><text x="65.4954%" y="799.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (24 samples, 1.93%)</title><rect x="65.2454%" y="773" width="1.9308%" height="15" fill="rgb(251,125,49)" fg:x="811" fg:w="24"/><text x="65.4954%" y="783.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (23 samples, 1.85%)</title><rect x="65.3258%" y="757" width="1.8504%" height="15" fill="rgb(212,83,54)" fg:x="812" fg:w="23"/><text x="65.5758%" y="767.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="66.8544%" y="741" width="0.3218%" height="15" fill="rgb(250,75,6)" fg:x="831" fg:w="4"/><text x="67.1044%" y="751.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="66.9348%" y="725" width="0.2414%" height="15" fill="rgb(252,36,40)" fg:x="832" fg:w="3"/><text x="67.1848%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="66.9348%" y="709" width="0.2414%" height="15" fill="rgb(230,91,51)" fg:x="832" fg:w="3"/><text x="67.1848%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.0957%" y="693" width="0.0805%" height="15" fill="rgb(212,92,28)" fg:x="834" fg:w="1"/><text x="67.3457%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.0957%" y="677" width="0.0805%" height="15" fill="rgb(227,13,22)" fg:x="834" fg:w="1"/><text x="67.3457%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.0957%" y="661" width="0.0805%" height="15" fill="rgb(239,204,32)" fg:x="834" fg:w="1"/><text x="67.3457%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.0957%" y="645" width="0.0805%" height="15" fill="rgb(228,49,41)" fg:x="834" fg:w="1"/><text x="67.3457%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.0957%" y="629" width="0.0805%" height="15" fill="rgb(206,95,6)" fg:x="834" fg:w="1"/><text x="67.3457%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.0957%" y="613" width="0.0805%" height="15" fill="rgb(251,20,14)" fg:x="834" fg:w="1"/><text x="67.3457%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.0957%" y="597" width="0.0805%" height="15" fill="rgb(214,99,28)" fg:x="834" fg:w="1"/><text x="67.3457%" y="607.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="67.1762%" y="789" width="0.0805%" height="15" fill="rgb(239,122,54)" fg:x="835" fg:w="1"/><text x="67.4262%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="67.1762%" y="773" width="0.0805%" height="15" fill="rgb(218,217,46)" fg:x="835" fg:w="1"/><text x="67.4262%" y="783.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="67.1762%" y="757" width="0.0805%" height="15" fill="rgb(249,106,28)" fg:x="835" fg:w="1"/><text x="67.4262%" y="767.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="67.1762%" y="741" width="0.0805%" height="15" fill="rgb(250,158,18)" fg:x="835" fg:w="1"/><text x="67.4262%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="67.1762%" y="725" width="0.0805%" height="15" fill="rgb(226,137,29)" fg:x="835" fg:w="1"/><text x="67.4262%" y="735.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3371%" y="741" width="0.0805%" height="15" fill="rgb(210,188,1)" fg:x="837" fg:w="1"/><text x="67.5871%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.3371%" y="725" width="0.0805%" height="15" fill="rgb(227,84,42)" fg:x="837" fg:w="1"/><text x="67.5871%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.3371%" y="709" width="0.0805%" height="15" fill="rgb(222,147,48)" fg:x="837" fg:w="1"/><text x="67.5871%" y="719.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="67.2566%" y="789" width="0.2414%" height="15" fill="rgb(241,150,43)" fg:x="836" fg:w="3"/><text x="67.5066%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="67.2566%" y="773" width="0.2414%" height="15" fill="rgb(206,139,52)" fg:x="836" fg:w="3"/><text x="67.5066%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="67.2566%" y="757" width="0.2414%" height="15" fill="rgb(230,63,14)" fg:x="836" fg:w="3"/><text x="67.5066%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.4175%" y="741" width="0.0805%" height="15" fill="rgb(247,8,20)" fg:x="838" fg:w="1"/><text x="67.6675%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.4175%" y="725" width="0.0805%" height="15" fill="rgb(213,115,4)" fg:x="838" fg:w="1"/><text x="67.6675%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.4175%" y="709" width="0.0805%" height="15" fill="rgb(241,79,49)" fg:x="838" fg:w="1"/><text x="67.6675%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.4175%" y="693" width="0.0805%" height="15" fill="rgb(222,42,35)" fg:x="838" fg:w="1"/><text x="67.6675%" y="703.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="67.4980%" y="789" width="0.0805%" height="15" fill="rgb(247,59,23)" fg:x="839" fg:w="1"/><text x="67.7480%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (841 samples, 67.66%)</title><rect x="0.0000%" y="853" width="67.6589%" height="15" fill="rgb(247,93,18)" fg:x="0" fg:w="841"/><text x="0.2500%" y="863.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (841 samples, 67.66%)</title><rect x="0.0000%" y="837" width="67.6589%" height="15" fill="rgb(249,107,47)" fg:x="0" fg:w="841"/><text x="0.2500%" y="847.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (841 samples, 67.66%)</title><rect x="0.0000%" y="821" width="67.6589%" height="15" fill="rgb(219,27,1)" fg:x="0" fg:w="841"/><text x="0.2500%" y="831.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (191 samples, 15.37%)</title><rect x="52.2928%" y="805" width="15.3660%" height="15" fill="rgb(217,82,32)" fg:x="650" fg:w="191"/><text x="52.5428%" y="815.50">engine::session::Session..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="67.5784%" y="789" width="0.0805%" height="15" fill="rgb(250,129,47)" fg:x="840" fg:w="1"/><text x="67.8284%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="67.5784%" y="773" width="0.0805%" height="15" fill="rgb(253,88,35)" fg:x="840" fg:w="1"/><text x="67.8284%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="67.5784%" y="757" width="0.0805%" height="15" fill="rgb(245,221,14)" fg:x="840" fg:w="1"/><text x="67.8284%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="67.5784%" y="741" width="0.0805%" height="15" fill="rgb(217,119,54)" fg:x="840" fg:w="1"/><text x="67.8284%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="67.5784%" y="725" width="0.0805%" height="15" fill="rgb(247,128,31)" fg:x="840" fg:w="1"/><text x="67.8284%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="67.5784%" y="709" width="0.0805%" height="15" fill="rgb(211,99,22)" fg:x="840" fg:w="1"/><text x="67.8284%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="67.5784%" y="693" width="0.0805%" height="15" fill="rgb(212,20,17)" fg:x="840" fg:w="1"/><text x="67.8284%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="67.5784%" y="677" width="0.0805%" height="15" fill="rgb(209,159,29)" fg:x="840" fg:w="1"/><text x="67.8284%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="67.5784%" y="661" width="0.0805%" height="15" fill="rgb(222,177,53)" fg:x="840" fg:w="1"/><text x="67.8284%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="67.5784%" y="645" width="0.0805%" height="15" fill="rgb(234,46,43)" fg:x="840" fg:w="1"/><text x="67.8284%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="67.5784%" y="629" width="0.0805%" height="15" fill="rgb(208,108,14)" fg:x="840" fg:w="1"/><text x="67.8284%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="67.5784%" y="613" width="0.0805%" height="15" fill="rgb(226,78,53)" fg:x="840" fg:w="1"/><text x="67.8284%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="67.5784%" y="597" width="0.0805%" height="15" fill="rgb(230,20,41)" fg:x="840" fg:w="1"/><text x="67.8284%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="67.5784%" y="581" width="0.0805%" height="15" fill="rgb(213,195,35)" fg:x="840" fg:w="1"/><text x="67.8284%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="67.5784%" y="565" width="0.0805%" height="15" fill="rgb(242,62,36)" fg:x="840" fg:w="1"/><text x="67.8284%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="67.5784%" y="549" width="0.0805%" height="15" fill="rgb(222,210,37)" fg:x="840" fg:w="1"/><text x="67.8284%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="67.5784%" y="533" width="0.0805%" height="15" fill="rgb(232,107,19)" fg:x="840" fg:w="1"/><text x="67.8284%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="67.5784%" y="517" width="0.0805%" height="15" fill="rgb(235,85,17)" fg:x="840" fg:w="1"/><text x="67.8284%" y="527.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="67.5784%" y="501" width="0.0805%" height="15" fill="rgb(219,195,31)" fg:x="840" fg:w="1"/><text x="67.8284%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="67.5784%" y="485" width="0.0805%" height="15" fill="rgb(231,183,30)" fg:x="840" fg:w="1"/><text x="67.8284%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.6589%" y="789" width="0.0805%" height="15" fill="rgb(212,0,11)" fg:x="841" fg:w="1"/><text x="67.9089%" y="799.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="68.0611%" y="661" width="0.2414%" height="15" fill="rgb(249,53,54)" fg:x="846" fg:w="3"/><text x="68.3111%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="68.0611%" y="677" width="0.3218%" height="15" fill="rgb(211,118,13)" fg:x="846" fg:w="4"/><text x="68.3111%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.3025%" y="661" width="0.0805%" height="15" fill="rgb(237,42,9)" fg:x="849" fg:w="1"/><text x="68.5525%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.3829%" y="677" width="0.0805%" height="15" fill="rgb(227,68,32)" fg:x="850" fg:w="1"/><text x="68.6329%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.4634%" y="677" width="0.0805%" height="15" fill="rgb(238,10,7)" fg:x="851" fg:w="1"/><text x="68.7134%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.4634%" y="661" width="0.0805%" height="15" fill="rgb(224,42,12)" fg:x="851" fg:w="1"/><text x="68.7134%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.6243%" y="645" width="0.0805%" height="15" fill="rgb(252,190,5)" fg:x="853" fg:w="1"/><text x="68.8743%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.13%)</title><rect x="67.6589%" y="805" width="1.1263%" height="15" fill="rgb(220,214,39)" fg:x="841" fg:w="14"/><text x="67.9089%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (13 samples, 1.05%)</title><rect x="67.7393%" y="789" width="1.0459%" height="15" fill="rgb(247,98,4)" fg:x="842" fg:w="13"/><text x="67.9893%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.97%)</title><rect x="67.8198%" y="773" width="0.9654%" height="15" fill="rgb(211,60,12)" fg:x="843" fg:w="12"/><text x="68.0698%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (12 samples, 0.97%)</title><rect x="67.8198%" y="757" width="0.9654%" height="15" fill="rgb(224,42,10)" fg:x="843" fg:w="12"/><text x="68.0698%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.97%)</title><rect x="67.8198%" y="741" width="0.9654%" height="15" fill="rgb(217,167,4)" fg:x="843" fg:w="12"/><text x="68.0698%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="67.9002%" y="725" width="0.8850%" height="15" fill="rgb(253,18,17)" fg:x="844" fg:w="11"/><text x="68.1502%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="67.9807%" y="709" width="0.8045%" height="15" fill="rgb(249,186,44)" fg:x="845" fg:w="10"/><text x="68.2307%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="67.9807%" y="693" width="0.8045%" height="15" fill="rgb(254,124,54)" fg:x="845" fg:w="10"/><text x="68.2307%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="68.5438%" y="677" width="0.2414%" height="15" fill="rgb(220,124,39)" fg:x="852" fg:w="3"/><text x="68.7938%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.6243%" y="661" width="0.1609%" height="15" fill="rgb(225,96,46)" fg:x="853" fg:w="2"/><text x="68.8743%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.7047%" y="645" width="0.0805%" height="15" fill="rgb(221,106,12)" fg:x="854" fg:w="1"/><text x="68.9547%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.7047%" y="629" width="0.0805%" height="15" fill="rgb(227,133,23)" fg:x="854" fg:w="1"/><text x="68.9547%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.7047%" y="613" width="0.0805%" height="15" fill="rgb(216,44,52)" fg:x="854" fg:w="1"/><text x="68.9547%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="68.7852%" y="709" width="0.0805%" height="15" fill="rgb(239,149,7)" fg:x="855" fg:w="1"/><text x="69.0352%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="68.7852%" y="693" width="0.0805%" height="15" fill="rgb(211,157,31)" fg:x="855" fg:w="1"/><text x="69.0352%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="68.7852%" y="677" width="0.0805%" height="15" fill="rgb(206,215,22)" fg:x="855" fg:w="1"/><text x="69.0352%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="68.7852%" y="661" width="0.0805%" height="15" fill="rgb(208,113,15)" fg:x="855" fg:w="1"/><text x="69.0352%" y="671.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="68.7852%" y="645" width="0.0805%" height="15" fill="rgb(207,189,15)" fg:x="855" fg:w="1"/><text x="69.0352%" y="655.50"></text></g><g><title>anyhow::error::object_drop (1 samples, 0.08%)</title><rect x="68.8656%" y="709" width="0.0805%" height="15" fill="rgb(231,115,4)" fg:x="856" fg:w="1"/><text x="69.1156%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;libloading::error::Error&gt; (1 samples, 0.08%)</title><rect x="68.8656%" y="693" width="0.0805%" height="15" fill="rgb(253,117,2)" fg:x="856" fg:w="1"/><text x="69.1156%" y="703.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="68.9461%" y="709" width="0.0805%" height="15" fill="rgb(248,48,24)" fg:x="857" fg:w="1"/><text x="69.1961%" y="719.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="69.0265%" y="693" width="0.0805%" height="15" fill="rgb(241,28,46)" fg:x="858" fg:w="1"/><text x="69.2765%" y="703.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="69.0265%" y="677" width="0.0805%" height="15" fill="rgb(216,165,52)" fg:x="858" fg:w="1"/><text x="69.2765%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="69.0265%" y="661" width="0.0805%" height="15" fill="rgb(220,222,34)" fg:x="858" fg:w="1"/><text x="69.2765%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="69.0265%" y="645" width="0.0805%" height="15" fill="rgb(247,222,49)" fg:x="858" fg:w="1"/><text x="69.2765%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="69.0265%" y="629" width="0.0805%" height="15" fill="rgb(240,10,31)" fg:x="858" fg:w="1"/><text x="69.2765%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="69.0265%" y="613" width="0.0805%" height="15" fill="rgb(221,199,35)" fg:x="858" fg:w="1"/><text x="69.2765%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.0265%" y="597" width="0.0805%" height="15" fill="rgb(230,223,11)" fg:x="858" fg:w="1"/><text x="69.2765%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.0265%" y="581" width="0.0805%" height="15" fill="rgb(218,82,45)" fg:x="858" fg:w="1"/><text x="69.2765%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.0265%" y="565" width="0.0805%" height="15" fill="rgb(233,213,33)" fg:x="858" fg:w="1"/><text x="69.2765%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.0265%" y="549" width="0.0805%" height="15" fill="rgb(210,143,52)" fg:x="858" fg:w="1"/><text x="69.2765%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.0265%" y="533" width="0.0805%" height="15" fill="rgb(206,95,4)" fg:x="858" fg:w="1"/><text x="69.2765%" y="543.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="69.1070%" y="693" width="0.0805%" height="15" fill="rgb(246,164,46)" fg:x="859" fg:w="1"/><text x="69.3570%" y="703.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (9 samples, 0.72%)</title><rect x="68.7852%" y="741" width="0.7241%" height="15" fill="rgb(213,210,47)" fg:x="855" fg:w="9"/><text x="69.0352%" y="751.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.72%)</title><rect x="68.7852%" y="725" width="0.7241%" height="15" fill="rgb(210,12,38)" fg:x="855" fg:w="9"/><text x="69.0352%" y="735.50"></text></g><g><title>libloading::safe::Library::new (6 samples, 0.48%)</title><rect x="69.0265%" y="709" width="0.4827%" height="15" fill="rgb(252,192,54)" fg:x="858" fg:w="6"/><text x="69.2765%" y="719.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="69.1874%" y="693" width="0.3218%" height="15" fill="rgb(242,92,6)" fg:x="860" fg:w="4"/><text x="69.4374%" y="703.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="69.1874%" y="677" width="0.3218%" height="15" fill="rgb(253,154,15)" fg:x="860" fg:w="4"/><text x="69.4374%" y="687.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="69.1874%" y="661" width="0.3218%" height="15" fill="rgb(209,20,43)" fg:x="860" fg:w="4"/><text x="69.4374%" y="671.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="69.1874%" y="645" width="0.3218%" height="15" fill="rgb(232,28,49)" fg:x="860" fg:w="4"/><text x="69.4374%" y="655.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="69.1874%" y="629" width="0.3218%" height="15" fill="rgb(248,131,53)" fg:x="860" fg:w="4"/><text x="69.4374%" y="639.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (14 samples, 1.13%)</title><rect x="68.7852%" y="805" width="1.1263%" height="15" fill="rgb(214,16,30)" fg:x="855" fg:w="14"/><text x="69.0352%" y="815.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (14 samples, 1.13%)</title><rect x="68.7852%" y="789" width="1.1263%" height="15" fill="rgb(245,16,0)" fg:x="855" fg:w="14"/><text x="69.0352%" y="799.50"></text></g><g><title>engine::session::Session::new (14 samples, 1.13%)</title><rect x="68.7852%" y="773" width="1.1263%" height="15" fill="rgb(245,17,35)" fg:x="855" fg:w="14"/><text x="69.0352%" y="783.50"></text></g><g><title>engine::session::Session::initialize (14 samples, 1.13%)</title><rect x="68.7852%" y="757" width="1.1263%" height="15" fill="rgb(249,27,53)" fg:x="855" fg:w="14"/><text x="69.0352%" y="767.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (5 samples, 0.40%)</title><rect x="69.5093%" y="741" width="0.4023%" height="15" fill="rgb(214,73,24)" fg:x="864" fg:w="5"/><text x="69.7593%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="69.5093%" y="725" width="0.4023%" height="15" fill="rgb(223,84,37)" fg:x="864" fg:w="5"/><text x="69.7593%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="69.5897%" y="709" width="0.3218%" height="15" fill="rgb(210,109,28)" fg:x="865" fg:w="4"/><text x="69.8397%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="69.5897%" y="693" width="0.3218%" height="15" fill="rgb(208,186,6)" fg:x="865" fg:w="4"/><text x="69.8397%" y="703.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="69.5897%" y="677" width="0.3218%" height="15" fill="rgb(235,201,30)" fg:x="865" fg:w="4"/><text x="69.8397%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9115%" y="789" width="0.0805%" height="15" fill="rgb(216,198,48)" fg:x="869" fg:w="1"/><text x="70.1615%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9115%" y="773" width="0.0805%" height="15" fill="rgb(254,186,25)" fg:x="869" fg:w="1"/><text x="70.1615%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9115%" y="757" width="0.0805%" height="15" fill="rgb(227,87,5)" fg:x="869" fg:w="1"/><text x="70.1615%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.9115%" y="741" width="0.0805%" height="15" fill="rgb(236,205,25)" fg:x="869" fg:w="1"/><text x="70.1615%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.9115%" y="725" width="0.0805%" height="15" fill="rgb(229,99,32)" fg:x="869" fg:w="1"/><text x="70.1615%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.9115%" y="709" width="0.0805%" height="15" fill="rgb(231,177,31)" fg:x="869" fg:w="1"/><text x="70.1615%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="69.9115%" y="693" width="0.0805%" height="15" fill="rgb(246,15,2)" fg:x="869" fg:w="1"/><text x="70.1615%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="69.9115%" y="677" width="0.0805%" height="15" fill="rgb(207,39,15)" fg:x="869" fg:w="1"/><text x="70.1615%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="69.9920%" y="789" width="0.0805%" height="15" fill="rgb(207,44,9)" fg:x="870" fg:w="1"/><text x="70.2420%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.9920%" y="773" width="0.0805%" height="15" fill="rgb(225,224,33)" fg:x="870" fg:w="1"/><text x="70.2420%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (2 samples, 0.16%)</title><rect x="70.0724%" y="789" width="0.1609%" height="15" fill="rgb(252,151,3)" fg:x="871" fg:w="2"/><text x="70.3224%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1529%" y="773" width="0.0805%" height="15" fill="rgb(211,140,13)" fg:x="872" fg:w="1"/><text x="70.4029%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.2333%" y="757" width="0.0805%" height="15" fill="rgb(239,225,17)" fg:x="873" fg:w="1"/><text x="70.4833%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.2333%" y="741" width="0.0805%" height="15" fill="rgb(223,170,52)" fg:x="873" fg:w="1"/><text x="70.4833%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.2333%" y="725" width="0.0805%" height="15" fill="rgb(212,64,21)" fg:x="873" fg:w="1"/><text x="70.4833%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.2333%" y="709" width="0.0805%" height="15" fill="rgb(236,126,48)" fg:x="873" fg:w="1"/><text x="70.4833%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.2333%" y="693" width="0.0805%" height="15" fill="rgb(209,135,11)" fg:x="873" fg:w="1"/><text x="70.4833%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.2333%" y="677" width="0.0805%" height="15" fill="rgb(228,126,40)" fg:x="873" fg:w="1"/><text x="70.4833%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.2333%" y="661" width="0.0805%" height="15" fill="rgb(205,196,36)" fg:x="873" fg:w="1"/><text x="70.4833%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.2333%" y="645" width="0.0805%" height="15" fill="rgb(243,160,33)" fg:x="873" fg:w="1"/><text x="70.4833%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.2333%" y="629" width="0.0805%" height="15" fill="rgb(210,84,20)" fg:x="873" fg:w="1"/><text x="70.4833%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.2333%" y="613" width="0.0805%" height="15" fill="rgb(228,213,30)" fg:x="873" fg:w="1"/><text x="70.4833%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.2333%" y="597" width="0.0805%" height="15" fill="rgb(252,33,45)" fg:x="873" fg:w="1"/><text x="70.4833%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2333%" y="581" width="0.0805%" height="15" fill="rgb(254,227,20)" fg:x="873" fg:w="1"/><text x="70.4833%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="70.2333%" y="773" width="0.1609%" height="15" fill="rgb(228,192,2)" fg:x="873" fg:w="2"/><text x="70.4833%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.3138%" y="757" width="0.0805%" height="15" fill="rgb(233,32,8)" fg:x="874" fg:w="1"/><text x="70.5638%" y="767.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.3942%" y="741" width="0.0805%" height="15" fill="rgb(220,146,47)" fg:x="875" fg:w="1"/><text x="70.6442%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="70.3942%" y="725" width="0.0805%" height="15" fill="rgb(246,194,1)" fg:x="875" fg:w="1"/><text x="70.6442%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="70.3942%" y="709" width="0.0805%" height="15" fill="rgb(218,203,9)" fg:x="875" fg:w="1"/><text x="70.6442%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.4747%" y="629" width="0.0805%" height="15" fill="rgb(237,97,14)" fg:x="876" fg:w="1"/><text x="70.7247%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="70.4747%" y="677" width="0.1609%" height="15" fill="rgb(239,76,15)" fg:x="876" fg:w="2"/><text x="70.7247%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="70.4747%" y="661" width="0.1609%" height="15" fill="rgb(222,53,45)" fg:x="876" fg:w="2"/><text x="70.7247%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="70.4747%" y="645" width="0.1609%" height="15" fill="rgb(237,88,5)" fg:x="876" fg:w="2"/><text x="70.7247%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="70.5551%" y="629" width="0.0805%" height="15" fill="rgb(218,223,35)" fg:x="877" fg:w="1"/><text x="70.8051%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="70.4747%" y="693" width="0.2414%" height="15" fill="rgb(243,229,38)" fg:x="876" fg:w="3"/><text x="70.7247%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.6356%" y="677" width="0.0805%" height="15" fill="rgb(240,75,41)" fg:x="878" fg:w="1"/><text x="70.8856%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.6356%" y="661" width="0.0805%" height="15" fill="rgb(209,110,37)" fg:x="878" fg:w="1"/><text x="70.8856%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="70.7160%" y="677" width="0.2414%" height="15" fill="rgb(221,130,46)" fg:x="879" fg:w="3"/><text x="70.9660%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.8769%" y="661" width="0.0805%" height="15" fill="rgb(237,160,20)" fg:x="881" fg:w="1"/><text x="71.1269%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="71.0378%" y="629" width="0.0805%" height="15" fill="rgb(234,126,24)" fg:x="883" fg:w="1"/><text x="71.2878%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="71.1183%" y="629" width="0.0805%" height="15" fill="rgb(207,177,9)" fg:x="884" fg:w="1"/><text x="71.3683%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.1183%" y="613" width="0.0805%" height="15" fill="rgb(231,191,33)" fg:x="884" fg:w="1"/><text x="71.3683%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.1183%" y="597" width="0.0805%" height="15" fill="rgb(207,42,1)" fg:x="884" fg:w="1"/><text x="71.3683%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="71.0378%" y="661" width="0.2414%" height="15" fill="rgb(218,34,50)" fg:x="883" fg:w="3"/><text x="71.2878%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="71.0378%" y="645" width="0.2414%" height="15" fill="rgb(254,126,39)" fg:x="883" fg:w="3"/><text x="71.2878%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="71.1987%" y="629" width="0.0805%" height="15" fill="rgb(251,17,26)" fg:x="885" fg:w="1"/><text x="71.4487%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="71.2792%" y="661" width="0.1609%" height="15" fill="rgb(252,215,34)" fg:x="886" fg:w="2"/><text x="71.5292%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="71.2792%" y="645" width="0.1609%" height="15" fill="rgb(217,120,44)" fg:x="886" fg:w="2"/><text x="71.5292%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="71.4401%" y="645" width="0.0805%" height="15" fill="rgb(211,31,11)" fg:x="888" fg:w="1"/><text x="71.6901%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="71.5205%" y="645" width="0.1609%" height="15" fill="rgb(222,69,51)" fg:x="889" fg:w="2"/><text x="71.7705%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="71.6814%" y="629" width="0.2414%" height="15" fill="rgb(215,229,42)" fg:x="891" fg:w="3"/><text x="71.9314%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="71.7619%" y="613" width="0.1609%" height="15" fill="rgb(212,102,15)" fg:x="892" fg:w="2"/><text x="72.0119%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.8423%" y="597" width="0.0805%" height="15" fill="rgb(205,179,41)" fg:x="893" fg:w="1"/><text x="72.0923%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.0032%" y="613" width="0.0805%" height="15" fill="rgb(219,148,46)" fg:x="895" fg:w="1"/><text x="72.2532%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.0032%" y="597" width="0.0805%" height="15" fill="rgb(243,40,19)" fg:x="895" fg:w="1"/><text x="72.2532%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="70.9574%" y="677" width="1.2068%" height="15" fill="rgb(208,206,34)" fg:x="882" fg:w="15"/><text x="71.2074%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="71.4401%" y="661" width="0.7241%" height="15" fill="rgb(244,184,38)" fg:x="888" fg:w="9"/><text x="71.6901%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="71.6814%" y="645" width="0.4827%" height="15" fill="rgb(244,151,47)" fg:x="891" fg:w="6"/><text x="71.9314%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="71.9228%" y="629" width="0.2414%" height="15" fill="rgb(236,134,42)" fg:x="894" fg:w="3"/><text x="72.1728%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="72.0837%" y="613" width="0.0805%" height="15" fill="rgb(233,93,22)" fg:x="896" fg:w="1"/><text x="72.3337%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.0837%" y="597" width="0.0805%" height="15" fill="rgb(211,202,10)" fg:x="896" fg:w="1"/><text x="72.3337%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (23 samples, 1.85%)</title><rect x="70.4747%" y="709" width="1.8504%" height="15" fill="rgb(240,63,8)" fg:x="876" fg:w="23"/><text x="70.7247%" y="719.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.61%)</title><rect x="70.7160%" y="693" width="1.6090%" height="15" fill="rgb(214,9,4)" fg:x="879" fg:w="20"/><text x="70.9660%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.1641%" y="677" width="0.1609%" height="15" fill="rgb(243,66,45)" fg:x="897" fg:w="2"/><text x="72.4141%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.2446%" y="661" width="0.0805%" height="15" fill="rgb(220,50,42)" fg:x="898" fg:w="1"/><text x="72.4946%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.2446%" y="645" width="0.0805%" height="15" fill="rgb(220,134,27)" fg:x="898" fg:w="1"/><text x="72.4946%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.3250%" y="677" width="0.1609%" height="15" fill="rgb(246,151,50)" fg:x="899" fg:w="2"/><text x="72.5750%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.4859%" y="677" width="0.0805%" height="15" fill="rgb(238,216,27)" fg:x="901" fg:w="1"/><text x="72.7359%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.4859%" y="661" width="0.0805%" height="15" fill="rgb(250,92,11)" fg:x="901" fg:w="1"/><text x="72.7359%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.6468%" y="661" width="0.0805%" height="15" fill="rgb(248,183,6)" fg:x="903" fg:w="1"/><text x="72.8968%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="72.7273%" y="661" width="0.1609%" height="15" fill="rgb(211,204,50)" fg:x="904" fg:w="2"/><text x="72.9773%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.8077%" y="645" width="0.0805%" height="15" fill="rgb(252,55,47)" fg:x="905" fg:w="1"/><text x="73.0577%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.8882%" y="645" width="0.0805%" height="15" fill="rgb(240,198,32)" fg:x="906" fg:w="1"/><text x="73.1382%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="72.9686%" y="629" width="0.1609%" height="15" fill="rgb(224,203,19)" fg:x="907" fg:w="2"/><text x="73.2186%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="72.9686%" y="613" width="0.1609%" height="15" fill="rgb(205,27,16)" fg:x="907" fg:w="2"/><text x="73.2186%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="72.9686%" y="597" width="0.1609%" height="15" fill="rgb(224,226,17)" fg:x="907" fg:w="2"/><text x="73.2186%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.2100%" y="597" width="0.0805%" height="15" fill="rgb(205,216,54)" fg:x="910" fg:w="1"/><text x="73.4600%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.2100%" y="581" width="0.0805%" height="15" fill="rgb(248,168,46)" fg:x="910" fg:w="1"/><text x="73.4600%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="72.3250%" y="709" width="1.0459%" height="15" fill="rgb(226,111,45)" fg:x="899" fg:w="13"/><text x="72.5750%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.05%)</title><rect x="72.3250%" y="693" width="1.0459%" height="15" fill="rgb(231,15,9)" fg:x="899" fg:w="13"/><text x="72.5750%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="72.5664%" y="677" width="0.8045%" height="15" fill="rgb(243,168,3)" fg:x="902" fg:w="10"/><text x="72.8164%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="72.8882%" y="661" width="0.4827%" height="15" fill="rgb(221,220,54)" fg:x="906" fg:w="6"/><text x="73.1382%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="72.9686%" y="645" width="0.4023%" height="15" fill="rgb(232,174,38)" fg:x="907" fg:w="5"/><text x="73.2186%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="73.1295%" y="629" width="0.2414%" height="15" fill="rgb(205,14,38)" fg:x="909" fg:w="3"/><text x="73.3795%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="73.1295%" y="613" width="0.2414%" height="15" fill="rgb(234,89,19)" fg:x="909" fg:w="3"/><text x="73.3795%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.2904%" y="597" width="0.0805%" height="15" fill="rgb(216,68,51)" fg:x="911" fg:w="1"/><text x="73.5404%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="73.3709%" y="693" width="0.0805%" height="15" fill="rgb(213,49,2)" fg:x="912" fg:w="1"/><text x="73.6209%" y="703.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="73.3709%" y="677" width="0.0805%" height="15" fill="rgb(242,146,30)" fg:x="912" fg:w="1"/><text x="73.6209%" y="687.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="73.3709%" y="661" width="0.0805%" height="15" fill="rgb(224,188,11)" fg:x="912" fg:w="1"/><text x="73.6209%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="73.6122%" y="661" width="0.2414%" height="15" fill="rgb(213,159,11)" fg:x="915" fg:w="3"/><text x="73.8622%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="73.6122%" y="645" width="0.2414%" height="15" fill="rgb(229,13,31)" fg:x="915" fg:w="3"/><text x="73.8622%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="73.7731%" y="629" width="0.0805%" height="15" fill="rgb(209,103,11)" fg:x="917" fg:w="1"/><text x="74.0231%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.8536%" y="629" width="0.0805%" height="15" fill="rgb(206,3,4)" fg:x="918" fg:w="1"/><text x="74.1036%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="73.8536%" y="661" width="0.1609%" height="15" fill="rgb(252,10,49)" fg:x="918" fg:w="2"/><text x="74.1036%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.8536%" y="645" width="0.1609%" height="15" fill="rgb(217,160,32)" fg:x="918" fg:w="2"/><text x="74.1036%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.9340%" y="629" width="0.0805%" height="15" fill="rgb(249,196,0)" fg:x="919" fg:w="1"/><text x="74.1840%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="73.9340%" y="613" width="0.0805%" height="15" fill="rgb(213,17,48)" fg:x="919" fg:w="1"/><text x="74.1840%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0145%" y="613" width="0.0805%" height="15" fill="rgb(206,42,46)" fg:x="920" fg:w="1"/><text x="74.2645%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.1754%" y="597" width="0.0805%" height="15" fill="rgb(212,105,24)" fg:x="922" fg:w="1"/><text x="74.4254%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2558%" y="581" width="0.0805%" height="15" fill="rgb(243,216,30)" fg:x="923" fg:w="1"/><text x="74.5058%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2558%" y="565" width="0.0805%" height="15" fill="rgb(207,121,3)" fg:x="923" fg:w="1"/><text x="74.5058%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.2558%" y="549" width="0.0805%" height="15" fill="rgb(249,78,0)" fg:x="923" fg:w="1"/><text x="74.5058%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3363%" y="549" width="0.0805%" height="15" fill="rgb(244,151,32)" fg:x="924" fg:w="1"/><text x="74.5863%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3363%" y="533" width="0.0805%" height="15" fill="rgb(228,63,25)" fg:x="924" fg:w="1"/><text x="74.5863%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3363%" y="517" width="0.0805%" height="15" fill="rgb(231,158,23)" fg:x="924" fg:w="1"/><text x="74.5863%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="74.0145%" y="661" width="0.4827%" height="15" fill="rgb(248,107,23)" fg:x="920" fg:w="6"/><text x="74.2645%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="74.0145%" y="645" width="0.4827%" height="15" fill="rgb(215,168,21)" fg:x="920" fg:w="6"/><text x="74.2645%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="74.0145%" y="629" width="0.4827%" height="15" fill="rgb(227,83,22)" fg:x="920" fg:w="6"/><text x="74.2645%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="74.0949%" y="613" width="0.4023%" height="15" fill="rgb(217,118,43)" fg:x="921" fg:w="5"/><text x="74.3449%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="74.2558%" y="597" width="0.2414%" height="15" fill="rgb(229,220,41)" fg:x="923" fg:w="3"/><text x="74.5058%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="74.3363%" y="581" width="0.1609%" height="15" fill="rgb(254,146,46)" fg:x="924" fg:w="2"/><text x="74.5863%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="74.3363%" y="565" width="0.1609%" height="15" fill="rgb(233,208,31)" fg:x="924" fg:w="2"/><text x="74.5863%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.4167%" y="549" width="0.0805%" height="15" fill="rgb(222,162,7)" fg:x="925" fg:w="1"/><text x="74.6667%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.4167%" y="533" width="0.0805%" height="15" fill="rgb(230,117,45)" fg:x="925" fg:w="1"/><text x="74.6667%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.4167%" y="517" width="0.0805%" height="15" fill="rgb(239,163,6)" fg:x="925" fg:w="1"/><text x="74.6667%" y="527.50"></text></g><g><title>engine::session::Session::flush (54 samples, 4.34%)</title><rect x="70.2333%" y="789" width="4.3443%" height="15" fill="rgb(246,130,17)" fg:x="873" fg:w="54"/><text x="70.4833%" y="799.50">engin..</text></g><g><title>engine::session::state::State::close (52 samples, 4.18%)</title><rect x="70.3942%" y="773" width="4.1834%" height="15" fill="rgb(216,84,5)" fg:x="875" fg:w="52"/><text x="70.6442%" y="783.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (52 samples, 4.18%)</title><rect x="70.3942%" y="757" width="4.1834%" height="15" fill="rgb(230,200,21)" fg:x="875" fg:w="52"/><text x="70.6442%" y="767.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (51 samples, 4.10%)</title><rect x="70.4747%" y="741" width="4.1030%" height="15" fill="rgb(224,2,8)" fg:x="876" fg:w="51"/><text x="70.7247%" y="751.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (51 samples, 4.10%)</title><rect x="70.4747%" y="725" width="4.1030%" height="15" fill="rgb(238,178,10)" fg:x="876" fg:w="51"/><text x="70.7247%" y="735.50">engi..</text></g><g><title>kernel::model::any_entity_changes (15 samples, 1.21%)</title><rect x="73.3709%" y="709" width="1.2068%" height="15" fill="rgb(242,153,24)" fg:x="912" fg:w="15"/><text x="73.6209%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.13%)</title><rect x="73.4513%" y="693" width="1.1263%" height="15" fill="rgb(242,32,48)" fg:x="913" fg:w="14"/><text x="73.7013%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.05%)</title><rect x="73.5318%" y="677" width="1.0459%" height="15" fill="rgb(227,36,0)" fg:x="914" fg:w="13"/><text x="73.7818%" y="687.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="74.4972%" y="661" width="0.0805%" height="15" fill="rgb(251,33,35)" fg:x="926" fg:w="1"/><text x="74.7472%" y="671.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.4972%" y="645" width="0.0805%" height="15" fill="rgb(232,168,51)" fg:x="926" fg:w="1"/><text x="74.7472%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.5776%" y="757" width="0.0805%" height="15" fill="rgb(228,56,10)" fg:x="927" fg:w="1"/><text x="74.8276%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6581%" y="725" width="0.0805%" height="15" fill="rgb(231,10,26)" fg:x="928" fg:w="1"/><text x="74.9081%" y="735.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="74.6581%" y="757" width="0.1609%" height="15" fill="rgb(226,202,12)" fg:x="928" fg:w="2"/><text x="74.9081%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="74.6581%" y="741" width="0.1609%" height="15" fill="rgb(251,49,21)" fg:x="928" fg:w="2"/><text x="74.9081%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.7385%" y="725" width="0.0805%" height="15" fill="rgb(206,228,28)" fg:x="929" fg:w="1"/><text x="74.9885%" y="735.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.7385%" y="709" width="0.0805%" height="15" fill="rgb(205,198,31)" fg:x="929" fg:w="1"/><text x="74.9885%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7385%" y="693" width="0.0805%" height="15" fill="rgb(213,69,1)" fg:x="929" fg:w="1"/><text x="74.9885%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="74.5776%" y="773" width="0.4023%" height="15" fill="rgb(209,177,9)" fg:x="927" fg:w="5"/><text x="74.8276%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="74.8190%" y="757" width="0.1609%" height="15" fill="rgb(227,119,30)" fg:x="930" fg:w="2"/><text x="75.0690%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="74.8190%" y="741" width="0.1609%" height="15" fill="rgb(234,106,41)" fg:x="930" fg:w="2"/><text x="75.0690%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.8190%" y="725" width="0.1609%" height="15" fill="rgb(244,103,47)" fg:x="930" fg:w="2"/><text x="75.0690%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.8190%" y="709" width="0.1609%" height="15" fill="rgb(212,211,25)" fg:x="930" fg:w="2"/><text x="75.0690%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="74.8190%" y="693" width="0.1609%" height="15" fill="rgb(208,63,53)" fg:x="930" fg:w="2"/><text x="75.0690%" y="703.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.8190%" y="677" width="0.1609%" height="15" fill="rgb(213,176,21)" fg:x="930" fg:w="2"/><text x="75.0690%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="74.9799%" y="773" width="0.0805%" height="15" fill="rgb(243,124,12)" fg:x="932" fg:w="1"/><text x="75.2299%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="74.9799%" y="757" width="0.0805%" height="15" fill="rgb(239,2,35)" fg:x="932" fg:w="1"/><text x="75.2299%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="75.0603%" y="757" width="0.0805%" height="15" fill="rgb(253,169,22)" fg:x="933" fg:w="1"/><text x="75.3103%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="75.0603%" y="741" width="0.0805%" height="15" fill="rgb(254,51,12)" fg:x="933" fg:w="1"/><text x="75.3103%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="75.1408%" y="757" width="0.1609%" height="15" fill="rgb(244,17,47)" fg:x="934" fg:w="2"/><text x="75.3908%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="75.1408%" y="741" width="0.1609%" height="15" fill="rgb(251,45,46)" fg:x="934" fg:w="2"/><text x="75.3908%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="75.1408%" y="725" width="0.1609%" height="15" fill="rgb(223,87,43)" fg:x="934" fg:w="2"/><text x="75.3908%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.1408%" y="709" width="0.1609%" height="15" fill="rgb(230,132,31)" fg:x="934" fg:w="2"/><text x="75.3908%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.1408%" y="693" width="0.1609%" height="15" fill="rgb(206,99,1)" fg:x="934" fg:w="2"/><text x="75.3908%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.1408%" y="677" width="0.1609%" height="15" fill="rgb(227,110,25)" fg:x="934" fg:w="2"/><text x="75.3908%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.1408%" y="661" width="0.1609%" height="15" fill="rgb(217,182,7)" fg:x="934" fg:w="2"/><text x="75.3908%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.1408%" y="645" width="0.1609%" height="15" fill="rgb(250,176,4)" fg:x="934" fg:w="2"/><text x="75.3908%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2212%" y="629" width="0.0805%" height="15" fill="rgb(244,98,30)" fg:x="935" fg:w="1"/><text x="75.4712%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="75.3017%" y="757" width="0.0805%" height="15" fill="rgb(228,150,42)" fg:x="936" fg:w="1"/><text x="75.5517%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.3821%" y="757" width="0.0805%" height="15" fill="rgb(231,91,46)" fg:x="937" fg:w="1"/><text x="75.6321%" y="767.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="75.3821%" y="741" width="0.0805%" height="15" fill="rgb(252,161,32)" fg:x="937" fg:w="1"/><text x="75.6321%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.3821%" y="725" width="0.0805%" height="15" fill="rgb(236,69,41)" fg:x="937" fg:w="1"/><text x="75.6321%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.3821%" y="709" width="0.0805%" height="15" fill="rgb(212,160,3)" fg:x="937" fg:w="1"/><text x="75.6321%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.4626%" y="597" width="0.0805%" height="15" fill="rgb(216,5,50)" fg:x="938" fg:w="1"/><text x="75.7126%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.4626%" y="581" width="0.0805%" height="15" fill="rgb(241,138,25)" fg:x="938" fg:w="1"/><text x="75.7126%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.4626%" y="629" width="0.1609%" height="15" fill="rgb(239,42,18)" fg:x="938" fg:w="2"/><text x="75.7126%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.4626%" y="613" width="0.1609%" height="15" fill="rgb(239,40,7)" fg:x="938" fg:w="2"/><text x="75.7126%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5430%" y="597" width="0.0805%" height="15" fill="rgb(239,11,31)" fg:x="939" fg:w="1"/><text x="75.7930%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="75.4626%" y="661" width="0.2414%" height="15" fill="rgb(224,77,40)" fg:x="938" fg:w="3"/><text x="75.7126%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="75.4626%" y="645" width="0.2414%" height="15" fill="rgb(226,15,5)" fg:x="938" fg:w="3"/><text x="75.7126%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.6235%" y="629" width="0.0805%" height="15" fill="rgb(254,188,5)" fg:x="940" fg:w="1"/><text x="75.8735%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.6235%" y="613" width="0.0805%" height="15" fill="rgb(241,148,52)" fg:x="940" fg:w="1"/><text x="75.8735%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.6235%" y="597" width="0.0805%" height="15" fill="rgb(251,48,36)" fg:x="940" fg:w="1"/><text x="75.8735%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.6235%" y="581" width="0.0805%" height="15" fill="rgb(243,83,13)" fg:x="940" fg:w="1"/><text x="75.8735%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.6235%" y="565" width="0.0805%" height="15" fill="rgb(210,105,0)" fg:x="940" fg:w="1"/><text x="75.8735%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="75.6235%" y="549" width="0.0805%" height="15" fill="rgb(239,60,36)" fg:x="940" fg:w="1"/><text x="75.8735%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="75.6235%" y="533" width="0.0805%" height="15" fill="rgb(210,20,0)" fg:x="940" fg:w="1"/><text x="75.8735%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.7039%" y="565" width="0.0805%" height="15" fill="rgb(244,26,53)" fg:x="941" fg:w="1"/><text x="75.9539%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="75.4626%" y="709" width="0.4023%" height="15" fill="rgb(240,100,49)" fg:x="938" fg:w="5"/><text x="75.7126%" y="719.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="75.4626%" y="693" width="0.4023%" height="15" fill="rgb(250,46,45)" fg:x="938" fg:w="5"/><text x="75.7126%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="75.4626%" y="677" width="0.4023%" height="15" fill="rgb(220,181,29)" fg:x="938" fg:w="5"/><text x="75.7126%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.7039%" y="661" width="0.1609%" height="15" fill="rgb(213,137,33)" fg:x="941" fg:w="2"/><text x="75.9539%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7039%" y="645" width="0.1609%" height="15" fill="rgb(213,27,48)" fg:x="941" fg:w="2"/><text x="75.9539%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.7039%" y="629" width="0.1609%" height="15" fill="rgb(245,180,39)" fg:x="941" fg:w="2"/><text x="75.9539%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7039%" y="613" width="0.1609%" height="15" fill="rgb(212,158,42)" fg:x="941" fg:w="2"/><text x="75.9539%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="75.7039%" y="597" width="0.1609%" height="15" fill="rgb(228,193,18)" fg:x="941" fg:w="2"/><text x="75.9539%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7039%" y="581" width="0.1609%" height="15" fill="rgb(245,172,29)" fg:x="941" fg:w="2"/><text x="75.9539%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.7844%" y="565" width="0.0805%" height="15" fill="rgb(207,98,24)" fg:x="942" fg:w="1"/><text x="76.0344%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.7844%" y="549" width="0.0805%" height="15" fill="rgb(249,92,26)" fg:x="942" fg:w="1"/><text x="76.0344%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.7844%" y="533" width="0.0805%" height="15" fill="rgb(217,176,26)" fg:x="942" fg:w="1"/><text x="76.0344%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.7844%" y="517" width="0.0805%" height="15" fill="rgb(221,8,39)" fg:x="942" fg:w="1"/><text x="76.0344%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.7844%" y="501" width="0.0805%" height="15" fill="rgb(208,90,18)" fg:x="942" fg:w="1"/><text x="76.0344%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.7844%" y="485" width="0.0805%" height="15" fill="rgb(207,202,30)" fg:x="942" fg:w="1"/><text x="76.0344%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.8648%" y="661" width="0.0805%" height="15" fill="rgb(231,124,22)" fg:x="943" fg:w="1"/><text x="76.1148%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.8648%" y="645" width="0.0805%" height="15" fill="rgb(206,15,5)" fg:x="943" fg:w="1"/><text x="76.1148%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.8648%" y="629" width="0.0805%" height="15" fill="rgb(239,16,52)" fg:x="943" fg:w="1"/><text x="76.1148%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.8648%" y="613" width="0.0805%" height="15" fill="rgb(245,213,29)" fg:x="943" fg:w="1"/><text x="76.1148%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.8648%" y="597" width="0.0805%" height="15" fill="rgb(213,203,36)" fg:x="943" fg:w="1"/><text x="76.1148%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8648%" y="581" width="0.0805%" height="15" fill="rgb(209,55,18)" fg:x="943" fg:w="1"/><text x="76.1148%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="75.4626%" y="757" width="0.5632%" height="15" fill="rgb(207,133,49)" fg:x="938" fg:w="7"/><text x="75.7126%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="75.4626%" y="741" width="0.5632%" height="15" fill="rgb(240,33,46)" fg:x="938" fg:w="7"/><text x="75.7126%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="75.4626%" y="725" width="0.5632%" height="15" fill="rgb(212,35,2)" fg:x="938" fg:w="7"/><text x="75.7126%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="75.8648%" y="709" width="0.1609%" height="15" fill="rgb(231,119,28)" fg:x="943" fg:w="2"/><text x="76.1148%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.8648%" y="693" width="0.1609%" height="15" fill="rgb(252,178,7)" fg:x="943" fg:w="2"/><text x="76.1148%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.8648%" y="677" width="0.1609%" height="15" fill="rgb(251,91,4)" fg:x="943" fg:w="2"/><text x="76.1148%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9453%" y="661" width="0.0805%" height="15" fill="rgb(233,122,19)" fg:x="944" fg:w="1"/><text x="76.1953%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9453%" y="645" width="0.0805%" height="15" fill="rgb(231,208,46)" fg:x="944" fg:w="1"/><text x="76.1953%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9453%" y="629" width="0.0805%" height="15" fill="rgb(243,15,41)" fg:x="944" fg:w="1"/><text x="76.1953%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9453%" y="613" width="0.0805%" height="15" fill="rgb(210,32,43)" fg:x="944" fg:w="1"/><text x="76.1953%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.9453%" y="597" width="0.0805%" height="15" fill="rgb(222,177,15)" fg:x="944" fg:w="1"/><text x="76.1953%" y="607.50"></text></g><g><title>plugins_core::build::Build::holding (19 samples, 1.53%)</title><rect x="74.5776%" y="789" width="1.5286%" height="15" fill="rgb(244,121,34)" fg:x="927" fg:w="19"/><text x="74.8276%" y="799.50"></text></g><g><title>plugins_core::tools::set_container (13 samples, 1.05%)</title><rect x="75.0603%" y="773" width="1.0459%" height="15" fill="rgb(234,138,4)" fg:x="933" fg:w="13"/><text x="75.3103%" y="783.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="76.0257%" y="757" width="0.0805%" height="15" fill="rgb(240,97,48)" fg:x="945" fg:w="1"/><text x="76.2757%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.0257%" y="741" width="0.0805%" height="15" fill="rgb(237,65,54)" fg:x="945" fg:w="1"/><text x="76.2757%" y="751.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="76.0257%" y="725" width="0.0805%" height="15" fill="rgb(214,25,24)" fg:x="945" fg:w="1"/><text x="76.2757%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.0257%" y="709" width="0.0805%" height="15" fill="rgb(213,5,3)" fg:x="945" fg:w="1"/><text x="76.2757%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="76.0257%" y="693" width="0.0805%" height="15" fill="rgb(219,81,29)" fg:x="945" fg:w="1"/><text x="76.2757%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.0257%" y="677" width="0.0805%" height="15" fill="rgb(220,43,48)" fg:x="945" fg:w="1"/><text x="76.2757%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.0257%" y="661" width="0.0805%" height="15" fill="rgb(239,157,2)" fg:x="945" fg:w="1"/><text x="76.2757%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.1062%" y="709" width="0.0805%" height="15" fill="rgb(213,104,43)" fg:x="946" fg:w="1"/><text x="76.3562%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.1062%" y="693" width="0.0805%" height="15" fill="rgb(237,84,9)" fg:x="946" fg:w="1"/><text x="76.3562%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.1062%" y="677" width="0.0805%" height="15" fill="rgb(252,6,33)" fg:x="946" fg:w="1"/><text x="76.3562%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.1062%" y="661" width="0.0805%" height="15" fill="rgb(251,172,22)" fg:x="946" fg:w="1"/><text x="76.3562%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.1866%" y="709" width="0.0805%" height="15" fill="rgb(244,91,53)" fg:x="947" fg:w="1"/><text x="76.4366%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="76.1062%" y="757" width="0.2414%" height="15" fill="rgb(219,29,30)" fg:x="946" fg:w="3"/><text x="76.3562%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="76.1062%" y="741" width="0.2414%" height="15" fill="rgb(213,3,15)" fg:x="946" fg:w="3"/><text x="76.3562%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.1062%" y="725" width="0.2414%" height="15" fill="rgb(208,25,28)" fg:x="946" fg:w="3"/><text x="76.3562%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2671%" y="709" width="0.0805%" height="15" fill="rgb(252,144,25)" fg:x="948" fg:w="1"/><text x="76.5171%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2671%" y="693" width="0.0805%" height="15" fill="rgb(226,220,25)" fg:x="948" fg:w="1"/><text x="76.5171%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2671%" y="677" width="0.0805%" height="15" fill="rgb(212,131,28)" fg:x="948" fg:w="1"/><text x="76.5171%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2671%" y="661" width="0.0805%" height="15" fill="rgb(219,143,52)" fg:x="948" fg:w="1"/><text x="76.5171%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.2671%" y="645" width="0.0805%" height="15" fill="rgb(215,56,7)" fg:x="948" fg:w="1"/><text x="76.5171%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2671%" y="629" width="0.0805%" height="15" fill="rgb(239,59,51)" fg:x="948" fg:w="1"/><text x="76.5171%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.2671%" y="613" width="0.0805%" height="15" fill="rgb(209,215,4)" fg:x="948" fg:w="1"/><text x="76.5171%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.3475%" y="709" width="0.1609%" height="15" fill="rgb(221,118,39)" fg:x="949" fg:w="2"/><text x="76.5975%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.3475%" y="693" width="0.1609%" height="15" fill="rgb(236,6,44)" fg:x="949" fg:w="2"/><text x="76.5975%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.4280%" y="677" width="0.0805%" height="15" fill="rgb(216,122,9)" fg:x="950" fg:w="1"/><text x="76.6780%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.4280%" y="661" width="0.0805%" height="15" fill="rgb(244,134,42)" fg:x="950" fg:w="1"/><text x="76.6780%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5084%" y="677" width="0.0805%" height="15" fill="rgb(209,189,35)" fg:x="951" fg:w="1"/><text x="76.7584%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5084%" y="661" width="0.0805%" height="15" fill="rgb(250,47,36)" fg:x="951" fg:w="1"/><text x="76.7584%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5084%" y="645" width="0.0805%" height="15" fill="rgb(252,112,4)" fg:x="951" fg:w="1"/><text x="76.7584%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5084%" y="629" width="0.0805%" height="15" fill="rgb(221,79,51)" fg:x="951" fg:w="1"/><text x="76.7584%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5084%" y="613" width="0.0805%" height="15" fill="rgb(232,65,53)" fg:x="951" fg:w="1"/><text x="76.7584%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5084%" y="597" width="0.0805%" height="15" fill="rgb(211,37,7)" fg:x="951" fg:w="1"/><text x="76.7584%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="76.1062%" y="789" width="0.5632%" height="15" fill="rgb(234,221,18)" fg:x="946" fg:w="7"/><text x="76.3562%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="76.1062%" y="773" width="0.5632%" height="15" fill="rgb(220,158,26)" fg:x="946" fg:w="7"/><text x="76.3562%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="76.3475%" y="757" width="0.3218%" height="15" fill="rgb(220,70,6)" fg:x="949" fg:w="4"/><text x="76.5975%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="76.3475%" y="741" width="0.3218%" height="15" fill="rgb(250,39,48)" fg:x="949" fg:w="4"/><text x="76.5975%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="76.3475%" y="725" width="0.3218%" height="15" fill="rgb(206,40,27)" fg:x="949" fg:w="4"/><text x="76.5975%" y="735.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="76.5084%" y="709" width="0.1609%" height="15" fill="rgb(247,80,36)" fg:x="951" fg:w="2"/><text x="76.7584%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="76.5084%" y="693" width="0.1609%" height="15" fill="rgb(222,9,20)" fg:x="951" fg:w="2"/><text x="76.7584%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.5889%" y="677" width="0.0805%" height="15" fill="rgb(217,26,45)" fg:x="952" fg:w="1"/><text x="76.8389%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="76.6693%" y="789" width="0.1609%" height="15" fill="rgb(221,67,14)" fg:x="953" fg:w="2"/><text x="76.9193%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="76.6693%" y="773" width="0.1609%" height="15" fill="rgb(248,100,24)" fg:x="953" fg:w="2"/><text x="76.9193%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="76.6693%" y="757" width="0.1609%" height="15" fill="rgb(230,187,16)" fg:x="953" fg:w="2"/><text x="76.9193%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="76.6693%" y="741" width="0.1609%" height="15" fill="rgb(205,108,13)" fg:x="953" fg:w="2"/><text x="76.9193%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7498%" y="725" width="0.0805%" height="15" fill="rgb(235,71,51)" fg:x="954" fg:w="1"/><text x="76.9998%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7498%" y="709" width="0.0805%" height="15" fill="rgb(251,172,48)" fg:x="954" fg:w="1"/><text x="76.9998%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7498%" y="693" width="0.0805%" height="15" fill="rgb(240,96,49)" fg:x="954" fg:w="1"/><text x="76.9998%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8302%" y="709" width="0.0805%" height="15" fill="rgb(235,46,36)" fg:x="955" fg:w="1"/><text x="77.0802%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8302%" y="693" width="0.0805%" height="15" fill="rgb(244,3,49)" fg:x="955" fg:w="1"/><text x="77.0802%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8302%" y="677" width="0.0805%" height="15" fill="rgb(206,78,54)" fg:x="955" fg:w="1"/><text x="77.0802%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8302%" y="661" width="0.0805%" height="15" fill="rgb(208,85,42)" fg:x="955" fg:w="1"/><text x="77.0802%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8302%" y="645" width="0.0805%" height="15" fill="rgb(219,196,21)" fg:x="955" fg:w="1"/><text x="77.0802%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8302%" y="629" width="0.0805%" height="15" fill="rgb(238,19,9)" fg:x="955" fg:w="1"/><text x="77.0802%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.9107%" y="709" width="0.0805%" height="15" fill="rgb(206,86,13)" fg:x="956" fg:w="1"/><text x="77.1607%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.9107%" y="693" width="0.0805%" height="15" fill="rgb(214,123,40)" fg:x="956" fg:w="1"/><text x="77.1607%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.9107%" y="677" width="0.0805%" height="15" fill="rgb(243,53,5)" fg:x="956" fg:w="1"/><text x="77.1607%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="76.8302%" y="773" width="0.2414%" height="15" fill="rgb(254,186,31)" fg:x="955" fg:w="3"/><text x="77.0802%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="76.8302%" y="757" width="0.2414%" height="15" fill="rgb(221,216,25)" fg:x="955" fg:w="3"/><text x="77.0802%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="76.8302%" y="741" width="0.2414%" height="15" fill="rgb(248,107,42)" fg:x="955" fg:w="3"/><text x="77.0802%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.8302%" y="725" width="0.2414%" height="15" fill="rgb(221,85,43)" fg:x="955" fg:w="3"/><text x="77.0802%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.9912%" y="709" width="0.0805%" height="15" fill="rgb(225,34,24)" fg:x="957" fg:w="1"/><text x="77.2412%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9912%" y="693" width="0.0805%" height="15" fill="rgb(211,119,1)" fg:x="957" fg:w="1"/><text x="77.2412%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.9912%" y="677" width="0.0805%" height="15" fill="rgb(254,216,46)" fg:x="957" fg:w="1"/><text x="77.2412%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9912%" y="661" width="0.0805%" height="15" fill="rgb(238,11,38)" fg:x="957" fg:w="1"/><text x="77.2412%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.9912%" y="645" width="0.0805%" height="15" fill="rgb(233,50,15)" fg:x="957" fg:w="1"/><text x="77.2412%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9912%" y="629" width="0.0805%" height="15" fill="rgb(217,181,29)" fg:x="957" fg:w="1"/><text x="77.2412%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.9912%" y="613" width="0.0805%" height="15" fill="rgb(214,56,3)" fg:x="957" fg:w="1"/><text x="77.2412%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9912%" y="597" width="0.0805%" height="15" fill="rgb(230,69,45)" fg:x="957" fg:w="1"/><text x="77.2412%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="77.0716%" y="773" width="0.0805%" height="15" fill="rgb(224,201,50)" fg:x="958" fg:w="1"/><text x="77.3216%" y="783.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="77.0716%" y="757" width="0.0805%" height="15" fill="rgb(217,228,18)" fg:x="958" fg:w="1"/><text x="77.3216%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="77.1521%" y="725" width="0.0805%" height="15" fill="rgb(239,33,44)" fg:x="959" fg:w="1"/><text x="77.4021%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.1521%" y="709" width="0.0805%" height="15" fill="rgb(248,210,23)" fg:x="959" fg:w="1"/><text x="77.4021%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.1521%" y="693" width="0.0805%" height="15" fill="rgb(253,135,8)" fg:x="959" fg:w="1"/><text x="77.4021%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.1521%" y="677" width="0.0805%" height="15" fill="rgb(217,98,21)" fg:x="959" fg:w="1"/><text x="77.4021%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.1521%" y="661" width="0.0805%" height="15" fill="rgb(253,130,21)" fg:x="959" fg:w="1"/><text x="77.4021%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.1521%" y="645" width="0.0805%" height="15" fill="rgb(207,81,54)" fg:x="959" fg:w="1"/><text x="77.4021%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1521%" y="629" width="0.0805%" height="15" fill="rgb(232,48,33)" fg:x="959" fg:w="1"/><text x="77.4021%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.1521%" y="613" width="0.0805%" height="15" fill="rgb(211,9,35)" fg:x="959" fg:w="1"/><text x="77.4021%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1521%" y="597" width="0.0805%" height="15" fill="rgb(205,152,21)" fg:x="959" fg:w="1"/><text x="77.4021%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.1521%" y="581" width="0.0805%" height="15" fill="rgb(249,21,27)" fg:x="959" fg:w="1"/><text x="77.4021%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.1521%" y="565" width="0.0805%" height="15" fill="rgb(252,29,24)" fg:x="959" fg:w="1"/><text x="77.4021%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2325%" y="517" width="0.0805%" height="15" fill="rgb(230,130,50)" fg:x="960" fg:w="1"/><text x="77.4825%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.3130%" y="517" width="0.0805%" height="15" fill="rgb(239,144,14)" fg:x="961" fg:w="1"/><text x="77.5630%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="77.2325%" y="725" width="0.2414%" height="15" fill="rgb(227,111,50)" fg:x="960" fg:w="3"/><text x="77.4825%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="77.2325%" y="709" width="0.2414%" height="15" fill="rgb(254,84,20)" fg:x="960" fg:w="3"/><text x="77.4825%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="77.2325%" y="693" width="0.2414%" height="15" fill="rgb(232,90,48)" fg:x="960" fg:w="3"/><text x="77.4825%" y="703.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="77.2325%" y="677" width="0.2414%" height="15" fill="rgb(253,63,47)" fg:x="960" fg:w="3"/><text x="77.4825%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="77.2325%" y="661" width="0.2414%" height="15" fill="rgb(251,146,35)" fg:x="960" fg:w="3"/><text x="77.4825%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="77.2325%" y="645" width="0.2414%" height="15" fill="rgb(229,192,35)" fg:x="960" fg:w="3"/><text x="77.4825%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.2325%" y="629" width="0.2414%" height="15" fill="rgb(225,68,9)" fg:x="960" fg:w="3"/><text x="77.4825%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="77.2325%" y="613" width="0.2414%" height="15" fill="rgb(214,97,34)" fg:x="960" fg:w="3"/><text x="77.4825%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.2325%" y="597" width="0.2414%" height="15" fill="rgb(253,31,26)" fg:x="960" fg:w="3"/><text x="77.4825%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="77.2325%" y="581" width="0.2414%" height="15" fill="rgb(225,151,47)" fg:x="960" fg:w="3"/><text x="77.4825%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.2325%" y="565" width="0.2414%" height="15" fill="rgb(206,185,9)" fg:x="960" fg:w="3"/><text x="77.4825%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="77.2325%" y="549" width="0.2414%" height="15" fill="rgb(249,65,17)" fg:x="960" fg:w="3"/><text x="77.4825%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.2325%" y="533" width="0.2414%" height="15" fill="rgb(220,110,10)" fg:x="960" fg:w="3"/><text x="77.4825%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.3934%" y="517" width="0.0805%" height="15" fill="rgb(222,198,49)" fg:x="962" fg:w="1"/><text x="77.6434%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.3934%" y="501" width="0.0805%" height="15" fill="rgb(239,81,13)" fg:x="962" fg:w="1"/><text x="77.6434%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="77.3934%" y="485" width="0.0805%" height="15" fill="rgb(216,128,11)" fg:x="962" fg:w="1"/><text x="77.6434%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="77.3934%" y="469" width="0.0805%" height="15" fill="rgb(247,156,8)" fg:x="962" fg:w="1"/><text x="77.6434%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="77.3934%" y="453" width="0.0805%" height="15" fill="rgb(219,173,1)" fg:x="962" fg:w="1"/><text x="77.6434%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.4739%" y="693" width="0.0805%" height="15" fill="rgb(227,42,24)" fg:x="963" fg:w="1"/><text x="77.7239%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.4739%" y="677" width="0.0805%" height="15" fill="rgb(253,219,50)" fg:x="963" fg:w="1"/><text x="77.7239%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.4739%" y="661" width="0.0805%" height="15" fill="rgb(215,191,54)" fg:x="963" fg:w="1"/><text x="77.7239%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.4739%" y="645" width="0.0805%" height="15" fill="rgb(238,83,12)" fg:x="963" fg:w="1"/><text x="77.7239%" y="655.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="77.5543%" y="693" width="0.0805%" height="15" fill="rgb(205,124,9)" fg:x="964" fg:w="1"/><text x="77.8043%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="77.5543%" y="677" width="0.0805%" height="15" fill="rgb(253,174,7)" fg:x="964" fg:w="1"/><text x="77.8043%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.5543%" y="661" width="0.0805%" height="15" fill="rgb(206,134,49)" fg:x="964" fg:w="1"/><text x="77.8043%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.5543%" y="645" width="0.0805%" height="15" fill="rgb(221,89,20)" fg:x="964" fg:w="1"/><text x="77.8043%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.5543%" y="629" width="0.0805%" height="15" fill="rgb(240,205,13)" fg:x="964" fg:w="1"/><text x="77.8043%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.5543%" y="613" width="0.0805%" height="15" fill="rgb(237,174,32)" fg:x="964" fg:w="1"/><text x="77.8043%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="77.4739%" y="709" width="0.2414%" height="15" fill="rgb(226,12,15)" fg:x="963" fg:w="3"/><text x="77.7239%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="77.6348%" y="693" width="0.0805%" height="15" fill="rgb(245,160,52)" fg:x="965" fg:w="1"/><text x="77.8848%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="77.6348%" y="677" width="0.0805%" height="15" fill="rgb(253,80,21)" fg:x="965" fg:w="1"/><text x="77.8848%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="77.6348%" y="661" width="0.0805%" height="15" fill="rgb(231,225,22)" fg:x="965" fg:w="1"/><text x="77.8848%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="77.6348%" y="645" width="0.0805%" height="15" fill="rgb(253,185,12)" fg:x="965" fg:w="1"/><text x="77.8848%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.6348%" y="629" width="0.0805%" height="15" fill="rgb(234,197,21)" fg:x="965" fg:w="1"/><text x="77.8848%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.6348%" y="613" width="0.0805%" height="15" fill="rgb(210,47,30)" fg:x="965" fg:w="1"/><text x="77.8848%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.7152%" y="709" width="0.0805%" height="15" fill="rgb(246,139,27)" fg:x="966" fg:w="1"/><text x="77.9652%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.7957%" y="613" width="0.0805%" height="15" fill="rgb(226,130,16)" fg:x="967" fg:w="1"/><text x="78.0457%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.7957%" y="597" width="0.0805%" height="15" fill="rgb(237,208,20)" fg:x="967" fg:w="1"/><text x="78.0457%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.7957%" y="581" width="0.0805%" height="15" fill="rgb(245,186,28)" fg:x="967" fg:w="1"/><text x="78.0457%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.7957%" y="565" width="0.0805%" height="15" fill="rgb(238,105,39)" fg:x="967" fg:w="1"/><text x="78.0457%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.7957%" y="549" width="0.0805%" height="15" fill="rgb(253,228,11)" fg:x="967" fg:w="1"/><text x="78.0457%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.7957%" y="533" width="0.0805%" height="15" fill="rgb(224,136,38)" fg:x="967" fg:w="1"/><text x="78.0457%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="77.7957%" y="661" width="0.1609%" height="15" fill="rgb(211,3,25)" fg:x="967" fg:w="2"/><text x="78.0457%" y="671.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="77.7957%" y="645" width="0.1609%" height="15" fill="rgb(238,66,34)" fg:x="967" fg:w="2"/><text x="78.0457%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.7957%" y="629" width="0.1609%" height="15" fill="rgb(223,188,11)" fg:x="967" fg:w="2"/><text x="78.0457%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.8761%" y="613" width="0.0805%" height="15" fill="rgb(221,10,35)" fg:x="968" fg:w="1"/><text x="78.1261%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8761%" y="597" width="0.0805%" height="15" fill="rgb(223,18,44)" fg:x="968" fg:w="1"/><text x="78.1261%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.8761%" y="581" width="0.0805%" height="15" fill="rgb(220,97,41)" fg:x="968" fg:w="1"/><text x="78.1261%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8761%" y="565" width="0.0805%" height="15" fill="rgb(206,95,45)" fg:x="968" fg:w="1"/><text x="78.1261%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.8761%" y="549" width="0.0805%" height="15" fill="rgb(209,96,13)" fg:x="968" fg:w="1"/><text x="78.1261%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8761%" y="533" width="0.0805%" height="15" fill="rgb(237,39,34)" fg:x="968" fg:w="1"/><text x="78.1261%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.8761%" y="517" width="0.0805%" height="15" fill="rgb(213,49,47)" fg:x="968" fg:w="1"/><text x="78.1261%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8761%" y="501" width="0.0805%" height="15" fill="rgb(205,107,27)" fg:x="968" fg:w="1"/><text x="78.1261%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.8761%" y="485" width="0.0805%" height="15" fill="rgb(212,142,9)" fg:x="968" fg:w="1"/><text x="78.1261%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.8761%" y="469" width="0.0805%" height="15" fill="rgb(226,182,0)" fg:x="968" fg:w="1"/><text x="78.1261%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.9566%" y="645" width="0.0805%" height="15" fill="rgb(231,3,53)" fg:x="969" fg:w="1"/><text x="78.2066%" y="655.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.97%)</title><rect x="77.1521%" y="773" width="0.9654%" height="15" fill="rgb(246,111,28)" fg:x="959" fg:w="12"/><text x="77.4021%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.97%)</title><rect x="77.1521%" y="757" width="0.9654%" height="15" fill="rgb(254,183,7)" fg:x="959" fg:w="12"/><text x="77.4021%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (12 samples, 0.97%)</title><rect x="77.1521%" y="741" width="0.9654%" height="15" fill="rgb(247,177,28)" fg:x="959" fg:w="12"/><text x="77.4021%" y="751.50"></text></g><g><title>plugins_core::build::Build::leads_to (8 samples, 0.64%)</title><rect x="77.4739%" y="725" width="0.6436%" height="15" fill="rgb(244,43,1)" fg:x="963" fg:w="8"/><text x="77.7239%" y="735.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="77.7957%" y="709" width="0.3218%" height="15" fill="rgb(207,2,35)" fg:x="967" fg:w="4"/><text x="78.0457%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="77.7957%" y="693" width="0.3218%" height="15" fill="rgb(213,83,22)" fg:x="967" fg:w="4"/><text x="78.0457%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="77.7957%" y="677" width="0.3218%" height="15" fill="rgb(246,212,13)" fg:x="967" fg:w="4"/><text x="78.0457%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="77.9566%" y="661" width="0.1609%" height="15" fill="rgb(213,127,46)" fg:x="969" fg:w="2"/><text x="78.2066%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.0370%" y="645" width="0.0805%" height="15" fill="rgb(219,215,39)" fg:x="970" fg:w="1"/><text x="78.2870%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.0370%" y="629" width="0.0805%" height="15" fill="rgb(227,99,17)" fg:x="970" fg:w="1"/><text x="78.2870%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0370%" y="613" width="0.0805%" height="15" fill="rgb(208,155,18)" fg:x="970" fg:w="1"/><text x="78.2870%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0370%" y="597" width="0.0805%" height="15" fill="rgb(223,204,38)" fg:x="970" fg:w="1"/><text x="78.2870%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0370%" y="581" width="0.0805%" height="15" fill="rgb(212,114,21)" fg:x="970" fg:w="1"/><text x="78.2870%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0370%" y="565" width="0.0805%" height="15" fill="rgb(250,74,13)" fg:x="970" fg:w="1"/><text x="78.2870%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0370%" y="549" width="0.0805%" height="15" fill="rgb(234,7,1)" fg:x="970" fg:w="1"/><text x="78.2870%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0370%" y="533" width="0.0805%" height="15" fill="rgb(207,138,31)" fg:x="970" fg:w="1"/><text x="78.2870%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.0370%" y="517" width="0.0805%" height="15" fill="rgb(215,186,42)" fg:x="970" fg:w="1"/><text x="78.2870%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.0370%" y="501" width="0.0805%" height="15" fill="rgb(229,205,49)" fg:x="970" fg:w="1"/><text x="78.2870%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.0370%" y="485" width="0.0805%" height="15" fill="rgb(216,156,32)" fg:x="970" fg:w="1"/><text x="78.2870%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.0370%" y="469" width="0.0805%" height="15" fill="rgb(238,7,21)" fg:x="970" fg:w="1"/><text x="78.2870%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.0370%" y="453" width="0.0805%" height="15" fill="rgb(249,190,22)" fg:x="970" fg:w="1"/><text x="78.2870%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.0370%" y="437" width="0.0805%" height="15" fill="rgb(253,51,31)" fg:x="970" fg:w="1"/><text x="78.2870%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.0370%" y="421" width="0.0805%" height="15" fill="rgb(237,90,54)" fg:x="970" fg:w="1"/><text x="78.2870%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.0370%" y="405" width="0.0805%" height="15" fill="rgb(250,214,33)" fg:x="970" fg:w="1"/><text x="78.2870%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.0370%" y="389" width="0.0805%" height="15" fill="rgb(237,10,49)" fg:x="970" fg:w="1"/><text x="78.2870%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0370%" y="373" width="0.0805%" height="15" fill="rgb(241,56,36)" fg:x="970" fg:w="1"/><text x="78.2870%" y="383.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="78.1175%" y="757" width="0.1609%" height="15" fill="rgb(227,164,12)" fg:x="971" fg:w="2"/><text x="78.3675%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.1979%" y="741" width="0.0805%" height="15" fill="rgb(249,149,35)" fg:x="972" fg:w="1"/><text x="78.4479%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.1979%" y="725" width="0.0805%" height="15" fill="rgb(238,227,50)" fg:x="972" fg:w="1"/><text x="78.4479%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="78.1979%" y="709" width="0.0805%" height="15" fill="rgb(235,102,45)" fg:x="972" fg:w="1"/><text x="78.4479%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.2784%" y="709" width="0.0805%" height="15" fill="rgb(211,10,38)" fg:x="973" fg:w="1"/><text x="78.5284%" y="719.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.3588%" y="661" width="0.0805%" height="15" fill="rgb(219,77,48)" fg:x="974" fg:w="1"/><text x="78.6088%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.3588%" y="645" width="0.0805%" height="15" fill="rgb(246,6,15)" fg:x="974" fg:w="1"/><text x="78.6088%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.3588%" y="629" width="0.0805%" height="15" fill="rgb(207,220,2)" fg:x="974" fg:w="1"/><text x="78.6088%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.3588%" y="613" width="0.0805%" height="15" fill="rgb(242,48,14)" fg:x="974" fg:w="1"/><text x="78.6088%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.3588%" y="597" width="0.0805%" height="15" fill="rgb(218,19,27)" fg:x="974" fg:w="1"/><text x="78.6088%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.4393%" y="645" width="0.1609%" height="15" fill="rgb(228,0,35)" fg:x="975" fg:w="2"/><text x="78.6893%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.4393%" y="629" width="0.1609%" height="15" fill="rgb(244,142,54)" fg:x="975" fg:w="2"/><text x="78.6893%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="78.6002%" y="629" width="0.0805%" height="15" fill="rgb(243,217,40)" fg:x="977" fg:w="1"/><text x="78.8502%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.6002%" y="613" width="0.0805%" height="15" fill="rgb(207,114,16)" fg:x="977" fg:w="1"/><text x="78.8502%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.6002%" y="597" width="0.0805%" height="15" fill="rgb(224,33,25)" fg:x="977" fg:w="1"/><text x="78.8502%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.6002%" y="581" width="0.0805%" height="15" fill="rgb(230,93,54)" fg:x="977" fg:w="1"/><text x="78.8502%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.6002%" y="565" width="0.0805%" height="15" fill="rgb(224,56,24)" fg:x="977" fg:w="1"/><text x="78.8502%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.6002%" y="549" width="0.0805%" height="15" fill="rgb(235,189,50)" fg:x="977" fg:w="1"/><text x="78.8502%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.6806%" y="629" width="0.0805%" height="15" fill="rgb(242,173,8)" fg:x="978" fg:w="1"/><text x="78.9306%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.6806%" y="613" width="0.0805%" height="15" fill="rgb(209,206,10)" fg:x="978" fg:w="1"/><text x="78.9306%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.8415%" y="597" width="0.1609%" height="15" fill="rgb(213,182,44)" fg:x="980" fg:w="2"/><text x="79.0915%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.8415%" y="581" width="0.1609%" height="15" fill="rgb(243,51,15)" fg:x="980" fg:w="2"/><text x="79.0915%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.9220%" y="565" width="0.0805%" height="15" fill="rgb(241,13,14)" fg:x="981" fg:w="1"/><text x="79.1720%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.9220%" y="549" width="0.0805%" height="15" fill="rgb(239,147,24)" fg:x="981" fg:w="1"/><text x="79.1720%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.0024%" y="597" width="0.1609%" height="15" fill="rgb(223,129,16)" fg:x="982" fg:w="2"/><text x="79.2524%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="78.6002%" y="645" width="0.6436%" height="15" fill="rgb(209,169,13)" fg:x="977" fg:w="8"/><text x="78.8502%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="78.7611%" y="629" width="0.4827%" height="15" fill="rgb(235,159,41)" fg:x="979" fg:w="6"/><text x="79.0111%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="78.8415%" y="613" width="0.4023%" height="15" fill="rgb(223,219,48)" fg:x="980" fg:w="5"/><text x="79.0915%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.1633%" y="597" width="0.0805%" height="15" fill="rgb(236,80,13)" fg:x="984" fg:w="1"/><text x="79.4133%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.1633%" y="581" width="0.0805%" height="15" fill="rgb(213,5,6)" fg:x="984" fg:w="1"/><text x="79.4133%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="79.1633%" y="565" width="0.0805%" height="15" fill="rgb(205,59,21)" fg:x="984" fg:w="1"/><text x="79.4133%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="79.4047%" y="613" width="0.1609%" height="15" fill="rgb(247,137,35)" fg:x="987" fg:w="2"/><text x="79.6547%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.4851%" y="597" width="0.0805%" height="15" fill="rgb(242,208,28)" fg:x="988" fg:w="1"/><text x="79.7351%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.4851%" y="581" width="0.0805%" height="15" fill="rgb(245,62,25)" fg:x="988" fg:w="1"/><text x="79.7351%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.4851%" y="565" width="0.0805%" height="15" fill="rgb(233,99,54)" fg:x="988" fg:w="1"/><text x="79.7351%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="78.4393%" y="661" width="1.2068%" height="15" fill="rgb(213,10,37)" fg:x="975" fg:w="15"/><text x="78.6893%" y="671.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="79.2438%" y="645" width="0.4023%" height="15" fill="rgb(235,143,30)" fg:x="985" fg:w="5"/><text x="79.4938%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="79.2438%" y="629" width="0.4023%" height="15" fill="rgb(250,146,33)" fg:x="985" fg:w="5"/><text x="79.4938%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="79.5656%" y="613" width="0.0805%" height="15" fill="rgb(226,198,42)" fg:x="989" fg:w="1"/><text x="79.8156%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.53%)</title><rect x="78.3588%" y="677" width="1.5286%" height="15" fill="rgb(222,55,6)" fg:x="974" fg:w="19"/><text x="78.6088%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="79.6460%" y="661" width="0.2414%" height="15" fill="rgb(213,224,31)" fg:x="990" fg:w="3"/><text x="79.8960%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.7265%" y="645" width="0.1609%" height="15" fill="rgb(226,103,35)" fg:x="991" fg:w="2"/><text x="79.9765%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="79.7265%" y="629" width="0.1609%" height="15" fill="rgb(205,66,45)" fg:x="991" fg:w="2"/><text x="79.9765%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.8069%" y="613" width="0.0805%" height="15" fill="rgb(226,51,42)" fg:x="992" fg:w="1"/><text x="80.0569%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.8069%" y="597" width="0.0805%" height="15" fill="rgb(206,69,1)" fg:x="992" fg:w="1"/><text x="80.0569%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8069%" y="581" width="0.0805%" height="15" fill="rgb(213,228,47)" fg:x="992" fg:w="1"/><text x="80.0569%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.8874%" y="629" width="0.0805%" height="15" fill="rgb(224,204,18)" fg:x="993" fg:w="1"/><text x="80.1374%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.0483%" y="613" width="0.0805%" height="15" fill="rgb(253,187,47)" fg:x="995" fg:w="1"/><text x="80.2983%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="79.8874%" y="677" width="0.3218%" height="15" fill="rgb(232,61,2)" fg:x="993" fg:w="4"/><text x="80.1374%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="79.8874%" y="661" width="0.3218%" height="15" fill="rgb(213,132,35)" fg:x="993" fg:w="4"/><text x="80.1374%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="79.8874%" y="645" width="0.3218%" height="15" fill="rgb(247,33,21)" fg:x="993" fg:w="4"/><text x="80.1374%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.9678%" y="629" width="0.2414%" height="15" fill="rgb(233,71,46)" fg:x="994" fg:w="3"/><text x="80.2178%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1287%" y="613" width="0.0805%" height="15" fill="rgb(222,173,43)" fg:x="996" fg:w="1"/><text x="80.3787%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1287%" y="597" width="0.0805%" height="15" fill="rgb(249,218,47)" fg:x="996" fg:w="1"/><text x="80.3787%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1287%" y="581" width="0.0805%" height="15" fill="rgb(254,185,48)" fg:x="996" fg:w="1"/><text x="80.3787%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1287%" y="565" width="0.0805%" height="15" fill="rgb(252,165,50)" fg:x="996" fg:w="1"/><text x="80.3787%" y="575.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="80.2092%" y="661" width="0.0805%" height="15" fill="rgb(206,219,6)" fg:x="997" fg:w="1"/><text x="80.4592%" y="671.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="80.2092%" y="645" width="0.0805%" height="15" fill="rgb(212,212,45)" fg:x="997" fg:w="1"/><text x="80.4592%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="80.2896%" y="629" width="0.2414%" height="15" fill="rgb(221,31,9)" fg:x="998" fg:w="3"/><text x="80.5396%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.3701%" y="613" width="0.1609%" height="15" fill="rgb(234,198,39)" fg:x="999" fg:w="2"/><text x="80.6201%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="80.3701%" y="597" width="0.1609%" height="15" fill="rgb(252,145,46)" fg:x="999" fg:w="2"/><text x="80.6201%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="80.5310%" y="629" width="0.0805%" height="15" fill="rgb(237,149,0)" fg:x="1001" fg:w="1"/><text x="80.7810%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.5310%" y="613" width="0.0805%" height="15" fill="rgb(229,65,5)" fg:x="1001" fg:w="1"/><text x="80.7810%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.5310%" y="597" width="0.0805%" height="15" fill="rgb(235,60,36)" fg:x="1001" fg:w="1"/><text x="80.7810%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.6114%" y="581" width="0.0805%" height="15" fill="rgb(222,47,18)" fg:x="1002" fg:w="1"/><text x="80.8614%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.7723%" y="565" width="0.0805%" height="15" fill="rgb(235,114,22)" fg:x="1004" fg:w="1"/><text x="81.0223%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.8528%" y="565" width="0.0805%" height="15" fill="rgb(209,167,11)" fg:x="1005" fg:w="1"/><text x="81.1028%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8528%" y="549" width="0.0805%" height="15" fill="rgb(251,73,18)" fg:x="1005" fg:w="1"/><text x="81.1028%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.8528%" y="533" width="0.0805%" height="15" fill="rgb(217,60,17)" fg:x="1005" fg:w="1"/><text x="81.1028%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8528%" y="517" width="0.0805%" height="15" fill="rgb(224,36,37)" fg:x="1005" fg:w="1"/><text x="81.1028%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.8528%" y="501" width="0.0805%" height="15" fill="rgb(211,21,32)" fg:x="1005" fg:w="1"/><text x="81.1028%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.8528%" y="485" width="0.0805%" height="15" fill="rgb(231,55,48)" fg:x="1005" fg:w="1"/><text x="81.1028%" y="495.50"></text></g><g><title>engine::session::Session::flush (36 samples, 2.90%)</title><rect x="78.1175%" y="773" width="2.8962%" height="15" fill="rgb(227,42,18)" fg:x="971" fg:w="36"/><text x="78.3675%" y="783.50">en..</text></g><g><title>engine::session::Session::save_changes (34 samples, 2.74%)</title><rect x="78.2784%" y="757" width="2.7353%" height="15" fill="rgb(217,2,27)" fg:x="973" fg:w="34"/><text x="78.5284%" y="767.50">en..</text></g><g><title>engine::session::state::State::close (34 samples, 2.74%)</title><rect x="78.2784%" y="741" width="2.7353%" height="15" fill="rgb(251,138,23)" fg:x="973" fg:w="34"/><text x="78.5284%" y="751.50">en..</text></g><g><title>engine::session::state::State::flush_entities (34 samples, 2.74%)</title><rect x="78.2784%" y="725" width="2.7353%" height="15" fill="rgb(226,184,11)" fg:x="973" fg:w="34"/><text x="78.5284%" y="735.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (33 samples, 2.65%)</title><rect x="78.3588%" y="709" width="2.6549%" height="15" fill="rgb(242,142,12)" fg:x="974" fg:w="33"/><text x="78.6088%" y="719.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (33 samples, 2.65%)</title><rect x="78.3588%" y="693" width="2.6549%" height="15" fill="rgb(234,187,18)" fg:x="974" fg:w="33"/><text x="78.6088%" y="703.50">en..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.80%)</title><rect x="80.2092%" y="677" width="0.8045%" height="15" fill="rgb(237,44,42)" fg:x="997" fg:w="10"/><text x="80.4592%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="80.2896%" y="661" width="0.7241%" height="15" fill="rgb(211,90,23)" fg:x="998" fg:w="9"/><text x="80.5396%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="80.2896%" y="645" width="0.7241%" height="15" fill="rgb(207,81,18)" fg:x="998" fg:w="9"/><text x="80.5396%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="80.6114%" y="629" width="0.4023%" height="15" fill="rgb(222,107,28)" fg:x="1002" fg:w="5"/><text x="80.8614%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="80.6114%" y="613" width="0.4023%" height="15" fill="rgb(237,83,52)" fg:x="1002" fg:w="5"/><text x="80.8614%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="80.6114%" y="597" width="0.4023%" height="15" fill="rgb(208,67,11)" fg:x="1002" fg:w="5"/><text x="80.8614%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="80.6919%" y="581" width="0.3218%" height="15" fill="rgb(249,157,49)" fg:x="1003" fg:w="4"/><text x="80.9419%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9332%" y="565" width="0.0805%" height="15" fill="rgb(243,200,1)" fg:x="1006" fg:w="1"/><text x="81.1832%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="81.0137%" y="773" width="0.1609%" height="15" fill="rgb(225,162,37)" fg:x="1007" fg:w="2"/><text x="81.2637%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="81.0137%" y="757" width="0.1609%" height="15" fill="rgb(242,92,13)" fg:x="1007" fg:w="2"/><text x="81.2637%" y="767.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="81.0137%" y="741" width="0.1609%" height="15" fill="rgb(220,43,36)" fg:x="1007" fg:w="2"/><text x="81.2637%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0941%" y="725" width="0.0805%" height="15" fill="rgb(213,165,48)" fg:x="1008" fg:w="1"/><text x="81.3441%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.0941%" y="709" width="0.0805%" height="15" fill="rgb(227,200,9)" fg:x="1008" fg:w="1"/><text x="81.3441%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0941%" y="693" width="0.0805%" height="15" fill="rgb(221,222,28)" fg:x="1008" fg:w="1"/><text x="81.3441%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.0941%" y="677" width="0.0805%" height="15" fill="rgb(223,142,26)" fg:x="1008" fg:w="1"/><text x="81.3441%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0941%" y="661" width="0.0805%" height="15" fill="rgb(243,46,9)" fg:x="1008" fg:w="1"/><text x="81.3441%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0941%" y="645" width="0.0805%" height="15" fill="rgb(250,56,11)" fg:x="1008" fg:w="1"/><text x="81.3441%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.1746%" y="741" width="0.0805%" height="15" fill="rgb(229,113,5)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.1746%" y="725" width="0.0805%" height="15" fill="rgb(244,108,28)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.1746%" y="709" width="0.0805%" height="15" fill="rgb(242,119,50)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.1746%" y="693" width="0.0805%" height="15" fill="rgb(224,164,23)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1746%" y="677" width="0.0805%" height="15" fill="rgb(214,227,44)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.1746%" y="661" width="0.0805%" height="15" fill="rgb(238,202,4)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1746%" y="645" width="0.0805%" height="15" fill="rgb(213,190,30)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.1746%" y="629" width="0.0805%" height="15" fill="rgb(239,15,2)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1746%" y="613" width="0.0805%" height="15" fill="rgb(249,229,4)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="81.1746%" y="597" width="0.0805%" height="15" fill="rgb(239,75,44)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="81.2550%" y="741" width="0.0805%" height="15" fill="rgb(251,206,23)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="81.2550%" y="725" width="0.0805%" height="15" fill="rgb(215,208,0)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.2550%" y="709" width="0.0805%" height="15" fill="rgb(230,75,50)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="719.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.2550%" y="693" width="0.0805%" height="15" fill="rgb(246,180,39)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2550%" y="677" width="0.0805%" height="15" fill="rgb(249,175,24)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.2550%" y="661" width="0.0805%" height="15" fill="rgb(247,176,22)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.2550%" y="645" width="0.0805%" height="15" fill="rgb(241,100,24)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.2550%" y="629" width="0.0805%" height="15" fill="rgb(233,4,35)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.2550%" y="613" width="0.0805%" height="15" fill="rgb(211,164,46)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.2550%" y="597" width="0.0805%" height="15" fill="rgb(242,99,53)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="81.2550%" y="581" width="0.0805%" height="15" fill="rgb(243,45,33)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="81.2550%" y="565" width="0.0805%" height="15" fill="rgb(217,55,21)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="81.1746%" y="757" width="0.2414%" height="15" fill="rgb(245,145,46)" fg:x="1009" fg:w="3"/><text x="81.4246%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.3355%" y="741" width="0.0805%" height="15" fill="rgb(215,112,45)" fg:x="1011" fg:w="1"/><text x="81.5855%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="81.3355%" y="725" width="0.0805%" height="15" fill="rgb(228,104,16)" fg:x="1011" fg:w="1"/><text x="81.5855%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.3355%" y="709" width="0.0805%" height="15" fill="rgb(239,186,38)" fg:x="1011" fg:w="1"/><text x="81.5855%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.3355%" y="693" width="0.0805%" height="15" fill="rgb(228,38,35)" fg:x="1011" fg:w="1"/><text x="81.5855%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.3355%" y="677" width="0.0805%" height="15" fill="rgb(251,42,40)" fg:x="1011" fg:w="1"/><text x="81.5855%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3355%" y="661" width="0.0805%" height="15" fill="rgb(210,51,19)" fg:x="1011" fg:w="1"/><text x="81.5855%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="81.4159%" y="757" width="0.0805%" height="15" fill="rgb(236,94,42)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="81.4159%" y="741" width="0.0805%" height="15" fill="rgb(239,167,16)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4159%" y="725" width="0.0805%" height="15" fill="rgb(252,175,31)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4964%" y="661" width="0.0805%" height="15" fill="rgb(206,166,30)" fg:x="1013" fg:w="1"/><text x="81.7464%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4964%" y="645" width="0.0805%" height="15" fill="rgb(206,209,37)" fg:x="1013" fg:w="1"/><text x="81.7464%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.5768%" y="661" width="0.0805%" height="15" fill="rgb(226,91,4)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.5768%" y="645" width="0.0805%" height="15" fill="rgb(222,167,0)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.5768%" y="629" width="0.0805%" height="15" fill="rgb(211,70,14)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.5768%" y="613" width="0.0805%" height="15" fill="rgb(214,84,42)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.5768%" y="597" width="0.0805%" height="15" fill="rgb(235,157,37)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.5768%" y="581" width="0.0805%" height="15" fill="rgb(225,13,6)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.5768%" y="565" width="0.0805%" height="15" fill="rgb(205,202,1)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="81.4964%" y="709" width="0.2414%" height="15" fill="rgb(232,195,26)" fg:x="1013" fg:w="3"/><text x="81.7464%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="81.4964%" y="693" width="0.2414%" height="15" fill="rgb(208,102,26)" fg:x="1013" fg:w="3"/><text x="81.7464%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.4964%" y="677" width="0.2414%" height="15" fill="rgb(215,41,39)" fg:x="1013" fg:w="3"/><text x="81.7464%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.6573%" y="661" width="0.0805%" height="15" fill="rgb(247,139,11)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.6573%" y="645" width="0.0805%" height="15" fill="rgb(243,99,6)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.6573%" y="629" width="0.0805%" height="15" fill="rgb(230,168,48)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.6573%" y="613" width="0.0805%" height="15" fill="rgb(238,227,13)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.6573%" y="597" width="0.0805%" height="15" fill="rgb(209,109,13)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.6573%" y="581" width="0.0805%" height="15" fill="rgb(228,195,1)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.6573%" y="565" width="0.0805%" height="15" fill="rgb(230,218,0)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.6573%" y="549" width="0.0805%" height="15" fill="rgb(206,1,45)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.6573%" y="533" width="0.0805%" height="15" fill="rgb(209,124,26)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="81.4964%" y="741" width="0.3218%" height="15" fill="rgb(220,59,8)" fg:x="1013" fg:w="4"/><text x="81.7464%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="81.4964%" y="725" width="0.3218%" height="15" fill="rgb(251,41,37)" fg:x="1013" fg:w="4"/><text x="81.7464%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.7377%" y="709" width="0.0805%" height="15" fill="rgb(239,152,21)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.7377%" y="693" width="0.0805%" height="15" fill="rgb(226,32,1)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.7377%" y="677" width="0.0805%" height="15" fill="rgb(230,154,36)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.7377%" y="661" width="0.0805%" height="15" fill="rgb(208,228,43)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.7377%" y="645" width="0.0805%" height="15" fill="rgb(214,203,3)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.7377%" y="629" width="0.0805%" height="15" fill="rgb(207,149,29)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.7377%" y="613" width="0.0805%" height="15" fill="rgb(250,105,7)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.8182%" y="741" width="0.0805%" height="15" fill="rgb(232,222,16)" fg:x="1017" fg:w="1"/><text x="82.0682%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8986%" y="645" width="0.0805%" height="15" fill="rgb(209,32,24)" fg:x="1018" fg:w="1"/><text x="82.1486%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8986%" y="629" width="0.0805%" height="15" fill="rgb(225,13,6)" fg:x="1018" fg:w="1"/><text x="82.1486%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.9791%" y="613" width="0.0805%" height="15" fill="rgb(245,226,26)" fg:x="1019" fg:w="1"/><text x="82.2291%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="81.8986%" y="693" width="0.2414%" height="15" fill="rgb(229,178,27)" fg:x="1018" fg:w="3"/><text x="82.1486%" y="703.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="81.8986%" y="677" width="0.2414%" height="15" fill="rgb(205,227,28)" fg:x="1018" fg:w="3"/><text x="82.1486%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.8986%" y="661" width="0.2414%" height="15" fill="rgb(210,191,45)" fg:x="1018" fg:w="3"/><text x="82.1486%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="81.9791%" y="645" width="0.1609%" height="15" fill="rgb(206,124,16)" fg:x="1019" fg:w="2"/><text x="82.2291%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.9791%" y="629" width="0.1609%" height="15" fill="rgb(210,162,0)" fg:x="1019" fg:w="2"/><text x="82.2291%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.0595%" y="613" width="0.0805%" height="15" fill="rgb(211,54,38)" fg:x="1020" fg:w="1"/><text x="82.3095%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0595%" y="597" width="0.0805%" height="15" fill="rgb(248,192,3)" fg:x="1020" fg:w="1"/><text x="82.3095%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.0595%" y="581" width="0.0805%" height="15" fill="rgb(233,187,18)" fg:x="1020" fg:w="1"/><text x="82.3095%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0595%" y="565" width="0.0805%" height="15" fill="rgb(237,208,14)" fg:x="1020" fg:w="1"/><text x="82.3095%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.0595%" y="549" width="0.0805%" height="15" fill="rgb(212,77,1)" fg:x="1020" fg:w="1"/><text x="82.3095%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0595%" y="533" width="0.0805%" height="15" fill="rgb(210,163,22)" fg:x="1020" fg:w="1"/><text x="82.3095%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.1400%" y="677" width="0.0805%" height="15" fill="rgb(250,58,28)" fg:x="1021" fg:w="1"/><text x="82.3900%" y="687.50"></text></g><g><title>plugins_core::build::Build::holding (15 samples, 1.21%)</title><rect x="81.1746%" y="773" width="1.2068%" height="15" fill="rgb(254,28,41)" fg:x="1009" fg:w="15"/><text x="81.4246%" y="783.50"></text></g><g><title>plugins_core::tools::set_container (11 samples, 0.88%)</title><rect x="81.4964%" y="757" width="0.8850%" height="15" fill="rgb(237,162,36)" fg:x="1013" fg:w="11"/><text x="81.7464%" y="767.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="81.8986%" y="741" width="0.4827%" height="15" fill="rgb(232,56,6)" fg:x="1018" fg:w="6"/><text x="82.1486%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="81.8986%" y="725" width="0.4827%" height="15" fill="rgb(216,127,42)" fg:x="1018" fg:w="6"/><text x="82.1486%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="81.8986%" y="709" width="0.4827%" height="15" fill="rgb(241,69,15)" fg:x="1018" fg:w="6"/><text x="82.1486%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="82.1400%" y="693" width="0.2414%" height="15" fill="rgb(227,180,19)" fg:x="1021" fg:w="3"/><text x="82.3900%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="82.2204%" y="677" width="0.1609%" height="15" fill="rgb(231,188,29)" fg:x="1022" fg:w="2"/><text x="82.4704%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.2204%" y="661" width="0.1609%" height="15" fill="rgb(224,176,27)" fg:x="1022" fg:w="2"/><text x="82.4704%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.2204%" y="645" width="0.1609%" height="15" fill="rgb(249,214,19)" fg:x="1022" fg:w="2"/><text x="82.4704%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.2204%" y="629" width="0.1609%" height="15" fill="rgb(240,0,4)" fg:x="1022" fg:w="2"/><text x="82.4704%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.2204%" y="613" width="0.1609%" height="15" fill="rgb(233,28,41)" fg:x="1022" fg:w="2"/><text x="82.4704%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.2204%" y="597" width="0.1609%" height="15" fill="rgb(220,90,51)" fg:x="1022" fg:w="2"/><text x="82.4704%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.2204%" y="581" width="0.1609%" height="15" fill="rgb(250,52,22)" fg:x="1022" fg:w="2"/><text x="82.4704%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3009%" y="565" width="0.0805%" height="15" fill="rgb(231,152,36)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3009%" y="549" width="0.0805%" height="15" fill="rgb(250,218,4)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.3009%" y="533" width="0.0805%" height="15" fill="rgb(210,38,21)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.3009%" y="517" width="0.0805%" height="15" fill="rgb(230,75,13)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.3009%" y="501" width="0.0805%" height="15" fill="rgb(250,68,53)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3009%" y="485" width="0.0805%" height="15" fill="rgb(250,210,16)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3009%" y="469" width="0.0805%" height="15" fill="rgb(240,132,5)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.3009%" y="453" width="0.0805%" height="15" fill="rgb(222,148,48)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.3009%" y="437" width="0.0805%" height="15" fill="rgb(247,181,24)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.3009%" y="421" width="0.0805%" height="15" fill="rgb(239,5,31)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.3009%" y="405" width="0.0805%" height="15" fill="rgb(241,152,38)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="82.3009%" y="389" width="0.0805%" height="15" fill="rgb(246,200,37)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="82.3813%" y="773" width="0.0805%" height="15" fill="rgb(243,210,26)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="82.3813%" y="757" width="0.0805%" height="15" fill="rgb(222,22,22)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="82.3813%" y="741" width="0.0805%" height="15" fill="rgb(208,129,28)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="82.3813%" y="725" width="0.0805%" height="15" fill="rgb(254,169,28)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="82.3813%" y="709" width="0.0805%" height="15" fill="rgb(225,45,17)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.3813%" y="693" width="0.0805%" height="15" fill="rgb(232,199,2)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.3813%" y="677" width="0.0805%" height="15" fill="rgb(235,33,40)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.3813%" y="661" width="0.0805%" height="15" fill="rgb(237,89,50)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="82.3813%" y="645" width="0.0805%" height="15" fill="rgb(238,126,5)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.3813%" y="629" width="0.0805%" height="15" fill="rgb(247,214,42)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.3813%" y="613" width="0.0805%" height="15" fill="rgb(238,60,45)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.3813%" y="597" width="0.0805%" height="15" fill="rgb(225,69,44)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="82.3813%" y="581" width="0.0805%" height="15" fill="rgb(241,13,44)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.3813%" y="565" width="0.0805%" height="15" fill="rgb(227,121,22)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.3813%" y="549" width="0.0805%" height="15" fill="rgb(231,160,23)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.3813%" y="533" width="0.0805%" height="15" fill="rgb(250,179,43)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.3813%" y="517" width="0.0805%" height="15" fill="rgb(233,54,46)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="82.3813%" y="501" width="0.0805%" height="15" fill="rgb(247,120,42)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="82.3813%" y="485" width="0.0805%" height="15" fill="rgb(221,219,12)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="82.3813%" y="469" width="0.0805%" height="15" fill="rgb(211,126,8)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="82.3813%" y="453" width="0.0805%" height="15" fill="rgb(218,154,33)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.3813%" y="437" width="0.0805%" height="15" fill="rgb(212,199,16)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.3813%" y="421" width="0.0805%" height="15" fill="rgb(236,215,46)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.3813%" y="405" width="0.0805%" height="15" fill="rgb(232,32,22)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="82.3813%" y="389" width="0.0805%" height="15" fill="rgb(234,79,15)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="82.3813%" y="373" width="0.0805%" height="15" fill="rgb(235,187,47)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="383.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="82.4618%" y="773" width="0.0805%" height="15" fill="rgb(244,69,37)" fg:x="1025" fg:w="1"/><text x="82.7118%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="82.4618%" y="757" width="0.0805%" height="15" fill="rgb(249,140,25)" fg:x="1025" fg:w="1"/><text x="82.7118%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.4618%" y="741" width="0.0805%" height="15" fill="rgb(213,69,8)" fg:x="1025" fg:w="1"/><text x="82.7118%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.4618%" y="725" width="0.0805%" height="15" fill="rgb(220,136,2)" fg:x="1025" fg:w="1"/><text x="82.7118%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="82.5422%" y="741" width="0.0805%" height="15" fill="rgb(237,50,36)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="82.5422%" y="725" width="0.0805%" height="15" fill="rgb(226,18,11)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="82.5422%" y="709" width="0.0805%" height="15" fill="rgb(243,156,2)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.5422%" y="693" width="0.0805%" height="15" fill="rgb(218,8,34)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.5422%" y="677" width="0.0805%" height="15" fill="rgb(250,94,35)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.5422%" y="661" width="0.0805%" height="15" fill="rgb(229,127,21)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="82.5422%" y="645" width="0.0805%" height="15" fill="rgb(234,49,5)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.5422%" y="629" width="0.0805%" height="15" fill="rgb(248,12,16)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.5422%" y="613" width="0.0805%" height="15" fill="rgb(208,220,31)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.5422%" y="597" width="0.0805%" height="15" fill="rgb(243,184,0)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="82.5422%" y="581" width="0.0805%" height="15" fill="rgb(217,38,21)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.5422%" y="565" width="0.0805%" height="15" fill="rgb(239,120,45)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.6227%" y="741" width="0.0805%" height="15" fill="rgb(235,33,2)" fg:x="1027" fg:w="1"/><text x="82.8727%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.6227%" y="725" width="0.0805%" height="15" fill="rgb(249,161,5)" fg:x="1027" fg:w="1"/><text x="82.8727%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.6227%" y="709" width="0.0805%" height="15" fill="rgb(250,165,48)" fg:x="1027" fg:w="1"/><text x="82.8727%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6227%" y="693" width="0.0805%" height="15" fill="rgb(221,23,45)" fg:x="1027" fg:w="1"/><text x="82.8727%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6227%" y="677" width="0.0805%" height="15" fill="rgb(217,108,46)" fg:x="1027" fg:w="1"/><text x="82.8727%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6227%" y="661" width="0.0805%" height="15" fill="rgb(254,26,35)" fg:x="1027" fg:w="1"/><text x="82.8727%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="82.7031%" y="741" width="0.0805%" height="15" fill="rgb(218,223,28)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="82.7031%" y="725" width="0.0805%" height="15" fill="rgb(242,27,47)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.7031%" y="709" width="0.0805%" height="15" fill="rgb(218,39,35)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="719.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7031%" y="693" width="0.0805%" height="15" fill="rgb(232,127,16)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7031%" y="677" width="0.0805%" height="15" fill="rgb(231,219,51)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7031%" y="661" width="0.0805%" height="15" fill="rgb(217,220,46)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7031%" y="645" width="0.0805%" height="15" fill="rgb(230,75,1)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7836%" y="661" width="0.0805%" height="15" fill="rgb(218,2,8)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7836%" y="645" width="0.0805%" height="15" fill="rgb(206,111,30)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7836%" y="629" width="0.0805%" height="15" fill="rgb(209,135,6)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7836%" y="613" width="0.0805%" height="15" fill="rgb(205,169,10)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7836%" y="597" width="0.0805%" height="15" fill="rgb(212,204,38)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7836%" y="581" width="0.0805%" height="15" fill="rgb(205,199,14)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7836%" y="565" width="0.0805%" height="15" fill="rgb(212,4,6)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.7836%" y="549" width="0.0805%" height="15" fill="rgb(250,15,10)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.7836%" y="533" width="0.0805%" height="15" fill="rgb(212,49,51)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.7836%" y="517" width="0.0805%" height="15" fill="rgb(235,21,9)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7836%" y="501" width="0.0805%" height="15" fill="rgb(251,31,32)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7836%" y="485" width="0.0805%" height="15" fill="rgb(246,23,9)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.7836%" y="469" width="0.0805%" height="15" fill="rgb(225,216,14)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.7836%" y="453" width="0.0805%" height="15" fill="rgb(215,200,26)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.7836%" y="437" width="0.0805%" height="15" fill="rgb(237,130,47)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.7836%" y="421" width="0.0805%" height="15" fill="rgb(247,74,14)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7836%" y="405" width="0.0805%" height="15" fill="rgb(254,97,46)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.8640%" y="661" width="0.0805%" height="15" fill="rgb(234,191,1)" fg:x="1030" fg:w="1"/><text x="83.1140%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.0249%" y="565" width="0.0805%" height="15" fill="rgb(215,165,14)" fg:x="1032" fg:w="1"/><text x="83.2749%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0249%" y="549" width="0.0805%" height="15" fill="rgb(230,182,6)" fg:x="1032" fg:w="1"/><text x="83.2749%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="82.5422%" y="757" width="0.6436%" height="15" fill="rgb(210,127,39)" fg:x="1026" fg:w="8"/><text x="82.7922%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="82.7836%" y="741" width="0.4023%" height="15" fill="rgb(223,212,51)" fg:x="1029" fg:w="5"/><text x="83.0336%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="82.7836%" y="725" width="0.4023%" height="15" fill="rgb(226,176,43)" fg:x="1029" fg:w="5"/><text x="83.0336%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="82.7836%" y="709" width="0.4023%" height="15" fill="rgb(222,155,4)" fg:x="1029" fg:w="5"/><text x="83.0336%" y="719.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="82.7836%" y="693" width="0.4023%" height="15" fill="rgb(215,149,7)" fg:x="1029" fg:w="5"/><text x="83.0336%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="82.7836%" y="677" width="0.4023%" height="15" fill="rgb(252,199,23)" fg:x="1029" fg:w="5"/><text x="83.0336%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="82.9445%" y="661" width="0.2414%" height="15" fill="rgb(245,52,29)" fg:x="1031" fg:w="3"/><text x="83.1945%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="82.9445%" y="645" width="0.2414%" height="15" fill="rgb(221,228,19)" fg:x="1031" fg:w="3"/><text x="83.1945%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="82.9445%" y="629" width="0.2414%" height="15" fill="rgb(253,101,6)" fg:x="1031" fg:w="3"/><text x="83.1945%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="82.9445%" y="613" width="0.2414%" height="15" fill="rgb(211,130,8)" fg:x="1031" fg:w="3"/><text x="83.1945%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="82.9445%" y="597" width="0.2414%" height="15" fill="rgb(238,37,53)" fg:x="1031" fg:w="3"/><text x="83.1945%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="83.0249%" y="581" width="0.1609%" height="15" fill="rgb(235,145,5)" fg:x="1032" fg:w="2"/><text x="83.2749%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1054%" y="565" width="0.0805%" height="15" fill="rgb(244,12,43)" fg:x="1033" fg:w="1"/><text x="83.3554%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1054%" y="549" width="0.0805%" height="15" fill="rgb(246,195,24)" fg:x="1033" fg:w="1"/><text x="83.3554%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1054%" y="533" width="0.0805%" height="15" fill="rgb(235,163,6)" fg:x="1033" fg:w="1"/><text x="83.3554%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1054%" y="517" width="0.0805%" height="15" fill="rgb(236,218,17)" fg:x="1033" fg:w="1"/><text x="83.3554%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1054%" y="501" width="0.0805%" height="15" fill="rgb(235,12,38)" fg:x="1033" fg:w="1"/><text x="83.3554%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1054%" y="485" width="0.0805%" height="15" fill="rgb(225,195,33)" fg:x="1033" fg:w="1"/><text x="83.3554%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1858%" y="661" width="0.0805%" height="15" fill="rgb(238,54,35)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1858%" y="645" width="0.0805%" height="15" fill="rgb(238,33,7)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1858%" y="629" width="0.0805%" height="15" fill="rgb(245,5,14)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1858%" y="613" width="0.0805%" height="15" fill="rgb(251,95,31)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="83.1858%" y="709" width="0.2414%" height="15" fill="rgb(222,15,46)" fg:x="1034" fg:w="3"/><text x="83.4358%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="83.1858%" y="693" width="0.2414%" height="15" fill="rgb(226,182,24)" fg:x="1034" fg:w="3"/><text x="83.4358%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="83.1858%" y="677" width="0.2414%" height="15" fill="rgb(229,105,41)" fg:x="1034" fg:w="3"/><text x="83.4358%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.2663%" y="661" width="0.1609%" height="15" fill="rgb(216,99,53)" fg:x="1035" fg:w="2"/><text x="83.5163%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.2663%" y="645" width="0.1609%" height="15" fill="rgb(253,26,20)" fg:x="1035" fg:w="2"/><text x="83.5163%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.2663%" y="629" width="0.1609%" height="15" fill="rgb(249,155,28)" fg:x="1035" fg:w="2"/><text x="83.5163%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.2663%" y="613" width="0.1609%" height="15" fill="rgb(241,221,2)" fg:x="1035" fg:w="2"/><text x="83.5163%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="83.2663%" y="597" width="0.1609%" height="15" fill="rgb(219,124,6)" fg:x="1035" fg:w="2"/><text x="83.5163%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.2663%" y="581" width="0.1609%" height="15" fill="rgb(233,37,6)" fg:x="1035" fg:w="2"/><text x="83.5163%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3467%" y="565" width="0.0805%" height="15" fill="rgb(238,20,14)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="83.1858%" y="741" width="0.3218%" height="15" fill="rgb(232,106,27)" fg:x="1034" fg:w="4"/><text x="83.4358%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="83.1858%" y="725" width="0.3218%" height="15" fill="rgb(246,157,24)" fg:x="1034" fg:w="4"/><text x="83.4358%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.4272%" y="709" width="0.0805%" height="15" fill="rgb(214,153,10)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.4272%" y="693" width="0.0805%" height="15" fill="rgb(212,94,6)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.4272%" y="677" width="0.0805%" height="15" fill="rgb(254,25,27)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4272%" y="661" width="0.0805%" height="15" fill="rgb(250,43,52)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4272%" y="645" width="0.0805%" height="15" fill="rgb(221,226,40)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4272%" y="629" width="0.0805%" height="15" fill="rgb(235,162,34)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4272%" y="613" width="0.0805%" height="15" fill="rgb(239,24,26)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (84 samples, 6.76%)</title><rect x="76.8302%" y="789" width="6.7578%" height="15" fill="rgb(244,226,11)" fg:x="955" fg:w="84"/><text x="77.0802%" y="799.50">plugins_c..</text></g><g><title>plugins_core::build::Build::occupying (13 samples, 1.05%)</title><rect x="82.5422%" y="773" width="1.0459%" height="15" fill="rgb(225,23,10)" fg:x="1026" fg:w="13"/><text x="82.7922%" y="783.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.40%)</title><rect x="83.1858%" y="757" width="0.4023%" height="15" fill="rgb(249,125,6)" fg:x="1034" fg:w="5"/><text x="83.4358%" y="767.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="83.5076%" y="741" width="0.0805%" height="15" fill="rgb(246,212,12)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="83.5076%" y="725" width="0.0805%" height="15" fill="rgb(230,43,32)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="83.5076%" y="709" width="0.0805%" height="15" fill="rgb(210,95,23)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.5076%" y="693" width="0.0805%" height="15" fill="rgb(229,103,33)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.5076%" y="677" width="0.0805%" height="15" fill="rgb(222,104,27)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.5076%" y="661" width="0.0805%" height="15" fill="rgb(239,221,23)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5076%" y="645" width="0.0805%" height="15" fill="rgb(222,98,21)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5076%" y="629" width="0.0805%" height="15" fill="rgb(231,101,20)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5076%" y="613" width="0.0805%" height="15" fill="rgb(215,150,22)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5076%" y="597" width="0.0805%" height="15" fill="rgb(248,3,34)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5076%" y="581" width="0.0805%" height="15" fill="rgb(220,141,21)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5076%" y="565" width="0.0805%" height="15" fill="rgb(223,41,48)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="83.5881%" y="789" width="0.0805%" height="15" fill="rgb(247,12,5)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="83.5881%" y="773" width="0.0805%" height="15" fill="rgb(206,173,10)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="83.5881%" y="757" width="0.0805%" height="15" fill="rgb(233,214,37)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.5881%" y="741" width="0.0805%" height="15" fill="rgb(238,86,43)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.5881%" y="725" width="0.0805%" height="15" fill="rgb(212,182,8)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.5881%" y="709" width="0.0805%" height="15" fill="rgb(240,91,47)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5881%" y="693" width="0.0805%" height="15" fill="rgb(209,138,26)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5881%" y="677" width="0.0805%" height="15" fill="rgb(231,163,20)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5881%" y="661" width="0.0805%" height="15" fill="rgb(214,91,54)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5881%" y="645" width="0.0805%" height="15" fill="rgb(230,32,17)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.5881%" y="629" width="0.0805%" height="15" fill="rgb(231,34,34)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5881%" y="613" width="0.0805%" height="15" fill="rgb(224,228,27)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="83.6685%" y="741" width="0.0805%" height="15" fill="rgb(219,35,40)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="83.6685%" y="725" width="0.0805%" height="15" fill="rgb(234,42,8)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.6685%" y="709" width="0.0805%" height="15" fill="rgb(226,75,22)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.6685%" y="693" width="0.0805%" height="15" fill="rgb(242,203,28)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.6685%" y="677" width="0.0805%" height="15" fill="rgb(221,3,9)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.6685%" y="661" width="0.0805%" height="15" fill="rgb(214,34,31)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.6685%" y="645" width="0.0805%" height="15" fill="rgb(252,119,15)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.6685%" y="629" width="0.0805%" height="15" fill="rgb(244,224,31)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.6685%" y="613" width="0.0805%" height="15" fill="rgb(215,8,51)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.6685%" y="597" width="0.0805%" height="15" fill="rgb(207,24,1)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.6685%" y="581" width="0.0805%" height="15" fill="rgb(245,90,0)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.6685%" y="565" width="0.0805%" height="15" fill="rgb(246,43,48)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.6685%" y="549" width="0.0805%" height="15" fill="rgb(252,218,10)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6685%" y="533" width="0.0805%" height="15" fill="rgb(231,24,35)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="83.7490%" y="741" width="0.0805%" height="15" fill="rgb(225,66,19)" fg:x="1041" fg:w="1"/><text x="83.9990%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8294%" y="645" width="0.0805%" height="15" fill="rgb(214,96,51)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8294%" y="629" width="0.0805%" height="15" fill="rgb(251,151,47)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8294%" y="613" width="0.0805%" height="15" fill="rgb(236,79,14)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8294%" y="597" width="0.0805%" height="15" fill="rgb(210,205,11)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.8294%" y="581" width="0.0805%" height="15" fill="rgb(233,142,53)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.8294%" y="565" width="0.0805%" height="15" fill="rgb(212,116,48)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.8294%" y="549" width="0.0805%" height="15" fill="rgb(234,55,33)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.8294%" y="533" width="0.0805%" height="15" fill="rgb(253,92,27)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.8294%" y="517" width="0.0805%" height="15" fill="rgb(220,7,35)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.8294%" y="501" width="0.0805%" height="15" fill="rgb(246,124,6)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.8294%" y="485" width="0.0805%" height="15" fill="rgb(212,111,51)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.8294%" y="469" width="0.0805%" height="15" fill="rgb(253,116,7)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.8294%" y="453" width="0.0805%" height="15" fill="rgb(213,145,18)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.8294%" y="437" width="0.0805%" height="15" fill="rgb(219,149,7)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.8294%" y="421" width="0.0805%" height="15" fill="rgb(225,156,20)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8294%" y="405" width="0.0805%" height="15" fill="rgb(211,98,19)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.8294%" y="693" width="0.1609%" height="15" fill="rgb(231,192,31)" fg:x="1042" fg:w="2"/><text x="84.0794%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.8294%" y="677" width="0.1609%" height="15" fill="rgb(249,95,19)" fg:x="1042" fg:w="2"/><text x="84.0794%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.8294%" y="661" width="0.1609%" height="15" fill="rgb(247,101,36)" fg:x="1042" fg:w="2"/><text x="84.0794%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9099%" y="645" width="0.0805%" height="15" fill="rgb(221,45,43)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="83.6685%" y="757" width="0.4023%" height="15" fill="rgb(220,42,1)" fg:x="1040" fg:w="5"/><text x="83.9185%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="83.8294%" y="741" width="0.2414%" height="15" fill="rgb(236,19,24)" fg:x="1042" fg:w="3"/><text x="84.0794%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="83.8294%" y="725" width="0.2414%" height="15" fill="rgb(225,192,6)" fg:x="1042" fg:w="3"/><text x="84.0794%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="83.8294%" y="709" width="0.2414%" height="15" fill="rgb(242,30,19)" fg:x="1042" fg:w="3"/><text x="84.0794%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.9903%" y="693" width="0.0805%" height="15" fill="rgb(240,36,6)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.9903%" y="677" width="0.0805%" height="15" fill="rgb(246,40,28)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.9903%" y="661" width="0.0805%" height="15" fill="rgb(225,155,33)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.9903%" y="645" width="0.0805%" height="15" fill="rgb(240,65,18)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.9903%" y="629" width="0.0805%" height="15" fill="rgb(217,0,48)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.9903%" y="613" width="0.0805%" height="15" fill="rgb(217,80,15)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.9903%" y="597" width="0.0805%" height="15" fill="rgb(253,43,51)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.9903%" y="581" width="0.0805%" height="15" fill="rgb(246,60,4)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="84.0708%" y="741" width="0.0805%" height="15" fill="rgb(230,40,54)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="84.0708%" y="725" width="0.0805%" height="15" fill="rgb(208,20,44)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0708%" y="709" width="0.0805%" height="15" fill="rgb(230,22,22)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="719.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.56%)</title><rect x="83.6685%" y="789" width="0.5632%" height="15" fill="rgb(207,57,4)" fg:x="1040" fg:w="7"/><text x="83.9185%" y="799.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.56%)</title><rect x="83.6685%" y="773" width="0.5632%" height="15" fill="rgb(242,130,33)" fg:x="1040" fg:w="7"/><text x="83.9185%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="84.0708%" y="757" width="0.1609%" height="15" fill="rgb(218,66,43)" fg:x="1045" fg:w="2"/><text x="84.3208%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="84.1512%" y="741" width="0.0805%" height="15" fill="rgb(236,105,16)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.1512%" y="725" width="0.0805%" height="15" fill="rgb(230,46,15)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.1512%" y="709" width="0.0805%" height="15" fill="rgb(251,172,40)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.1512%" y="693" width="0.0805%" height="15" fill="rgb(225,217,32)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1512%" y="677" width="0.0805%" height="15" fill="rgb(243,10,29)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="84.3121%" y="757" width="0.1609%" height="15" fill="rgb(207,102,10)" fg:x="1048" fg:w="2"/><text x="84.5621%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="84.3121%" y="741" width="0.1609%" height="15" fill="rgb(241,125,5)" fg:x="1048" fg:w="2"/><text x="84.5621%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="84.3121%" y="725" width="0.1609%" height="15" fill="rgb(230,125,29)" fg:x="1048" fg:w="2"/><text x="84.5621%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="84.3121%" y="709" width="0.1609%" height="15" fill="rgb(223,65,44)" fg:x="1048" fg:w="2"/><text x="84.5621%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="84.3121%" y="693" width="0.1609%" height="15" fill="rgb(224,188,28)" fg:x="1048" fg:w="2"/><text x="84.5621%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="84.3121%" y="677" width="0.1609%" height="15" fill="rgb(254,197,27)" fg:x="1048" fg:w="2"/><text x="84.5621%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="84.3121%" y="661" width="0.1609%" height="15" fill="rgb(220,200,25)" fg:x="1048" fg:w="2"/><text x="84.5621%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="84.3121%" y="645" width="0.1609%" height="15" fill="rgb(239,225,54)" fg:x="1048" fg:w="2"/><text x="84.5621%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="84.3121%" y="629" width="0.1609%" height="15" fill="rgb(211,59,40)" fg:x="1048" fg:w="2"/><text x="84.5621%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="84.3121%" y="613" width="0.1609%" height="15" fill="rgb(213,176,46)" fg:x="1048" fg:w="2"/><text x="84.5621%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="84.3121%" y="597" width="0.1609%" height="15" fill="rgb(226,99,4)" fg:x="1048" fg:w="2"/><text x="84.5621%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="84.3121%" y="581" width="0.1609%" height="15" fill="rgb(239,203,43)" fg:x="1048" fg:w="2"/><text x="84.5621%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.3926%" y="565" width="0.0805%" height="15" fill="rgb(246,1,45)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="84.3926%" y="549" width="0.0805%" height="15" fill="rgb(231,42,52)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="84.3926%" y="533" width="0.0805%" height="15" fill="rgb(240,13,50)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="84.3926%" y="517" width="0.0805%" height="15" fill="rgb(225,81,14)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.3926%" y="501" width="0.0805%" height="15" fill="rgb(216,182,23)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="84.3926%" y="485" width="0.0805%" height="15" fill="rgb(233,137,19)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.3926%" y="469" width="0.0805%" height="15" fill="rgb(242,61,46)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.3926%" y="453" width="0.0805%" height="15" fill="rgb(221,168,51)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="84.3926%" y="437" width="0.0805%" height="15" fill="rgb(238,48,15)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="84.3926%" y="421" width="0.0805%" height="15" fill="rgb(216,13,16)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="84.3926%" y="405" width="0.0805%" height="15" fill="rgb(223,185,34)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="84.3926%" y="389" width="0.0805%" height="15" fill="rgb(228,94,42)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="84.3926%" y="373" width="0.0805%" height="15" fill="rgb(218,166,43)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="84.3926%" y="357" width="0.0805%" height="15" fill="rgb(232,30,50)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.3926%" y="341" width="0.0805%" height="15" fill="rgb(245,206,45)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="84.3926%" y="325" width="0.0805%" height="15" fill="rgb(220,56,22)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.3926%" y="309" width="0.0805%" height="15" fill="rgb(239,129,38)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="84.3926%" y="293" width="0.0805%" height="15" fill="rgb(207,68,41)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="84.3926%" y="277" width="0.0805%" height="15" fill="rgb(221,21,7)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="84.3926%" y="261" width="0.0805%" height="15" fill="rgb(240,33,25)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="84.3926%" y="245" width="0.0805%" height="15" fill="rgb(242,119,10)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="255.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="84.4730%" y="757" width="0.0805%" height="15" fill="rgb(214,149,40)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="84.4730%" y="741" width="0.0805%" height="15" fill="rgb(228,25,36)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="84.4730%" y="725" width="0.0805%" height="15" fill="rgb(222,59,15)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.4730%" y="709" width="0.0805%" height="15" fill="rgb(218,170,0)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.4730%" y="693" width="0.0805%" height="15" fill="rgb(232,173,23)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4730%" y="677" width="0.0805%" height="15" fill="rgb(218,116,1)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.4730%" y="661" width="0.0805%" height="15" fill="rgb(207,34,4)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4730%" y="645" width="0.0805%" height="15" fill="rgb(229,54,52)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.4730%" y="629" width="0.0805%" height="15" fill="rgb(211,86,23)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.4730%" y="613" width="0.0805%" height="15" fill="rgb(254,153,34)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4730%" y="597" width="0.0805%" height="15" fill="rgb(219,220,14)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.4730%" y="581" width="0.0805%" height="15" fill="rgb(247,8,26)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="84.2317%" y="773" width="0.4023%" height="15" fill="rgb(213,129,42)" fg:x="1047" fg:w="5"/><text x="84.4817%" y="783.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="84.5535%" y="757" width="0.0805%" height="15" fill="rgb(225,95,41)" fg:x="1051" fg:w="1"/><text x="84.8035%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5535%" y="741" width="0.0805%" height="15" fill="rgb(215,134,24)" fg:x="1051" fg:w="1"/><text x="84.8035%" y="751.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="84.6340%" y="773" width="0.0805%" height="15" fill="rgb(235,23,54)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="84.6340%" y="757" width="0.0805%" height="15" fill="rgb(229,96,31)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.6340%" y="741" width="0.0805%" height="15" fill="rgb(206,111,12)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="751.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (185 samples, 14.88%)</title><rect x="69.9115%" y="805" width="14.8833%" height="15" fill="rgb(222,177,8)" fg:x="869" fg:w="185"/><text x="70.1615%" y="815.50">&lt;tests::HoldingKeyInVes..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (7 samples, 0.56%)</title><rect x="84.2317%" y="789" width="0.5632%" height="15" fill="rgb(251,36,52)" fg:x="1047" fg:w="7"/><text x="84.4817%" y="799.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="84.7144%" y="773" width="0.0805%" height="15" fill="rgb(216,182,29)" fg:x="1053" fg:w="1"/><text x="84.9644%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="84.7144%" y="757" width="0.0805%" height="15" fill="rgb(241,145,50)" fg:x="1053" fg:w="1"/><text x="84.9644%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="84.7144%" y="741" width="0.0805%" height="15" fill="rgb(231,71,35)" fg:x="1053" fg:w="1"/><text x="84.9644%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.7144%" y="725" width="0.0805%" height="15" fill="rgb(218,22,17)" fg:x="1053" fg:w="1"/><text x="84.9644%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.7144%" y="709" width="0.0805%" height="15" fill="rgb(225,227,6)" fg:x="1053" fg:w="1"/><text x="84.9644%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.7144%" y="693" width="0.0805%" height="15" fill="rgb(224,204,17)" fg:x="1053" fg:w="1"/><text x="84.9644%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="84.7949%" y="741" width="0.0805%" height="15" fill="rgb(227,61,28)" fg:x="1054" fg:w="1"/><text x="85.0449%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.7949%" y="725" width="0.0805%" height="15" fill="rgb(242,148,23)" fg:x="1054" fg:w="1"/><text x="85.0449%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="84.7949%" y="709" width="0.0805%" height="15" fill="rgb(237,105,33)" fg:x="1054" fg:w="1"/><text x="85.0449%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="84.8753%" y="725" width="0.0805%" height="15" fill="rgb(238,218,40)" fg:x="1055" fg:w="1"/><text x="85.1253%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="84.8753%" y="709" width="0.0805%" height="15" fill="rgb(209,126,11)" fg:x="1055" fg:w="1"/><text x="85.1253%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.8753%" y="693" width="0.0805%" height="15" fill="rgb(245,90,11)" fg:x="1055" fg:w="1"/><text x="85.1253%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="84.8753%" y="677" width="0.0805%" height="15" fill="rgb(211,195,10)" fg:x="1055" fg:w="1"/><text x="85.1253%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.8753%" y="661" width="0.0805%" height="15" fill="rgb(231,45,45)" fg:x="1055" fg:w="1"/><text x="85.1253%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.8753%" y="645" width="0.0805%" height="15" fill="rgb(246,100,43)" fg:x="1055" fg:w="1"/><text x="85.1253%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.9558%" y="645" width="0.0805%" height="15" fill="rgb(241,193,8)" fg:x="1056" fg:w="1"/><text x="85.2058%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="84.9558%" y="693" width="0.1609%" height="15" fill="rgb(208,76,19)" fg:x="1056" fg:w="2"/><text x="85.2058%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="84.9558%" y="677" width="0.1609%" height="15" fill="rgb(223,69,40)" fg:x="1056" fg:w="2"/><text x="85.2058%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="84.9558%" y="661" width="0.1609%" height="15" fill="rgb(207,120,39)" fg:x="1056" fg:w="2"/><text x="85.2058%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="85.0362%" y="645" width="0.0805%" height="15" fill="rgb(212,209,28)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="84.9558%" y="709" width="0.2414%" height="15" fill="rgb(246,82,29)" fg:x="1056" fg:w="3"/><text x="85.2058%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.1167%" y="693" width="0.0805%" height="15" fill="rgb(239,6,40)" fg:x="1058" fg:w="1"/><text x="85.3667%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.1167%" y="677" width="0.0805%" height="15" fill="rgb(228,181,35)" fg:x="1058" fg:w="1"/><text x="85.3667%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.1167%" y="661" width="0.0805%" height="15" fill="rgb(238,151,2)" fg:x="1058" fg:w="1"/><text x="85.3667%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.2776%" y="693" width="0.0805%" height="15" fill="rgb(236,94,18)" fg:x="1060" fg:w="1"/><text x="85.5276%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="85.3580%" y="693" width="0.1609%" height="15" fill="rgb(208,38,14)" fg:x="1061" fg:w="2"/><text x="85.6080%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.3580%" y="677" width="0.1609%" height="15" fill="rgb(234,215,27)" fg:x="1061" fg:w="2"/><text x="85.6080%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.4385%" y="661" width="0.0805%" height="15" fill="rgb(254,211,53)" fg:x="1062" fg:w="1"/><text x="85.6885%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.4385%" y="645" width="0.0805%" height="15" fill="rgb(216,175,11)" fg:x="1062" fg:w="1"/><text x="85.6885%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="85.5189%" y="677" width="0.2414%" height="15" fill="rgb(246,179,26)" fg:x="1063" fg:w="3"/><text x="85.7689%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="85.5189%" y="661" width="0.2414%" height="15" fill="rgb(249,19,52)" fg:x="1063" fg:w="3"/><text x="85.7689%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.5994%" y="645" width="0.1609%" height="15" fill="rgb(230,42,52)" fg:x="1064" fg:w="2"/><text x="85.8494%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="85.5994%" y="629" width="0.1609%" height="15" fill="rgb(221,171,0)" fg:x="1064" fg:w="2"/><text x="85.8494%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="85.7603%" y="661" width="0.1609%" height="15" fill="rgb(222,177,40)" fg:x="1066" fg:w="2"/><text x="86.0103%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.7603%" y="645" width="0.1609%" height="15" fill="rgb(247,34,16)" fg:x="1066" fg:w="2"/><text x="86.0103%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.8407%" y="629" width="0.0805%" height="15" fill="rgb(213,217,37)" fg:x="1067" fg:w="1"/><text x="86.0907%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.9212%" y="645" width="0.0805%" height="15" fill="rgb(231,189,24)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.9212%" y="629" width="0.0805%" height="15" fill="rgb(214,22,9)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.9212%" y="613" width="0.0805%" height="15" fill="rgb(212,70,22)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.9212%" y="597" width="0.0805%" height="15" fill="rgb(249,64,51)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="86.0016%" y="613" width="0.6436%" height="15" fill="rgb(249,148,20)" fg:x="1069" fg:w="8"/><text x="86.2516%" y="623.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="86.0821%" y="597" width="0.5632%" height="15" fill="rgb(246,46,48)" fg:x="1070" fg:w="7"/><text x="86.3321%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.56%)</title><rect x="86.0821%" y="581" width="0.5632%" height="15" fill="rgb(217,34,48)" fg:x="1070" fg:w="7"/><text x="86.3321%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.56%)</title><rect x="86.0821%" y="565" width="0.5632%" height="15" fill="rgb(222,45,26)" fg:x="1070" fg:w="7"/><text x="86.3321%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.48%)</title><rect x="86.1625%" y="549" width="0.4827%" height="15" fill="rgb(230,201,36)" fg:x="1071" fg:w="6"/><text x="86.4125%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.48%)</title><rect x="86.1625%" y="533" width="0.4827%" height="15" fill="rgb(217,30,43)" fg:x="1071" fg:w="6"/><text x="86.4125%" y="543.50"></text></g><g><title>realloc (6 samples, 0.48%)</title><rect x="86.1625%" y="517" width="0.4827%" height="15" fill="rgb(230,197,40)" fg:x="1071" fg:w="6"/><text x="86.4125%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="86.6452%" y="613" width="0.1609%" height="15" fill="rgb(239,181,18)" fg:x="1077" fg:w="2"/><text x="86.8952%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="85.9212%" y="661" width="1.0459%" height="15" fill="rgb(222,60,39)" fg:x="1068" fg:w="13"/><text x="86.1712%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="86.0016%" y="645" width="0.9654%" height="15" fill="rgb(210,60,22)" fg:x="1069" fg:w="12"/><text x="86.2516%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="86.0016%" y="629" width="0.9654%" height="15" fill="rgb(239,213,48)" fg:x="1069" fg:w="12"/><text x="86.2516%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.8061%" y="613" width="0.1609%" height="15" fill="rgb(253,214,23)" fg:x="1079" fg:w="2"/><text x="87.0561%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="85.7603%" y="677" width="1.2872%" height="15" fill="rgb(211,98,45)" fg:x="1066" fg:w="16"/><text x="86.0103%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.9670%" y="661" width="0.0805%" height="15" fill="rgb(239,130,44)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.9670%" y="645" width="0.0805%" height="15" fill="rgb(222,181,35)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.9670%" y="629" width="0.0805%" height="15" fill="rgb(219,219,49)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.61%)</title><rect x="85.5189%" y="693" width="1.6090%" height="15" fill="rgb(227,161,51)" fg:x="1063" fg:w="20"/><text x="85.7689%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.0475%" y="677" width="0.0805%" height="15" fill="rgb(239,112,27)" fg:x="1082" fg:w="1"/><text x="87.2975%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.0475%" y="661" width="0.0805%" height="15" fill="rgb(248,122,18)" fg:x="1082" fg:w="1"/><text x="87.2975%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.0475%" y="645" width="0.0805%" height="15" fill="rgb(245,130,23)" fg:x="1082" fg:w="1"/><text x="87.2975%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (33 samples, 2.65%)</title><rect x="84.9558%" y="725" width="2.6549%" height="15" fill="rgb(211,225,28)" fg:x="1056" fg:w="33"/><text x="85.2058%" y="735.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.41%)</title><rect x="85.1971%" y="709" width="2.4135%" height="15" fill="rgb(242,105,44)" fg:x="1059" fg:w="30"/><text x="85.4471%" y="719.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="87.1279%" y="693" width="0.4827%" height="15" fill="rgb(216,183,46)" fg:x="1083" fg:w="6"/><text x="87.3779%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="87.1279%" y="677" width="0.4827%" height="15" fill="rgb(227,112,9)" fg:x="1083" fg:w="6"/><text x="87.3779%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="87.1279%" y="661" width="0.4827%" height="15" fill="rgb(244,21,0)" fg:x="1083" fg:w="6"/><text x="87.3779%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="87.2084%" y="645" width="0.4023%" height="15" fill="rgb(236,185,14)" fg:x="1084" fg:w="5"/><text x="87.4584%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="87.2888%" y="629" width="0.3218%" height="15" fill="rgb(236,170,30)" fg:x="1085" fg:w="4"/><text x="87.5388%" y="639.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="87.2888%" y="613" width="0.3218%" height="15" fill="rgb(209,198,51)" fg:x="1085" fg:w="4"/><text x="87.5388%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.6106%" y="677" width="0.0805%" height="15" fill="rgb(205,171,26)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6106%" y="661" width="0.0805%" height="15" fill="rgb(246,41,49)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.6911%" y="645" width="0.0805%" height="15" fill="rgb(240,229,12)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="87.6106%" y="725" width="0.2414%" height="15" fill="rgb(212,8,54)" fg:x="1089" fg:w="3"/><text x="87.8606%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="87.6106%" y="709" width="0.2414%" height="15" fill="rgb(230,114,13)" fg:x="1089" fg:w="3"/><text x="87.8606%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="87.6106%" y="693" width="0.2414%" height="15" fill="rgb(229,130,28)" fg:x="1089" fg:w="3"/><text x="87.8606%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.6911%" y="677" width="0.1609%" height="15" fill="rgb(206,139,15)" fg:x="1090" fg:w="2"/><text x="87.9411%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.6911%" y="661" width="0.1609%" height="15" fill="rgb(241,188,35)" fg:x="1090" fg:w="2"/><text x="87.9411%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7715%" y="645" width="0.0805%" height="15" fill="rgb(208,224,26)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7715%" y="629" width="0.0805%" height="15" fill="rgb(251,131,28)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7715%" y="613" width="0.0805%" height="15" fill="rgb(208,153,1)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.7715%" y="597" width="0.0805%" height="15" fill="rgb(234,33,36)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.9324%" y="645" width="0.1609%" height="15" fill="rgb(246,42,29)" fg:x="1093" fg:w="2"/><text x="88.1824%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.0933%" y="629" width="0.0805%" height="15" fill="rgb(251,114,16)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="87.9324%" y="693" width="0.4023%" height="15" fill="rgb(233,13,38)" fg:x="1093" fg:w="5"/><text x="88.1824%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="87.9324%" y="677" width="0.4023%" height="15" fill="rgb(247,120,19)" fg:x="1093" fg:w="5"/><text x="88.1824%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="87.9324%" y="661" width="0.4023%" height="15" fill="rgb(205,11,16)" fg:x="1093" fg:w="5"/><text x="88.1824%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.0933%" y="645" width="0.2414%" height="15" fill="rgb(228,185,19)" fg:x="1095" fg:w="3"/><text x="88.3433%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.1738%" y="629" width="0.1609%" height="15" fill="rgb(239,88,52)" fg:x="1096" fg:w="2"/><text x="88.4238%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.1738%" y="613" width="0.1609%" height="15" fill="rgb(219,23,1)" fg:x="1096" fg:w="2"/><text x="88.4238%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.1738%" y="597" width="0.1609%" height="15" fill="rgb(253,177,16)" fg:x="1096" fg:w="2"/><text x="88.4238%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.1738%" y="581" width="0.1609%" height="15" fill="rgb(225,150,40)" fg:x="1096" fg:w="2"/><text x="88.4238%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="88.1738%" y="565" width="0.1609%" height="15" fill="rgb(208,108,30)" fg:x="1096" fg:w="2"/><text x="88.4238%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="88.3347%" y="677" width="0.0805%" height="15" fill="rgb(214,122,4)" fg:x="1098" fg:w="1"/><text x="88.5847%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="88.3347%" y="661" width="0.0805%" height="15" fill="rgb(229,74,37)" fg:x="1098" fg:w="1"/><text x="88.5847%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.3347%" y="645" width="0.0805%" height="15" fill="rgb(233,61,41)" fg:x="1098" fg:w="1"/><text x="88.5847%" y="655.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (7 samples, 0.56%)</title><rect x="87.9324%" y="709" width="0.5632%" height="15" fill="rgb(238,191,5)" fg:x="1093" fg:w="7"/><text x="88.1824%" y="719.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="88.3347%" y="693" width="0.1609%" height="15" fill="rgb(233,78,24)" fg:x="1098" fg:w="2"/><text x="88.5847%" y="703.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="88.4151%" y="677" width="0.0805%" height="15" fill="rgb(211,142,8)" fg:x="1099" fg:w="1"/><text x="88.6651%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4151%" y="661" width="0.0805%" height="15" fill="rgb(253,38,53)" fg:x="1099" fg:w="1"/><text x="88.6651%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.6565%" y="677" width="0.1609%" height="15" fill="rgb(234,63,51)" fg:x="1102" fg:w="2"/><text x="88.9065%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="88.8174%" y="677" width="0.0805%" height="15" fill="rgb(205,23,31)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="88.8978%" y="677" width="0.2414%" height="15" fill="rgb(210,184,50)" fg:x="1105" fg:w="3"/><text x="89.1478%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0587%" y="661" width="0.0805%" height="15" fill="rgb(222,112,26)" fg:x="1107" fg:w="1"/><text x="89.3087%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.0587%" y="645" width="0.0805%" height="15" fill="rgb(250,98,18)" fg:x="1107" fg:w="1"/><text x="89.3087%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="89.1392%" y="677" width="0.1609%" height="15" fill="rgb(250,34,12)" fg:x="1108" fg:w="2"/><text x="89.3892%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.1392%" y="661" width="0.1609%" height="15" fill="rgb(236,141,30)" fg:x="1108" fg:w="2"/><text x="89.3892%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2196%" y="645" width="0.0805%" height="15" fill="rgb(246,134,38)" fg:x="1109" fg:w="1"/><text x="89.4696%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="89.3001%" y="613" width="0.0805%" height="15" fill="rgb(240,114,4)" fg:x="1110" fg:w="1"/><text x="89.5501%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.3805%" y="581" width="0.0805%" height="15" fill="rgb(243,113,39)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="89.3001%" y="629" width="0.2414%" height="15" fill="rgb(239,215,4)" fg:x="1110" fg:w="3"/><text x="89.5501%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="89.3805%" y="613" width="0.1609%" height="15" fill="rgb(236,229,45)" fg:x="1111" fg:w="2"/><text x="89.6305%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="89.3805%" y="597" width="0.1609%" height="15" fill="rgb(242,2,6)" fg:x="1111" fg:w="2"/><text x="89.6305%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="89.4610%" y="581" width="0.0805%" height="15" fill="rgb(239,108,21)" fg:x="1112" fg:w="1"/><text x="89.7110%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4610%" y="565" width="0.0805%" height="15" fill="rgb(215,168,34)" fg:x="1112" fg:w="1"/><text x="89.7110%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.7023%" y="597" width="0.1609%" height="15" fill="rgb(238,31,17)" fg:x="1115" fg:w="2"/><text x="89.9523%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7828%" y="581" width="0.0805%" height="15" fill="rgb(220,133,11)" fg:x="1116" fg:w="1"/><text x="90.0328%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7828%" y="565" width="0.0805%" height="15" fill="rgb(212,158,23)" fg:x="1116" fg:w="1"/><text x="90.0328%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.8632%" y="549" width="0.0805%" height="15" fill="rgb(223,172,7)" fg:x="1117" fg:w="1"/><text x="90.1132%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="89.3001%" y="645" width="0.7241%" height="15" fill="rgb(244,3,52)" fg:x="1110" fg:w="9"/><text x="89.5501%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="89.5414%" y="629" width="0.4827%" height="15" fill="rgb(207,69,27)" fg:x="1113" fg:w="6"/><text x="89.7914%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="89.7023%" y="613" width="0.3218%" height="15" fill="rgb(213,136,45)" fg:x="1115" fg:w="4"/><text x="89.9523%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="89.8632%" y="597" width="0.1609%" height="15" fill="rgb(218,79,17)" fg:x="1117" fg:w="2"/><text x="90.1132%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="89.8632%" y="581" width="0.1609%" height="15" fill="rgb(216,106,36)" fg:x="1117" fg:w="2"/><text x="90.1132%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="89.8632%" y="565" width="0.1609%" height="15" fill="rgb(251,27,45)" fg:x="1117" fg:w="2"/><text x="90.1132%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9437%" y="549" width="0.0805%" height="15" fill="rgb(232,21,34)" fg:x="1118" fg:w="1"/><text x="90.1937%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.61%)</title><rect x="88.4956%" y="709" width="1.6090%" height="15" fill="rgb(249,191,16)" fg:x="1100" fg:w="20"/><text x="88.7456%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.61%)</title><rect x="88.4956%" y="693" width="1.6090%" height="15" fill="rgb(224,88,20)" fg:x="1100" fg:w="20"/><text x="88.7456%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="89.3001%" y="677" width="0.8045%" height="15" fill="rgb(237,93,27)" fg:x="1110" fg:w="10"/><text x="89.5501%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="89.3001%" y="661" width="0.8045%" height="15" fill="rgb(226,198,48)" fg:x="1110" fg:w="10"/><text x="89.5501%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="90.0241%" y="645" width="0.0805%" height="15" fill="rgb(207,162,53)" fg:x="1119" fg:w="1"/><text x="90.2741%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.0241%" y="629" width="0.0805%" height="15" fill="rgb(207,169,9)" fg:x="1119" fg:w="1"/><text x="90.2741%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.2655%" y="565" width="0.0805%" height="15" fill="rgb(224,166,46)" fg:x="1122" fg:w="1"/><text x="90.5155%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.2655%" y="549" width="0.0805%" height="15" fill="rgb(233,26,6)" fg:x="1122" fg:w="1"/><text x="90.5155%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.2655%" y="533" width="0.0805%" height="15" fill="rgb(218,106,45)" fg:x="1122" fg:w="1"/><text x="90.5155%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.3459%" y="549" width="0.1609%" height="15" fill="rgb(240,217,4)" fg:x="1123" fg:w="2"/><text x="90.5959%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.3459%" y="533" width="0.1609%" height="15" fill="rgb(246,171,10)" fg:x="1123" fg:w="2"/><text x="90.5959%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.3459%" y="517" width="0.1609%" height="15" fill="rgb(223,197,30)" fg:x="1123" fg:w="2"/><text x="90.5959%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.3459%" y="501" width="0.1609%" height="15" fill="rgb(207,92,16)" fg:x="1123" fg:w="2"/><text x="90.5959%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4264%" y="485" width="0.0805%" height="15" fill="rgb(211,6,44)" fg:x="1124" fg:w="1"/><text x="90.6764%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4264%" y="469" width="0.0805%" height="15" fill="rgb(219,139,2)" fg:x="1124" fg:w="1"/><text x="90.6764%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.4264%" y="453" width="0.0805%" height="15" fill="rgb(224,103,21)" fg:x="1124" fg:w="1"/><text x="90.6764%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="90.2655%" y="581" width="0.3218%" height="15" fill="rgb(254,110,48)" fg:x="1122" fg:w="4"/><text x="90.5155%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.3459%" y="565" width="0.2414%" height="15" fill="rgb(212,88,19)" fg:x="1123" fg:w="3"/><text x="90.5959%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.5068%" y="549" width="0.0805%" height="15" fill="rgb(248,103,6)" fg:x="1125" fg:w="1"/><text x="90.7568%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.5068%" y="533" width="0.0805%" height="15" fill="rgb(214,53,46)" fg:x="1125" fg:w="1"/><text x="90.7568%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="90.2655%" y="613" width="0.4023%" height="15" fill="rgb(236,190,24)" fg:x="1122" fg:w="5"/><text x="90.5155%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="90.2655%" y="597" width="0.4023%" height="15" fill="rgb(254,58,28)" fg:x="1122" fg:w="5"/><text x="90.5155%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.5873%" y="581" width="0.0805%" height="15" fill="rgb(243,63,27)" fg:x="1126" fg:w="1"/><text x="90.8373%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.5873%" y="565" width="0.0805%" height="15" fill="rgb(206,81,20)" fg:x="1126" fg:w="1"/><text x="90.8373%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.7482%" y="597" width="0.0805%" height="15" fill="rgb(252,69,51)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="90.1046%" y="645" width="0.8045%" height="15" fill="rgb(222,213,4)" fg:x="1120" fg:w="10"/><text x="90.3546%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="90.2655%" y="629" width="0.6436%" height="15" fill="rgb(226,198,12)" fg:x="1122" fg:w="8"/><text x="90.5155%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="90.6677%" y="613" width="0.2414%" height="15" fill="rgb(248,115,11)" fg:x="1127" fg:w="3"/><text x="90.9177%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8286%" y="597" width="0.0805%" height="15" fill="rgb(221,148,54)" fg:x="1129" fg:w="1"/><text x="91.0786%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.9091%" y="645" width="0.0805%" height="15" fill="rgb(214,209,51)" fg:x="1130" fg:w="1"/><text x="91.1591%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.9091%" y="629" width="0.0805%" height="15" fill="rgb(249,116,53)" fg:x="1130" fg:w="1"/><text x="91.1591%" y="639.50"></text></g><g><title>engine::session::Session::close (78 samples, 6.28%)</title><rect x="84.7949%" y="805" width="6.2751%" height="15" fill="rgb(248,170,1)" fg:x="1054" fg:w="78"/><text x="85.0449%" y="815.50">engine::..</text></g><g><title>engine::session::state::State::close (78 samples, 6.28%)</title><rect x="84.7949%" y="789" width="6.2751%" height="15" fill="rgb(244,105,10)" fg:x="1054" fg:w="78"/><text x="85.0449%" y="799.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (78 samples, 6.28%)</title><rect x="84.7949%" y="773" width="6.2751%" height="15" fill="rgb(229,100,5)" fg:x="1054" fg:w="78"/><text x="85.0449%" y="783.50">engine::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (78 samples, 6.28%)</title><rect x="84.7949%" y="757" width="6.2751%" height="15" fill="rgb(233,221,39)" fg:x="1054" fg:w="78"/><text x="85.0449%" y="767.50">engine::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (77 samples, 6.19%)</title><rect x="84.8753%" y="741" width="6.1947%" height="15" fill="rgb(233,88,21)" fg:x="1055" fg:w="77"/><text x="85.1253%" y="751.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (40 samples, 3.22%)</title><rect x="87.8520%" y="725" width="3.2180%" height="15" fill="rgb(206,13,0)" fg:x="1092" fg:w="40"/><text x="88.1020%" y="735.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.97%)</title><rect x="90.1046%" y="709" width="0.9654%" height="15" fill="rgb(242,15,35)" fg:x="1120" fg:w="12"/><text x="90.3546%" y="719.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.97%)</title><rect x="90.1046%" y="693" width="0.9654%" height="15" fill="rgb(247,142,41)" fg:x="1120" fg:w="12"/><text x="90.3546%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.97%)</title><rect x="90.1046%" y="677" width="0.9654%" height="15" fill="rgb(245,51,29)" fg:x="1120" fg:w="12"/><text x="90.3546%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="90.1046%" y="661" width="0.9654%" height="15" fill="rgb(228,209,43)" fg:x="1120" fg:w="12"/><text x="90.3546%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.9895%" y="645" width="0.0805%" height="15" fill="rgb(233,185,9)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.9895%" y="629" width="0.0805%" height="15" fill="rgb(226,93,0)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.9895%" y="613" width="0.0805%" height="15" fill="rgb(245,194,43)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1504%" y="709" width="0.0805%" height="15" fill="rgb(211,145,34)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1504%" y="693" width="0.0805%" height="15" fill="rgb(231,228,28)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1504%" y="677" width="0.0805%" height="15" fill="rgb(236,149,4)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.1504%" y="661" width="0.0805%" height="15" fill="rgb(234,114,38)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.1504%" y="645" width="0.0805%" height="15" fill="rgb(246,132,51)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.1504%" y="629" width="0.0805%" height="15" fill="rgb(251,137,22)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1504%" y="613" width="0.0805%" height="15" fill="rgb(243,59,52)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1504%" y="597" width="0.0805%" height="15" fill="rgb(239,56,28)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.1504%" y="581" width="0.0805%" height="15" fill="rgb(218,168,27)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.1504%" y="565" width="0.0805%" height="15" fill="rgb(232,165,11)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.1504%" y="549" width="0.0805%" height="15" fill="rgb(253,55,41)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.1504%" y="533" width="0.0805%" height="15" fill="rgb(233,206,24)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.3113%" y="517" width="0.0805%" height="15" fill="rgb(220,199,8)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.3113%" y="501" width="0.0805%" height="15" fill="rgb(254,65,26)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4722%" y="485" width="0.0805%" height="15" fill="rgb(253,102,23)" fg:x="1137" fg:w="1"/><text x="91.7222%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4722%" y="469" width="0.0805%" height="15" fill="rgb(231,103,35)" fg:x="1137" fg:w="1"/><text x="91.7222%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4722%" y="453" width="0.0805%" height="15" fill="rgb(238,26,10)" fg:x="1137" fg:w="1"/><text x="91.7222%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.6331%" y="469" width="0.1609%" height="15" fill="rgb(234,191,34)" fg:x="1139" fg:w="2"/><text x="91.8831%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.6331%" y="453" width="0.1609%" height="15" fill="rgb(206,210,9)" fg:x="1139" fg:w="2"/><text x="91.8831%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.6331%" y="437" width="0.1609%" height="15" fill="rgb(219,155,3)" fg:x="1139" fg:w="2"/><text x="91.8831%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.6331%" y="421" width="0.1609%" height="15" fill="rgb(221,62,52)" fg:x="1139" fg:w="2"/><text x="91.8831%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.6331%" y="405" width="0.1609%" height="15" fill="rgb(215,197,36)" fg:x="1139" fg:w="2"/><text x="91.8831%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.7136%" y="389" width="0.0805%" height="15" fill="rgb(226,222,6)" fg:x="1140" fg:w="1"/><text x="91.9636%" y="399.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="91.3113%" y="597" width="0.6436%" height="15" fill="rgb(215,58,28)" fg:x="1135" fg:w="8"/><text x="91.5613%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="91.3113%" y="581" width="0.6436%" height="15" fill="rgb(212,148,2)" fg:x="1135" fg:w="8"/><text x="91.5613%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="91.3113%" y="565" width="0.6436%" height="15" fill="rgb(208,21,42)" fg:x="1135" fg:w="8"/><text x="91.5613%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="91.3113%" y="549" width="0.6436%" height="15" fill="rgb(209,107,26)" fg:x="1135" fg:w="8"/><text x="91.5613%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="91.3113%" y="533" width="0.6436%" height="15" fill="rgb(254,60,47)" fg:x="1135" fg:w="8"/><text x="91.5613%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="91.3918%" y="517" width="0.5632%" height="15" fill="rgb(207,226,45)" fg:x="1136" fg:w="7"/><text x="91.6418%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="91.4722%" y="501" width="0.4827%" height="15" fill="rgb(223,124,22)" fg:x="1137" fg:w="6"/><text x="91.7222%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="91.5527%" y="485" width="0.4023%" height="15" fill="rgb(240,162,13)" fg:x="1138" fg:w="5"/><text x="91.8027%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.7940%" y="469" width="0.1609%" height="15" fill="rgb(244,199,31)" fg:x="1141" fg:w="2"/><text x="92.0440%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8745%" y="453" width="0.0805%" height="15" fill="rgb(207,92,16)" fg:x="1142" fg:w="1"/><text x="92.1245%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.8745%" y="437" width="0.0805%" height="15" fill="rgb(215,31,19)" fg:x="1142" fg:w="1"/><text x="92.1245%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0354%" y="517" width="0.0805%" height="15" fill="rgb(245,118,14)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0354%" y="501" width="0.0805%" height="15" fill="rgb(248,12,46)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0354%" y="485" width="0.0805%" height="15" fill="rgb(209,119,0)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0354%" y="469" width="0.0805%" height="15" fill="rgb(254,51,44)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0354%" y="453" width="0.0805%" height="15" fill="rgb(253,182,35)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0354%" y="437" width="0.0805%" height="15" fill="rgb(205,198,39)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="92.0354%" y="421" width="0.0805%" height="15" fill="rgb(251,175,48)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0354%" y="405" width="0.0805%" height="15" fill="rgb(239,38,17)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0354%" y="389" width="0.0805%" height="15" fill="rgb(212,101,8)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0354%" y="373" width="0.0805%" height="15" fill="rgb(228,35,17)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1158%" y="437" width="0.0805%" height="15" fill="rgb(214,95,8)" fg:x="1145" fg:w="1"/><text x="92.3658%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (13 samples, 1.05%)</title><rect x="91.2309%" y="661" width="1.0459%" height="15" fill="rgb(210,176,35)" fg:x="1134" fg:w="13"/><text x="91.4809%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.97%)</title><rect x="91.3113%" y="645" width="0.9654%" height="15" fill="rgb(226,4,3)" fg:x="1135" fg:w="12"/><text x="91.5613%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.97%)</title><rect x="91.3113%" y="629" width="0.9654%" height="15" fill="rgb(232,133,14)" fg:x="1135" fg:w="12"/><text x="91.5613%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.97%)</title><rect x="91.3113%" y="613" width="0.9654%" height="15" fill="rgb(250,191,8)" fg:x="1135" fg:w="12"/><text x="91.5613%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="91.9549%" y="597" width="0.3218%" height="15" fill="rgb(213,12,45)" fg:x="1143" fg:w="4"/><text x="92.2049%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="91.9549%" y="581" width="0.3218%" height="15" fill="rgb(233,78,26)" fg:x="1143" fg:w="4"/><text x="92.2049%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="92.0354%" y="565" width="0.2414%" height="15" fill="rgb(245,222,11)" fg:x="1144" fg:w="3"/><text x="92.2854%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.0354%" y="549" width="0.2414%" height="15" fill="rgb(216,174,12)" fg:x="1144" fg:w="3"/><text x="92.2854%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="92.0354%" y="533" width="0.2414%" height="15" fill="rgb(213,15,9)" fg:x="1144" fg:w="3"/><text x="92.2854%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.1158%" y="517" width="0.1609%" height="15" fill="rgb(238,103,32)" fg:x="1145" fg:w="2"/><text x="92.3658%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.1158%" y="501" width="0.1609%" height="15" fill="rgb(245,85,15)" fg:x="1145" fg:w="2"/><text x="92.3658%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="92.1158%" y="485" width="0.1609%" height="15" fill="rgb(254,204,5)" fg:x="1145" fg:w="2"/><text x="92.3658%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="92.1158%" y="469" width="0.1609%" height="15" fill="rgb(231,178,15)" fg:x="1145" fg:w="2"/><text x="92.3658%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="92.1158%" y="453" width="0.1609%" height="15" fill="rgb(248,151,3)" fg:x="1145" fg:w="2"/><text x="92.3658%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.1963%" y="437" width="0.0805%" height="15" fill="rgb(250,139,13)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.1963%" y="421" width="0.0805%" height="15" fill="rgb(243,107,53)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="431.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.2767%" y="661" width="0.1609%" height="15" fill="rgb(232,81,15)" fg:x="1147" fg:w="2"/><text x="92.5267%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.3572%" y="645" width="0.0805%" height="15" fill="rgb(225,187,48)" fg:x="1148" fg:w="1"/><text x="92.6072%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.3572%" y="629" width="0.0805%" height="15" fill="rgb(205,116,12)" fg:x="1148" fg:w="1"/><text x="92.6072%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.3572%" y="613" width="0.0805%" height="15" fill="rgb(220,222,31)" fg:x="1148" fg:w="1"/><text x="92.6072%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.4377%" y="629" width="0.0805%" height="15" fill="rgb(233,187,49)" fg:x="1149" fg:w="1"/><text x="92.6877%" y="639.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (18 samples, 1.45%)</title><rect x="91.1504%" y="725" width="1.4481%" height="15" fill="rgb(211,168,53)" fg:x="1133" fg:w="18"/><text x="91.4004%" y="735.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (17 samples, 1.37%)</title><rect x="91.2309%" y="709" width="1.3677%" height="15" fill="rgb(206,160,16)" fg:x="1134" fg:w="17"/><text x="91.4809%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (17 samples, 1.37%)</title><rect x="91.2309%" y="693" width="1.3677%" height="15" fill="rgb(254,164,13)" fg:x="1134" fg:w="17"/><text x="91.4809%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (17 samples, 1.37%)</title><rect x="91.2309%" y="677" width="1.3677%" height="15" fill="rgb(229,45,30)" fg:x="1134" fg:w="17"/><text x="91.4809%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.4377%" y="661" width="0.1609%" height="15" fill="rgb(237,32,10)" fg:x="1149" fg:w="2"/><text x="92.6877%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.4377%" y="645" width="0.1609%" height="15" fill="rgb(251,20,47)" fg:x="1149" fg:w="2"/><text x="92.6877%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.5181%" y="629" width="0.0805%" height="15" fill="rgb(251,116,12)" fg:x="1150" fg:w="1"/><text x="92.7681%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="92.7595%" y="581" width="0.0805%" height="15" fill="rgb(214,227,27)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.7595%" y="565" width="0.0805%" height="15" fill="rgb(248,10,53)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.7595%" y="549" width="0.0805%" height="15" fill="rgb(221,176,25)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="559.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="92.8399%" y="581" width="0.0805%" height="15" fill="rgb(205,70,46)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.8399%" y="565" width="0.0805%" height="15" fill="rgb(217,45,38)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.8399%" y="549" width="0.0805%" height="15" fill="rgb(243,6,54)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.8399%" y="533" width="0.0805%" height="15" fill="rgb(242,76,23)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.8399%" y="517" width="0.0805%" height="15" fill="rgb(239,166,0)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.8399%" y="501" width="0.0805%" height="15" fill="rgb(238,174,32)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.8399%" y="485" width="0.0805%" height="15" fill="rgb(238,124,44)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.8399%" y="469" width="0.0805%" height="15" fill="rgb(206,185,9)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.8399%" y="453" width="0.0805%" height="15" fill="rgb(215,157,17)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.8399%" y="437" width="0.0805%" height="15" fill="rgb(251,17,29)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.8399%" y="421" width="0.0805%" height="15" fill="rgb(227,113,27)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.8399%" y="405" width="0.0805%" height="15" fill="rgb(217,226,24)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.8399%" y="389" width="0.0805%" height="15" fill="rgb(251,99,38)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.8399%" y="373" width="0.0805%" height="15" fill="rgb(231,147,19)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="92.9204%" y="549" width="0.0805%" height="15" fill="rgb(230,86,8)" fg:x="1155" fg:w="1"/><text x="93.1704%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.9204%" y="533" width="0.0805%" height="15" fill="rgb(237,159,39)" fg:x="1155" fg:w="1"/><text x="93.1704%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.9204%" y="517" width="0.0805%" height="15" fill="rgb(247,179,47)" fg:x="1155" fg:w="1"/><text x="93.1704%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.9204%" y="501" width="0.0805%" height="15" fill="rgb(253,152,26)" fg:x="1155" fg:w="1"/><text x="93.1704%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="92.9204%" y="485" width="0.0805%" height="15" fill="rgb(222,211,15)" fg:x="1155" fg:w="1"/><text x="93.1704%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.0813%" y="437" width="0.0805%" height="15" fill="rgb(236,193,6)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.0813%" y="453" width="0.1609%" height="15" fill="rgb(226,206,10)" fg:x="1157" fg:w="2"/><text x="93.3313%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.1617%" y="437" width="0.0805%" height="15" fill="rgb(213,125,22)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.1617%" y="421" width="0.0805%" height="15" fill="rgb(221,66,28)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.1617%" y="405" width="0.0805%" height="15" fill="rgb(222,84,53)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.1617%" y="389" width="0.0805%" height="15" fill="rgb(243,50,15)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.1617%" y="373" width="0.0805%" height="15" fill="rgb(208,184,23)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.1617%" y="357" width="0.0805%" height="15" fill="rgb(221,83,2)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.1617%" y="341" width="0.0805%" height="15" fill="rgb(236,53,24)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.1617%" y="325" width="0.0805%" height="15" fill="rgb(244,171,29)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.1617%" y="309" width="0.0805%" height="15" fill="rgb(205,19,11)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.1617%" y="293" width="0.0805%" height="15" fill="rgb(207,108,29)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.1617%" y="277" width="0.0805%" height="15" fill="rgb(236,215,43)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1617%" y="261" width="0.0805%" height="15" fill="rgb(213,58,35)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.0813%" y="485" width="0.2414%" height="15" fill="rgb(220,211,46)" fg:x="1157" fg:w="3"/><text x="93.3313%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.0813%" y="469" width="0.2414%" height="15" fill="rgb(212,134,16)" fg:x="1157" fg:w="3"/><text x="93.3313%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2422%" y="453" width="0.0805%" height="15" fill="rgb(232,90,44)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2422%" y="437" width="0.0805%" height="15" fill="rgb(212,18,36)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.2422%" y="421" width="0.0805%" height="15" fill="rgb(206,112,24)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.2422%" y="405" width="0.0805%" height="15" fill="rgb(238,223,40)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.2422%" y="389" width="0.0805%" height="15" fill="rgb(226,169,20)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.2422%" y="373" width="0.0805%" height="15" fill="rgb(241,64,52)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.2422%" y="357" width="0.0805%" height="15" fill="rgb(228,120,25)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.2422%" y="341" width="0.0805%" height="15" fill="rgb(234,108,19)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.2422%" y="325" width="0.0805%" height="15" fill="rgb(236,133,29)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.2422%" y="309" width="0.0805%" height="15" fill="rgb(246,174,53)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.2422%" y="293" width="0.0805%" height="15" fill="rgb(210,105,35)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.2422%" y="277" width="0.0805%" height="15" fill="rgb(225,27,26)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="93.0813%" y="501" width="0.4023%" height="15" fill="rgb(233,2,39)" fg:x="1157" fg:w="5"/><text x="93.3313%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="93.3226%" y="485" width="0.1609%" height="15" fill="rgb(219,164,26)" fg:x="1160" fg:w="2"/><text x="93.5726%" y="495.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="93.4835%" y="501" width="0.0805%" height="15" fill="rgb(236,211,5)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.6444%" y="405" width="0.0805%" height="15" fill="rgb(244,227,23)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.6444%" y="389" width="0.0805%" height="15" fill="rgb(230,184,8)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7249%" y="405" width="0.0805%" height="15" fill="rgb(217,125,48)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.7249%" y="389" width="0.0805%" height="15" fill="rgb(223,192,47)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (12 samples, 0.97%)</title><rect x="93.0008%" y="549" width="0.9654%" height="15" fill="rgb(226,119,10)" fg:x="1156" fg:w="12"/><text x="93.2508%" y="559.50"></text></g><g><title>kernel::model::props::load_props (12 samples, 0.97%)</title><rect x="93.0008%" y="533" width="0.9654%" height="15" fill="rgb(221,49,29)" fg:x="1156" fg:w="12"/><text x="93.2508%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.97%)</title><rect x="93.0008%" y="517" width="0.9654%" height="15" fill="rgb(217,205,19)" fg:x="1156" fg:w="12"/><text x="93.2508%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="93.5640%" y="501" width="0.4023%" height="15" fill="rgb(242,104,7)" fg:x="1163" fg:w="5"/><text x="93.8140%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="93.5640%" y="485" width="0.4023%" height="15" fill="rgb(209,154,48)" fg:x="1163" fg:w="5"/><text x="93.8140%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="93.6444%" y="469" width="0.3218%" height="15" fill="rgb(219,213,46)" fg:x="1164" fg:w="4"/><text x="93.8944%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="93.6444%" y="453" width="0.3218%" height="15" fill="rgb(229,105,38)" fg:x="1164" fg:w="4"/><text x="93.8944%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="93.6444%" y="437" width="0.3218%" height="15" fill="rgb(205,151,5)" fg:x="1164" fg:w="4"/><text x="93.8944%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="93.6444%" y="421" width="0.3218%" height="15" fill="rgb(248,115,40)" fg:x="1164" fg:w="4"/><text x="93.8944%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.8053%" y="405" width="0.1609%" height="15" fill="rgb(206,179,2)" fg:x="1166" fg:w="2"/><text x="94.0553%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.8053%" y="389" width="0.1609%" height="15" fill="rgb(230,103,24)" fg:x="1166" fg:w="2"/><text x="94.0553%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8858%" y="373" width="0.0805%" height="15" fill="rgb(218,152,4)" fg:x="1167" fg:w="1"/><text x="94.1358%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8858%" y="357" width="0.0805%" height="15" fill="rgb(236,161,54)" fg:x="1167" fg:w="1"/><text x="94.1358%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.8858%" y="341" width="0.0805%" height="15" fill="rgb(226,65,17)" fg:x="1167" fg:w="1"/><text x="94.1358%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.8858%" y="325" width="0.0805%" height="15" fill="rgb(221,134,44)" fg:x="1167" fg:w="1"/><text x="94.1358%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="93.9662%" y="533" width="0.1609%" height="15" fill="rgb(251,129,4)" fg:x="1168" fg:w="2"/><text x="94.2162%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.0467%" y="517" width="0.0805%" height="15" fill="rgb(244,32,34)" fg:x="1169" fg:w="1"/><text x="94.2967%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2880%" y="437" width="0.0805%" height="15" fill="rgb(251,224,37)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.2880%" y="421" width="0.0805%" height="15" fill="rgb(248,117,31)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.2880%" y="405" width="0.0805%" height="15" fill="rgb(222,208,37)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.2880%" y="389" width="0.0805%" height="15" fill="rgb(234,211,25)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.2880%" y="373" width="0.0805%" height="15" fill="rgb(211,72,6)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.2880%" y="357" width="0.0805%" height="15" fill="rgb(249,198,38)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.2880%" y="341" width="0.0805%" height="15" fill="rgb(221,86,51)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.2880%" y="325" width="0.0805%" height="15" fill="rgb(226,178,43)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.2880%" y="309" width="0.0805%" height="15" fill="rgb(215,145,7)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.2880%" y="293" width="0.0805%" height="15" fill="rgb(250,202,36)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.2880%" y="277" width="0.0805%" height="15" fill="rgb(215,86,13)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.2880%" y="261" width="0.0805%" height="15" fill="rgb(221,134,12)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2880%" y="245" width="0.0805%" height="15" fill="rgb(213,82,10)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.3685%" y="437" width="0.0805%" height="15" fill="rgb(214,142,0)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.3685%" y="421" width="0.0805%" height="15" fill="rgb(205,145,9)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.3685%" y="405" width="0.0805%" height="15" fill="rgb(244,214,8)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.3685%" y="389" width="0.0805%" height="15" fill="rgb(224,72,51)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.3685%" y="373" width="0.0805%" height="15" fill="rgb(233,137,37)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.3685%" y="357" width="0.0805%" height="15" fill="rgb(208,71,28)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.3685%" y="341" width="0.0805%" height="15" fill="rgb(226,31,7)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.3685%" y="325" width="0.0805%" height="15" fill="rgb(229,62,18)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.3685%" y="309" width="0.0805%" height="15" fill="rgb(226,74,28)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.3685%" y="293" width="0.0805%" height="15" fill="rgb(214,170,18)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.3685%" y="277" width="0.0805%" height="15" fill="rgb(227,229,35)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3685%" y="261" width="0.0805%" height="15" fill="rgb(225,181,39)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="94.2880%" y="501" width="0.2414%" height="15" fill="rgb(253,124,44)" fg:x="1172" fg:w="3"/><text x="94.5380%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="94.2880%" y="485" width="0.2414%" height="15" fill="rgb(220,75,18)" fg:x="1172" fg:w="3"/><text x="94.5380%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="94.2880%" y="469" width="0.2414%" height="15" fill="rgb(239,175,43)" fg:x="1172" fg:w="3"/><text x="94.5380%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="94.2880%" y="453" width="0.2414%" height="15" fill="rgb(228,112,50)" fg:x="1172" fg:w="3"/><text x="94.5380%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="94.4489%" y="437" width="0.0805%" height="15" fill="rgb(232,105,36)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="94.4489%" y="421" width="0.0805%" height="15" fill="rgb(227,137,47)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5294%" y="437" width="0.0805%" height="15" fill="rgb(217,51,9)" fg:x="1175" fg:w="1"/><text x="94.7794%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="94.5294%" y="501" width="0.1609%" height="15" fill="rgb(245,117,0)" fg:x="1175" fg:w="2"/><text x="94.7794%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="94.5294%" y="485" width="0.1609%" height="15" fill="rgb(252,52,30)" fg:x="1175" fg:w="2"/><text x="94.7794%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="94.5294%" y="469" width="0.1609%" height="15" fill="rgb(227,85,33)" fg:x="1175" fg:w="2"/><text x="94.7794%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="94.5294%" y="453" width="0.1609%" height="15" fill="rgb(220,157,20)" fg:x="1175" fg:w="2"/><text x="94.7794%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.6098%" y="437" width="0.0805%" height="15" fill="rgb(254,14,34)" fg:x="1176" fg:w="1"/><text x="94.8598%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.6098%" y="421" width="0.0805%" height="15" fill="rgb(216,103,41)" fg:x="1176" fg:w="1"/><text x="94.8598%" y="431.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (25 samples, 2.01%)</title><rect x="92.9204%" y="565" width="2.0113%" height="15" fill="rgb(245,221,9)" fg:x="1155" fg:w="25"/><text x="93.1704%" y="575.50">&lt;..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (12 samples, 0.97%)</title><rect x="93.9662%" y="549" width="0.9654%" height="15" fill="rgb(254,136,47)" fg:x="1168" fg:w="12"/><text x="94.2162%" y="559.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="94.1271%" y="533" width="0.8045%" height="15" fill="rgb(235,71,46)" fg:x="1170" fg:w="10"/><text x="94.3771%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="94.2076%" y="517" width="0.7241%" height="15" fill="rgb(242,154,29)" fg:x="1171" fg:w="9"/><text x="94.4576%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="94.6903%" y="501" width="0.2414%" height="15" fill="rgb(210,65,31)" fg:x="1177" fg:w="3"/><text x="94.9403%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.6903%" y="485" width="0.2414%" height="15" fill="rgb(244,9,50)" fg:x="1177" fg:w="3"/><text x="94.9403%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.8512%" y="469" width="0.0805%" height="15" fill="rgb(215,141,38)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.8512%" y="453" width="0.0805%" height="15" fill="rgb(241,129,6)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.8512%" y="437" width="0.0805%" height="15" fill="rgb(253,169,4)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.8512%" y="421" width="0.0805%" height="15" fill="rgb(237,82,36)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.8512%" y="405" width="0.0805%" height="15" fill="rgb(209,171,11)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.8512%" y="389" width="0.0805%" height="15" fill="rgb(242,19,22)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.8512%" y="373" width="0.0805%" height="15" fill="rgb(251,122,24)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.8512%" y="357" width="0.0805%" height="15" fill="rgb(226,166,42)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.8512%" y="341" width="0.0805%" height="15" fill="rgb(244,101,48)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.8512%" y="325" width="0.0805%" height="15" fill="rgb(227,125,1)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="94.9316%" y="565" width="0.2414%" height="15" fill="rgb(206,79,43)" fg:x="1180" fg:w="3"/><text x="95.1816%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="94.9316%" y="549" width="0.2414%" height="15" fill="rgb(241,109,41)" fg:x="1180" fg:w="3"/><text x="95.1816%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="94.9316%" y="533" width="0.2414%" height="15" fill="rgb(219,73,4)" fg:x="1180" fg:w="3"/><text x="95.1816%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="94.9316%" y="517" width="0.2414%" height="15" fill="rgb(239,25,41)" fg:x="1180" fg:w="3"/><text x="95.1816%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="94.9316%" y="501" width="0.2414%" height="15" fill="rgb(208,88,46)" fg:x="1180" fg:w="3"/><text x="95.1816%" y="511.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="94.9316%" y="485" width="0.2414%" height="15" fill="rgb(239,184,9)" fg:x="1180" fg:w="3"/><text x="95.1816%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="94.9316%" y="469" width="0.2414%" height="15" fill="rgb(223,114,13)" fg:x="1180" fg:w="3"/><text x="95.1816%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="94.9316%" y="453" width="0.2414%" height="15" fill="rgb(214,28,42)" fg:x="1180" fg:w="3"/><text x="95.1816%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="94.9316%" y="437" width="0.2414%" height="15" fill="rgb(252,32,44)" fg:x="1180" fg:w="3"/><text x="95.1816%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="95.0121%" y="421" width="0.1609%" height="15" fill="rgb(231,159,4)" fg:x="1181" fg:w="2"/><text x="95.2621%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="95.0121%" y="405" width="0.1609%" height="15" fill="rgb(210,35,26)" fg:x="1181" fg:w="2"/><text x="95.2621%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="95.0121%" y="389" width="0.1609%" height="15" fill="rgb(208,190,37)" fg:x="1181" fg:w="2"/><text x="95.2621%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="95.0121%" y="373" width="0.1609%" height="15" fill="rgb(226,148,22)" fg:x="1181" fg:w="2"/><text x="95.2621%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="95.0121%" y="357" width="0.1609%" height="15" fill="rgb(242,153,24)" fg:x="1181" fg:w="2"/><text x="95.2621%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.0925%" y="341" width="0.0805%" height="15" fill="rgb(213,133,7)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.0925%" y="325" width="0.0805%" height="15" fill="rgb(248,206,18)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="95.0925%" y="309" width="0.0805%" height="15" fill="rgb(233,157,4)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="95.0925%" y="293" width="0.0805%" height="15" fill="rgb(249,179,32)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="95.0925%" y="277" width="0.0805%" height="15" fill="rgb(248,69,35)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="95.0925%" y="261" width="0.0805%" height="15" fill="rgb(249,158,38)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.0925%" y="245" width="0.0805%" height="15" fill="rgb(223,18,43)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="95.1730%" y="565" width="0.0805%" height="15" fill="rgb(238,42,45)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.1730%" y="549" width="0.0805%" height="15" fill="rgb(219,65,47)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="559.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="95.1730%" y="533" width="0.0805%" height="15" fill="rgb(248,153,12)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="543.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="95.1730%" y="517" width="0.0805%" height="15" fill="rgb(240,118,4)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="95.2534%" y="565" width="0.0805%" height="15" fill="rgb(250,96,34)" fg:x="1184" fg:w="1"/><text x="95.5034%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="95.2534%" y="549" width="0.0805%" height="15" fill="rgb(221,15,4)" fg:x="1184" fg:w="1"/><text x="95.5034%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.2534%" y="533" width="0.0805%" height="15" fill="rgb(217,149,33)" fg:x="1184" fg:w="1"/><text x="95.5034%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3339%" y="533" width="0.0805%" height="15" fill="rgb(213,58,29)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.3339%" y="517" width="0.0805%" height="15" fill="rgb(236,218,9)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3339%" y="501" width="0.0805%" height="15" fill="rgb(248,40,19)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.3339%" y="485" width="0.0805%" height="15" fill="rgb(212,17,6)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3339%" y="469" width="0.0805%" height="15" fill="rgb(206,212,20)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3339%" y="453" width="0.0805%" height="15" fill="rgb(229,80,37)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.3339%" y="437" width="0.0805%" height="15" fill="rgb(253,8,37)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.3339%" y="421" width="0.0805%" height="15" fill="rgb(215,16,43)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.3339%" y="405" width="0.0805%" height="15" fill="rgb(236,219,16)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.3339%" y="389" width="0.0805%" height="15" fill="rgb(251,0,3)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.3339%" y="373" width="0.0805%" height="15" fill="rgb(207,133,37)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.4948%" y="421" width="0.0805%" height="15" fill="rgb(250,143,20)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="95.4948%" y="405" width="0.0805%" height="15" fill="rgb(242,19,50)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="95.4948%" y="389" width="0.0805%" height="15" fill="rgb(206,124,43)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.4948%" y="373" width="0.0805%" height="15" fill="rgb(229,4,38)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.6557%" y="325" width="0.0805%" height="15" fill="rgb(247,220,45)" fg:x="1189" fg:w="1"/><text x="95.9057%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6557%" y="309" width="0.0805%" height="15" fill="rgb(247,195,0)" fg:x="1189" fg:w="1"/><text x="95.9057%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7361%" y="293" width="0.0805%" height="15" fill="rgb(252,12,19)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7361%" y="277" width="0.0805%" height="15" fill="rgb(222,49,50)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8166%" y="261" width="0.0805%" height="15" fill="rgb(209,157,28)" fg:x="1191" fg:w="1"/><text x="96.0666%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8166%" y="245" width="0.0805%" height="15" fill="rgb(238,174,24)" fg:x="1191" fg:w="1"/><text x="96.0666%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8166%" y="229" width="0.0805%" height="15" fill="rgb(224,17,28)" fg:x="1191" fg:w="1"/><text x="96.0666%" y="239.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="95.5752%" y="405" width="0.4827%" height="15" fill="rgb(249,7,29)" fg:x="1188" fg:w="6"/><text x="95.8252%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="95.5752%" y="389" width="0.4827%" height="15" fill="rgb(243,178,4)" fg:x="1188" fg:w="6"/><text x="95.8252%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="95.5752%" y="373" width="0.4827%" height="15" fill="rgb(246,138,35)" fg:x="1188" fg:w="6"/><text x="95.8252%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="95.5752%" y="357" width="0.4827%" height="15" fill="rgb(251,85,18)" fg:x="1188" fg:w="6"/><text x="95.8252%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="95.5752%" y="341" width="0.4827%" height="15" fill="rgb(254,55,9)" fg:x="1188" fg:w="6"/><text x="95.8252%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.7361%" y="325" width="0.3218%" height="15" fill="rgb(248,4,50)" fg:x="1190" fg:w="4"/><text x="95.9861%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.7361%" y="309" width="0.3218%" height="15" fill="rgb(215,208,14)" fg:x="1190" fg:w="4"/><text x="95.9861%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="95.8166%" y="293" width="0.2414%" height="15" fill="rgb(218,37,18)" fg:x="1191" fg:w="3"/><text x="96.0666%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.8166%" y="277" width="0.2414%" height="15" fill="rgb(206,104,13)" fg:x="1191" fg:w="3"/><text x="96.0666%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.8970%" y="261" width="0.1609%" height="15" fill="rgb(248,94,22)" fg:x="1192" fg:w="2"/><text x="96.1470%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9775%" y="245" width="0.0805%" height="15" fill="rgb(235,42,46)" fg:x="1193" fg:w="1"/><text x="96.2275%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.9775%" y="229" width="0.0805%" height="15" fill="rgb(220,228,48)" fg:x="1193" fg:w="1"/><text x="96.2275%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9775%" y="213" width="0.0805%" height="15" fill="rgb(216,58,12)" fg:x="1193" fg:w="1"/><text x="96.2275%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.1384%" y="325" width="0.0805%" height="15" fill="rgb(223,97,52)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.1384%" y="309" width="0.0805%" height="15" fill="rgb(208,159,17)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.1384%" y="293" width="0.0805%" height="15" fill="rgb(215,172,9)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.1384%" y="277" width="0.0805%" height="15" fill="rgb(252,175,30)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.1384%" y="261" width="0.0805%" height="15" fill="rgb(209,159,10)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="271.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.2188%" y="277" width="0.0805%" height="15" fill="rgb(229,73,51)" fg:x="1196" fg:w="1"/><text x="96.4688%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="96.0579%" y="373" width="0.3218%" height="15" fill="rgb(208,212,43)" fg:x="1194" fg:w="4"/><text x="96.3079%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.0579%" y="357" width="0.3218%" height="15" fill="rgb(254,123,53)" fg:x="1194" fg:w="4"/><text x="96.3079%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="96.1384%" y="341" width="0.2414%" height="15" fill="rgb(254,128,49)" fg:x="1195" fg:w="3"/><text x="96.3884%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.2188%" y="325" width="0.1609%" height="15" fill="rgb(246,16,16)" fg:x="1196" fg:w="2"/><text x="96.4688%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.2188%" y="309" width="0.1609%" height="15" fill="rgb(209,200,1)" fg:x="1196" fg:w="2"/><text x="96.4688%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="96.2188%" y="293" width="0.1609%" height="15" fill="rgb(235,9,3)" fg:x="1196" fg:w="2"/><text x="96.4688%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2993%" y="277" width="0.0805%" height="15" fill="rgb(233,121,54)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.2993%" y="261" width="0.0805%" height="15" fill="rgb(236,80,25)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.2993%" y="245" width="0.0805%" height="15" fill="rgb(220,44,24)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2993%" y="229" width="0.0805%" height="15" fill="rgb(236,225,16)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.2993%" y="213" width="0.0805%" height="15" fill="rgb(237,140,0)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.2993%" y="197" width="0.0805%" height="15" fill="rgb(243,225,53)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2993%" y="181" width="0.0805%" height="15" fill="rgb(240,140,30)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.2993%" y="165" width="0.0805%" height="15" fill="rgb(217,51,16)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.2993%" y="149" width="0.0805%" height="15" fill="rgb(245,75,50)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (11 samples, 0.88%)</title><rect x="95.5752%" y="421" width="0.8850%" height="15" fill="rgb(208,174,22)" fg:x="1188" fg:w="11"/><text x="95.8252%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="96.0579%" y="405" width="0.4023%" height="15" fill="rgb(219,98,50)" fg:x="1194" fg:w="5"/><text x="96.3079%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="96.0579%" y="389" width="0.4023%" height="15" fill="rgb(243,138,3)" fg:x="1194" fg:w="5"/><text x="96.3079%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.3797%" y="373" width="0.0805%" height="15" fill="rgb(243,132,26)" fg:x="1198" fg:w="1"/><text x="96.6297%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3797%" y="357" width="0.0805%" height="15" fill="rgb(250,201,8)" fg:x="1198" fg:w="1"/><text x="96.6297%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.3797%" y="341" width="0.0805%" height="15" fill="rgb(213,91,26)" fg:x="1198" fg:w="1"/><text x="96.6297%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3797%" y="325" width="0.0805%" height="15" fill="rgb(229,117,1)" fg:x="1198" fg:w="1"/><text x="96.6297%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.4602%" y="421" width="0.0805%" height="15" fill="rgb(229,24,6)" fg:x="1199" fg:w="1"/><text x="96.7102%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.4602%" y="405" width="0.0805%" height="15" fill="rgb(206,69,11)" fg:x="1199" fg:w="1"/><text x="96.7102%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.4602%" y="389" width="0.0805%" height="15" fill="rgb(234,111,34)" fg:x="1199" fg:w="1"/><text x="96.7102%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4602%" y="373" width="0.0805%" height="15" fill="rgb(213,187,51)" fg:x="1199" fg:w="1"/><text x="96.7102%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4602%" y="357" width="0.0805%" height="15" fill="rgb(207,45,11)" fg:x="1199" fg:w="1"/><text x="96.7102%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4602%" y="341" width="0.0805%" height="15" fill="rgb(225,151,47)" fg:x="1199" fg:w="1"/><text x="96.7102%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4602%" y="325" width="0.0805%" height="15" fill="rgb(211,226,5)" fg:x="1199" fg:w="1"/><text x="96.7102%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.4602%" y="309" width="0.0805%" height="15" fill="rgb(214,83,52)" fg:x="1199" fg:w="1"/><text x="96.7102%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4602%" y="293" width="0.0805%" height="15" fill="rgb(229,49,53)" fg:x="1199" fg:w="1"/><text x="96.7102%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4602%" y="277" width="0.0805%" height="15" fill="rgb(246,8,28)" fg:x="1199" fg:w="1"/><text x="96.7102%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4602%" y="261" width="0.0805%" height="15" fill="rgb(207,28,41)" fg:x="1199" fg:w="1"/><text x="96.7102%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (15 samples, 1.21%)</title><rect x="95.4948%" y="453" width="1.2068%" height="15" fill="rgb(254,22,25)" fg:x="1187" fg:w="15"/><text x="95.7448%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (15 samples, 1.21%)</title><rect x="95.4948%" y="437" width="1.2068%" height="15" fill="rgb(209,120,42)" fg:x="1187" fg:w="15"/><text x="95.7448%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="96.5406%" y="421" width="0.1609%" height="15" fill="rgb(216,194,18)" fg:x="1200" fg:w="2"/><text x="96.7906%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.5406%" y="405" width="0.1609%" height="15" fill="rgb(213,70,17)" fg:x="1200" fg:w="2"/><text x="96.7906%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.5406%" y="389" width="0.1609%" height="15" fill="rgb(228,66,19)" fg:x="1200" fg:w="2"/><text x="96.7906%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="96.5406%" y="373" width="0.1609%" height="15" fill="rgb(236,221,54)" fg:x="1200" fg:w="2"/><text x="96.7906%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.5406%" y="357" width="0.1609%" height="15" fill="rgb(207,175,15)" fg:x="1200" fg:w="2"/><text x="96.7906%" y="367.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (17 samples, 1.37%)</title><rect x="95.4143%" y="533" width="1.3677%" height="15" fill="rgb(234,76,8)" fg:x="1186" fg:w="17"/><text x="95.6643%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (16 samples, 1.29%)</title><rect x="95.4948%" y="517" width="1.2872%" height="15" fill="rgb(243,106,0)" fg:x="1187" fg:w="16"/><text x="95.7448%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.29%)</title><rect x="95.4948%" y="501" width="1.2872%" height="15" fill="rgb(208,48,19)" fg:x="1187" fg:w="16"/><text x="95.7448%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 1.29%)</title><rect x="95.4948%" y="485" width="1.2872%" height="15" fill="rgb(251,50,29)" fg:x="1187" fg:w="16"/><text x="95.7448%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (16 samples, 1.29%)</title><rect x="95.4948%" y="469" width="1.2872%" height="15" fill="rgb(222,31,49)" fg:x="1187" fg:w="16"/><text x="95.7448%" y="479.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="96.7015%" y="453" width="0.0805%" height="15" fill="rgb(232,33,18)" fg:x="1202" fg:w="1"/><text x="96.9515%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7015%" y="437" width="0.0805%" height="15" fill="rgb(209,1,44)" fg:x="1202" fg:w="1"/><text x="96.9515%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7015%" y="421" width="0.0805%" height="15" fill="rgb(211,7,1)" fg:x="1202" fg:w="1"/><text x="96.9515%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.7015%" y="405" width="0.0805%" height="15" fill="rgb(224,111,27)" fg:x="1202" fg:w="1"/><text x="96.9515%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.7015%" y="389" width="0.0805%" height="15" fill="rgb(252,195,39)" fg:x="1202" fg:w="1"/><text x="96.9515%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.7015%" y="373" width="0.0805%" height="15" fill="rgb(237,198,5)" fg:x="1202" fg:w="1"/><text x="96.9515%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.7015%" y="357" width="0.0805%" height="15" fill="rgb(232,148,1)" fg:x="1202" fg:w="1"/><text x="96.9515%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.7015%" y="341" width="0.0805%" height="15" fill="rgb(249,41,3)" fg:x="1202" fg:w="1"/><text x="96.9515%" y="351.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="96.7820%" y="533" width="0.0805%" height="15" fill="rgb(215,14,33)" fg:x="1203" fg:w="1"/><text x="97.0320%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.7820%" y="517" width="0.0805%" height="15" fill="rgb(209,146,24)" fg:x="1203" fg:w="1"/><text x="97.0320%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="96.7820%" y="501" width="0.0805%" height="15" fill="rgb(219,51,47)" fg:x="1203" fg:w="1"/><text x="97.0320%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="96.7820%" y="485" width="0.0805%" height="15" fill="rgb(234,217,40)" fg:x="1203" fg:w="1"/><text x="97.0320%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="96.9429%" y="501" width="0.1609%" height="15" fill="rgb(228,34,26)" fg:x="1205" fg:w="2"/><text x="97.1929%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="96.9429%" y="485" width="0.1609%" height="15" fill="rgb(224,50,29)" fg:x="1205" fg:w="2"/><text x="97.1929%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="96.9429%" y="469" width="0.1609%" height="15" fill="rgb(205,79,51)" fg:x="1205" fg:w="2"/><text x="97.1929%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.9429%" y="453" width="0.1609%" height="15" fill="rgb(218,136,28)" fg:x="1205" fg:w="2"/><text x="97.1929%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0233%" y="437" width="0.0805%" height="15" fill="rgb(220,150,10)" fg:x="1206" fg:w="1"/><text x="97.2733%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.0233%" y="421" width="0.0805%" height="15" fill="rgb(242,158,47)" fg:x="1206" fg:w="1"/><text x="97.2733%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.0233%" y="405" width="0.0805%" height="15" fill="rgb(209,68,0)" fg:x="1206" fg:w="1"/><text x="97.2733%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1038%" y="469" width="0.0805%" height="15" fill="rgb(208,13,41)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (77 samples, 6.19%)</title><rect x="91.0700%" y="789" width="6.1947%" height="15" fill="rgb(226,201,7)" fg:x="1132" fg:w="77"/><text x="91.3200%" y="799.50">&lt;engine:..</text></g><g><title>kernel::plugins::mw::apply_middleware (77 samples, 6.19%)</title><rect x="91.0700%" y="773" width="6.1947%" height="15" fill="rgb(236,103,26)" fg:x="1132" fg:w="77"/><text x="91.3200%" y="783.50">kernel::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (77 samples, 6.19%)</title><rect x="91.0700%" y="757" width="6.1947%" height="15" fill="rgb(243,162,8)" fg:x="1132" fg:w="77"/><text x="91.3200%" y="767.50">kernel::..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (76 samples, 6.11%)</title><rect x="91.1504%" y="741" width="6.1142%" height="15" fill="rgb(237,225,11)" fg:x="1133" fg:w="76"/><text x="91.4004%" y="751.50">&lt;engine:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (58 samples, 4.67%)</title><rect x="92.5986%" y="725" width="4.6661%" height="15" fill="rgb(247,186,32)" fg:x="1151" fg:w="58"/><text x="92.8486%" y="735.50">kerne..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (58 samples, 4.67%)</title><rect x="92.5986%" y="709" width="4.6661%" height="15" fill="rgb(215,26,28)" fg:x="1151" fg:w="58"/><text x="92.8486%" y="719.50">&lt;plug..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (58 samples, 4.67%)</title><rect x="92.5986%" y="693" width="4.6661%" height="15" fill="rgb(208,121,6)" fg:x="1151" fg:w="58"/><text x="92.8486%" y="703.50">kerne..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (58 samples, 4.67%)</title><rect x="92.5986%" y="677" width="4.6661%" height="15" fill="rgb(225,91,3)" fg:x="1151" fg:w="58"/><text x="92.8486%" y="687.50">core:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (57 samples, 4.59%)</title><rect x="92.6790%" y="661" width="4.5857%" height="15" fill="rgb(246,119,36)" fg:x="1152" fg:w="57"/><text x="92.9290%" y="671.50">kerne..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (57 samples, 4.59%)</title><rect x="92.6790%" y="645" width="4.5857%" height="15" fill="rgb(254,173,2)" fg:x="1152" fg:w="57"/><text x="92.9290%" y="655.50">core:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (57 samples, 4.59%)</title><rect x="92.6790%" y="629" width="4.5857%" height="15" fill="rgb(209,87,54)" fg:x="1152" fg:w="57"/><text x="92.9290%" y="639.50">&lt;allo..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (57 samples, 4.59%)</title><rect x="92.6790%" y="613" width="4.5857%" height="15" fill="rgb(223,216,20)" fg:x="1152" fg:w="57"/><text x="92.9290%" y="623.50">&lt;engi..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (56 samples, 4.51%)</title><rect x="92.7595%" y="597" width="4.5052%" height="15" fill="rgb(220,31,8)" fg:x="1153" fg:w="56"/><text x="93.0095%" y="607.50">&lt;plug..</text></g><g><title>plugins_core::looking::model::new_area_observation (54 samples, 4.34%)</title><rect x="92.9204%" y="581" width="4.3443%" height="15" fill="rgb(220,185,15)" fg:x="1155" fg:w="54"/><text x="93.1704%" y="591.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (24 samples, 1.93%)</title><rect x="95.3339%" y="565" width="1.9308%" height="15" fill="rgb(247,190,50)" fg:x="1185" fg:w="24"/><text x="95.5839%" y="575.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (24 samples, 1.93%)</title><rect x="95.3339%" y="549" width="1.9308%" height="15" fill="rgb(239,173,47)" fg:x="1185" fg:w="24"/><text x="95.5839%" y="559.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="96.8624%" y="533" width="0.4023%" height="15" fill="rgb(218,190,42)" fg:x="1204" fg:w="5"/><text x="97.1124%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="96.8624%" y="517" width="0.4023%" height="15" fill="rgb(251,207,16)" fg:x="1204" fg:w="5"/><text x="97.1124%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.1038%" y="501" width="0.1609%" height="15" fill="rgb(222,199,47)" fg:x="1207" fg:w="2"/><text x="97.3538%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.1038%" y="485" width="0.1609%" height="15" fill="rgb(245,190,7)" fg:x="1207" fg:w="2"/><text x="97.3538%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.1842%" y="469" width="0.0805%" height="15" fill="rgb(239,85,38)" fg:x="1208" fg:w="1"/><text x="97.4342%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1842%" y="453" width="0.0805%" height="15" fill="rgb(229,69,51)" fg:x="1208" fg:w="1"/><text x="97.4342%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.2647%" y="709" width="0.0805%" height="15" fill="rgb(231,104,51)" fg:x="1209" fg:w="1"/><text x="97.5147%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="97.2647%" y="757" width="0.1609%" height="15" fill="rgb(235,49,4)" fg:x="1209" fg:w="2"/><text x="97.5147%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="97.2647%" y="741" width="0.1609%" height="15" fill="rgb(246,166,20)" fg:x="1209" fg:w="2"/><text x="97.5147%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.2647%" y="725" width="0.1609%" height="15" fill="rgb(230,119,37)" fg:x="1209" fg:w="2"/><text x="97.5147%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.3451%" y="709" width="0.0805%" height="15" fill="rgb(234,77,34)" fg:x="1210" fg:w="1"/><text x="97.5951%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.3451%" y="693" width="0.0805%" height="15" fill="rgb(211,222,33)" fg:x="1210" fg:w="1"/><text x="97.5951%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.3451%" y="677" width="0.0805%" height="15" fill="rgb(226,45,42)" fg:x="1210" fg:w="1"/><text x="97.5951%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3451%" y="661" width="0.0805%" height="15" fill="rgb(215,174,28)" fg:x="1210" fg:w="1"/><text x="97.5951%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.3451%" y="645" width="0.0805%" height="15" fill="rgb(254,173,49)" fg:x="1210" fg:w="1"/><text x="97.5951%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3451%" y="629" width="0.0805%" height="15" fill="rgb(229,191,6)" fg:x="1210" fg:w="1"/><text x="97.5951%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.3451%" y="613" width="0.0805%" height="15" fill="rgb(212,145,22)" fg:x="1210" fg:w="1"/><text x="97.5951%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3451%" y="597" width="0.0805%" height="15" fill="rgb(226,6,51)" fg:x="1210" fg:w="1"/><text x="97.5951%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.3451%" y="581" width="0.0805%" height="15" fill="rgb(227,128,8)" fg:x="1210" fg:w="1"/><text x="97.5951%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3451%" y="565" width="0.0805%" height="15" fill="rgb(205,24,10)" fg:x="1210" fg:w="1"/><text x="97.5951%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4256%" y="693" width="0.0805%" height="15" fill="rgb(217,147,27)" fg:x="1211" fg:w="1"/><text x="97.6756%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.5060%" y="661" width="0.0805%" height="15" fill="rgb(250,82,42)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5865%" y="661" width="0.0805%" height="15" fill="rgb(248,93,17)" fg:x="1213" fg:w="1"/><text x="97.8365%" y="671.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="97.6669%" y="645" width="0.0805%" height="15" fill="rgb(254,212,40)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.7474%" y="629" width="0.0805%" height="15" fill="rgb(229,209,2)" fg:x="1215" fg:w="1"/><text x="97.9974%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7474%" y="613" width="0.0805%" height="15" fill="rgb(211,50,43)" fg:x="1215" fg:w="1"/><text x="97.9974%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8278%" y="629" width="0.0805%" height="15" fill="rgb(245,196,29)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.9083%" y="613" width="0.0805%" height="15" fill="rgb(216,132,13)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.9083%" y="597" width="0.0805%" height="15" fill="rgb(251,108,21)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.9083%" y="581" width="0.0805%" height="15" fill="rgb(229,174,54)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.9083%" y="565" width="0.0805%" height="15" fill="rgb(211,175,47)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.9083%" y="549" width="0.0805%" height="15" fill="rgb(234,5,37)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.9083%" y="533" width="0.0805%" height="15" fill="rgb(244,150,43)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9083%" y="517" width="0.0805%" height="15" fill="rgb(242,172,38)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="527.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="97.4256%" y="741" width="0.6436%" height="15" fill="rgb(205,27,8)" fg:x="1211" fg:w="8"/><text x="97.6756%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="97.4256%" y="725" width="0.6436%" height="15" fill="rgb(217,57,3)" fg:x="1211" fg:w="8"/><text x="97.6756%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="97.4256%" y="709" width="0.6436%" height="15" fill="rgb(242,21,38)" fg:x="1211" fg:w="8"/><text x="97.6756%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="97.5060%" y="693" width="0.5632%" height="15" fill="rgb(209,64,43)" fg:x="1212" fg:w="7"/><text x="97.7560%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="97.5060%" y="677" width="0.5632%" height="15" fill="rgb(222,2,46)" fg:x="1212" fg:w="7"/><text x="97.7560%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="97.6669%" y="661" width="0.4023%" height="15" fill="rgb(218,19,44)" fg:x="1214" fg:w="5"/><text x="97.9169%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.7474%" y="645" width="0.3218%" height="15" fill="rgb(240,203,42)" fg:x="1215" fg:w="4"/><text x="97.9974%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.9083%" y="629" width="0.1609%" height="15" fill="rgb(229,23,45)" fg:x="1217" fg:w="2"/><text x="98.1583%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.9887%" y="613" width="0.0805%" height="15" fill="rgb(205,228,51)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.9887%" y="597" width="0.0805%" height="15" fill="rgb(239,36,20)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.9887%" y="581" width="0.0805%" height="15" fill="rgb(248,172,27)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9887%" y="565" width="0.0805%" height="15" fill="rgb(244,55,32)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0692%" y="629" width="0.0805%" height="15" fill="rgb(215,97,16)" fg:x="1219" fg:w="1"/><text x="98.3192%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0692%" y="613" width="0.0805%" height="15" fill="rgb(224,80,29)" fg:x="1219" fg:w="1"/><text x="98.3192%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.0692%" y="661" width="0.1609%" height="15" fill="rgb(216,93,47)" fg:x="1219" fg:w="2"/><text x="98.3192%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.0692%" y="645" width="0.1609%" height="15" fill="rgb(238,159,10)" fg:x="1219" fg:w="2"/><text x="98.3192%" y="655.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.1496%" y="629" width="0.0805%" height="15" fill="rgb(223,98,29)" fg:x="1220" fg:w="1"/><text x="98.3996%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.1496%" y="613" width="0.0805%" height="15" fill="rgb(210,176,23)" fg:x="1220" fg:w="1"/><text x="98.3996%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.1496%" y="597" width="0.0805%" height="15" fill="rgb(242,162,27)" fg:x="1220" fg:w="1"/><text x="98.3996%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1496%" y="581" width="0.0805%" height="15" fill="rgb(245,109,32)" fg:x="1220" fg:w="1"/><text x="98.3996%" y="591.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.1496%" y="565" width="0.0805%" height="15" fill="rgb(248,87,8)" fg:x="1220" fg:w="1"/><text x="98.3996%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.2301%" y="661" width="0.0805%" height="15" fill="rgb(250,160,50)" fg:x="1221" fg:w="1"/><text x="98.4801%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.2301%" y="645" width="0.0805%" height="15" fill="rgb(246,165,25)" fg:x="1221" fg:w="1"/><text x="98.4801%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.2301%" y="629" width="0.0805%" height="15" fill="rgb(249,219,3)" fg:x="1221" fg:w="1"/><text x="98.4801%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.97%)</title><rect x="97.4256%" y="757" width="0.9654%" height="15" fill="rgb(226,66,5)" fg:x="1211" fg:w="12"/><text x="97.6756%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="98.0692%" y="741" width="0.3218%" height="15" fill="rgb(250,220,43)" fg:x="1219" fg:w="4"/><text x="98.3192%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.0692%" y="725" width="0.3218%" height="15" fill="rgb(225,111,31)" fg:x="1219" fg:w="4"/><text x="98.3192%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="98.0692%" y="709" width="0.3218%" height="15" fill="rgb(248,106,18)" fg:x="1219" fg:w="4"/><text x="98.3192%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.0692%" y="693" width="0.3218%" height="15" fill="rgb(220,226,45)" fg:x="1219" fg:w="4"/><text x="98.3192%" y="703.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.0692%" y="677" width="0.3218%" height="15" fill="rgb(208,58,53)" fg:x="1219" fg:w="4"/><text x="98.3192%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3105%" y="661" width="0.0805%" height="15" fill="rgb(209,133,1)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3105%" y="645" width="0.0805%" height="15" fill="rgb(228,216,27)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.3105%" y="629" width="0.0805%" height="15" fill="rgb(238,155,2)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3105%" y="613" width="0.0805%" height="15" fill="rgb(244,99,37)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3105%" y="597" width="0.0805%" height="15" fill="rgb(254,32,3)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.3105%" y="581" width="0.0805%" height="15" fill="rgb(234,46,50)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3105%" y="565" width="0.0805%" height="15" fill="rgb(232,118,51)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3105%" y="549" width="0.0805%" height="15" fill="rgb(207,24,32)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.3105%" y="533" width="0.0805%" height="15" fill="rgb(208,107,43)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3105%" y="517" width="0.0805%" height="15" fill="rgb(231,28,9)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3105%" y="501" width="0.0805%" height="15" fill="rgb(241,204,15)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.3105%" y="485" width="0.0805%" height="15" fill="rgb(214,54,15)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3910%" y="645" width="0.0805%" height="15" fill="rgb(230,12,28)" fg:x="1223" fg:w="1"/><text x="98.6410%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3910%" y="629" width="0.0805%" height="15" fill="rgb(221,171,5)" fg:x="1223" fg:w="1"/><text x="98.6410%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.29%)</title><rect x="97.2647%" y="789" width="1.2872%" height="15" fill="rgb(207,72,25)" fg:x="1209" fg:w="16"/><text x="97.5147%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.29%)</title><rect x="97.2647%" y="773" width="1.2872%" height="15" fill="rgb(249,79,37)" fg:x="1209" fg:w="16"/><text x="97.5147%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.3910%" y="757" width="0.1609%" height="15" fill="rgb(209,98,49)" fg:x="1223" fg:w="2"/><text x="98.6410%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="98.3910%" y="741" width="0.1609%" height="15" fill="rgb(221,62,13)" fg:x="1223" fg:w="2"/><text x="98.6410%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.3910%" y="725" width="0.1609%" height="15" fill="rgb(223,39,6)" fg:x="1223" fg:w="2"/><text x="98.6410%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.3910%" y="709" width="0.1609%" height="15" fill="rgb(246,163,20)" fg:x="1223" fg:w="2"/><text x="98.6410%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.3910%" y="693" width="0.1609%" height="15" fill="rgb(211,111,29)" fg:x="1223" fg:w="2"/><text x="98.6410%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.3910%" y="677" width="0.1609%" height="15" fill="rgb(243,118,5)" fg:x="1223" fg:w="2"/><text x="98.6410%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.3910%" y="661" width="0.1609%" height="15" fill="rgb(240,144,52)" fg:x="1223" fg:w="2"/><text x="98.6410%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.4714%" y="645" width="0.0805%" height="15" fill="rgb(244,158,36)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.4714%" y="629" width="0.0805%" height="15" fill="rgb(241,109,37)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.4714%" y="613" width="0.0805%" height="15" fill="rgb(213,95,32)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.4714%" y="597" width="0.0805%" height="15" fill="rgb(252,193,9)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.4714%" y="581" width="0.0805%" height="15" fill="rgb(225,213,21)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.4714%" y="565" width="0.0805%" height="15" fill="rgb(220,172,46)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.4714%" y="549" width="0.0805%" height="15" fill="rgb(235,75,41)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.4714%" y="533" width="0.0805%" height="15" fill="rgb(213,86,9)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.4714%" y="517" width="0.0805%" height="15" fill="rgb(238,127,51)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.4714%" y="501" width="0.0805%" height="15" fill="rgb(215,2,54)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.4714%" y="485" width="0.0805%" height="15" fill="rgb(245,80,6)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4714%" y="469" width="0.0805%" height="15" fill="rgb(233,106,42)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.5519%" y="741" width="0.0805%" height="15" fill="rgb(244,86,38)" fg:x="1225" fg:w="1"/><text x="98.8019%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.5519%" y="725" width="0.0805%" height="15" fill="rgb(242,167,7)" fg:x="1225" fg:w="1"/><text x="98.8019%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.6323%" y="709" width="0.0805%" height="15" fill="rgb(218,216,3)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.6323%" y="693" width="0.0805%" height="15" fill="rgb(206,136,36)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.6323%" y="677" width="0.0805%" height="15" fill="rgb(206,206,15)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6323%" y="661" width="0.0805%" height="15" fill="rgb(207,163,34)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6323%" y="645" width="0.0805%" height="15" fill="rgb(240,127,22)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6323%" y="629" width="0.0805%" height="15" fill="rgb(227,49,5)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="98.6323%" y="741" width="0.2414%" height="15" fill="rgb(231,8,6)" fg:x="1226" fg:w="3"/><text x="98.8823%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="98.6323%" y="725" width="0.2414%" height="15" fill="rgb(223,21,24)" fg:x="1226" fg:w="3"/><text x="98.8823%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="98.7128%" y="709" width="0.1609%" height="15" fill="rgb(244,44,52)" fg:x="1227" fg:w="2"/><text x="98.9628%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="98.7128%" y="693" width="0.1609%" height="15" fill="rgb(207,73,28)" fg:x="1227" fg:w="2"/><text x="98.9628%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.7128%" y="677" width="0.1609%" height="15" fill="rgb(234,215,10)" fg:x="1227" fg:w="2"/><text x="98.9628%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.7128%" y="661" width="0.1609%" height="15" fill="rgb(236,85,3)" fg:x="1227" fg:w="2"/><text x="98.9628%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.7128%" y="645" width="0.1609%" height="15" fill="rgb(236,102,39)" fg:x="1227" fg:w="2"/><text x="98.9628%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.7932%" y="629" width="0.0805%" height="15" fill="rgb(243,50,8)" fg:x="1228" fg:w="1"/><text x="99.0432%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7932%" y="613" width="0.0805%" height="15" fill="rgb(207,111,4)" fg:x="1228" fg:w="1"/><text x="99.0432%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.9541%" y="645" width="0.0805%" height="15" fill="rgb(230,52,42)" fg:x="1230" fg:w="1"/><text x="99.2041%" y="655.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="98.8737%" y="725" width="0.2414%" height="15" fill="rgb(252,178,50)" fg:x="1229" fg:w="3"/><text x="99.1237%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.8737%" y="709" width="0.2414%" height="15" fill="rgb(234,46,35)" fg:x="1229" fg:w="3"/><text x="99.1237%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.8737%" y="693" width="0.2414%" height="15" fill="rgb(228,69,37)" fg:x="1229" fg:w="3"/><text x="99.1237%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.9541%" y="677" width="0.1609%" height="15" fill="rgb(221,21,11)" fg:x="1230" fg:w="2"/><text x="99.2041%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.9541%" y="661" width="0.1609%" height="15" fill="rgb(223,56,9)" fg:x="1230" fg:w="2"/><text x="99.2041%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0346%" y="645" width="0.0805%" height="15" fill="rgb(234,30,19)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0346%" y="629" width="0.0805%" height="15" fill="rgb(211,64,54)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.0346%" y="613" width="0.0805%" height="15" fill="rgb(250,189,5)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.0346%" y="597" width="0.0805%" height="15" fill="rgb(214,180,13)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.1150%" y="693" width="0.0805%" height="15" fill="rgb(238,40,40)" fg:x="1232" fg:w="1"/><text x="99.3650%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1955%" y="661" width="0.0805%" height="15" fill="rgb(214,101,38)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4368%" y="645" width="0.0805%" height="15" fill="rgb(242,65,53)" fg:x="1236" fg:w="1"/><text x="99.6868%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4368%" y="629" width="0.0805%" height="15" fill="rgb(230,22,45)" fg:x="1236" fg:w="1"/><text x="99.6868%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4368%" y="613" width="0.0805%" height="15" fill="rgb(223,77,1)" fg:x="1236" fg:w="1"/><text x="99.6868%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4368%" y="597" width="0.0805%" height="15" fill="rgb(227,33,37)" fg:x="1236" fg:w="1"/><text x="99.6868%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4368%" y="581" width="0.0805%" height="15" fill="rgb(224,148,39)" fg:x="1236" fg:w="1"/><text x="99.6868%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4368%" y="565" width="0.0805%" height="15" fill="rgb(232,212,39)" fg:x="1236" fg:w="1"/><text x="99.6868%" y="575.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.4368%" y="549" width="0.0805%" height="15" fill="rgb(251,172,7)" fg:x="1236" fg:w="1"/><text x="99.6868%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4368%" y="533" width="0.0805%" height="15" fill="rgb(219,39,9)" fg:x="1236" fg:w="1"/><text x="99.6868%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.05%)</title><rect x="98.5519%" y="773" width="1.0459%" height="15" fill="rgb(228,118,14)" fg:x="1225" fg:w="13"/><text x="98.8019%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.05%)</title><rect x="98.5519%" y="757" width="1.0459%" height="15" fill="rgb(207,140,10)" fg:x="1225" fg:w="13"/><text x="98.8019%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (9 samples, 0.72%)</title><rect x="98.8737%" y="741" width="0.7241%" height="15" fill="rgb(227,111,53)" fg:x="1229" fg:w="9"/><text x="99.1237%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="99.1150%" y="725" width="0.4827%" height="15" fill="rgb(216,165,16)" fg:x="1232" fg:w="6"/><text x="99.3650%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="99.1150%" y="709" width="0.4827%" height="15" fill="rgb(226,111,18)" fg:x="1232" fg:w="6"/><text x="99.3650%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="99.1955%" y="693" width="0.4023%" height="15" fill="rgb(251,27,17)" fg:x="1233" fg:w="5"/><text x="99.4455%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="99.1955%" y="677" width="0.4023%" height="15" fill="rgb(254,69,9)" fg:x="1233" fg:w="5"/><text x="99.4455%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="99.2759%" y="661" width="0.3218%" height="15" fill="rgb(234,140,37)" fg:x="1234" fg:w="4"/><text x="99.5259%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5173%" y="645" width="0.0805%" height="15" fill="rgb(220,93,8)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5173%" y="629" width="0.0805%" height="15" fill="rgb(236,113,3)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5173%" y="613" width="0.0805%" height="15" fill="rgb(234,108,23)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5173%" y="597" width="0.0805%" height="15" fill="rgb(205,114,34)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5173%" y="581" width="0.0805%" height="15" fill="rgb(236,200,45)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5173%" y="565" width="0.0805%" height="15" fill="rgb(227,194,29)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5173%" y="549" width="0.0805%" height="15" fill="rgb(250,76,42)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5173%" y="533" width="0.0805%" height="15" fill="rgb(208,128,8)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (14 samples, 1.13%)</title><rect x="98.5519%" y="789" width="1.1263%" height="15" fill="rgb(229,209,35)" fg:x="1225" fg:w="14"/><text x="98.8019%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.5977%" y="773" width="0.0805%" height="15" fill="rgb(215,39,53)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.5977%" y="757" width="0.0805%" height="15" fill="rgb(219,123,41)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.5977%" y="741" width="0.0805%" height="15" fill="rgb(212,158,18)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.5977%" y="725" width="0.0805%" height="15" fill="rgb(234,196,53)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.5977%" y="709" width="0.0805%" height="15" fill="rgb(210,139,12)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.5977%" y="693" width="0.0805%" height="15" fill="rgb(220,116,54)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.5977%" y="677" width="0.0805%" height="15" fill="rgb(247,103,28)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.5977%" y="661" width="0.0805%" height="15" fill="rgb(253,156,45)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.5977%" y="645" width="0.0805%" height="15" fill="rgb(237,157,52)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.5977%" y="629" width="0.0805%" height="15" fill="rgb(253,112,16)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.5977%" y="613" width="0.0805%" height="15" fill="rgb(234,70,18)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.5977%" y="597" width="0.0805%" height="15" fill="rgb(247,138,19)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.5977%" y="581" width="0.0805%" height="15" fill="rgb(207,171,1)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.5977%" y="565" width="0.0805%" height="15" fill="rgb(239,213,3)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.5977%" y="549" width="0.0805%" height="15" fill="rgb(226,112,4)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.5977%" y="533" width="0.0805%" height="15" fill="rgb(252,170,12)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.5977%" y="517" width="0.0805%" height="15" fill="rgb(241,106,13)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.5977%" y="501" width="0.0805%" height="15" fill="rgb(225,73,23)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.5977%" y="485" width="0.0805%" height="15" fill="rgb(251,227,29)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="495.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.6782%" y="789" width="0.0805%" height="15" fill="rgb(237,144,13)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.6782%" y="773" width="0.0805%" height="15" fill="rgb(232,106,46)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="783.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.6782%" y="757" width="0.0805%" height="15" fill="rgb(245,154,53)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="767.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.6782%" y="741" width="0.0805%" height="15" fill="rgb(212,119,47)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.6782%" y="725" width="0.0805%" height="15" fill="rgb(253,135,25)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="735.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.6782%" y="709" width="0.0805%" height="15" fill="rgb(253,208,39)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.7586%" y="789" width="0.0805%" height="15" fill="rgb(226,64,12)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.8391%" y="597" width="0.0805%" height="15" fill="rgb(214,162,37)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.8391%" y="581" width="0.0805%" height="15" fill="rgb(250,104,5)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.8391%" y="565" width="0.0805%" height="15" fill="rgb(220,202,50)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.8391%" y="549" width="0.0805%" height="15" fill="rgb(248,67,38)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.8391%" y="533" width="0.0805%" height="15" fill="rgb(242,94,35)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.8391%" y="517" width="0.0805%" height="15" fill="rgb(209,78,37)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.8391%" y="501" width="0.0805%" height="15" fill="rgb(230,126,47)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.8391%" y="485" width="0.0805%" height="15" fill="rgb(222,110,35)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.8391%" y="469" width="0.0805%" height="15" fill="rgb(233,154,20)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.8391%" y="453" width="0.0805%" height="15" fill="rgb(223,53,50)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.8391%" y="437" width="0.0805%" height="15" fill="rgb(251,27,26)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="447.50"></text></g><g><title>all (1,243 samples, 100%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(223,189,16)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1167.50"></text></g><g><title>simple-20ff020b (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(207,5,54)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1151.50">simple-20ff020b</text></g><g><title>_start (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(254,124,50)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1135.50">_start</text></g><g><title>__libc_start_main (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(253,193,24)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1119.50">__libc_start_main</text></g><g><title>main (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(235,170,24)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1103.50">main</text></g><g><title>std::rt::lang_start_internal (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(222,212,52)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1087.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(223,17,45)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(227,103,26)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(251,151,25)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1039.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(248,144,29)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,243 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(245,97,16)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,243 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(220,200,29)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,243 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(206,38,29)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="975.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,243 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(245,19,52)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="959.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,243 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(205,67,43)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="943.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,243 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(217,128,23)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="927.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,243 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(210,109,28)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="911.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,243 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(233,181,7)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="895.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,243 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(244,11,22)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="879.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (402 samples, 32.34%)</title><rect x="67.6589%" y="853" width="32.3411%" height="15" fill="rgb(205,124,54)" fg:x="841" fg:w="402"/><text x="67.9089%" y="863.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::r..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (402 samples, 32.34%)</title><rect x="67.6589%" y="837" width="32.3411%" height="15" fill="rgb(218,21,27)" fg:x="841" fg:w="402"/><text x="67.9089%" y="847.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (402 samples, 32.34%)</title><rect x="67.6589%" y="821" width="32.3411%" height="15" fill="rgb(224,153,33)" fg:x="841" fg:w="402"/><text x="67.9089%" y="831.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (111 samples, 8.93%)</title><rect x="91.0700%" y="805" width="8.9300%" height="15" fill="rgb(240,219,28)" fg:x="1132" fg:w="111"/><text x="91.3200%" y="815.50">engine::sessi..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="99.8391%" y="789" width="0.1609%" height="15" fill="rgb(214,80,29)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="99.8391%" y="773" width="0.1609%" height="15" fill="rgb(247,148,44)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="99.8391%" y="757" width="0.1609%" height="15" fill="rgb(243,110,30)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="767.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.8391%" y="741" width="0.1609%" height="15" fill="rgb(243,173,41)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="99.8391%" y="725" width="0.1609%" height="15" fill="rgb(225,160,47)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="99.8391%" y="709" width="0.1609%" height="15" fill="rgb(215,44,21)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="99.8391%" y="693" width="0.1609%" height="15" fill="rgb(248,90,3)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.8391%" y="677" width="0.1609%" height="15" fill="rgb(220,196,49)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="99.8391%" y="661" width="0.1609%" height="15" fill="rgb(217,138,14)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="99.8391%" y="645" width="0.1609%" height="15" fill="rgb(219,111,20)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="99.8391%" y="629" width="0.1609%" height="15" fill="rgb(218,114,4)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.8391%" y="613" width="0.1609%" height="15" fill="rgb(238,133,3)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.9195%" y="597" width="0.0805%" height="15" fill="rgb(224,95,0)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.9195%" y="581" width="0.0805%" height="15" fill="rgb(220,169,35)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.9195%" y="565" width="0.0805%" height="15" fill="rgb(242,116,47)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.9195%" y="549" width="0.0805%" height="15" fill="rgb(251,42,20)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.9195%" y="533" width="0.0805%" height="15" fill="rgb(234,7,34)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="99.9195%" y="517" width="0.0805%" height="15" fill="rgb(243,208,13)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="527.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="99.9195%" y="501" width="0.0805%" height="15" fill="rgb(227,33,28)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.9195%" y="485" width="0.0805%" height="15" fill="rgb(250,47,37)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.9195%" y="469" width="0.0805%" height="15" fill="rgb(235,111,52)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.9195%" y="453" width="0.0805%" height="15" fill="rgb(223,64,28)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.9195%" y="437" width="0.0805%" height="15" fill="rgb(236,67,22)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.9195%" y="421" width="0.0805%" height="15" fill="rgb(243,79,24)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.9195%" y="405" width="0.0805%" height="15" fill="rgb(241,225,22)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.9195%" y="389" width="0.0805%" height="15" fill="rgb(228,214,26)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="399.50"></text></g></svg></svg>