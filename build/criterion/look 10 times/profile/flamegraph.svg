<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="1256"><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0796%" y="597" width="0.0796%" height="15" fill="rgb(216,219,49)" fg:x="1" fg:w="1"/><text x="0.3296%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.0796%" y="581" width="0.0796%" height="15" fill="rgb(254,144,0)" fg:x="1" fg:w="1"/><text x="0.3296%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.3185%" y="549" width="0.0796%" height="15" fill="rgb(205,209,38)" fg:x="4" fg:w="1"/><text x="0.5685%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.3185%" y="533" width="0.0796%" height="15" fill="rgb(240,21,42)" fg:x="4" fg:w="1"/><text x="0.5685%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.32%)</title><rect x="0.1592%" y="581" width="0.3185%" height="15" fill="rgb(241,132,3)" fg:x="2" fg:w="4"/><text x="0.4092%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="0.1592%" y="565" width="0.3185%" height="15" fill="rgb(225,14,2)" fg:x="2" fg:w="4"/><text x="0.4092%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="0.3981%" y="549" width="0.0796%" height="15" fill="rgb(210,141,35)" fg:x="5" fg:w="1"/><text x="0.6481%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3981%" y="533" width="0.0796%" height="15" fill="rgb(251,14,44)" fg:x="5" fg:w="1"/><text x="0.6481%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.5573%" y="501" width="0.1592%" height="15" fill="rgb(247,48,18)" fg:x="7" fg:w="2"/><text x="0.8073%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.7166%" y="501" width="0.0796%" height="15" fill="rgb(225,0,40)" fg:x="9" fg:w="1"/><text x="0.9666%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7166%" y="485" width="0.0796%" height="15" fill="rgb(221,31,33)" fg:x="9" fg:w="1"/><text x="0.9666%" y="495.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="0.7962%" y="485" width="0.3981%" height="15" fill="rgb(237,42,40)" fg:x="10" fg:w="5"/><text x="1.0462%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.1943%" y="485" width="0.2389%" height="15" fill="rgb(233,51,29)" fg:x="15" fg:w="3"/><text x="1.4443%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3535%" y="469" width="0.0796%" height="15" fill="rgb(226,58,20)" fg:x="17" fg:w="1"/><text x="1.6035%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.4331%" y="469" width="0.1592%" height="15" fill="rgb(208,98,7)" fg:x="18" fg:w="2"/><text x="1.6831%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.4331%" y="453" width="0.1592%" height="15" fill="rgb(228,143,44)" fg:x="18" fg:w="2"/><text x="1.6831%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5924%" y="453" width="0.0796%" height="15" fill="rgb(246,55,38)" fg:x="20" fg:w="1"/><text x="1.8424%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.6720%" y="453" width="0.1592%" height="15" fill="rgb(247,87,16)" fg:x="21" fg:w="2"/><text x="1.9220%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.6720%" y="437" width="0.1592%" height="15" fill="rgb(234,129,42)" fg:x="21" fg:w="2"/><text x="1.9220%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9904%" y="437" width="0.0796%" height="15" fill="rgb(220,82,16)" fg:x="25" fg:w="1"/><text x="2.2404%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.59%)</title><rect x="0.5573%" y="517" width="1.5924%" height="15" fill="rgb(211,88,4)" fg:x="7" fg:w="20"/><text x="0.8073%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.35%)</title><rect x="0.7962%" y="501" width="1.3535%" height="15" fill="rgb(248,151,21)" fg:x="10" fg:w="17"/><text x="1.0462%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="1.4331%" y="485" width="0.7166%" height="15" fill="rgb(238,163,6)" fg:x="18" fg:w="9"/><text x="1.6831%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="1.5924%" y="469" width="0.5573%" height="15" fill="rgb(209,183,11)" fg:x="20" fg:w="7"/><text x="1.8424%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="1.8312%" y="453" width="0.3185%" height="15" fill="rgb(219,37,20)" fg:x="23" fg:w="4"/><text x="2.0812%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.0701%" y="437" width="0.0796%" height="15" fill="rgb(210,158,4)" fg:x="26" fg:w="1"/><text x="2.3201%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0701%" y="421" width="0.0796%" height="15" fill="rgb(221,167,53)" fg:x="26" fg:w="1"/><text x="2.3201%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.2293%" y="485" width="0.2389%" height="15" fill="rgb(237,151,45)" fg:x="28" fg:w="3"/><text x="2.4793%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="2.4682%" y="485" width="0.2389%" height="15" fill="rgb(231,39,3)" fg:x="31" fg:w="3"/><text x="2.7182%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.6274%" y="469" width="0.0796%" height="15" fill="rgb(212,167,28)" fg:x="33" fg:w="1"/><text x="2.8774%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.7070%" y="469" width="0.0796%" height="15" fill="rgb(232,178,8)" fg:x="34" fg:w="1"/><text x="2.9570%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.7070%" y="453" width="0.0796%" height="15" fill="rgb(225,151,20)" fg:x="34" fg:w="1"/><text x="2.9570%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.7070%" y="437" width="0.0796%" height="15" fill="rgb(238,3,37)" fg:x="34" fg:w="1"/><text x="2.9570%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.7866%" y="469" width="0.0796%" height="15" fill="rgb(251,147,42)" fg:x="35" fg:w="1"/><text x="3.0366%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.8662%" y="469" width="0.0796%" height="15" fill="rgb(208,173,10)" fg:x="36" fg:w="1"/><text x="3.1162%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.8662%" y="453" width="0.0796%" height="15" fill="rgb(246,225,4)" fg:x="36" fg:w="1"/><text x="3.1162%" y="463.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="2.9459%" y="453" width="0.3185%" height="15" fill="rgb(248,102,6)" fg:x="37" fg:w="4"/><text x="3.1959%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.19%)</title><rect x="2.1497%" y="501" width="1.1943%" height="15" fill="rgb(232,6,21)" fg:x="27" fg:w="15"/><text x="2.3997%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="2.7070%" y="485" width="0.6369%" height="15" fill="rgb(221,179,22)" fg:x="34" fg:w="8"/><text x="2.9570%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="2.9459%" y="469" width="0.3981%" height="15" fill="rgb(252,50,20)" fg:x="37" fg:w="5"/><text x="3.1959%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.2643%" y="453" width="0.0796%" height="15" fill="rgb(222,56,38)" fg:x="41" fg:w="1"/><text x="3.5143%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.27%)</title><rect x="2.1497%" y="517" width="1.2739%" height="15" fill="rgb(206,193,29)" fg:x="27" fg:w="16"/><text x="2.3997%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.3439%" y="501" width="0.0796%" height="15" fill="rgb(239,192,45)" fg:x="42" fg:w="1"/><text x="3.5939%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 3.03%)</title><rect x="0.4777%" y="565" width="3.0255%" height="15" fill="rgb(254,18,36)" fg:x="6" fg:w="38"/><text x="0.7277%" y="575.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (37 samples, 2.95%)</title><rect x="0.5573%" y="549" width="2.9459%" height="15" fill="rgb(221,127,11)" fg:x="7" fg:w="37"/><text x="0.8073%" y="559.50">co..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 2.95%)</title><rect x="0.5573%" y="533" width="2.9459%" height="15" fill="rgb(234,146,35)" fg:x="7" fg:w="37"/><text x="0.8073%" y="543.50">&lt;a..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.4236%" y="517" width="0.0796%" height="15" fill="rgb(254,201,37)" fg:x="43" fg:w="1"/><text x="3.6736%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (39 samples, 3.11%)</title><rect x="0.4777%" y="581" width="3.1051%" height="15" fill="rgb(211,202,23)" fg:x="6" fg:w="39"/><text x="0.7277%" y="591.50">cor..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.5032%" y="565" width="0.0796%" height="15" fill="rgb(237,91,2)" fg:x="44" fg:w="1"/><text x="3.7532%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 3.50%)</title><rect x="0.1592%" y="597" width="3.5032%" height="15" fill="rgb(226,228,36)" fg:x="2" fg:w="44"/><text x="0.4092%" y="607.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="3.5828%" y="581" width="0.0796%" height="15" fill="rgb(213,63,50)" fg:x="45" fg:w="1"/><text x="3.8328%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.5828%" y="565" width="0.0796%" height="15" fill="rgb(235,194,19)" fg:x="45" fg:w="1"/><text x="3.8328%" y="575.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="3.7420%" y="485" width="0.2389%" height="15" fill="rgb(207,204,18)" fg:x="47" fg:w="3"/><text x="3.9920%" y="495.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="3.8217%" y="469" width="0.1592%" height="15" fill="rgb(248,8,7)" fg:x="48" fg:w="2"/><text x="4.0717%" y="479.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="3.9013%" y="453" width="0.0796%" height="15" fill="rgb(223,145,47)" fg:x="49" fg:w="1"/><text x="4.1513%" y="463.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (12 samples, 0.96%)</title><rect x="3.7420%" y="517" width="0.9554%" height="15" fill="rgb(228,84,11)" fg:x="47" fg:w="12"/><text x="3.9920%" y="527.50"></text></g><g><title>libloading::safe::Library::new (12 samples, 0.96%)</title><rect x="3.7420%" y="501" width="0.9554%" height="15" fill="rgb(218,76,45)" fg:x="47" fg:w="12"/><text x="3.9920%" y="511.50"></text></g><g><title>dlopen (9 samples, 0.72%)</title><rect x="3.9809%" y="485" width="0.7166%" height="15" fill="rgb(223,80,15)" fg:x="50" fg:w="9"/><text x="4.2309%" y="495.50"></text></g><g><title>_dl_catch_error (9 samples, 0.72%)</title><rect x="3.9809%" y="469" width="0.7166%" height="15" fill="rgb(219,218,33)" fg:x="50" fg:w="9"/><text x="4.2309%" y="479.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="3.9809%" y="453" width="0.7166%" height="15" fill="rgb(208,51,11)" fg:x="50" fg:w="9"/><text x="4.2309%" y="463.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="3.9809%" y="437" width="0.7166%" height="15" fill="rgb(229,165,39)" fg:x="50" fg:w="9"/><text x="4.2309%" y="447.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="4.0605%" y="421" width="0.6369%" height="15" fill="rgb(241,100,24)" fg:x="51" fg:w="8"/><text x="4.3105%" y="431.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="4.6178%" y="405" width="0.0796%" height="15" fill="rgb(228,14,23)" fg:x="58" fg:w="1"/><text x="4.8678%" y="415.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="4.6178%" y="389" width="0.0796%" height="15" fill="rgb(247,116,52)" fg:x="58" fg:w="1"/><text x="4.8678%" y="399.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (16 samples, 1.27%)</title><rect x="3.7420%" y="533" width="1.2739%" height="15" fill="rgb(216,149,33)" fg:x="47" fg:w="16"/><text x="3.9920%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.32%)</title><rect x="4.6975%" y="517" width="0.3185%" height="15" fill="rgb(238,142,29)" fg:x="59" fg:w="4"/><text x="4.9475%" y="527.50"></text></g><g><title>clock_gettime (4 samples, 0.32%)</title><rect x="4.6975%" y="501" width="0.3185%" height="15" fill="rgb(224,83,40)" fg:x="59" fg:w="4"/><text x="4.9475%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="5.0159%" y="485" width="0.0796%" height="15" fill="rgb(234,165,11)" fg:x="63" fg:w="1"/><text x="5.2659%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.0159%" y="469" width="0.0796%" height="15" fill="rgb(215,96,23)" fg:x="63" fg:w="1"/><text x="5.2659%" y="479.50"></text></g><g><title>engine::session::Session::initialize (20 samples, 1.59%)</title><rect x="3.6624%" y="549" width="1.5924%" height="15" fill="rgb(233,179,26)" fg:x="46" fg:w="20"/><text x="3.9124%" y="559.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="5.0159%" y="533" width="0.2389%" height="15" fill="rgb(225,129,33)" fg:x="63" fg:w="3"/><text x="5.2659%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="5.0159%" y="517" width="0.2389%" height="15" fill="rgb(237,49,13)" fg:x="63" fg:w="3"/><text x="5.2659%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="5.0159%" y="501" width="0.2389%" height="15" fill="rgb(211,3,31)" fg:x="63" fg:w="3"/><text x="5.2659%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.0955%" y="485" width="0.1592%" height="15" fill="rgb(216,152,19)" fg:x="64" fg:w="2"/><text x="5.3455%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.0955%" y="469" width="0.1592%" height="15" fill="rgb(251,121,35)" fg:x="64" fg:w="2"/><text x="5.3455%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="5.0955%" y="453" width="0.1592%" height="15" fill="rgb(210,217,47)" fg:x="64" fg:w="2"/><text x="5.3455%" y="463.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="5.2548%" y="549" width="0.2389%" height="15" fill="rgb(244,116,22)" fg:x="66" fg:w="3"/><text x="5.5048%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="5.2548%" y="533" width="0.2389%" height="15" fill="rgb(228,17,21)" fg:x="66" fg:w="3"/><text x="5.5048%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="5.2548%" y="517" width="0.2389%" height="15" fill="rgb(240,149,34)" fg:x="66" fg:w="3"/><text x="5.5048%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.3344%" y="501" width="0.1592%" height="15" fill="rgb(208,125,47)" fg:x="67" fg:w="2"/><text x="5.5844%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.4140%" y="485" width="0.0796%" height="15" fill="rgb(249,186,39)" fg:x="68" fg:w="1"/><text x="5.6640%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.4140%" y="469" width="0.0796%" height="15" fill="rgb(240,220,33)" fg:x="68" fg:w="1"/><text x="5.6640%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (24 samples, 1.91%)</title><rect x="3.6624%" y="597" width="1.9108%" height="15" fill="rgb(243,110,23)" fg:x="46" fg:w="24"/><text x="3.9124%" y="607.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (24 samples, 1.91%)</title><rect x="3.6624%" y="581" width="1.9108%" height="15" fill="rgb(219,163,46)" fg:x="46" fg:w="24"/><text x="3.9124%" y="591.50">e..</text></g><g><title>engine::session::Session::new (24 samples, 1.91%)</title><rect x="3.6624%" y="565" width="1.9108%" height="15" fill="rgb(216,126,30)" fg:x="46" fg:w="24"/><text x="3.9124%" y="575.50">e..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="5.4936%" y="549" width="0.0796%" height="15" fill="rgb(208,139,11)" fg:x="69" fg:w="1"/><text x="5.7436%" y="559.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="5.4936%" y="533" width="0.0796%" height="15" fill="rgb(213,118,36)" fg:x="69" fg:w="1"/><text x="5.7436%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.6529%" y="549" width="0.0796%" height="15" fill="rgb(226,43,17)" fg:x="71" fg:w="1"/><text x="5.9029%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="5.6529%" y="565" width="0.2389%" height="15" fill="rgb(254,217,4)" fg:x="71" fg:w="3"/><text x="5.9029%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="5.7325%" y="549" width="0.1592%" height="15" fill="rgb(210,134,47)" fg:x="72" fg:w="2"/><text x="5.9825%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="5.8121%" y="533" width="0.0796%" height="15" fill="rgb(237,24,49)" fg:x="73" fg:w="1"/><text x="6.0621%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="5.8121%" y="517" width="0.0796%" height="15" fill="rgb(251,39,46)" fg:x="73" fg:w="1"/><text x="6.0621%" y="527.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="5.8917%" y="565" width="0.0796%" height="15" fill="rgb(251,220,3)" fg:x="74" fg:w="1"/><text x="6.1417%" y="575.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="5.8917%" y="549" width="0.0796%" height="15" fill="rgb(228,105,12)" fg:x="74" fg:w="1"/><text x="6.1417%" y="559.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="5.8917%" y="533" width="0.0796%" height="15" fill="rgb(215,196,1)" fg:x="74" fg:w="1"/><text x="6.1417%" y="543.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="5.8917%" y="517" width="0.0796%" height="15" fill="rgb(214,33,39)" fg:x="74" fg:w="1"/><text x="6.1417%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="5.8917%" y="501" width="0.0796%" height="15" fill="rgb(220,19,52)" fg:x="74" fg:w="1"/><text x="6.1417%" y="511.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="5.8917%" y="485" width="0.0796%" height="15" fill="rgb(221,78,38)" fg:x="74" fg:w="1"/><text x="6.1417%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="5.8917%" y="469" width="0.0796%" height="15" fill="rgb(253,30,16)" fg:x="74" fg:w="1"/><text x="6.1417%" y="479.50"></text></g><g><title>std::sys::unix::os::env_read_lock (1 samples, 0.08%)</title><rect x="5.8917%" y="453" width="0.0796%" height="15" fill="rgb(242,65,0)" fg:x="74" fg:w="1"/><text x="6.1417%" y="463.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.08%)</title><rect x="5.8917%" y="437" width="0.0796%" height="15" fill="rgb(235,201,12)" fg:x="74" fg:w="1"/><text x="6.1417%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (1 samples, 0.08%)</title><rect x="5.8917%" y="421" width="0.0796%" height="15" fill="rgb(233,161,9)" fg:x="74" fg:w="1"/><text x="6.1417%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (1 samples, 0.08%)</title><rect x="5.8917%" y="405" width="0.0796%" height="15" fill="rgb(241,207,41)" fg:x="74" fg:w="1"/><text x="6.1417%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.08%)</title><rect x="5.8917%" y="389" width="0.0796%" height="15" fill="rgb(212,69,46)" fg:x="74" fg:w="1"/><text x="6.1417%" y="399.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="5.9713%" y="501" width="0.0796%" height="15" fill="rgb(239,69,45)" fg:x="75" fg:w="1"/><text x="6.2213%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.9713%" y="533" width="0.1592%" height="15" fill="rgb(242,117,48)" fg:x="75" fg:w="2"/><text x="6.2213%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="5.9713%" y="517" width="0.1592%" height="15" fill="rgb(228,41,36)" fg:x="75" fg:w="2"/><text x="6.2213%" y="527.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="6.0510%" y="501" width="0.0796%" height="15" fill="rgb(212,3,32)" fg:x="76" fg:w="1"/><text x="6.3010%" y="511.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="6.0510%" y="485" width="0.0796%" height="15" fill="rgb(233,41,49)" fg:x="76" fg:w="1"/><text x="6.3010%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.0510%" y="469" width="0.0796%" height="15" fill="rgb(252,170,49)" fg:x="76" fg:w="1"/><text x="6.3010%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="6.1306%" y="485" width="0.0796%" height="15" fill="rgb(229,53,26)" fg:x="77" fg:w="1"/><text x="6.3806%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="6.1306%" y="469" width="0.0796%" height="15" fill="rgb(217,157,12)" fg:x="77" fg:w="1"/><text x="6.3806%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="6.1306%" y="453" width="0.0796%" height="15" fill="rgb(227,17,9)" fg:x="77" fg:w="1"/><text x="6.3806%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="6.1306%" y="437" width="0.0796%" height="15" fill="rgb(218,84,12)" fg:x="77" fg:w="1"/><text x="6.3806%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.1306%" y="421" width="0.0796%" height="15" fill="rgb(212,79,24)" fg:x="77" fg:w="1"/><text x="6.3806%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.1306%" y="405" width="0.0796%" height="15" fill="rgb(217,222,37)" fg:x="77" fg:w="1"/><text x="6.3806%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.2898%" y="453" width="0.1592%" height="15" fill="rgb(246,208,8)" fg:x="79" fg:w="2"/><text x="6.5398%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.2898%" y="437" width="0.1592%" height="15" fill="rgb(244,133,10)" fg:x="79" fg:w="2"/><text x="6.5398%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.3694%" y="421" width="0.0796%" height="15" fill="rgb(209,219,41)" fg:x="80" fg:w="1"/><text x="6.6194%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.3694%" y="405" width="0.0796%" height="15" fill="rgb(253,175,45)" fg:x="80" fg:w="1"/><text x="6.6194%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.4490%" y="421" width="0.1592%" height="15" fill="rgb(235,100,37)" fg:x="81" fg:w="2"/><text x="6.6990%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="6.2102%" y="469" width="0.4777%" height="15" fill="rgb(225,87,19)" fg:x="78" fg:w="6"/><text x="6.4602%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.4490%" y="453" width="0.2389%" height="15" fill="rgb(217,152,17)" fg:x="81" fg:w="3"/><text x="6.6990%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="6.4490%" y="437" width="0.2389%" height="15" fill="rgb(235,72,13)" fg:x="81" fg:w="3"/><text x="6.6990%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="6.6083%" y="421" width="0.0796%" height="15" fill="rgb(233,140,18)" fg:x="83" fg:w="1"/><text x="6.8583%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="6.8471%" y="453" width="0.6369%" height="15" fill="rgb(207,212,28)" fg:x="86" fg:w="8"/><text x="7.0971%" y="463.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="7.0860%" y="437" width="0.3981%" height="15" fill="rgb(220,130,25)" fg:x="89" fg:w="5"/><text x="7.3360%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.2452%" y="421" width="0.2389%" height="15" fill="rgb(205,55,34)" fg:x="91" fg:w="3"/><text x="7.4952%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.4045%" y="405" width="0.0796%" height="15" fill="rgb(237,54,35)" fg:x="93" fg:w="1"/><text x="7.6545%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.4841%" y="405" width="0.0796%" height="15" fill="rgb(208,67,23)" fg:x="94" fg:w="1"/><text x="7.7341%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.4841%" y="389" width="0.0796%" height="15" fill="rgb(206,207,50)" fg:x="94" fg:w="1"/><text x="7.7341%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.4841%" y="373" width="0.0796%" height="15" fill="rgb(213,211,42)" fg:x="94" fg:w="1"/><text x="7.7341%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="7.4841%" y="421" width="0.1592%" height="15" fill="rgb(252,197,50)" fg:x="94" fg:w="2"/><text x="7.7341%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.5637%" y="405" width="0.0796%" height="15" fill="rgb(251,211,41)" fg:x="95" fg:w="1"/><text x="7.8137%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.5637%" y="389" width="0.0796%" height="15" fill="rgb(229,211,5)" fg:x="95" fg:w="1"/><text x="7.8137%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="7.4841%" y="437" width="0.2389%" height="15" fill="rgb(239,36,31)" fg:x="94" fg:w="3"/><text x="7.7341%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.6433%" y="421" width="0.0796%" height="15" fill="rgb(248,67,31)" fg:x="96" fg:w="1"/><text x="7.8933%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.6433%" y="405" width="0.0796%" height="15" fill="rgb(249,55,44)" fg:x="96" fg:w="1"/><text x="7.8933%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="7.6433%" y="389" width="0.0796%" height="15" fill="rgb(216,82,12)" fg:x="96" fg:w="1"/><text x="7.8933%" y="399.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="8.2006%" y="341" width="0.0796%" height="15" fill="rgb(242,174,1)" fg:x="103" fg:w="1"/><text x="8.4506%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="8.2006%" y="325" width="0.0796%" height="15" fill="rgb(208,120,29)" fg:x="103" fg:w="1"/><text x="8.4506%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="8.1210%" y="389" width="0.2389%" height="15" fill="rgb(221,105,43)" fg:x="102" fg:w="3"/><text x="8.3710%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="8.2006%" y="373" width="0.1592%" height="15" fill="rgb(234,124,22)" fg:x="103" fg:w="2"/><text x="8.4506%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="8.2006%" y="357" width="0.1592%" height="15" fill="rgb(212,23,30)" fg:x="103" fg:w="2"/><text x="8.4506%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.2803%" y="341" width="0.0796%" height="15" fill="rgb(219,122,53)" fg:x="104" fg:w="1"/><text x="8.5303%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.72%)</title><rect x="7.7229%" y="437" width="0.7166%" height="15" fill="rgb(248,84,24)" fg:x="97" fg:w="9"/><text x="7.9729%" y="447.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="7.8025%" y="421" width="0.6369%" height="15" fill="rgb(245,115,18)" fg:x="98" fg:w="8"/><text x="8.0525%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.56%)</title><rect x="7.8822%" y="405" width="0.5573%" height="15" fill="rgb(227,176,51)" fg:x="99" fg:w="7"/><text x="8.1322%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.3599%" y="389" width="0.0796%" height="15" fill="rgb(229,63,42)" fg:x="105" fg:w="1"/><text x="8.6099%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.4395%" y="421" width="0.0796%" height="15" fill="rgb(247,202,24)" fg:x="106" fg:w="1"/><text x="8.6895%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.4395%" y="405" width="0.0796%" height="15" fill="rgb(244,173,20)" fg:x="106" fg:w="1"/><text x="8.6895%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.5191%" y="421" width="0.1592%" height="15" fill="rgb(242,81,47)" fg:x="107" fg:w="2"/><text x="8.7691%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.5987%" y="405" width="0.0796%" height="15" fill="rgb(231,185,54)" fg:x="108" fg:w="1"/><text x="8.8487%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.5987%" y="389" width="0.0796%" height="15" fill="rgb(243,55,32)" fg:x="108" fg:w="1"/><text x="8.8487%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.8376%" y="405" width="0.0796%" height="15" fill="rgb(208,167,19)" fg:x="111" fg:w="1"/><text x="9.0876%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.8376%" y="389" width="0.0796%" height="15" fill="rgb(231,72,35)" fg:x="111" fg:w="1"/><text x="9.0876%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.8376%" y="373" width="0.0796%" height="15" fill="rgb(250,173,51)" fg:x="111" fg:w="1"/><text x="9.0876%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.8376%" y="357" width="0.0796%" height="15" fill="rgb(209,5,22)" fg:x="111" fg:w="1"/><text x="9.0876%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.9172%" y="405" width="0.0796%" height="15" fill="rgb(250,174,19)" fg:x="112" fg:w="1"/><text x="9.1672%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.9172%" y="389" width="0.0796%" height="15" fill="rgb(217,3,49)" fg:x="112" fg:w="1"/><text x="9.1672%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.9172%" y="373" width="0.0796%" height="15" fill="rgb(218,225,5)" fg:x="112" fg:w="1"/><text x="9.1672%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.9172%" y="357" width="0.0796%" height="15" fill="rgb(236,89,11)" fg:x="112" fg:w="1"/><text x="9.1672%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="8.6783%" y="421" width="0.4777%" height="15" fill="rgb(206,33,28)" fg:x="109" fg:w="6"/><text x="8.9283%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.9968%" y="405" width="0.1592%" height="15" fill="rgb(241,56,42)" fg:x="113" fg:w="2"/><text x="9.2468%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.0764%" y="389" width="0.0796%" height="15" fill="rgb(222,44,11)" fg:x="114" fg:w="1"/><text x="9.3264%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.0764%" y="373" width="0.0796%" height="15" fill="rgb(234,111,20)" fg:x="114" fg:w="1"/><text x="9.3264%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="8.4395%" y="437" width="0.8758%" height="15" fill="rgb(237,77,6)" fg:x="106" fg:w="11"/><text x="8.6895%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.1561%" y="421" width="0.1592%" height="15" fill="rgb(235,111,23)" fg:x="115" fg:w="2"/><text x="9.4061%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.2357%" y="405" width="0.0796%" height="15" fill="rgb(251,135,29)" fg:x="116" fg:w="1"/><text x="9.4857%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.2357%" y="389" width="0.0796%" height="15" fill="rgb(217,57,1)" fg:x="116" fg:w="1"/><text x="9.4857%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 1.99%)</title><rect x="7.4841%" y="453" width="1.9904%" height="15" fill="rgb(249,119,31)" fg:x="94" fg:w="25"/><text x="7.7341%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.3153%" y="437" width="0.1592%" height="15" fill="rgb(233,164,33)" fg:x="117" fg:w="2"/><text x="9.5653%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (46 samples, 3.66%)</title><rect x="6.2102%" y="485" width="3.6624%" height="15" fill="rgb(250,217,43)" fg:x="78" fg:w="46"/><text x="6.4602%" y="495.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (40 samples, 3.18%)</title><rect x="6.6879%" y="469" width="3.1847%" height="15" fill="rgb(232,154,50)" fg:x="84" fg:w="40"/><text x="6.9379%" y="479.50">ser..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="9.4745%" y="453" width="0.3981%" height="15" fill="rgb(227,190,8)" fg:x="119" fg:w="5"/><text x="9.7245%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="9.5541%" y="437" width="0.3185%" height="15" fill="rgb(209,217,32)" fg:x="120" fg:w="4"/><text x="9.8041%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="9.6338%" y="421" width="0.2389%" height="15" fill="rgb(243,203,50)" fg:x="121" fg:w="3"/><text x="9.8838%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="9.7134%" y="405" width="0.1592%" height="15" fill="rgb(232,152,27)" fg:x="122" fg:w="2"/><text x="9.9634%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="9.7134%" y="389" width="0.1592%" height="15" fill="rgb(240,34,29)" fg:x="122" fg:w="2"/><text x="9.9634%" y="399.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="9.7134%" y="373" width="0.1592%" height="15" fill="rgb(215,185,52)" fg:x="122" fg:w="2"/><text x="9.9634%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.9522%" y="437" width="0.0796%" height="15" fill="rgb(240,89,49)" fg:x="125" fg:w="1"/><text x="10.2022%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.0318%" y="437" width="0.0796%" height="15" fill="rgb(225,12,52)" fg:x="126" fg:w="1"/><text x="10.2818%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.2707%" y="405" width="0.0796%" height="15" fill="rgb(239,128,45)" fg:x="129" fg:w="1"/><text x="10.5207%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.3503%" y="405" width="0.0796%" height="15" fill="rgb(211,78,47)" fg:x="130" fg:w="1"/><text x="10.6003%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="9.8726%" y="485" width="0.6369%" height="15" fill="rgb(232,31,21)" fg:x="124" fg:w="8"/><text x="10.1226%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="9.8726%" y="469" width="0.6369%" height="15" fill="rgb(222,168,14)" fg:x="124" fg:w="8"/><text x="10.1226%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="9.9522%" y="453" width="0.5573%" height="15" fill="rgb(209,128,24)" fg:x="125" fg:w="7"/><text x="10.2022%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="10.1115%" y="437" width="0.3981%" height="15" fill="rgb(249,35,13)" fg:x="127" fg:w="5"/><text x="10.3615%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="10.2707%" y="421" width="0.2389%" height="15" fill="rgb(218,7,2)" fg:x="129" fg:w="3"/><text x="10.5207%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.4299%" y="405" width="0.0796%" height="15" fill="rgb(238,107,27)" fg:x="131" fg:w="1"/><text x="10.6799%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="10.5096%" y="469" width="0.0796%" height="15" fill="rgb(217,88,38)" fg:x="132" fg:w="1"/><text x="10.7596%" y="479.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="10.5096%" y="453" width="0.0796%" height="15" fill="rgb(230,207,0)" fg:x="132" fg:w="1"/><text x="10.7596%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="10.5096%" y="437" width="0.0796%" height="15" fill="rgb(249,64,54)" fg:x="132" fg:w="1"/><text x="10.7596%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.5892%" y="437" width="0.0796%" height="15" fill="rgb(231,7,11)" fg:x="133" fg:w="1"/><text x="10.8392%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.6688%" y="437" width="0.0796%" height="15" fill="rgb(205,149,21)" fg:x="134" fg:w="1"/><text x="10.9188%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="10.7484%" y="437" width="0.0796%" height="15" fill="rgb(215,126,34)" fg:x="135" fg:w="1"/><text x="10.9984%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.7484%" y="421" width="0.0796%" height="15" fill="rgb(241,132,45)" fg:x="135" fg:w="1"/><text x="10.9984%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="10.8280%" y="437" width="0.0796%" height="15" fill="rgb(252,69,32)" fg:x="136" fg:w="1"/><text x="11.0780%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.8280%" y="421" width="0.0796%" height="15" fill="rgb(232,204,19)" fg:x="136" fg:w="1"/><text x="11.0780%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.8280%" y="405" width="0.0796%" height="15" fill="rgb(249,15,47)" fg:x="136" fg:w="1"/><text x="11.0780%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="10.9076%" y="437" width="0.1592%" height="15" fill="rgb(209,227,23)" fg:x="137" fg:w="2"/><text x="11.1576%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="10.9076%" y="421" width="0.1592%" height="15" fill="rgb(248,92,24)" fg:x="137" fg:w="2"/><text x="11.1576%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.9076%" y="405" width="0.1592%" height="15" fill="rgb(247,59,2)" fg:x="137" fg:w="2"/><text x="11.1576%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="11.1465%" y="405" width="0.0796%" height="15" fill="rgb(221,30,5)" fg:x="140" fg:w="1"/><text x="11.3965%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="11.2261%" y="373" width="0.0796%" height="15" fill="rgb(208,108,53)" fg:x="141" fg:w="1"/><text x="11.4761%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.3057%" y="357" width="0.0796%" height="15" fill="rgb(211,183,26)" fg:x="142" fg:w="1"/><text x="11.5557%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.3057%" y="341" width="0.0796%" height="15" fill="rgb(232,132,4)" fg:x="142" fg:w="1"/><text x="11.5557%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="11.5446%" y="293" width="0.1592%" height="15" fill="rgb(253,128,37)" fg:x="145" fg:w="2"/><text x="11.7946%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="11.4650%" y="341" width="0.3185%" height="15" fill="rgb(221,58,24)" fg:x="144" fg:w="4"/><text x="11.7150%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.5446%" y="325" width="0.2389%" height="15" fill="rgb(230,54,45)" fg:x="145" fg:w="3"/><text x="11.7946%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.5446%" y="309" width="0.2389%" height="15" fill="rgb(254,21,18)" fg:x="145" fg:w="3"/><text x="11.7946%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.7038%" y="293" width="0.0796%" height="15" fill="rgb(221,108,0)" fg:x="147" fg:w="1"/><text x="11.9538%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="11.3057%" y="373" width="0.5573%" height="15" fill="rgb(206,95,1)" fg:x="142" fg:w="7"/><text x="11.5557%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="11.3854%" y="357" width="0.4777%" height="15" fill="rgb(237,52,5)" fg:x="143" fg:w="6"/><text x="11.6354%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.7834%" y="341" width="0.0796%" height="15" fill="rgb(218,150,34)" fg:x="148" fg:w="1"/><text x="12.0334%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="11.2261%" y="405" width="0.7166%" height="15" fill="rgb(235,194,28)" fg:x="141" fg:w="9"/><text x="11.4761%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="11.2261%" y="389" width="0.7166%" height="15" fill="rgb(245,92,18)" fg:x="141" fg:w="9"/><text x="11.4761%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8631%" y="373" width="0.0796%" height="15" fill="rgb(253,203,53)" fg:x="149" fg:w="1"/><text x="12.1131%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.88%)</title><rect x="11.1465%" y="421" width="0.8758%" height="15" fill="rgb(249,185,47)" fg:x="140" fg:w="11"/><text x="11.3965%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="11.9427%" y="405" width="0.0796%" height="15" fill="rgb(252,194,52)" fg:x="150" fg:w="1"/><text x="12.1927%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.9427%" y="389" width="0.0796%" height="15" fill="rgb(210,53,36)" fg:x="150" fg:w="1"/><text x="12.1927%" y="399.50"></text></g><g><title>engine::session::Session::flush (81 samples, 6.45%)</title><rect x="5.6529%" y="581" width="6.4490%" height="15" fill="rgb(237,37,25)" fg:x="71" fg:w="81"/><text x="5.9029%" y="591.50">engine::..</text></g><g><title>engine::session::state::State::close (77 samples, 6.13%)</title><rect x="5.9713%" y="565" width="6.1306%" height="15" fill="rgb(242,116,27)" fg:x="75" fg:w="77"/><text x="6.2213%" y="575.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (77 samples, 6.13%)</title><rect x="5.9713%" y="549" width="6.1306%" height="15" fill="rgb(213,185,26)" fg:x="75" fg:w="77"/><text x="6.2213%" y="559.50">engine::..</text></g><g><title>core::iter::adapters::try_process (75 samples, 5.97%)</title><rect x="6.1306%" y="533" width="5.9713%" height="15" fill="rgb(225,204,8)" fg:x="77" fg:w="75"/><text x="6.3806%" y="543.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (75 samples, 5.97%)</title><rect x="6.1306%" y="517" width="5.9713%" height="15" fill="rgb(254,111,37)" fg:x="77" fg:w="75"/><text x="6.3806%" y="527.50">&lt;alloc::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (75 samples, 5.97%)</title><rect x="6.1306%" y="501" width="5.9713%" height="15" fill="rgb(242,35,9)" fg:x="77" fg:w="75"/><text x="6.3806%" y="511.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (20 samples, 1.59%)</title><rect x="10.5096%" y="485" width="1.5924%" height="15" fill="rgb(232,138,49)" fg:x="132" fg:w="20"/><text x="10.7596%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.51%)</title><rect x="10.5892%" y="469" width="1.5127%" height="15" fill="rgb(247,56,4)" fg:x="133" fg:w="19"/><text x="10.8392%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.51%)</title><rect x="10.5892%" y="453" width="1.5127%" height="15" fill="rgb(226,179,17)" fg:x="133" fg:w="19"/><text x="10.8392%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.04%)</title><rect x="11.0669%" y="437" width="1.0350%" height="15" fill="rgb(216,163,45)" fg:x="139" fg:w="13"/><text x="11.3169%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0223%" y="421" width="0.0796%" height="15" fill="rgb(211,157,3)" fg:x="151" fg:w="1"/><text x="12.2723%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="12.1019%" y="533" width="0.0796%" height="15" fill="rgb(234,44,20)" fg:x="152" fg:w="1"/><text x="12.3519%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.1019%" y="517" width="0.0796%" height="15" fill="rgb(254,138,23)" fg:x="152" fg:w="1"/><text x="12.3519%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.1019%" y="501" width="0.0796%" height="15" fill="rgb(206,119,39)" fg:x="152" fg:w="1"/><text x="12.3519%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="12.1815%" y="533" width="0.0796%" height="15" fill="rgb(231,105,52)" fg:x="153" fg:w="1"/><text x="12.4315%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.1815%" y="517" width="0.0796%" height="15" fill="rgb(250,20,5)" fg:x="153" fg:w="1"/><text x="12.4315%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.1815%" y="501" width="0.0796%" height="15" fill="rgb(215,198,30)" fg:x="153" fg:w="1"/><text x="12.4315%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.2611%" y="469" width="0.0796%" height="15" fill="rgb(246,142,8)" fg:x="154" fg:w="1"/><text x="12.5111%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2611%" y="453" width="0.0796%" height="15" fill="rgb(243,26,38)" fg:x="154" fg:w="1"/><text x="12.5111%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2611%" y="437" width="0.0796%" height="15" fill="rgb(205,133,28)" fg:x="154" fg:w="1"/><text x="12.5111%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.2611%" y="421" width="0.0796%" height="15" fill="rgb(212,34,0)" fg:x="154" fg:w="1"/><text x="12.5111%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.2611%" y="405" width="0.0796%" height="15" fill="rgb(251,226,22)" fg:x="154" fg:w="1"/><text x="12.5111%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.2611%" y="389" width="0.0796%" height="15" fill="rgb(252,119,9)" fg:x="154" fg:w="1"/><text x="12.5111%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2611%" y="373" width="0.0796%" height="15" fill="rgb(213,150,50)" fg:x="154" fg:w="1"/><text x="12.5111%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2611%" y="357" width="0.0796%" height="15" fill="rgb(212,24,39)" fg:x="154" fg:w="1"/><text x="12.5111%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.2611%" y="341" width="0.0796%" height="15" fill="rgb(213,46,39)" fg:x="154" fg:w="1"/><text x="12.5111%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.2611%" y="325" width="0.0796%" height="15" fill="rgb(239,106,12)" fg:x="154" fg:w="1"/><text x="12.5111%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.2611%" y="309" width="0.0796%" height="15" fill="rgb(249,229,21)" fg:x="154" fg:w="1"/><text x="12.5111%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.2611%" y="293" width="0.0796%" height="15" fill="rgb(212,158,3)" fg:x="154" fg:w="1"/><text x="12.5111%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2611%" y="277" width="0.0796%" height="15" fill="rgb(253,26,48)" fg:x="154" fg:w="1"/><text x="12.5111%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.3408%" y="469" width="0.0796%" height="15" fill="rgb(238,178,20)" fg:x="155" fg:w="1"/><text x="12.5908%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.3408%" y="453" width="0.0796%" height="15" fill="rgb(208,86,15)" fg:x="155" fg:w="1"/><text x="12.5908%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="12.2611%" y="517" width="0.2389%" height="15" fill="rgb(239,42,53)" fg:x="154" fg:w="3"/><text x="12.5111%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="12.2611%" y="501" width="0.2389%" height="15" fill="rgb(245,226,8)" fg:x="154" fg:w="3"/><text x="12.5111%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.2611%" y="485" width="0.2389%" height="15" fill="rgb(216,176,32)" fg:x="154" fg:w="3"/><text x="12.5111%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.4204%" y="469" width="0.0796%" height="15" fill="rgb(231,186,21)" fg:x="156" fg:w="1"/><text x="12.6704%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.4204%" y="453" width="0.0796%" height="15" fill="rgb(205,95,49)" fg:x="156" fg:w="1"/><text x="12.6704%" y="463.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="12.5000%" y="517" width="0.1592%" height="15" fill="rgb(217,145,8)" fg:x="157" fg:w="2"/><text x="12.7500%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.5796%" y="501" width="0.0796%" height="15" fill="rgb(239,144,48)" fg:x="158" fg:w="1"/><text x="12.8296%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.5796%" y="485" width="0.0796%" height="15" fill="rgb(214,189,23)" fg:x="158" fg:w="1"/><text x="12.8296%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="12.5796%" y="469" width="0.0796%" height="15" fill="rgb(229,157,17)" fg:x="158" fg:w="1"/><text x="12.8296%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5796%" y="453" width="0.0796%" height="15" fill="rgb(230,5,48)" fg:x="158" fg:w="1"/><text x="12.8296%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6592%" y="373" width="0.0796%" height="15" fill="rgb(224,156,48)" fg:x="159" fg:w="1"/><text x="12.9092%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6592%" y="357" width="0.0796%" height="15" fill="rgb(223,14,29)" fg:x="159" fg:w="1"/><text x="12.9092%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="12.6592%" y="341" width="0.0796%" height="15" fill="rgb(229,96,36)" fg:x="159" fg:w="1"/><text x="12.9092%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="12.6592%" y="485" width="0.1592%" height="15" fill="rgb(231,102,53)" fg:x="159" fg:w="2"/><text x="12.9092%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="12.6592%" y="469" width="0.1592%" height="15" fill="rgb(210,77,38)" fg:x="159" fg:w="2"/><text x="12.9092%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="12.6592%" y="453" width="0.1592%" height="15" fill="rgb(235,131,6)" fg:x="159" fg:w="2"/><text x="12.9092%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="12.6592%" y="437" width="0.1592%" height="15" fill="rgb(252,55,38)" fg:x="159" fg:w="2"/><text x="12.9092%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="12.6592%" y="421" width="0.1592%" height="15" fill="rgb(246,38,14)" fg:x="159" fg:w="2"/><text x="12.9092%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="12.6592%" y="405" width="0.1592%" height="15" fill="rgb(242,27,5)" fg:x="159" fg:w="2"/><text x="12.9092%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="12.6592%" y="389" width="0.1592%" height="15" fill="rgb(228,65,35)" fg:x="159" fg:w="2"/><text x="12.9092%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.7389%" y="373" width="0.0796%" height="15" fill="rgb(245,93,11)" fg:x="160" fg:w="1"/><text x="12.9889%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7389%" y="357" width="0.0796%" height="15" fill="rgb(213,1,31)" fg:x="160" fg:w="1"/><text x="12.9889%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8981%" y="453" width="0.0796%" height="15" fill="rgb(237,205,14)" fg:x="162" fg:w="1"/><text x="13.1481%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="12.2611%" y="533" width="0.7962%" height="15" fill="rgb(232,118,45)" fg:x="154" fg:w="10"/><text x="12.5111%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="12.6592%" y="517" width="0.3981%" height="15" fill="rgb(218,5,6)" fg:x="159" fg:w="5"/><text x="12.9092%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="12.6592%" y="501" width="0.3981%" height="15" fill="rgb(251,87,51)" fg:x="159" fg:w="5"/><text x="12.9092%" y="511.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="12.8185%" y="485" width="0.2389%" height="15" fill="rgb(207,225,20)" fg:x="161" fg:w="3"/><text x="13.0685%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.8981%" y="469" width="0.1592%" height="15" fill="rgb(222,78,54)" fg:x="162" fg:w="2"/><text x="13.1481%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.9777%" y="453" width="0.0796%" height="15" fill="rgb(232,85,16)" fg:x="163" fg:w="1"/><text x="13.2277%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.9777%" y="437" width="0.0796%" height="15" fill="rgb(244,25,33)" fg:x="163" fg:w="1"/><text x="13.2277%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="13.0573%" y="517" width="0.0796%" height="15" fill="rgb(233,24,36)" fg:x="164" fg:w="1"/><text x="13.3073%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.0573%" y="501" width="0.0796%" height="15" fill="rgb(253,49,54)" fg:x="164" fg:w="1"/><text x="13.3073%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.0573%" y="485" width="0.0796%" height="15" fill="rgb(245,12,22)" fg:x="164" fg:w="1"/><text x="13.3073%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.0573%" y="469" width="0.0796%" height="15" fill="rgb(253,141,28)" fg:x="164" fg:w="1"/><text x="13.3073%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.0573%" y="453" width="0.0796%" height="15" fill="rgb(225,207,27)" fg:x="164" fg:w="1"/><text x="13.3073%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.0573%" y="437" width="0.0796%" height="15" fill="rgb(220,84,2)" fg:x="164" fg:w="1"/><text x="13.3073%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.0573%" y="421" width="0.0796%" height="15" fill="rgb(224,37,37)" fg:x="164" fg:w="1"/><text x="13.3073%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.0573%" y="405" width="0.0796%" height="15" fill="rgb(220,143,18)" fg:x="164" fg:w="1"/><text x="13.3073%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.0573%" y="389" width="0.0796%" height="15" fill="rgb(210,88,33)" fg:x="164" fg:w="1"/><text x="13.3073%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.0573%" y="373" width="0.0796%" height="15" fill="rgb(219,87,51)" fg:x="164" fg:w="1"/><text x="13.3073%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.0573%" y="357" width="0.0796%" height="15" fill="rgb(211,7,35)" fg:x="164" fg:w="1"/><text x="13.3073%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.0573%" y="341" width="0.0796%" height="15" fill="rgb(232,77,2)" fg:x="164" fg:w="1"/><text x="13.3073%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.0573%" y="325" width="0.0796%" height="15" fill="rgb(249,94,25)" fg:x="164" fg:w="1"/><text x="13.3073%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.0573%" y="309" width="0.0796%" height="15" fill="rgb(215,112,2)" fg:x="164" fg:w="1"/><text x="13.3073%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.0573%" y="293" width="0.0796%" height="15" fill="rgb(226,115,48)" fg:x="164" fg:w="1"/><text x="13.3073%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="13.0573%" y="533" width="0.2389%" height="15" fill="rgb(249,196,10)" fg:x="164" fg:w="3"/><text x="13.3073%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="13.1369%" y="517" width="0.1592%" height="15" fill="rgb(237,109,14)" fg:x="165" fg:w="2"/><text x="13.3869%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.1369%" y="501" width="0.1592%" height="15" fill="rgb(217,103,53)" fg:x="165" fg:w="2"/><text x="13.3869%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.2962%" y="485" width="0.0796%" height="15" fill="rgb(244,137,9)" fg:x="167" fg:w="1"/><text x="13.5462%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3758%" y="469" width="0.0796%" height="15" fill="rgb(227,201,3)" fg:x="168" fg:w="1"/><text x="13.6258%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.3758%" y="453" width="0.0796%" height="15" fill="rgb(243,94,6)" fg:x="168" fg:w="1"/><text x="13.6258%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3758%" y="437" width="0.0796%" height="15" fill="rgb(235,118,5)" fg:x="168" fg:w="1"/><text x="13.6258%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3758%" y="421" width="0.0796%" height="15" fill="rgb(247,10,30)" fg:x="168" fg:w="1"/><text x="13.6258%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.3758%" y="405" width="0.0796%" height="15" fill="rgb(205,26,28)" fg:x="168" fg:w="1"/><text x="13.6258%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="13.2962%" y="501" width="0.2389%" height="15" fill="rgb(206,99,35)" fg:x="167" fg:w="3"/><text x="13.5462%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.3758%" y="485" width="0.1592%" height="15" fill="rgb(238,130,40)" fg:x="168" fg:w="2"/><text x="13.6258%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.4554%" y="469" width="0.0796%" height="15" fill="rgb(224,126,31)" fg:x="169" fg:w="1"/><text x="13.7054%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.4554%" y="453" width="0.0796%" height="15" fill="rgb(254,105,17)" fg:x="169" fg:w="1"/><text x="13.7054%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.4554%" y="437" width="0.0796%" height="15" fill="rgb(216,87,36)" fg:x="169" fg:w="1"/><text x="13.7054%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.4554%" y="421" width="0.0796%" height="15" fill="rgb(240,21,12)" fg:x="169" fg:w="1"/><text x="13.7054%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="13.4554%" y="405" width="0.0796%" height="15" fill="rgb(245,192,34)" fg:x="169" fg:w="1"/><text x="13.7054%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (20 samples, 1.59%)</title><rect x="12.1019%" y="565" width="1.5924%" height="15" fill="rgb(226,100,49)" fg:x="152" fg:w="20"/><text x="12.3519%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (20 samples, 1.59%)</title><rect x="12.1019%" y="549" width="1.5924%" height="15" fill="rgb(245,188,27)" fg:x="152" fg:w="20"/><text x="12.3519%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="13.2962%" y="533" width="0.3981%" height="15" fill="rgb(212,170,8)" fg:x="167" fg:w="5"/><text x="13.5462%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="13.2962%" y="517" width="0.3981%" height="15" fill="rgb(217,113,29)" fg:x="167" fg:w="5"/><text x="13.5462%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="13.5350%" y="501" width="0.1592%" height="15" fill="rgb(237,30,3)" fg:x="170" fg:w="2"/><text x="13.7850%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.5350%" y="485" width="0.1592%" height="15" fill="rgb(227,19,28)" fg:x="170" fg:w="2"/><text x="13.7850%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5350%" y="469" width="0.1592%" height="15" fill="rgb(239,172,45)" fg:x="170" fg:w="2"/><text x="13.7850%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5350%" y="453" width="0.1592%" height="15" fill="rgb(254,55,39)" fg:x="170" fg:w="2"/><text x="13.7850%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5350%" y="437" width="0.1592%" height="15" fill="rgb(249,208,12)" fg:x="170" fg:w="2"/><text x="13.7850%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6146%" y="421" width="0.0796%" height="15" fill="rgb(240,52,13)" fg:x="171" fg:w="1"/><text x="13.8646%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6146%" y="405" width="0.0796%" height="15" fill="rgb(252,149,13)" fg:x="171" fg:w="1"/><text x="13.8646%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.6146%" y="389" width="0.0796%" height="15" fill="rgb(232,81,48)" fg:x="171" fg:w="1"/><text x="13.8646%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.6146%" y="373" width="0.0796%" height="15" fill="rgb(222,144,2)" fg:x="171" fg:w="1"/><text x="13.8646%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.6146%" y="357" width="0.0796%" height="15" fill="rgb(216,81,32)" fg:x="171" fg:w="1"/><text x="13.8646%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.6146%" y="341" width="0.0796%" height="15" fill="rgb(244,78,51)" fg:x="171" fg:w="1"/><text x="13.8646%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.6146%" y="325" width="0.0796%" height="15" fill="rgb(217,66,21)" fg:x="171" fg:w="1"/><text x="13.8646%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6943%" y="485" width="0.0796%" height="15" fill="rgb(247,101,42)" fg:x="172" fg:w="1"/><text x="13.9443%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6943%" y="469" width="0.0796%" height="15" fill="rgb(227,81,39)" fg:x="172" fg:w="1"/><text x="13.9443%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6943%" y="453" width="0.0796%" height="15" fill="rgb(220,223,44)" fg:x="172" fg:w="1"/><text x="13.9443%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.7739%" y="485" width="0.0796%" height="15" fill="rgb(205,218,2)" fg:x="173" fg:w="1"/><text x="14.0239%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.8535%" y="405" width="0.0796%" height="15" fill="rgb(212,207,28)" fg:x="174" fg:w="1"/><text x="14.1035%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="13.6943%" y="517" width="0.3185%" height="15" fill="rgb(224,12,41)" fg:x="172" fg:w="4"/><text x="13.9443%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="13.6943%" y="501" width="0.3185%" height="15" fill="rgb(216,118,12)" fg:x="172" fg:w="4"/><text x="13.9443%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.8535%" y="485" width="0.1592%" height="15" fill="rgb(252,97,46)" fg:x="174" fg:w="2"/><text x="14.1035%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.8535%" y="469" width="0.1592%" height="15" fill="rgb(244,206,19)" fg:x="174" fg:w="2"/><text x="14.1035%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="13.8535%" y="453" width="0.1592%" height="15" fill="rgb(231,84,31)" fg:x="174" fg:w="2"/><text x="14.1035%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.8535%" y="437" width="0.1592%" height="15" fill="rgb(244,133,0)" fg:x="174" fg:w="2"/><text x="14.1035%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.8535%" y="421" width="0.1592%" height="15" fill="rgb(223,15,50)" fg:x="174" fg:w="2"/><text x="14.1035%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.9331%" y="405" width="0.0796%" height="15" fill="rgb(250,118,49)" fg:x="175" fg:w="1"/><text x="14.1831%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0127%" y="485" width="0.0796%" height="15" fill="rgb(248,25,38)" fg:x="176" fg:w="1"/><text x="14.2627%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0127%" y="469" width="0.0796%" height="15" fill="rgb(215,70,14)" fg:x="176" fg:w="1"/><text x="14.2627%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0127%" y="453" width="0.0796%" height="15" fill="rgb(215,28,15)" fg:x="176" fg:w="1"/><text x="14.2627%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0127%" y="437" width="0.0796%" height="15" fill="rgb(243,6,28)" fg:x="176" fg:w="1"/><text x="14.2627%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0127%" y="421" width="0.0796%" height="15" fill="rgb(222,130,1)" fg:x="176" fg:w="1"/><text x="14.2627%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.0127%" y="405" width="0.0796%" height="15" fill="rgb(236,166,44)" fg:x="176" fg:w="1"/><text x="14.2627%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.0127%" y="389" width="0.0796%" height="15" fill="rgb(221,108,14)" fg:x="176" fg:w="1"/><text x="14.2627%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.0127%" y="373" width="0.0796%" height="15" fill="rgb(252,3,45)" fg:x="176" fg:w="1"/><text x="14.2627%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.0127%" y="357" width="0.0796%" height="15" fill="rgb(237,68,30)" fg:x="176" fg:w="1"/><text x="14.2627%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.0127%" y="341" width="0.0796%" height="15" fill="rgb(211,79,22)" fg:x="176" fg:w="1"/><text x="14.2627%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.0127%" y="325" width="0.0796%" height="15" fill="rgb(252,185,21)" fg:x="176" fg:w="1"/><text x="14.2627%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.0127%" y="309" width="0.0796%" height="15" fill="rgb(225,189,26)" fg:x="176" fg:w="1"/><text x="14.2627%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.0127%" y="293" width="0.0796%" height="15" fill="rgb(241,30,40)" fg:x="176" fg:w="1"/><text x="14.2627%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.0127%" y="277" width="0.0796%" height="15" fill="rgb(235,215,44)" fg:x="176" fg:w="1"/><text x="14.2627%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0127%" y="261" width="0.0796%" height="15" fill="rgb(205,8,29)" fg:x="176" fg:w="1"/><text x="14.2627%" y="271.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="13.6943%" y="549" width="0.4777%" height="15" fill="rgb(241,137,42)" fg:x="172" fg:w="6"/><text x="13.9443%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="13.6943%" y="533" width="0.4777%" height="15" fill="rgb(237,155,2)" fg:x="172" fg:w="6"/><text x="13.9443%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="14.0127%" y="517" width="0.1592%" height="15" fill="rgb(245,29,42)" fg:x="176" fg:w="2"/><text x="14.2627%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.0127%" y="501" width="0.1592%" height="15" fill="rgb(234,101,35)" fg:x="176" fg:w="2"/><text x="14.2627%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0924%" y="485" width="0.0796%" height="15" fill="rgb(228,64,37)" fg:x="177" fg:w="1"/><text x="14.3424%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0924%" y="469" width="0.0796%" height="15" fill="rgb(217,214,36)" fg:x="177" fg:w="1"/><text x="14.3424%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.1720%" y="549" width="0.0796%" height="15" fill="rgb(243,70,3)" fg:x="178" fg:w="1"/><text x="14.4220%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="14.1720%" y="533" width="0.0796%" height="15" fill="rgb(253,158,52)" fg:x="178" fg:w="1"/><text x="14.4220%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.1720%" y="517" width="0.0796%" height="15" fill="rgb(234,111,54)" fg:x="178" fg:w="1"/><text x="14.4220%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="14.1720%" y="501" width="0.0796%" height="15" fill="rgb(217,70,32)" fg:x="178" fg:w="1"/><text x="14.4220%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="14.1720%" y="485" width="0.0796%" height="15" fill="rgb(234,18,33)" fg:x="178" fg:w="1"/><text x="14.4220%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.1720%" y="469" width="0.0796%" height="15" fill="rgb(234,12,49)" fg:x="178" fg:w="1"/><text x="14.4220%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1720%" y="453" width="0.0796%" height="15" fill="rgb(236,10,21)" fg:x="178" fg:w="1"/><text x="14.4220%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1720%" y="437" width="0.0796%" height="15" fill="rgb(248,182,45)" fg:x="178" fg:w="1"/><text x="14.4220%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="14.1720%" y="421" width="0.0796%" height="15" fill="rgb(217,95,36)" fg:x="178" fg:w="1"/><text x="14.4220%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3312%" y="469" width="0.0796%" height="15" fill="rgb(212,110,31)" fg:x="180" fg:w="1"/><text x="14.5812%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3312%" y="453" width="0.0796%" height="15" fill="rgb(206,32,53)" fg:x="180" fg:w="1"/><text x="14.5812%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3312%" y="437" width="0.0796%" height="15" fill="rgb(246,141,37)" fg:x="180" fg:w="1"/><text x="14.5812%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="14.3312%" y="533" width="0.1592%" height="15" fill="rgb(219,16,7)" fg:x="180" fg:w="2"/><text x="14.5812%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="14.3312%" y="517" width="0.1592%" height="15" fill="rgb(230,205,45)" fg:x="180" fg:w="2"/><text x="14.5812%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.3312%" y="501" width="0.1592%" height="15" fill="rgb(231,43,49)" fg:x="180" fg:w="2"/><text x="14.5812%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.3312%" y="485" width="0.1592%" height="15" fill="rgb(212,106,34)" fg:x="180" fg:w="2"/><text x="14.5812%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.4108%" y="469" width="0.0796%" height="15" fill="rgb(206,83,17)" fg:x="181" fg:w="1"/><text x="14.6608%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4108%" y="453" width="0.0796%" height="15" fill="rgb(244,154,49)" fg:x="181" fg:w="1"/><text x="14.6608%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.4108%" y="437" width="0.0796%" height="15" fill="rgb(244,149,49)" fg:x="181" fg:w="1"/><text x="14.6608%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4108%" y="421" width="0.0796%" height="15" fill="rgb(227,134,18)" fg:x="181" fg:w="1"/><text x="14.6608%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.4108%" y="405" width="0.0796%" height="15" fill="rgb(237,116,36)" fg:x="181" fg:w="1"/><text x="14.6608%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4108%" y="389" width="0.0796%" height="15" fill="rgb(205,129,40)" fg:x="181" fg:w="1"/><text x="14.6608%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.4108%" y="373" width="0.0796%" height="15" fill="rgb(236,178,4)" fg:x="181" fg:w="1"/><text x="14.6608%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.4108%" y="357" width="0.0796%" height="15" fill="rgb(251,76,53)" fg:x="181" fg:w="1"/><text x="14.6608%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="14.2516%" y="549" width="0.3185%" height="15" fill="rgb(242,92,40)" fg:x="179" fg:w="4"/><text x="14.5016%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="14.4904%" y="533" width="0.0796%" height="15" fill="rgb(209,45,30)" fg:x="182" fg:w="1"/><text x="14.7404%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.4904%" y="517" width="0.0796%" height="15" fill="rgb(218,157,36)" fg:x="182" fg:w="1"/><text x="14.7404%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="14.4904%" y="501" width="0.0796%" height="15" fill="rgb(222,186,16)" fg:x="182" fg:w="1"/><text x="14.7404%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="14.5701%" y="533" width="0.0796%" height="15" fill="rgb(254,72,35)" fg:x="183" fg:w="1"/><text x="14.8201%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="14.5701%" y="517" width="0.0796%" height="15" fill="rgb(224,25,35)" fg:x="183" fg:w="1"/><text x="14.8201%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (33 samples, 2.63%)</title><rect x="12.1019%" y="581" width="2.6274%" height="15" fill="rgb(206,135,52)" fg:x="152" fg:w="33"/><text x="12.3519%" y="591.50">pl..</text></g><g><title>plugins_core::tools::set_container (13 samples, 1.04%)</title><rect x="13.6943%" y="565" width="1.0350%" height="15" fill="rgb(229,174,47)" fg:x="172" fg:w="13"/><text x="13.9443%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="14.5701%" y="549" width="0.1592%" height="15" fill="rgb(242,184,21)" fg:x="183" fg:w="2"/><text x="14.8201%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.6497%" y="533" width="0.0796%" height="15" fill="rgb(213,22,45)" fg:x="184" fg:w="1"/><text x="14.8997%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="14.6497%" y="517" width="0.0796%" height="15" fill="rgb(237,81,54)" fg:x="184" fg:w="1"/><text x="14.8997%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.6497%" y="501" width="0.0796%" height="15" fill="rgb(248,177,18)" fg:x="184" fg:w="1"/><text x="14.8997%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="14.6497%" y="485" width="0.0796%" height="15" fill="rgb(254,31,16)" fg:x="184" fg:w="1"/><text x="14.8997%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.6497%" y="469" width="0.0796%" height="15" fill="rgb(235,20,31)" fg:x="184" fg:w="1"/><text x="14.8997%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7293%" y="565" width="0.0796%" height="15" fill="rgb(240,56,43)" fg:x="185" fg:w="1"/><text x="14.9793%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7293%" y="549" width="0.0796%" height="15" fill="rgb(237,197,51)" fg:x="185" fg:w="1"/><text x="14.9793%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.7293%" y="533" width="0.0796%" height="15" fill="rgb(241,162,44)" fg:x="185" fg:w="1"/><text x="14.9793%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.7293%" y="517" width="0.0796%" height="15" fill="rgb(224,23,20)" fg:x="185" fg:w="1"/><text x="14.9793%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.7293%" y="501" width="0.0796%" height="15" fill="rgb(250,109,34)" fg:x="185" fg:w="1"/><text x="14.9793%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7293%" y="485" width="0.0796%" height="15" fill="rgb(214,175,50)" fg:x="185" fg:w="1"/><text x="14.9793%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7293%" y="469" width="0.0796%" height="15" fill="rgb(213,182,5)" fg:x="185" fg:w="1"/><text x="14.9793%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.7293%" y="453" width="0.0796%" height="15" fill="rgb(209,199,19)" fg:x="185" fg:w="1"/><text x="14.9793%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.7293%" y="437" width="0.0796%" height="15" fill="rgb(236,224,42)" fg:x="185" fg:w="1"/><text x="14.9793%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.7293%" y="421" width="0.0796%" height="15" fill="rgb(246,226,29)" fg:x="185" fg:w="1"/><text x="14.9793%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.7293%" y="405" width="0.0796%" height="15" fill="rgb(227,223,11)" fg:x="185" fg:w="1"/><text x="14.9793%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7293%" y="389" width="0.0796%" height="15" fill="rgb(219,7,51)" fg:x="185" fg:w="1"/><text x="14.9793%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="14.8089%" y="533" width="0.0796%" height="15" fill="rgb(245,167,10)" fg:x="186" fg:w="1"/><text x="15.0589%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.8089%" y="517" width="0.0796%" height="15" fill="rgb(237,224,16)" fg:x="186" fg:w="1"/><text x="15.0589%" y="527.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.8089%" y="501" width="0.0796%" height="15" fill="rgb(226,132,13)" fg:x="186" fg:w="1"/><text x="15.0589%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.8089%" y="485" width="0.0796%" height="15" fill="rgb(214,140,3)" fg:x="186" fg:w="1"/><text x="15.0589%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.8089%" y="469" width="0.0796%" height="15" fill="rgb(221,177,4)" fg:x="186" fg:w="1"/><text x="15.0589%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.8089%" y="453" width="0.0796%" height="15" fill="rgb(238,139,3)" fg:x="186" fg:w="1"/><text x="15.0589%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="14.8089%" y="437" width="0.0796%" height="15" fill="rgb(216,17,39)" fg:x="186" fg:w="1"/><text x="15.0589%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="14.8089%" y="549" width="0.1592%" height="15" fill="rgb(238,120,9)" fg:x="186" fg:w="2"/><text x="15.0589%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.8885%" y="533" width="0.0796%" height="15" fill="rgb(244,92,53)" fg:x="187" fg:w="1"/><text x="15.1385%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="14.8885%" y="517" width="0.0796%" height="15" fill="rgb(224,148,33)" fg:x="187" fg:w="1"/><text x="15.1385%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.8885%" y="501" width="0.0796%" height="15" fill="rgb(243,6,36)" fg:x="187" fg:w="1"/><text x="15.1385%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.8885%" y="485" width="0.0796%" height="15" fill="rgb(230,102,11)" fg:x="187" fg:w="1"/><text x="15.1385%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9682%" y="469" width="0.0796%" height="15" fill="rgb(234,148,36)" fg:x="188" fg:w="1"/><text x="15.2182%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9682%" y="453" width="0.0796%" height="15" fill="rgb(251,153,25)" fg:x="188" fg:w="1"/><text x="15.2182%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9682%" y="437" width="0.0796%" height="15" fill="rgb(215,129,8)" fg:x="188" fg:w="1"/><text x="15.2182%" y="447.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="14.9682%" y="501" width="0.1592%" height="15" fill="rgb(224,128,35)" fg:x="188" fg:w="2"/><text x="15.2182%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.9682%" y="485" width="0.1592%" height="15" fill="rgb(237,56,52)" fg:x="188" fg:w="2"/><text x="15.2182%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.0478%" y="469" width="0.0796%" height="15" fill="rgb(234,213,19)" fg:x="189" fg:w="1"/><text x="15.2978%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.0478%" y="453" width="0.0796%" height="15" fill="rgb(252,82,23)" fg:x="189" fg:w="1"/><text x="15.2978%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.0478%" y="437" width="0.0796%" height="15" fill="rgb(254,201,21)" fg:x="189" fg:w="1"/><text x="15.2978%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="14.9682%" y="533" width="0.2389%" height="15" fill="rgb(250,186,11)" fg:x="188" fg:w="3"/><text x="15.2182%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="14.9682%" y="517" width="0.2389%" height="15" fill="rgb(211,174,5)" fg:x="188" fg:w="3"/><text x="15.2182%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.1274%" y="501" width="0.0796%" height="15" fill="rgb(214,121,10)" fg:x="190" fg:w="1"/><text x="15.3774%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.1274%" y="485" width="0.0796%" height="15" fill="rgb(241,66,2)" fg:x="190" fg:w="1"/><text x="15.3774%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1274%" y="469" width="0.0796%" height="15" fill="rgb(220,167,19)" fg:x="190" fg:w="1"/><text x="15.3774%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.1274%" y="453" width="0.0796%" height="15" fill="rgb(231,54,50)" fg:x="190" fg:w="1"/><text x="15.3774%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1274%" y="437" width="0.0796%" height="15" fill="rgb(239,217,53)" fg:x="190" fg:w="1"/><text x="15.3774%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.3662%" y="389" width="0.0796%" height="15" fill="rgb(248,8,0)" fg:x="193" fg:w="1"/><text x="15.6162%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.3662%" y="373" width="0.0796%" height="15" fill="rgb(229,118,37)" fg:x="193" fg:w="1"/><text x="15.6162%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3662%" y="357" width="0.0796%" height="15" fill="rgb(253,223,43)" fg:x="193" fg:w="1"/><text x="15.6162%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="14.9682%" y="549" width="0.5573%" height="15" fill="rgb(211,77,36)" fg:x="188" fg:w="7"/><text x="15.2182%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="15.2070%" y="533" width="0.3185%" height="15" fill="rgb(219,3,53)" fg:x="191" fg:w="4"/><text x="15.4570%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="15.2070%" y="517" width="0.3185%" height="15" fill="rgb(244,45,42)" fg:x="191" fg:w="4"/><text x="15.4570%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="15.2070%" y="501" width="0.3185%" height="15" fill="rgb(225,95,27)" fg:x="191" fg:w="4"/><text x="15.4570%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="15.2070%" y="485" width="0.3185%" height="15" fill="rgb(207,74,8)" fg:x="191" fg:w="4"/><text x="15.4570%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="15.2866%" y="469" width="0.2389%" height="15" fill="rgb(243,63,36)" fg:x="192" fg:w="3"/><text x="15.5366%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="15.2866%" y="453" width="0.2389%" height="15" fill="rgb(211,180,12)" fg:x="192" fg:w="3"/><text x="15.5366%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="15.2866%" y="437" width="0.2389%" height="15" fill="rgb(254,166,49)" fg:x="192" fg:w="3"/><text x="15.5366%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="15.2866%" y="421" width="0.2389%" height="15" fill="rgb(205,19,0)" fg:x="192" fg:w="3"/><text x="15.5366%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="15.3662%" y="405" width="0.1592%" height="15" fill="rgb(224,172,32)" fg:x="193" fg:w="2"/><text x="15.6162%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="15.4459%" y="389" width="0.0796%" height="15" fill="rgb(254,136,30)" fg:x="194" fg:w="1"/><text x="15.6959%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.5255%" y="533" width="0.0796%" height="15" fill="rgb(246,19,35)" fg:x="195" fg:w="1"/><text x="15.7755%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.5255%" y="517" width="0.0796%" height="15" fill="rgb(219,24,36)" fg:x="195" fg:w="1"/><text x="15.7755%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5255%" y="501" width="0.0796%" height="15" fill="rgb(251,55,1)" fg:x="195" fg:w="1"/><text x="15.7755%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.5255%" y="485" width="0.0796%" height="15" fill="rgb(218,117,39)" fg:x="195" fg:w="1"/><text x="15.7755%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5255%" y="469" width="0.0796%" height="15" fill="rgb(248,169,11)" fg:x="195" fg:w="1"/><text x="15.7755%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.5255%" y="453" width="0.0796%" height="15" fill="rgb(244,40,44)" fg:x="195" fg:w="1"/><text x="15.7755%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.6051%" y="501" width="0.1592%" height="15" fill="rgb(234,62,37)" fg:x="196" fg:w="2"/><text x="15.8551%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.6051%" y="485" width="0.1592%" height="15" fill="rgb(207,117,42)" fg:x="196" fg:w="2"/><text x="15.8551%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.6051%" y="469" width="0.1592%" height="15" fill="rgb(213,43,2)" fg:x="196" fg:w="2"/><text x="15.8551%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="15.6051%" y="453" width="0.1592%" height="15" fill="rgb(244,202,51)" fg:x="196" fg:w="2"/><text x="15.8551%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="15.5255%" y="549" width="0.3185%" height="15" fill="rgb(253,174,46)" fg:x="195" fg:w="4"/><text x="15.7755%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="15.6051%" y="533" width="0.2389%" height="15" fill="rgb(251,23,1)" fg:x="196" fg:w="3"/><text x="15.8551%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.6051%" y="517" width="0.2389%" height="15" fill="rgb(253,26,1)" fg:x="196" fg:w="3"/><text x="15.8551%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7643%" y="501" width="0.0796%" height="15" fill="rgb(216,89,31)" fg:x="198" fg:w="1"/><text x="16.0143%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.7643%" y="485" width="0.0796%" height="15" fill="rgb(209,109,5)" fg:x="198" fg:w="1"/><text x="16.0143%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7643%" y="469" width="0.0796%" height="15" fill="rgb(229,63,13)" fg:x="198" fg:w="1"/><text x="16.0143%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.7643%" y="453" width="0.0796%" height="15" fill="rgb(238,137,54)" fg:x="198" fg:w="1"/><text x="16.0143%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.9236%" y="485" width="0.0796%" height="15" fill="rgb(228,1,9)" fg:x="200" fg:w="1"/><text x="16.1736%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.9236%" y="469" width="0.0796%" height="15" fill="rgb(249,120,48)" fg:x="200" fg:w="1"/><text x="16.1736%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.9236%" y="453" width="0.0796%" height="15" fill="rgb(209,72,36)" fg:x="200" fg:w="1"/><text x="16.1736%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="15.8439%" y="517" width="0.3185%" height="15" fill="rgb(247,98,49)" fg:x="199" fg:w="4"/><text x="16.0939%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="15.8439%" y="501" width="0.3185%" height="15" fill="rgb(233,75,36)" fg:x="199" fg:w="4"/><text x="16.0939%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.0032%" y="485" width="0.1592%" height="15" fill="rgb(225,14,24)" fg:x="201" fg:w="2"/><text x="16.2532%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.0032%" y="469" width="0.1592%" height="15" fill="rgb(237,193,20)" fg:x="201" fg:w="2"/><text x="16.2532%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="16.0032%" y="453" width="0.1592%" height="15" fill="rgb(239,122,19)" fg:x="201" fg:w="2"/><text x="16.2532%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.0828%" y="437" width="0.0796%" height="15" fill="rgb(231,220,10)" fg:x="202" fg:w="1"/><text x="16.3328%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0828%" y="421" width="0.0796%" height="15" fill="rgb(220,66,15)" fg:x="202" fg:w="1"/><text x="16.3328%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1624%" y="485" width="0.0796%" height="15" fill="rgb(215,171,52)" fg:x="203" fg:w="1"/><text x="16.4124%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1624%" y="469" width="0.0796%" height="15" fill="rgb(241,169,50)" fg:x="203" fg:w="1"/><text x="16.4124%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1624%" y="453" width="0.0796%" height="15" fill="rgb(236,189,0)" fg:x="203" fg:w="1"/><text x="16.4124%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2420%" y="485" width="0.0796%" height="15" fill="rgb(217,147,20)" fg:x="204" fg:w="1"/><text x="16.4920%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.2420%" y="469" width="0.0796%" height="15" fill="rgb(206,188,39)" fg:x="204" fg:w="1"/><text x="16.4920%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2420%" y="453" width="0.0796%" height="15" fill="rgb(227,118,25)" fg:x="204" fg:w="1"/><text x="16.4920%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2420%" y="437" width="0.0796%" height="15" fill="rgb(248,171,40)" fg:x="204" fg:w="1"/><text x="16.4920%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.2420%" y="421" width="0.0796%" height="15" fill="rgb(251,90,54)" fg:x="204" fg:w="1"/><text x="16.4920%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.3217%" y="421" width="0.0796%" height="15" fill="rgb(234,11,46)" fg:x="205" fg:w="1"/><text x="16.5717%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.3217%" y="405" width="0.0796%" height="15" fill="rgb(229,134,13)" fg:x="205" fg:w="1"/><text x="16.5717%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (21 samples, 1.67%)</title><rect x="14.8089%" y="565" width="1.6720%" height="15" fill="rgb(223,129,3)" fg:x="186" fg:w="21"/><text x="15.0589%" y="575.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (8 samples, 0.64%)</title><rect x="15.8439%" y="549" width="0.6369%" height="15" fill="rgb(221,124,13)" fg:x="199" fg:w="8"/><text x="16.0939%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="15.8439%" y="533" width="0.6369%" height="15" fill="rgb(234,3,18)" fg:x="199" fg:w="8"/><text x="16.0939%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="16.1624%" y="517" width="0.3185%" height="15" fill="rgb(249,199,20)" fg:x="203" fg:w="4"/><text x="16.4124%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="16.1624%" y="501" width="0.3185%" height="15" fill="rgb(224,134,6)" fg:x="203" fg:w="4"/><text x="16.4124%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.3217%" y="485" width="0.1592%" height="15" fill="rgb(254,83,26)" fg:x="205" fg:w="2"/><text x="16.5717%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.3217%" y="469" width="0.1592%" height="15" fill="rgb(217,88,9)" fg:x="205" fg:w="2"/><text x="16.5717%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="16.3217%" y="453" width="0.1592%" height="15" fill="rgb(225,73,2)" fg:x="205" fg:w="2"/><text x="16.5717%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.3217%" y="437" width="0.1592%" height="15" fill="rgb(226,44,39)" fg:x="205" fg:w="2"/><text x="16.5717%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.4013%" y="421" width="0.0796%" height="15" fill="rgb(228,53,17)" fg:x="206" fg:w="1"/><text x="16.6513%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4013%" y="405" width="0.0796%" height="15" fill="rgb(212,27,27)" fg:x="206" fg:w="1"/><text x="16.6513%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (23 samples, 1.83%)</title><rect x="14.7293%" y="581" width="1.8312%" height="15" fill="rgb(241,50,6)" fg:x="185" fg:w="23"/><text x="14.9793%" y="591.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.4809%" y="565" width="0.0796%" height="15" fill="rgb(225,28,51)" fg:x="207" fg:w="1"/><text x="16.7309%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.4809%" y="549" width="0.0796%" height="15" fill="rgb(215,33,16)" fg:x="207" fg:w="1"/><text x="16.7309%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4809%" y="533" width="0.0796%" height="15" fill="rgb(243,40,39)" fg:x="207" fg:w="1"/><text x="16.7309%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4809%" y="517" width="0.0796%" height="15" fill="rgb(225,11,42)" fg:x="207" fg:w="1"/><text x="16.7309%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4809%" y="501" width="0.0796%" height="15" fill="rgb(241,220,38)" fg:x="207" fg:w="1"/><text x="16.7309%" y="511.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="16.5605%" y="549" width="0.0796%" height="15" fill="rgb(244,52,35)" fg:x="208" fg:w="1"/><text x="16.8105%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.5605%" y="533" width="0.0796%" height="15" fill="rgb(246,42,46)" fg:x="208" fg:w="1"/><text x="16.8105%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.5605%" y="517" width="0.0796%" height="15" fill="rgb(205,184,13)" fg:x="208" fg:w="1"/><text x="16.8105%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.5605%" y="501" width="0.0796%" height="15" fill="rgb(209,48,36)" fg:x="208" fg:w="1"/><text x="16.8105%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.5605%" y="485" width="0.0796%" height="15" fill="rgb(244,34,51)" fg:x="208" fg:w="1"/><text x="16.8105%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="16.5605%" y="469" width="0.0796%" height="15" fill="rgb(221,107,33)" fg:x="208" fg:w="1"/><text x="16.8105%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5605%" y="453" width="0.0796%" height="15" fill="rgb(224,203,12)" fg:x="208" fg:w="1"/><text x="16.8105%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="16.5605%" y="565" width="0.1592%" height="15" fill="rgb(230,215,18)" fg:x="208" fg:w="2"/><text x="16.8105%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.6401%" y="549" width="0.0796%" height="15" fill="rgb(206,185,35)" fg:x="209" fg:w="1"/><text x="16.8901%" y="559.50"></text></g><g><title>replies::&lt;impl core::convert::From&lt;replies::Json&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="16.6401%" y="533" width="0.0796%" height="15" fill="rgb(228,140,34)" fg:x="209" fg:w="1"/><text x="16.8901%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7197%" y="437" width="0.0796%" height="15" fill="rgb(208,93,13)" fg:x="210" fg:w="1"/><text x="16.9697%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7197%" y="421" width="0.0796%" height="15" fill="rgb(221,193,39)" fg:x="210" fg:w="1"/><text x="16.9697%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7197%" y="405" width="0.0796%" height="15" fill="rgb(241,132,34)" fg:x="210" fg:w="1"/><text x="16.9697%" y="415.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="16.7197%" y="501" width="0.1592%" height="15" fill="rgb(221,141,10)" fg:x="210" fg:w="2"/><text x="16.9697%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="16.7197%" y="485" width="0.1592%" height="15" fill="rgb(226,90,31)" fg:x="210" fg:w="2"/><text x="16.9697%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="16.7197%" y="469" width="0.1592%" height="15" fill="rgb(243,75,5)" fg:x="210" fg:w="2"/><text x="16.9697%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.7197%" y="453" width="0.1592%" height="15" fill="rgb(227,156,21)" fg:x="210" fg:w="2"/><text x="16.9697%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.7994%" y="437" width="0.0796%" height="15" fill="rgb(250,195,8)" fg:x="211" fg:w="1"/><text x="17.0494%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7994%" y="421" width="0.0796%" height="15" fill="rgb(220,134,5)" fg:x="211" fg:w="1"/><text x="17.0494%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7994%" y="405" width="0.0796%" height="15" fill="rgb(246,106,34)" fg:x="211" fg:w="1"/><text x="17.0494%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7994%" y="389" width="0.0796%" height="15" fill="rgb(205,1,4)" fg:x="211" fg:w="1"/><text x="17.0494%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="16.7197%" y="517" width="0.3185%" height="15" fill="rgb(224,151,29)" fg:x="210" fg:w="4"/><text x="16.9697%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.8790%" y="501" width="0.1592%" height="15" fill="rgb(251,196,0)" fg:x="212" fg:w="2"/><text x="17.1290%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.9586%" y="485" width="0.0796%" height="15" fill="rgb(212,127,0)" fg:x="213" fg:w="1"/><text x="17.2086%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="17.0382%" y="517" width="0.0796%" height="15" fill="rgb(236,71,53)" fg:x="214" fg:w="1"/><text x="17.2882%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.1178%" y="421" width="0.0796%" height="15" fill="rgb(227,99,0)" fg:x="215" fg:w="1"/><text x="17.3678%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="17.1178%" y="453" width="0.1592%" height="15" fill="rgb(239,89,21)" fg:x="215" fg:w="2"/><text x="17.3678%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.1178%" y="437" width="0.1592%" height="15" fill="rgb(243,122,19)" fg:x="215" fg:w="2"/><text x="17.3678%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="17.1975%" y="421" width="0.0796%" height="15" fill="rgb(229,192,45)" fg:x="216" fg:w="1"/><text x="17.4475%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.1975%" y="405" width="0.0796%" height="15" fill="rgb(235,165,35)" fg:x="216" fg:w="1"/><text x="17.4475%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.1975%" y="389" width="0.0796%" height="15" fill="rgb(253,202,0)" fg:x="216" fg:w="1"/><text x="17.4475%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="17.1178%" y="469" width="0.2389%" height="15" fill="rgb(235,51,20)" fg:x="215" fg:w="3"/><text x="17.3678%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.2771%" y="453" width="0.0796%" height="15" fill="rgb(218,95,46)" fg:x="217" fg:w="1"/><text x="17.5271%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.2771%" y="437" width="0.0796%" height="15" fill="rgb(212,81,10)" fg:x="217" fg:w="1"/><text x="17.5271%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="17.2771%" y="421" width="0.0796%" height="15" fill="rgb(240,59,0)" fg:x="217" fg:w="1"/><text x="17.5271%" y="431.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="17.3567%" y="421" width="0.0796%" height="15" fill="rgb(212,191,42)" fg:x="218" fg:w="1"/><text x="17.6067%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.3567%" y="405" width="0.0796%" height="15" fill="rgb(233,140,3)" fg:x="218" fg:w="1"/><text x="17.6067%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.3567%" y="389" width="0.0796%" height="15" fill="rgb(215,69,23)" fg:x="218" fg:w="1"/><text x="17.6067%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.3567%" y="373" width="0.0796%" height="15" fill="rgb(240,202,20)" fg:x="218" fg:w="1"/><text x="17.6067%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.3567%" y="357" width="0.0796%" height="15" fill="rgb(209,146,50)" fg:x="218" fg:w="1"/><text x="17.6067%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.3567%" y="341" width="0.0796%" height="15" fill="rgb(253,102,54)" fg:x="218" fg:w="1"/><text x="17.6067%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="17.3567%" y="453" width="0.1592%" height="15" fill="rgb(250,173,47)" fg:x="218" fg:w="2"/><text x="17.6067%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="17.3567%" y="437" width="0.1592%" height="15" fill="rgb(232,142,7)" fg:x="218" fg:w="2"/><text x="17.6067%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.4363%" y="421" width="0.0796%" height="15" fill="rgb(230,157,47)" fg:x="219" fg:w="1"/><text x="17.6863%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.4363%" y="405" width="0.0796%" height="15" fill="rgb(214,177,35)" fg:x="219" fg:w="1"/><text x="17.6863%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.4363%" y="389" width="0.0796%" height="15" fill="rgb(234,119,46)" fg:x="219" fg:w="1"/><text x="17.6863%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.4363%" y="373" width="0.0796%" height="15" fill="rgb(241,180,50)" fg:x="219" fg:w="1"/><text x="17.6863%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="17.3567%" y="469" width="0.3981%" height="15" fill="rgb(221,54,25)" fg:x="218" fg:w="5"/><text x="17.6067%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="17.5159%" y="453" width="0.2389%" height="15" fill="rgb(209,157,44)" fg:x="220" fg:w="3"/><text x="17.7659%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.5955%" y="437" width="0.1592%" height="15" fill="rgb(246,115,41)" fg:x="221" fg:w="2"/><text x="17.8455%" y="447.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="17.5955%" y="421" width="0.1592%" height="15" fill="rgb(229,86,1)" fg:x="221" fg:w="2"/><text x="17.8455%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.5955%" y="405" width="0.1592%" height="15" fill="rgb(240,108,53)" fg:x="221" fg:w="2"/><text x="17.8455%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.5955%" y="389" width="0.1592%" height="15" fill="rgb(227,134,2)" fg:x="221" fg:w="2"/><text x="17.8455%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.6752%" y="373" width="0.0796%" height="15" fill="rgb(213,129,25)" fg:x="222" fg:w="1"/><text x="17.9252%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6752%" y="357" width="0.0796%" height="15" fill="rgb(226,35,21)" fg:x="222" fg:w="1"/><text x="17.9252%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="17.7548%" y="453" width="0.0796%" height="15" fill="rgb(208,129,26)" fg:x="223" fg:w="1"/><text x="18.0048%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.7548%" y="437" width="0.0796%" height="15" fill="rgb(224,83,6)" fg:x="223" fg:w="1"/><text x="18.0048%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.7548%" y="421" width="0.0796%" height="15" fill="rgb(227,52,39)" fg:x="223" fg:w="1"/><text x="18.0048%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.7548%" y="405" width="0.0796%" height="15" fill="rgb(241,30,17)" fg:x="223" fg:w="1"/><text x="18.0048%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.7548%" y="389" width="0.0796%" height="15" fill="rgb(246,186,42)" fg:x="223" fg:w="1"/><text x="18.0048%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.7548%" y="373" width="0.0796%" height="15" fill="rgb(221,169,15)" fg:x="223" fg:w="1"/><text x="18.0048%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.7548%" y="357" width="0.0796%" height="15" fill="rgb(235,108,21)" fg:x="223" fg:w="1"/><text x="18.0048%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8344%" y="421" width="0.0796%" height="15" fill="rgb(219,148,30)" fg:x="224" fg:w="1"/><text x="18.0844%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8344%" y="405" width="0.0796%" height="15" fill="rgb(220,109,5)" fg:x="224" fg:w="1"/><text x="18.0844%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8344%" y="389" width="0.0796%" height="15" fill="rgb(213,203,48)" fg:x="224" fg:w="1"/><text x="18.0844%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8344%" y="373" width="0.0796%" height="15" fill="rgb(244,71,33)" fg:x="224" fg:w="1"/><text x="18.0844%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.8344%" y="357" width="0.0796%" height="15" fill="rgb(209,23,2)" fg:x="224" fg:w="1"/><text x="18.0844%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.8344%" y="341" width="0.0796%" height="15" fill="rgb(219,97,7)" fg:x="224" fg:w="1"/><text x="18.0844%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.8344%" y="325" width="0.0796%" height="15" fill="rgb(216,161,23)" fg:x="224" fg:w="1"/><text x="18.0844%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8344%" y="309" width="0.0796%" height="15" fill="rgb(207,45,42)" fg:x="224" fg:w="1"/><text x="18.0844%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8344%" y="293" width="0.0796%" height="15" fill="rgb(241,61,4)" fg:x="224" fg:w="1"/><text x="18.0844%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.8344%" y="277" width="0.0796%" height="15" fill="rgb(236,170,1)" fg:x="224" fg:w="1"/><text x="18.0844%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.8344%" y="261" width="0.0796%" height="15" fill="rgb(239,72,5)" fg:x="224" fg:w="1"/><text x="18.0844%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.8344%" y="245" width="0.0796%" height="15" fill="rgb(214,13,50)" fg:x="224" fg:w="1"/><text x="18.0844%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.8344%" y="229" width="0.0796%" height="15" fill="rgb(224,88,9)" fg:x="224" fg:w="1"/><text x="18.0844%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8344%" y="213" width="0.0796%" height="15" fill="rgb(238,192,34)" fg:x="224" fg:w="1"/><text x="18.0844%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="17.8344%" y="453" width="0.1592%" height="15" fill="rgb(217,203,50)" fg:x="224" fg:w="2"/><text x="18.0844%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.8344%" y="437" width="0.1592%" height="15" fill="rgb(241,123,32)" fg:x="224" fg:w="2"/><text x="18.0844%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.9140%" y="421" width="0.0796%" height="15" fill="rgb(248,151,39)" fg:x="225" fg:w="1"/><text x="18.1640%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="17.1178%" y="485" width="0.9554%" height="15" fill="rgb(208,89,6)" fg:x="215" fg:w="12"/><text x="17.3678%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="17.7548%" y="469" width="0.3185%" height="15" fill="rgb(254,43,26)" fg:x="223" fg:w="4"/><text x="18.0048%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="17.9936%" y="453" width="0.0796%" height="15" fill="rgb(216,158,13)" fg:x="226" fg:w="1"/><text x="18.2436%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.9936%" y="437" width="0.0796%" height="15" fill="rgb(212,47,37)" fg:x="226" fg:w="1"/><text x="18.2436%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.9936%" y="421" width="0.0796%" height="15" fill="rgb(254,16,10)" fg:x="226" fg:w="1"/><text x="18.2436%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.9936%" y="405" width="0.0796%" height="15" fill="rgb(223,228,16)" fg:x="226" fg:w="1"/><text x="18.2436%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="17.9936%" y="389" width="0.0796%" height="15" fill="rgb(249,108,50)" fg:x="226" fg:w="1"/><text x="18.2436%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.9936%" y="373" width="0.0796%" height="15" fill="rgb(208,220,5)" fg:x="226" fg:w="1"/><text x="18.2436%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.9936%" y="357" width="0.0796%" height="15" fill="rgb(217,89,48)" fg:x="226" fg:w="1"/><text x="18.2436%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.9936%" y="341" width="0.0796%" height="15" fill="rgb(212,113,41)" fg:x="226" fg:w="1"/><text x="18.2436%" y="351.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="17.9936%" y="325" width="0.0796%" height="15" fill="rgb(231,127,5)" fg:x="226" fg:w="1"/><text x="18.2436%" y="335.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="17.9936%" y="309" width="0.0796%" height="15" fill="rgb(217,141,17)" fg:x="226" fg:w="1"/><text x="18.2436%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.0732%" y="453" width="0.0796%" height="15" fill="rgb(245,125,54)" fg:x="227" fg:w="1"/><text x="18.3232%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.0732%" y="437" width="0.0796%" height="15" fill="rgb(248,125,3)" fg:x="227" fg:w="1"/><text x="18.3232%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (14 samples, 1.11%)</title><rect x="17.1178%" y="501" width="1.1146%" height="15" fill="rgb(236,119,51)" fg:x="215" fg:w="14"/><text x="17.3678%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.0732%" y="485" width="0.1592%" height="15" fill="rgb(239,99,8)" fg:x="227" fg:w="2"/><text x="18.3232%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.0732%" y="469" width="0.1592%" height="15" fill="rgb(224,228,4)" fg:x="227" fg:w="2"/><text x="18.3232%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.1529%" y="453" width="0.0796%" height="15" fill="rgb(220,131,45)" fg:x="228" fg:w="1"/><text x="18.4029%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1529%" y="437" width="0.0796%" height="15" fill="rgb(215,62,5)" fg:x="228" fg:w="1"/><text x="18.4029%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.1529%" y="421" width="0.0796%" height="15" fill="rgb(253,12,24)" fg:x="228" fg:w="1"/><text x="18.4029%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1529%" y="405" width="0.0796%" height="15" fill="rgb(248,120,50)" fg:x="228" fg:w="1"/><text x="18.4029%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.1529%" y="389" width="0.0796%" height="15" fill="rgb(245,194,10)" fg:x="228" fg:w="1"/><text x="18.4029%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1529%" y="373" width="0.0796%" height="15" fill="rgb(241,149,38)" fg:x="228" fg:w="1"/><text x="18.4029%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.2325%" y="485" width="0.0796%" height="15" fill="rgb(219,215,7)" fg:x="229" fg:w="1"/><text x="18.4825%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.3121%" y="453" width="0.0796%" height="15" fill="rgb(208,120,31)" fg:x="230" fg:w="1"/><text x="18.5621%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.3121%" y="437" width="0.0796%" height="15" fill="rgb(244,30,8)" fg:x="230" fg:w="1"/><text x="18.5621%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.3121%" y="421" width="0.0796%" height="15" fill="rgb(238,35,44)" fg:x="230" fg:w="1"/><text x="18.5621%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.3121%" y="405" width="0.0796%" height="15" fill="rgb(243,218,37)" fg:x="230" fg:w="1"/><text x="18.5621%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.3121%" y="389" width="0.0796%" height="15" fill="rgb(218,169,10)" fg:x="230" fg:w="1"/><text x="18.5621%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3121%" y="373" width="0.0796%" height="15" fill="rgb(221,144,10)" fg:x="230" fg:w="1"/><text x="18.5621%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3121%" y="357" width="0.0796%" height="15" fill="rgb(226,41,38)" fg:x="230" fg:w="1"/><text x="18.5621%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.3121%" y="341" width="0.0796%" height="15" fill="rgb(228,3,1)" fg:x="230" fg:w="1"/><text x="18.5621%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.3121%" y="325" width="0.0796%" height="15" fill="rgb(209,129,12)" fg:x="230" fg:w="1"/><text x="18.5621%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.3121%" y="309" width="0.0796%" height="15" fill="rgb(213,136,33)" fg:x="230" fg:w="1"/><text x="18.5621%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3121%" y="293" width="0.0796%" height="15" fill="rgb(209,181,29)" fg:x="230" fg:w="1"/><text x="18.5621%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3121%" y="277" width="0.0796%" height="15" fill="rgb(234,173,18)" fg:x="230" fg:w="1"/><text x="18.5621%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.3121%" y="261" width="0.0796%" height="15" fill="rgb(227,73,47)" fg:x="230" fg:w="1"/><text x="18.5621%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.3121%" y="245" width="0.0796%" height="15" fill="rgb(234,9,34)" fg:x="230" fg:w="1"/><text x="18.5621%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.3121%" y="229" width="0.0796%" height="15" fill="rgb(235,172,15)" fg:x="230" fg:w="1"/><text x="18.5621%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.3121%" y="213" width="0.0796%" height="15" fill="rgb(245,61,2)" fg:x="230" fg:w="1"/><text x="18.5621%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.3121%" y="197" width="0.0796%" height="15" fill="rgb(238,39,47)" fg:x="230" fg:w="1"/><text x="18.5621%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.3917%" y="437" width="0.0796%" height="15" fill="rgb(234,37,24)" fg:x="231" fg:w="1"/><text x="18.6417%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.4713%" y="421" width="0.0796%" height="15" fill="rgb(248,223,24)" fg:x="232" fg:w="1"/><text x="18.7213%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.4713%" y="405" width="0.0796%" height="15" fill="rgb(223,12,15)" fg:x="232" fg:w="1"/><text x="18.7213%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.4713%" y="389" width="0.0796%" height="15" fill="rgb(249,6,3)" fg:x="232" fg:w="1"/><text x="18.7213%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.4713%" y="373" width="0.0796%" height="15" fill="rgb(237,105,33)" fg:x="232" fg:w="1"/><text x="18.7213%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.4713%" y="357" width="0.0796%" height="15" fill="rgb(252,208,35)" fg:x="232" fg:w="1"/><text x="18.7213%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.4713%" y="341" width="0.0796%" height="15" fill="rgb(215,181,35)" fg:x="232" fg:w="1"/><text x="18.7213%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.4713%" y="325" width="0.0796%" height="15" fill="rgb(246,212,3)" fg:x="232" fg:w="1"/><text x="18.7213%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.4713%" y="309" width="0.0796%" height="15" fill="rgb(247,156,24)" fg:x="232" fg:w="1"/><text x="18.7213%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.4713%" y="293" width="0.0796%" height="15" fill="rgb(248,9,31)" fg:x="232" fg:w="1"/><text x="18.7213%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.4713%" y="277" width="0.0796%" height="15" fill="rgb(234,26,45)" fg:x="232" fg:w="1"/><text x="18.7213%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.4713%" y="261" width="0.0796%" height="15" fill="rgb(249,11,32)" fg:x="232" fg:w="1"/><text x="18.7213%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.4713%" y="245" width="0.0796%" height="15" fill="rgb(249,162,33)" fg:x="232" fg:w="1"/><text x="18.7213%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.4713%" y="229" width="0.0796%" height="15" fill="rgb(232,4,32)" fg:x="232" fg:w="1"/><text x="18.7213%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.4713%" y="213" width="0.0796%" height="15" fill="rgb(212,5,45)" fg:x="232" fg:w="1"/><text x="18.7213%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.5510%" y="357" width="0.0796%" height="15" fill="rgb(227,95,13)" fg:x="233" fg:w="1"/><text x="18.8010%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.5510%" y="341" width="0.0796%" height="15" fill="rgb(223,205,10)" fg:x="233" fg:w="1"/><text x="18.8010%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="18.3121%" y="485" width="0.3981%" height="15" fill="rgb(222,178,8)" fg:x="230" fg:w="5"/><text x="18.5621%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="18.3121%" y="469" width="0.3981%" height="15" fill="rgb(216,13,22)" fg:x="230" fg:w="5"/><text x="18.5621%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="18.3917%" y="453" width="0.3185%" height="15" fill="rgb(240,167,12)" fg:x="231" fg:w="4"/><text x="18.6417%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.4713%" y="437" width="0.2389%" height="15" fill="rgb(235,68,35)" fg:x="232" fg:w="3"/><text x="18.7213%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.5510%" y="421" width="0.1592%" height="15" fill="rgb(253,40,27)" fg:x="233" fg:w="2"/><text x="18.8010%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.5510%" y="405" width="0.1592%" height="15" fill="rgb(214,19,28)" fg:x="233" fg:w="2"/><text x="18.8010%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="18.5510%" y="389" width="0.1592%" height="15" fill="rgb(210,167,45)" fg:x="233" fg:w="2"/><text x="18.8010%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.5510%" y="373" width="0.1592%" height="15" fill="rgb(232,97,40)" fg:x="233" fg:w="2"/><text x="18.8010%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.6306%" y="357" width="0.0796%" height="15" fill="rgb(250,35,23)" fg:x="234" fg:w="1"/><text x="18.8806%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6306%" y="341" width="0.0796%" height="15" fill="rgb(248,47,53)" fg:x="234" fg:w="1"/><text x="18.8806%" y="351.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="18.7102%" y="453" width="0.0796%" height="15" fill="rgb(226,58,50)" fg:x="235" fg:w="1"/><text x="18.9602%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="18.7102%" y="485" width="0.1592%" height="15" fill="rgb(217,105,26)" fg:x="235" fg:w="2"/><text x="18.9602%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.7102%" y="469" width="0.1592%" height="15" fill="rgb(208,64,1)" fg:x="235" fg:w="2"/><text x="18.9602%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.7898%" y="453" width="0.0796%" height="15" fill="rgb(214,80,1)" fg:x="236" fg:w="1"/><text x="19.0398%" y="463.50"></text></g><g><title>plugins_core::build::Build::leads_to (23 samples, 1.83%)</title><rect x="17.1178%" y="517" width="1.8312%" height="15" fill="rgb(206,175,26)" fg:x="215" fg:w="23"/><text x="17.3678%" y="527.50">p..</text></g><g><title>plugins_core::tools::leads_to (9 samples, 0.72%)</title><rect x="18.2325%" y="501" width="0.7166%" height="15" fill="rgb(235,156,37)" fg:x="229" fg:w="9"/><text x="18.4825%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.8694%" y="485" width="0.0796%" height="15" fill="rgb(213,100,9)" fg:x="237" fg:w="1"/><text x="19.1194%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="18.8694%" y="469" width="0.0796%" height="15" fill="rgb(241,15,13)" fg:x="237" fg:w="1"/><text x="19.1194%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.8694%" y="453" width="0.0796%" height="15" fill="rgb(205,97,43)" fg:x="237" fg:w="1"/><text x="19.1194%" y="463.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="18.8694%" y="437" width="0.0796%" height="15" fill="rgb(216,106,32)" fg:x="237" fg:w="1"/><text x="19.1194%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.8694%" y="421" width="0.0796%" height="15" fill="rgb(226,200,8)" fg:x="237" fg:w="1"/><text x="19.1194%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8694%" y="405" width="0.0796%" height="15" fill="rgb(244,54,29)" fg:x="237" fg:w="1"/><text x="19.1194%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (29 samples, 2.31%)</title><rect x="16.7197%" y="565" width="2.3089%" height="15" fill="rgb(252,169,12)" fg:x="210" fg:w="29"/><text x="16.9697%" y="575.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 2.31%)</title><rect x="16.7197%" y="549" width="2.3089%" height="15" fill="rgb(231,199,11)" fg:x="210" fg:w="29"/><text x="16.9697%" y="559.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (29 samples, 2.31%)</title><rect x="16.7197%" y="533" width="2.3089%" height="15" fill="rgb(233,191,18)" fg:x="210" fg:w="29"/><text x="16.9697%" y="543.50">p..</text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="18.9490%" y="517" width="0.0796%" height="15" fill="rgb(215,83,47)" fg:x="238" fg:w="1"/><text x="19.1990%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="18.9490%" y="501" width="0.0796%" height="15" fill="rgb(251,67,19)" fg:x="238" fg:w="1"/><text x="19.1990%" y="511.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="18.9490%" y="485" width="0.0796%" height="15" fill="rgb(240,7,20)" fg:x="238" fg:w="1"/><text x="19.1990%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (3 samples, 0.24%)</title><rect x="19.0287%" y="565" width="0.2389%" height="15" fill="rgb(210,150,26)" fg:x="239" fg:w="3"/><text x="19.2787%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="19.0287%" y="549" width="0.2389%" height="15" fill="rgb(228,75,42)" fg:x="239" fg:w="3"/><text x="19.2787%" y="559.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="19.0287%" y="533" width="0.2389%" height="15" fill="rgb(237,134,48)" fg:x="239" fg:w="3"/><text x="19.2787%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.2675%" y="533" width="0.0796%" height="15" fill="rgb(205,80,50)" fg:x="242" fg:w="1"/><text x="19.5175%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="19.2675%" y="549" width="0.2389%" height="15" fill="rgb(217,74,48)" fg:x="242" fg:w="3"/><text x="19.5175%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.3471%" y="533" width="0.1592%" height="15" fill="rgb(205,82,50)" fg:x="243" fg:w="2"/><text x="19.5971%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4268%" y="517" width="0.0796%" height="15" fill="rgb(228,1,33)" fg:x="244" fg:w="1"/><text x="19.6768%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="19.4268%" y="501" width="0.0796%" height="15" fill="rgb(214,50,23)" fg:x="244" fg:w="1"/><text x="19.6768%" y="511.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="19.5860%" y="533" width="0.0796%" height="15" fill="rgb(210,62,9)" fg:x="246" fg:w="1"/><text x="19.8360%" y="543.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="19.5860%" y="517" width="0.0796%" height="15" fill="rgb(210,104,37)" fg:x="246" fg:w="1"/><text x="19.8360%" y="527.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="19.5860%" y="501" width="0.0796%" height="15" fill="rgb(232,104,43)" fg:x="246" fg:w="1"/><text x="19.8360%" y="511.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="19.5860%" y="485" width="0.0796%" height="15" fill="rgb(244,52,6)" fg:x="246" fg:w="1"/><text x="19.8360%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="19.5860%" y="469" width="0.0796%" height="15" fill="rgb(211,174,52)" fg:x="246" fg:w="1"/><text x="19.8360%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="19.5860%" y="453" width="0.0796%" height="15" fill="rgb(229,48,4)" fg:x="246" fg:w="1"/><text x="19.8360%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="19.5860%" y="437" width="0.0796%" height="15" fill="rgb(205,155,16)" fg:x="246" fg:w="1"/><text x="19.8360%" y="447.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="19.5860%" y="421" width="0.0796%" height="15" fill="rgb(211,141,53)" fg:x="246" fg:w="1"/><text x="19.8360%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="19.6656%" y="501" width="0.0796%" height="15" fill="rgb(240,148,11)" fg:x="247" fg:w="1"/><text x="19.9156%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="19.6656%" y="485" width="0.0796%" height="15" fill="rgb(214,45,23)" fg:x="247" fg:w="1"/><text x="19.9156%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.6656%" y="469" width="0.0796%" height="15" fill="rgb(248,74,26)" fg:x="247" fg:w="1"/><text x="19.9156%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="19.8248%" y="469" width="0.0796%" height="15" fill="rgb(218,121,16)" fg:x="249" fg:w="1"/><text x="20.0748%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.8248%" y="453" width="0.0796%" height="15" fill="rgb(218,10,47)" fg:x="249" fg:w="1"/><text x="20.0748%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.8248%" y="437" width="0.0796%" height="15" fill="rgb(227,99,14)" fg:x="249" fg:w="1"/><text x="20.0748%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.8248%" y="421" width="0.0796%" height="15" fill="rgb(229,83,46)" fg:x="249" fg:w="1"/><text x="20.0748%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.8248%" y="405" width="0.0796%" height="15" fill="rgb(228,25,1)" fg:x="249" fg:w="1"/><text x="20.0748%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.8248%" y="389" width="0.0796%" height="15" fill="rgb(252,190,15)" fg:x="249" fg:w="1"/><text x="20.0748%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.8248%" y="373" width="0.0796%" height="15" fill="rgb(213,103,51)" fg:x="249" fg:w="1"/><text x="20.0748%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.8248%" y="357" width="0.0796%" height="15" fill="rgb(220,38,44)" fg:x="249" fg:w="1"/><text x="20.0748%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="19.7452%" y="501" width="0.2389%" height="15" fill="rgb(210,45,26)" fg:x="248" fg:w="3"/><text x="19.9952%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="19.7452%" y="485" width="0.2389%" height="15" fill="rgb(205,95,48)" fg:x="248" fg:w="3"/><text x="19.9952%" y="495.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="19.9045%" y="469" width="0.0796%" height="15" fill="rgb(225,179,37)" fg:x="250" fg:w="1"/><text x="20.1545%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9045%" y="453" width="0.0796%" height="15" fill="rgb(230,209,3)" fg:x="250" fg:w="1"/><text x="20.1545%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.9841%" y="373" width="0.0796%" height="15" fill="rgb(248,12,46)" fg:x="251" fg:w="1"/><text x="20.2341%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="19.9841%" y="437" width="0.1592%" height="15" fill="rgb(234,18,0)" fg:x="251" fg:w="2"/><text x="20.2341%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.9841%" y="421" width="0.1592%" height="15" fill="rgb(238,197,14)" fg:x="251" fg:w="2"/><text x="20.2341%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.9841%" y="405" width="0.1592%" height="15" fill="rgb(251,162,48)" fg:x="251" fg:w="2"/><text x="20.2341%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="19.9841%" y="389" width="0.1592%" height="15" fill="rgb(237,73,42)" fg:x="251" fg:w="2"/><text x="20.2341%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="20.0637%" y="373" width="0.0796%" height="15" fill="rgb(211,108,8)" fg:x="252" fg:w="1"/><text x="20.3137%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="20.1433%" y="421" width="0.0796%" height="15" fill="rgb(213,45,22)" fg:x="253" fg:w="1"/><text x="20.3933%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.5414%" y="373" width="0.0796%" height="15" fill="rgb(252,154,5)" fg:x="258" fg:w="1"/><text x="20.7914%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.5414%" y="357" width="0.0796%" height="15" fill="rgb(221,79,52)" fg:x="258" fg:w="1"/><text x="20.7914%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.5414%" y="341" width="0.0796%" height="15" fill="rgb(229,220,36)" fg:x="258" fg:w="1"/><text x="20.7914%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.5414%" y="325" width="0.0796%" height="15" fill="rgb(211,17,16)" fg:x="258" fg:w="1"/><text x="20.7914%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="20.5414%" y="405" width="0.2389%" height="15" fill="rgb(222,55,31)" fg:x="258" fg:w="3"/><text x="20.7914%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="20.5414%" y="389" width="0.2389%" height="15" fill="rgb(221,221,31)" fg:x="258" fg:w="3"/><text x="20.7914%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.6210%" y="373" width="0.1592%" height="15" fill="rgb(227,168,26)" fg:x="259" fg:w="2"/><text x="20.8710%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.7006%" y="357" width="0.0796%" height="15" fill="rgb(224,139,9)" fg:x="260" fg:w="1"/><text x="20.9506%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="20.7006%" y="341" width="0.0796%" height="15" fill="rgb(254,172,0)" fg:x="260" fg:w="1"/><text x="20.9506%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="20.7803%" y="405" width="0.5573%" height="15" fill="rgb(235,203,1)" fg:x="261" fg:w="7"/><text x="21.0303%" y="415.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="20.9395%" y="389" width="0.3981%" height="15" fill="rgb(216,205,24)" fg:x="263" fg:w="5"/><text x="21.1895%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.1783%" y="373" width="0.1592%" height="15" fill="rgb(233,24,6)" fg:x="266" fg:w="2"/><text x="21.4283%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.1783%" y="357" width="0.1592%" height="15" fill="rgb(244,110,9)" fg:x="266" fg:w="2"/><text x="21.4283%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.3376%" y="389" width="0.0796%" height="15" fill="rgb(239,222,42)" fg:x="268" fg:w="1"/><text x="21.5876%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="21.4172%" y="389" width="0.0796%" height="15" fill="rgb(218,145,13)" fg:x="269" fg:w="1"/><text x="21.6672%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="21.5764%" y="373" width="0.0796%" height="15" fill="rgb(207,69,11)" fg:x="271" fg:w="1"/><text x="21.8264%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.5764%" y="357" width="0.0796%" height="15" fill="rgb(220,223,22)" fg:x="271" fg:w="1"/><text x="21.8264%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.5764%" y="341" width="0.0796%" height="15" fill="rgb(245,102,5)" fg:x="271" fg:w="1"/><text x="21.8264%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="21.4968%" y="389" width="0.2389%" height="15" fill="rgb(211,148,2)" fg:x="270" fg:w="3"/><text x="21.7468%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="21.6561%" y="373" width="0.0796%" height="15" fill="rgb(241,13,44)" fg:x="272" fg:w="1"/><text x="21.9061%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.6561%" y="357" width="0.0796%" height="15" fill="rgb(219,137,21)" fg:x="272" fg:w="1"/><text x="21.9061%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.6561%" y="341" width="0.0796%" height="15" fill="rgb(242,206,5)" fg:x="272" fg:w="1"/><text x="21.9061%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.6561%" y="325" width="0.0796%" height="15" fill="rgb(217,114,22)" fg:x="272" fg:w="1"/><text x="21.9061%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.8153%" y="357" width="0.1592%" height="15" fill="rgb(253,206,42)" fg:x="274" fg:w="2"/><text x="22.0653%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.91%)</title><rect x="20.2229%" y="421" width="1.9108%" height="15" fill="rgb(236,102,18)" fg:x="254" fg:w="24"/><text x="20.4729%" y="431.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="21.3376%" y="405" width="0.7962%" height="15" fill="rgb(208,59,49)" fg:x="268" fg:w="10"/><text x="21.5876%" y="415.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="21.7357%" y="389" width="0.3981%" height="15" fill="rgb(215,194,28)" fg:x="273" fg:w="5"/><text x="21.9857%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="21.8153%" y="373" width="0.3185%" height="15" fill="rgb(243,207,11)" fg:x="274" fg:w="4"/><text x="22.0653%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="21.9745%" y="357" width="0.1592%" height="15" fill="rgb(254,179,35)" fg:x="276" fg:w="2"/><text x="22.2245%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.31%)</title><rect x="19.9841%" y="453" width="2.3089%" height="15" fill="rgb(235,97,3)" fg:x="251" fg:w="29"/><text x="20.2341%" y="463.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.15%)</title><rect x="20.1433%" y="437" width="2.1497%" height="15" fill="rgb(215,155,33)" fg:x="253" fg:w="27"/><text x="20.3933%" y="447.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.1338%" y="421" width="0.1592%" height="15" fill="rgb(223,128,12)" fg:x="278" fg:w="2"/><text x="22.3838%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.2134%" y="405" width="0.0796%" height="15" fill="rgb(208,157,18)" fg:x="279" fg:w="1"/><text x="22.4634%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="22.2134%" y="389" width="0.0796%" height="15" fill="rgb(249,70,54)" fg:x="279" fg:w="1"/><text x="22.4634%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.2930%" y="421" width="0.0796%" height="15" fill="rgb(244,118,24)" fg:x="280" fg:w="1"/><text x="22.5430%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.3726%" y="421" width="0.0796%" height="15" fill="rgb(211,54,0)" fg:x="281" fg:w="1"/><text x="22.6226%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.6115%" y="405" width="0.0796%" height="15" fill="rgb(245,137,45)" fg:x="284" fg:w="1"/><text x="22.8615%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.6911%" y="405" width="0.0796%" height="15" fill="rgb(232,154,31)" fg:x="285" fg:w="1"/><text x="22.9411%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="22.7707%" y="389" width="0.1592%" height="15" fill="rgb(253,6,39)" fg:x="286" fg:w="2"/><text x="23.0207%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.9299%" y="389" width="0.0796%" height="15" fill="rgb(234,183,24)" fg:x="288" fg:w="1"/><text x="23.1799%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9299%" y="373" width="0.0796%" height="15" fill="rgb(252,84,40)" fg:x="288" fg:w="1"/><text x="23.1799%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="23.2484%" y="373" width="0.1592%" height="15" fill="rgb(224,65,2)" fg:x="292" fg:w="2"/><text x="23.4984%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="23.4076%" y="373" width="0.0796%" height="15" fill="rgb(229,38,24)" fg:x="294" fg:w="1"/><text x="23.6576%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.4076%" y="357" width="0.0796%" height="15" fill="rgb(218,131,50)" fg:x="294" fg:w="1"/><text x="23.6576%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.4076%" y="341" width="0.0796%" height="15" fill="rgb(233,106,18)" fg:x="294" fg:w="1"/><text x="23.6576%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.27%)</title><rect x="22.2930%" y="453" width="1.2739%" height="15" fill="rgb(220,216,11)" fg:x="280" fg:w="16"/><text x="22.5430%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.27%)</title><rect x="22.2930%" y="437" width="1.2739%" height="15" fill="rgb(251,100,45)" fg:x="280" fg:w="16"/><text x="22.5430%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.11%)</title><rect x="22.4522%" y="421" width="1.1146%" height="15" fill="rgb(235,143,32)" fg:x="282" fg:w="14"/><text x="22.7022%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="22.7707%" y="405" width="0.7962%" height="15" fill="rgb(248,124,34)" fg:x="286" fg:w="10"/><text x="23.0207%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="23.0096%" y="389" width="0.5573%" height="15" fill="rgb(225,221,4)" fg:x="289" fg:w="7"/><text x="23.2596%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.4873%" y="373" width="0.0796%" height="15" fill="rgb(242,27,43)" fg:x="295" fg:w="1"/><text x="23.7373%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.4873%" y="357" width="0.0796%" height="15" fill="rgb(227,54,8)" fg:x="295" fg:w="1"/><text x="23.7373%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="23.5669%" y="437" width="0.0796%" height="15" fill="rgb(253,139,49)" fg:x="296" fg:w="1"/><text x="23.8169%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7261%" y="405" width="0.0796%" height="15" fill="rgb(231,26,43)" fg:x="298" fg:w="1"/><text x="23.9761%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.8057%" y="405" width="0.1592%" height="15" fill="rgb(207,121,39)" fg:x="299" fg:w="2"/><text x="24.0557%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.9650%" y="405" width="0.0796%" height="15" fill="rgb(223,101,35)" fg:x="301" fg:w="1"/><text x="24.2150%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.9650%" y="389" width="0.0796%" height="15" fill="rgb(232,87,23)" fg:x="301" fg:w="1"/><text x="24.2150%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.1242%" y="373" width="0.1592%" height="15" fill="rgb(225,180,29)" fg:x="303" fg:w="2"/><text x="24.3742%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="24.0446%" y="405" width="0.3185%" height="15" fill="rgb(225,25,17)" fg:x="302" fg:w="4"/><text x="24.2946%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="24.0446%" y="389" width="0.3185%" height="15" fill="rgb(223,8,52)" fg:x="302" fg:w="4"/><text x="24.2946%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.2834%" y="373" width="0.0796%" height="15" fill="rgb(246,42,21)" fg:x="305" fg:w="1"/><text x="24.5334%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="25.0000%" y="357" width="0.3185%" height="15" fill="rgb(205,64,43)" fg:x="314" fg:w="4"/><text x="25.2500%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="25.0000%" y="341" width="0.3185%" height="15" fill="rgb(221,160,13)" fg:x="314" fg:w="4"/><text x="25.2500%" y="351.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="25.0000%" y="325" width="0.3185%" height="15" fill="rgb(239,58,35)" fg:x="314" fg:w="4"/><text x="25.2500%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.3185%" y="309" width="0.1592%" height="15" fill="rgb(251,26,40)" fg:x="318" fg:w="2"/><text x="25.5685%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.3981%" y="293" width="0.0796%" height="15" fill="rgb(247,0,4)" fg:x="319" fg:w="1"/><text x="25.6481%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.3981%" y="277" width="0.0796%" height="15" fill="rgb(218,130,10)" fg:x="319" fg:w="1"/><text x="25.6481%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="25.3185%" y="357" width="0.2389%" height="15" fill="rgb(239,32,7)" fg:x="318" fg:w="3"/><text x="25.5685%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="25.3185%" y="341" width="0.2389%" height="15" fill="rgb(210,192,24)" fg:x="318" fg:w="3"/><text x="25.5685%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="25.3185%" y="325" width="0.2389%" height="15" fill="rgb(226,212,17)" fg:x="318" fg:w="3"/><text x="25.5685%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="25.4777%" y="309" width="0.0796%" height="15" fill="rgb(219,201,28)" fg:x="320" fg:w="1"/><text x="25.7277%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4777%" y="293" width="0.0796%" height="15" fill="rgb(235,207,41)" fg:x="320" fg:w="1"/><text x="25.7277%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.5573%" y="341" width="0.0796%" height="15" fill="rgb(241,95,54)" fg:x="321" fg:w="1"/><text x="25.8073%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.7166%" y="325" width="0.0796%" height="15" fill="rgb(248,12,23)" fg:x="323" fg:w="1"/><text x="25.9666%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.7166%" y="309" width="0.0796%" height="15" fill="rgb(228,173,4)" fg:x="323" fg:w="1"/><text x="25.9666%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.8758%" y="293" width="0.0796%" height="15" fill="rgb(254,99,5)" fg:x="325" fg:w="1"/><text x="26.1258%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.8758%" y="277" width="0.0796%" height="15" fill="rgb(212,184,17)" fg:x="325" fg:w="1"/><text x="26.1258%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="25.6369%" y="341" width="0.3981%" height="15" fill="rgb(252,174,1)" fg:x="322" fg:w="5"/><text x="25.8869%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="25.7962%" y="325" width="0.2389%" height="15" fill="rgb(241,118,51)" fg:x="324" fg:w="3"/><text x="26.0462%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="25.8758%" y="309" width="0.1592%" height="15" fill="rgb(227,94,47)" fg:x="325" fg:w="2"/><text x="26.1258%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9554%" y="293" width="0.0796%" height="15" fill="rgb(229,104,2)" fg:x="326" fg:w="1"/><text x="26.2054%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.59%)</title><rect x="24.5223%" y="373" width="1.5924%" height="15" fill="rgb(219,28,31)" fg:x="308" fg:w="20"/><text x="24.7723%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="25.5573%" y="357" width="0.5573%" height="15" fill="rgb(233,109,36)" fg:x="321" fg:w="7"/><text x="25.8073%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.0350%" y="341" width="0.0796%" height="15" fill="rgb(246,88,11)" fg:x="327" fg:w="1"/><text x="26.2850%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 1.75%)</title><rect x="24.4427%" y="389" width="1.7516%" height="15" fill="rgb(209,212,17)" fg:x="307" fg:w="22"/><text x="24.6927%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="26.1146%" y="373" width="0.0796%" height="15" fill="rgb(243,59,29)" fg:x="328" fg:w="1"/><text x="26.3646%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1146%" y="357" width="0.0796%" height="15" fill="rgb(244,205,48)" fg:x="328" fg:w="1"/><text x="26.3646%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1943%" y="389" width="0.0796%" height="15" fill="rgb(227,30,6)" fg:x="329" fg:w="1"/><text x="26.4443%" y="399.50"></text></g><g><title>engine::session::Session::flush (90 samples, 7.17%)</title><rect x="19.2675%" y="565" width="7.1656%" height="15" fill="rgb(220,205,48)" fg:x="242" fg:w="90"/><text x="19.5175%" y="575.50">engine::se..</text></g><g><title>engine::session::Session::save_changes (87 samples, 6.93%)</title><rect x="19.5064%" y="549" width="6.9268%" height="15" fill="rgb(250,94,14)" fg:x="245" fg:w="87"/><text x="19.7564%" y="559.50">engine::s..</text></g><g><title>engine::session::state::State::close (85 samples, 6.77%)</title><rect x="19.6656%" y="533" width="6.7675%" height="15" fill="rgb(216,119,42)" fg:x="247" fg:w="85"/><text x="19.9156%" y="543.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (85 samples, 6.77%)</title><rect x="19.6656%" y="517" width="6.7675%" height="15" fill="rgb(232,155,0)" fg:x="247" fg:w="85"/><text x="19.9156%" y="527.50">engine::s..</text></g><g><title>core::iter::adapters::try_process (81 samples, 6.45%)</title><rect x="19.9841%" y="501" width="6.4490%" height="15" fill="rgb(212,24,32)" fg:x="251" fg:w="81"/><text x="20.2341%" y="511.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (81 samples, 6.45%)</title><rect x="19.9841%" y="485" width="6.4490%" height="15" fill="rgb(216,69,20)" fg:x="251" fg:w="81"/><text x="20.2341%" y="495.50">&lt;alloc::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (81 samples, 6.45%)</title><rect x="19.9841%" y="469" width="6.4490%" height="15" fill="rgb(229,73,31)" fg:x="251" fg:w="81"/><text x="20.2341%" y="479.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (36 samples, 2.87%)</title><rect x="23.5669%" y="453" width="2.8662%" height="15" fill="rgb(224,219,20)" fg:x="296" fg:w="36"/><text x="23.8169%" y="463.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (35 samples, 2.79%)</title><rect x="23.6465%" y="437" width="2.7866%" height="15" fill="rgb(215,146,41)" fg:x="297" fg:w="35"/><text x="23.8965%" y="447.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (34 samples, 2.71%)</title><rect x="23.7261%" y="421" width="2.7070%" height="15" fill="rgb(244,71,31)" fg:x="298" fg:w="34"/><text x="23.9761%" y="431.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (26 samples, 2.07%)</title><rect x="24.3631%" y="405" width="2.0701%" height="15" fill="rgb(224,24,11)" fg:x="306" fg:w="26"/><text x="24.6131%" y="415.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.2739%" y="389" width="0.1592%" height="15" fill="rgb(229,76,15)" fg:x="330" fg:w="2"/><text x="26.5239%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.2739%" y="373" width="0.1592%" height="15" fill="rgb(209,93,2)" fg:x="330" fg:w="2"/><text x="26.5239%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="26.3535%" y="357" width="0.0796%" height="15" fill="rgb(216,200,50)" fg:x="331" fg:w="1"/><text x="26.6035%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="26.4331%" y="533" width="0.0796%" height="15" fill="rgb(211,67,34)" fg:x="332" fg:w="1"/><text x="26.6831%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="26.4331%" y="517" width="0.0796%" height="15" fill="rgb(225,87,47)" fg:x="332" fg:w="1"/><text x="26.6831%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="26.5127%" y="485" width="0.0796%" height="15" fill="rgb(217,185,16)" fg:x="333" fg:w="1"/><text x="26.7627%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.5127%" y="469" width="0.0796%" height="15" fill="rgb(205,0,0)" fg:x="333" fg:w="1"/><text x="26.7627%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="26.5924%" y="485" width="0.0796%" height="15" fill="rgb(207,116,45)" fg:x="334" fg:w="1"/><text x="26.8424%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.6720%" y="469" width="0.0796%" height="15" fill="rgb(221,156,26)" fg:x="335" fg:w="1"/><text x="26.9220%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.6720%" y="453" width="0.0796%" height="15" fill="rgb(213,140,4)" fg:x="335" fg:w="1"/><text x="26.9220%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.6720%" y="437" width="0.0796%" height="15" fill="rgb(231,224,15)" fg:x="335" fg:w="1"/><text x="26.9220%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.6720%" y="421" width="0.0796%" height="15" fill="rgb(244,76,20)" fg:x="335" fg:w="1"/><text x="26.9220%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.6720%" y="405" width="0.0796%" height="15" fill="rgb(238,117,7)" fg:x="335" fg:w="1"/><text x="26.9220%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.6720%" y="389" width="0.0796%" height="15" fill="rgb(235,1,10)" fg:x="335" fg:w="1"/><text x="26.9220%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.6720%" y="373" width="0.0796%" height="15" fill="rgb(216,165,6)" fg:x="335" fg:w="1"/><text x="26.9220%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.6720%" y="357" width="0.0796%" height="15" fill="rgb(246,91,35)" fg:x="335" fg:w="1"/><text x="26.9220%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.6720%" y="341" width="0.0796%" height="15" fill="rgb(228,96,24)" fg:x="335" fg:w="1"/><text x="26.9220%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.6720%" y="325" width="0.0796%" height="15" fill="rgb(254,217,53)" fg:x="335" fg:w="1"/><text x="26.9220%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="26.5127%" y="501" width="0.3185%" height="15" fill="rgb(209,60,0)" fg:x="333" fg:w="4"/><text x="26.7627%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.6720%" y="485" width="0.1592%" height="15" fill="rgb(250,93,26)" fg:x="335" fg:w="2"/><text x="26.9220%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.7516%" y="469" width="0.0796%" height="15" fill="rgb(211,9,40)" fg:x="336" fg:w="1"/><text x="27.0016%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="26.5127%" y="533" width="0.4777%" height="15" fill="rgb(242,57,20)" fg:x="333" fg:w="6"/><text x="26.7627%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="26.5127%" y="517" width="0.4777%" height="15" fill="rgb(248,85,48)" fg:x="333" fg:w="6"/><text x="26.7627%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="26.8312%" y="501" width="0.1592%" height="15" fill="rgb(212,117,2)" fg:x="337" fg:w="2"/><text x="27.0812%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.8312%" y="485" width="0.1592%" height="15" fill="rgb(243,19,3)" fg:x="337" fg:w="2"/><text x="27.0812%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.8312%" y="469" width="0.1592%" height="15" fill="rgb(232,217,24)" fg:x="337" fg:w="2"/><text x="27.0812%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.8312%" y="453" width="0.1592%" height="15" fill="rgb(224,175,40)" fg:x="337" fg:w="2"/><text x="27.0812%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="26.8312%" y="437" width="0.1592%" height="15" fill="rgb(212,162,32)" fg:x="337" fg:w="2"/><text x="27.0812%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.8312%" y="421" width="0.1592%" height="15" fill="rgb(215,9,4)" fg:x="337" fg:w="2"/><text x="27.0812%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.9108%" y="405" width="0.0796%" height="15" fill="rgb(242,42,7)" fg:x="338" fg:w="1"/><text x="27.1608%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.9108%" y="389" width="0.0796%" height="15" fill="rgb(242,184,45)" fg:x="338" fg:w="1"/><text x="27.1608%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.9108%" y="373" width="0.0796%" height="15" fill="rgb(228,111,51)" fg:x="338" fg:w="1"/><text x="27.1608%" y="383.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="26.9904%" y="533" width="0.0796%" height="15" fill="rgb(236,147,17)" fg:x="339" fg:w="1"/><text x="27.2404%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="26.9904%" y="517" width="0.0796%" height="15" fill="rgb(210,75,22)" fg:x="339" fg:w="1"/><text x="27.2404%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.9904%" y="501" width="0.0796%" height="15" fill="rgb(217,159,45)" fg:x="339" fg:w="1"/><text x="27.2404%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="26.9904%" y="485" width="0.0796%" height="15" fill="rgb(245,165,53)" fg:x="339" fg:w="1"/><text x="27.2404%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0701%" y="485" width="0.0796%" height="15" fill="rgb(251,190,50)" fg:x="340" fg:w="1"/><text x="27.3201%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0701%" y="469" width="0.0796%" height="15" fill="rgb(208,203,29)" fg:x="340" fg:w="1"/><text x="27.3201%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.0701%" y="453" width="0.0796%" height="15" fill="rgb(207,209,35)" fg:x="340" fg:w="1"/><text x="27.3201%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.0701%" y="437" width="0.0796%" height="15" fill="rgb(230,144,49)" fg:x="340" fg:w="1"/><text x="27.3201%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.0701%" y="421" width="0.0796%" height="15" fill="rgb(229,31,6)" fg:x="340" fg:w="1"/><text x="27.3201%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="27.0701%" y="405" width="0.0796%" height="15" fill="rgb(251,129,24)" fg:x="340" fg:w="1"/><text x="27.3201%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="27.0701%" y="389" width="0.0796%" height="15" fill="rgb(235,105,15)" fg:x="340" fg:w="1"/><text x="27.3201%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.1497%" y="453" width="0.0796%" height="15" fill="rgb(216,52,43)" fg:x="341" fg:w="1"/><text x="27.3997%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="27.1497%" y="437" width="0.0796%" height="15" fill="rgb(238,144,41)" fg:x="341" fg:w="1"/><text x="27.3997%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.3089%" y="357" width="0.0796%" height="15" fill="rgb(243,63,9)" fg:x="343" fg:w="1"/><text x="27.5589%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="27.1497%" y="485" width="0.3185%" height="15" fill="rgb(246,208,1)" fg:x="341" fg:w="4"/><text x="27.3997%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="27.1497%" y="469" width="0.3185%" height="15" fill="rgb(233,182,18)" fg:x="341" fg:w="4"/><text x="27.3997%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.2293%" y="453" width="0.2389%" height="15" fill="rgb(242,224,8)" fg:x="342" fg:w="3"/><text x="27.4793%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.2293%" y="437" width="0.2389%" height="15" fill="rgb(243,54,37)" fg:x="342" fg:w="3"/><text x="27.4793%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="27.2293%" y="421" width="0.2389%" height="15" fill="rgb(233,192,12)" fg:x="342" fg:w="3"/><text x="27.4793%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.2293%" y="405" width="0.2389%" height="15" fill="rgb(251,192,53)" fg:x="342" fg:w="3"/><text x="27.4793%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.2293%" y="389" width="0.2389%" height="15" fill="rgb(246,141,26)" fg:x="342" fg:w="3"/><text x="27.4793%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.2293%" y="373" width="0.2389%" height="15" fill="rgb(239,195,19)" fg:x="342" fg:w="3"/><text x="27.4793%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.3885%" y="357" width="0.0796%" height="15" fill="rgb(241,16,39)" fg:x="344" fg:w="1"/><text x="27.6385%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.3885%" y="341" width="0.0796%" height="15" fill="rgb(223,13,53)" fg:x="344" fg:w="1"/><text x="27.6385%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.4682%" y="453" width="0.0796%" height="15" fill="rgb(214,227,0)" fg:x="345" fg:w="1"/><text x="27.7182%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.4682%" y="437" width="0.0796%" height="15" fill="rgb(228,103,26)" fg:x="345" fg:w="1"/><text x="27.7182%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.4682%" y="421" width="0.0796%" height="15" fill="rgb(254,177,53)" fg:x="345" fg:w="1"/><text x="27.7182%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.4682%" y="405" width="0.0796%" height="15" fill="rgb(208,201,34)" fg:x="345" fg:w="1"/><text x="27.7182%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.4682%" y="389" width="0.0796%" height="15" fill="rgb(212,39,5)" fg:x="345" fg:w="1"/><text x="27.7182%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="27.5478%" y="389" width="0.0796%" height="15" fill="rgb(246,117,3)" fg:x="346" fg:w="1"/><text x="27.7978%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.5478%" y="373" width="0.0796%" height="15" fill="rgb(244,118,39)" fg:x="346" fg:w="1"/><text x="27.7978%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.5478%" y="357" width="0.0796%" height="15" fill="rgb(241,64,10)" fg:x="346" fg:w="1"/><text x="27.7978%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="27.0701%" y="517" width="0.7166%" height="15" fill="rgb(229,39,44)" fg:x="340" fg:w="9"/><text x="27.3201%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="27.0701%" y="501" width="0.7166%" height="15" fill="rgb(230,226,3)" fg:x="340" fg:w="9"/><text x="27.3201%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="27.4682%" y="485" width="0.3185%" height="15" fill="rgb(222,13,42)" fg:x="345" fg:w="4"/><text x="27.7182%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="27.4682%" y="469" width="0.3185%" height="15" fill="rgb(247,180,54)" fg:x="345" fg:w="4"/><text x="27.7182%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.5478%" y="453" width="0.2389%" height="15" fill="rgb(205,96,16)" fg:x="346" fg:w="3"/><text x="27.7978%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.5478%" y="437" width="0.2389%" height="15" fill="rgb(205,100,21)" fg:x="346" fg:w="3"/><text x="27.7978%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="27.5478%" y="421" width="0.2389%" height="15" fill="rgb(248,51,4)" fg:x="346" fg:w="3"/><text x="27.7978%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.5478%" y="405" width="0.2389%" height="15" fill="rgb(217,197,30)" fg:x="346" fg:w="3"/><text x="27.7978%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.6274%" y="389" width="0.1592%" height="15" fill="rgb(240,179,40)" fg:x="347" fg:w="2"/><text x="27.8774%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.7070%" y="373" width="0.0796%" height="15" fill="rgb(212,185,35)" fg:x="348" fg:w="1"/><text x="27.9570%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.80%)</title><rect x="27.0701%" y="533" width="0.7962%" height="15" fill="rgb(251,222,31)" fg:x="340" fg:w="10"/><text x="27.3201%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="27.7866%" y="517" width="0.0796%" height="15" fill="rgb(208,140,36)" fg:x="349" fg:w="1"/><text x="28.0366%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.7866%" y="501" width="0.0796%" height="15" fill="rgb(220,148,1)" fg:x="349" fg:w="1"/><text x="28.0366%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.7866%" y="485" width="0.0796%" height="15" fill="rgb(254,4,28)" fg:x="349" fg:w="1"/><text x="28.0366%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="27.8662%" y="517" width="0.0796%" height="15" fill="rgb(222,185,44)" fg:x="350" fg:w="1"/><text x="28.1162%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.8662%" y="501" width="0.0796%" height="15" fill="rgb(215,74,39)" fg:x="350" fg:w="1"/><text x="28.1162%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.8662%" y="485" width="0.0796%" height="15" fill="rgb(247,86,4)" fg:x="350" fg:w="1"/><text x="28.1162%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (20 samples, 1.59%)</title><rect x="26.4331%" y="565" width="1.5924%" height="15" fill="rgb(231,105,32)" fg:x="332" fg:w="20"/><text x="26.6831%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (20 samples, 1.59%)</title><rect x="26.4331%" y="549" width="1.5924%" height="15" fill="rgb(222,65,35)" fg:x="332" fg:w="20"/><text x="26.6831%" y="559.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="27.8662%" y="533" width="0.1592%" height="15" fill="rgb(218,145,35)" fg:x="350" fg:w="2"/><text x="28.1162%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="27.9459%" y="517" width="0.0796%" height="15" fill="rgb(208,7,15)" fg:x="351" fg:w="1"/><text x="28.1959%" y="527.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="27.9459%" y="501" width="0.0796%" height="15" fill="rgb(209,83,13)" fg:x="351" fg:w="1"/><text x="28.1959%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.9459%" y="485" width="0.0796%" height="15" fill="rgb(218,3,10)" fg:x="351" fg:w="1"/><text x="28.1959%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="27.9459%" y="469" width="0.0796%" height="15" fill="rgb(211,219,4)" fg:x="351" fg:w="1"/><text x="28.1959%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="27.9459%" y="453" width="0.0796%" height="15" fill="rgb(228,194,12)" fg:x="351" fg:w="1"/><text x="28.1959%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="28.0255%" y="565" width="0.0796%" height="15" fill="rgb(210,175,7)" fg:x="352" fg:w="1"/><text x="28.2755%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="28.0255%" y="549" width="0.0796%" height="15" fill="rgb(243,132,6)" fg:x="352" fg:w="1"/><text x="28.2755%" y="559.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="28.0255%" y="533" width="0.0796%" height="15" fill="rgb(207,72,18)" fg:x="352" fg:w="1"/><text x="28.2755%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="28.0255%" y="517" width="0.0796%" height="15" fill="rgb(236,1,18)" fg:x="352" fg:w="1"/><text x="28.2755%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="28.0255%" y="501" width="0.0796%" height="15" fill="rgb(227,0,18)" fg:x="352" fg:w="1"/><text x="28.2755%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.0255%" y="485" width="0.0796%" height="15" fill="rgb(247,37,5)" fg:x="352" fg:w="1"/><text x="28.2755%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="28.0255%" y="469" width="0.0796%" height="15" fill="rgb(237,179,24)" fg:x="352" fg:w="1"/><text x="28.2755%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="28.0255%" y="453" width="0.0796%" height="15" fill="rgb(226,53,20)" fg:x="352" fg:w="1"/><text x="28.2755%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.0255%" y="437" width="0.0796%" height="15" fill="rgb(247,75,7)" fg:x="352" fg:w="1"/><text x="28.2755%" y="447.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="28.1051%" y="565" width="0.0796%" height="15" fill="rgb(233,96,12)" fg:x="353" fg:w="1"/><text x="28.3551%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="28.1051%" y="549" width="0.0796%" height="15" fill="rgb(224,125,0)" fg:x="353" fg:w="1"/><text x="28.3551%" y="559.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="28.1051%" y="533" width="0.0796%" height="15" fill="rgb(224,92,25)" fg:x="353" fg:w="1"/><text x="28.3551%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="28.1051%" y="517" width="0.0796%" height="15" fill="rgb(224,42,24)" fg:x="353" fg:w="1"/><text x="28.3551%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.1051%" y="501" width="0.0796%" height="15" fill="rgb(234,132,49)" fg:x="353" fg:w="1"/><text x="28.3551%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.1847%" y="469" width="0.0796%" height="15" fill="rgb(248,100,35)" fg:x="354" fg:w="1"/><text x="28.4347%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.1847%" y="517" width="0.1592%" height="15" fill="rgb(239,94,40)" fg:x="354" fg:w="2"/><text x="28.4347%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.1847%" y="501" width="0.1592%" height="15" fill="rgb(235,139,28)" fg:x="354" fg:w="2"/><text x="28.4347%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.1847%" y="485" width="0.1592%" height="15" fill="rgb(217,144,7)" fg:x="354" fg:w="2"/><text x="28.4347%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.2643%" y="469" width="0.0796%" height="15" fill="rgb(227,55,4)" fg:x="355" fg:w="1"/><text x="28.5143%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.2643%" y="453" width="0.0796%" height="15" fill="rgb(252,82,54)" fg:x="355" fg:w="1"/><text x="28.5143%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.2643%" y="437" width="0.0796%" height="15" fill="rgb(245,172,4)" fg:x="355" fg:w="1"/><text x="28.5143%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.2643%" y="421" width="0.0796%" height="15" fill="rgb(207,26,27)" fg:x="355" fg:w="1"/><text x="28.5143%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.2643%" y="405" width="0.0796%" height="15" fill="rgb(252,98,18)" fg:x="355" fg:w="1"/><text x="28.5143%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="28.2643%" y="389" width="0.0796%" height="15" fill="rgb(244,8,26)" fg:x="355" fg:w="1"/><text x="28.5143%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="28.2643%" y="373" width="0.0796%" height="15" fill="rgb(237,173,45)" fg:x="355" fg:w="1"/><text x="28.5143%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="28.3439%" y="469" width="0.1592%" height="15" fill="rgb(208,213,49)" fg:x="356" fg:w="2"/><text x="28.5939%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="28.3439%" y="453" width="0.1592%" height="15" fill="rgb(212,122,37)" fg:x="356" fg:w="2"/><text x="28.5939%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.4236%" y="437" width="0.0796%" height="15" fill="rgb(213,80,17)" fg:x="357" fg:w="1"/><text x="28.6736%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="28.5032%" y="373" width="0.0796%" height="15" fill="rgb(206,210,43)" fg:x="358" fg:w="1"/><text x="28.7532%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="28.3439%" y="501" width="0.3185%" height="15" fill="rgb(229,214,3)" fg:x="356" fg:w="4"/><text x="28.5939%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="28.3439%" y="485" width="0.3185%" height="15" fill="rgb(235,213,29)" fg:x="356" fg:w="4"/><text x="28.5939%" y="495.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="28.5032%" y="469" width="0.1592%" height="15" fill="rgb(248,135,26)" fg:x="358" fg:w="2"/><text x="28.7532%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.5032%" y="453" width="0.1592%" height="15" fill="rgb(242,188,12)" fg:x="358" fg:w="2"/><text x="28.7532%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (2 samples, 0.16%)</title><rect x="28.5032%" y="437" width="0.1592%" height="15" fill="rgb(245,38,12)" fg:x="358" fg:w="2"/><text x="28.7532%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.5032%" y="421" width="0.1592%" height="15" fill="rgb(218,42,13)" fg:x="358" fg:w="2"/><text x="28.7532%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="28.5032%" y="405" width="0.1592%" height="15" fill="rgb(238,132,49)" fg:x="358" fg:w="2"/><text x="28.7532%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="28.5032%" y="389" width="0.1592%" height="15" fill="rgb(209,196,19)" fg:x="358" fg:w="2"/><text x="28.7532%" y="399.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="28.5828%" y="373" width="0.0796%" height="15" fill="rgb(244,131,22)" fg:x="359" fg:w="1"/><text x="28.8328%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="28.3439%" y="517" width="0.3981%" height="15" fill="rgb(223,18,34)" fg:x="356" fg:w="5"/><text x="28.5939%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="28.6624%" y="501" width="0.0796%" height="15" fill="rgb(252,124,54)" fg:x="360" fg:w="1"/><text x="28.9124%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="28.6624%" y="485" width="0.0796%" height="15" fill="rgb(229,106,42)" fg:x="360" fg:w="1"/><text x="28.9124%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.6624%" y="469" width="0.0796%" height="15" fill="rgb(221,129,1)" fg:x="360" fg:w="1"/><text x="28.9124%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6624%" y="453" width="0.0796%" height="15" fill="rgb(229,74,15)" fg:x="360" fg:w="1"/><text x="28.9124%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.6624%" y="437" width="0.0796%" height="15" fill="rgb(210,206,50)" fg:x="360" fg:w="1"/><text x="28.9124%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.6624%" y="421" width="0.0796%" height="15" fill="rgb(251,114,31)" fg:x="360" fg:w="1"/><text x="28.9124%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.8217%" y="405" width="0.1592%" height="15" fill="rgb(215,225,28)" fg:x="362" fg:w="2"/><text x="29.0717%" y="415.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="28.7420%" y="469" width="0.3185%" height="15" fill="rgb(237,109,14)" fg:x="361" fg:w="4"/><text x="28.9920%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="28.8217%" y="453" width="0.2389%" height="15" fill="rgb(230,13,37)" fg:x="362" fg:w="3"/><text x="29.0717%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="28.8217%" y="437" width="0.2389%" height="15" fill="rgb(231,40,28)" fg:x="362" fg:w="3"/><text x="29.0717%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="28.8217%" y="421" width="0.2389%" height="15" fill="rgb(231,202,18)" fg:x="362" fg:w="3"/><text x="29.0717%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="28.9809%" y="405" width="0.0796%" height="15" fill="rgb(225,33,18)" fg:x="364" fg:w="1"/><text x="29.2309%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="28.7420%" y="501" width="0.3981%" height="15" fill="rgb(223,64,47)" fg:x="361" fg:w="5"/><text x="28.9920%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="28.7420%" y="485" width="0.3981%" height="15" fill="rgb(234,114,13)" fg:x="361" fg:w="5"/><text x="28.9920%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.0605%" y="469" width="0.0796%" height="15" fill="rgb(248,56,40)" fg:x="365" fg:w="1"/><text x="29.3105%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.0605%" y="453" width="0.0796%" height="15" fill="rgb(221,194,21)" fg:x="365" fg:w="1"/><text x="29.3105%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="29.0605%" y="437" width="0.0796%" height="15" fill="rgb(242,108,46)" fg:x="365" fg:w="1"/><text x="29.3105%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1401%" y="469" width="0.0796%" height="15" fill="rgb(220,106,10)" fg:x="366" fg:w="1"/><text x="29.3901%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="29.2197%" y="453" width="0.0796%" height="15" fill="rgb(211,88,4)" fg:x="367" fg:w="1"/><text x="29.4697%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="29.2197%" y="437" width="0.0796%" height="15" fill="rgb(214,95,34)" fg:x="367" fg:w="1"/><text x="29.4697%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="29.2197%" y="421" width="0.0796%" height="15" fill="rgb(250,160,33)" fg:x="367" fg:w="1"/><text x="29.4697%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="29.2197%" y="405" width="0.0796%" height="15" fill="rgb(225,29,10)" fg:x="367" fg:w="1"/><text x="29.4697%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="29.2197%" y="389" width="0.0796%" height="15" fill="rgb(224,28,30)" fg:x="367" fg:w="1"/><text x="29.4697%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="29.2197%" y="373" width="0.0796%" height="15" fill="rgb(231,77,4)" fg:x="367" fg:w="1"/><text x="29.4697%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="29.2197%" y="357" width="0.0796%" height="15" fill="rgb(209,63,21)" fg:x="367" fg:w="1"/><text x="29.4697%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2197%" y="341" width="0.0796%" height="15" fill="rgb(226,22,11)" fg:x="367" fg:w="1"/><text x="29.4697%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="29.2197%" y="469" width="0.1592%" height="15" fill="rgb(216,82,30)" fg:x="367" fg:w="2"/><text x="29.4697%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.2994%" y="453" width="0.0796%" height="15" fill="rgb(246,227,38)" fg:x="368" fg:w="1"/><text x="29.5494%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.2994%" y="437" width="0.0796%" height="15" fill="rgb(251,203,53)" fg:x="368" fg:w="1"/><text x="29.5494%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2994%" y="421" width="0.0796%" height="15" fill="rgb(254,101,1)" fg:x="368" fg:w="1"/><text x="29.5494%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.72%)</title><rect x="28.7420%" y="517" width="0.7166%" height="15" fill="rgb(241,180,5)" fg:x="361" fg:w="9"/><text x="28.9920%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="29.1401%" y="501" width="0.3185%" height="15" fill="rgb(218,168,4)" fg:x="366" fg:w="4"/><text x="29.3901%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="29.1401%" y="485" width="0.3185%" height="15" fill="rgb(224,223,32)" fg:x="366" fg:w="4"/><text x="29.3901%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="29.3790%" y="469" width="0.0796%" height="15" fill="rgb(236,106,22)" fg:x="369" fg:w="1"/><text x="29.6290%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.3790%" y="453" width="0.0796%" height="15" fill="rgb(206,121,5)" fg:x="369" fg:w="1"/><text x="29.6290%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.3790%" y="437" width="0.0796%" height="15" fill="rgb(233,87,28)" fg:x="369" fg:w="1"/><text x="29.6290%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="29.4586%" y="517" width="0.0796%" height="15" fill="rgb(236,137,17)" fg:x="370" fg:w="1"/><text x="29.7086%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="29.4586%" y="501" width="0.0796%" height="15" fill="rgb(209,183,38)" fg:x="370" fg:w="1"/><text x="29.7086%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.4586%" y="485" width="0.0796%" height="15" fill="rgb(206,162,44)" fg:x="370" fg:w="1"/><text x="29.7086%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.4586%" y="469" width="0.0796%" height="15" fill="rgb(237,70,39)" fg:x="370" fg:w="1"/><text x="29.7086%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.4586%" y="453" width="0.0796%" height="15" fill="rgb(212,176,5)" fg:x="370" fg:w="1"/><text x="29.7086%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.4586%" y="437" width="0.0796%" height="15" fill="rgb(232,95,16)" fg:x="370" fg:w="1"/><text x="29.7086%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.4586%" y="421" width="0.0796%" height="15" fill="rgb(219,115,35)" fg:x="370" fg:w="1"/><text x="29.7086%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="29.4586%" y="405" width="0.0796%" height="15" fill="rgb(251,67,27)" fg:x="370" fg:w="1"/><text x="29.7086%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.43%)</title><rect x="28.1847%" y="533" width="1.4331%" height="15" fill="rgb(222,95,40)" fg:x="354" fg:w="18"/><text x="28.4347%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="29.5382%" y="517" width="0.0796%" height="15" fill="rgb(250,35,16)" fg:x="371" fg:w="1"/><text x="29.7882%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="29.5382%" y="501" width="0.0796%" height="15" fill="rgb(224,86,44)" fg:x="371" fg:w="1"/><text x="29.7882%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="29.5382%" y="485" width="0.0796%" height="15" fill="rgb(237,53,53)" fg:x="371" fg:w="1"/><text x="29.7882%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.51%)</title><rect x="28.1847%" y="549" width="1.5127%" height="15" fill="rgb(208,171,33)" fg:x="354" fg:w="19"/><text x="28.4347%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="29.6178%" y="533" width="0.0796%" height="15" fill="rgb(222,64,27)" fg:x="372" fg:w="1"/><text x="29.8678%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.6178%" y="517" width="0.0796%" height="15" fill="rgb(221,121,35)" fg:x="372" fg:w="1"/><text x="29.8678%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.6975%" y="469" width="0.1592%" height="15" fill="rgb(228,137,42)" fg:x="373" fg:w="2"/><text x="29.9475%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.7771%" y="453" width="0.0796%" height="15" fill="rgb(227,54,21)" fg:x="374" fg:w="1"/><text x="30.0271%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="29.6975%" y="501" width="0.2389%" height="15" fill="rgb(240,168,33)" fg:x="373" fg:w="3"/><text x="29.9475%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="29.6975%" y="485" width="0.2389%" height="15" fill="rgb(243,159,6)" fg:x="373" fg:w="3"/><text x="29.9475%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.8567%" y="469" width="0.0796%" height="15" fill="rgb(205,211,41)" fg:x="375" fg:w="1"/><text x="30.1067%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.8567%" y="453" width="0.0796%" height="15" fill="rgb(253,30,1)" fg:x="375" fg:w="1"/><text x="30.1067%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.8567%" y="437" width="0.0796%" height="15" fill="rgb(226,80,18)" fg:x="375" fg:w="1"/><text x="30.1067%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.8567%" y="421" width="0.0796%" height="15" fill="rgb(253,156,46)" fg:x="375" fg:w="1"/><text x="30.1067%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="29.9363%" y="485" width="0.0796%" height="15" fill="rgb(248,87,27)" fg:x="376" fg:w="1"/><text x="30.1863%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.0159%" y="469" width="0.0796%" height="15" fill="rgb(227,122,2)" fg:x="377" fg:w="1"/><text x="30.2659%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.0159%" y="453" width="0.0796%" height="15" fill="rgb(229,94,39)" fg:x="377" fg:w="1"/><text x="30.2659%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.0159%" y="437" width="0.0796%" height="15" fill="rgb(225,173,31)" fg:x="377" fg:w="1"/><text x="30.2659%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.0159%" y="421" width="0.0796%" height="15" fill="rgb(239,176,30)" fg:x="377" fg:w="1"/><text x="30.2659%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="29.6975%" y="533" width="0.4777%" height="15" fill="rgb(212,104,21)" fg:x="373" fg:w="6"/><text x="29.9475%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="29.6975%" y="517" width="0.4777%" height="15" fill="rgb(240,209,40)" fg:x="373" fg:w="6"/><text x="29.9475%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="29.9363%" y="501" width="0.2389%" height="15" fill="rgb(234,195,5)" fg:x="376" fg:w="3"/><text x="30.1863%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.0159%" y="485" width="0.1592%" height="15" fill="rgb(238,213,1)" fg:x="377" fg:w="2"/><text x="30.2659%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.0955%" y="469" width="0.0796%" height="15" fill="rgb(235,182,54)" fg:x="378" fg:w="1"/><text x="30.3455%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.0955%" y="453" width="0.0796%" height="15" fill="rgb(229,50,46)" fg:x="378" fg:w="1"/><text x="30.3455%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="30.0955%" y="437" width="0.0796%" height="15" fill="rgb(219,145,13)" fg:x="378" fg:w="1"/><text x="30.3455%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.1752%" y="517" width="0.0796%" height="15" fill="rgb(220,226,10)" fg:x="379" fg:w="1"/><text x="30.4252%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.1752%" y="501" width="0.0796%" height="15" fill="rgb(248,47,30)" fg:x="379" fg:w="1"/><text x="30.4252%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="30.2548%" y="485" width="0.0796%" height="15" fill="rgb(231,209,44)" fg:x="380" fg:w="1"/><text x="30.5048%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.2548%" y="469" width="0.0796%" height="15" fill="rgb(209,80,30)" fg:x="380" fg:w="1"/><text x="30.5048%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.2548%" y="453" width="0.0796%" height="15" fill="rgb(232,9,14)" fg:x="380" fg:w="1"/><text x="30.5048%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="30.2548%" y="437" width="0.0796%" height="15" fill="rgb(243,91,43)" fg:x="380" fg:w="1"/><text x="30.5048%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="30.1752%" y="533" width="0.3185%" height="15" fill="rgb(231,90,52)" fg:x="379" fg:w="4"/><text x="30.4252%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="30.2548%" y="517" width="0.2389%" height="15" fill="rgb(253,192,44)" fg:x="380" fg:w="3"/><text x="30.5048%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="30.2548%" y="501" width="0.2389%" height="15" fill="rgb(241,66,31)" fg:x="380" fg:w="3"/><text x="30.5048%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="30.3344%" y="485" width="0.1592%" height="15" fill="rgb(235,81,37)" fg:x="381" fg:w="2"/><text x="30.5844%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="30.3344%" y="469" width="0.1592%" height="15" fill="rgb(223,221,9)" fg:x="381" fg:w="2"/><text x="30.5844%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.3344%" y="453" width="0.1592%" height="15" fill="rgb(242,180,7)" fg:x="381" fg:w="2"/><text x="30.5844%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.4140%" y="437" width="0.0796%" height="15" fill="rgb(243,78,19)" fg:x="382" fg:w="1"/><text x="30.6640%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4936%" y="485" width="0.0796%" height="15" fill="rgb(233,23,17)" fg:x="383" fg:w="1"/><text x="30.7436%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4936%" y="469" width="0.0796%" height="15" fill="rgb(252,122,45)" fg:x="383" fg:w="1"/><text x="30.7436%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.4936%" y="453" width="0.0796%" height="15" fill="rgb(247,108,20)" fg:x="383" fg:w="1"/><text x="30.7436%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.4936%" y="437" width="0.0796%" height="15" fill="rgb(235,84,21)" fg:x="383" fg:w="1"/><text x="30.7436%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.4936%" y="421" width="0.0796%" height="15" fill="rgb(247,129,10)" fg:x="383" fg:w="1"/><text x="30.7436%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.4936%" y="405" width="0.0796%" height="15" fill="rgb(208,173,14)" fg:x="383" fg:w="1"/><text x="30.7436%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.4936%" y="389" width="0.0796%" height="15" fill="rgb(236,31,38)" fg:x="383" fg:w="1"/><text x="30.7436%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.4936%" y="373" width="0.0796%" height="15" fill="rgb(232,65,17)" fg:x="383" fg:w="1"/><text x="30.7436%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.4936%" y="357" width="0.0796%" height="15" fill="rgb(224,45,49)" fg:x="383" fg:w="1"/><text x="30.7436%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.4936%" y="341" width="0.0796%" height="15" fill="rgb(225,2,53)" fg:x="383" fg:w="1"/><text x="30.7436%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.4936%" y="325" width="0.0796%" height="15" fill="rgb(248,210,53)" fg:x="383" fg:w="1"/><text x="30.7436%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.5732%" y="485" width="0.0796%" height="15" fill="rgb(211,1,30)" fg:x="384" fg:w="1"/><text x="30.8232%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.5732%" y="469" width="0.0796%" height="15" fill="rgb(224,96,15)" fg:x="384" fg:w="1"/><text x="30.8232%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5732%" y="453" width="0.0796%" height="15" fill="rgb(252,45,11)" fg:x="384" fg:w="1"/><text x="30.8232%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5732%" y="437" width="0.0796%" height="15" fill="rgb(220,125,38)" fg:x="384" fg:w="1"/><text x="30.8232%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.5732%" y="421" width="0.0796%" height="15" fill="rgb(243,161,33)" fg:x="384" fg:w="1"/><text x="30.8232%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5732%" y="405" width="0.0796%" height="15" fill="rgb(248,197,34)" fg:x="384" fg:w="1"/><text x="30.8232%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5732%" y="389" width="0.0796%" height="15" fill="rgb(228,165,23)" fg:x="384" fg:w="1"/><text x="30.8232%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5732%" y="373" width="0.0796%" height="15" fill="rgb(236,94,38)" fg:x="384" fg:w="1"/><text x="30.8232%" y="383.50"></text></g><g><title>plugins_core::build::Build::occupying (33 samples, 2.63%)</title><rect x="28.1847%" y="565" width="2.6274%" height="15" fill="rgb(220,13,23)" fg:x="354" fg:w="33"/><text x="28.4347%" y="575.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (14 samples, 1.11%)</title><rect x="29.6975%" y="549" width="1.1146%" height="15" fill="rgb(234,26,39)" fg:x="373" fg:w="14"/><text x="29.9475%" y="559.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.32%)</title><rect x="30.4936%" y="533" width="0.3185%" height="15" fill="rgb(205,117,44)" fg:x="383" fg:w="4"/><text x="30.7436%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="30.4936%" y="517" width="0.3185%" height="15" fill="rgb(250,42,2)" fg:x="383" fg:w="4"/><text x="30.7436%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="30.4936%" y="501" width="0.3185%" height="15" fill="rgb(223,83,14)" fg:x="383" fg:w="4"/><text x="30.7436%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="30.6529%" y="485" width="0.1592%" height="15" fill="rgb(241,147,50)" fg:x="385" fg:w="2"/><text x="30.9029%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.6529%" y="469" width="0.1592%" height="15" fill="rgb(218,90,6)" fg:x="385" fg:w="2"/><text x="30.9029%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.6529%" y="453" width="0.1592%" height="15" fill="rgb(210,191,5)" fg:x="385" fg:w="2"/><text x="30.9029%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.6529%" y="437" width="0.1592%" height="15" fill="rgb(225,139,19)" fg:x="385" fg:w="2"/><text x="30.9029%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="30.6529%" y="421" width="0.1592%" height="15" fill="rgb(210,1,33)" fg:x="385" fg:w="2"/><text x="30.9029%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.6529%" y="405" width="0.1592%" height="15" fill="rgb(213,50,3)" fg:x="385" fg:w="2"/><text x="30.9029%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.6529%" y="389" width="0.1592%" height="15" fill="rgb(234,227,4)" fg:x="385" fg:w="2"/><text x="30.9029%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.6529%" y="373" width="0.1592%" height="15" fill="rgb(246,63,5)" fg:x="385" fg:w="2"/><text x="30.9029%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="30.8121%" y="501" width="0.0796%" height="15" fill="rgb(245,136,27)" fg:x="387" fg:w="1"/><text x="31.0621%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.8121%" y="485" width="0.0796%" height="15" fill="rgb(247,199,27)" fg:x="387" fg:w="1"/><text x="31.0621%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.8917%" y="485" width="0.0796%" height="15" fill="rgb(252,158,49)" fg:x="388" fg:w="1"/><text x="31.1417%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8917%" y="469" width="0.0796%" height="15" fill="rgb(254,73,1)" fg:x="388" fg:w="1"/><text x="31.1417%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8917%" y="453" width="0.0796%" height="15" fill="rgb(248,93,19)" fg:x="388" fg:w="1"/><text x="31.1417%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.8917%" y="437" width="0.0796%" height="15" fill="rgb(206,67,5)" fg:x="388" fg:w="1"/><text x="31.1417%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.8917%" y="421" width="0.0796%" height="15" fill="rgb(209,210,4)" fg:x="388" fg:w="1"/><text x="31.1417%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.8917%" y="405" width="0.0796%" height="15" fill="rgb(214,185,36)" fg:x="388" fg:w="1"/><text x="31.1417%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.8917%" y="389" width="0.0796%" height="15" fill="rgb(233,191,26)" fg:x="388" fg:w="1"/><text x="31.1417%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.8917%" y="373" width="0.0796%" height="15" fill="rgb(248,94,17)" fg:x="388" fg:w="1"/><text x="31.1417%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.8917%" y="357" width="0.0796%" height="15" fill="rgb(250,64,4)" fg:x="388" fg:w="1"/><text x="31.1417%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.8917%" y="341" width="0.0796%" height="15" fill="rgb(218,41,53)" fg:x="388" fg:w="1"/><text x="31.1417%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.8917%" y="325" width="0.0796%" height="15" fill="rgb(251,176,28)" fg:x="388" fg:w="1"/><text x="31.1417%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.8917%" y="309" width="0.0796%" height="15" fill="rgb(247,22,9)" fg:x="388" fg:w="1"/><text x="31.1417%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="30.8917%" y="293" width="0.0796%" height="15" fill="rgb(218,201,14)" fg:x="388" fg:w="1"/><text x="31.1417%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="30.8917%" y="277" width="0.0796%" height="15" fill="rgb(218,94,10)" fg:x="388" fg:w="1"/><text x="31.1417%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="30.8121%" y="517" width="0.2389%" height="15" fill="rgb(222,183,52)" fg:x="387" fg:w="3"/><text x="31.0621%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.8917%" y="501" width="0.1592%" height="15" fill="rgb(242,140,25)" fg:x="388" fg:w="2"/><text x="31.1417%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.9713%" y="485" width="0.0796%" height="15" fill="rgb(235,197,38)" fg:x="389" fg:w="1"/><text x="31.2213%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.9713%" y="469" width="0.0796%" height="15" fill="rgb(237,136,15)" fg:x="389" fg:w="1"/><text x="31.2213%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.9713%" y="453" width="0.0796%" height="15" fill="rgb(223,44,49)" fg:x="389" fg:w="1"/><text x="31.2213%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.9713%" y="437" width="0.0796%" height="15" fill="rgb(227,71,15)" fg:x="389" fg:w="1"/><text x="31.2213%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.9713%" y="421" width="0.0796%" height="15" fill="rgb(225,153,20)" fg:x="389" fg:w="1"/><text x="31.2213%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.9713%" y="405" width="0.0796%" height="15" fill="rgb(210,190,26)" fg:x="389" fg:w="1"/><text x="31.2213%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="31.0510%" y="517" width="0.1592%" height="15" fill="rgb(223,147,5)" fg:x="390" fg:w="2"/><text x="31.3010%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="31.0510%" y="501" width="0.1592%" height="15" fill="rgb(207,14,23)" fg:x="390" fg:w="2"/><text x="31.3010%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="31.0510%" y="485" width="0.1592%" height="15" fill="rgb(211,195,53)" fg:x="390" fg:w="2"/><text x="31.3010%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="31.2102%" y="469" width="0.0796%" height="15" fill="rgb(237,75,46)" fg:x="392" fg:w="1"/><text x="31.4602%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="31.2102%" y="453" width="0.0796%" height="15" fill="rgb(254,55,14)" fg:x="392" fg:w="1"/><text x="31.4602%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="31.2102%" y="437" width="0.0796%" height="15" fill="rgb(230,185,30)" fg:x="392" fg:w="1"/><text x="31.4602%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.2102%" y="421" width="0.0796%" height="15" fill="rgb(220,14,11)" fg:x="392" fg:w="1"/><text x="31.4602%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="31.2102%" y="405" width="0.0796%" height="15" fill="rgb(215,169,44)" fg:x="392" fg:w="1"/><text x="31.4602%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.2102%" y="389" width="0.0796%" height="15" fill="rgb(253,203,20)" fg:x="392" fg:w="1"/><text x="31.4602%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="31.2102%" y="517" width="0.1592%" height="15" fill="rgb(229,225,17)" fg:x="392" fg:w="2"/><text x="31.4602%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="31.2102%" y="501" width="0.1592%" height="15" fill="rgb(236,76,26)" fg:x="392" fg:w="2"/><text x="31.4602%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.2102%" y="485" width="0.1592%" height="15" fill="rgb(234,15,30)" fg:x="392" fg:w="2"/><text x="31.4602%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="31.2898%" y="469" width="0.0796%" height="15" fill="rgb(211,113,48)" fg:x="393" fg:w="1"/><text x="31.5398%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.2898%" y="453" width="0.0796%" height="15" fill="rgb(221,31,36)" fg:x="393" fg:w="1"/><text x="31.5398%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2898%" y="437" width="0.0796%" height="15" fill="rgb(215,118,52)" fg:x="393" fg:w="1"/><text x="31.5398%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.3694%" y="501" width="0.0796%" height="15" fill="rgb(241,151,27)" fg:x="394" fg:w="1"/><text x="31.6194%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="31.3694%" y="485" width="0.0796%" height="15" fill="rgb(253,51,3)" fg:x="394" fg:w="1"/><text x="31.6194%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.4490%" y="437" width="0.0796%" height="15" fill="rgb(216,201,24)" fg:x="395" fg:w="1"/><text x="31.6990%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="31.3694%" y="517" width="0.3185%" height="15" fill="rgb(231,107,4)" fg:x="394" fg:w="4"/><text x="31.6194%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="31.4490%" y="501" width="0.2389%" height="15" fill="rgb(243,97,54)" fg:x="395" fg:w="3"/><text x="31.6990%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.4490%" y="485" width="0.2389%" height="15" fill="rgb(221,32,51)" fg:x="395" fg:w="3"/><text x="31.6990%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="31.4490%" y="469" width="0.2389%" height="15" fill="rgb(218,171,35)" fg:x="395" fg:w="3"/><text x="31.6990%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="31.4490%" y="453" width="0.2389%" height="15" fill="rgb(214,20,53)" fg:x="395" fg:w="3"/><text x="31.6990%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="31.5287%" y="437" width="0.1592%" height="15" fill="rgb(239,9,52)" fg:x="396" fg:w="2"/><text x="31.7787%" y="447.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="31.6879%" y="501" width="0.0796%" height="15" fill="rgb(215,114,45)" fg:x="398" fg:w="1"/><text x="31.9379%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="31.7675%" y="469" width="0.0796%" height="15" fill="rgb(208,118,9)" fg:x="399" fg:w="1"/><text x="32.0175%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.7675%" y="453" width="0.0796%" height="15" fill="rgb(235,7,39)" fg:x="399" fg:w="1"/><text x="32.0175%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="31.7675%" y="437" width="0.0796%" height="15" fill="rgb(243,225,15)" fg:x="399" fg:w="1"/><text x="32.0175%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.8471%" y="453" width="0.1592%" height="15" fill="rgb(225,216,18)" fg:x="400" fg:w="2"/><text x="32.0971%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.8471%" y="437" width="0.1592%" height="15" fill="rgb(233,36,38)" fg:x="400" fg:w="2"/><text x="32.0971%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.8471%" y="421" width="0.1592%" height="15" fill="rgb(239,88,23)" fg:x="400" fg:w="2"/><text x="32.0971%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.9268%" y="405" width="0.0796%" height="15" fill="rgb(219,181,35)" fg:x="401" fg:w="1"/><text x="32.1768%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="31.7675%" y="485" width="0.3185%" height="15" fill="rgb(215,18,46)" fg:x="399" fg:w="4"/><text x="32.0175%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.8471%" y="469" width="0.2389%" height="15" fill="rgb(241,38,11)" fg:x="400" fg:w="3"/><text x="32.0971%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.0064%" y="453" width="0.0796%" height="15" fill="rgb(248,169,45)" fg:x="402" fg:w="1"/><text x="32.2564%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.0064%" y="437" width="0.0796%" height="15" fill="rgb(239,50,49)" fg:x="402" fg:w="1"/><text x="32.2564%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.0064%" y="421" width="0.0796%" height="15" fill="rgb(231,96,31)" fg:x="402" fg:w="1"/><text x="32.2564%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.35%)</title><rect x="30.8121%" y="533" width="1.3535%" height="15" fill="rgb(224,193,37)" fg:x="387" fg:w="17"/><text x="31.0621%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.48%)</title><rect x="31.6879%" y="517" width="0.4777%" height="15" fill="rgb(227,153,50)" fg:x="398" fg:w="6"/><text x="31.9379%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="31.7675%" y="501" width="0.3981%" height="15" fill="rgb(249,228,3)" fg:x="399" fg:w="5"/><text x="32.0175%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="32.0860%" y="485" width="0.0796%" height="15" fill="rgb(219,164,43)" fg:x="403" fg:w="1"/><text x="32.3360%" y="495.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="32.0860%" y="469" width="0.0796%" height="15" fill="rgb(216,45,41)" fg:x="403" fg:w="1"/><text x="32.3360%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="32.0860%" y="453" width="0.0796%" height="15" fill="rgb(210,226,51)" fg:x="403" fg:w="1"/><text x="32.3360%" y="463.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="32.0860%" y="437" width="0.0796%" height="15" fill="rgb(209,117,49)" fg:x="403" fg:w="1"/><text x="32.3360%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="32.0860%" y="421" width="0.0796%" height="15" fill="rgb(206,196,24)" fg:x="403" fg:w="1"/><text x="32.3360%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="32.0860%" y="405" width="0.0796%" height="15" fill="rgb(253,218,3)" fg:x="403" fg:w="1"/><text x="32.3360%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="32.0860%" y="389" width="0.0796%" height="15" fill="rgb(252,166,2)" fg:x="403" fg:w="1"/><text x="32.3360%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="32.0860%" y="373" width="0.0796%" height="15" fill="rgb(236,218,26)" fg:x="403" fg:w="1"/><text x="32.3360%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (197 samples, 15.68%)</title><rect x="16.5605%" y="581" width="15.6847%" height="15" fill="rgb(254,84,19)" fg:x="208" fg:w="197"/><text x="16.8105%" y="591.50">plugins_core::build::Bui..</text></g><g><title>plugins_core::build::Build::wearing (18 samples, 1.43%)</title><rect x="30.8121%" y="565" width="1.4331%" height="15" fill="rgb(219,137,29)" fg:x="387" fg:w="18"/><text x="31.0621%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (18 samples, 1.43%)</title><rect x="30.8121%" y="549" width="1.4331%" height="15" fill="rgb(227,47,52)" fg:x="387" fg:w="18"/><text x="31.0621%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.1656%" y="533" width="0.0796%" height="15" fill="rgb(229,167,24)" fg:x="404" fg:w="1"/><text x="32.4156%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="32.1656%" y="517" width="0.0796%" height="15" fill="rgb(233,164,1)" fg:x="404" fg:w="1"/><text x="32.4156%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.1656%" y="501" width="0.0796%" height="15" fill="rgb(218,88,48)" fg:x="404" fg:w="1"/><text x="32.4156%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="32.1656%" y="485" width="0.0796%" height="15" fill="rgb(226,214,24)" fg:x="404" fg:w="1"/><text x="32.4156%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="32.2452%" y="549" width="0.0796%" height="15" fill="rgb(233,29,12)" fg:x="405" fg:w="1"/><text x="32.4952%" y="559.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="32.2452%" y="533" width="0.0796%" height="15" fill="rgb(219,120,34)" fg:x="405" fg:w="1"/><text x="32.4952%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="32.2452%" y="517" width="0.0796%" height="15" fill="rgb(226,78,44)" fg:x="405" fg:w="1"/><text x="32.4952%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="32.2452%" y="501" width="0.0796%" height="15" fill="rgb(240,15,48)" fg:x="405" fg:w="1"/><text x="32.4952%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.2452%" y="485" width="0.0796%" height="15" fill="rgb(253,176,7)" fg:x="405" fg:w="1"/><text x="32.4952%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="32.2452%" y="469" width="0.0796%" height="15" fill="rgb(206,166,28)" fg:x="405" fg:w="1"/><text x="32.4952%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2452%" y="453" width="0.0796%" height="15" fill="rgb(241,53,51)" fg:x="405" fg:w="1"/><text x="32.4952%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2452%" y="437" width="0.0796%" height="15" fill="rgb(249,112,30)" fg:x="405" fg:w="1"/><text x="32.4952%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.3248%" y="517" width="0.0796%" height="15" fill="rgb(217,85,30)" fg:x="406" fg:w="1"/><text x="32.5748%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.3248%" y="501" width="0.0796%" height="15" fill="rgb(233,49,7)" fg:x="406" fg:w="1"/><text x="32.5748%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3248%" y="485" width="0.0796%" height="15" fill="rgb(234,109,9)" fg:x="406" fg:w="1"/><text x="32.5748%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3248%" y="469" width="0.0796%" height="15" fill="rgb(253,95,22)" fg:x="406" fg:w="1"/><text x="32.5748%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3248%" y="453" width="0.0796%" height="15" fill="rgb(233,176,25)" fg:x="406" fg:w="1"/><text x="32.5748%" y="463.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="32.4045%" y="469" width="0.0796%" height="15" fill="rgb(236,33,39)" fg:x="407" fg:w="1"/><text x="32.6545%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="32.4045%" y="453" width="0.0796%" height="15" fill="rgb(223,226,42)" fg:x="407" fg:w="1"/><text x="32.6545%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.4045%" y="437" width="0.0796%" height="15" fill="rgb(216,99,33)" fg:x="407" fg:w="1"/><text x="32.6545%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.4045%" y="421" width="0.0796%" height="15" fill="rgb(235,84,23)" fg:x="407" fg:w="1"/><text x="32.6545%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.4045%" y="405" width="0.0796%" height="15" fill="rgb(232,2,27)" fg:x="407" fg:w="1"/><text x="32.6545%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.4045%" y="389" width="0.0796%" height="15" fill="rgb(241,23,22)" fg:x="407" fg:w="1"/><text x="32.6545%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="32.4045%" y="501" width="0.1592%" height="15" fill="rgb(211,73,27)" fg:x="407" fg:w="2"/><text x="32.6545%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="32.4045%" y="485" width="0.1592%" height="15" fill="rgb(235,109,49)" fg:x="407" fg:w="2"/><text x="32.6545%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.4841%" y="469" width="0.0796%" height="15" fill="rgb(230,99,29)" fg:x="408" fg:w="1"/><text x="32.7341%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.4841%" y="453" width="0.0796%" height="15" fill="rgb(245,199,7)" fg:x="408" fg:w="1"/><text x="32.7341%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="32.4841%" y="437" width="0.0796%" height="15" fill="rgb(217,179,10)" fg:x="408" fg:w="1"/><text x="32.7341%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="32.5637%" y="469" width="0.1592%" height="15" fill="rgb(254,99,47)" fg:x="409" fg:w="2"/><text x="32.8137%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="32.5637%" y="453" width="0.1592%" height="15" fill="rgb(251,121,7)" fg:x="409" fg:w="2"/><text x="32.8137%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="32.5637%" y="437" width="0.1592%" height="15" fill="rgb(250,177,26)" fg:x="409" fg:w="2"/><text x="32.8137%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="32.5637%" y="421" width="0.1592%" height="15" fill="rgb(232,88,15)" fg:x="409" fg:w="2"/><text x="32.8137%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="32.6433%" y="405" width="0.0796%" height="15" fill="rgb(251,54,54)" fg:x="410" fg:w="1"/><text x="32.8933%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="32.6433%" y="389" width="0.0796%" height="15" fill="rgb(208,177,15)" fg:x="410" fg:w="1"/><text x="32.8933%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="32.6433%" y="373" width="0.0796%" height="15" fill="rgb(205,97,32)" fg:x="410" fg:w="1"/><text x="32.8933%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6433%" y="357" width="0.0796%" height="15" fill="rgb(217,192,13)" fg:x="410" fg:w="1"/><text x="32.8933%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6433%" y="341" width="0.0796%" height="15" fill="rgb(215,163,41)" fg:x="410" fg:w="1"/><text x="32.8933%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="32.4045%" y="517" width="0.3981%" height="15" fill="rgb(246,83,29)" fg:x="407" fg:w="5"/><text x="32.6545%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="32.5637%" y="501" width="0.2389%" height="15" fill="rgb(219,2,45)" fg:x="409" fg:w="3"/><text x="32.8137%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="32.5637%" y="485" width="0.2389%" height="15" fill="rgb(242,215,33)" fg:x="409" fg:w="3"/><text x="32.8137%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="32.7229%" y="469" width="0.0796%" height="15" fill="rgb(217,1,6)" fg:x="411" fg:w="1"/><text x="32.9729%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.7229%" y="453" width="0.0796%" height="15" fill="rgb(207,85,52)" fg:x="411" fg:w="1"/><text x="32.9729%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.7229%" y="437" width="0.0796%" height="15" fill="rgb(231,171,19)" fg:x="411" fg:w="1"/><text x="32.9729%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.7229%" y="421" width="0.0796%" height="15" fill="rgb(207,128,4)" fg:x="411" fg:w="1"/><text x="32.9729%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.8025%" y="469" width="0.0796%" height="15" fill="rgb(219,208,4)" fg:x="412" fg:w="1"/><text x="33.0525%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.8025%" y="453" width="0.0796%" height="15" fill="rgb(235,161,42)" fg:x="412" fg:w="1"/><text x="33.0525%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.8025%" y="437" width="0.0796%" height="15" fill="rgb(247,218,18)" fg:x="412" fg:w="1"/><text x="33.0525%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.8025%" y="421" width="0.0796%" height="15" fill="rgb(232,114,51)" fg:x="412" fg:w="1"/><text x="33.0525%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="32.8025%" y="501" width="0.2389%" height="15" fill="rgb(222,95,3)" fg:x="412" fg:w="3"/><text x="33.0525%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.8025%" y="485" width="0.2389%" height="15" fill="rgb(240,65,29)" fg:x="412" fg:w="3"/><text x="33.0525%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.8822%" y="469" width="0.1592%" height="15" fill="rgb(249,209,20)" fg:x="413" fg:w="2"/><text x="33.1322%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8822%" y="453" width="0.1592%" height="15" fill="rgb(241,48,37)" fg:x="413" fg:w="2"/><text x="33.1322%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.8822%" y="437" width="0.1592%" height="15" fill="rgb(230,140,42)" fg:x="413" fg:w="2"/><text x="33.1322%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8822%" y="421" width="0.1592%" height="15" fill="rgb(230,176,45)" fg:x="413" fg:w="2"/><text x="33.1322%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.9618%" y="405" width="0.0796%" height="15" fill="rgb(245,112,21)" fg:x="414" fg:w="1"/><text x="33.2118%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.9618%" y="389" width="0.0796%" height="15" fill="rgb(207,183,35)" fg:x="414" fg:w="1"/><text x="33.2118%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="32.8025%" y="517" width="0.3185%" height="15" fill="rgb(227,44,33)" fg:x="412" fg:w="4"/><text x="33.0525%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="33.0414%" y="501" width="0.0796%" height="15" fill="rgb(246,120,21)" fg:x="415" fg:w="1"/><text x="33.2914%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.0414%" y="485" width="0.0796%" height="15" fill="rgb(235,57,52)" fg:x="415" fg:w="1"/><text x="33.2914%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.0414%" y="469" width="0.0796%" height="15" fill="rgb(238,84,10)" fg:x="415" fg:w="1"/><text x="33.2914%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.0414%" y="453" width="0.0796%" height="15" fill="rgb(251,200,32)" fg:x="415" fg:w="1"/><text x="33.2914%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.0414%" y="437" width="0.0796%" height="15" fill="rgb(247,159,13)" fg:x="415" fg:w="1"/><text x="33.2914%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.0414%" y="421" width="0.0796%" height="15" fill="rgb(238,64,4)" fg:x="415" fg:w="1"/><text x="33.2914%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.0414%" y="405" width="0.0796%" height="15" fill="rgb(221,131,51)" fg:x="415" fg:w="1"/><text x="33.2914%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.0414%" y="389" width="0.0796%" height="15" fill="rgb(242,5,29)" fg:x="415" fg:w="1"/><text x="33.2914%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.0414%" y="373" width="0.0796%" height="15" fill="rgb(214,130,32)" fg:x="415" fg:w="1"/><text x="33.2914%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.0414%" y="357" width="0.0796%" height="15" fill="rgb(244,210,16)" fg:x="415" fg:w="1"/><text x="33.2914%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.0414%" y="341" width="0.0796%" height="15" fill="rgb(234,48,26)" fg:x="415" fg:w="1"/><text x="33.2914%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.0414%" y="325" width="0.0796%" height="15" fill="rgb(231,82,38)" fg:x="415" fg:w="1"/><text x="33.2914%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.0414%" y="309" width="0.0796%" height="15" fill="rgb(254,128,41)" fg:x="415" fg:w="1"/><text x="33.2914%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.0414%" y="293" width="0.0796%" height="15" fill="rgb(212,73,49)" fg:x="415" fg:w="1"/><text x="33.2914%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.0414%" y="277" width="0.0796%" height="15" fill="rgb(205,62,54)" fg:x="415" fg:w="1"/><text x="33.2914%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0414%" y="261" width="0.0796%" height="15" fill="rgb(228,0,8)" fg:x="415" fg:w="1"/><text x="33.2914%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="33.1210%" y="485" width="0.0796%" height="15" fill="rgb(251,28,17)" fg:x="416" fg:w="1"/><text x="33.3710%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="33.1210%" y="469" width="0.0796%" height="15" fill="rgb(238,105,27)" fg:x="416" fg:w="1"/><text x="33.3710%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="32.3248%" y="533" width="0.9554%" height="15" fill="rgb(237,216,33)" fg:x="406" fg:w="12"/><text x="32.5748%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="33.1210%" y="517" width="0.1592%" height="15" fill="rgb(229,228,25)" fg:x="416" fg:w="2"/><text x="33.3710%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="33.1210%" y="501" width="0.1592%" height="15" fill="rgb(233,75,23)" fg:x="416" fg:w="2"/><text x="33.3710%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="33.2006%" y="485" width="0.0796%" height="15" fill="rgb(231,207,16)" fg:x="417" fg:w="1"/><text x="33.4506%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.2006%" y="469" width="0.0796%" height="15" fill="rgb(231,191,45)" fg:x="417" fg:w="1"/><text x="33.4506%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.2006%" y="453" width="0.0796%" height="15" fill="rgb(224,133,17)" fg:x="417" fg:w="1"/><text x="33.4506%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.2006%" y="437" width="0.0796%" height="15" fill="rgb(209,178,27)" fg:x="417" fg:w="1"/><text x="33.4506%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.2006%" y="421" width="0.0796%" height="15" fill="rgb(218,37,11)" fg:x="417" fg:w="1"/><text x="33.4506%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.2006%" y="405" width="0.0796%" height="15" fill="rgb(251,226,25)" fg:x="417" fg:w="1"/><text x="33.4506%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2006%" y="389" width="0.0796%" height="15" fill="rgb(209,222,27)" fg:x="417" fg:w="1"/><text x="33.4506%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="33.2803%" y="517" width="0.1592%" height="15" fill="rgb(238,22,21)" fg:x="418" fg:w="2"/><text x="33.5303%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4395%" y="501" width="0.0796%" height="15" fill="rgb(233,161,25)" fg:x="420" fg:w="1"/><text x="33.6895%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4395%" y="485" width="0.0796%" height="15" fill="rgb(226,122,53)" fg:x="420" fg:w="1"/><text x="33.6895%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4395%" y="469" width="0.0796%" height="15" fill="rgb(220,123,17)" fg:x="420" fg:w="1"/><text x="33.6895%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.5191%" y="501" width="0.0796%" height="15" fill="rgb(230,224,35)" fg:x="421" fg:w="1"/><text x="33.7691%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.5191%" y="485" width="0.0796%" height="15" fill="rgb(246,83,8)" fg:x="421" fg:w="1"/><text x="33.7691%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.5191%" y="469" width="0.0796%" height="15" fill="rgb(230,214,17)" fg:x="421" fg:w="1"/><text x="33.7691%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.5191%" y="453" width="0.0796%" height="15" fill="rgb(222,97,18)" fg:x="421" fg:w="1"/><text x="33.7691%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (17 samples, 1.35%)</title><rect x="32.3248%" y="549" width="1.3535%" height="15" fill="rgb(206,79,1)" fg:x="406" fg:w="17"/><text x="32.5748%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="33.2803%" y="533" width="0.3981%" height="15" fill="rgb(214,121,34)" fg:x="418" fg:w="5"/><text x="33.5303%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="33.4395%" y="517" width="0.2389%" height="15" fill="rgb(249,199,46)" fg:x="420" fg:w="3"/><text x="33.6895%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.5987%" y="501" width="0.0796%" height="15" fill="rgb(214,222,46)" fg:x="422" fg:w="1"/><text x="33.8487%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.5987%" y="485" width="0.0796%" height="15" fill="rgb(248,168,30)" fg:x="422" fg:w="1"/><text x="33.8487%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.5987%" y="469" width="0.0796%" height="15" fill="rgb(226,14,28)" fg:x="422" fg:w="1"/><text x="33.8487%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.5987%" y="453" width="0.0796%" height="15" fill="rgb(253,123,1)" fg:x="422" fg:w="1"/><text x="33.8487%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="33.5987%" y="437" width="0.0796%" height="15" fill="rgb(225,24,42)" fg:x="422" fg:w="1"/><text x="33.8487%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="33.6783%" y="533" width="0.0796%" height="15" fill="rgb(216,161,37)" fg:x="423" fg:w="1"/><text x="33.9283%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="33.6783%" y="517" width="0.0796%" height="15" fill="rgb(251,164,26)" fg:x="423" fg:w="1"/><text x="33.9283%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (21 samples, 1.67%)</title><rect x="32.2452%" y="581" width="1.6720%" height="15" fill="rgb(219,177,3)" fg:x="405" fg:w="21"/><text x="32.4952%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (21 samples, 1.67%)</title><rect x="32.2452%" y="565" width="1.6720%" height="15" fill="rgb(222,65,0)" fg:x="405" fg:w="21"/><text x="32.4952%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="33.6783%" y="549" width="0.2389%" height="15" fill="rgb(223,69,54)" fg:x="423" fg:w="3"/><text x="33.9283%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="33.7580%" y="533" width="0.1592%" height="15" fill="rgb(235,30,27)" fg:x="424" fg:w="2"/><text x="34.0080%" y="543.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="33.8376%" y="517" width="0.0796%" height="15" fill="rgb(220,183,50)" fg:x="425" fg:w="1"/><text x="34.0876%" y="527.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="33.9968%" y="549" width="0.0796%" height="15" fill="rgb(248,198,15)" fg:x="427" fg:w="1"/><text x="34.2468%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.9968%" y="533" width="0.0796%" height="15" fill="rgb(222,211,4)" fg:x="427" fg:w="1"/><text x="34.2468%" y="543.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="34.0764%" y="549" width="0.1592%" height="15" fill="rgb(214,102,34)" fg:x="428" fg:w="2"/><text x="34.3264%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="34.1561%" y="533" width="0.0796%" height="15" fill="rgb(245,92,5)" fg:x="429" fg:w="1"/><text x="34.4061%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="34.1561%" y="517" width="0.0796%" height="15" fill="rgb(252,72,51)" fg:x="429" fg:w="1"/><text x="34.4061%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.1561%" y="501" width="0.0796%" height="15" fill="rgb(252,208,19)" fg:x="429" fg:w="1"/><text x="34.4061%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="34.1561%" y="485" width="0.0796%" height="15" fill="rgb(211,69,7)" fg:x="429" fg:w="1"/><text x="34.4061%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="34.1561%" y="469" width="0.0796%" height="15" fill="rgb(211,27,16)" fg:x="429" fg:w="1"/><text x="34.4061%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="33.9968%" y="565" width="0.3185%" height="15" fill="rgb(219,216,14)" fg:x="427" fg:w="4"/><text x="34.2468%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.2357%" y="549" width="0.0796%" height="15" fill="rgb(219,71,8)" fg:x="430" fg:w="1"/><text x="34.4857%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.2357%" y="533" width="0.0796%" height="15" fill="rgb(223,170,53)" fg:x="430" fg:w="1"/><text x="34.4857%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.2357%" y="517" width="0.0796%" height="15" fill="rgb(246,21,26)" fg:x="430" fg:w="1"/><text x="34.4857%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="34.3153%" y="533" width="0.0796%" height="15" fill="rgb(248,20,46)" fg:x="431" fg:w="1"/><text x="34.5653%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.3153%" y="517" width="0.0796%" height="15" fill="rgb(252,94,11)" fg:x="431" fg:w="1"/><text x="34.5653%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.3153%" y="501" width="0.0796%" height="15" fill="rgb(236,163,8)" fg:x="431" fg:w="1"/><text x="34.5653%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.3153%" y="485" width="0.0796%" height="15" fill="rgb(217,221,45)" fg:x="431" fg:w="1"/><text x="34.5653%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.3153%" y="469" width="0.0796%" height="15" fill="rgb(238,38,17)" fg:x="431" fg:w="1"/><text x="34.5653%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="34.3949%" y="485" width="0.0796%" height="15" fill="rgb(242,210,23)" fg:x="432" fg:w="1"/><text x="34.6449%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="34.3949%" y="469" width="0.0796%" height="15" fill="rgb(250,86,53)" fg:x="432" fg:w="1"/><text x="34.6449%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.3949%" y="453" width="0.0796%" height="15" fill="rgb(223,168,25)" fg:x="432" fg:w="1"/><text x="34.6449%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.3949%" y="437" width="0.0796%" height="15" fill="rgb(251,189,4)" fg:x="432" fg:w="1"/><text x="34.6449%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.3949%" y="421" width="0.0796%" height="15" fill="rgb(245,19,28)" fg:x="432" fg:w="1"/><text x="34.6449%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="34.3949%" y="517" width="0.1592%" height="15" fill="rgb(207,10,34)" fg:x="432" fg:w="2"/><text x="34.6449%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="34.3949%" y="501" width="0.1592%" height="15" fill="rgb(235,153,31)" fg:x="432" fg:w="2"/><text x="34.6449%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.4745%" y="485" width="0.0796%" height="15" fill="rgb(228,72,37)" fg:x="433" fg:w="1"/><text x="34.7245%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.4745%" y="469" width="0.0796%" height="15" fill="rgb(215,15,16)" fg:x="433" fg:w="1"/><text x="34.7245%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.4745%" y="453" width="0.0796%" height="15" fill="rgb(250,119,29)" fg:x="433" fg:w="1"/><text x="34.7245%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.4745%" y="437" width="0.0796%" height="15" fill="rgb(214,59,1)" fg:x="433" fg:w="1"/><text x="34.7245%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="34.5541%" y="517" width="0.0796%" height="15" fill="rgb(223,109,25)" fg:x="434" fg:w="1"/><text x="34.8041%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5541%" y="501" width="0.0796%" height="15" fill="rgb(230,198,22)" fg:x="434" fg:w="1"/><text x="34.8041%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5541%" y="485" width="0.0796%" height="15" fill="rgb(245,184,46)" fg:x="434" fg:w="1"/><text x="34.8041%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="34.5541%" y="469" width="0.0796%" height="15" fill="rgb(253,73,16)" fg:x="434" fg:w="1"/><text x="34.8041%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6338%" y="437" width="0.0796%" height="15" fill="rgb(206,94,45)" fg:x="435" fg:w="1"/><text x="34.8838%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6338%" y="421" width="0.0796%" height="15" fill="rgb(236,83,27)" fg:x="435" fg:w="1"/><text x="34.8838%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.6338%" y="405" width="0.0796%" height="15" fill="rgb(220,196,8)" fg:x="435" fg:w="1"/><text x="34.8838%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="34.6338%" y="485" width="0.1592%" height="15" fill="rgb(254,185,14)" fg:x="435" fg:w="2"/><text x="34.8838%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="34.6338%" y="469" width="0.1592%" height="15" fill="rgb(226,50,22)" fg:x="435" fg:w="2"/><text x="34.8838%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="34.6338%" y="453" width="0.1592%" height="15" fill="rgb(253,147,0)" fg:x="435" fg:w="2"/><text x="34.8838%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="34.7134%" y="437" width="0.0796%" height="15" fill="rgb(252,46,33)" fg:x="436" fg:w="1"/><text x="34.9634%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="34.7134%" y="421" width="0.0796%" height="15" fill="rgb(242,22,54)" fg:x="436" fg:w="1"/><text x="34.9634%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="34.7134%" y="405" width="0.0796%" height="15" fill="rgb(223,178,32)" fg:x="436" fg:w="1"/><text x="34.9634%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="34.7134%" y="389" width="0.0796%" height="15" fill="rgb(214,106,53)" fg:x="436" fg:w="1"/><text x="34.9634%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="34.7134%" y="373" width="0.0796%" height="15" fill="rgb(232,65,50)" fg:x="436" fg:w="1"/><text x="34.9634%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.7930%" y="453" width="0.0796%" height="15" fill="rgb(231,110,28)" fg:x="437" fg:w="1"/><text x="35.0430%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="34.3949%" y="533" width="0.5573%" height="15" fill="rgb(216,71,40)" fg:x="432" fg:w="7"/><text x="34.6449%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="34.6338%" y="517" width="0.3185%" height="15" fill="rgb(229,89,53)" fg:x="435" fg:w="4"/><text x="34.8838%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="34.6338%" y="501" width="0.3185%" height="15" fill="rgb(210,124,14)" fg:x="435" fg:w="4"/><text x="34.8838%" y="511.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="34.7930%" y="485" width="0.1592%" height="15" fill="rgb(236,213,6)" fg:x="437" fg:w="2"/><text x="35.0430%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.7930%" y="469" width="0.1592%" height="15" fill="rgb(228,41,5)" fg:x="437" fg:w="2"/><text x="35.0430%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="34.8726%" y="453" width="0.0796%" height="15" fill="rgb(221,167,25)" fg:x="438" fg:w="1"/><text x="35.1226%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="34.8726%" y="437" width="0.0796%" height="15" fill="rgb(228,144,37)" fg:x="438" fg:w="1"/><text x="35.1226%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="34.9522%" y="501" width="0.0796%" height="15" fill="rgb(227,189,38)" fg:x="439" fg:w="1"/><text x="35.2022%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="34.9522%" y="517" width="0.1592%" height="15" fill="rgb(218,8,2)" fg:x="439" fg:w="2"/><text x="35.2022%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.0318%" y="501" width="0.0796%" height="15" fill="rgb(209,61,28)" fg:x="440" fg:w="1"/><text x="35.2818%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.0318%" y="485" width="0.0796%" height="15" fill="rgb(233,140,39)" fg:x="440" fg:w="1"/><text x="35.2818%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.0318%" y="469" width="0.0796%" height="15" fill="rgb(251,66,48)" fg:x="440" fg:w="1"/><text x="35.2818%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.0318%" y="453" width="0.0796%" height="15" fill="rgb(210,44,45)" fg:x="440" fg:w="1"/><text x="35.2818%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="35.1115%" y="485" width="0.2389%" height="15" fill="rgb(214,136,46)" fg:x="441" fg:w="3"/><text x="35.3615%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.1911%" y="469" width="0.1592%" height="15" fill="rgb(207,130,50)" fg:x="442" fg:w="2"/><text x="35.4411%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.1911%" y="453" width="0.1592%" height="15" fill="rgb(228,102,49)" fg:x="442" fg:w="2"/><text x="35.4411%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.1911%" y="437" width="0.1592%" height="15" fill="rgb(253,55,1)" fg:x="442" fg:w="2"/><text x="35.4411%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.3503%" y="453" width="0.0796%" height="15" fill="rgb(238,222,9)" fg:x="444" fg:w="1"/><text x="35.6003%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.3503%" y="437" width="0.0796%" height="15" fill="rgb(246,99,6)" fg:x="444" fg:w="1"/><text x="35.6003%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.3503%" y="485" width="0.1592%" height="15" fill="rgb(219,110,26)" fg:x="444" fg:w="2"/><text x="35.6003%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="35.3503%" y="469" width="0.1592%" height="15" fill="rgb(239,160,33)" fg:x="444" fg:w="2"/><text x="35.6003%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.4299%" y="453" width="0.0796%" height="15" fill="rgb(220,202,23)" fg:x="445" fg:w="1"/><text x="35.6799%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.4299%" y="437" width="0.0796%" height="15" fill="rgb(208,80,26)" fg:x="445" fg:w="1"/><text x="35.6799%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="35.1115%" y="517" width="0.5573%" height="15" fill="rgb(243,85,7)" fg:x="441" fg:w="7"/><text x="35.3615%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="35.1115%" y="501" width="0.5573%" height="15" fill="rgb(228,77,47)" fg:x="441" fg:w="7"/><text x="35.3615%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.5096%" y="485" width="0.1592%" height="15" fill="rgb(212,226,8)" fg:x="446" fg:w="2"/><text x="35.7596%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.5096%" y="469" width="0.1592%" height="15" fill="rgb(241,120,54)" fg:x="446" fg:w="2"/><text x="35.7596%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.5892%" y="453" width="0.0796%" height="15" fill="rgb(226,80,16)" fg:x="447" fg:w="1"/><text x="35.8392%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.5892%" y="437" width="0.0796%" height="15" fill="rgb(240,76,13)" fg:x="447" fg:w="1"/><text x="35.8392%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="35.5892%" y="421" width="0.0796%" height="15" fill="rgb(252,74,8)" fg:x="447" fg:w="1"/><text x="35.8392%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.5892%" y="405" width="0.0796%" height="15" fill="rgb(244,155,2)" fg:x="447" fg:w="1"/><text x="35.8392%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.5892%" y="389" width="0.0796%" height="15" fill="rgb(215,81,35)" fg:x="447" fg:w="1"/><text x="35.8392%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.43%)</title><rect x="34.3153%" y="549" width="1.4331%" height="15" fill="rgb(206,55,2)" fg:x="431" fg:w="18"/><text x="34.5653%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (10 samples, 0.80%)</title><rect x="34.9522%" y="533" width="0.7962%" height="15" fill="rgb(231,2,34)" fg:x="439" fg:w="10"/><text x="35.2022%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="35.6688%" y="517" width="0.0796%" height="15" fill="rgb(242,176,48)" fg:x="448" fg:w="1"/><text x="35.9188%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="35.6688%" y="501" width="0.0796%" height="15" fill="rgb(249,31,36)" fg:x="448" fg:w="1"/><text x="35.9188%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.6688%" y="485" width="0.0796%" height="15" fill="rgb(205,18,17)" fg:x="448" fg:w="1"/><text x="35.9188%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.6688%" y="469" width="0.0796%" height="15" fill="rgb(254,130,5)" fg:x="448" fg:w="1"/><text x="35.9188%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.6688%" y="453" width="0.0796%" height="15" fill="rgb(229,42,45)" fg:x="448" fg:w="1"/><text x="35.9188%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.6688%" y="437" width="0.0796%" height="15" fill="rgb(245,95,25)" fg:x="448" fg:w="1"/><text x="35.9188%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.6688%" y="421" width="0.0796%" height="15" fill="rgb(249,193,38)" fg:x="448" fg:w="1"/><text x="35.9188%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.6688%" y="405" width="0.0796%" height="15" fill="rgb(241,140,43)" fg:x="448" fg:w="1"/><text x="35.9188%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.6688%" y="389" width="0.0796%" height="15" fill="rgb(245,78,48)" fg:x="448" fg:w="1"/><text x="35.9188%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.6688%" y="373" width="0.0796%" height="15" fill="rgb(214,92,39)" fg:x="448" fg:w="1"/><text x="35.9188%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.6688%" y="357" width="0.0796%" height="15" fill="rgb(211,189,14)" fg:x="448" fg:w="1"/><text x="35.9188%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.6688%" y="341" width="0.0796%" height="15" fill="rgb(218,7,24)" fg:x="448" fg:w="1"/><text x="35.9188%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="35.6688%" y="325" width="0.0796%" height="15" fill="rgb(224,200,49)" fg:x="448" fg:w="1"/><text x="35.9188%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.6688%" y="309" width="0.0796%" height="15" fill="rgb(218,210,14)" fg:x="448" fg:w="1"/><text x="35.9188%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="35.6688%" y="293" width="0.0796%" height="15" fill="rgb(234,142,31)" fg:x="448" fg:w="1"/><text x="35.9188%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="35.6688%" y="277" width="0.0796%" height="15" fill="rgb(227,165,2)" fg:x="448" fg:w="1"/><text x="35.9188%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="35.6688%" y="261" width="0.0796%" height="15" fill="rgb(232,44,46)" fg:x="448" fg:w="1"/><text x="35.9188%" y="271.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="35.6688%" y="245" width="0.0796%" height="15" fill="rgb(236,149,47)" fg:x="448" fg:w="1"/><text x="35.9188%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.8280%" y="517" width="0.0796%" height="15" fill="rgb(227,45,31)" fg:x="450" fg:w="1"/><text x="36.0780%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.8280%" y="501" width="0.0796%" height="15" fill="rgb(240,176,51)" fg:x="450" fg:w="1"/><text x="36.0780%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.8280%" y="485" width="0.0796%" height="15" fill="rgb(249,146,41)" fg:x="450" fg:w="1"/><text x="36.0780%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (21 samples, 1.67%)</title><rect x="34.3153%" y="565" width="1.6720%" height="15" fill="rgb(213,208,4)" fg:x="431" fg:w="21"/><text x="34.5653%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="35.7484%" y="549" width="0.2389%" height="15" fill="rgb(245,84,36)" fg:x="449" fg:w="3"/><text x="35.9984%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="35.7484%" y="533" width="0.2389%" height="15" fill="rgb(254,84,18)" fg:x="449" fg:w="3"/><text x="35.9984%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.9076%" y="517" width="0.0796%" height="15" fill="rgb(225,38,54)" fg:x="451" fg:w="1"/><text x="36.1576%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.9076%" y="501" width="0.0796%" height="15" fill="rgb(246,50,30)" fg:x="451" fg:w="1"/><text x="36.1576%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.9076%" y="485" width="0.0796%" height="15" fill="rgb(246,148,9)" fg:x="451" fg:w="1"/><text x="36.1576%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.9076%" y="469" width="0.0796%" height="15" fill="rgb(223,75,4)" fg:x="451" fg:w="1"/><text x="36.1576%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.9076%" y="453" width="0.0796%" height="15" fill="rgb(239,148,41)" fg:x="451" fg:w="1"/><text x="36.1576%" y="463.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (384 samples, 30.57%)</title><rect x="5.5732%" y="597" width="30.5732%" height="15" fill="rgb(205,195,3)" fg:x="70" fg:w="384"/><text x="5.8232%" y="607.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (28 samples, 2.23%)</title><rect x="33.9172%" y="581" width="2.2293%" height="15" fill="rgb(254,161,1)" fg:x="426" fg:w="28"/><text x="34.1672%" y="591.50">p..</text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="35.9873%" y="565" width="0.1592%" height="15" fill="rgb(211,229,8)" fg:x="452" fg:w="2"/><text x="36.2373%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="35.9873%" y="549" width="0.1592%" height="15" fill="rgb(220,97,9)" fg:x="452" fg:w="2"/><text x="36.2373%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="35.9873%" y="533" width="0.1592%" height="15" fill="rgb(240,218,8)" fg:x="452" fg:w="2"/><text x="36.2373%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="35.9873%" y="517" width="0.1592%" height="15" fill="rgb(250,44,0)" fg:x="452" fg:w="2"/><text x="36.2373%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.0669%" y="501" width="0.0796%" height="15" fill="rgb(236,41,53)" fg:x="453" fg:w="1"/><text x="36.3169%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="36.1465%" y="597" width="0.0796%" height="15" fill="rgb(218,227,13)" fg:x="454" fg:w="1"/><text x="36.3965%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.1465%" y="581" width="0.0796%" height="15" fill="rgb(217,94,32)" fg:x="454" fg:w="1"/><text x="36.3965%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="36.3854%" y="581" width="0.1592%" height="15" fill="rgb(213,217,12)" fg:x="457" fg:w="2"/><text x="36.6354%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.4650%" y="565" width="0.0796%" height="15" fill="rgb(229,13,46)" fg:x="458" fg:w="1"/><text x="36.7150%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="36.5446%" y="581" width="0.0796%" height="15" fill="rgb(243,139,5)" fg:x="459" fg:w="1"/><text x="36.7946%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="36.5446%" y="565" width="0.0796%" height="15" fill="rgb(249,38,45)" fg:x="459" fg:w="1"/><text x="36.7946%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.5446%" y="549" width="0.0796%" height="15" fill="rgb(216,70,11)" fg:x="459" fg:w="1"/><text x="36.7946%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="36.5446%" y="533" width="0.0796%" height="15" fill="rgb(253,101,25)" fg:x="459" fg:w="1"/><text x="36.7946%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="36.5446%" y="517" width="0.0796%" height="15" fill="rgb(207,197,30)" fg:x="459" fg:w="1"/><text x="36.7946%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="36.5446%" y="501" width="0.0796%" height="15" fill="rgb(238,87,13)" fg:x="459" fg:w="1"/><text x="36.7946%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="36.5446%" y="485" width="0.0796%" height="15" fill="rgb(215,155,8)" fg:x="459" fg:w="1"/><text x="36.7946%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.5446%" y="469" width="0.0796%" height="15" fill="rgb(239,166,38)" fg:x="459" fg:w="1"/><text x="36.7946%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="36.5446%" y="453" width="0.0796%" height="15" fill="rgb(240,194,35)" fg:x="459" fg:w="1"/><text x="36.7946%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.5446%" y="437" width="0.0796%" height="15" fill="rgb(219,10,44)" fg:x="459" fg:w="1"/><text x="36.7946%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="36.7834%" y="501" width="0.0796%" height="15" fill="rgb(251,220,35)" fg:x="462" fg:w="1"/><text x="37.0334%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="36.7834%" y="485" width="0.0796%" height="15" fill="rgb(218,117,13)" fg:x="462" fg:w="1"/><text x="37.0334%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.7834%" y="469" width="0.0796%" height="15" fill="rgb(221,213,40)" fg:x="462" fg:w="1"/><text x="37.0334%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="36.7834%" y="453" width="0.0796%" height="15" fill="rgb(251,224,35)" fg:x="462" fg:w="1"/><text x="37.0334%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.7834%" y="437" width="0.0796%" height="15" fill="rgb(241,33,39)" fg:x="462" fg:w="1"/><text x="37.0334%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="36.7834%" y="421" width="0.0796%" height="15" fill="rgb(222,74,17)" fg:x="462" fg:w="1"/><text x="37.0334%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="36.8631%" y="485" width="0.1592%" height="15" fill="rgb(225,103,0)" fg:x="463" fg:w="2"/><text x="37.1131%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.1019%" y="421" width="0.0796%" height="15" fill="rgb(240,0,12)" fg:x="466" fg:w="1"/><text x="37.3519%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="37.0223%" y="485" width="0.2389%" height="15" fill="rgb(233,213,37)" fg:x="465" fg:w="3"/><text x="37.2723%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="37.0223%" y="469" width="0.2389%" height="15" fill="rgb(225,84,52)" fg:x="465" fg:w="3"/><text x="37.2723%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="37.1019%" y="453" width="0.1592%" height="15" fill="rgb(247,160,51)" fg:x="466" fg:w="2"/><text x="37.3519%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="37.1019%" y="437" width="0.1592%" height="15" fill="rgb(244,60,51)" fg:x="466" fg:w="2"/><text x="37.3519%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="37.1815%" y="421" width="0.0796%" height="15" fill="rgb(233,114,7)" fg:x="467" fg:w="1"/><text x="37.4315%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="37.3408%" y="469" width="0.0796%" height="15" fill="rgb(246,136,16)" fg:x="469" fg:w="1"/><text x="37.5908%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.3408%" y="453" width="0.0796%" height="15" fill="rgb(243,114,45)" fg:x="469" fg:w="1"/><text x="37.5908%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="37.5796%" y="453" width="0.0796%" height="15" fill="rgb(247,183,43)" fg:x="472" fg:w="1"/><text x="37.8296%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.5796%" y="437" width="0.0796%" height="15" fill="rgb(251,210,42)" fg:x="472" fg:w="1"/><text x="37.8296%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.5796%" y="421" width="0.0796%" height="15" fill="rgb(221,88,35)" fg:x="472" fg:w="1"/><text x="37.8296%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.5796%" y="405" width="0.0796%" height="15" fill="rgb(242,21,20)" fg:x="472" fg:w="1"/><text x="37.8296%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.5796%" y="389" width="0.0796%" height="15" fill="rgb(233,226,36)" fg:x="472" fg:w="1"/><text x="37.8296%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.5796%" y="373" width="0.0796%" height="15" fill="rgb(243,189,34)" fg:x="472" fg:w="1"/><text x="37.8296%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="37.5796%" y="357" width="0.0796%" height="15" fill="rgb(207,145,50)" fg:x="472" fg:w="1"/><text x="37.8296%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="37.6592%" y="437" width="0.3185%" height="15" fill="rgb(242,1,50)" fg:x="473" fg:w="4"/><text x="37.9092%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="37.6592%" y="421" width="0.3185%" height="15" fill="rgb(231,65,32)" fg:x="473" fg:w="4"/><text x="37.9092%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.8981%" y="405" width="0.0796%" height="15" fill="rgb(208,68,49)" fg:x="476" fg:w="1"/><text x="38.1481%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.8981%" y="389" width="0.0796%" height="15" fill="rgb(253,54,49)" fg:x="476" fg:w="1"/><text x="38.1481%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="38.0573%" y="421" width="0.3185%" height="15" fill="rgb(245,186,24)" fg:x="478" fg:w="4"/><text x="38.3073%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="38.1369%" y="405" width="0.2389%" height="15" fill="rgb(209,2,41)" fg:x="479" fg:w="3"/><text x="38.3869%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.2962%" y="389" width="0.0796%" height="15" fill="rgb(242,208,54)" fg:x="481" fg:w="1"/><text x="38.5462%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="38.2962%" y="373" width="0.0796%" height="15" fill="rgb(225,9,51)" fg:x="481" fg:w="1"/><text x="38.5462%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="38.3758%" y="421" width="0.1592%" height="15" fill="rgb(207,207,25)" fg:x="482" fg:w="2"/><text x="38.6258%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="38.3758%" y="405" width="0.1592%" height="15" fill="rgb(253,96,18)" fg:x="482" fg:w="2"/><text x="38.6258%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="38.3758%" y="389" width="0.1592%" height="15" fill="rgb(252,215,20)" fg:x="482" fg:w="2"/><text x="38.6258%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.4554%" y="373" width="0.0796%" height="15" fill="rgb(245,227,26)" fg:x="483" fg:w="1"/><text x="38.7054%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.6146%" y="389" width="0.0796%" height="15" fill="rgb(241,208,0)" fg:x="485" fg:w="1"/><text x="38.8646%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="37.9777%" y="437" width="0.7962%" height="15" fill="rgb(224,130,10)" fg:x="477" fg:w="10"/><text x="38.2277%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="38.5350%" y="421" width="0.2389%" height="15" fill="rgb(237,29,0)" fg:x="484" fg:w="3"/><text x="38.7850%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="38.6146%" y="405" width="0.1592%" height="15" fill="rgb(219,27,41)" fg:x="485" fg:w="2"/><text x="38.8646%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="38.6943%" y="389" width="0.0796%" height="15" fill="rgb(245,101,19)" fg:x="486" fg:w="1"/><text x="38.9443%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="37.6592%" y="453" width="1.1943%" height="15" fill="rgb(243,44,37)" fg:x="473" fg:w="15"/><text x="37.9092%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.7739%" y="437" width="0.0796%" height="15" fill="rgb(228,213,43)" fg:x="487" fg:w="1"/><text x="39.0239%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.67%)</title><rect x="37.4204%" y="469" width="1.6720%" height="15" fill="rgb(219,163,21)" fg:x="470" fg:w="21"/><text x="37.6704%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="38.8535%" y="453" width="0.2389%" height="15" fill="rgb(234,86,24)" fg:x="488" fg:w="3"/><text x="39.1035%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="38.8535%" y="437" width="0.2389%" height="15" fill="rgb(225,10,24)" fg:x="488" fg:w="3"/><text x="39.1035%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.0127%" y="421" width="0.0796%" height="15" fill="rgb(218,109,7)" fg:x="490" fg:w="1"/><text x="39.2627%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.07%)</title><rect x="37.2611%" y="485" width="2.0701%" height="15" fill="rgb(210,20,26)" fg:x="468" fg:w="26"/><text x="37.5111%" y="495.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="39.0924%" y="469" width="0.2389%" height="15" fill="rgb(216,18,1)" fg:x="491" fg:w="3"/><text x="39.3424%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="39.1720%" y="453" width="0.1592%" height="15" fill="rgb(206,163,23)" fg:x="492" fg:w="2"/><text x="39.4220%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="39.2516%" y="437" width="0.0796%" height="15" fill="rgb(229,150,31)" fg:x="493" fg:w="1"/><text x="39.5016%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.55%)</title><rect x="36.8631%" y="501" width="2.5478%" height="15" fill="rgb(231,10,5)" fg:x="463" fg:w="32"/><text x="37.1131%" y="511.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.3312%" y="485" width="0.0796%" height="15" fill="rgb(250,40,50)" fg:x="494" fg:w="1"/><text x="39.5812%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.3312%" y="469" width="0.0796%" height="15" fill="rgb(217,119,7)" fg:x="494" fg:w="1"/><text x="39.5812%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.3312%" y="453" width="0.0796%" height="15" fill="rgb(245,214,40)" fg:x="494" fg:w="1"/><text x="39.5812%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.4108%" y="469" width="0.1592%" height="15" fill="rgb(216,187,1)" fg:x="495" fg:w="2"/><text x="39.6608%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.5701%" y="469" width="0.0796%" height="15" fill="rgb(237,146,21)" fg:x="497" fg:w="1"/><text x="39.8201%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.6497%" y="453" width="0.0796%" height="15" fill="rgb(210,174,47)" fg:x="498" fg:w="1"/><text x="39.8997%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.6497%" y="437" width="0.0796%" height="15" fill="rgb(218,111,39)" fg:x="498" fg:w="1"/><text x="39.8997%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="39.8885%" y="421" width="0.2389%" height="15" fill="rgb(224,95,19)" fg:x="501" fg:w="3"/><text x="40.1385%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="39.4108%" y="501" width="0.9554%" height="15" fill="rgb(234,15,38)" fg:x="495" fg:w="12"/><text x="39.6608%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.96%)</title><rect x="39.4108%" y="485" width="0.9554%" height="15" fill="rgb(246,56,12)" fg:x="495" fg:w="12"/><text x="39.6608%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="39.6497%" y="469" width="0.7166%" height="15" fill="rgb(247,16,17)" fg:x="498" fg:w="9"/><text x="39.8997%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="39.7293%" y="453" width="0.6369%" height="15" fill="rgb(215,151,11)" fg:x="499" fg:w="8"/><text x="39.9793%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="39.7293%" y="437" width="0.6369%" height="15" fill="rgb(225,16,24)" fg:x="499" fg:w="8"/><text x="39.9793%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="40.1274%" y="421" width="0.2389%" height="15" fill="rgb(217,117,5)" fg:x="504" fg:w="3"/><text x="40.3774%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.2070%" y="405" width="0.1592%" height="15" fill="rgb(246,187,53)" fg:x="505" fg:w="2"/><text x="40.4570%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="40.6847%" y="437" width="0.1592%" height="15" fill="rgb(241,71,40)" fg:x="511" fg:w="2"/><text x="40.9347%" y="447.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="40.8439%" y="421" width="0.3185%" height="15" fill="rgb(231,67,39)" fg:x="513" fg:w="4"/><text x="41.0939%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="41.1624%" y="421" width="0.2389%" height="15" fill="rgb(222,120,24)" fg:x="517" fg:w="3"/><text x="41.4124%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="41.1624%" y="405" width="0.2389%" height="15" fill="rgb(248,3,3)" fg:x="517" fg:w="3"/><text x="41.4124%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="41.5605%" y="405" width="0.1592%" height="15" fill="rgb(228,218,5)" fg:x="522" fg:w="2"/><text x="41.8105%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.6401%" y="389" width="0.0796%" height="15" fill="rgb(212,202,43)" fg:x="523" fg:w="1"/><text x="41.8901%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="41.7197%" y="389" width="0.2389%" height="15" fill="rgb(235,183,2)" fg:x="524" fg:w="3"/><text x="41.9697%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="41.9586%" y="389" width="0.1592%" height="15" fill="rgb(230,165,10)" fg:x="527" fg:w="2"/><text x="42.2086%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="41.9586%" y="373" width="0.1592%" height="15" fill="rgb(219,54,40)" fg:x="527" fg:w="2"/><text x="42.2086%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="41.9586%" y="357" width="0.1592%" height="15" fill="rgb(244,73,9)" fg:x="527" fg:w="2"/><text x="42.2086%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="41.9586%" y="341" width="0.1592%" height="15" fill="rgb(212,32,45)" fg:x="527" fg:w="2"/><text x="42.2086%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.67%)</title><rect x="40.6051%" y="469" width="1.6720%" height="15" fill="rgb(205,58,31)" fg:x="510" fg:w="21"/><text x="40.8551%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (21 samples, 1.67%)</title><rect x="40.6051%" y="453" width="1.6720%" height="15" fill="rgb(250,120,43)" fg:x="510" fg:w="21"/><text x="40.8551%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.43%)</title><rect x="40.8439%" y="437" width="1.4331%" height="15" fill="rgb(235,13,10)" fg:x="513" fg:w="18"/><text x="41.0939%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="41.4013%" y="421" width="0.8758%" height="15" fill="rgb(232,219,31)" fg:x="520" fg:w="11"/><text x="41.6513%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="41.7197%" y="405" width="0.5573%" height="15" fill="rgb(218,157,51)" fg:x="524" fg:w="7"/><text x="41.9697%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="42.1178%" y="389" width="0.1592%" height="15" fill="rgb(211,91,52)" fg:x="529" fg:w="2"/><text x="42.3678%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.1178%" y="373" width="0.1592%" height="15" fill="rgb(240,173,1)" fg:x="529" fg:w="2"/><text x="42.3678%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="42.2771%" y="389" width="0.0796%" height="15" fill="rgb(248,20,47)" fg:x="531" fg:w="1"/><text x="42.5271%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="42.2771%" y="453" width="0.1592%" height="15" fill="rgb(217,221,40)" fg:x="531" fg:w="2"/><text x="42.5271%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="42.2771%" y="437" width="0.1592%" height="15" fill="rgb(226,149,51)" fg:x="531" fg:w="2"/><text x="42.5271%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="42.2771%" y="421" width="0.1592%" height="15" fill="rgb(252,193,7)" fg:x="531" fg:w="2"/><text x="42.5271%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="42.2771%" y="405" width="0.1592%" height="15" fill="rgb(205,123,0)" fg:x="531" fg:w="2"/><text x="42.5271%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.3567%" y="389" width="0.0796%" height="15" fill="rgb(233,173,25)" fg:x="532" fg:w="1"/><text x="42.6067%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (26 samples, 2.07%)</title><rect x="40.4459%" y="485" width="2.0701%" height="15" fill="rgb(216,63,32)" fg:x="508" fg:w="26"/><text x="40.6959%" y="495.50">&lt;..</text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="42.2771%" y="469" width="0.2389%" height="15" fill="rgb(209,56,45)" fg:x="531" fg:w="3"/><text x="42.5271%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="42.4363%" y="453" width="0.0796%" height="15" fill="rgb(226,111,49)" fg:x="533" fg:w="1"/><text x="42.6863%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.4363%" y="437" width="0.0796%" height="15" fill="rgb(244,181,21)" fg:x="533" fg:w="1"/><text x="42.6863%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4363%" y="421" width="0.0796%" height="15" fill="rgb(222,126,15)" fg:x="533" fg:w="1"/><text x="42.6863%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="42.9936%" y="453" width="0.1592%" height="15" fill="rgb(222,95,17)" fg:x="540" fg:w="2"/><text x="43.2436%" y="463.50"></text></g><g><title>__rdl_alloc (2 samples, 0.16%)</title><rect x="43.1529%" y="453" width="0.1592%" height="15" fill="rgb(254,46,5)" fg:x="542" fg:w="2"/><text x="43.4029%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.16%)</title><rect x="43.1529%" y="437" width="0.1592%" height="15" fill="rgb(236,216,35)" fg:x="542" fg:w="2"/><text x="43.4029%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="43.3121%" y="453" width="0.3185%" height="15" fill="rgb(217,187,26)" fg:x="544" fg:w="4"/><text x="43.5621%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="43.3917%" y="437" width="0.2389%" height="15" fill="rgb(207,192,25)" fg:x="545" fg:w="3"/><text x="43.6417%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="43.3917%" y="421" width="0.2389%" height="15" fill="rgb(253,135,27)" fg:x="545" fg:w="3"/><text x="43.6417%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="43.7102%" y="437" width="0.0796%" height="15" fill="rgb(211,122,29)" fg:x="549" fg:w="1"/><text x="43.9602%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="43.6306%" y="453" width="0.2389%" height="15" fill="rgb(233,162,40)" fg:x="548" fg:w="3"/><text x="43.8806%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="43.7898%" y="437" width="0.0796%" height="15" fill="rgb(222,184,47)" fg:x="550" fg:w="1"/><text x="44.0398%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="43.8694%" y="453" width="0.3185%" height="15" fill="rgb(249,99,23)" fg:x="551" fg:w="4"/><text x="44.1194%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="44.0287%" y="437" width="0.1592%" height="15" fill="rgb(214,60,12)" fg:x="553" fg:w="2"/><text x="44.2787%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.1083%" y="421" width="0.0796%" height="15" fill="rgb(250,229,36)" fg:x="554" fg:w="1"/><text x="44.3583%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="44.4268%" y="405" width="0.3981%" height="15" fill="rgb(232,195,10)" fg:x="558" fg:w="5"/><text x="44.6768%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="44.4268%" y="389" width="0.3981%" height="15" fill="rgb(205,213,31)" fg:x="558" fg:w="5"/><text x="44.6768%" y="399.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="44.4268%" y="373" width="0.3981%" height="15" fill="rgb(237,43,8)" fg:x="558" fg:w="5"/><text x="44.6768%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="44.8248%" y="389" width="0.0796%" height="15" fill="rgb(216,208,3)" fg:x="563" fg:w="1"/><text x="45.0748%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8248%" y="373" width="0.0796%" height="15" fill="rgb(228,179,44)" fg:x="563" fg:w="1"/><text x="45.0748%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.9045%" y="373" width="0.0796%" height="15" fill="rgb(230,192,27)" fg:x="564" fg:w="1"/><text x="45.1545%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.9841%" y="357" width="0.1592%" height="15" fill="rgb(251,30,38)" fg:x="565" fg:w="2"/><text x="45.2341%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.9841%" y="341" width="0.1592%" height="15" fill="rgb(246,55,52)" fg:x="565" fg:w="2"/><text x="45.2341%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.0637%" y="325" width="0.0796%" height="15" fill="rgb(249,79,26)" fg:x="566" fg:w="1"/><text x="45.3137%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="44.8248%" y="405" width="0.3981%" height="15" fill="rgb(220,202,16)" fg:x="563" fg:w="5"/><text x="45.0748%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="44.9045%" y="389" width="0.3185%" height="15" fill="rgb(250,170,23)" fg:x="564" fg:w="4"/><text x="45.1545%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="44.9841%" y="373" width="0.2389%" height="15" fill="rgb(230,7,37)" fg:x="565" fg:w="3"/><text x="45.2341%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="45.1433%" y="357" width="0.0796%" height="15" fill="rgb(213,71,1)" fg:x="567" fg:w="1"/><text x="45.3933%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="45.8599%" y="373" width="0.3981%" height="15" fill="rgb(227,87,39)" fg:x="576" fg:w="5"/><text x="46.1099%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="45.8599%" y="357" width="0.3981%" height="15" fill="rgb(210,41,29)" fg:x="576" fg:w="5"/><text x="46.1099%" y="367.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="45.8599%" y="341" width="0.3981%" height="15" fill="rgb(206,191,31)" fg:x="576" fg:w="5"/><text x="46.1099%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="46.3376%" y="357" width="0.6369%" height="15" fill="rgb(247,75,54)" fg:x="582" fg:w="8"/><text x="46.5876%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="46.4172%" y="341" width="0.5573%" height="15" fill="rgb(208,54,50)" fg:x="583" fg:w="7"/><text x="46.6672%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.8949%" y="325" width="0.0796%" height="15" fill="rgb(214,90,37)" fg:x="589" fg:w="1"/><text x="47.1449%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8949%" y="309" width="0.0796%" height="15" fill="rgb(220,132,6)" fg:x="589" fg:w="1"/><text x="47.1449%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.43%)</title><rect x="45.6210%" y="389" width="1.4331%" height="15" fill="rgb(213,167,7)" fg:x="573" fg:w="18"/><text x="45.8710%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="46.2580%" y="373" width="0.7962%" height="15" fill="rgb(243,36,27)" fg:x="581" fg:w="10"/><text x="46.5080%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9745%" y="357" width="0.0796%" height="15" fill="rgb(235,147,12)" fg:x="590" fg:w="1"/><text x="47.2245%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (35 samples, 2.79%)</title><rect x="44.4268%" y="421" width="2.7866%" height="15" fill="rgb(212,198,44)" fg:x="558" fg:w="35"/><text x="44.6768%" y="431.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (25 samples, 1.99%)</title><rect x="45.2229%" y="405" width="1.9904%" height="15" fill="rgb(218,68,50)" fg:x="568" fg:w="25"/><text x="45.4729%" y="415.50">s..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.0541%" y="389" width="0.1592%" height="15" fill="rgb(224,79,48)" fg:x="591" fg:w="2"/><text x="47.3041%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (38 samples, 3.03%)</title><rect x="44.2675%" y="437" width="3.0255%" height="15" fill="rgb(213,191,50)" fg:x="556" fg:w="38"/><text x="44.5175%" y="447.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="47.2134%" y="421" width="0.0796%" height="15" fill="rgb(254,146,10)" fg:x="593" fg:w="1"/><text x="47.4634%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (61 samples, 4.86%)</title><rect x="42.5159%" y="485" width="4.8567%" height="15" fill="rgb(215,175,11)" fg:x="534" fg:w="61"/><text x="42.7659%" y="495.50">kernel..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (59 samples, 4.70%)</title><rect x="42.6752%" y="469" width="4.6975%" height="15" fill="rgb(207,49,7)" fg:x="536" fg:w="59"/><text x="42.9252%" y="479.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (40 samples, 3.18%)</title><rect x="44.1879%" y="453" width="3.1847%" height="15" fill="rgb(234,144,29)" fg:x="555" fg:w="40"/><text x="44.4379%" y="463.50">ser..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.2930%" y="437" width="0.0796%" height="15" fill="rgb(213,222,48)" fg:x="594" fg:w="1"/><text x="47.5430%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.0096%" y="373" width="0.0796%" height="15" fill="rgb(222,8,6)" fg:x="603" fg:w="1"/><text x="48.2596%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.4873%" y="309" width="0.0796%" height="15" fill="rgb(221,114,49)" fg:x="609" fg:w="1"/><text x="48.7373%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.4873%" y="293" width="0.0796%" height="15" fill="rgb(250,140,42)" fg:x="609" fg:w="1"/><text x="48.7373%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="48.4076%" y="341" width="0.2389%" height="15" fill="rgb(250,150,27)" fg:x="608" fg:w="3"/><text x="48.6576%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.4873%" y="325" width="0.1592%" height="15" fill="rgb(252,159,3)" fg:x="609" fg:w="2"/><text x="48.7373%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.5669%" y="309" width="0.0796%" height="15" fill="rgb(241,182,3)" fg:x="610" fg:w="1"/><text x="48.8169%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.5669%" y="293" width="0.0796%" height="15" fill="rgb(236,3,9)" fg:x="610" fg:w="1"/><text x="48.8169%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="48.8057%" y="325" width="0.1592%" height="15" fill="rgb(223,227,51)" fg:x="613" fg:w="2"/><text x="49.0557%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.8057%" y="309" width="0.1592%" height="15" fill="rgb(232,133,30)" fg:x="613" fg:w="2"/><text x="49.0557%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.8854%" y="293" width="0.0796%" height="15" fill="rgb(209,93,27)" fg:x="614" fg:w="1"/><text x="49.1354%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.8854%" y="277" width="0.0796%" height="15" fill="rgb(208,108,34)" fg:x="614" fg:w="1"/><text x="49.1354%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="48.9650%" y="325" width="0.1592%" height="15" fill="rgb(215,189,13)" fg:x="615" fg:w="2"/><text x="49.2150%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="48.9650%" y="309" width="0.1592%" height="15" fill="rgb(206,88,23)" fg:x="615" fg:w="2"/><text x="49.2150%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="48.1688%" y="357" width="1.0350%" height="15" fill="rgb(240,173,0)" fg:x="605" fg:w="13"/><text x="48.4188%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="48.6465%" y="341" width="0.5573%" height="15" fill="rgb(223,106,52)" fg:x="611" fg:w="7"/><text x="48.8965%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.1242%" y="325" width="0.0796%" height="15" fill="rgb(206,130,16)" fg:x="617" fg:w="1"/><text x="49.3742%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.1242%" y="309" width="0.0796%" height="15" fill="rgb(220,54,25)" fg:x="617" fg:w="1"/><text x="49.3742%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="49.2834%" y="341" width="0.1592%" height="15" fill="rgb(210,4,38)" fg:x="619" fg:w="2"/><text x="49.5334%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.75%)</title><rect x="47.7707%" y="389" width="1.7516%" height="15" fill="rgb(238,94,39)" fg:x="600" fg:w="22"/><text x="48.0207%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.43%)</title><rect x="48.0892%" y="373" width="1.4331%" height="15" fill="rgb(234,124,34)" fg:x="604" fg:w="18"/><text x="48.3392%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="49.2038%" y="357" width="0.3185%" height="15" fill="rgb(221,91,40)" fg:x="618" fg:w="4"/><text x="49.4538%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.4427%" y="341" width="0.0796%" height="15" fill="rgb(246,53,28)" fg:x="621" fg:w="1"/><text x="49.6927%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="49.5223%" y="389" width="0.2389%" height="15" fill="rgb(229,109,7)" fg:x="622" fg:w="3"/><text x="49.7723%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.6815%" y="373" width="0.0796%" height="15" fill="rgb(249,117,8)" fg:x="624" fg:w="1"/><text x="49.9315%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.31%)</title><rect x="47.6115%" y="405" width="2.3089%" height="15" fill="rgb(210,181,1)" fg:x="598" fg:w="29"/><text x="47.8615%" y="415.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.7611%" y="389" width="0.1592%" height="15" fill="rgb(211,66,1)" fg:x="625" fg:w="2"/><text x="50.0111%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.8408%" y="373" width="0.0796%" height="15" fill="rgb(221,90,14)" fg:x="626" fg:w="1"/><text x="50.0908%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.8408%" y="357" width="0.0796%" height="15" fill="rgb(219,222,44)" fg:x="626" fg:w="1"/><text x="50.0908%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (30 samples, 2.39%)</title><rect x="47.6115%" y="421" width="2.3885%" height="15" fill="rgb(246,34,33)" fg:x="598" fg:w="30"/><text x="47.8615%" y="431.50">&lt;&amp;..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.9204%" y="405" width="0.0796%" height="15" fill="rgb(227,135,41)" fg:x="627" fg:w="1"/><text x="50.1704%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="50.0000%" y="421" width="0.2389%" height="15" fill="rgb(226,15,14)" fg:x="628" fg:w="3"/><text x="50.2500%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.1592%" y="405" width="0.0796%" height="15" fill="rgb(236,148,47)" fg:x="630" fg:w="1"/><text x="50.4092%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3185%" y="389" width="0.0796%" height="15" fill="rgb(233,162,52)" fg:x="632" fg:w="1"/><text x="50.5685%" y="399.50"></text></g><g><title>engine::session::Session::close (179 samples, 14.25%)</title><rect x="36.2261%" y="597" width="14.2516%" height="15" fill="rgb(244,35,28)" fg:x="455" fg:w="179"/><text x="36.4761%" y="607.50">engine::session::Sessi..</text></g><g><title>engine::session::state::State::close (174 samples, 13.85%)</title><rect x="36.6242%" y="581" width="13.8535%" height="15" fill="rgb(205,121,10)" fg:x="460" fg:w="174"/><text x="36.8742%" y="591.50">engine::session::stat..</text></g><g><title>engine::session::state::State::flush_entities (174 samples, 13.85%)</title><rect x="36.6242%" y="565" width="13.8535%" height="15" fill="rgb(250,58,18)" fg:x="460" fg:w="174"/><text x="36.8742%" y="575.50">engine::session::stat..</text></g><g><title>core::iter::adapters::try_process (174 samples, 13.85%)</title><rect x="36.6242%" y="549" width="13.8535%" height="15" fill="rgb(216,37,13)" fg:x="460" fg:w="174"/><text x="36.8742%" y="559.50">core::iter::adapters:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (174 samples, 13.85%)</title><rect x="36.6242%" y="533" width="13.8535%" height="15" fill="rgb(221,215,42)" fg:x="460" fg:w="174"/><text x="36.8742%" y="543.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (173 samples, 13.77%)</title><rect x="36.7038%" y="517" width="13.7739%" height="15" fill="rgb(217,214,19)" fg:x="461" fg:w="173"/><text x="36.9538%" y="527.50">engine::session::stat..</text></g><g><title>kernel::model::any_entity_changes (127 samples, 10.11%)</title><rect x="40.3662%" y="501" width="10.1115%" height="15" fill="rgb(233,139,13)" fg:x="507" fg:w="127"/><text x="40.6162%" y="511.50">kernel::model::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (39 samples, 3.11%)</title><rect x="47.3726%" y="485" width="3.1051%" height="15" fill="rgb(247,168,23)" fg:x="595" fg:w="39"/><text x="47.6226%" y="495.50">ser..</text></g><g><title>serde_json::de::from_trait (39 samples, 3.11%)</title><rect x="47.3726%" y="469" width="3.1051%" height="15" fill="rgb(207,202,1)" fg:x="595" fg:w="39"/><text x="47.6226%" y="479.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (39 samples, 3.11%)</title><rect x="47.3726%" y="453" width="3.1051%" height="15" fill="rgb(220,155,48)" fg:x="595" fg:w="39"/><text x="47.6226%" y="463.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (39 samples, 3.11%)</title><rect x="47.3726%" y="437" width="3.1051%" height="15" fill="rgb(250,43,26)" fg:x="595" fg:w="39"/><text x="47.6226%" y="447.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="50.2389%" y="421" width="0.2389%" height="15" fill="rgb(212,190,23)" fg:x="631" fg:w="3"/><text x="50.4889%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.3185%" y="405" width="0.1592%" height="15" fill="rgb(216,39,24)" fg:x="632" fg:w="2"/><text x="50.5685%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="50.3981%" y="389" width="0.0796%" height="15" fill="rgb(252,113,16)" fg:x="633" fg:w="1"/><text x="50.6481%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="50.6369%" y="421" width="0.0796%" height="15" fill="rgb(208,113,19)" fg:x="636" fg:w="1"/><text x="50.8869%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="50.6369%" y="405" width="0.0796%" height="15" fill="rgb(234,107,25)" fg:x="636" fg:w="1"/><text x="50.8869%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.6369%" y="389" width="0.0796%" height="15" fill="rgb(234,217,51)" fg:x="636" fg:w="1"/><text x="50.8869%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="50.6369%" y="373" width="0.0796%" height="15" fill="rgb(251,29,42)" fg:x="636" fg:w="1"/><text x="50.8869%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.6369%" y="357" width="0.0796%" height="15" fill="rgb(221,62,51)" fg:x="636" fg:w="1"/><text x="50.8869%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.6369%" y="341" width="0.0796%" height="15" fill="rgb(240,192,43)" fg:x="636" fg:w="1"/><text x="50.8869%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.7166%" y="325" width="0.0796%" height="15" fill="rgb(224,157,47)" fg:x="637" fg:w="1"/><text x="50.9666%" y="335.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (5 samples, 0.40%)</title><rect x="50.5573%" y="469" width="0.3981%" height="15" fill="rgb(226,84,45)" fg:x="635" fg:w="5"/><text x="50.8073%" y="479.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (5 samples, 0.40%)</title><rect x="50.5573%" y="453" width="0.3981%" height="15" fill="rgb(208,207,23)" fg:x="635" fg:w="5"/><text x="50.8073%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="50.6369%" y="437" width="0.3185%" height="15" fill="rgb(253,34,51)" fg:x="636" fg:w="4"/><text x="50.8869%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="50.7166%" y="421" width="0.2389%" height="15" fill="rgb(227,26,34)" fg:x="637" fg:w="3"/><text x="50.9666%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="50.7166%" y="405" width="0.2389%" height="15" fill="rgb(245,75,19)" fg:x="637" fg:w="3"/><text x="50.9666%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="50.7166%" y="389" width="0.2389%" height="15" fill="rgb(250,191,31)" fg:x="637" fg:w="3"/><text x="50.9666%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.7166%" y="373" width="0.2389%" height="15" fill="rgb(224,11,50)" fg:x="637" fg:w="3"/><text x="50.9666%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="50.7166%" y="357" width="0.2389%" height="15" fill="rgb(231,171,7)" fg:x="637" fg:w="3"/><text x="50.9666%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.7166%" y="341" width="0.2389%" height="15" fill="rgb(252,214,10)" fg:x="637" fg:w="3"/><text x="50.9666%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.7962%" y="325" width="0.1592%" height="15" fill="rgb(249,45,46)" fg:x="638" fg:w="2"/><text x="51.0462%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.7962%" y="309" width="0.1592%" height="15" fill="rgb(240,173,7)" fg:x="638" fg:w="2"/><text x="51.0462%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9554%" y="437" width="0.0796%" height="15" fill="rgb(235,214,13)" fg:x="640" fg:w="1"/><text x="51.2054%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9554%" y="421" width="0.0796%" height="15" fill="rgb(245,156,8)" fg:x="640" fg:w="1"/><text x="51.2054%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9554%" y="405" width="0.0796%" height="15" fill="rgb(235,46,12)" fg:x="640" fg:w="1"/><text x="51.2054%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.0350%" y="437" width="0.0796%" height="15" fill="rgb(221,81,14)" fg:x="641" fg:w="1"/><text x="51.2850%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.1146%" y="437" width="0.0796%" height="15" fill="rgb(238,207,9)" fg:x="642" fg:w="1"/><text x="51.3646%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="51.1146%" y="421" width="0.0796%" height="15" fill="rgb(224,129,35)" fg:x="642" fg:w="1"/><text x="51.3646%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (9 samples, 0.72%)</title><rect x="50.5573%" y="485" width="0.7166%" height="15" fill="rgb(243,218,34)" fg:x="635" fg:w="9"/><text x="50.8073%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="50.9554%" y="469" width="0.3185%" height="15" fill="rgb(220,166,13)" fg:x="640" fg:w="4"/><text x="51.2054%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="50.9554%" y="453" width="0.3185%" height="15" fill="rgb(227,167,49)" fg:x="640" fg:w="4"/><text x="51.2054%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.1943%" y="437" width="0.0796%" height="15" fill="rgb(234,142,12)" fg:x="643" fg:w="1"/><text x="51.4443%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.1943%" y="421" width="0.0796%" height="15" fill="rgb(207,100,48)" fg:x="643" fg:w="1"/><text x="51.4443%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.1943%" y="405" width="0.0796%" height="15" fill="rgb(210,25,14)" fg:x="643" fg:w="1"/><text x="51.4443%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.1943%" y="389" width="0.0796%" height="15" fill="rgb(246,116,27)" fg:x="643" fg:w="1"/><text x="51.4443%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="51.2739%" y="421" width="0.0796%" height="15" fill="rgb(214,193,42)" fg:x="644" fg:w="1"/><text x="51.5239%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.4331%" y="373" width="0.0796%" height="15" fill="rgb(214,122,8)" fg:x="646" fg:w="1"/><text x="51.6831%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="51.2739%" y="437" width="0.3185%" height="15" fill="rgb(244,173,18)" fg:x="644" fg:w="4"/><text x="51.5239%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="51.3535%" y="421" width="0.2389%" height="15" fill="rgb(232,68,19)" fg:x="645" fg:w="3"/><text x="51.6035%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.4331%" y="405" width="0.1592%" height="15" fill="rgb(236,224,1)" fg:x="646" fg:w="2"/><text x="51.6831%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.4331%" y="389" width="0.1592%" height="15" fill="rgb(240,11,8)" fg:x="646" fg:w="2"/><text x="51.6831%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.5127%" y="373" width="0.0796%" height="15" fill="rgb(244,159,20)" fg:x="647" fg:w="1"/><text x="51.7627%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.5127%" y="357" width="0.0796%" height="15" fill="rgb(240,223,54)" fg:x="647" fg:w="1"/><text x="51.7627%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.5127%" y="341" width="0.0796%" height="15" fill="rgb(237,146,5)" fg:x="647" fg:w="1"/><text x="51.7627%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.5924%" y="405" width="0.2389%" height="15" fill="rgb(218,221,32)" fg:x="648" fg:w="3"/><text x="51.8424%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.5924%" y="389" width="0.2389%" height="15" fill="rgb(244,96,26)" fg:x="648" fg:w="3"/><text x="51.8424%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.6720%" y="373" width="0.1592%" height="15" fill="rgb(245,184,37)" fg:x="649" fg:w="2"/><text x="51.9220%" y="383.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (17 samples, 1.35%)</title><rect x="50.5573%" y="501" width="1.3535%" height="15" fill="rgb(248,91,47)" fg:x="635" fg:w="17"/><text x="50.8073%" y="511.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (8 samples, 0.64%)</title><rect x="51.2739%" y="485" width="0.6369%" height="15" fill="rgb(243,199,8)" fg:x="644" fg:w="8"/><text x="51.5239%" y="495.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (8 samples, 0.64%)</title><rect x="51.2739%" y="469" width="0.6369%" height="15" fill="rgb(249,12,15)" fg:x="644" fg:w="8"/><text x="51.5239%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="51.2739%" y="453" width="0.6369%" height="15" fill="rgb(245,97,12)" fg:x="644" fg:w="8"/><text x="51.5239%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="51.5924%" y="437" width="0.3185%" height="15" fill="rgb(244,61,1)" fg:x="648" fg:w="4"/><text x="51.8424%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="51.5924%" y="421" width="0.3185%" height="15" fill="rgb(222,194,10)" fg:x="648" fg:w="4"/><text x="51.8424%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.8312%" y="405" width="0.0796%" height="15" fill="rgb(226,178,8)" fg:x="651" fg:w="1"/><text x="52.0812%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.8312%" y="389" width="0.0796%" height="15" fill="rgb(241,32,34)" fg:x="651" fg:w="1"/><text x="52.0812%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.8312%" y="373" width="0.0796%" height="15" fill="rgb(254,26,6)" fg:x="651" fg:w="1"/><text x="52.0812%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.8312%" y="357" width="0.0796%" height="15" fill="rgb(249,71,11)" fg:x="651" fg:w="1"/><text x="52.0812%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.9108%" y="501" width="0.0796%" height="15" fill="rgb(232,170,27)" fg:x="652" fg:w="1"/><text x="52.1608%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.4682%" y="293" width="0.1592%" height="15" fill="rgb(214,223,17)" fg:x="659" fg:w="2"/><text x="52.7182%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.6274%" y="293" width="0.0796%" height="15" fill="rgb(250,18,15)" fg:x="661" fg:w="1"/><text x="52.8774%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.6274%" y="277" width="0.0796%" height="15" fill="rgb(212,153,51)" fg:x="661" fg:w="1"/><text x="52.8774%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.6274%" y="261" width="0.0796%" height="15" fill="rgb(219,194,12)" fg:x="661" fg:w="1"/><text x="52.8774%" y="271.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (4 samples, 0.32%)</title><rect x="52.7070%" y="293" width="0.3185%" height="15" fill="rgb(212,58,17)" fg:x="662" fg:w="4"/><text x="52.9570%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="52.7866%" y="277" width="0.2389%" height="15" fill="rgb(254,5,10)" fg:x="663" fg:w="3"/><text x="53.0366%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.7866%" y="261" width="0.2389%" height="15" fill="rgb(246,91,7)" fg:x="663" fg:w="3"/><text x="53.0366%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.9459%" y="245" width="0.0796%" height="15" fill="rgb(218,108,49)" fg:x="665" fg:w="1"/><text x="53.1959%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.9459%" y="229" width="0.0796%" height="15" fill="rgb(238,123,20)" fg:x="665" fg:w="1"/><text x="53.1959%" y="239.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="53.0255%" y="245" width="0.2389%" height="15" fill="rgb(231,69,23)" fg:x="666" fg:w="3"/><text x="53.2755%" y="255.50"></text></g><g><title>&lt;replies::AreaObservation as replies::ToTaggedJson&gt;::to_tagged_json (12 samples, 0.96%)</title><rect x="52.3885%" y="341" width="0.9554%" height="15" fill="rgb(230,209,3)" fg:x="658" fg:w="12"/><text x="52.6385%" y="351.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::AreaObservation&gt;::serialize (11 samples, 0.88%)</title><rect x="52.4682%" y="325" width="0.8758%" height="15" fill="rgb(231,19,0)" fg:x="659" fg:w="11"/><text x="52.7182%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="52.4682%" y="309" width="0.8758%" height="15" fill="rgb(226,192,25)" fg:x="659" fg:w="11"/><text x="52.7182%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="53.0255%" y="293" width="0.3185%" height="15" fill="rgb(223,175,53)" fg:x="666" fg:w="4"/><text x="53.2755%" y="303.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (4 samples, 0.32%)</title><rect x="53.0255%" y="277" width="0.3185%" height="15" fill="rgb(248,35,51)" fg:x="666" fg:w="4"/><text x="53.2755%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="53.0255%" y="261" width="0.3185%" height="15" fill="rgb(230,37,26)" fg:x="666" fg:w="4"/><text x="53.2755%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.2643%" y="245" width="0.0796%" height="15" fill="rgb(206,120,22)" fg:x="669" fg:w="1"/><text x="53.5143%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.3439%" y="325" width="0.0796%" height="15" fill="rgb(207,165,28)" fg:x="670" fg:w="1"/><text x="53.5939%" y="335.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::AreaObservation&gt;&gt;::try_from (15 samples, 1.19%)</title><rect x="52.3885%" y="357" width="1.1943%" height="15" fill="rgb(226,23,46)" fg:x="658" fg:w="15"/><text x="52.6385%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (3 samples, 0.24%)</title><rect x="53.3439%" y="341" width="0.2389%" height="15" fill="rgb(208,130,44)" fg:x="670" fg:w="3"/><text x="53.5939%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (2 samples, 0.16%)</title><rect x="53.4236%" y="325" width="0.1592%" height="15" fill="rgb(231,67,8)" fg:x="671" fg:w="2"/><text x="53.6736%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.5032%" y="309" width="0.0796%" height="15" fill="rgb(205,183,22)" fg:x="672" fg:w="1"/><text x="53.7532%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.5828%" y="357" width="0.0796%" height="15" fill="rgb(224,47,9)" fg:x="673" fg:w="1"/><text x="53.8328%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="53.6624%" y="325" width="0.1592%" height="15" fill="rgb(250,183,49)" fg:x="674" fg:w="2"/><text x="53.9124%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="53.6624%" y="309" width="0.1592%" height="15" fill="rgb(220,151,39)" fg:x="674" fg:w="2"/><text x="53.9124%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.7420%" y="293" width="0.0796%" height="15" fill="rgb(220,118,20)" fg:x="675" fg:w="1"/><text x="53.9920%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="53.7420%" y="277" width="0.0796%" height="15" fill="rgb(231,65,51)" fg:x="675" fg:w="1"/><text x="53.9920%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.7420%" y="261" width="0.0796%" height="15" fill="rgb(253,125,37)" fg:x="675" fg:w="1"/><text x="53.9920%" y="271.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="53.8217%" y="309" width="0.1592%" height="15" fill="rgb(232,102,6)" fg:x="676" fg:w="2"/><text x="54.0717%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.0605%" y="261" width="0.1592%" height="15" fill="rgb(251,105,13)" fg:x="679" fg:w="2"/><text x="54.3105%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.0605%" y="293" width="0.2389%" height="15" fill="rgb(222,179,29)" fg:x="679" fg:w="3"/><text x="54.3105%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.0605%" y="277" width="0.2389%" height="15" fill="rgb(229,180,53)" fg:x="679" fg:w="3"/><text x="54.3105%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.2197%" y="261" width="0.0796%" height="15" fill="rgb(238,104,13)" fg:x="681" fg:w="1"/><text x="54.4697%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.2197%" y="245" width="0.0796%" height="15" fill="rgb(210,130,5)" fg:x="681" fg:w="1"/><text x="54.4697%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.2197%" y="229" width="0.0796%" height="15" fill="rgb(233,87,49)" fg:x="681" fg:w="1"/><text x="54.4697%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.2197%" y="213" width="0.0796%" height="15" fill="rgb(243,34,9)" fg:x="681" fg:w="1"/><text x="54.4697%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.2197%" y="197" width="0.0796%" height="15" fill="rgb(235,225,10)" fg:x="681" fg:w="1"/><text x="54.4697%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.2197%" y="181" width="0.0796%" height="15" fill="rgb(212,0,30)" fg:x="681" fg:w="1"/><text x="54.4697%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.2197%" y="165" width="0.0796%" height="15" fill="rgb(211,177,0)" fg:x="681" fg:w="1"/><text x="54.4697%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.2197%" y="149" width="0.0796%" height="15" fill="rgb(225,220,11)" fg:x="681" fg:w="1"/><text x="54.4697%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.2197%" y="133" width="0.0796%" height="15" fill="rgb(215,10,13)" fg:x="681" fg:w="1"/><text x="54.4697%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.2197%" y="117" width="0.0796%" height="15" fill="rgb(240,177,14)" fg:x="681" fg:w="1"/><text x="54.4697%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.2197%" y="101" width="0.0796%" height="15" fill="rgb(243,7,39)" fg:x="681" fg:w="1"/><text x="54.4697%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.2197%" y="85" width="0.0796%" height="15" fill="rgb(212,99,0)" fg:x="681" fg:w="1"/><text x="54.4697%" y="95.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.2994%" y="293" width="0.0796%" height="15" fill="rgb(225,162,48)" fg:x="682" fg:w="1"/><text x="54.5494%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4586%" y="261" width="0.0796%" height="15" fill="rgb(246,16,25)" fg:x="684" fg:w="1"/><text x="54.7086%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="54.3790%" y="293" width="0.2389%" height="15" fill="rgb(220,150,2)" fg:x="683" fg:w="3"/><text x="54.6290%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="54.4586%" y="277" width="0.1592%" height="15" fill="rgb(237,113,11)" fg:x="684" fg:w="2"/><text x="54.7086%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.5382%" y="261" width="0.0796%" height="15" fill="rgb(236,70,20)" fg:x="685" fg:w="1"/><text x="54.7882%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.5382%" y="245" width="0.0796%" height="15" fill="rgb(234,94,7)" fg:x="685" fg:w="1"/><text x="54.7882%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.6975%" y="261" width="0.0796%" height="15" fill="rgb(250,221,0)" fg:x="687" fg:w="1"/><text x="54.9475%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (15 samples, 1.19%)</title><rect x="53.8217%" y="325" width="1.1943%" height="15" fill="rgb(245,149,46)" fg:x="676" fg:w="15"/><text x="54.0717%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.04%)</title><rect x="53.9809%" y="309" width="1.0350%" height="15" fill="rgb(215,37,27)" fg:x="678" fg:w="13"/><text x="54.2309%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="54.6178%" y="293" width="0.3981%" height="15" fill="rgb(232,65,3)" fg:x="686" fg:w="5"/><text x="54.8678%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="54.6178%" y="277" width="0.3981%" height="15" fill="rgb(214,2,16)" fg:x="686" fg:w="5"/><text x="54.8678%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="54.7771%" y="261" width="0.2389%" height="15" fill="rgb(227,131,50)" fg:x="688" fg:w="3"/><text x="55.0271%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.7771%" y="245" width="0.2389%" height="15" fill="rgb(247,131,45)" fg:x="688" fg:w="3"/><text x="55.0271%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="54.7771%" y="229" width="0.2389%" height="15" fill="rgb(215,97,47)" fg:x="688" fg:w="3"/><text x="55.0271%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.7771%" y="213" width="0.2389%" height="15" fill="rgb(233,143,12)" fg:x="688" fg:w="3"/><text x="55.0271%" y="223.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.8567%" y="197" width="0.1592%" height="15" fill="rgb(222,57,17)" fg:x="689" fg:w="2"/><text x="55.1067%" y="207.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="55.0159%" y="309" width="0.0796%" height="15" fill="rgb(214,119,38)" fg:x="691" fg:w="1"/><text x="55.2659%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.3344%" y="245" width="0.0796%" height="15" fill="rgb(217,28,47)" fg:x="695" fg:w="1"/><text x="55.5844%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.3344%" y="229" width="0.0796%" height="15" fill="rgb(231,14,52)" fg:x="695" fg:w="1"/><text x="55.5844%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.3344%" y="213" width="0.0796%" height="15" fill="rgb(220,158,18)" fg:x="695" fg:w="1"/><text x="55.5844%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.3344%" y="197" width="0.0796%" height="15" fill="rgb(222,143,46)" fg:x="695" fg:w="1"/><text x="55.5844%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.3344%" y="181" width="0.0796%" height="15" fill="rgb(227,165,5)" fg:x="695" fg:w="1"/><text x="55.5844%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.3344%" y="165" width="0.0796%" height="15" fill="rgb(216,222,49)" fg:x="695" fg:w="1"/><text x="55.5844%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.3344%" y="149" width="0.0796%" height="15" fill="rgb(238,73,39)" fg:x="695" fg:w="1"/><text x="55.5844%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.3344%" y="133" width="0.0796%" height="15" fill="rgb(252,115,9)" fg:x="695" fg:w="1"/><text x="55.5844%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.3344%" y="117" width="0.0796%" height="15" fill="rgb(238,202,4)" fg:x="695" fg:w="1"/><text x="55.5844%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.3344%" y="101" width="0.0796%" height="15" fill="rgb(252,153,44)" fg:x="695" fg:w="1"/><text x="55.5844%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.3344%" y="85" width="0.0796%" height="15" fill="rgb(235,128,27)" fg:x="695" fg:w="1"/><text x="55.5844%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3344%" y="69" width="0.0796%" height="15" fill="rgb(221,121,47)" fg:x="695" fg:w="1"/><text x="55.5844%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="55.2548%" y="261" width="0.2389%" height="15" fill="rgb(247,211,47)" fg:x="694" fg:w="3"/><text x="55.5048%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.4140%" y="245" width="0.0796%" height="15" fill="rgb(252,47,49)" fg:x="696" fg:w="1"/><text x="55.6640%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="55.1752%" y="293" width="0.3981%" height="15" fill="rgb(219,119,53)" fg:x="693" fg:w="5"/><text x="55.4252%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="55.1752%" y="277" width="0.3981%" height="15" fill="rgb(243,165,53)" fg:x="693" fg:w="5"/><text x="55.4252%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.4936%" y="261" width="0.0796%" height="15" fill="rgb(230,12,35)" fg:x="697" fg:w="1"/><text x="55.7436%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.5732%" y="293" width="0.0796%" height="15" fill="rgb(239,57,49)" fg:x="698" fg:w="1"/><text x="55.8232%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.6529%" y="261" width="0.0796%" height="15" fill="rgb(231,154,7)" fg:x="699" fg:w="1"/><text x="55.9029%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="55.6529%" y="293" width="0.1592%" height="15" fill="rgb(248,81,34)" fg:x="699" fg:w="2"/><text x="55.9029%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="55.6529%" y="277" width="0.1592%" height="15" fill="rgb(247,9,5)" fg:x="699" fg:w="2"/><text x="55.9029%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.7325%" y="261" width="0.0796%" height="15" fill="rgb(228,172,27)" fg:x="700" fg:w="1"/><text x="55.9825%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.8917%" y="261" width="0.0796%" height="15" fill="rgb(230,57,44)" fg:x="702" fg:w="1"/><text x="56.1417%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8917%" y="245" width="0.0796%" height="15" fill="rgb(249,35,22)" fg:x="702" fg:w="1"/><text x="56.1417%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.9713%" y="229" width="0.0796%" height="15" fill="rgb(250,137,27)" fg:x="703" fg:w="1"/><text x="56.2213%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.9713%" y="213" width="0.0796%" height="15" fill="rgb(251,57,31)" fg:x="703" fg:w="1"/><text x="56.2213%" y="223.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="56.0510%" y="229" width="0.0796%" height="15" fill="rgb(238,60,0)" fg:x="704" fg:w="1"/><text x="56.3010%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.1306%" y="229" width="0.0796%" height="15" fill="rgb(242,185,39)" fg:x="705" fg:w="1"/><text x="56.3806%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.1306%" y="213" width="0.0796%" height="15" fill="rgb(240,63,43)" fg:x="705" fg:w="1"/><text x="56.3806%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.3694%" y="197" width="0.0796%" height="15" fill="rgb(236,155,6)" fg:x="708" fg:w="1"/><text x="56.6194%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.3694%" y="181" width="0.0796%" height="15" fill="rgb(215,11,29)" fg:x="708" fg:w="1"/><text x="56.6194%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="56.2102%" y="229" width="0.3185%" height="15" fill="rgb(228,180,48)" fg:x="706" fg:w="4"/><text x="56.4602%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.2898%" y="213" width="0.2389%" height="15" fill="rgb(241,102,12)" fg:x="707" fg:w="3"/><text x="56.5398%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.4490%" y="197" width="0.0796%" height="15" fill="rgb(246,213,4)" fg:x="709" fg:w="1"/><text x="56.6990%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.4490%" y="181" width="0.0796%" height="15" fill="rgb(218,134,35)" fg:x="709" fg:w="1"/><text x="56.6990%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (20 samples, 1.59%)</title><rect x="55.0159%" y="325" width="1.5924%" height="15" fill="rgb(251,117,35)" fg:x="691" fg:w="20"/><text x="55.2659%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (19 samples, 1.51%)</title><rect x="55.0955%" y="309" width="1.5127%" height="15" fill="rgb(206,156,45)" fg:x="692" fg:w="19"/><text x="55.3455%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="55.8121%" y="293" width="0.7962%" height="15" fill="rgb(218,52,27)" fg:x="701" fg:w="10"/><text x="56.0621%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="55.8121%" y="277" width="0.7962%" height="15" fill="rgb(238,83,36)" fg:x="701" fg:w="10"/><text x="56.0621%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="55.9713%" y="261" width="0.6369%" height="15" fill="rgb(218,53,43)" fg:x="703" fg:w="8"/><text x="56.2213%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="55.9713%" y="245" width="0.6369%" height="15" fill="rgb(239,54,39)" fg:x="703" fg:w="8"/><text x="56.2213%" y="255.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="56.5287%" y="229" width="0.0796%" height="15" fill="rgb(212,198,13)" fg:x="710" fg:w="1"/><text x="56.7787%" y="239.50"></text></g><g><title>kernel::model::scopes::Scopes::has_scope (2 samples, 0.16%)</title><rect x="56.6083%" y="325" width="0.1592%" height="15" fill="rgb(234,54,46)" fg:x="711" fg:w="2"/><text x="56.8583%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="56.6083%" y="309" width="0.1592%" height="15" fill="rgb(217,120,7)" fg:x="711" fg:w="2"/><text x="56.8583%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="56.6083%" y="293" width="0.1592%" height="15" fill="rgb(246,39,15)" fg:x="711" fg:w="2"/><text x="56.8583%" y="303.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (40 samples, 3.18%)</title><rect x="53.6624%" y="341" width="3.1847%" height="15" fill="rgb(242,143,31)" fg:x="674" fg:w="40"/><text x="53.9124%" y="351.50">&lt;&amp;k..</text></g><g><title>plugins_core::looking::model::Unqualified::qualify (1 samples, 0.08%)</title><rect x="56.7675%" y="325" width="0.0796%" height="15" fill="rgb(252,60,24)" fg:x="713" fg:w="1"/><text x="57.0175%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="56.8471%" y="309" width="0.0796%" height="15" fill="rgb(249,220,7)" fg:x="714" fg:w="1"/><text x="57.0971%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (3 samples, 0.24%)</title><rect x="56.9268%" y="277" width="0.2389%" height="15" fill="rgb(236,67,13)" fg:x="715" fg:w="3"/><text x="57.1768%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.0860%" y="261" width="0.0796%" height="15" fill="rgb(210,62,39)" fg:x="717" fg:w="1"/><text x="57.3360%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.1656%" y="261" width="0.0796%" height="15" fill="rgb(219,122,53)" fg:x="718" fg:w="1"/><text x="57.4156%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.1656%" y="245" width="0.0796%" height="15" fill="rgb(218,87,25)" fg:x="718" fg:w="1"/><text x="57.4156%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2452%" y="261" width="0.0796%" height="15" fill="rgb(234,179,48)" fg:x="719" fg:w="1"/><text x="57.4952%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.3248%" y="261" width="0.0796%" height="15" fill="rgb(248,90,0)" fg:x="720" fg:w="1"/><text x="57.5748%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.4045%" y="197" width="0.0796%" height="15" fill="rgb(207,228,37)" fg:x="721" fg:w="1"/><text x="57.6545%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.4045%" y="181" width="0.0796%" height="15" fill="rgb(235,214,15)" fg:x="721" fg:w="1"/><text x="57.6545%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="57.4045%" y="165" width="0.0796%" height="15" fill="rgb(210,144,39)" fg:x="721" fg:w="1"/><text x="57.6545%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.4841%" y="197" width="0.0796%" height="15" fill="rgb(222,67,41)" fg:x="722" fg:w="1"/><text x="57.7341%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="56.9268%" y="293" width="0.7166%" height="15" fill="rgb(205,35,37)" fg:x="715" fg:w="9"/><text x="57.1768%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="57.1656%" y="277" width="0.4777%" height="15" fill="rgb(216,125,40)" fg:x="718" fg:w="6"/><text x="57.4156%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="57.4045%" y="261" width="0.2389%" height="15" fill="rgb(228,227,20)" fg:x="721" fg:w="3"/><text x="57.6545%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.4045%" y="245" width="0.2389%" height="15" fill="rgb(242,173,45)" fg:x="721" fg:w="3"/><text x="57.6545%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="57.4045%" y="229" width="0.2389%" height="15" fill="rgb(215,79,24)" fg:x="721" fg:w="3"/><text x="57.6545%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.4045%" y="213" width="0.2389%" height="15" fill="rgb(238,164,38)" fg:x="721" fg:w="3"/><text x="57.6545%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.5637%" y="197" width="0.0796%" height="15" fill="rgb(245,196,38)" fg:x="723" fg:w="1"/><text x="57.8137%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.5637%" y="181" width="0.0796%" height="15" fill="rgb(231,217,29)" fg:x="723" fg:w="1"/><text x="57.8137%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.5637%" y="165" width="0.0796%" height="15" fill="rgb(245,6,4)" fg:x="723" fg:w="1"/><text x="57.8137%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="57.6433%" y="277" width="0.0796%" height="15" fill="rgb(214,76,49)" fg:x="724" fg:w="1"/><text x="57.8933%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.6433%" y="261" width="0.0796%" height="15" fill="rgb(205,96,12)" fg:x="724" fg:w="1"/><text x="57.8933%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.8822%" y="261" width="0.1592%" height="15" fill="rgb(243,131,4)" fg:x="727" fg:w="2"/><text x="58.1322%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.8822%" y="245" width="0.1592%" height="15" fill="rgb(214,114,4)" fg:x="727" fg:w="2"/><text x="58.1322%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.8822%" y="229" width="0.1592%" height="15" fill="rgb(234,215,15)" fg:x="727" fg:w="2"/><text x="58.1322%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9618%" y="213" width="0.0796%" height="15" fill="rgb(250,216,45)" fg:x="728" fg:w="1"/><text x="58.2118%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9618%" y="197" width="0.0796%" height="15" fill="rgb(236,128,4)" fg:x="728" fg:w="1"/><text x="58.2118%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.9618%" y="181" width="0.0796%" height="15" fill="rgb(234,50,33)" fg:x="728" fg:w="1"/><text x="58.2118%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.9618%" y="165" width="0.0796%" height="15" fill="rgb(253,131,37)" fg:x="728" fg:w="1"/><text x="58.2118%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.9618%" y="149" width="0.0796%" height="15" fill="rgb(218,55,27)" fg:x="728" fg:w="1"/><text x="58.2118%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.9618%" y="133" width="0.0796%" height="15" fill="rgb(241,220,28)" fg:x="728" fg:w="1"/><text x="58.2118%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.9618%" y="117" width="0.0796%" height="15" fill="rgb(241,90,48)" fg:x="728" fg:w="1"/><text x="58.2118%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.9618%" y="101" width="0.0796%" height="15" fill="rgb(216,43,37)" fg:x="728" fg:w="1"/><text x="58.2118%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.9618%" y="85" width="0.0796%" height="15" fill="rgb(207,173,9)" fg:x="728" fg:w="1"/><text x="58.2118%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.9618%" y="69" width="0.0796%" height="15" fill="rgb(240,126,30)" fg:x="728" fg:w="1"/><text x="58.2118%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.9618%" y="53" width="0.0796%" height="15" fill="rgb(228,178,53)" fg:x="728" fg:w="1"/><text x="58.2118%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9618%" y="37" width="0.0796%" height="15" fill="rgb(217,33,4)" fg:x="728" fg:w="1"/><text x="58.2118%" y="47.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.0414%" y="261" width="0.0796%" height="15" fill="rgb(206,124,34)" fg:x="729" fg:w="1"/><text x="58.2914%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.1210%" y="197" width="0.0796%" height="15" fill="rgb(208,122,53)" fg:x="730" fg:w="1"/><text x="58.3710%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.2006%" y="197" width="0.0796%" height="15" fill="rgb(215,202,26)" fg:x="731" fg:w="1"/><text x="58.4506%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.2006%" y="181" width="0.0796%" height="15" fill="rgb(232,198,31)" fg:x="731" fg:w="1"/><text x="58.4506%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.2803%" y="165" width="0.0796%" height="15" fill="rgb(222,23,35)" fg:x="732" fg:w="1"/><text x="58.5303%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.80%)</title><rect x="57.6433%" y="293" width="0.7962%" height="15" fill="rgb(242,27,53)" fg:x="724" fg:w="10"/><text x="57.8933%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="57.7229%" y="277" width="0.7166%" height="15" fill="rgb(210,216,42)" fg:x="725" fg:w="9"/><text x="57.9729%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="58.1210%" y="261" width="0.3185%" height="15" fill="rgb(234,39,38)" fg:x="730" fg:w="4"/><text x="58.3710%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="58.1210%" y="245" width="0.3185%" height="15" fill="rgb(235,126,54)" fg:x="730" fg:w="4"/><text x="58.3710%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="58.1210%" y="229" width="0.3185%" height="15" fill="rgb(235,150,33)" fg:x="730" fg:w="4"/><text x="58.3710%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="58.1210%" y="213" width="0.3185%" height="15" fill="rgb(249,49,53)" fg:x="730" fg:w="4"/><text x="58.3710%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.2803%" y="197" width="0.1592%" height="15" fill="rgb(238,60,50)" fg:x="732" fg:w="2"/><text x="58.5303%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.2803%" y="181" width="0.1592%" height="15" fill="rgb(210,5,2)" fg:x="732" fg:w="2"/><text x="58.5303%" y="191.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="58.3599%" y="165" width="0.0796%" height="15" fill="rgb(214,207,24)" fg:x="733" fg:w="1"/><text x="58.6099%" y="175.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (21 samples, 1.67%)</title><rect x="56.8471%" y="341" width="1.6720%" height="15" fill="rgb(228,173,2)" fg:x="714" fg:w="21"/><text x="57.0971%" y="351.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (21 samples, 1.67%)</title><rect x="56.8471%" y="325" width="1.6720%" height="15" fill="rgb(244,26,8)" fg:x="714" fg:w="21"/><text x="57.0971%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::new (20 samples, 1.59%)</title><rect x="56.9268%" y="309" width="1.5924%" height="15" fill="rgb(249,153,35)" fg:x="715" fg:w="20"/><text x="57.1768%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="58.4395%" y="293" width="0.0796%" height="15" fill="rgb(221,215,40)" fg:x="734" fg:w="1"/><text x="58.6895%" y="303.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="58.4395%" y="277" width="0.0796%" height="15" fill="rgb(238,106,35)" fg:x="734" fg:w="1"/><text x="58.6895%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="58.4395%" y="261" width="0.0796%" height="15" fill="rgb(207,195,21)" fg:x="734" fg:w="1"/><text x="58.6895%" y="271.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="58.4395%" y="245" width="0.0796%" height="15" fill="rgb(205,43,29)" fg:x="734" fg:w="1"/><text x="58.6895%" y="255.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="58.4395%" y="229" width="0.0796%" height="15" fill="rgb(236,35,21)" fg:x="734" fg:w="1"/><text x="58.6895%" y="239.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="58.4395%" y="213" width="0.0796%" height="15" fill="rgb(244,74,8)" fg:x="734" fg:w="1"/><text x="58.6895%" y="223.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="58.4395%" y="197" width="0.0796%" height="15" fill="rgb(241,229,7)" fg:x="734" fg:w="1"/><text x="58.6895%" y="207.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="58.4395%" y="181" width="0.0796%" height="15" fill="rgb(212,223,25)" fg:x="734" fg:w="1"/><text x="58.6895%" y="191.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="58.4395%" y="165" width="0.0796%" height="15" fill="rgb(234,58,53)" fg:x="734" fg:w="1"/><text x="58.6895%" y="175.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="58.4395%" y="149" width="0.0796%" height="15" fill="rgb(244,36,1)" fg:x="734" fg:w="1"/><text x="58.6895%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="58.4395%" y="133" width="0.0796%" height="15" fill="rgb(222,40,54)" fg:x="734" fg:w="1"/><text x="58.6895%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.5191%" y="341" width="0.0796%" height="15" fill="rgb(210,207,39)" fg:x="735" fg:w="1"/><text x="58.7691%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="58.5987%" y="341" width="0.0796%" height="15" fill="rgb(234,52,14)" fg:x="736" fg:w="1"/><text x="58.8487%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="58.5987%" y="325" width="0.0796%" height="15" fill="rgb(239,108,46)" fg:x="736" fg:w="1"/><text x="58.8487%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.5987%" y="309" width="0.0796%" height="15" fill="rgb(252,223,5)" fg:x="736" fg:w="1"/><text x="58.8487%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="58.7580%" y="309" width="0.2389%" height="15" fill="rgb(227,181,11)" fg:x="738" fg:w="3"/><text x="59.0080%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.8376%" y="293" width="0.1592%" height="15" fill="rgb(248,126,40)" fg:x="739" fg:w="2"/><text x="59.0876%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.8376%" y="277" width="0.1592%" height="15" fill="rgb(243,1,18)" fg:x="739" fg:w="2"/><text x="59.0876%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.8376%" y="261" width="0.1592%" height="15" fill="rgb(214,145,23)" fg:x="739" fg:w="2"/><text x="59.0876%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.9172%" y="245" width="0.0796%" height="15" fill="rgb(241,218,11)" fg:x="740" fg:w="1"/><text x="59.1672%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.9172%" y="229" width="0.0796%" height="15" fill="rgb(214,219,24)" fg:x="740" fg:w="1"/><text x="59.1672%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.9172%" y="213" width="0.0796%" height="15" fill="rgb(235,32,7)" fg:x="740" fg:w="1"/><text x="59.1672%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.9172%" y="197" width="0.0796%" height="15" fill="rgb(227,121,28)" fg:x="740" fg:w="1"/><text x="59.1672%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.9172%" y="181" width="0.0796%" height="15" fill="rgb(216,129,49)" fg:x="740" fg:w="1"/><text x="59.1672%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.9172%" y="165" width="0.0796%" height="15" fill="rgb(207,194,50)" fg:x="740" fg:w="1"/><text x="59.1672%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.9172%" y="149" width="0.0796%" height="15" fill="rgb(207,4,18)" fg:x="740" fg:w="1"/><text x="59.1672%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.9172%" y="133" width="0.0796%" height="15" fill="rgb(213,50,30)" fg:x="740" fg:w="1"/><text x="59.1672%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.9172%" y="117" width="0.0796%" height="15" fill="rgb(208,77,22)" fg:x="740" fg:w="1"/><text x="59.1672%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.9172%" y="101" width="0.0796%" height="15" fill="rgb(244,204,34)" fg:x="740" fg:w="1"/><text x="59.1672%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.9172%" y="85" width="0.0796%" height="15" fill="rgb(230,20,17)" fg:x="740" fg:w="1"/><text x="59.1672%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.9172%" y="69" width="0.0796%" height="15" fill="rgb(237,83,15)" fg:x="740" fg:w="1"/><text x="59.1672%" y="79.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="58.9968%" y="309" width="0.2389%" height="15" fill="rgb(221,109,25)" fg:x="741" fg:w="3"/><text x="59.2468%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="59.0764%" y="293" width="0.1592%" height="15" fill="rgb(205,194,52)" fg:x="742" fg:w="2"/><text x="59.3264%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.2357%" y="277" width="0.0796%" height="15" fill="rgb(244,173,54)" fg:x="744" fg:w="1"/><text x="59.4857%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="59.3153%" y="245" width="0.1592%" height="15" fill="rgb(227,181,18)" fg:x="745" fg:w="2"/><text x="59.5653%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.3153%" y="229" width="0.1592%" height="15" fill="rgb(238,36,30)" fg:x="745" fg:w="2"/><text x="59.5653%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.3949%" y="213" width="0.0796%" height="15" fill="rgb(254,85,0)" fg:x="746" fg:w="1"/><text x="59.6449%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="59.3153%" y="277" width="0.2389%" height="15" fill="rgb(247,63,33)" fg:x="745" fg:w="3"/><text x="59.5653%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="59.3153%" y="261" width="0.2389%" height="15" fill="rgb(220,7,54)" fg:x="745" fg:w="3"/><text x="59.5653%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.4745%" y="245" width="0.0796%" height="15" fill="rgb(238,227,21)" fg:x="747" fg:w="1"/><text x="59.7245%" y="255.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (93 samples, 7.40%)</title><rect x="52.3089%" y="373" width="7.4045%" height="15" fill="rgb(237,29,31)" fg:x="657" fg:w="93"/><text x="52.5589%" y="383.50">&lt;plugins_c..</text></g><g><title>plugins_core::looking::model::new_area_observation (76 samples, 6.05%)</title><rect x="53.6624%" y="357" width="6.0510%" height="15" fill="rgb(211,21,50)" fg:x="674" fg:w="76"/><text x="53.9124%" y="367.50">plugins_..</text></g><g><title>kernel::model::entry::Entry::scope (13 samples, 1.04%)</title><rect x="58.6783%" y="341" width="1.0350%" height="15" fill="rgb(239,119,2)" fg:x="737" fg:w="13"/><text x="58.9283%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.96%)</title><rect x="58.7580%" y="325" width="0.9554%" height="15" fill="rgb(250,2,39)" fg:x="738" fg:w="12"/><text x="59.0080%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="59.2357%" y="309" width="0.4777%" height="15" fill="rgb(244,46,53)" fg:x="744" fg:w="6"/><text x="59.4857%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="59.2357%" y="293" width="0.4777%" height="15" fill="rgb(209,21,19)" fg:x="744" fg:w="6"/><text x="59.4857%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.5541%" y="277" width="0.1592%" height="15" fill="rgb(236,145,4)" fg:x="748" fg:w="2"/><text x="59.8041%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.5541%" y="261" width="0.1592%" height="15" fill="rgb(220,133,36)" fg:x="748" fg:w="2"/><text x="59.8041%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (117 samples, 9.32%)</title><rect x="50.4777%" y="565" width="9.3153%" height="15" fill="rgb(244,18,3)" fg:x="634" fg:w="117"/><text x="50.7277%" y="575.50">&lt;engine::sess..</text></g><g><title>kernel::plugins::mw::apply_middleware (117 samples, 9.32%)</title><rect x="50.4777%" y="549" width="9.3153%" height="15" fill="rgb(232,171,48)" fg:x="634" fg:w="117"/><text x="50.7277%" y="559.50">kernel::plugi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (117 samples, 9.32%)</title><rect x="50.4777%" y="533" width="9.3153%" height="15" fill="rgb(223,223,53)" fg:x="634" fg:w="117"/><text x="50.7277%" y="543.50">kernel::plugi..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (117 samples, 9.32%)</title><rect x="50.4777%" y="517" width="9.3153%" height="15" fill="rgb(246,92,13)" fg:x="634" fg:w="117"/><text x="50.7277%" y="527.50">&lt;engine::sess..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (98 samples, 7.80%)</title><rect x="51.9904%" y="501" width="7.8025%" height="15" fill="rgb(229,171,10)" fg:x="653" fg:w="98"/><text x="52.2404%" y="511.50">kernel::plu..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (98 samples, 7.80%)</title><rect x="51.9904%" y="485" width="7.8025%" height="15" fill="rgb(213,131,26)" fg:x="653" fg:w="98"/><text x="52.2404%" y="495.50">&lt;plugins_dy..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (96 samples, 7.64%)</title><rect x="52.1497%" y="469" width="7.6433%" height="15" fill="rgb(242,87,54)" fg:x="655" fg:w="96"/><text x="52.3997%" y="479.50">kernel::pl..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (95 samples, 7.56%)</title><rect x="52.2293%" y="453" width="7.5637%" height="15" fill="rgb(237,21,35)" fg:x="656" fg:w="95"/><text x="52.4793%" y="463.50">core::ops:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (95 samples, 7.56%)</title><rect x="52.2293%" y="437" width="7.5637%" height="15" fill="rgb(253,13,47)" fg:x="656" fg:w="95"/><text x="52.4793%" y="447.50">kernel::pl..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (95 samples, 7.56%)</title><rect x="52.2293%" y="421" width="7.5637%" height="15" fill="rgb(215,122,49)" fg:x="656" fg:w="95"/><text x="52.4793%" y="431.50">core::ops:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (95 samples, 7.56%)</title><rect x="52.2293%" y="405" width="7.5637%" height="15" fill="rgb(209,179,30)" fg:x="656" fg:w="95"/><text x="52.4793%" y="415.50">&lt;alloc::bo..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (94 samples, 7.48%)</title><rect x="52.3089%" y="389" width="7.4841%" height="15" fill="rgb(235,100,24)" fg:x="657" fg:w="94"/><text x="52.5589%" y="399.50">&lt;engine::s..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.7134%" y="373" width="0.0796%" height="15" fill="rgb(209,67,24)" fg:x="750" fg:w="1"/><text x="59.9634%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.8726%" y="501" width="0.2389%" height="15" fill="rgb(206,74,32)" fg:x="752" fg:w="3"/><text x="60.1226%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.8726%" y="485" width="0.2389%" height="15" fill="rgb(212,45,25)" fg:x="752" fg:w="3"/><text x="60.1226%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.9522%" y="469" width="0.1592%" height="15" fill="rgb(239,26,3)" fg:x="753" fg:w="2"/><text x="60.2022%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.9522%" y="453" width="0.1592%" height="15" fill="rgb(218,36,15)" fg:x="753" fg:w="2"/><text x="60.2022%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0318%" y="437" width="0.0796%" height="15" fill="rgb(206,108,24)" fg:x="754" fg:w="1"/><text x="60.2818%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0318%" y="421" width="0.0796%" height="15" fill="rgb(234,204,42)" fg:x="754" fg:w="1"/><text x="60.2818%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.0318%" y="405" width="0.0796%" height="15" fill="rgb(229,2,11)" fg:x="754" fg:w="1"/><text x="60.2818%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.0318%" y="389" width="0.0796%" height="15" fill="rgb(221,20,48)" fg:x="754" fg:w="1"/><text x="60.2818%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.0318%" y="373" width="0.0796%" height="15" fill="rgb(244,164,10)" fg:x="754" fg:w="1"/><text x="60.2818%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.0318%" y="357" width="0.0796%" height="15" fill="rgb(243,229,2)" fg:x="754" fg:w="1"/><text x="60.2818%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.0318%" y="341" width="0.0796%" height="15" fill="rgb(232,131,37)" fg:x="754" fg:w="1"/><text x="60.2818%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.0318%" y="325" width="0.0796%" height="15" fill="rgb(217,156,11)" fg:x="754" fg:w="1"/><text x="60.2818%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.0318%" y="309" width="0.0796%" height="15" fill="rgb(239,99,48)" fg:x="754" fg:w="1"/><text x="60.2818%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.0318%" y="293" width="0.0796%" height="15" fill="rgb(231,209,9)" fg:x="754" fg:w="1"/><text x="60.2818%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.0318%" y="277" width="0.0796%" height="15" fill="rgb(254,97,27)" fg:x="754" fg:w="1"/><text x="60.2818%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.1911%" y="405" width="0.0796%" height="15" fill="rgb(223,151,38)" fg:x="756" fg:w="1"/><text x="60.4411%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.1911%" y="389" width="0.0796%" height="15" fill="rgb(219,206,35)" fg:x="756" fg:w="1"/><text x="60.4411%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="60.1115%" y="501" width="0.2389%" height="15" fill="rgb(216,130,31)" fg:x="755" fg:w="3"/><text x="60.3615%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="60.1911%" y="485" width="0.1592%" height="15" fill="rgb(251,97,34)" fg:x="756" fg:w="2"/><text x="60.4411%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.1911%" y="469" width="0.1592%" height="15" fill="rgb(246,159,47)" fg:x="756" fg:w="2"/><text x="60.4411%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1911%" y="453" width="0.1592%" height="15" fill="rgb(232,87,10)" fg:x="756" fg:w="2"/><text x="60.4411%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="60.1911%" y="437" width="0.1592%" height="15" fill="rgb(249,1,37)" fg:x="756" fg:w="2"/><text x="60.4411%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1911%" y="421" width="0.1592%" height="15" fill="rgb(239,135,14)" fg:x="756" fg:w="2"/><text x="60.4411%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.2707%" y="405" width="0.0796%" height="15" fill="rgb(253,116,46)" fg:x="757" fg:w="1"/><text x="60.5207%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2707%" y="389" width="0.0796%" height="15" fill="rgb(222,217,37)" fg:x="757" fg:w="1"/><text x="60.5207%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.3503%" y="453" width="0.0796%" height="15" fill="rgb(252,96,8)" fg:x="758" fg:w="1"/><text x="60.6003%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.4299%" y="421" width="0.0796%" height="15" fill="rgb(254,103,41)" fg:x="759" fg:w="1"/><text x="60.6799%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.5892%" y="341" width="0.0796%" height="15" fill="rgb(218,213,19)" fg:x="761" fg:w="1"/><text x="60.8392%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.5892%" y="325" width="0.0796%" height="15" fill="rgb(253,95,21)" fg:x="761" fg:w="1"/><text x="60.8392%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="60.6688%" y="341" width="0.2389%" height="15" fill="rgb(229,26,28)" fg:x="762" fg:w="3"/><text x="60.9188%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.7484%" y="325" width="0.1592%" height="15" fill="rgb(230,129,16)" fg:x="763" fg:w="2"/><text x="60.9984%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.8280%" y="309" width="0.0796%" height="15" fill="rgb(236,126,17)" fg:x="764" fg:w="1"/><text x="61.0780%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="60.5096%" y="405" width="0.4777%" height="15" fill="rgb(209,33,33)" fg:x="760" fg:w="6"/><text x="60.7596%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="60.5892%" y="389" width="0.3981%" height="15" fill="rgb(227,85,29)" fg:x="761" fg:w="5"/><text x="60.8392%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="60.5892%" y="373" width="0.3981%" height="15" fill="rgb(241,53,46)" fg:x="761" fg:w="5"/><text x="60.8392%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="60.5892%" y="357" width="0.3981%" height="15" fill="rgb(228,167,53)" fg:x="761" fg:w="5"/><text x="60.8392%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9076%" y="341" width="0.0796%" height="15" fill="rgb(238,195,45)" fg:x="765" fg:w="1"/><text x="61.1576%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9076%" y="325" width="0.0796%" height="15" fill="rgb(252,124,45)" fg:x="765" fg:w="1"/><text x="61.1576%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="60.9076%" y="309" width="0.0796%" height="15" fill="rgb(251,38,35)" fg:x="765" fg:w="1"/><text x="61.1576%" y="319.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (9 samples, 0.72%)</title><rect x="60.4299%" y="453" width="0.7166%" height="15" fill="rgb(227,33,2)" fg:x="759" fg:w="9"/><text x="60.6799%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="60.4299%" y="437" width="0.7166%" height="15" fill="rgb(223,157,46)" fg:x="759" fg:w="9"/><text x="60.6799%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="60.5096%" y="421" width="0.6369%" height="15" fill="rgb(222,78,41)" fg:x="760" fg:w="8"/><text x="60.7596%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.9873%" y="405" width="0.1592%" height="15" fill="rgb(248,176,11)" fg:x="766" fg:w="2"/><text x="61.2373%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.9873%" y="389" width="0.1592%" height="15" fill="rgb(241,221,18)" fg:x="766" fg:w="2"/><text x="61.2373%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="60.9873%" y="373" width="0.1592%" height="15" fill="rgb(218,85,22)" fg:x="766" fg:w="2"/><text x="61.2373%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.9873%" y="357" width="0.1592%" height="15" fill="rgb(222,223,7)" fg:x="766" fg:w="2"/><text x="61.2373%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.9873%" y="341" width="0.1592%" height="15" fill="rgb(254,59,39)" fg:x="766" fg:w="2"/><text x="61.2373%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="60.9873%" y="325" width="0.1592%" height="15" fill="rgb(247,100,27)" fg:x="766" fg:w="2"/><text x="61.2373%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.9873%" y="309" width="0.1592%" height="15" fill="rgb(237,207,10)" fg:x="766" fg:w="2"/><text x="61.2373%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.9873%" y="293" width="0.1592%" height="15" fill="rgb(220,121,28)" fg:x="766" fg:w="2"/><text x="61.2373%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.0669%" y="277" width="0.0796%" height="15" fill="rgb(213,223,20)" fg:x="767" fg:w="1"/><text x="61.3169%" y="287.50"></text></g><g><title>kernel::model::entity::Entity::from_value (11 samples, 0.88%)</title><rect x="60.3503%" y="501" width="0.8758%" height="15" fill="rgb(205,121,27)" fg:x="758" fg:w="11"/><text x="60.6003%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="60.3503%" y="485" width="0.8758%" height="15" fill="rgb(253,24,53)" fg:x="758" fg:w="11"/><text x="60.6003%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="60.3503%" y="469" width="0.8758%" height="15" fill="rgb(224,224,47)" fg:x="758" fg:w="11"/><text x="60.6003%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.1465%" y="453" width="0.0796%" height="15" fill="rgb(250,125,36)" fg:x="768" fg:w="1"/><text x="61.3965%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.1465%" y="437" width="0.0796%" height="15" fill="rgb(240,144,38)" fg:x="768" fg:w="1"/><text x="61.3965%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="61.1465%" y="421" width="0.0796%" height="15" fill="rgb(250,15,50)" fg:x="768" fg:w="1"/><text x="61.3965%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.3057%" y="341" width="0.0796%" height="15" fill="rgb(210,24,26)" fg:x="770" fg:w="1"/><text x="61.5557%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.3057%" y="325" width="0.0796%" height="15" fill="rgb(234,53,53)" fg:x="770" fg:w="1"/><text x="61.5557%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.3057%" y="405" width="0.1592%" height="15" fill="rgb(208,108,28)" fg:x="770" fg:w="2"/><text x="61.5557%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.3057%" y="389" width="0.1592%" height="15" fill="rgb(227,143,7)" fg:x="770" fg:w="2"/><text x="61.5557%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.3057%" y="373" width="0.1592%" height="15" fill="rgb(238,189,38)" fg:x="770" fg:w="2"/><text x="61.5557%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.3057%" y="357" width="0.1592%" height="15" fill="rgb(222,69,15)" fg:x="770" fg:w="2"/><text x="61.5557%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.3854%" y="341" width="0.0796%" height="15" fill="rgb(213,169,7)" fg:x="771" fg:w="1"/><text x="61.6354%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.3854%" y="325" width="0.0796%" height="15" fill="rgb(251,219,4)" fg:x="771" fg:w="1"/><text x="61.6354%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.3854%" y="309" width="0.0796%" height="15" fill="rgb(241,55,40)" fg:x="771" fg:w="1"/><text x="61.6354%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="61.3057%" y="437" width="0.2389%" height="15" fill="rgb(243,57,30)" fg:x="770" fg:w="3"/><text x="61.5557%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.3057%" y="421" width="0.2389%" height="15" fill="rgb(234,50,30)" fg:x="770" fg:w="3"/><text x="61.5557%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4650%" y="405" width="0.0796%" height="15" fill="rgb(239,23,42)" fg:x="772" fg:w="1"/><text x="61.7150%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4650%" y="389" width="0.0796%" height="15" fill="rgb(217,38,19)" fg:x="772" fg:w="1"/><text x="61.7150%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (22 samples, 1.75%)</title><rect x="59.8726%" y="517" width="1.7516%" height="15" fill="rgb(215,179,16)" fg:x="752" fg:w="22"/><text x="60.1226%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="61.2261%" y="501" width="0.3981%" height="15" fill="rgb(254,21,37)" fg:x="769" fg:w="5"/><text x="61.4761%" y="511.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="61.2261%" y="485" width="0.3981%" height="15" fill="rgb(219,207,48)" fg:x="769" fg:w="5"/><text x="61.4761%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="61.2261%" y="469" width="0.3981%" height="15" fill="rgb(227,225,41)" fg:x="769" fg:w="5"/><text x="61.4761%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="61.2261%" y="453" width="0.3981%" height="15" fill="rgb(223,130,1)" fg:x="769" fg:w="5"/><text x="61.4761%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.5446%" y="437" width="0.0796%" height="15" fill="rgb(249,54,42)" fg:x="773" fg:w="1"/><text x="61.7946%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.5446%" y="421" width="0.0796%" height="15" fill="rgb(248,69,25)" fg:x="773" fg:w="1"/><text x="61.7946%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (23 samples, 1.83%)</title><rect x="59.8726%" y="533" width="1.8312%" height="15" fill="rgb(234,21,32)" fg:x="752" fg:w="23"/><text x="60.1226%" y="543.50">e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="61.6242%" y="517" width="0.0796%" height="15" fill="rgb(252,136,6)" fg:x="774" fg:w="1"/><text x="61.8742%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7834%" y="453" width="0.0796%" height="15" fill="rgb(245,87,12)" fg:x="776" fg:w="1"/><text x="62.0334%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7834%" y="437" width="0.0796%" height="15" fill="rgb(208,12,15)" fg:x="776" fg:w="1"/><text x="62.0334%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7834%" y="421" width="0.0796%" height="15" fill="rgb(250,98,2)" fg:x="776" fg:w="1"/><text x="62.0334%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.7834%" y="405" width="0.0796%" height="15" fill="rgb(205,213,15)" fg:x="776" fg:w="1"/><text x="62.0334%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.7834%" y="389" width="0.0796%" height="15" fill="rgb(248,192,44)" fg:x="776" fg:w="1"/><text x="62.0334%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.7834%" y="373" width="0.0796%" height="15" fill="rgb(221,89,17)" fg:x="776" fg:w="1"/><text x="62.0334%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7834%" y="357" width="0.0796%" height="15" fill="rgb(209,55,3)" fg:x="776" fg:w="1"/><text x="62.0334%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7834%" y="341" width="0.0796%" height="15" fill="rgb(247,23,45)" fg:x="776" fg:w="1"/><text x="62.0334%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.7834%" y="325" width="0.0796%" height="15" fill="rgb(235,152,23)" fg:x="776" fg:w="1"/><text x="62.0334%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.7834%" y="309" width="0.0796%" height="15" fill="rgb(244,63,13)" fg:x="776" fg:w="1"/><text x="62.0334%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.7834%" y="293" width="0.0796%" height="15" fill="rgb(227,30,37)" fg:x="776" fg:w="1"/><text x="62.0334%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.7834%" y="277" width="0.0796%" height="15" fill="rgb(224,49,42)" fg:x="776" fg:w="1"/><text x="62.0334%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.7834%" y="261" width="0.0796%" height="15" fill="rgb(218,129,5)" fg:x="776" fg:w="1"/><text x="62.0334%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.7834%" y="469" width="0.2389%" height="15" fill="rgb(240,199,54)" fg:x="776" fg:w="3"/><text x="62.0334%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.8631%" y="453" width="0.1592%" height="15" fill="rgb(234,31,13)" fg:x="777" fg:w="2"/><text x="62.1131%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.8631%" y="437" width="0.1592%" height="15" fill="rgb(219,73,54)" fg:x="777" fg:w="2"/><text x="62.1131%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9427%" y="421" width="0.0796%" height="15" fill="rgb(251,162,10)" fg:x="778" fg:w="1"/><text x="62.1927%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9427%" y="405" width="0.0796%" height="15" fill="rgb(240,138,47)" fg:x="778" fg:w="1"/><text x="62.1927%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.9427%" y="389" width="0.0796%" height="15" fill="rgb(216,138,26)" fg:x="778" fg:w="1"/><text x="62.1927%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.9427%" y="373" width="0.0796%" height="15" fill="rgb(243,17,35)" fg:x="778" fg:w="1"/><text x="62.1927%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.9427%" y="357" width="0.0796%" height="15" fill="rgb(241,60,18)" fg:x="778" fg:w="1"/><text x="62.1927%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.9427%" y="341" width="0.0796%" height="15" fill="rgb(234,2,44)" fg:x="778" fg:w="1"/><text x="62.1927%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.9427%" y="325" width="0.0796%" height="15" fill="rgb(225,225,33)" fg:x="778" fg:w="1"/><text x="62.1927%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="61.7038%" y="501" width="0.3981%" height="15" fill="rgb(234,50,31)" fg:x="775" fg:w="5"/><text x="61.9538%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="61.7038%" y="485" width="0.3981%" height="15" fill="rgb(249,6,25)" fg:x="775" fg:w="5"/><text x="61.9538%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.0223%" y="469" width="0.0796%" height="15" fill="rgb(241,5,17)" fg:x="779" fg:w="1"/><text x="62.2723%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.1815%" y="453" width="0.0796%" height="15" fill="rgb(207,116,10)" fg:x="781" fg:w="1"/><text x="62.4315%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1815%" y="437" width="0.0796%" height="15" fill="rgb(222,128,18)" fg:x="781" fg:w="1"/><text x="62.4315%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1815%" y="421" width="0.0796%" height="15" fill="rgb(229,109,25)" fg:x="781" fg:w="1"/><text x="62.4315%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.1815%" y="405" width="0.0796%" height="15" fill="rgb(222,102,25)" fg:x="781" fg:w="1"/><text x="62.4315%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.1815%" y="389" width="0.0796%" height="15" fill="rgb(239,211,5)" fg:x="781" fg:w="1"/><text x="62.4315%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.1815%" y="373" width="0.0796%" height="15" fill="rgb(223,136,26)" fg:x="781" fg:w="1"/><text x="62.4315%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.1815%" y="357" width="0.0796%" height="15" fill="rgb(227,30,15)" fg:x="781" fg:w="1"/><text x="62.4315%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.1815%" y="341" width="0.0796%" height="15" fill="rgb(247,76,4)" fg:x="781" fg:w="1"/><text x="62.4315%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.1815%" y="325" width="0.0796%" height="15" fill="rgb(245,38,48)" fg:x="781" fg:w="1"/><text x="62.4315%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.1815%" y="309" width="0.0796%" height="15" fill="rgb(210,220,14)" fg:x="781" fg:w="1"/><text x="62.4315%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.1815%" y="293" width="0.0796%" height="15" fill="rgb(224,60,51)" fg:x="781" fg:w="1"/><text x="62.4315%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.1815%" y="277" width="0.0796%" height="15" fill="rgb(212,133,49)" fg:x="781" fg:w="1"/><text x="62.4315%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.1815%" y="261" width="0.0796%" height="15" fill="rgb(231,39,22)" fg:x="781" fg:w="1"/><text x="62.4315%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.4204%" y="373" width="0.1592%" height="15" fill="rgb(236,173,22)" fg:x="784" fg:w="2"/><text x="62.6704%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="62.5000%" y="357" width="0.0796%" height="15" fill="rgb(210,70,0)" fg:x="785" fg:w="1"/><text x="62.7500%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="62.5000%" y="341" width="0.0796%" height="15" fill="rgb(215,170,11)" fg:x="785" fg:w="1"/><text x="62.7500%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.4204%" y="389" width="0.2389%" height="15" fill="rgb(220,154,28)" fg:x="784" fg:w="3"/><text x="62.6704%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5796%" y="373" width="0.0796%" height="15" fill="rgb(240,160,41)" fg:x="786" fg:w="1"/><text x="62.8296%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5796%" y="357" width="0.0796%" height="15" fill="rgb(243,215,41)" fg:x="786" fg:w="1"/><text x="62.8296%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.5796%" y="341" width="0.0796%" height="15" fill="rgb(214,208,31)" fg:x="786" fg:w="1"/><text x="62.8296%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.5796%" y="325" width="0.0796%" height="15" fill="rgb(247,57,22)" fg:x="786" fg:w="1"/><text x="62.8296%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.5796%" y="309" width="0.0796%" height="15" fill="rgb(228,73,52)" fg:x="786" fg:w="1"/><text x="62.8296%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.5796%" y="293" width="0.0796%" height="15" fill="rgb(252,60,9)" fg:x="786" fg:w="1"/><text x="62.8296%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.5796%" y="277" width="0.0796%" height="15" fill="rgb(233,9,51)" fg:x="786" fg:w="1"/><text x="62.8296%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.5796%" y="261" width="0.0796%" height="15" fill="rgb(223,67,14)" fg:x="786" fg:w="1"/><text x="62.8296%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.5796%" y="245" width="0.0796%" height="15" fill="rgb(222,86,2)" fg:x="786" fg:w="1"/><text x="62.8296%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.5796%" y="229" width="0.0796%" height="15" fill="rgb(243,58,54)" fg:x="786" fg:w="1"/><text x="62.8296%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.5796%" y="213" width="0.0796%" height="15" fill="rgb(210,200,39)" fg:x="786" fg:w="1"/><text x="62.8296%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.5796%" y="197" width="0.0796%" height="15" fill="rgb(238,135,9)" fg:x="786" fg:w="1"/><text x="62.8296%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="62.4204%" y="405" width="0.3185%" height="15" fill="rgb(232,179,7)" fg:x="784" fg:w="4"/><text x="62.6704%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.6592%" y="389" width="0.0796%" height="15" fill="rgb(245,65,41)" fg:x="787" fg:w="1"/><text x="62.9092%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.6592%" y="373" width="0.0796%" height="15" fill="rgb(227,43,8)" fg:x="787" fg:w="1"/><text x="62.9092%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.6592%" y="357" width="0.0796%" height="15" fill="rgb(235,91,14)" fg:x="787" fg:w="1"/><text x="62.9092%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.6592%" y="341" width="0.0796%" height="15" fill="rgb(235,219,31)" fg:x="787" fg:w="1"/><text x="62.9092%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.6592%" y="325" width="0.0796%" height="15" fill="rgb(227,121,25)" fg:x="787" fg:w="1"/><text x="62.9092%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="62.6592%" y="309" width="0.0796%" height="15" fill="rgb(254,129,24)" fg:x="787" fg:w="1"/><text x="62.9092%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.6592%" y="293" width="0.0796%" height="15" fill="rgb(226,144,49)" fg:x="787" fg:w="1"/><text x="62.9092%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="62.7389%" y="357" width="0.3185%" height="15" fill="rgb(214,187,32)" fg:x="788" fg:w="4"/><text x="62.9889%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="62.8185%" y="341" width="0.2389%" height="15" fill="rgb(243,129,46)" fg:x="789" fg:w="3"/><text x="63.0685%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="62.8981%" y="325" width="0.1592%" height="15" fill="rgb(221,185,35)" fg:x="790" fg:w="2"/><text x="63.1481%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.8981%" y="309" width="0.1592%" height="15" fill="rgb(205,0,32)" fg:x="790" fg:w="2"/><text x="63.1481%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.8981%" y="293" width="0.1592%" height="15" fill="rgb(229,179,12)" fg:x="790" fg:w="2"/><text x="63.1481%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::error::Error&gt; (1 samples, 0.08%)</title><rect x="63.0573%" y="357" width="0.0796%" height="15" fill="rgb(252,107,19)" fg:x="792" fg:w="1"/><text x="63.3073%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="63.1369%" y="261" width="0.0796%" height="15" fill="rgb(220,95,27)" fg:x="793" fg:w="1"/><text x="63.3869%" y="271.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="63.1369%" y="245" width="0.0796%" height="15" fill="rgb(240,113,40)" fg:x="793" fg:w="1"/><text x="63.3869%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="63.1369%" y="229" width="0.0796%" height="15" fill="rgb(208,4,43)" fg:x="793" fg:w="1"/><text x="63.3869%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.1369%" y="213" width="0.0796%" height="15" fill="rgb(247,189,30)" fg:x="793" fg:w="1"/><text x="63.3869%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.1369%" y="197" width="0.0796%" height="15" fill="rgb(231,157,17)" fg:x="793" fg:w="1"/><text x="63.3869%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.1369%" y="181" width="0.0796%" height="15" fill="rgb(224,139,6)" fg:x="793" fg:w="1"/><text x="63.3869%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.1369%" y="165" width="0.0796%" height="15" fill="rgb(223,83,16)" fg:x="793" fg:w="1"/><text x="63.3869%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.1369%" y="149" width="0.0796%" height="15" fill="rgb(232,211,20)" fg:x="793" fg:w="1"/><text x="63.3869%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.1369%" y="133" width="0.0796%" height="15" fill="rgb(225,203,35)" fg:x="793" fg:w="1"/><text x="63.3869%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.1369%" y="117" width="0.0796%" height="15" fill="rgb(215,211,44)" fg:x="793" fg:w="1"/><text x="63.3869%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="62.7389%" y="405" width="0.5573%" height="15" fill="rgb(248,213,26)" fg:x="788" fg:w="7"/><text x="62.9889%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.56%)</title><rect x="62.7389%" y="389" width="0.5573%" height="15" fill="rgb(214,23,52)" fg:x="788" fg:w="7"/><text x="62.9889%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="62.7389%" y="373" width="0.5573%" height="15" fill="rgb(225,173,50)" fg:x="788" fg:w="7"/><text x="62.9889%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.1369%" y="357" width="0.1592%" height="15" fill="rgb(206,150,22)" fg:x="793" fg:w="2"/><text x="63.3869%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.1369%" y="341" width="0.1592%" height="15" fill="rgb(239,64,23)" fg:x="793" fg:w="2"/><text x="63.3869%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (2 samples, 0.16%)</title><rect x="63.1369%" y="325" width="0.1592%" height="15" fill="rgb(242,50,38)" fg:x="793" fg:w="2"/><text x="63.3869%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (2 samples, 0.16%)</title><rect x="63.1369%" y="309" width="0.1592%" height="15" fill="rgb(217,91,15)" fg:x="793" fg:w="2"/><text x="63.3869%" y="319.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (2 samples, 0.16%)</title><rect x="63.1369%" y="293" width="0.1592%" height="15" fill="rgb(230,172,6)" fg:x="793" fg:w="2"/><text x="63.3869%" y="303.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (2 samples, 0.16%)</title><rect x="63.1369%" y="277" width="0.1592%" height="15" fill="rgb(221,98,26)" fg:x="793" fg:w="2"/><text x="63.3869%" y="287.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="63.2166%" y="261" width="0.0796%" height="15" fill="rgb(227,210,45)" fg:x="794" fg:w="1"/><text x="63.4666%" y="271.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.08%)</title><rect x="63.2166%" y="245" width="0.0796%" height="15" fill="rgb(206,8,30)" fg:x="794" fg:w="1"/><text x="63.4666%" y="255.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.08%)</title><rect x="63.2166%" y="229" width="0.0796%" height="15" fill="rgb(241,219,17)" fg:x="794" fg:w="1"/><text x="63.4666%" y="239.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.08%)</title><rect x="63.2166%" y="213" width="0.0796%" height="15" fill="rgb(247,121,29)" fg:x="794" fg:w="1"/><text x="63.4666%" y="223.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="63.2166%" y="197" width="0.0796%" height="15" fill="rgb(219,169,49)" fg:x="794" fg:w="1"/><text x="63.4666%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.2962%" y="373" width="0.0796%" height="15" fill="rgb(253,49,49)" fg:x="795" fg:w="1"/><text x="63.5462%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.2962%" y="357" width="0.0796%" height="15" fill="rgb(217,178,3)" fg:x="795" fg:w="1"/><text x="63.5462%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 1.19%)</title><rect x="62.2611%" y="453" width="1.1943%" height="15" fill="rgb(234,73,37)" fg:x="782" fg:w="15"/><text x="62.5111%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.19%)</title><rect x="62.2611%" y="437" width="1.1943%" height="15" fill="rgb(250,98,22)" fg:x="782" fg:w="15"/><text x="62.5111%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (15 samples, 1.19%)</title><rect x="62.2611%" y="421" width="1.1943%" height="15" fill="rgb(220,108,37)" fg:x="782" fg:w="15"/><text x="62.5111%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.2962%" y="405" width="0.1592%" height="15" fill="rgb(225,168,10)" fg:x="795" fg:w="2"/><text x="63.5462%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.2962%" y="389" width="0.1592%" height="15" fill="rgb(247,215,21)" fg:x="795" fg:w="2"/><text x="63.5462%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.3758%" y="373" width="0.0796%" height="15" fill="rgb(253,189,31)" fg:x="796" fg:w="1"/><text x="63.6258%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="63.3758%" y="357" width="0.0796%" height="15" fill="rgb(241,54,22)" fg:x="796" fg:w="1"/><text x="63.6258%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 1.43%)</title><rect x="62.1019%" y="501" width="1.4331%" height="15" fill="rgb(211,87,4)" fg:x="780" fg:w="18"/><text x="62.3519%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 1.43%)</title><rect x="62.1019%" y="485" width="1.4331%" height="15" fill="rgb(245,112,24)" fg:x="780" fg:w="18"/><text x="62.3519%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (18 samples, 1.43%)</title><rect x="62.1019%" y="469" width="1.4331%" height="15" fill="rgb(235,190,41)" fg:x="780" fg:w="18"/><text x="62.3519%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.4554%" y="453" width="0.0796%" height="15" fill="rgb(214,89,8)" fg:x="797" fg:w="1"/><text x="63.7054%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.4554%" y="437" width="0.0796%" height="15" fill="rgb(249,155,35)" fg:x="797" fg:w="1"/><text x="63.7054%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.4554%" y="421" width="0.0796%" height="15" fill="rgb(249,88,26)" fg:x="797" fg:w="1"/><text x="63.7054%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="63.4554%" y="405" width="0.0796%" height="15" fill="rgb(232,56,8)" fg:x="797" fg:w="1"/><text x="63.7054%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.4554%" y="389" width="0.0796%" height="15" fill="rgb(240,95,3)" fg:x="797" fg:w="1"/><text x="63.7054%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.4554%" y="373" width="0.0796%" height="15" fill="rgb(222,44,28)" fg:x="797" fg:w="1"/><text x="63.7054%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.4554%" y="357" width="0.0796%" height="15" fill="rgb(234,16,30)" fg:x="797" fg:w="1"/><text x="63.7054%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="63.5350%" y="469" width="0.2389%" height="15" fill="rgb(223,26,17)" fg:x="798" fg:w="3"/><text x="63.7850%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="63.5350%" y="453" width="0.2389%" height="15" fill="rgb(239,187,47)" fg:x="798" fg:w="3"/><text x="63.7850%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="63.5350%" y="437" width="0.2389%" height="15" fill="rgb(247,102,50)" fg:x="798" fg:w="3"/><text x="63.7850%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="63.5350%" y="421" width="0.2389%" height="15" fill="rgb(231,216,22)" fg:x="798" fg:w="3"/><text x="63.7850%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.7739%" y="437" width="0.0796%" height="15" fill="rgb(216,201,26)" fg:x="801" fg:w="1"/><text x="64.0239%" y="447.50"></text></g><g><title>engine::session::internal::Added::find_refs (28 samples, 2.23%)</title><rect x="61.7038%" y="533" width="2.2293%" height="15" fill="rgb(214,186,23)" fg:x="775" fg:w="28"/><text x="61.9538%" y="543.50">e..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (28 samples, 2.23%)</title><rect x="61.7038%" y="517" width="2.2293%" height="15" fill="rgb(235,184,4)" fg:x="775" fg:w="28"/><text x="61.9538%" y="527.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="63.5350%" y="501" width="0.3981%" height="15" fill="rgb(244,46,17)" fg:x="798" fg:w="5"/><text x="63.7850%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="63.5350%" y="485" width="0.3981%" height="15" fill="rgb(248,74,46)" fg:x="798" fg:w="5"/><text x="63.7850%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="63.7739%" y="469" width="0.1592%" height="15" fill="rgb(243,79,5)" fg:x="801" fg:w="2"/><text x="64.0239%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="63.7739%" y="453" width="0.1592%" height="15" fill="rgb(213,148,1)" fg:x="801" fg:w="2"/><text x="64.0239%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.8535%" y="437" width="0.0796%" height="15" fill="rgb(221,30,0)" fg:x="802" fg:w="1"/><text x="64.1035%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.1720%" y="357" width="0.0796%" height="15" fill="rgb(207,85,29)" fg:x="806" fg:w="1"/><text x="64.4220%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.1720%" y="341" width="0.0796%" height="15" fill="rgb(239,31,46)" fg:x="806" fg:w="1"/><text x="64.4220%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.1720%" y="325" width="0.0796%" height="15" fill="rgb(219,6,1)" fg:x="806" fg:w="1"/><text x="64.4220%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.1720%" y="309" width="0.0796%" height="15" fill="rgb(229,90,29)" fg:x="806" fg:w="1"/><text x="64.4220%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.1720%" y="293" width="0.0796%" height="15" fill="rgb(242,201,42)" fg:x="806" fg:w="1"/><text x="64.4220%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.1720%" y="277" width="0.0796%" height="15" fill="rgb(243,80,54)" fg:x="806" fg:w="1"/><text x="64.4220%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.1720%" y="261" width="0.0796%" height="15" fill="rgb(223,166,15)" fg:x="806" fg:w="1"/><text x="64.4220%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.0924%" y="469" width="0.2389%" height="15" fill="rgb(238,78,27)" fg:x="805" fg:w="3"/><text x="64.3424%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.0924%" y="453" width="0.2389%" height="15" fill="rgb(235,28,43)" fg:x="805" fg:w="3"/><text x="64.3424%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.1720%" y="437" width="0.1592%" height="15" fill="rgb(240,210,28)" fg:x="806" fg:w="2"/><text x="64.4220%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.1720%" y="421" width="0.1592%" height="15" fill="rgb(253,6,46)" fg:x="806" fg:w="2"/><text x="64.4220%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.1720%" y="405" width="0.1592%" height="15" fill="rgb(250,159,47)" fg:x="806" fg:w="2"/><text x="64.4220%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.1720%" y="389" width="0.1592%" height="15" fill="rgb(216,139,2)" fg:x="806" fg:w="2"/><text x="64.4220%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.1720%" y="373" width="0.1592%" height="15" fill="rgb(221,124,44)" fg:x="806" fg:w="2"/><text x="64.4220%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.2516%" y="357" width="0.0796%" height="15" fill="rgb(205,37,22)" fg:x="807" fg:w="1"/><text x="64.5016%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.2516%" y="341" width="0.0796%" height="15" fill="rgb(250,55,8)" fg:x="807" fg:w="1"/><text x="64.5016%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.3312%" y="469" width="0.0796%" height="15" fill="rgb(215,83,48)" fg:x="808" fg:w="1"/><text x="64.5812%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.3312%" y="453" width="0.0796%" height="15" fill="rgb(253,2,32)" fg:x="808" fg:w="1"/><text x="64.5812%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.3312%" y="437" width="0.0796%" height="15" fill="rgb(236,67,28)" fg:x="808" fg:w="1"/><text x="64.5812%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.3312%" y="421" width="0.0796%" height="15" fill="rgb(252,55,15)" fg:x="808" fg:w="1"/><text x="64.5812%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.3312%" y="405" width="0.0796%" height="15" fill="rgb(243,173,17)" fg:x="808" fg:w="1"/><text x="64.5812%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.3312%" y="389" width="0.0796%" height="15" fill="rgb(215,212,13)" fg:x="808" fg:w="1"/><text x="64.5812%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.3312%" y="373" width="0.0796%" height="15" fill="rgb(253,176,6)" fg:x="808" fg:w="1"/><text x="64.5812%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.3312%" y="357" width="0.0796%" height="15" fill="rgb(236,105,26)" fg:x="808" fg:w="1"/><text x="64.5812%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.3312%" y="341" width="0.0796%" height="15" fill="rgb(239,226,32)" fg:x="808" fg:w="1"/><text x="64.5812%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.3312%" y="325" width="0.0796%" height="15" fill="rgb(236,104,51)" fg:x="808" fg:w="1"/><text x="64.5812%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.3312%" y="309" width="0.0796%" height="15" fill="rgb(220,172,33)" fg:x="808" fg:w="1"/><text x="64.5812%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.3312%" y="293" width="0.0796%" height="15" fill="rgb(224,182,25)" fg:x="808" fg:w="1"/><text x="64.5812%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="63.9331%" y="517" width="0.5573%" height="15" fill="rgb(236,184,24)" fg:x="803" fg:w="7"/><text x="64.1831%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="63.9331%" y="501" width="0.5573%" height="15" fill="rgb(241,221,14)" fg:x="803" fg:w="7"/><text x="64.1831%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="63.9331%" y="485" width="0.5573%" height="15" fill="rgb(227,146,5)" fg:x="803" fg:w="7"/><text x="64.1831%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4108%" y="469" width="0.0796%" height="15" fill="rgb(214,15,23)" fg:x="809" fg:w="1"/><text x="64.6608%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.4108%" y="453" width="0.0796%" height="15" fill="rgb(233,157,31)" fg:x="809" fg:w="1"/><text x="64.6608%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4108%" y="437" width="0.0796%" height="15" fill="rgb(211,27,52)" fg:x="809" fg:w="1"/><text x="64.6608%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4108%" y="421" width="0.0796%" height="15" fill="rgb(212,223,15)" fg:x="809" fg:w="1"/><text x="64.6608%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.4108%" y="405" width="0.0796%" height="15" fill="rgb(254,211,0)" fg:x="809" fg:w="1"/><text x="64.6608%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.4108%" y="389" width="0.0796%" height="15" fill="rgb(205,43,38)" fg:x="809" fg:w="1"/><text x="64.6608%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.4108%" y="373" width="0.0796%" height="15" fill="rgb(242,206,46)" fg:x="809" fg:w="1"/><text x="64.6608%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.4108%" y="357" width="0.0796%" height="15" fill="rgb(220,221,12)" fg:x="809" fg:w="1"/><text x="64.6608%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.4108%" y="341" width="0.0796%" height="15" fill="rgb(217,156,35)" fg:x="809" fg:w="1"/><text x="64.6608%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.4108%" y="325" width="0.0796%" height="15" fill="rgb(207,181,49)" fg:x="809" fg:w="1"/><text x="64.6608%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.4108%" y="309" width="0.0796%" height="15" fill="rgb(235,103,47)" fg:x="809" fg:w="1"/><text x="64.6608%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.4108%" y="293" width="0.0796%" height="15" fill="rgb(222,63,28)" fg:x="809" fg:w="1"/><text x="64.6608%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.4108%" y="277" width="0.0796%" height="15" fill="rgb(244,137,21)" fg:x="809" fg:w="1"/><text x="64.6608%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.4108%" y="261" width="0.0796%" height="15" fill="rgb(228,35,27)" fg:x="809" fg:w="1"/><text x="64.6608%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.4904%" y="485" width="0.2389%" height="15" fill="rgb(226,191,41)" fg:x="810" fg:w="3"/><text x="64.7404%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.5701%" y="469" width="0.1592%" height="15" fill="rgb(210,154,3)" fg:x="811" fg:w="2"/><text x="64.8201%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.6497%" y="453" width="0.0796%" height="15" fill="rgb(216,60,49)" fg:x="812" fg:w="1"/><text x="64.8997%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.6497%" y="437" width="0.0796%" height="15" fill="rgb(226,17,20)" fg:x="812" fg:w="1"/><text x="64.8997%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.6497%" y="421" width="0.0796%" height="15" fill="rgb(206,115,35)" fg:x="812" fg:w="1"/><text x="64.8997%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.6497%" y="405" width="0.0796%" height="15" fill="rgb(227,88,1)" fg:x="812" fg:w="1"/><text x="64.8997%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.6497%" y="389" width="0.0796%" height="15" fill="rgb(230,222,24)" fg:x="812" fg:w="1"/><text x="64.8997%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.6497%" y="373" width="0.0796%" height="15" fill="rgb(214,124,32)" fg:x="812" fg:w="1"/><text x="64.8997%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.6497%" y="357" width="0.0796%" height="15" fill="rgb(240,41,36)" fg:x="812" fg:w="1"/><text x="64.8997%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.6497%" y="341" width="0.0796%" height="15" fill="rgb(221,17,52)" fg:x="812" fg:w="1"/><text x="64.8997%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.6497%" y="325" width="0.0796%" height="15" fill="rgb(252,70,16)" fg:x="812" fg:w="1"/><text x="64.8997%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.6497%" y="309" width="0.0796%" height="15" fill="rgb(250,177,4)" fg:x="812" fg:w="1"/><text x="64.8997%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.6497%" y="293" width="0.0796%" height="15" fill="rgb(240,188,47)" fg:x="812" fg:w="1"/><text x="64.8997%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.6497%" y="277" width="0.0796%" height="15" fill="rgb(215,92,12)" fg:x="812" fg:w="1"/><text x="64.8997%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.6497%" y="261" width="0.0796%" height="15" fill="rgb(242,110,29)" fg:x="812" fg:w="1"/><text x="64.8997%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="64.4904%" y="517" width="0.3185%" height="15" fill="rgb(208,211,26)" fg:x="810" fg:w="4"/><text x="64.7404%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="64.4904%" y="501" width="0.3185%" height="15" fill="rgb(244,147,6)" fg:x="810" fg:w="4"/><text x="64.7404%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.7293%" y="485" width="0.0796%" height="15" fill="rgb(211,130,42)" fg:x="813" fg:w="1"/><text x="64.9793%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.7293%" y="469" width="0.0796%" height="15" fill="rgb(220,63,1)" fg:x="813" fg:w="1"/><text x="64.9793%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="64.7293%" y="453" width="0.0796%" height="15" fill="rgb(241,212,30)" fg:x="813" fg:w="1"/><text x="64.9793%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.7293%" y="437" width="0.0796%" height="15" fill="rgb(233,153,17)" fg:x="813" fg:w="1"/><text x="64.9793%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.7293%" y="421" width="0.0796%" height="15" fill="rgb(236,3,10)" fg:x="813" fg:w="1"/><text x="64.9793%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="64.8089%" y="517" width="0.0796%" height="15" fill="rgb(232,41,21)" fg:x="814" fg:w="1"/><text x="65.0589%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.1274%" y="437" width="0.1592%" height="15" fill="rgb(206,63,51)" fg:x="818" fg:w="2"/><text x="65.3774%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.1274%" y="421" width="0.1592%" height="15" fill="rgb(250,214,3)" fg:x="818" fg:w="2"/><text x="65.3774%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.3662%" y="357" width="0.0796%" height="15" fill="rgb(254,89,27)" fg:x="821" fg:w="1"/><text x="65.6162%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.3662%" y="341" width="0.0796%" height="15" fill="rgb(249,41,14)" fg:x="821" fg:w="1"/><text x="65.6162%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.3662%" y="325" width="0.0796%" height="15" fill="rgb(221,196,51)" fg:x="821" fg:w="1"/><text x="65.6162%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.3662%" y="389" width="0.1592%" height="15" fill="rgb(214,116,26)" fg:x="821" fg:w="2"/><text x="65.6162%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.3662%" y="373" width="0.1592%" height="15" fill="rgb(236,67,7)" fg:x="821" fg:w="2"/><text x="65.6162%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.4459%" y="357" width="0.0796%" height="15" fill="rgb(253,179,32)" fg:x="822" fg:w="1"/><text x="65.6959%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.4459%" y="341" width="0.0796%" height="15" fill="rgb(218,33,15)" fg:x="822" fg:w="1"/><text x="65.6959%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.4459%" y="325" width="0.0796%" height="15" fill="rgb(217,202,41)" fg:x="822" fg:w="1"/><text x="65.6959%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="65.5255%" y="389" width="0.0796%" height="15" fill="rgb(234,133,5)" fg:x="823" fg:w="1"/><text x="65.7755%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="65.2866%" y="421" width="0.4777%" height="15" fill="rgb(240,47,40)" fg:x="820" fg:w="6"/><text x="65.5366%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="65.3662%" y="405" width="0.3981%" height="15" fill="rgb(234,166,26)" fg:x="821" fg:w="5"/><text x="65.6162%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="65.6051%" y="389" width="0.1592%" height="15" fill="rgb(244,125,51)" fg:x="824" fg:w="2"/><text x="65.8551%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.6051%" y="373" width="0.1592%" height="15" fill="rgb(229,171,11)" fg:x="824" fg:w="2"/><text x="65.8551%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.6051%" y="357" width="0.1592%" height="15" fill="rgb(224,38,45)" fg:x="824" fg:w="2"/><text x="65.8551%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.6051%" y="341" width="0.1592%" height="15" fill="rgb(237,27,7)" fg:x="824" fg:w="2"/><text x="65.8551%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.6051%" y="325" width="0.1592%" height="15" fill="rgb(216,52,7)" fg:x="824" fg:w="2"/><text x="65.8551%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.6847%" y="309" width="0.0796%" height="15" fill="rgb(243,11,11)" fg:x="825" fg:w="1"/><text x="65.9347%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="65.7643%" y="421" width="0.1592%" height="15" fill="rgb(253,167,20)" fg:x="826" fg:w="2"/><text x="66.0143%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="65.7643%" y="405" width="0.1592%" height="15" fill="rgb(215,207,5)" fg:x="826" fg:w="2"/><text x="66.0143%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="65.7643%" y="389" width="0.1592%" height="15" fill="rgb(252,127,31)" fg:x="826" fg:w="2"/><text x="66.0143%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="65.7643%" y="373" width="0.1592%" height="15" fill="rgb(209,106,27)" fg:x="826" fg:w="2"/><text x="66.0143%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="65.7643%" y="357" width="0.1592%" height="15" fill="rgb(214,220,18)" fg:x="826" fg:w="2"/><text x="66.0143%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="65.9236%" y="373" width="0.1592%" height="15" fill="rgb(237,89,12)" fg:x="828" fg:w="2"/><text x="66.1736%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="65.9236%" y="357" width="0.1592%" height="15" fill="rgb(209,167,36)" fg:x="828" fg:w="2"/><text x="66.1736%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.0032%" y="341" width="0.0796%" height="15" fill="rgb(243,45,22)" fg:x="829" fg:w="1"/><text x="66.2532%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.0032%" y="325" width="0.0796%" height="15" fill="rgb(239,2,46)" fg:x="829" fg:w="1"/><text x="66.2532%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.0828%" y="341" width="0.0796%" height="15" fill="rgb(241,101,0)" fg:x="830" fg:w="1"/><text x="66.3328%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (17 samples, 1.35%)</title><rect x="64.9682%" y="469" width="1.3535%" height="15" fill="rgb(244,34,31)" fg:x="816" fg:w="17"/><text x="65.2182%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.35%)</title><rect x="64.9682%" y="453" width="1.3535%" height="15" fill="rgb(248,23,22)" fg:x="816" fg:w="17"/><text x="65.2182%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (13 samples, 1.04%)</title><rect x="65.2866%" y="437" width="1.0350%" height="15" fill="rgb(218,27,48)" fg:x="820" fg:w="13"/><text x="65.5366%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="65.9236%" y="421" width="0.3981%" height="15" fill="rgb(232,78,1)" fg:x="828" fg:w="5"/><text x="66.1736%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="65.9236%" y="405" width="0.3981%" height="15" fill="rgb(233,169,12)" fg:x="828" fg:w="5"/><text x="66.1736%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="65.9236%" y="389" width="0.3981%" height="15" fill="rgb(225,222,54)" fg:x="828" fg:w="5"/><text x="66.1736%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.0828%" y="373" width="0.2389%" height="15" fill="rgb(245,126,29)" fg:x="830" fg:w="3"/><text x="66.3328%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="66.0828%" y="357" width="0.2389%" height="15" fill="rgb(241,63,48)" fg:x="830" fg:w="3"/><text x="66.3328%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="66.1624%" y="341" width="0.1592%" height="15" fill="rgb(235,126,38)" fg:x="831" fg:w="2"/><text x="66.4124%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.1624%" y="325" width="0.1592%" height="15" fill="rgb(232,96,49)" fg:x="831" fg:w="2"/><text x="66.4124%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.1624%" y="309" width="0.1592%" height="15" fill="rgb(211,146,40)" fg:x="831" fg:w="2"/><text x="66.4124%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.2420%" y="293" width="0.0796%" height="15" fill="rgb(247,93,44)" fg:x="832" fg:w="1"/><text x="66.4920%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::from_value (20 samples, 1.59%)</title><rect x="64.8885%" y="517" width="1.5924%" height="15" fill="rgb(251,41,49)" fg:x="815" fg:w="20"/><text x="65.1385%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (20 samples, 1.59%)</title><rect x="64.8885%" y="501" width="1.5924%" height="15" fill="rgb(218,155,12)" fg:x="815" fg:w="20"/><text x="65.1385%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (20 samples, 1.59%)</title><rect x="64.8885%" y="485" width="1.5924%" height="15" fill="rgb(221,161,30)" fg:x="815" fg:w="20"/><text x="65.1385%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.3217%" y="469" width="0.1592%" height="15" fill="rgb(221,179,11)" fg:x="833" fg:w="2"/><text x="66.5717%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.3217%" y="453" width="0.1592%" height="15" fill="rgb(224,170,48)" fg:x="833" fg:w="2"/><text x="66.5717%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="66.4013%" y="437" width="0.0796%" height="15" fill="rgb(223,117,5)" fg:x="834" fg:w="1"/><text x="66.6513%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="66.4809%" y="421" width="0.2389%" height="15" fill="rgb(209,52,20)" fg:x="835" fg:w="3"/><text x="66.7309%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="66.4809%" y="405" width="0.2389%" height="15" fill="rgb(209,19,41)" fg:x="835" fg:w="3"/><text x="66.7309%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="66.5605%" y="389" width="0.1592%" height="15" fill="rgb(210,177,12)" fg:x="836" fg:w="2"/><text x="66.8105%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="66.5605%" y="373" width="0.1592%" height="15" fill="rgb(211,159,37)" fg:x="836" fg:w="2"/><text x="66.8105%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.5605%" y="357" width="0.1592%" height="15" fill="rgb(209,20,2)" fg:x="836" fg:w="2"/><text x="66.8105%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.6401%" y="341" width="0.0796%" height="15" fill="rgb(244,3,46)" fg:x="837" fg:w="1"/><text x="66.8901%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.7197%" y="421" width="0.0796%" height="15" fill="rgb(220,94,38)" fg:x="838" fg:w="1"/><text x="66.9697%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.7197%" y="405" width="0.0796%" height="15" fill="rgb(253,14,31)" fg:x="838" fg:w="1"/><text x="66.9697%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="66.4809%" y="453" width="0.3981%" height="15" fill="rgb(234,176,13)" fg:x="835" fg:w="5"/><text x="66.7309%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="66.4809%" y="437" width="0.3981%" height="15" fill="rgb(218,62,25)" fg:x="835" fg:w="5"/><text x="66.7309%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.7994%" y="421" width="0.0796%" height="15" fill="rgb(216,124,40)" fg:x="839" fg:w="1"/><text x="67.0494%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.7994%" y="405" width="0.0796%" height="15" fill="rgb(228,170,12)" fg:x="839" fg:w="1"/><text x="67.0494%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.7994%" y="389" width="0.0796%" height="15" fill="rgb(231,226,5)" fg:x="839" fg:w="1"/><text x="67.0494%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (90 samples, 7.17%)</title><rect x="59.7930%" y="549" width="7.1656%" height="15" fill="rgb(237,122,22)" fg:x="751" fg:w="90"/><text x="60.0430%" y="559.50">engine::se..</text></g><g><title>engine::session::internal::Entities::add_persisted (38 samples, 3.03%)</title><rect x="63.9331%" y="533" width="3.0255%" height="15" fill="rgb(209,185,25)" fg:x="803" fg:w="38"/><text x="64.1831%" y="543.50">eng..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="66.4809%" y="517" width="0.4777%" height="15" fill="rgb(228,200,32)" fg:x="835" fg:w="6"/><text x="66.7309%" y="527.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="66.4809%" y="501" width="0.4777%" height="15" fill="rgb(217,140,10)" fg:x="835" fg:w="6"/><text x="66.7309%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="66.4809%" y="485" width="0.4777%" height="15" fill="rgb(253,17,24)" fg:x="835" fg:w="6"/><text x="66.7309%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="66.4809%" y="469" width="0.4777%" height="15" fill="rgb(212,61,6)" fg:x="835" fg:w="6"/><text x="66.7309%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.8790%" y="453" width="0.0796%" height="15" fill="rgb(205,14,25)" fg:x="840" fg:w="1"/><text x="67.1290%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.9586%" y="469" width="0.0796%" height="15" fill="rgb(232,69,41)" fg:x="841" fg:w="1"/><text x="67.2086%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.9586%" y="453" width="0.0796%" height="15" fill="rgb(241,106,47)" fg:x="841" fg:w="1"/><text x="67.2086%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9586%" y="437" width="0.0796%" height="15" fill="rgb(210,213,53)" fg:x="841" fg:w="1"/><text x="67.2086%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9586%" y="421" width="0.0796%" height="15" fill="rgb(253,175,27)" fg:x="841" fg:w="1"/><text x="67.2086%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.9586%" y="405" width="0.0796%" height="15" fill="rgb(211,171,24)" fg:x="841" fg:w="1"/><text x="67.2086%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.9586%" y="389" width="0.0796%" height="15" fill="rgb(229,80,7)" fg:x="841" fg:w="1"/><text x="67.2086%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.9586%" y="373" width="0.0796%" height="15" fill="rgb(212,46,39)" fg:x="841" fg:w="1"/><text x="67.2086%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9586%" y="357" width="0.0796%" height="15" fill="rgb(240,80,45)" fg:x="841" fg:w="1"/><text x="67.2086%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9586%" y="341" width="0.0796%" height="15" fill="rgb(253,177,40)" fg:x="841" fg:w="1"/><text x="67.2086%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.9586%" y="325" width="0.0796%" height="15" fill="rgb(249,200,15)" fg:x="841" fg:w="1"/><text x="67.2086%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.9586%" y="309" width="0.0796%" height="15" fill="rgb(217,78,26)" fg:x="841" fg:w="1"/><text x="67.2086%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.9586%" y="293" width="0.0796%" height="15" fill="rgb(254,151,32)" fg:x="841" fg:w="1"/><text x="67.2086%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.9586%" y="277" width="0.0796%" height="15" fill="rgb(226,165,27)" fg:x="841" fg:w="1"/><text x="67.2086%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.9586%" y="261" width="0.0796%" height="15" fill="rgb(250,206,4)" fg:x="841" fg:w="1"/><text x="67.2086%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.9586%" y="517" width="0.1592%" height="15" fill="rgb(231,229,27)" fg:x="841" fg:w="2"/><text x="67.2086%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.9586%" y="501" width="0.1592%" height="15" fill="rgb(239,217,8)" fg:x="841" fg:w="2"/><text x="67.2086%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.9586%" y="485" width="0.1592%" height="15" fill="rgb(225,204,27)" fg:x="841" fg:w="2"/><text x="67.2086%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0382%" y="469" width="0.0796%" height="15" fill="rgb(230,56,32)" fg:x="842" fg:w="1"/><text x="67.2882%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.0382%" y="453" width="0.0796%" height="15" fill="rgb(222,56,27)" fg:x="842" fg:w="1"/><text x="67.2882%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.0382%" y="437" width="0.0796%" height="15" fill="rgb(253,108,27)" fg:x="842" fg:w="1"/><text x="67.2882%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.1975%" y="469" width="0.1592%" height="15" fill="rgb(212,87,36)" fg:x="844" fg:w="2"/><text x="67.4475%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.1975%" y="453" width="0.1592%" height="15" fill="rgb(247,82,36)" fg:x="844" fg:w="2"/><text x="67.4475%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.1975%" y="437" width="0.1592%" height="15" fill="rgb(222,143,9)" fg:x="844" fg:w="2"/><text x="67.4475%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.1975%" y="421" width="0.1592%" height="15" fill="rgb(238,162,48)" fg:x="844" fg:w="2"/><text x="67.4475%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.4363%" y="421" width="0.1592%" height="15" fill="rgb(221,59,43)" fg:x="847" fg:w="2"/><text x="67.6863%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.5159%" y="405" width="0.0796%" height="15" fill="rgb(205,166,41)" fg:x="848" fg:w="1"/><text x="67.7659%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="67.6752%" y="373" width="0.0796%" height="15" fill="rgb(241,186,40)" fg:x="850" fg:w="1"/><text x="67.9252%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="67.6752%" y="357" width="0.0796%" height="15" fill="rgb(216,119,35)" fg:x="850" fg:w="1"/><text x="67.9252%" y="367.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="67.6752%" y="341" width="0.0796%" height="15" fill="rgb(208,68,38)" fg:x="850" fg:w="1"/><text x="67.9252%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.6752%" y="325" width="0.0796%" height="15" fill="rgb(217,113,1)" fg:x="850" fg:w="1"/><text x="67.9252%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.6752%" y="309" width="0.0796%" height="15" fill="rgb(242,153,3)" fg:x="850" fg:w="1"/><text x="67.9252%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.6752%" y="293" width="0.0796%" height="15" fill="rgb(229,76,35)" fg:x="850" fg:w="1"/><text x="67.9252%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.6752%" y="277" width="0.0796%" height="15" fill="rgb(229,125,34)" fg:x="850" fg:w="1"/><text x="67.9252%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="67.5955%" y="421" width="0.3981%" height="15" fill="rgb(238,179,36)" fg:x="849" fg:w="5"/><text x="67.8455%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="67.5955%" y="405" width="0.3981%" height="15" fill="rgb(244,183,19)" fg:x="849" fg:w="5"/><text x="67.8455%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="67.6752%" y="389" width="0.3185%" height="15" fill="rgb(216,85,49)" fg:x="850" fg:w="4"/><text x="67.9252%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="67.7548%" y="373" width="0.2389%" height="15" fill="rgb(208,161,47)" fg:x="851" fg:w="3"/><text x="68.0048%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.7548%" y="357" width="0.2389%" height="15" fill="rgb(233,210,18)" fg:x="851" fg:w="3"/><text x="68.0048%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.9140%" y="341" width="0.0796%" height="15" fill="rgb(205,104,42)" fg:x="853" fg:w="1"/><text x="68.1640%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.9936%" y="389" width="0.0796%" height="15" fill="rgb(248,90,43)" fg:x="854" fg:w="1"/><text x="68.2436%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="67.3567%" y="469" width="0.8758%" height="15" fill="rgb(206,198,11)" fg:x="846" fg:w="11"/><text x="67.6067%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.80%)</title><rect x="67.4363%" y="453" width="0.7962%" height="15" fill="rgb(239,165,27)" fg:x="847" fg:w="10"/><text x="67.6863%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.80%)</title><rect x="67.4363%" y="437" width="0.7962%" height="15" fill="rgb(246,44,32)" fg:x="847" fg:w="10"/><text x="67.6863%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="67.9936%" y="421" width="0.2389%" height="15" fill="rgb(252,65,42)" fg:x="854" fg:w="3"/><text x="68.2436%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.9936%" y="405" width="0.2389%" height="15" fill="rgb(246,197,18)" fg:x="854" fg:w="3"/><text x="68.2436%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.0732%" y="389" width="0.1592%" height="15" fill="rgb(216,192,4)" fg:x="855" fg:w="2"/><text x="68.3232%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.1529%" y="373" width="0.0796%" height="15" fill="rgb(208,117,10)" fg:x="856" fg:w="1"/><text x="68.4029%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.1529%" y="357" width="0.0796%" height="15" fill="rgb(240,61,47)" fg:x="856" fg:w="1"/><text x="68.4029%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.1529%" y="341" width="0.0796%" height="15" fill="rgb(228,178,21)" fg:x="856" fg:w="1"/><text x="68.4029%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.27%)</title><rect x="67.1178%" y="501" width="1.2739%" height="15" fill="rgb(219,96,54)" fg:x="843" fg:w="16"/><text x="67.3678%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (16 samples, 1.27%)</title><rect x="67.1178%" y="485" width="1.2739%" height="15" fill="rgb(250,177,24)" fg:x="843" fg:w="16"/><text x="67.3678%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.2325%" y="469" width="0.1592%" height="15" fill="rgb(242,154,46)" fg:x="857" fg:w="2"/><text x="68.4825%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.2325%" y="453" width="0.1592%" height="15" fill="rgb(226,176,29)" fg:x="857" fg:w="2"/><text x="68.4825%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.2325%" y="437" width="0.1592%" height="15" fill="rgb(226,29,2)" fg:x="857" fg:w="2"/><text x="68.4825%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.3121%" y="421" width="0.0796%" height="15" fill="rgb(237,104,14)" fg:x="858" fg:w="1"/><text x="68.5621%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.3121%" y="405" width="0.0796%" height="15" fill="rgb(245,207,31)" fg:x="858" fg:w="1"/><text x="68.5621%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.3121%" y="389" width="0.0796%" height="15" fill="rgb(229,211,45)" fg:x="858" fg:w="1"/><text x="68.5621%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.3121%" y="373" width="0.0796%" height="15" fill="rgb(229,113,15)" fg:x="858" fg:w="1"/><text x="68.5621%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 1.35%)</title><rect x="67.1178%" y="517" width="1.3535%" height="15" fill="rgb(237,147,15)" fg:x="843" fg:w="17"/><text x="67.3678%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3917%" y="501" width="0.0796%" height="15" fill="rgb(244,120,12)" fg:x="859" fg:w="1"/><text x="68.6417%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.4713%" y="437" width="0.0796%" height="15" fill="rgb(205,120,12)" fg:x="860" fg:w="1"/><text x="68.7213%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.4713%" y="421" width="0.0796%" height="15" fill="rgb(231,26,45)" fg:x="860" fg:w="1"/><text x="68.7213%" y="431.50"></text></g><g><title>engine::session::internal::Added::find_refs (21 samples, 1.67%)</title><rect x="66.9586%" y="549" width="1.6720%" height="15" fill="rgb(246,98,1)" fg:x="841" fg:w="21"/><text x="67.2086%" y="559.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (21 samples, 1.67%)</title><rect x="66.9586%" y="533" width="1.6720%" height="15" fill="rgb(207,68,45)" fg:x="841" fg:w="21"/><text x="67.2086%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.4713%" y="517" width="0.1592%" height="15" fill="rgb(231,27,38)" fg:x="860" fg:w="2"/><text x="68.7213%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.4713%" y="501" width="0.1592%" height="15" fill="rgb(214,223,3)" fg:x="860" fg:w="2"/><text x="68.7213%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="68.4713%" y="485" width="0.1592%" height="15" fill="rgb(228,195,46)" fg:x="860" fg:w="2"/><text x="68.7213%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.4713%" y="469" width="0.1592%" height="15" fill="rgb(231,100,42)" fg:x="860" fg:w="2"/><text x="68.7213%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.4713%" y="453" width="0.1592%" height="15" fill="rgb(236,53,4)" fg:x="860" fg:w="2"/><text x="68.7213%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.5510%" y="437" width="0.0796%" height="15" fill="rgb(230,152,12)" fg:x="861" fg:w="1"/><text x="68.8010%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.6306%" y="485" width="0.0796%" height="15" fill="rgb(226,101,19)" fg:x="862" fg:w="1"/><text x="68.8806%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.6306%" y="469" width="0.0796%" height="15" fill="rgb(250,149,32)" fg:x="862" fg:w="1"/><text x="68.8806%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7102%" y="485" width="0.0796%" height="15" fill="rgb(232,178,12)" fg:x="863" fg:w="1"/><text x="68.9602%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7102%" y="469" width="0.0796%" height="15" fill="rgb(246,151,17)" fg:x="863" fg:w="1"/><text x="68.9602%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.7102%" y="453" width="0.0796%" height="15" fill="rgb(252,17,51)" fg:x="863" fg:w="1"/><text x="68.9602%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.7102%" y="437" width="0.0796%" height="15" fill="rgb(250,207,23)" fg:x="863" fg:w="1"/><text x="68.9602%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.7102%" y="421" width="0.0796%" height="15" fill="rgb(205,27,5)" fg:x="863" fg:w="1"/><text x="68.9602%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.7102%" y="405" width="0.0796%" height="15" fill="rgb(224,32,19)" fg:x="863" fg:w="1"/><text x="68.9602%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.7102%" y="389" width="0.0796%" height="15" fill="rgb(247,214,40)" fg:x="863" fg:w="1"/><text x="68.9602%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.7102%" y="373" width="0.0796%" height="15" fill="rgb(239,199,17)" fg:x="863" fg:w="1"/><text x="68.9602%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.7102%" y="357" width="0.0796%" height="15" fill="rgb(251,159,9)" fg:x="863" fg:w="1"/><text x="68.9602%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.7102%" y="341" width="0.0796%" height="15" fill="rgb(225,78,32)" fg:x="863" fg:w="1"/><text x="68.9602%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.7102%" y="325" width="0.0796%" height="15" fill="rgb(206,97,47)" fg:x="863" fg:w="1"/><text x="68.9602%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.7102%" y="309" width="0.0796%" height="15" fill="rgb(227,107,4)" fg:x="863" fg:w="1"/><text x="68.9602%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="68.6306%" y="517" width="0.2389%" height="15" fill="rgb(241,146,50)" fg:x="862" fg:w="3"/><text x="68.8806%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="68.6306%" y="501" width="0.2389%" height="15" fill="rgb(232,92,30)" fg:x="862" fg:w="3"/><text x="68.8806%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7898%" y="485" width="0.0796%" height="15" fill="rgb(222,0,40)" fg:x="864" fg:w="1"/><text x="69.0398%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="68.6306%" y="533" width="0.3185%" height="15" fill="rgb(219,54,33)" fg:x="862" fg:w="4"/><text x="68.8806%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8694%" y="517" width="0.0796%" height="15" fill="rgb(226,209,28)" fg:x="865" fg:w="1"/><text x="69.1194%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.9490%" y="501" width="0.0796%" height="15" fill="rgb(254,205,35)" fg:x="866" fg:w="1"/><text x="69.1990%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.9490%" y="485" width="0.0796%" height="15" fill="rgb(230,159,3)" fg:x="866" fg:w="1"/><text x="69.1990%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.9490%" y="469" width="0.0796%" height="15" fill="rgb(232,190,24)" fg:x="866" fg:w="1"/><text x="69.1990%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.9490%" y="453" width="0.0796%" height="15" fill="rgb(217,227,44)" fg:x="866" fg:w="1"/><text x="69.1990%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.9490%" y="437" width="0.0796%" height="15" fill="rgb(236,211,1)" fg:x="866" fg:w="1"/><text x="69.1990%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.9490%" y="421" width="0.0796%" height="15" fill="rgb(250,127,46)" fg:x="866" fg:w="1"/><text x="69.1990%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.9490%" y="405" width="0.0796%" height="15" fill="rgb(229,213,6)" fg:x="866" fg:w="1"/><text x="69.1990%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.9490%" y="389" width="0.0796%" height="15" fill="rgb(237,15,36)" fg:x="866" fg:w="1"/><text x="69.1990%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.9490%" y="373" width="0.0796%" height="15" fill="rgb(213,131,41)" fg:x="866" fg:w="1"/><text x="69.1990%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.9490%" y="357" width="0.0796%" height="15" fill="rgb(225,82,44)" fg:x="866" fg:w="1"/><text x="69.1990%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.9490%" y="341" width="0.0796%" height="15" fill="rgb(249,42,11)" fg:x="866" fg:w="1"/><text x="69.1990%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.9490%" y="325" width="0.0796%" height="15" fill="rgb(253,11,29)" fg:x="866" fg:w="1"/><text x="69.1990%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.9490%" y="309" width="0.0796%" height="15" fill="rgb(206,8,54)" fg:x="866" fg:w="1"/><text x="69.1990%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.9490%" y="293" width="0.0796%" height="15" fill="rgb(222,186,2)" fg:x="866" fg:w="1"/><text x="69.1990%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="68.9490%" y="533" width="0.1592%" height="15" fill="rgb(221,206,53)" fg:x="866" fg:w="2"/><text x="69.1990%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="68.9490%" y="517" width="0.1592%" height="15" fill="rgb(230,150,21)" fg:x="866" fg:w="2"/><text x="69.1990%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.0287%" y="501" width="0.0796%" height="15" fill="rgb(253,202,10)" fg:x="867" fg:w="1"/><text x="69.2787%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.0287%" y="485" width="0.0796%" height="15" fill="rgb(238,109,40)" fg:x="867" fg:w="1"/><text x="69.2787%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="69.0287%" y="469" width="0.0796%" height="15" fill="rgb(247,120,22)" fg:x="867" fg:w="1"/><text x="69.2787%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.0287%" y="453" width="0.0796%" height="15" fill="rgb(207,43,30)" fg:x="867" fg:w="1"/><text x="69.2787%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.0287%" y="437" width="0.0796%" height="15" fill="rgb(213,211,24)" fg:x="867" fg:w="1"/><text x="69.2787%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.0287%" y="421" width="0.0796%" height="15" fill="rgb(239,73,39)" fg:x="867" fg:w="1"/><text x="69.2787%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.0287%" y="405" width="0.0796%" height="15" fill="rgb(245,182,19)" fg:x="867" fg:w="1"/><text x="69.2787%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.0287%" y="389" width="0.0796%" height="15" fill="rgb(247,143,26)" fg:x="867" fg:w="1"/><text x="69.2787%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="69.1083%" y="533" width="0.0796%" height="15" fill="rgb(228,191,23)" fg:x="868" fg:w="1"/><text x="69.3583%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.2675%" y="485" width="0.0796%" height="15" fill="rgb(253,165,31)" fg:x="870" fg:w="1"/><text x="69.5175%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.2675%" y="469" width="0.0796%" height="15" fill="rgb(234,138,20)" fg:x="870" fg:w="1"/><text x="69.5175%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="69.3471%" y="437" width="0.2389%" height="15" fill="rgb(218,191,29)" fg:x="871" fg:w="3"/><text x="69.5971%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.4268%" y="421" width="0.1592%" height="15" fill="rgb(221,157,19)" fg:x="872" fg:w="2"/><text x="69.6768%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.5064%" y="405" width="0.0796%" height="15" fill="rgb(237,26,42)" fg:x="873" fg:w="1"/><text x="69.7564%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.5064%" y="389" width="0.0796%" height="15" fill="rgb(220,163,24)" fg:x="873" fg:w="1"/><text x="69.7564%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="69.5064%" y="373" width="0.0796%" height="15" fill="rgb(242,115,20)" fg:x="873" fg:w="1"/><text x="69.7564%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.5064%" y="357" width="0.0796%" height="15" fill="rgb(210,206,9)" fg:x="873" fg:w="1"/><text x="69.7564%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5064%" y="341" width="0.0796%" height="15" fill="rgb(208,71,17)" fg:x="873" fg:w="1"/><text x="69.7564%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.5860%" y="405" width="0.0796%" height="15" fill="rgb(233,7,5)" fg:x="874" fg:w="1"/><text x="69.8360%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="69.5860%" y="437" width="0.2389%" height="15" fill="rgb(207,92,33)" fg:x="874" fg:w="3"/><text x="69.8360%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="69.5860%" y="421" width="0.2389%" height="15" fill="rgb(218,87,9)" fg:x="874" fg:w="3"/><text x="69.8360%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="69.6656%" y="405" width="0.1592%" height="15" fill="rgb(219,47,37)" fg:x="875" fg:w="2"/><text x="69.9156%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="69.6656%" y="389" width="0.1592%" height="15" fill="rgb(221,152,34)" fg:x="875" fg:w="2"/><text x="69.9156%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.7452%" y="373" width="0.0796%" height="15" fill="rgb(235,176,21)" fg:x="876" fg:w="1"/><text x="69.9952%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="69.8248%" y="389" width="0.0796%" height="15" fill="rgb(232,212,21)" fg:x="877" fg:w="1"/><text x="70.0748%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="69.8248%" y="373" width="0.0796%" height="15" fill="rgb(245,82,39)" fg:x="877" fg:w="1"/><text x="70.0748%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8248%" y="357" width="0.0796%" height="15" fill="rgb(241,52,51)" fg:x="877" fg:w="1"/><text x="70.0748%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.8248%" y="341" width="0.0796%" height="15" fill="rgb(219,91,24)" fg:x="877" fg:w="1"/><text x="70.0748%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (9 samples, 0.72%)</title><rect x="69.3471%" y="485" width="0.7166%" height="15" fill="rgb(241,142,12)" fg:x="871" fg:w="9"/><text x="69.5971%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="69.3471%" y="469" width="0.7166%" height="15" fill="rgb(230,27,9)" fg:x="871" fg:w="9"/><text x="69.5971%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="69.3471%" y="453" width="0.7166%" height="15" fill="rgb(249,181,32)" fg:x="871" fg:w="9"/><text x="69.5971%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.8248%" y="437" width="0.2389%" height="15" fill="rgb(230,107,3)" fg:x="877" fg:w="3"/><text x="70.0748%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.8248%" y="421" width="0.2389%" height="15" fill="rgb(246,204,14)" fg:x="877" fg:w="3"/><text x="70.0748%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="69.8248%" y="405" width="0.2389%" height="15" fill="rgb(213,192,47)" fg:x="877" fg:w="3"/><text x="70.0748%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.9045%" y="389" width="0.1592%" height="15" fill="rgb(240,44,36)" fg:x="878" fg:w="2"/><text x="70.1545%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.9841%" y="373" width="0.0796%" height="15" fill="rgb(244,209,38)" fg:x="879" fg:w="1"/><text x="70.2341%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.9841%" y="357" width="0.0796%" height="15" fill="rgb(219,34,37)" fg:x="879" fg:w="1"/><text x="70.2341%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (12 samples, 0.96%)</title><rect x="69.1879%" y="533" width="0.9554%" height="15" fill="rgb(210,28,6)" fg:x="869" fg:w="12"/><text x="69.4379%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.96%)</title><rect x="69.1879%" y="517" width="0.9554%" height="15" fill="rgb(244,110,52)" fg:x="869" fg:w="12"/><text x="69.4379%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="69.1879%" y="501" width="0.9554%" height="15" fill="rgb(254,124,47)" fg:x="869" fg:w="12"/><text x="69.4379%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.0637%" y="485" width="0.0796%" height="15" fill="rgb(254,110,13)" fg:x="880" fg:w="1"/><text x="70.3137%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.0637%" y="469" width="0.0796%" height="15" fill="rgb(252,57,21)" fg:x="880" fg:w="1"/><text x="70.3137%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="70.0637%" y="453" width="0.0796%" height="15" fill="rgb(242,60,45)" fg:x="880" fg:w="1"/><text x="70.3137%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.1433%" y="389" width="0.0796%" height="15" fill="rgb(234,49,30)" fg:x="881" fg:w="1"/><text x="70.3933%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.1433%" y="373" width="0.0796%" height="15" fill="rgb(218,98,6)" fg:x="881" fg:w="1"/><text x="70.3933%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.1433%" y="357" width="0.0796%" height="15" fill="rgb(220,174,29)" fg:x="881" fg:w="1"/><text x="70.3933%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.1433%" y="341" width="0.0796%" height="15" fill="rgb(236,163,23)" fg:x="881" fg:w="1"/><text x="70.3933%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.1433%" y="325" width="0.0796%" height="15" fill="rgb(242,114,45)" fg:x="881" fg:w="1"/><text x="70.3933%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="70.1433%" y="437" width="0.1592%" height="15" fill="rgb(232,10,53)" fg:x="881" fg:w="2"/><text x="70.3933%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.1433%" y="421" width="0.1592%" height="15" fill="rgb(245,108,29)" fg:x="881" fg:w="2"/><text x="70.3933%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="70.1433%" y="405" width="0.1592%" height="15" fill="rgb(240,89,53)" fg:x="881" fg:w="2"/><text x="70.3933%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="70.2229%" y="389" width="0.0796%" height="15" fill="rgb(226,60,45)" fg:x="882" fg:w="1"/><text x="70.4729%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.2229%" y="373" width="0.0796%" height="15" fill="rgb(230,41,44)" fg:x="882" fg:w="1"/><text x="70.4729%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2229%" y="357" width="0.0796%" height="15" fill="rgb(230,26,20)" fg:x="882" fg:w="1"/><text x="70.4729%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="70.1433%" y="469" width="0.2389%" height="15" fill="rgb(237,170,32)" fg:x="881" fg:w="3"/><text x="70.3933%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="70.1433%" y="453" width="0.2389%" height="15" fill="rgb(212,35,42)" fg:x="881" fg:w="3"/><text x="70.3933%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.3025%" y="437" width="0.0796%" height="15" fill="rgb(227,31,34)" fg:x="883" fg:w="1"/><text x="70.5525%" y="447.50"></text></g><g><title>engine::session::Session::load_entity (134 samples, 10.67%)</title><rect x="59.7930%" y="565" width="10.6688%" height="15" fill="rgb(216,19,18)" fg:x="751" fg:w="134"/><text x="60.0430%" y="575.50">engine::session:..</text></g><g><title>engine::session::internal::Entities::add_persisted (23 samples, 1.83%)</title><rect x="68.6306%" y="549" width="1.8312%" height="15" fill="rgb(211,133,42)" fg:x="862" fg:w="23"/><text x="68.8806%" y="559.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="70.1433%" y="533" width="0.3185%" height="15" fill="rgb(244,66,13)" fg:x="881" fg:w="4"/><text x="70.3933%" y="543.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="70.1433%" y="517" width="0.3185%" height="15" fill="rgb(218,185,50)" fg:x="881" fg:w="4"/><text x="70.3933%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="70.1433%" y="501" width="0.3185%" height="15" fill="rgb(219,149,13)" fg:x="881" fg:w="4"/><text x="70.3933%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="70.1433%" y="485" width="0.3185%" height="15" fill="rgb(221,125,0)" fg:x="881" fg:w="4"/><text x="70.3933%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.3822%" y="469" width="0.0796%" height="15" fill="rgb(247,126,27)" fg:x="884" fg:w="1"/><text x="70.6322%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.3822%" y="453" width="0.0796%" height="15" fill="rgb(250,138,30)" fg:x="884" fg:w="1"/><text x="70.6322%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="70.3822%" y="437" width="0.0796%" height="15" fill="rgb(230,151,9)" fg:x="884" fg:w="1"/><text x="70.6322%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.6210%" y="517" width="0.0796%" height="15" fill="rgb(233,80,38)" fg:x="887" fg:w="1"/><text x="70.8710%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6210%" y="501" width="0.0796%" height="15" fill="rgb(232,68,43)" fg:x="887" fg:w="1"/><text x="70.8710%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6210%" y="485" width="0.0796%" height="15" fill="rgb(254,5,50)" fg:x="887" fg:w="1"/><text x="70.8710%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.6210%" y="469" width="0.0796%" height="15" fill="rgb(225,45,5)" fg:x="887" fg:w="1"/><text x="70.8710%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7006%" y="517" width="0.0796%" height="15" fill="rgb(239,22,3)" fg:x="888" fg:w="1"/><text x="70.9506%" y="527.50"></text></g><g><title>engine::users::model::username_to_key (5 samples, 0.40%)</title><rect x="70.4618%" y="565" width="0.3981%" height="15" fill="rgb(243,129,0)" fg:x="885" fg:w="5"/><text x="70.7118%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="70.4618%" y="549" width="0.3981%" height="15" fill="rgb(223,164,0)" fg:x="885" fg:w="5"/><text x="70.7118%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="70.4618%" y="533" width="0.3981%" height="15" fill="rgb(221,46,29)" fg:x="885" fg:w="5"/><text x="70.7118%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.7803%" y="517" width="0.0796%" height="15" fill="rgb(205,97,47)" fg:x="889" fg:w="1"/><text x="71.0303%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.7803%" y="501" width="0.0796%" height="15" fill="rgb(249,14,8)" fg:x="889" fg:w="1"/><text x="71.0303%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.8599%" y="549" width="0.0796%" height="15" fill="rgb(216,77,3)" fg:x="890" fg:w="1"/><text x="71.1099%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.8599%" y="533" width="0.0796%" height="15" fill="rgb(206,168,54)" fg:x="890" fg:w="1"/><text x="71.1099%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.8599%" y="517" width="0.0796%" height="15" fill="rgb(236,3,41)" fg:x="890" fg:w="1"/><text x="71.1099%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8599%" y="501" width="0.0796%" height="15" fill="rgb(231,132,24)" fg:x="890" fg:w="1"/><text x="71.1099%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.8599%" y="485" width="0.0796%" height="15" fill="rgb(227,221,40)" fg:x="890" fg:w="1"/><text x="71.1099%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8599%" y="469" width="0.0796%" height="15" fill="rgb(233,151,11)" fg:x="890" fg:w="1"/><text x="71.1099%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.8599%" y="453" width="0.0796%" height="15" fill="rgb(247,81,35)" fg:x="890" fg:w="1"/><text x="71.1099%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8599%" y="437" width="0.0796%" height="15" fill="rgb(243,128,48)" fg:x="890" fg:w="1"/><text x="71.1099%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="70.9395%" y="533" width="0.0796%" height="15" fill="rgb(253,16,10)" fg:x="891" fg:w="1"/><text x="71.1895%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.9395%" y="517" width="0.0796%" height="15" fill="rgb(228,67,27)" fg:x="891" fg:w="1"/><text x="71.1895%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.0191%" y="517" width="0.0796%" height="15" fill="rgb(231,105,25)" fg:x="892" fg:w="1"/><text x="71.2691%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.0191%" y="501" width="0.0796%" height="15" fill="rgb(213,166,47)" fg:x="892" fg:w="1"/><text x="71.2691%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.0191%" y="485" width="0.0796%" height="15" fill="rgb(209,27,10)" fg:x="892" fg:w="1"/><text x="71.2691%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0191%" y="469" width="0.0796%" height="15" fill="rgb(241,44,30)" fg:x="892" fg:w="1"/><text x="71.2691%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0191%" y="453" width="0.0796%" height="15" fill="rgb(223,216,15)" fg:x="892" fg:w="1"/><text x="71.2691%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.0191%" y="437" width="0.0796%" height="15" fill="rgb(227,14,7)" fg:x="892" fg:w="1"/><text x="71.2691%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.0191%" y="421" width="0.0796%" height="15" fill="rgb(237,14,5)" fg:x="892" fg:w="1"/><text x="71.2691%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.0191%" y="405" width="0.0796%" height="15" fill="rgb(232,14,36)" fg:x="892" fg:w="1"/><text x="71.2691%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="71.0191%" y="389" width="0.0796%" height="15" fill="rgb(234,0,38)" fg:x="892" fg:w="1"/><text x="71.2691%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.0191%" y="373" width="0.0796%" height="15" fill="rgb(207,170,14)" fg:x="892" fg:w="1"/><text x="71.2691%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.0987%" y="517" width="0.0796%" height="15" fill="rgb(252,45,13)" fg:x="893" fg:w="1"/><text x="71.3487%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="71.0987%" y="501" width="0.0796%" height="15" fill="rgb(213,142,7)" fg:x="893" fg:w="1"/><text x="71.3487%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="70.8599%" y="565" width="0.3981%" height="15" fill="rgb(216,157,23)" fg:x="890" fg:w="5"/><text x="71.1099%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="70.9395%" y="549" width="0.3185%" height="15" fill="rgb(212,145,33)" fg:x="891" fg:w="4"/><text x="71.1895%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="71.0191%" y="533" width="0.2389%" height="15" fill="rgb(233,26,13)" fg:x="892" fg:w="3"/><text x="71.2691%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.1783%" y="517" width="0.0796%" height="15" fill="rgb(219,196,19)" fg:x="894" fg:w="1"/><text x="71.4283%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.1783%" y="501" width="0.0796%" height="15" fill="rgb(246,56,21)" fg:x="894" fg:w="1"/><text x="71.4283%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.1783%" y="485" width="0.0796%" height="15" fill="rgb(222,28,53)" fg:x="894" fg:w="1"/><text x="71.4283%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.1783%" y="469" width="0.0796%" height="15" fill="rgb(224,5,27)" fg:x="894" fg:w="1"/><text x="71.4283%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.1783%" y="453" width="0.0796%" height="15" fill="rgb(220,153,33)" fg:x="894" fg:w="1"/><text x="71.4283%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.1783%" y="437" width="0.0796%" height="15" fill="rgb(226,58,19)" fg:x="894" fg:w="1"/><text x="71.4283%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="71.3376%" y="485" width="0.2389%" height="15" fill="rgb(239,112,23)" fg:x="896" fg:w="3"/><text x="71.5876%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.4172%" y="469" width="0.1592%" height="15" fill="rgb(251,213,20)" fg:x="897" fg:w="2"/><text x="71.6672%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.4968%" y="453" width="0.0796%" height="15" fill="rgb(215,181,21)" fg:x="898" fg:w="1"/><text x="71.7468%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4968%" y="437" width="0.0796%" height="15" fill="rgb(240,8,35)" fg:x="898" fg:w="1"/><text x="71.7468%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4968%" y="421" width="0.0796%" height="15" fill="rgb(232,203,3)" fg:x="898" fg:w="1"/><text x="71.7468%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.4968%" y="405" width="0.0796%" height="15" fill="rgb(214,202,43)" fg:x="898" fg:w="1"/><text x="71.7468%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.4968%" y="389" width="0.0796%" height="15" fill="rgb(254,35,11)" fg:x="898" fg:w="1"/><text x="71.7468%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.4968%" y="373" width="0.0796%" height="15" fill="rgb(239,173,13)" fg:x="898" fg:w="1"/><text x="71.7468%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.4968%" y="357" width="0.0796%" height="15" fill="rgb(220,141,0)" fg:x="898" fg:w="1"/><text x="71.7468%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.4968%" y="341" width="0.0796%" height="15" fill="rgb(210,98,12)" fg:x="898" fg:w="1"/><text x="71.7468%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.4968%" y="325" width="0.0796%" height="15" fill="rgb(254,153,22)" fg:x="898" fg:w="1"/><text x="71.7468%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.4968%" y="309" width="0.0796%" height="15" fill="rgb(247,223,17)" fg:x="898" fg:w="1"/><text x="71.7468%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.4968%" y="293" width="0.0796%" height="15" fill="rgb(246,56,7)" fg:x="898" fg:w="1"/><text x="71.7468%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.4968%" y="277" width="0.0796%" height="15" fill="rgb(240,226,12)" fg:x="898" fg:w="1"/><text x="71.7468%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.4968%" y="261" width="0.0796%" height="15" fill="rgb(205,87,46)" fg:x="898" fg:w="1"/><text x="71.7468%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.5764%" y="485" width="0.0796%" height="15" fill="rgb(245,214,51)" fg:x="899" fg:w="1"/><text x="71.8264%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.5764%" y="469" width="0.0796%" height="15" fill="rgb(223,172,33)" fg:x="899" fg:w="1"/><text x="71.8264%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.5764%" y="453" width="0.0796%" height="15" fill="rgb(227,203,34)" fg:x="899" fg:w="1"/><text x="71.8264%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.5764%" y="437" width="0.0796%" height="15" fill="rgb(248,143,44)" fg:x="899" fg:w="1"/><text x="71.8264%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.5764%" y="421" width="0.0796%" height="15" fill="rgb(226,162,5)" fg:x="899" fg:w="1"/><text x="71.8264%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.5764%" y="405" width="0.0796%" height="15" fill="rgb(211,143,1)" fg:x="899" fg:w="1"/><text x="71.8264%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.5764%" y="389" width="0.0796%" height="15" fill="rgb(224,96,15)" fg:x="899" fg:w="1"/><text x="71.8264%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.5764%" y="373" width="0.0796%" height="15" fill="rgb(222,4,38)" fg:x="899" fg:w="1"/><text x="71.8264%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.5764%" y="357" width="0.0796%" height="15" fill="rgb(253,228,15)" fg:x="899" fg:w="1"/><text x="71.8264%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.5764%" y="341" width="0.0796%" height="15" fill="rgb(242,194,12)" fg:x="899" fg:w="1"/><text x="71.8264%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.5764%" y="325" width="0.0796%" height="15" fill="rgb(214,177,31)" fg:x="899" fg:w="1"/><text x="71.8264%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.5764%" y="309" width="0.0796%" height="15" fill="rgb(226,58,51)" fg:x="899" fg:w="1"/><text x="71.8264%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="71.2580%" y="517" width="0.4777%" height="15" fill="rgb(250,119,16)" fg:x="895" fg:w="6"/><text x="71.5080%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="71.2580%" y="501" width="0.4777%" height="15" fill="rgb(223,128,53)" fg:x="895" fg:w="6"/><text x="71.5080%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.6561%" y="485" width="0.0796%" height="15" fill="rgb(251,199,15)" fg:x="900" fg:w="1"/><text x="71.9061%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.7357%" y="517" width="0.0796%" height="15" fill="rgb(235,168,42)" fg:x="901" fg:w="1"/><text x="71.9857%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.7357%" y="501" width="0.0796%" height="15" fill="rgb(250,210,17)" fg:x="901" fg:w="1"/><text x="71.9857%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7357%" y="485" width="0.0796%" height="15" fill="rgb(226,36,41)" fg:x="901" fg:w="1"/><text x="71.9857%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7357%" y="469" width="0.0796%" height="15" fill="rgb(225,87,10)" fg:x="901" fg:w="1"/><text x="71.9857%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.7357%" y="453" width="0.0796%" height="15" fill="rgb(228,83,9)" fg:x="901" fg:w="1"/><text x="71.9857%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.0541%" y="389" width="0.0796%" height="15" fill="rgb(225,16,36)" fg:x="905" fg:w="1"/><text x="72.3041%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.0541%" y="373" width="0.0796%" height="15" fill="rgb(242,198,13)" fg:x="905" fg:w="1"/><text x="72.3041%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="72.0541%" y="421" width="0.1592%" height="15" fill="rgb(239,25,51)" fg:x="905" fg:w="2"/><text x="72.3041%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="72.0541%" y="405" width="0.1592%" height="15" fill="rgb(239,28,37)" fg:x="905" fg:w="2"/><text x="72.3041%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="72.1338%" y="389" width="0.0796%" height="15" fill="rgb(234,70,17)" fg:x="906" fg:w="1"/><text x="72.3838%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.1338%" y="373" width="0.0796%" height="15" fill="rgb(231,215,53)" fg:x="906" fg:w="1"/><text x="72.3838%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="72.2134%" y="421" width="0.0796%" height="15" fill="rgb(218,140,42)" fg:x="907" fg:w="1"/><text x="72.4634%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.2134%" y="405" width="0.0796%" height="15" fill="rgb(233,227,45)" fg:x="907" fg:w="1"/><text x="72.4634%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="72.2134%" y="389" width="0.0796%" height="15" fill="rgb(225,189,21)" fg:x="907" fg:w="1"/><text x="72.4634%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2134%" y="373" width="0.0796%" height="15" fill="rgb(237,176,54)" fg:x="907" fg:w="1"/><text x="72.4634%" y="383.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (5 samples, 0.40%)</title><rect x="72.0541%" y="469" width="0.3981%" height="15" fill="rgb(215,131,46)" fg:x="905" fg:w="5"/><text x="72.3041%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="72.0541%" y="453" width="0.3981%" height="15" fill="rgb(218,95,20)" fg:x="905" fg:w="5"/><text x="72.3041%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="72.0541%" y="437" width="0.3981%" height="15" fill="rgb(208,198,12)" fg:x="905" fg:w="5"/><text x="72.3041%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.2930%" y="421" width="0.1592%" height="15" fill="rgb(239,107,50)" fg:x="908" fg:w="2"/><text x="72.5430%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.3726%" y="405" width="0.0796%" height="15" fill="rgb(240,217,37)" fg:x="909" fg:w="1"/><text x="72.6226%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="72.3726%" y="389" width="0.0796%" height="15" fill="rgb(242,197,49)" fg:x="909" fg:w="1"/><text x="72.6226%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3726%" y="373" width="0.0796%" height="15" fill="rgb(219,171,17)" fg:x="909" fg:w="1"/><text x="72.6226%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.3726%" y="357" width="0.0796%" height="15" fill="rgb(209,81,40)" fg:x="909" fg:w="1"/><text x="72.6226%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="72.3726%" y="341" width="0.0796%" height="15" fill="rgb(237,156,30)" fg:x="909" fg:w="1"/><text x="72.6226%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3726%" y="325" width="0.0796%" height="15" fill="rgb(212,127,16)" fg:x="909" fg:w="1"/><text x="72.6226%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.3726%" y="309" width="0.0796%" height="15" fill="rgb(226,66,32)" fg:x="909" fg:w="1"/><text x="72.6226%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::from_value (10 samples, 0.80%)</title><rect x="71.8153%" y="517" width="0.7962%" height="15" fill="rgb(245,22,46)" fg:x="902" fg:w="10"/><text x="72.0653%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="71.8153%" y="501" width="0.7962%" height="15" fill="rgb(210,112,21)" fg:x="902" fg:w="10"/><text x="72.0653%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="71.8153%" y="485" width="0.7962%" height="15" fill="rgb(207,118,39)" fg:x="902" fg:w="10"/><text x="72.0653%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.4522%" y="469" width="0.1592%" height="15" fill="rgb(205,206,35)" fg:x="910" fg:w="2"/><text x="72.7022%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.4522%" y="453" width="0.1592%" height="15" fill="rgb(222,120,2)" fg:x="910" fg:w="2"/><text x="72.7022%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.5318%" y="437" width="0.0796%" height="15" fill="rgb(205,38,18)" fg:x="911" fg:w="1"/><text x="72.7818%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.5318%" y="421" width="0.0796%" height="15" fill="rgb(226,61,2)" fg:x="911" fg:w="1"/><text x="72.7818%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.7707%" y="453" width="0.0796%" height="15" fill="rgb(242,161,23)" fg:x="914" fg:w="1"/><text x="73.0207%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.7707%" y="437" width="0.0796%" height="15" fill="rgb(213,13,52)" fg:x="914" fg:w="1"/><text x="73.0207%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.7707%" y="421" width="0.0796%" height="15" fill="rgb(246,209,47)" fg:x="914" fg:w="1"/><text x="73.0207%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.7707%" y="405" width="0.0796%" height="15" fill="rgb(214,41,3)" fg:x="914" fg:w="1"/><text x="73.0207%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.7707%" y="389" width="0.0796%" height="15" fill="rgb(236,119,38)" fg:x="914" fg:w="1"/><text x="73.0207%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (21 samples, 1.67%)</title><rect x="71.2580%" y="549" width="1.6720%" height="15" fill="rgb(218,50,11)" fg:x="895" fg:w="21"/><text x="71.5080%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (21 samples, 1.67%)</title><rect x="71.2580%" y="533" width="1.6720%" height="15" fill="rgb(228,38,11)" fg:x="895" fg:w="21"/><text x="71.5080%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="72.6115%" y="517" width="0.3185%" height="15" fill="rgb(212,13,9)" fg:x="912" fg:w="4"/><text x="72.8615%" y="527.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="72.6115%" y="501" width="0.3185%" height="15" fill="rgb(208,211,9)" fg:x="912" fg:w="4"/><text x="72.8615%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="72.6115%" y="485" width="0.3185%" height="15" fill="rgb(239,39,32)" fg:x="912" fg:w="4"/><text x="72.8615%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="72.6911%" y="469" width="0.2389%" height="15" fill="rgb(254,179,26)" fg:x="913" fg:w="3"/><text x="72.9411%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.8503%" y="453" width="0.0796%" height="15" fill="rgb(249,165,28)" fg:x="915" fg:w="1"/><text x="73.1003%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="72.9299%" y="533" width="0.1592%" height="15" fill="rgb(225,59,50)" fg:x="916" fg:w="2"/><text x="73.1799%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="72.9299%" y="517" width="0.1592%" height="15" fill="rgb(209,122,5)" fg:x="916" fg:w="2"/><text x="73.1799%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.0096%" y="501" width="0.0796%" height="15" fill="rgb(214,65,34)" fg:x="917" fg:w="1"/><text x="73.2596%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="73.0892%" y="517" width="0.0796%" height="15" fill="rgb(249,183,32)" fg:x="918" fg:w="1"/><text x="73.3392%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="73.0892%" y="533" width="0.2389%" height="15" fill="rgb(218,122,24)" fg:x="918" fg:w="3"/><text x="73.3392%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="73.1688%" y="517" width="0.1592%" height="15" fill="rgb(224,109,18)" fg:x="919" fg:w="2"/><text x="73.4188%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="73.1688%" y="501" width="0.1592%" height="15" fill="rgb(210,68,50)" fg:x="919" fg:w="2"/><text x="73.4188%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.1688%" y="485" width="0.1592%" height="15" fill="rgb(212,184,34)" fg:x="919" fg:w="2"/><text x="73.4188%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="73.1688%" y="469" width="0.1592%" height="15" fill="rgb(238,105,48)" fg:x="919" fg:w="2"/><text x="73.4188%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.1688%" y="453" width="0.1592%" height="15" fill="rgb(222,134,54)" fg:x="919" fg:w="2"/><text x="73.4188%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.2484%" y="437" width="0.0796%" height="15" fill="rgb(246,24,43)" fg:x="920" fg:w="1"/><text x="73.4984%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.2484%" y="421" width="0.0796%" height="15" fill="rgb(227,169,22)" fg:x="920" fg:w="1"/><text x="73.4984%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.2484%" y="405" width="0.0796%" height="15" fill="rgb(253,152,4)" fg:x="920" fg:w="1"/><text x="73.4984%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (922 samples, 73.41%)</title><rect x="0.0000%" y="645" width="73.4076%" height="15" fill="rgb(219,158,36)" fg:x="0" fg:w="922"/><text x="0.2500%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (922 samples, 73.41%)</title><rect x="0.0000%" y="629" width="73.4076%" height="15" fill="rgb(251,128,40)" fg:x="0" fg:w="922"/><text x="0.2500%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (922 samples, 73.41%)</title><rect x="0.0000%" y="613" width="73.4076%" height="15" fill="rgb(254,101,39)" fg:x="0" fg:w="922"/><text x="0.2500%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (288 samples, 22.93%)</title><rect x="50.4777%" y="597" width="22.9299%" height="15" fill="rgb(221,168,40)" fg:x="634" fg:w="288"/><text x="50.7277%" y="607.50">engine::session::Session::evaluate_a..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (288 samples, 22.93%)</title><rect x="50.4777%" y="581" width="22.9299%" height="15" fill="rgb(221,14,27)" fg:x="634" fg:w="288"/><text x="50.7277%" y="591.50">engine::session::Session::evaluate_a..</text></g><g><title>kernel::model::entry::EntryResolver::world (27 samples, 2.15%)</title><rect x="71.2580%" y="565" width="2.1497%" height="15" fill="rgb(207,36,43)" fg:x="895" fg:w="27"/><text x="71.5080%" y="575.50">k..</text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="72.9299%" y="549" width="0.4777%" height="15" fill="rgb(240,172,53)" fg:x="916" fg:w="6"/><text x="73.1799%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="73.3280%" y="533" width="0.0796%" height="15" fill="rgb(241,138,43)" fg:x="921" fg:w="1"/><text x="73.5780%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="73.3280%" y="517" width="0.0796%" height="15" fill="rgb(227,78,19)" fg:x="921" fg:w="1"/><text x="73.5780%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.3280%" y="501" width="0.0796%" height="15" fill="rgb(215,127,44)" fg:x="921" fg:w="1"/><text x="73.5780%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="73.4076%" y="597" width="0.2389%" height="15" fill="rgb(227,13,10)" fg:x="922" fg:w="3"/><text x="73.6576%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="73.4076%" y="581" width="0.2389%" height="15" fill="rgb(249,177,6)" fg:x="922" fg:w="3"/><text x="73.6576%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.4873%" y="565" width="0.1592%" height="15" fill="rgb(215,154,26)" fg:x="923" fg:w="2"/><text x="73.7373%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.7261%" y="549" width="0.1592%" height="15" fill="rgb(250,168,20)" fg:x="926" fg:w="2"/><text x="73.9761%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.8854%" y="501" width="0.1592%" height="15" fill="rgb(222,53,38)" fg:x="928" fg:w="2"/><text x="74.1354%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.0446%" y="485" width="0.0796%" height="15" fill="rgb(245,154,5)" fg:x="930" fg:w="1"/><text x="74.2946%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.2038%" y="437" width="0.0796%" height="15" fill="rgb(214,89,50)" fg:x="932" fg:w="1"/><text x="74.4538%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.2038%" y="421" width="0.0796%" height="15" fill="rgb(232,73,14)" fg:x="932" fg:w="1"/><text x="74.4538%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="74.2038%" y="453" width="0.1592%" height="15" fill="rgb(230,101,20)" fg:x="932" fg:w="2"/><text x="74.4538%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.2834%" y="437" width="0.0796%" height="15" fill="rgb(208,56,28)" fg:x="933" fg:w="1"/><text x="74.5334%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.3631%" y="453" width="0.0796%" height="15" fill="rgb(247,205,22)" fg:x="934" fg:w="1"/><text x="74.6131%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.3631%" y="437" width="0.0796%" height="15" fill="rgb(252,109,51)" fg:x="934" fg:w="1"/><text x="74.6131%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.4427%" y="437" width="0.0796%" height="15" fill="rgb(220,40,24)" fg:x="935" fg:w="1"/><text x="74.6927%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="73.8854%" y="517" width="0.7166%" height="15" fill="rgb(251,108,7)" fg:x="928" fg:w="9"/><text x="74.1354%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="74.0446%" y="501" width="0.5573%" height="15" fill="rgb(238,102,51)" fg:x="930" fg:w="7"/><text x="74.2946%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="74.1242%" y="485" width="0.4777%" height="15" fill="rgb(219,149,34)" fg:x="931" fg:w="6"/><text x="74.3742%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="74.1242%" y="469" width="0.4777%" height="15" fill="rgb(239,70,0)" fg:x="931" fg:w="6"/><text x="74.3742%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="74.4427%" y="453" width="0.1592%" height="15" fill="rgb(246,214,23)" fg:x="935" fg:w="2"/><text x="74.6927%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.5223%" y="437" width="0.0796%" height="15" fill="rgb(239,221,51)" fg:x="936" fg:w="1"/><text x="74.7723%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.5223%" y="421" width="0.0796%" height="15" fill="rgb(254,62,14)" fg:x="936" fg:w="1"/><text x="74.7723%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.6019%" y="485" width="0.0796%" height="15" fill="rgb(253,57,33)" fg:x="937" fg:w="1"/><text x="74.8519%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="74.6019%" y="501" width="0.3185%" height="15" fill="rgb(229,34,6)" fg:x="937" fg:w="4"/><text x="74.8519%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.6815%" y="485" width="0.2389%" height="15" fill="rgb(235,191,23)" fg:x="938" fg:w="3"/><text x="74.9315%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="74.7611%" y="469" width="0.1592%" height="15" fill="rgb(217,207,27)" fg:x="939" fg:w="2"/><text x="75.0111%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.8408%" y="453" width="0.0796%" height="15" fill="rgb(232,41,44)" fg:x="940" fg:w="1"/><text x="75.0908%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.35%)</title><rect x="73.6465%" y="597" width="1.3535%" height="15" fill="rgb(221,188,19)" fg:x="925" fg:w="17"/><text x="73.8965%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (17 samples, 1.35%)</title><rect x="73.6465%" y="581" width="1.3535%" height="15" fill="rgb(245,180,45)" fg:x="925" fg:w="17"/><text x="73.8965%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.27%)</title><rect x="73.7261%" y="565" width="1.2739%" height="15" fill="rgb(250,220,42)" fg:x="926" fg:w="16"/><text x="73.9761%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (14 samples, 1.11%)</title><rect x="73.8854%" y="549" width="1.1146%" height="15" fill="rgb(234,16,34)" fg:x="928" fg:w="14"/><text x="74.1354%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.11%)</title><rect x="73.8854%" y="533" width="1.1146%" height="15" fill="rgb(233,217,23)" fg:x="928" fg:w="14"/><text x="74.1354%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="74.6019%" y="517" width="0.3981%" height="15" fill="rgb(209,22,46)" fg:x="937" fg:w="5"/><text x="74.8519%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.9204%" y="501" width="0.0796%" height="15" fill="rgb(213,101,18)" fg:x="941" fg:w="1"/><text x="75.1704%" y="511.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="75.0796%" y="501" width="0.0796%" height="15" fill="rgb(215,179,52)" fg:x="943" fg:w="1"/><text x="75.3296%" y="511.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="75.0796%" y="485" width="0.0796%" height="15" fill="rgb(223,50,25)" fg:x="943" fg:w="1"/><text x="75.3296%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="75.0796%" y="469" width="0.0796%" height="15" fill="rgb(224,51,44)" fg:x="943" fg:w="1"/><text x="75.3296%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="75.0796%" y="453" width="0.0796%" height="15" fill="rgb(224,13,54)" fg:x="943" fg:w="1"/><text x="75.3296%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="75.0796%" y="437" width="0.0796%" height="15" fill="rgb(219,58,47)" fg:x="943" fg:w="1"/><text x="75.3296%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="75.0796%" y="421" width="0.0796%" height="15" fill="rgb(246,124,34)" fg:x="943" fg:w="1"/><text x="75.3296%" y="431.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (4 samples, 0.32%)</title><rect x="75.0000%" y="533" width="0.3185%" height="15" fill="rgb(245,109,25)" fg:x="942" fg:w="4"/><text x="75.2500%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (3 samples, 0.24%)</title><rect x="75.0796%" y="517" width="0.2389%" height="15" fill="rgb(235,48,23)" fg:x="943" fg:w="3"/><text x="75.3296%" y="527.50"></text></g><g><title>libloading::safe::Library::new (2 samples, 0.16%)</title><rect x="75.1592%" y="501" width="0.1592%" height="15" fill="rgb(229,203,36)" fg:x="944" fg:w="2"/><text x="75.4092%" y="511.50"></text></g><g><title>dlopen (2 samples, 0.16%)</title><rect x="75.1592%" y="485" width="0.1592%" height="15" fill="rgb(234,180,9)" fg:x="944" fg:w="2"/><text x="75.4092%" y="495.50"></text></g><g><title>_dl_catch_error (2 samples, 0.16%)</title><rect x="75.1592%" y="469" width="0.1592%" height="15" fill="rgb(228,98,45)" fg:x="944" fg:w="2"/><text x="75.4092%" y="479.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="75.1592%" y="453" width="0.1592%" height="15" fill="rgb(240,24,36)" fg:x="944" fg:w="2"/><text x="75.4092%" y="463.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="75.2389%" y="437" width="0.0796%" height="15" fill="rgb(227,154,19)" fg:x="945" fg:w="1"/><text x="75.4889%" y="447.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="75.2389%" y="421" width="0.0796%" height="15" fill="rgb(231,2,48)" fg:x="945" fg:w="1"/><text x="75.4889%" y="431.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (5 samples, 0.40%)</title><rect x="75.0000%" y="597" width="0.3981%" height="15" fill="rgb(219,216,0)" fg:x="942" fg:w="5"/><text x="75.2500%" y="607.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (5 samples, 0.40%)</title><rect x="75.0000%" y="581" width="0.3981%" height="15" fill="rgb(251,88,0)" fg:x="942" fg:w="5"/><text x="75.2500%" y="591.50"></text></g><g><title>engine::session::Session::new (5 samples, 0.40%)</title><rect x="75.0000%" y="565" width="0.3981%" height="15" fill="rgb(242,45,45)" fg:x="942" fg:w="5"/><text x="75.2500%" y="575.50"></text></g><g><title>engine::session::Session::initialize (5 samples, 0.40%)</title><rect x="75.0000%" y="549" width="0.3981%" height="15" fill="rgb(218,149,45)" fg:x="942" fg:w="5"/><text x="75.2500%" y="559.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="75.3185%" y="533" width="0.0796%" height="15" fill="rgb(247,194,10)" fg:x="946" fg:w="1"/><text x="75.5685%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="75.3185%" y="517" width="0.0796%" height="15" fill="rgb(234,33,37)" fg:x="946" fg:w="1"/><text x="75.5685%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.3185%" y="501" width="0.0796%" height="15" fill="rgb(218,61,13)" fg:x="946" fg:w="1"/><text x="75.5685%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="75.3185%" y="485" width="0.0796%" height="15" fill="rgb(210,80,52)" fg:x="946" fg:w="1"/><text x="75.5685%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3185%" y="469" width="0.0796%" height="15" fill="rgb(218,203,27)" fg:x="946" fg:w="1"/><text x="75.5685%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="75.3981%" y="581" width="0.0796%" height="15" fill="rgb(209,126,33)" fg:x="947" fg:w="1"/><text x="75.6481%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="75.3981%" y="565" width="0.0796%" height="15" fill="rgb(234,173,41)" fg:x="947" fg:w="1"/><text x="75.6481%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.3981%" y="549" width="0.0796%" height="15" fill="rgb(228,166,9)" fg:x="947" fg:w="1"/><text x="75.6481%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="75.4777%" y="501" width="0.0796%" height="15" fill="rgb(208,124,43)" fg:x="948" fg:w="1"/><text x="75.7277%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="75.4777%" y="533" width="0.1592%" height="15" fill="rgb(212,154,38)" fg:x="948" fg:w="2"/><text x="75.7277%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="75.4777%" y="517" width="0.1592%" height="15" fill="rgb(246,179,35)" fg:x="948" fg:w="2"/><text x="75.7277%" y="527.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="75.5573%" y="501" width="0.0796%" height="15" fill="rgb(251,3,50)" fg:x="949" fg:w="1"/><text x="75.8073%" y="511.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="75.5573%" y="485" width="0.0796%" height="15" fill="rgb(219,96,8)" fg:x="949" fg:w="1"/><text x="75.8073%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="75.6369%" y="469" width="0.1592%" height="15" fill="rgb(251,216,33)" fg:x="950" fg:w="2"/><text x="75.8869%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="75.6369%" y="453" width="0.1592%" height="15" fill="rgb(243,145,29)" fg:x="950" fg:w="2"/><text x="75.8869%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.6369%" y="437" width="0.1592%" height="15" fill="rgb(210,75,20)" fg:x="950" fg:w="2"/><text x="75.8869%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.7166%" y="421" width="0.0796%" height="15" fill="rgb(235,56,8)" fg:x="951" fg:w="1"/><text x="75.9666%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.7166%" y="405" width="0.0796%" height="15" fill="rgb(226,175,49)" fg:x="951" fg:w="1"/><text x="75.9666%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.7962%" y="453" width="0.0796%" height="15" fill="rgb(242,204,23)" fg:x="952" fg:w="1"/><text x="76.0462%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="75.8758%" y="453" width="0.1592%" height="15" fill="rgb(225,104,24)" fg:x="953" fg:w="2"/><text x="76.1258%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.9554%" y="437" width="0.0796%" height="15" fill="rgb(253,34,1)" fg:x="954" fg:w="1"/><text x="76.2054%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="76.0350%" y="437" width="0.1592%" height="15" fill="rgb(233,199,23)" fg:x="955" fg:w="2"/><text x="76.2850%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.0350%" y="421" width="0.1592%" height="15" fill="rgb(247,7,51)" fg:x="955" fg:w="2"/><text x="76.2850%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="76.0350%" y="405" width="0.1592%" height="15" fill="rgb(214,146,12)" fg:x="955" fg:w="2"/><text x="76.2850%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.1146%" y="389" width="0.0796%" height="15" fill="rgb(234,181,43)" fg:x="956" fg:w="1"/><text x="76.3646%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.1146%" y="373" width="0.0796%" height="15" fill="rgb(239,148,6)" fg:x="956" fg:w="1"/><text x="76.3646%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.1146%" y="357" width="0.0796%" height="15" fill="rgb(206,151,17)" fg:x="956" fg:w="1"/><text x="76.3646%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.1146%" y="341" width="0.0796%" height="15" fill="rgb(213,215,10)" fg:x="956" fg:w="1"/><text x="76.3646%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.1943%" y="405" width="0.0796%" height="15" fill="rgb(215,220,44)" fg:x="957" fg:w="1"/><text x="76.4443%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.1943%" y="389" width="0.0796%" height="15" fill="rgb(245,205,37)" fg:x="957" fg:w="1"/><text x="76.4443%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.1943%" y="373" width="0.0796%" height="15" fill="rgb(245,130,43)" fg:x="957" fg:w="1"/><text x="76.4443%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.1943%" y="357" width="0.0796%" height="15" fill="rgb(231,227,38)" fg:x="957" fg:w="1"/><text x="76.4443%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="76.2739%" y="405" width="0.0796%" height="15" fill="rgb(233,185,4)" fg:x="958" fg:w="1"/><text x="76.5239%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.2739%" y="389" width="0.0796%" height="15" fill="rgb(224,154,43)" fg:x="958" fg:w="1"/><text x="76.5239%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.2739%" y="373" width="0.0796%" height="15" fill="rgb(235,156,15)" fg:x="958" fg:w="1"/><text x="76.5239%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.2739%" y="357" width="0.0796%" height="15" fill="rgb(211,55,43)" fg:x="958" fg:w="1"/><text x="76.5239%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.2739%" y="341" width="0.0796%" height="15" fill="rgb(247,149,40)" fg:x="958" fg:w="1"/><text x="76.5239%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="76.1943%" y="437" width="0.2389%" height="15" fill="rgb(232,171,16)" fg:x="957" fg:w="3"/><text x="76.4443%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="76.1943%" y="421" width="0.2389%" height="15" fill="rgb(215,117,49)" fg:x="957" fg:w="3"/><text x="76.4443%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.3535%" y="405" width="0.0796%" height="15" fill="rgb(246,194,11)" fg:x="959" fg:w="1"/><text x="76.6035%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.3535%" y="389" width="0.0796%" height="15" fill="rgb(242,101,44)" fg:x="959" fg:w="1"/><text x="76.6035%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.88%)</title><rect x="75.6369%" y="485" width="0.8758%" height="15" fill="rgb(226,174,6)" fg:x="950" fg:w="11"/><text x="75.8869%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="75.7962%" y="469" width="0.7166%" height="15" fill="rgb(213,150,20)" fg:x="952" fg:w="9"/><text x="76.0462%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="76.0350%" y="453" width="0.4777%" height="15" fill="rgb(222,124,42)" fg:x="955" fg:w="6"/><text x="76.2850%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.4331%" y="437" width="0.0796%" height="15" fill="rgb(250,19,47)" fg:x="960" fg:w="1"/><text x="76.6831%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.4331%" y="421" width="0.0796%" height="15" fill="rgb(241,217,19)" fg:x="960" fg:w="1"/><text x="76.6831%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.5127%" y="453" width="0.0796%" height="15" fill="rgb(207,210,34)" fg:x="961" fg:w="1"/><text x="76.7627%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.5924%" y="453" width="0.0796%" height="15" fill="rgb(244,45,4)" fg:x="962" fg:w="1"/><text x="76.8424%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6720%" y="405" width="0.0796%" height="15" fill="rgb(252,134,50)" fg:x="963" fg:w="1"/><text x="76.9220%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="76.5127%" y="485" width="0.3185%" height="15" fill="rgb(238,74,2)" fg:x="961" fg:w="4"/><text x="76.7627%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="76.5127%" y="469" width="0.3185%" height="15" fill="rgb(226,58,46)" fg:x="961" fg:w="4"/><text x="76.7627%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.6720%" y="453" width="0.1592%" height="15" fill="rgb(232,83,35)" fg:x="963" fg:w="2"/><text x="76.9220%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.6720%" y="437" width="0.1592%" height="15" fill="rgb(212,148,47)" fg:x="963" fg:w="2"/><text x="76.9220%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.6720%" y="421" width="0.1592%" height="15" fill="rgb(235,29,1)" fg:x="963" fg:w="2"/><text x="76.9220%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.7516%" y="405" width="0.0796%" height="15" fill="rgb(247,55,37)" fg:x="964" fg:w="1"/><text x="77.0016%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7516%" y="389" width="0.0796%" height="15" fill="rgb(222,48,3)" fg:x="964" fg:w="1"/><text x="77.0016%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="76.8312%" y="469" width="0.0796%" height="15" fill="rgb(234,21,33)" fg:x="965" fg:w="1"/><text x="77.0812%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="76.8312%" y="453" width="0.0796%" height="15" fill="rgb(247,178,53)" fg:x="965" fg:w="1"/><text x="77.0812%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="76.9108%" y="437" width="0.0796%" height="15" fill="rgb(225,75,7)" fg:x="966" fg:w="1"/><text x="77.1608%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="76.9108%" y="421" width="0.0796%" height="15" fill="rgb(219,199,7)" fg:x="966" fg:w="1"/><text x="77.1608%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0701%" y="389" width="0.0796%" height="15" fill="rgb(209,93,42)" fg:x="968" fg:w="1"/><text x="77.3201%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0701%" y="373" width="0.0796%" height="15" fill="rgb(240,175,17)" fg:x="968" fg:w="1"/><text x="77.3201%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.1497%" y="389" width="0.0796%" height="15" fill="rgb(232,106,7)" fg:x="969" fg:w="1"/><text x="77.3997%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="77.1497%" y="373" width="0.0796%" height="15" fill="rgb(242,106,43)" fg:x="969" fg:w="1"/><text x="77.3997%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.1497%" y="357" width="0.0796%" height="15" fill="rgb(242,61,37)" fg:x="969" fg:w="1"/><text x="77.3997%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="77.3089%" y="357" width="0.2389%" height="15" fill="rgb(205,72,10)" fg:x="971" fg:w="3"/><text x="77.5589%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="77.3089%" y="341" width="0.2389%" height="15" fill="rgb(214,184,36)" fg:x="971" fg:w="3"/><text x="77.5589%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="77.3885%" y="325" width="0.1592%" height="15" fill="rgb(206,107,18)" fg:x="972" fg:w="2"/><text x="77.6385%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="77.3089%" y="373" width="0.3981%" height="15" fill="rgb(210,75,5)" fg:x="971" fg:w="5"/><text x="77.5589%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="77.5478%" y="357" width="0.1592%" height="15" fill="rgb(205,3,19)" fg:x="974" fg:w="2"/><text x="77.7978%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="77.6274%" y="341" width="0.0796%" height="15" fill="rgb(207,181,42)" fg:x="975" fg:w="1"/><text x="77.8774%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="77.6274%" y="325" width="0.0796%" height="15" fill="rgb(229,179,43)" fg:x="975" fg:w="1"/><text x="77.8774%" y="335.50"></text></g><g><title>engine::session::Session::flush (29 samples, 2.31%)</title><rect x="75.4777%" y="581" width="2.3089%" height="15" fill="rgb(246,95,30)" fg:x="948" fg:w="29"/><text x="75.7277%" y="591.50">e..</text></g><g><title>engine::session::state::State::close (29 samples, 2.31%)</title><rect x="75.4777%" y="565" width="2.3089%" height="15" fill="rgb(234,144,45)" fg:x="948" fg:w="29"/><text x="75.7277%" y="575.50">e..</text></g><g><title>engine::session::state::State::flush_entities (29 samples, 2.31%)</title><rect x="75.4777%" y="549" width="2.3089%" height="15" fill="rgb(250,54,25)" fg:x="948" fg:w="29"/><text x="75.7277%" y="559.50">e..</text></g><g><title>core::iter::adapters::try_process (27 samples, 2.15%)</title><rect x="75.6369%" y="533" width="2.1497%" height="15" fill="rgb(215,195,40)" fg:x="950" fg:w="27"/><text x="75.8869%" y="543.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 2.15%)</title><rect x="75.6369%" y="517" width="2.1497%" height="15" fill="rgb(233,188,42)" fg:x="950" fg:w="27"/><text x="75.8869%" y="527.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (27 samples, 2.15%)</title><rect x="75.6369%" y="501" width="2.1497%" height="15" fill="rgb(247,227,35)" fg:x="950" fg:w="27"/><text x="75.8869%" y="511.50">e..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.96%)</title><rect x="76.8312%" y="485" width="0.9554%" height="15" fill="rgb(249,124,27)" fg:x="965" fg:w="12"/><text x="77.0812%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="76.9108%" y="469" width="0.8758%" height="15" fill="rgb(219,207,25)" fg:x="966" fg:w="11"/><text x="77.1608%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="76.9108%" y="453" width="0.8758%" height="15" fill="rgb(241,216,47)" fg:x="966" fg:w="11"/><text x="77.1608%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="76.9904%" y="437" width="0.7962%" height="15" fill="rgb(233,82,50)" fg:x="967" fg:w="10"/><text x="77.2404%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="76.9904%" y="421" width="0.7962%" height="15" fill="rgb(232,63,2)" fg:x="967" fg:w="10"/><text x="77.2404%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="77.0701%" y="405" width="0.7166%" height="15" fill="rgb(236,184,28)" fg:x="968" fg:w="9"/><text x="77.3201%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="77.2293%" y="389" width="0.5573%" height="15" fill="rgb(254,63,27)" fg:x="970" fg:w="7"/><text x="77.4793%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7070%" y="373" width="0.0796%" height="15" fill="rgb(253,106,28)" fg:x="976" fg:w="1"/><text x="77.9570%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.7866%" y="533" width="0.0796%" height="15" fill="rgb(225,141,39)" fg:x="977" fg:w="1"/><text x="78.0366%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.7866%" y="517" width="0.0796%" height="15" fill="rgb(222,157,20)" fg:x="977" fg:w="1"/><text x="78.0366%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7866%" y="501" width="0.0796%" height="15" fill="rgb(210,190,9)" fg:x="977" fg:w="1"/><text x="78.0366%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7866%" y="485" width="0.0796%" height="15" fill="rgb(242,167,7)" fg:x="977" fg:w="1"/><text x="78.0366%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.7866%" y="469" width="0.0796%" height="15" fill="rgb(227,82,41)" fg:x="977" fg:w="1"/><text x="78.0366%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7866%" y="453" width="0.0796%" height="15" fill="rgb(222,131,13)" fg:x="977" fg:w="1"/><text x="78.0366%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.7866%" y="437" width="0.0796%" height="15" fill="rgb(221,98,26)" fg:x="977" fg:w="1"/><text x="78.0366%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="77.8662%" y="533" width="0.1592%" height="15" fill="rgb(251,63,52)" fg:x="978" fg:w="2"/><text x="78.1162%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="77.8662%" y="517" width="0.1592%" height="15" fill="rgb(246,25,43)" fg:x="978" fg:w="2"/><text x="78.1162%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="77.8662%" y="501" width="0.1592%" height="15" fill="rgb(247,167,15)" fg:x="978" fg:w="2"/><text x="78.1162%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="77.8662%" y="485" width="0.1592%" height="15" fill="rgb(240,104,42)" fg:x="978" fg:w="2"/><text x="78.1162%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="77.8662%" y="469" width="0.1592%" height="15" fill="rgb(224,54,6)" fg:x="978" fg:w="2"/><text x="78.1162%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.9459%" y="453" width="0.0796%" height="15" fill="rgb(244,108,35)" fg:x="979" fg:w="1"/><text x="78.1959%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="77.7866%" y="549" width="0.3981%" height="15" fill="rgb(216,154,2)" fg:x="977" fg:w="5"/><text x="78.0366%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="78.0255%" y="533" width="0.1592%" height="15" fill="rgb(222,8,47)" fg:x="980" fg:w="2"/><text x="78.2755%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="78.0255%" y="517" width="0.1592%" height="15" fill="rgb(252,93,1)" fg:x="980" fg:w="2"/><text x="78.2755%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.0255%" y="501" width="0.1592%" height="15" fill="rgb(223,226,51)" fg:x="980" fg:w="2"/><text x="78.2755%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.0255%" y="485" width="0.1592%" height="15" fill="rgb(206,147,9)" fg:x="980" fg:w="2"/><text x="78.2755%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.0255%" y="469" width="0.1592%" height="15" fill="rgb(248,180,41)" fg:x="980" fg:w="2"/><text x="78.2755%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.1051%" y="453" width="0.0796%" height="15" fill="rgb(209,47,50)" fg:x="981" fg:w="1"/><text x="78.3551%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="77.7866%" y="565" width="0.4777%" height="15" fill="rgb(243,65,31)" fg:x="977" fg:w="6"/><text x="78.0366%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.1847%" y="549" width="0.0796%" height="15" fill="rgb(228,128,1)" fg:x="982" fg:w="1"/><text x="78.4347%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.1847%" y="533" width="0.0796%" height="15" fill="rgb(231,192,16)" fg:x="982" fg:w="1"/><text x="78.4347%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.1847%" y="517" width="0.0796%" height="15" fill="rgb(224,26,40)" fg:x="982" fg:w="1"/><text x="78.4347%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.1847%" y="501" width="0.0796%" height="15" fill="rgb(214,192,17)" fg:x="982" fg:w="1"/><text x="78.4347%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="78.2643%" y="549" width="0.0796%" height="15" fill="rgb(225,147,18)" fg:x="983" fg:w="1"/><text x="78.5143%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="78.2643%" y="533" width="0.0796%" height="15" fill="rgb(205,35,11)" fg:x="983" fg:w="1"/><text x="78.5143%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.2643%" y="517" width="0.0796%" height="15" fill="rgb(242,40,42)" fg:x="983" fg:w="1"/><text x="78.5143%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.2643%" y="501" width="0.0796%" height="15" fill="rgb(250,170,13)" fg:x="983" fg:w="1"/><text x="78.5143%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2643%" y="485" width="0.0796%" height="15" fill="rgb(240,161,28)" fg:x="983" fg:w="1"/><text x="78.5143%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2643%" y="469" width="0.0796%" height="15" fill="rgb(245,179,12)" fg:x="983" fg:w="1"/><text x="78.5143%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.2643%" y="453" width="0.0796%" height="15" fill="rgb(250,92,32)" fg:x="983" fg:w="1"/><text x="78.5143%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2643%" y="437" width="0.0796%" height="15" fill="rgb(233,10,40)" fg:x="983" fg:w="1"/><text x="78.5143%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="78.2643%" y="421" width="0.0796%" height="15" fill="rgb(217,98,1)" fg:x="983" fg:w="1"/><text x="78.5143%" y="431.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.72%)</title><rect x="77.7866%" y="581" width="0.7166%" height="15" fill="rgb(238,202,7)" fg:x="977" fg:w="9"/><text x="78.0366%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="78.2643%" y="565" width="0.2389%" height="15" fill="rgb(222,91,3)" fg:x="983" fg:w="3"/><text x="78.5143%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="78.3439%" y="549" width="0.1592%" height="15" fill="rgb(211,170,49)" fg:x="984" fg:w="2"/><text x="78.5939%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="78.3439%" y="533" width="0.1592%" height="15" fill="rgb(253,139,18)" fg:x="984" fg:w="2"/><text x="78.5939%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="78.3439%" y="517" width="0.1592%" height="15" fill="rgb(222,4,43)" fg:x="984" fg:w="2"/><text x="78.5939%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="78.3439%" y="501" width="0.1592%" height="15" fill="rgb(207,205,12)" fg:x="984" fg:w="2"/><text x="78.5939%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.3439%" y="485" width="0.1592%" height="15" fill="rgb(216,159,46)" fg:x="984" fg:w="2"/><text x="78.5939%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="78.3439%" y="469" width="0.1592%" height="15" fill="rgb(236,115,1)" fg:x="984" fg:w="2"/><text x="78.5939%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.3439%" y="453" width="0.1592%" height="15" fill="rgb(251,35,33)" fg:x="984" fg:w="2"/><text x="78.5939%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.4236%" y="437" width="0.0796%" height="15" fill="rgb(248,62,51)" fg:x="985" fg:w="1"/><text x="78.6736%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.5032%" y="549" width="0.0796%" height="15" fill="rgb(254,180,19)" fg:x="986" fg:w="1"/><text x="78.7532%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.5032%" y="533" width="0.0796%" height="15" fill="rgb(217,100,32)" fg:x="986" fg:w="1"/><text x="78.7532%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.5032%" y="517" width="0.0796%" height="15" fill="rgb(224,71,22)" fg:x="986" fg:w="1"/><text x="78.7532%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.5032%" y="501" width="0.0796%" height="15" fill="rgb(251,185,33)" fg:x="986" fg:w="1"/><text x="78.7532%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="78.5828%" y="549" width="0.0796%" height="15" fill="rgb(209,75,48)" fg:x="987" fg:w="1"/><text x="78.8328%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.5828%" y="533" width="0.0796%" height="15" fill="rgb(253,190,16)" fg:x="987" fg:w="1"/><text x="78.8328%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="78.5828%" y="517" width="0.0796%" height="15" fill="rgb(226,140,1)" fg:x="987" fg:w="1"/><text x="78.8328%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.5828%" y="501" width="0.0796%" height="15" fill="rgb(206,75,30)" fg:x="987" fg:w="1"/><text x="78.8328%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.5828%" y="485" width="0.0796%" height="15" fill="rgb(231,208,37)" fg:x="987" fg:w="1"/><text x="78.8328%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.6624%" y="437" width="0.0796%" height="15" fill="rgb(238,136,40)" fg:x="988" fg:w="1"/><text x="78.9124%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.6624%" y="421" width="0.0796%" height="15" fill="rgb(247,137,17)" fg:x="988" fg:w="1"/><text x="78.9124%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.6624%" y="405" width="0.0796%" height="15" fill="rgb(240,60,40)" fg:x="988" fg:w="1"/><text x="78.9124%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.6624%" y="389" width="0.0796%" height="15" fill="rgb(236,68,50)" fg:x="988" fg:w="1"/><text x="78.9124%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.6624%" y="373" width="0.0796%" height="15" fill="rgb(230,42,12)" fg:x="988" fg:w="1"/><text x="78.9124%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.6624%" y="357" width="0.0796%" height="15" fill="rgb(219,16,16)" fg:x="988" fg:w="1"/><text x="78.9124%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.6624%" y="341" width="0.0796%" height="15" fill="rgb(220,38,35)" fg:x="988" fg:w="1"/><text x="78.9124%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.6624%" y="325" width="0.0796%" height="15" fill="rgb(228,33,1)" fg:x="988" fg:w="1"/><text x="78.9124%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.6624%" y="309" width="0.0796%" height="15" fill="rgb(241,46,31)" fg:x="988" fg:w="1"/><text x="78.9124%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.6624%" y="293" width="0.0796%" height="15" fill="rgb(232,58,20)" fg:x="988" fg:w="1"/><text x="78.9124%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.6624%" y="277" width="0.0796%" height="15" fill="rgb(206,228,53)" fg:x="988" fg:w="1"/><text x="78.9124%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.6624%" y="261" width="0.0796%" height="15" fill="rgb(206,88,33)" fg:x="988" fg:w="1"/><text x="78.9124%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.6624%" y="245" width="0.0796%" height="15" fill="rgb(238,69,7)" fg:x="988" fg:w="1"/><text x="78.9124%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.6624%" y="469" width="0.1592%" height="15" fill="rgb(250,21,46)" fg:x="988" fg:w="2"/><text x="78.9124%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.6624%" y="453" width="0.1592%" height="15" fill="rgb(215,212,21)" fg:x="988" fg:w="2"/><text x="78.9124%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.7420%" y="437" width="0.0796%" height="15" fill="rgb(211,35,12)" fg:x="989" fg:w="1"/><text x="78.9920%" y="447.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="78.6624%" y="501" width="0.2389%" height="15" fill="rgb(231,184,16)" fg:x="988" fg:w="3"/><text x="78.9124%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="78.6624%" y="485" width="0.2389%" height="15" fill="rgb(242,140,15)" fg:x="988" fg:w="3"/><text x="78.9124%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.8217%" y="469" width="0.0796%" height="15" fill="rgb(220,37,14)" fg:x="990" fg:w="1"/><text x="79.0717%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.8217%" y="453" width="0.0796%" height="15" fill="rgb(223,146,22)" fg:x="990" fg:w="1"/><text x="79.0717%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.8217%" y="437" width="0.0796%" height="15" fill="rgb(216,132,15)" fg:x="990" fg:w="1"/><text x="79.0717%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.8217%" y="421" width="0.0796%" height="15" fill="rgb(248,83,5)" fg:x="990" fg:w="1"/><text x="79.0717%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8217%" y="405" width="0.0796%" height="15" fill="rgb(231,206,48)" fg:x="990" fg:w="1"/><text x="79.0717%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="78.6624%" y="549" width="0.3185%" height="15" fill="rgb(253,185,37)" fg:x="988" fg:w="4"/><text x="78.9124%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="78.6624%" y="533" width="0.3185%" height="15" fill="rgb(208,21,44)" fg:x="988" fg:w="4"/><text x="78.9124%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="78.6624%" y="517" width="0.3185%" height="15" fill="rgb(236,125,4)" fg:x="988" fg:w="4"/><text x="78.9124%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.9013%" y="501" width="0.0796%" height="15" fill="rgb(226,134,25)" fg:x="991" fg:w="1"/><text x="79.1513%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9013%" y="485" width="0.0796%" height="15" fill="rgb(250,201,12)" fg:x="991" fg:w="1"/><text x="79.1513%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.9809%" y="549" width="0.0796%" height="15" fill="rgb(225,92,18)" fg:x="992" fg:w="1"/><text x="79.2309%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.9809%" y="533" width="0.0796%" height="15" fill="rgb(227,35,22)" fg:x="992" fg:w="1"/><text x="79.2309%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.9809%" y="517" width="0.0796%" height="15" fill="rgb(214,180,52)" fg:x="992" fg:w="1"/><text x="79.2309%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9809%" y="501" width="0.0796%" height="15" fill="rgb(233,55,38)" fg:x="992" fg:w="1"/><text x="79.2309%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="78.5032%" y="581" width="0.6369%" height="15" fill="rgb(249,171,43)" fg:x="986" fg:w="8"/><text x="78.7532%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="78.5032%" y="565" width="0.6369%" height="15" fill="rgb(239,87,2)" fg:x="986" fg:w="8"/><text x="78.7532%" y="575.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="79.0605%" y="549" width="0.0796%" height="15" fill="rgb(248,141,5)" fg:x="993" fg:w="1"/><text x="79.3105%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="79.0605%" y="533" width="0.0796%" height="15" fill="rgb(238,33,42)" fg:x="993" fg:w="1"/><text x="79.3105%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.0605%" y="517" width="0.0796%" height="15" fill="rgb(231,57,19)" fg:x="993" fg:w="1"/><text x="79.3105%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.0605%" y="501" width="0.0796%" height="15" fill="rgb(214,78,53)" fg:x="993" fg:w="1"/><text x="79.3105%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.0605%" y="485" width="0.0796%" height="15" fill="rgb(206,132,29)" fg:x="993" fg:w="1"/><text x="79.3105%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.0605%" y="469" width="0.0796%" height="15" fill="rgb(248,174,31)" fg:x="993" fg:w="1"/><text x="79.3105%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.0605%" y="453" width="0.0796%" height="15" fill="rgb(221,87,13)" fg:x="993" fg:w="1"/><text x="79.3105%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.0605%" y="437" width="0.0796%" height="15" fill="rgb(223,197,17)" fg:x="993" fg:w="1"/><text x="79.3105%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0605%" y="421" width="0.0796%" height="15" fill="rgb(220,144,50)" fg:x="993" fg:w="1"/><text x="79.3105%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0605%" y="405" width="0.0796%" height="15" fill="rgb(244,201,11)" fg:x="993" fg:w="1"/><text x="79.3105%" y="415.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="79.1401%" y="581" width="0.0796%" height="15" fill="rgb(249,81,34)" fg:x="994" fg:w="1"/><text x="79.3901%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="79.1401%" y="565" width="0.0796%" height="15" fill="rgb(205,161,12)" fg:x="994" fg:w="1"/><text x="79.3901%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.1401%" y="549" width="0.0796%" height="15" fill="rgb(252,139,50)" fg:x="994" fg:w="1"/><text x="79.3901%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.1401%" y="533" width="0.0796%" height="15" fill="rgb(205,169,14)" fg:x="994" fg:w="1"/><text x="79.3901%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1401%" y="517" width="0.0796%" height="15" fill="rgb(248,198,33)" fg:x="994" fg:w="1"/><text x="79.3901%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.1401%" y="501" width="0.0796%" height="15" fill="rgb(236,23,21)" fg:x="994" fg:w="1"/><text x="79.3901%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1401%" y="485" width="0.0796%" height="15" fill="rgb(231,13,38)" fg:x="994" fg:w="1"/><text x="79.3901%" y="495.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="79.1401%" y="469" width="0.0796%" height="15" fill="rgb(239,139,21)" fg:x="994" fg:w="1"/><text x="79.3901%" y="479.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="79.2197%" y="549" width="0.0796%" height="15" fill="rgb(222,164,45)" fg:x="995" fg:w="1"/><text x="79.4697%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.2197%" y="533" width="0.0796%" height="15" fill="rgb(230,52,27)" fg:x="995" fg:w="1"/><text x="79.4697%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.2197%" y="517" width="0.0796%" height="15" fill="rgb(227,143,42)" fg:x="995" fg:w="1"/><text x="79.4697%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="79.2197%" y="565" width="0.1592%" height="15" fill="rgb(249,127,1)" fg:x="995" fg:w="2"/><text x="79.4697%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="79.2994%" y="549" width="0.0796%" height="15" fill="rgb(243,107,26)" fg:x="996" fg:w="1"/><text x="79.5494%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.2994%" y="533" width="0.0796%" height="15" fill="rgb(225,7,45)" fg:x="996" fg:w="1"/><text x="79.5494%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="79.2994%" y="517" width="0.0796%" height="15" fill="rgb(241,88,38)" fg:x="996" fg:w="1"/><text x="79.5494%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.2994%" y="501" width="0.0796%" height="15" fill="rgb(226,121,9)" fg:x="996" fg:w="1"/><text x="79.5494%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.2994%" y="485" width="0.0796%" height="15" fill="rgb(253,60,29)" fg:x="996" fg:w="1"/><text x="79.5494%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="79.2994%" y="469" width="0.0796%" height="15" fill="rgb(244,181,39)" fg:x="996" fg:w="1"/><text x="79.5494%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.2994%" y="453" width="0.0796%" height="15" fill="rgb(252,203,31)" fg:x="996" fg:w="1"/><text x="79.5494%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3790%" y="533" width="0.0796%" height="15" fill="rgb(224,120,8)" fg:x="997" fg:w="1"/><text x="79.6290%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.4586%" y="469" width="0.0796%" height="15" fill="rgb(205,171,54)" fg:x="998" fg:w="1"/><text x="79.7086%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.4586%" y="453" width="0.0796%" height="15" fill="rgb(235,89,11)" fg:x="998" fg:w="1"/><text x="79.7086%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.4586%" y="437" width="0.0796%" height="15" fill="rgb(212,180,28)" fg:x="998" fg:w="1"/><text x="79.7086%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.4586%" y="421" width="0.0796%" height="15" fill="rgb(247,84,49)" fg:x="998" fg:w="1"/><text x="79.7086%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.4586%" y="405" width="0.0796%" height="15" fill="rgb(236,187,52)" fg:x="998" fg:w="1"/><text x="79.7086%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.4586%" y="389" width="0.0796%" height="15" fill="rgb(227,24,15)" fg:x="998" fg:w="1"/><text x="79.7086%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.4586%" y="373" width="0.0796%" height="15" fill="rgb(227,211,13)" fg:x="998" fg:w="1"/><text x="79.7086%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.4586%" y="357" width="0.0796%" height="15" fill="rgb(245,52,14)" fg:x="998" fg:w="1"/><text x="79.7086%" y="367.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="79.5382%" y="469" width="0.0796%" height="15" fill="rgb(225,185,13)" fg:x="999" fg:w="1"/><text x="79.7882%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.5382%" y="453" width="0.0796%" height="15" fill="rgb(217,160,29)" fg:x="999" fg:w="1"/><text x="79.7882%" y="463.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5382%" y="437" width="0.0796%" height="15" fill="rgb(216,115,53)" fg:x="999" fg:w="1"/><text x="79.7882%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.5382%" y="421" width="0.0796%" height="15" fill="rgb(236,99,5)" fg:x="999" fg:w="1"/><text x="79.7882%" y="431.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="79.5382%" y="405" width="0.0796%" height="15" fill="rgb(222,60,38)" fg:x="999" fg:w="1"/><text x="79.7882%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.5382%" y="389" width="0.0796%" height="15" fill="rgb(212,82,22)" fg:x="999" fg:w="1"/><text x="79.7882%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.5382%" y="373" width="0.0796%" height="15" fill="rgb(214,48,28)" fg:x="999" fg:w="1"/><text x="79.7882%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.6178%" y="405" width="0.0796%" height="15" fill="rgb(245,196,50)" fg:x="1000" fg:w="1"/><text x="79.8678%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.6178%" y="389" width="0.0796%" height="15" fill="rgb(225,159,46)" fg:x="1000" fg:w="1"/><text x="79.8678%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.6178%" y="373" width="0.0796%" height="15" fill="rgb(207,195,48)" fg:x="1000" fg:w="1"/><text x="79.8678%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="79.6178%" y="453" width="0.1592%" height="15" fill="rgb(240,73,3)" fg:x="1000" fg:w="2"/><text x="79.8678%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="79.6178%" y="437" width="0.1592%" height="15" fill="rgb(245,57,23)" fg:x="1000" fg:w="2"/><text x="79.8678%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.6178%" y="421" width="0.1592%" height="15" fill="rgb(240,75,18)" fg:x="1000" fg:w="2"/><text x="79.8678%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.6975%" y="405" width="0.0796%" height="15" fill="rgb(238,168,12)" fg:x="1001" fg:w="1"/><text x="79.9475%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.6975%" y="389" width="0.0796%" height="15" fill="rgb(226,20,40)" fg:x="1001" fg:w="1"/><text x="79.9475%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.6975%" y="373" width="0.0796%" height="15" fill="rgb(224,130,35)" fg:x="1001" fg:w="1"/><text x="79.9475%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.6975%" y="357" width="0.0796%" height="15" fill="rgb(225,63,41)" fg:x="1001" fg:w="1"/><text x="79.9475%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.6975%" y="341" width="0.0796%" height="15" fill="rgb(219,3,3)" fg:x="1001" fg:w="1"/><text x="79.9475%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.6975%" y="325" width="0.0796%" height="15" fill="rgb(218,157,4)" fg:x="1001" fg:w="1"/><text x="79.9475%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.7771%" y="421" width="0.0796%" height="15" fill="rgb(232,76,36)" fg:x="1002" fg:w="1"/><text x="80.0271%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="79.6178%" y="469" width="0.3185%" height="15" fill="rgb(247,36,0)" fg:x="1000" fg:w="4"/><text x="79.8678%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="79.7771%" y="453" width="0.1592%" height="15" fill="rgb(205,2,34)" fg:x="1002" fg:w="2"/><text x="80.0271%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="79.7771%" y="437" width="0.1592%" height="15" fill="rgb(239,136,13)" fg:x="1002" fg:w="2"/><text x="80.0271%" y="447.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="79.8567%" y="421" width="0.0796%" height="15" fill="rgb(253,122,12)" fg:x="1003" fg:w="1"/><text x="80.1067%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.8567%" y="405" width="0.0796%" height="15" fill="rgb(222,174,7)" fg:x="1003" fg:w="1"/><text x="80.1067%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.8567%" y="389" width="0.0796%" height="15" fill="rgb(208,191,42)" fg:x="1003" fg:w="1"/><text x="80.1067%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9363%" y="437" width="0.0796%" height="15" fill="rgb(237,212,15)" fg:x="1004" fg:w="1"/><text x="80.1863%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="79.4586%" y="485" width="0.6369%" height="15" fill="rgb(215,65,20)" fg:x="998" fg:w="8"/><text x="79.7086%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="79.9363%" y="469" width="0.1592%" height="15" fill="rgb(232,103,11)" fg:x="1004" fg:w="2"/><text x="80.1863%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="79.9363%" y="453" width="0.1592%" height="15" fill="rgb(235,148,18)" fg:x="1004" fg:w="2"/><text x="80.1863%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.0159%" y="437" width="0.0796%" height="15" fill="rgb(240,173,7)" fg:x="1005" fg:w="1"/><text x="80.2659%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0159%" y="421" width="0.0796%" height="15" fill="rgb(228,182,25)" fg:x="1005" fg:w="1"/><text x="80.2659%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0159%" y="405" width="0.0796%" height="15" fill="rgb(247,3,52)" fg:x="1005" fg:w="1"/><text x="80.2659%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0159%" y="389" width="0.0796%" height="15" fill="rgb(226,155,8)" fg:x="1005" fg:w="1"/><text x="80.2659%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.0159%" y="373" width="0.0796%" height="15" fill="rgb(243,195,38)" fg:x="1005" fg:w="1"/><text x="80.2659%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="79.4586%" y="501" width="0.7166%" height="15" fill="rgb(254,181,33)" fg:x="998" fg:w="9"/><text x="79.7086%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.0955%" y="485" width="0.0796%" height="15" fill="rgb(232,98,23)" fg:x="1006" fg:w="1"/><text x="80.3455%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.0955%" y="469" width="0.0796%" height="15" fill="rgb(205,23,10)" fg:x="1006" fg:w="1"/><text x="80.3455%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.0955%" y="453" width="0.0796%" height="15" fill="rgb(212,124,38)" fg:x="1006" fg:w="1"/><text x="80.3455%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0955%" y="437" width="0.0796%" height="15" fill="rgb(228,207,2)" fg:x="1006" fg:w="1"/><text x="80.3455%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.88%)</title><rect x="79.3790%" y="565" width="0.8758%" height="15" fill="rgb(215,120,22)" fg:x="997" fg:w="11"/><text x="79.6290%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="79.3790%" y="549" width="0.8758%" height="15" fill="rgb(251,172,33)" fg:x="997" fg:w="11"/><text x="79.6290%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.80%)</title><rect x="79.4586%" y="533" width="0.7962%" height="15" fill="rgb(250,83,2)" fg:x="998" fg:w="10"/><text x="79.7086%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (10 samples, 0.80%)</title><rect x="79.4586%" y="517" width="0.7962%" height="15" fill="rgb(210,132,53)" fg:x="998" fg:w="10"/><text x="79.7086%" y="527.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="80.1752%" y="501" width="0.0796%" height="15" fill="rgb(221,208,36)" fg:x="1007" fg:w="1"/><text x="80.4252%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="80.1752%" y="485" width="0.0796%" height="15" fill="rgb(205,192,46)" fg:x="1007" fg:w="1"/><text x="80.4252%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="80.1752%" y="469" width="0.0796%" height="15" fill="rgb(223,163,14)" fg:x="1007" fg:w="1"/><text x="80.4252%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.1752%" y="453" width="0.0796%" height="15" fill="rgb(218,41,28)" fg:x="1007" fg:w="1"/><text x="80.4252%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.1752%" y="437" width="0.0796%" height="15" fill="rgb(235,104,10)" fg:x="1007" fg:w="1"/><text x="80.4252%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.1752%" y="421" width="0.0796%" height="15" fill="rgb(246,17,4)" fg:x="1007" fg:w="1"/><text x="80.4252%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.1752%" y="405" width="0.0796%" height="15" fill="rgb(240,7,16)" fg:x="1007" fg:w="1"/><text x="80.4252%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="80.2548%" y="549" width="0.1592%" height="15" fill="rgb(213,160,23)" fg:x="1008" fg:w="2"/><text x="80.5048%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.2548%" y="533" width="0.1592%" height="15" fill="rgb(251,179,49)" fg:x="1008" fg:w="2"/><text x="80.5048%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.2548%" y="517" width="0.1592%" height="15" fill="rgb(247,198,10)" fg:x="1008" fg:w="2"/><text x="80.5048%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="80.3344%" y="501" width="0.0796%" height="15" fill="rgb(220,65,29)" fg:x="1009" fg:w="1"/><text x="80.5844%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="80.3344%" y="485" width="0.0796%" height="15" fill="rgb(237,171,28)" fg:x="1009" fg:w="1"/><text x="80.5844%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="80.3344%" y="469" width="0.0796%" height="15" fill="rgb(228,44,26)" fg:x="1009" fg:w="1"/><text x="80.5844%" y="479.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="80.4936%" y="533" width="0.0796%" height="15" fill="rgb(216,210,27)" fg:x="1011" fg:w="1"/><text x="80.7436%" y="543.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="80.4936%" y="517" width="0.0796%" height="15" fill="rgb(252,10,17)" fg:x="1011" fg:w="1"/><text x="80.7436%" y="527.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="80.4936%" y="501" width="0.0796%" height="15" fill="rgb(214,172,30)" fg:x="1011" fg:w="1"/><text x="80.7436%" y="511.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="80.4936%" y="485" width="0.0796%" height="15" fill="rgb(253,130,48)" fg:x="1011" fg:w="1"/><text x="80.7436%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="80.4936%" y="469" width="0.0796%" height="15" fill="rgb(226,99,43)" fg:x="1011" fg:w="1"/><text x="80.7436%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="80.4936%" y="453" width="0.0796%" height="15" fill="rgb(239,111,26)" fg:x="1011" fg:w="1"/><text x="80.7436%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="80.4936%" y="437" width="0.0796%" height="15" fill="rgb(240,27,53)" fg:x="1011" fg:w="1"/><text x="80.7436%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;()&gt;&gt; (1 samples, 0.08%)</title><rect x="80.4936%" y="421" width="0.0796%" height="15" fill="rgb(254,163,12)" fg:x="1011" fg:w="1"/><text x="80.7436%" y="431.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="80.4936%" y="405" width="0.0796%" height="15" fill="rgb(225,51,48)" fg:x="1011" fg:w="1"/><text x="80.7436%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (1 samples, 0.08%)</title><rect x="80.4936%" y="389" width="0.0796%" height="15" fill="rgb(205,19,32)" fg:x="1011" fg:w="1"/><text x="80.7436%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.08%)</title><rect x="80.4936%" y="373" width="0.0796%" height="15" fill="rgb(218,119,26)" fg:x="1011" fg:w="1"/><text x="80.7436%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.08%)</title><rect x="80.4936%" y="357" width="0.0796%" height="15" fill="rgb(231,173,33)" fg:x="1011" fg:w="1"/><text x="80.7436%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.5732%" y="421" width="0.0796%" height="15" fill="rgb(241,100,29)" fg:x="1012" fg:w="1"/><text x="80.8232%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.5732%" y="405" width="0.0796%" height="15" fill="rgb(250,194,34)" fg:x="1012" fg:w="1"/><text x="80.8232%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="80.5732%" y="437" width="0.1592%" height="15" fill="rgb(215,23,50)" fg:x="1012" fg:w="2"/><text x="80.8232%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.6529%" y="421" width="0.0796%" height="15" fill="rgb(206,49,37)" fg:x="1013" fg:w="1"/><text x="80.9029%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.8121%" y="405" width="0.0796%" height="15" fill="rgb(247,39,21)" fg:x="1015" fg:w="1"/><text x="81.0621%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8121%" y="389" width="0.0796%" height="15" fill="rgb(209,220,15)" fg:x="1015" fg:w="1"/><text x="81.0621%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8121%" y="373" width="0.0796%" height="15" fill="rgb(206,41,33)" fg:x="1015" fg:w="1"/><text x="81.0621%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.9713%" y="373" width="0.0796%" height="15" fill="rgb(221,225,45)" fg:x="1017" fg:w="1"/><text x="81.2213%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9713%" y="357" width="0.0796%" height="15" fill="rgb(216,27,18)" fg:x="1017" fg:w="1"/><text x="81.2213%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0510%" y="373" width="0.0796%" height="15" fill="rgb(250,193,34)" fg:x="1018" fg:w="1"/><text x="81.3010%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0510%" y="357" width="0.0796%" height="15" fill="rgb(227,215,20)" fg:x="1018" fg:w="1"/><text x="81.3010%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.0510%" y="341" width="0.0796%" height="15" fill="rgb(242,211,27)" fg:x="1018" fg:w="1"/><text x="81.3010%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.0510%" y="325" width="0.0796%" height="15" fill="rgb(229,190,30)" fg:x="1018" fg:w="1"/><text x="81.3010%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.0510%" y="309" width="0.0796%" height="15" fill="rgb(253,31,29)" fg:x="1018" fg:w="1"/><text x="81.3010%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.0510%" y="293" width="0.0796%" height="15" fill="rgb(229,177,52)" fg:x="1018" fg:w="1"/><text x="81.3010%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.0510%" y="277" width="0.0796%" height="15" fill="rgb(226,88,8)" fg:x="1018" fg:w="1"/><text x="81.3010%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="80.8917%" y="389" width="0.3185%" height="15" fill="rgb(214,55,27)" fg:x="1016" fg:w="4"/><text x="81.1417%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.1306%" y="373" width="0.0796%" height="15" fill="rgb(233,202,5)" fg:x="1019" fg:w="1"/><text x="81.3806%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.1306%" y="357" width="0.0796%" height="15" fill="rgb(251,49,30)" fg:x="1019" fg:w="1"/><text x="81.3806%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.1306%" y="341" width="0.0796%" height="15" fill="rgb(235,18,52)" fg:x="1019" fg:w="1"/><text x="81.3806%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="80.8917%" y="405" width="0.4777%" height="15" fill="rgb(250,111,51)" fg:x="1016" fg:w="6"/><text x="81.1417%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.2102%" y="389" width="0.1592%" height="15" fill="rgb(218,13,25)" fg:x="1020" fg:w="2"/><text x="81.4602%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="80.7325%" y="421" width="0.7166%" height="15" fill="rgb(248,96,7)" fg:x="1014" fg:w="9"/><text x="80.9825%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.3694%" y="405" width="0.0796%" height="15" fill="rgb(217,31,15)" fg:x="1022" fg:w="1"/><text x="81.6194%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.3694%" y="389" width="0.0796%" height="15" fill="rgb(228,59,49)" fg:x="1022" fg:w="1"/><text x="81.6194%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="81.3694%" y="373" width="0.0796%" height="15" fill="rgb(210,152,38)" fg:x="1022" fg:w="1"/><text x="81.6194%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="80.5732%" y="453" width="0.9554%" height="15" fill="rgb(206,71,11)" fg:x="1012" fg:w="12"/><text x="80.8232%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="80.7325%" y="437" width="0.7962%" height="15" fill="rgb(244,199,5)" fg:x="1014" fg:w="10"/><text x="80.9825%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.4490%" y="421" width="0.0796%" height="15" fill="rgb(253,49,1)" fg:x="1023" fg:w="1"/><text x="81.6990%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.4490%" y="405" width="0.0796%" height="15" fill="rgb(225,206,40)" fg:x="1023" fg:w="1"/><text x="81.6990%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6083%" y="405" width="0.0796%" height="15" fill="rgb(243,116,47)" fg:x="1025" fg:w="1"/><text x="81.8583%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.6879%" y="389" width="0.0796%" height="15" fill="rgb(219,225,16)" fg:x="1026" fg:w="1"/><text x="81.9379%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6879%" y="373" width="0.0796%" height="15" fill="rgb(233,29,47)" fg:x="1026" fg:w="1"/><text x="81.9379%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="81.5287%" y="453" width="0.3981%" height="15" fill="rgb(250,179,18)" fg:x="1024" fg:w="5"/><text x="81.7787%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="81.5287%" y="437" width="0.3981%" height="15" fill="rgb(215,176,6)" fg:x="1024" fg:w="5"/><text x="81.7787%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="81.5287%" y="421" width="0.3981%" height="15" fill="rgb(214,117,39)" fg:x="1024" fg:w="5"/><text x="81.7787%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.6879%" y="405" width="0.2389%" height="15" fill="rgb(247,183,36)" fg:x="1026" fg:w="3"/><text x="81.9379%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.7675%" y="389" width="0.1592%" height="15" fill="rgb(237,200,3)" fg:x="1027" fg:w="2"/><text x="82.0175%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.7675%" y="373" width="0.1592%" height="15" fill="rgb(212,220,24)" fg:x="1027" fg:w="2"/><text x="82.0175%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="81.7675%" y="357" width="0.1592%" height="15" fill="rgb(245,216,20)" fg:x="1027" fg:w="2"/><text x="82.0175%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9268%" y="405" width="0.0796%" height="15" fill="rgb(219,124,7)" fg:x="1029" fg:w="1"/><text x="82.1768%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9268%" y="389" width="0.0796%" height="15" fill="rgb(227,167,8)" fg:x="1029" fg:w="1"/><text x="82.1768%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.2452%" y="357" width="0.1592%" height="15" fill="rgb(241,37,2)" fg:x="1033" fg:w="2"/><text x="82.4952%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.2452%" y="341" width="0.1592%" height="15" fill="rgb(238,134,33)" fg:x="1033" fg:w="2"/><text x="82.4952%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="82.2452%" y="325" width="0.1592%" height="15" fill="rgb(248,48,27)" fg:x="1033" fg:w="2"/><text x="82.4952%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.4045%" y="357" width="0.0796%" height="15" fill="rgb(212,14,16)" fg:x="1035" fg:w="1"/><text x="82.6545%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.4045%" y="341" width="0.0796%" height="15" fill="rgb(217,205,37)" fg:x="1035" fg:w="1"/><text x="82.6545%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.4045%" y="325" width="0.0796%" height="15" fill="rgb(233,185,47)" fg:x="1035" fg:w="1"/><text x="82.6545%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.4841%" y="309" width="0.0796%" height="15" fill="rgb(244,88,8)" fg:x="1036" fg:w="1"/><text x="82.7341%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.4841%" y="293" width="0.0796%" height="15" fill="rgb(213,0,20)" fg:x="1036" fg:w="1"/><text x="82.7341%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.4841%" y="277" width="0.0796%" height="15" fill="rgb(238,159,36)" fg:x="1036" fg:w="1"/><text x="82.7341%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="82.4841%" y="261" width="0.0796%" height="15" fill="rgb(253,173,17)" fg:x="1036" fg:w="1"/><text x="82.7341%" y="271.50"></text></g><g><title>engine::session::Session::flush (30 samples, 2.39%)</title><rect x="80.2548%" y="565" width="2.3885%" height="15" fill="rgb(221,23,28)" fg:x="1008" fg:w="30"/><text x="80.5048%" y="575.50">en..</text></g><g><title>engine::session::Session::save_changes (28 samples, 2.23%)</title><rect x="80.4140%" y="549" width="2.2293%" height="15" fill="rgb(218,113,15)" fg:x="1010" fg:w="28"/><text x="80.6640%" y="559.50">e..</text></g><g><title>engine::session::state::State::close (26 samples, 2.07%)</title><rect x="80.5732%" y="533" width="2.0701%" height="15" fill="rgb(233,58,3)" fg:x="1012" fg:w="26"/><text x="80.8232%" y="543.50">e..</text></g><g><title>engine::session::state::State::flush_entities (26 samples, 2.07%)</title><rect x="80.5732%" y="517" width="2.0701%" height="15" fill="rgb(250,46,35)" fg:x="1012" fg:w="26"/><text x="80.8232%" y="527.50">e..</text></g><g><title>core::iter::adapters::try_process (26 samples, 2.07%)</title><rect x="80.5732%" y="501" width="2.0701%" height="15" fill="rgb(210,169,11)" fg:x="1012" fg:w="26"/><text x="80.8232%" y="511.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 2.07%)</title><rect x="80.5732%" y="485" width="2.0701%" height="15" fill="rgb(246,88,19)" fg:x="1012" fg:w="26"/><text x="80.8232%" y="495.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (26 samples, 2.07%)</title><rect x="80.5732%" y="469" width="2.0701%" height="15" fill="rgb(206,81,49)" fg:x="1012" fg:w="26"/><text x="80.8232%" y="479.50">e..</text></g><g><title>kernel::model::any_entity_changes (9 samples, 0.72%)</title><rect x="81.9268%" y="453" width="0.7166%" height="15" fill="rgb(232,144,18)" fg:x="1029" fg:w="9"/><text x="82.1768%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="81.9268%" y="437" width="0.7166%" height="15" fill="rgb(235,2,27)" fg:x="1029" fg:w="9"/><text x="82.1768%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="81.9268%" y="421" width="0.7166%" height="15" fill="rgb(239,157,39)" fg:x="1029" fg:w="9"/><text x="82.1768%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="82.0064%" y="405" width="0.6369%" height="15" fill="rgb(220,11,17)" fg:x="1030" fg:w="8"/><text x="82.2564%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="82.0860%" y="389" width="0.5573%" height="15" fill="rgb(243,94,50)" fg:x="1031" fg:w="7"/><text x="82.3360%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="82.2452%" y="373" width="0.3981%" height="15" fill="rgb(218,22,0)" fg:x="1033" fg:w="5"/><text x="82.4952%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.4841%" y="357" width="0.1592%" height="15" fill="rgb(249,70,21)" fg:x="1036" fg:w="2"/><text x="82.7341%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.4841%" y="341" width="0.1592%" height="15" fill="rgb(245,111,46)" fg:x="1036" fg:w="2"/><text x="82.7341%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.4841%" y="325" width="0.1592%" height="15" fill="rgb(244,183,12)" fg:x="1036" fg:w="2"/><text x="82.7341%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5637%" y="309" width="0.0796%" height="15" fill="rgb(207,117,0)" fg:x="1037" fg:w="1"/><text x="82.8137%" y="319.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="82.6433%" y="485" width="0.1592%" height="15" fill="rgb(206,20,43)" fg:x="1038" fg:w="2"/><text x="82.8933%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="82.6433%" y="533" width="0.2389%" height="15" fill="rgb(221,104,11)" fg:x="1038" fg:w="3"/><text x="82.8933%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="82.6433%" y="517" width="0.2389%" height="15" fill="rgb(254,36,50)" fg:x="1038" fg:w="3"/><text x="82.8933%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="82.6433%" y="501" width="0.2389%" height="15" fill="rgb(252,17,15)" fg:x="1038" fg:w="3"/><text x="82.8933%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.8025%" y="485" width="0.0796%" height="15" fill="rgb(219,129,43)" fg:x="1040" fg:w="1"/><text x="83.0525%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.8025%" y="469" width="0.0796%" height="15" fill="rgb(205,34,45)" fg:x="1040" fg:w="1"/><text x="83.0525%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8025%" y="453" width="0.0796%" height="15" fill="rgb(251,201,32)" fg:x="1040" fg:w="1"/><text x="83.0525%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.8025%" y="437" width="0.0796%" height="15" fill="rgb(205,56,0)" fg:x="1040" fg:w="1"/><text x="83.0525%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8025%" y="421" width="0.0796%" height="15" fill="rgb(211,193,27)" fg:x="1040" fg:w="1"/><text x="83.0525%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8025%" y="405" width="0.0796%" height="15" fill="rgb(231,100,42)" fg:x="1040" fg:w="1"/><text x="83.0525%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8025%" y="389" width="0.0796%" height="15" fill="rgb(245,85,27)" fg:x="1040" fg:w="1"/><text x="83.0525%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.8822%" y="533" width="0.0796%" height="15" fill="rgb(241,76,24)" fg:x="1041" fg:w="1"/><text x="83.1322%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="82.8822%" y="517" width="0.0796%" height="15" fill="rgb(249,157,15)" fg:x="1041" fg:w="1"/><text x="83.1322%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.8822%" y="501" width="0.0796%" height="15" fill="rgb(222,218,25)" fg:x="1041" fg:w="1"/><text x="83.1322%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.8822%" y="485" width="0.0796%" height="15" fill="rgb(252,156,52)" fg:x="1041" fg:w="1"/><text x="83.1322%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="82.8822%" y="469" width="0.0796%" height="15" fill="rgb(211,185,7)" fg:x="1041" fg:w="1"/><text x="83.1322%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.9618%" y="485" width="0.1592%" height="15" fill="rgb(234,108,24)" fg:x="1042" fg:w="2"/><text x="83.2118%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.9618%" y="469" width="0.1592%" height="15" fill="rgb(227,218,2)" fg:x="1042" fg:w="2"/><text x="83.2118%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0414%" y="453" width="0.0796%" height="15" fill="rgb(224,0,36)" fg:x="1043" fg:w="1"/><text x="83.2914%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0414%" y="437" width="0.0796%" height="15" fill="rgb(233,201,10)" fg:x="1043" fg:w="1"/><text x="83.2914%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.0414%" y="421" width="0.0796%" height="15" fill="rgb(252,209,14)" fg:x="1043" fg:w="1"/><text x="83.2914%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0414%" y="405" width="0.0796%" height="15" fill="rgb(205,93,49)" fg:x="1043" fg:w="1"/><text x="83.2914%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0414%" y="389" width="0.0796%" height="15" fill="rgb(234,116,45)" fg:x="1043" fg:w="1"/><text x="83.2914%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="83.1210%" y="469" width="0.0796%" height="15" fill="rgb(248,89,35)" fg:x="1044" fg:w="1"/><text x="83.3710%" y="479.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.72%)</title><rect x="82.6433%" y="565" width="0.7166%" height="15" fill="rgb(233,167,45)" fg:x="1038" fg:w="9"/><text x="82.8933%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.72%)</title><rect x="82.6433%" y="549" width="0.7166%" height="15" fill="rgb(248,228,14)" fg:x="1038" fg:w="9"/><text x="82.8933%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="82.9618%" y="533" width="0.3981%" height="15" fill="rgb(246,91,14)" fg:x="1042" fg:w="5"/><text x="83.2118%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="82.9618%" y="517" width="0.3981%" height="15" fill="rgb(227,142,5)" fg:x="1042" fg:w="5"/><text x="83.2118%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="82.9618%" y="501" width="0.3981%" height="15" fill="rgb(221,63,33)" fg:x="1042" fg:w="5"/><text x="83.2118%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="83.1210%" y="485" width="0.2389%" height="15" fill="rgb(233,49,0)" fg:x="1044" fg:w="3"/><text x="83.3710%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.2006%" y="469" width="0.1592%" height="15" fill="rgb(251,115,38)" fg:x="1045" fg:w="2"/><text x="83.4506%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.2006%" y="453" width="0.1592%" height="15" fill="rgb(231,214,32)" fg:x="1045" fg:w="2"/><text x="83.4506%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.2006%" y="437" width="0.1592%" height="15" fill="rgb(248,73,46)" fg:x="1045" fg:w="2"/><text x="83.4506%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="83.2006%" y="421" width="0.1592%" height="15" fill="rgb(237,156,4)" fg:x="1045" fg:w="2"/><text x="83.4506%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.2006%" y="405" width="0.1592%" height="15" fill="rgb(227,132,2)" fg:x="1045" fg:w="2"/><text x="83.4506%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.2006%" y="389" width="0.1592%" height="15" fill="rgb(248,161,9)" fg:x="1045" fg:w="2"/><text x="83.4506%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.2006%" y="373" width="0.1592%" height="15" fill="rgb(238,77,38)" fg:x="1045" fg:w="2"/><text x="83.4506%" y="383.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="83.3599%" y="565" width="0.0796%" height="15" fill="rgb(222,166,40)" fg:x="1047" fg:w="1"/><text x="83.6099%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="83.3599%" y="549" width="0.0796%" height="15" fill="rgb(214,168,45)" fg:x="1047" fg:w="1"/><text x="83.6099%" y="559.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.3599%" y="533" width="0.0796%" height="15" fill="rgb(226,64,37)" fg:x="1047" fg:w="1"/><text x="83.6099%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.3599%" y="517" width="0.0796%" height="15" fill="rgb(232,210,43)" fg:x="1047" fg:w="1"/><text x="83.6099%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.4395%" y="517" width="0.0796%" height="15" fill="rgb(214,76,33)" fg:x="1048" fg:w="1"/><text x="83.6895%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.4395%" y="501" width="0.0796%" height="15" fill="rgb(210,78,5)" fg:x="1048" fg:w="1"/><text x="83.6895%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.4395%" y="485" width="0.0796%" height="15" fill="rgb(211,107,37)" fg:x="1048" fg:w="1"/><text x="83.6895%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.5191%" y="517" width="0.0796%" height="15" fill="rgb(249,67,16)" fg:x="1049" fg:w="1"/><text x="83.7691%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="83.5987%" y="517" width="0.0796%" height="15" fill="rgb(222,114,31)" fg:x="1050" fg:w="1"/><text x="83.8487%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="83.5987%" y="501" width="0.0796%" height="15" fill="rgb(242,118,19)" fg:x="1050" fg:w="1"/><text x="83.8487%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.5987%" y="485" width="0.0796%" height="15" fill="rgb(223,115,1)" fg:x="1050" fg:w="1"/><text x="83.8487%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="83.5987%" y="469" width="0.0796%" height="15" fill="rgb(241,182,54)" fg:x="1050" fg:w="1"/><text x="83.8487%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.5987%" y="453" width="0.0796%" height="15" fill="rgb(244,166,36)" fg:x="1050" fg:w="1"/><text x="83.8487%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5987%" y="437" width="0.0796%" height="15" fill="rgb(241,52,43)" fg:x="1050" fg:w="1"/><text x="83.8487%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5987%" y="421" width="0.0796%" height="15" fill="rgb(236,82,9)" fg:x="1050" fg:w="1"/><text x="83.8487%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7580%" y="469" width="0.0796%" height="15" fill="rgb(241,119,0)" fg:x="1052" fg:w="1"/><text x="84.0080%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7580%" y="453" width="0.0796%" height="15" fill="rgb(221,19,22)" fg:x="1052" fg:w="1"/><text x="84.0080%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7580%" y="437" width="0.0796%" height="15" fill="rgb(254,144,35)" fg:x="1052" fg:w="1"/><text x="84.0080%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="83.6783%" y="517" width="0.2389%" height="15" fill="rgb(246,132,30)" fg:x="1051" fg:w="3"/><text x="83.9283%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="83.6783%" y="501" width="0.2389%" height="15" fill="rgb(234,69,28)" fg:x="1051" fg:w="3"/><text x="83.9283%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="83.6783%" y="485" width="0.2389%" height="15" fill="rgb(219,106,47)" fg:x="1051" fg:w="3"/><text x="83.9283%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8376%" y="469" width="0.0796%" height="15" fill="rgb(218,79,24)" fg:x="1053" fg:w="1"/><text x="84.0876%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8376%" y="453" width="0.0796%" height="15" fill="rgb(225,26,21)" fg:x="1053" fg:w="1"/><text x="84.0876%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.8376%" y="437" width="0.0796%" height="15" fill="rgb(217,68,49)" fg:x="1053" fg:w="1"/><text x="84.0876%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8376%" y="421" width="0.0796%" height="15" fill="rgb(220,204,28)" fg:x="1053" fg:w="1"/><text x="84.0876%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8376%" y="405" width="0.0796%" height="15" fill="rgb(237,208,43)" fg:x="1053" fg:w="1"/><text x="84.0876%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8376%" y="389" width="0.0796%" height="15" fill="rgb(213,97,42)" fg:x="1053" fg:w="1"/><text x="84.0876%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.9172%" y="485" width="0.0796%" height="15" fill="rgb(238,96,52)" fg:x="1054" fg:w="1"/><text x="84.1672%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.9172%" y="469" width="0.0796%" height="15" fill="rgb(228,14,13)" fg:x="1054" fg:w="1"/><text x="84.1672%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9172%" y="453" width="0.0796%" height="15" fill="rgb(219,123,13)" fg:x="1054" fg:w="1"/><text x="84.1672%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9172%" y="437" width="0.0796%" height="15" fill="rgb(216,144,17)" fg:x="1054" fg:w="1"/><text x="84.1672%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="83.4395%" y="533" width="0.6369%" height="15" fill="rgb(230,228,29)" fg:x="1048" fg:w="8"/><text x="83.6895%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="83.9172%" y="517" width="0.1592%" height="15" fill="rgb(233,18,5)" fg:x="1054" fg:w="2"/><text x="84.1672%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="83.9172%" y="501" width="0.1592%" height="15" fill="rgb(233,197,12)" fg:x="1054" fg:w="2"/><text x="84.1672%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="83.9968%" y="485" width="0.0796%" height="15" fill="rgb(234,140,29)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.9968%" y="469" width="0.0796%" height="15" fill="rgb(233,113,19)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.9968%" y="453" width="0.0796%" height="15" fill="rgb(246,209,13)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.9968%" y="437" width="0.0796%" height="15" fill="rgb(242,79,54)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.9968%" y="421" width="0.0796%" height="15" fill="rgb(219,73,16)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="83.9968%" y="405" width="0.0796%" height="15" fill="rgb(224,52,10)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="83.9968%" y="389" width="0.0796%" height="15" fill="rgb(237,179,5)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="83.9968%" y="373" width="0.0796%" height="15" fill="rgb(231,20,6)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="83.9968%" y="357" width="0.0796%" height="15" fill="rgb(253,171,45)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="83.9968%" y="341" width="0.0796%" height="15" fill="rgb(230,75,49)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="83.9968%" y="325" width="0.0796%" height="15" fill="rgb(216,83,46)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.9968%" y="309" width="0.0796%" height="15" fill="rgb(236,56,9)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="83.9968%" y="293" width="0.0796%" height="15" fill="rgb(215,28,34)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="303.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="83.9968%" y="277" width="0.0796%" height="15" fill="rgb(230,222,20)" fg:x="1055" fg:w="1"/><text x="84.2468%" y="287.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="83.4395%" y="549" width="0.7166%" height="15" fill="rgb(235,209,51)" fg:x="1048" fg:w="9"/><text x="83.6895%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.0764%" y="533" width="0.0796%" height="15" fill="rgb(235,167,1)" fg:x="1056" fg:w="1"/><text x="84.3264%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.0764%" y="517" width="0.0796%" height="15" fill="rgb(248,220,0)" fg:x="1056" fg:w="1"/><text x="84.3264%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0764%" y="501" width="0.0796%" height="15" fill="rgb(239,0,18)" fg:x="1056" fg:w="1"/><text x="84.3264%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0764%" y="485" width="0.0796%" height="15" fill="rgb(229,179,11)" fg:x="1056" fg:w="1"/><text x="84.3264%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.0764%" y="469" width="0.0796%" height="15" fill="rgb(226,116,53)" fg:x="1056" fg:w="1"/><text x="84.3264%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0764%" y="453" width="0.0796%" height="15" fill="rgb(218,1,49)" fg:x="1056" fg:w="1"/><text x="84.3264%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0764%" y="437" width="0.0796%" height="15" fill="rgb(208,184,47)" fg:x="1056" fg:w="1"/><text x="84.3264%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0764%" y="421" width="0.0796%" height="15" fill="rgb(238,174,3)" fg:x="1056" fg:w="1"/><text x="84.3264%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.0764%" y="405" width="0.0796%" height="15" fill="rgb(247,188,6)" fg:x="1056" fg:w="1"/><text x="84.3264%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.1561%" y="405" width="0.0796%" height="15" fill="rgb(211,165,46)" fg:x="1057" fg:w="1"/><text x="84.4061%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.1561%" y="389" width="0.0796%" height="15" fill="rgb(222,190,10)" fg:x="1057" fg:w="1"/><text x="84.4061%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="84.1561%" y="533" width="0.1592%" height="15" fill="rgb(206,185,3)" fg:x="1057" fg:w="2"/><text x="84.4061%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.1561%" y="517" width="0.1592%" height="15" fill="rgb(244,125,37)" fg:x="1057" fg:w="2"/><text x="84.4061%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.1561%" y="501" width="0.1592%" height="15" fill="rgb(211,43,7)" fg:x="1057" fg:w="2"/><text x="84.4061%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.1561%" y="485" width="0.1592%" height="15" fill="rgb(250,41,42)" fg:x="1057" fg:w="2"/><text x="84.4061%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.1561%" y="469" width="0.1592%" height="15" fill="rgb(254,54,42)" fg:x="1057" fg:w="2"/><text x="84.4061%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.1561%" y="453" width="0.1592%" height="15" fill="rgb(213,71,43)" fg:x="1057" fg:w="2"/><text x="84.4061%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="84.1561%" y="437" width="0.1592%" height="15" fill="rgb(249,3,44)" fg:x="1057" fg:w="2"/><text x="84.4061%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.1561%" y="421" width="0.1592%" height="15" fill="rgb(229,80,41)" fg:x="1057" fg:w="2"/><text x="84.4061%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2357%" y="405" width="0.0796%" height="15" fill="rgb(231,25,28)" fg:x="1058" fg:w="1"/><text x="84.4857%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2357%" y="389" width="0.0796%" height="15" fill="rgb(208,79,48)" fg:x="1058" fg:w="1"/><text x="84.4857%" y="399.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3153%" y="517" width="0.0796%" height="15" fill="rgb(207,196,38)" fg:x="1059" fg:w="1"/><text x="84.5653%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3153%" y="501" width="0.0796%" height="15" fill="rgb(228,105,49)" fg:x="1059" fg:w="1"/><text x="84.5653%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.3153%" y="485" width="0.0796%" height="15" fill="rgb(237,99,15)" fg:x="1059" fg:w="1"/><text x="84.5653%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3153%" y="469" width="0.0796%" height="15" fill="rgb(224,207,46)" fg:x="1059" fg:w="1"/><text x="84.5653%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3153%" y="453" width="0.0796%" height="15" fill="rgb(249,117,50)" fg:x="1059" fg:w="1"/><text x="84.5653%" y="463.50"></text></g><g><title>plugins_core::build::Build::occupying (13 samples, 1.04%)</title><rect x="83.4395%" y="565" width="1.0350%" height="15" fill="rgb(248,17,13)" fg:x="1048" fg:w="13"/><text x="83.6895%" y="575.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.32%)</title><rect x="84.1561%" y="549" width="0.3185%" height="15" fill="rgb(228,187,36)" fg:x="1057" fg:w="4"/><text x="84.4061%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="84.3153%" y="533" width="0.1592%" height="15" fill="rgb(234,132,20)" fg:x="1059" fg:w="2"/><text x="84.5653%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3949%" y="517" width="0.0796%" height="15" fill="rgb(209,170,46)" fg:x="1060" fg:w="1"/><text x="84.6449%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3949%" y="501" width="0.0796%" height="15" fill="rgb(237,23,19)" fg:x="1060" fg:w="1"/><text x="84.6449%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3949%" y="485" width="0.0796%" height="15" fill="rgb(227,21,26)" fg:x="1060" fg:w="1"/><text x="84.6449%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3949%" y="469" width="0.0796%" height="15" fill="rgb(222,220,48)" fg:x="1060" fg:w="1"/><text x="84.6449%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3949%" y="453" width="0.0796%" height="15" fill="rgb(214,9,16)" fg:x="1060" fg:w="1"/><text x="84.6449%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.4745%" y="517" width="0.0796%" height="15" fill="rgb(209,73,30)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.4745%" y="501" width="0.0796%" height="15" fill="rgb(207,20,33)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4745%" y="485" width="0.0796%" height="15" fill="rgb(219,153,12)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4745%" y="469" width="0.0796%" height="15" fill="rgb(235,97,25)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4745%" y="453" width="0.0796%" height="15" fill="rgb(244,30,34)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4745%" y="437" width="0.0796%" height="15" fill="rgb(214,106,45)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4745%" y="421" width="0.0796%" height="15" fill="rgb(226,41,9)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.4745%" y="405" width="0.0796%" height="15" fill="rgb(253,139,29)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.4745%" y="389" width="0.0796%" height="15" fill="rgb(213,205,39)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.4745%" y="373" width="0.0796%" height="15" fill="rgb(209,27,10)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4745%" y="357" width="0.0796%" height="15" fill="rgb(249,142,16)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4745%" y="341" width="0.0796%" height="15" fill="rgb(242,65,12)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.4745%" y="325" width="0.0796%" height="15" fill="rgb(232,48,10)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.4745%" y="309" width="0.0796%" height="15" fill="rgb(253,67,19)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.4745%" y="293" width="0.0796%" height="15" fill="rgb(227,93,29)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.4745%" y="277" width="0.0796%" height="15" fill="rgb(226,189,53)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4745%" y="261" width="0.0796%" height="15" fill="rgb(223,224,1)" fg:x="1061" fg:w="1"/><text x="84.7245%" y="271.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="84.5541%" y="501" width="0.0796%" height="15" fill="rgb(221,84,32)" fg:x="1062" fg:w="1"/><text x="84.8041%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="84.5541%" y="485" width="0.0796%" height="15" fill="rgb(214,189,28)" fg:x="1062" fg:w="1"/><text x="84.8041%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="84.5541%" y="469" width="0.0796%" height="15" fill="rgb(234,7,52)" fg:x="1062" fg:w="1"/><text x="84.8041%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5541%" y="453" width="0.0796%" height="15" fill="rgb(249,73,31)" fg:x="1062" fg:w="1"/><text x="84.8041%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5541%" y="437" width="0.0796%" height="15" fill="rgb(253,153,41)" fg:x="1062" fg:w="1"/><text x="84.8041%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.6338%" y="469" width="0.0796%" height="15" fill="rgb(249,52,34)" fg:x="1063" fg:w="1"/><text x="84.8838%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.6338%" y="453" width="0.0796%" height="15" fill="rgb(236,177,47)" fg:x="1063" fg:w="1"/><text x="84.8838%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="84.5541%" y="517" width="0.2389%" height="15" fill="rgb(252,185,45)" fg:x="1062" fg:w="3"/><text x="84.8041%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="84.6338%" y="501" width="0.1592%" height="15" fill="rgb(251,15,30)" fg:x="1063" fg:w="2"/><text x="84.8838%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.6338%" y="485" width="0.1592%" height="15" fill="rgb(233,31,4)" fg:x="1063" fg:w="2"/><text x="84.8838%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.7134%" y="469" width="0.0796%" height="15" fill="rgb(254,44,24)" fg:x="1064" fg:w="1"/><text x="84.9634%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="84.7134%" y="453" width="0.0796%" height="15" fill="rgb(218,54,1)" fg:x="1064" fg:w="1"/><text x="84.9634%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="84.7134%" y="437" width="0.0796%" height="15" fill="rgb(243,209,39)" fg:x="1064" fg:w="1"/><text x="84.9634%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.7134%" y="421" width="0.0796%" height="15" fill="rgb(206,75,33)" fg:x="1064" fg:w="1"/><text x="84.9634%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="84.7134%" y="405" width="0.0796%" height="15" fill="rgb(223,108,18)" fg:x="1064" fg:w="1"/><text x="84.9634%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.7134%" y="389" width="0.0796%" height="15" fill="rgb(244,89,31)" fg:x="1064" fg:w="1"/><text x="84.9634%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="84.7134%" y="373" width="0.0796%" height="15" fill="rgb(222,167,27)" fg:x="1064" fg:w="1"/><text x="84.9634%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7134%" y="357" width="0.0796%" height="15" fill="rgb(247,41,16)" fg:x="1064" fg:w="1"/><text x="84.9634%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.7930%" y="501" width="0.0796%" height="15" fill="rgb(233,168,40)" fg:x="1065" fg:w="1"/><text x="85.0430%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.7930%" y="485" width="0.0796%" height="15" fill="rgb(205,211,8)" fg:x="1065" fg:w="1"/><text x="85.0430%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="84.7930%" y="517" width="0.1592%" height="15" fill="rgb(238,105,11)" fg:x="1065" fg:w="2"/><text x="85.0430%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.8726%" y="501" width="0.0796%" height="15" fill="rgb(223,142,52)" fg:x="1066" fg:w="1"/><text x="85.1226%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.8726%" y="485" width="0.0796%" height="15" fill="rgb(238,51,33)" fg:x="1066" fg:w="1"/><text x="85.1226%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8726%" y="469" width="0.0796%" height="15" fill="rgb(231,188,43)" fg:x="1066" fg:w="1"/><text x="85.1226%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8726%" y="453" width="0.0796%" height="15" fill="rgb(216,92,17)" fg:x="1066" fg:w="1"/><text x="85.1226%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8726%" y="437" width="0.0796%" height="15" fill="rgb(228,2,40)" fg:x="1066" fg:w="1"/><text x="85.1226%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9522%" y="453" width="0.0796%" height="15" fill="rgb(226,73,15)" fg:x="1067" fg:w="1"/><text x="85.2022%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9522%" y="437" width="0.0796%" height="15" fill="rgb(227,66,46)" fg:x="1067" fg:w="1"/><text x="85.2022%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9522%" y="421" width="0.0796%" height="15" fill="rgb(209,71,6)" fg:x="1067" fg:w="1"/><text x="85.2022%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9522%" y="405" width="0.0796%" height="15" fill="rgb(246,100,25)" fg:x="1067" fg:w="1"/><text x="85.2022%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (74 samples, 5.89%)</title><rect x="79.2197%" y="581" width="5.8917%" height="15" fill="rgb(248,185,27)" fg:x="995" fg:w="74"/><text x="79.4697%" y="591.50">plugins..</text></g><g><title>plugins_core::build::Build::wearing (8 samples, 0.64%)</title><rect x="84.4745%" y="565" width="0.6369%" height="15" fill="rgb(225,118,47)" fg:x="1061" fg:w="8"/><text x="84.7245%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="84.4745%" y="549" width="0.6369%" height="15" fill="rgb(220,185,44)" fg:x="1061" fg:w="8"/><text x="84.7245%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="84.4745%" y="533" width="0.6369%" height="15" fill="rgb(227,95,24)" fg:x="1061" fg:w="8"/><text x="84.7245%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="84.9522%" y="517" width="0.1592%" height="15" fill="rgb(252,84,24)" fg:x="1067" fg:w="2"/><text x="85.2022%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="84.9522%" y="501" width="0.1592%" height="15" fill="rgb(240,34,44)" fg:x="1067" fg:w="2"/><text x="85.2022%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.9522%" y="485" width="0.1592%" height="15" fill="rgb(209,72,54)" fg:x="1067" fg:w="2"/><text x="85.2022%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.9522%" y="469" width="0.1592%" height="15" fill="rgb(226,19,45)" fg:x="1067" fg:w="2"/><text x="85.2022%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.0318%" y="453" width="0.0796%" height="15" fill="rgb(246,7,45)" fg:x="1068" fg:w="1"/><text x="85.2818%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="85.1115%" y="533" width="0.0796%" height="15" fill="rgb(225,45,2)" fg:x="1069" fg:w="1"/><text x="85.3615%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1115%" y="517" width="0.0796%" height="15" fill="rgb(221,80,29)" fg:x="1069" fg:w="1"/><text x="85.3615%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.1115%" y="501" width="0.0796%" height="15" fill="rgb(228,11,19)" fg:x="1069" fg:w="1"/><text x="85.3615%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="85.1115%" y="581" width="0.1592%" height="15" fill="rgb(243,17,21)" fg:x="1069" fg:w="2"/><text x="85.3615%" y="591.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="85.1115%" y="565" width="0.1592%" height="15" fill="rgb(243,88,8)" fg:x="1069" fg:w="2"/><text x="85.3615%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="85.1115%" y="549" width="0.1592%" height="15" fill="rgb(214,17,9)" fg:x="1069" fg:w="2"/><text x="85.3615%" y="559.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="85.1911%" y="533" width="0.0796%" height="15" fill="rgb(232,169,15)" fg:x="1070" fg:w="1"/><text x="85.4411%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="85.1911%" y="517" width="0.0796%" height="15" fill="rgb(232,86,53)" fg:x="1070" fg:w="1"/><text x="85.4411%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.1911%" y="501" width="0.0796%" height="15" fill="rgb(222,100,4)" fg:x="1070" fg:w="1"/><text x="85.4411%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.3503%" y="533" width="0.0796%" height="15" fill="rgb(253,151,38)" fg:x="1072" fg:w="1"/><text x="85.6003%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.4299%" y="437" width="0.0796%" height="15" fill="rgb(238,215,29)" fg:x="1073" fg:w="1"/><text x="85.6799%" y="447.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="85.4299%" y="469" width="0.1592%" height="15" fill="rgb(205,128,53)" fg:x="1073" fg:w="2"/><text x="85.6799%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.4299%" y="453" width="0.1592%" height="15" fill="rgb(248,183,14)" fg:x="1073" fg:w="2"/><text x="85.6799%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5096%" y="437" width="0.0796%" height="15" fill="rgb(244,172,35)" fg:x="1074" fg:w="1"/><text x="85.7596%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5096%" y="421" width="0.0796%" height="15" fill="rgb(234,93,19)" fg:x="1074" fg:w="1"/><text x="85.7596%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.5096%" y="405" width="0.0796%" height="15" fill="rgb(227,109,7)" fg:x="1074" fg:w="1"/><text x="85.7596%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5096%" y="389" width="0.0796%" height="15" fill="rgb(233,136,54)" fg:x="1074" fg:w="1"/><text x="85.7596%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.5096%" y="373" width="0.0796%" height="15" fill="rgb(233,19,40)" fg:x="1074" fg:w="1"/><text x="85.7596%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="85.4299%" y="501" width="0.2389%" height="15" fill="rgb(247,41,18)" fg:x="1073" fg:w="3"/><text x="85.6799%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="85.4299%" y="485" width="0.2389%" height="15" fill="rgb(220,34,34)" fg:x="1073" fg:w="3"/><text x="85.6799%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.5892%" y="469" width="0.0796%" height="15" fill="rgb(222,135,32)" fg:x="1075" fg:w="1"/><text x="85.8392%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5892%" y="453" width="0.0796%" height="15" fill="rgb(214,80,19)" fg:x="1075" fg:w="1"/><text x="85.8392%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5892%" y="437" width="0.0796%" height="15" fill="rgb(234,54,46)" fg:x="1075" fg:w="1"/><text x="85.8392%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5892%" y="421" width="0.0796%" height="15" fill="rgb(251,48,23)" fg:x="1075" fg:w="1"/><text x="85.8392%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.5892%" y="405" width="0.0796%" height="15" fill="rgb(254,109,52)" fg:x="1075" fg:w="1"/><text x="85.8392%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.5892%" y="389" width="0.0796%" height="15" fill="rgb(240,186,19)" fg:x="1075" fg:w="1"/><text x="85.8392%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.5892%" y="373" width="0.0796%" height="15" fill="rgb(246,187,17)" fg:x="1075" fg:w="1"/><text x="85.8392%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.5892%" y="357" width="0.0796%" height="15" fill="rgb(212,21,5)" fg:x="1075" fg:w="1"/><text x="85.8392%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.5892%" y="341" width="0.0796%" height="15" fill="rgb(225,185,18)" fg:x="1075" fg:w="1"/><text x="85.8392%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="85.5892%" y="325" width="0.0796%" height="15" fill="rgb(245,114,17)" fg:x="1075" fg:w="1"/><text x="85.8392%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.5892%" y="309" width="0.0796%" height="15" fill="rgb(223,164,24)" fg:x="1075" fg:w="1"/><text x="85.8392%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="85.6688%" y="469" width="0.1592%" height="15" fill="rgb(211,228,3)" fg:x="1076" fg:w="2"/><text x="85.9188%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="85.6688%" y="453" width="0.1592%" height="15" fill="rgb(223,16,38)" fg:x="1076" fg:w="2"/><text x="85.9188%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="85.6688%" y="437" width="0.1592%" height="15" fill="rgb(207,31,54)" fg:x="1076" fg:w="2"/><text x="85.9188%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="85.6688%" y="421" width="0.1592%" height="15" fill="rgb(220,39,11)" fg:x="1076" fg:w="2"/><text x="85.9188%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="85.6688%" y="405" width="0.1592%" height="15" fill="rgb(235,185,0)" fg:x="1076" fg:w="2"/><text x="85.9188%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="85.6688%" y="389" width="0.1592%" height="15" fill="rgb(249,39,18)" fg:x="1076" fg:w="2"/><text x="85.9188%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="85.6688%" y="373" width="0.1592%" height="15" fill="rgb(240,110,33)" fg:x="1076" fg:w="2"/><text x="85.9188%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.6688%" y="357" width="0.1592%" height="15" fill="rgb(210,92,42)" fg:x="1076" fg:w="2"/><text x="85.9188%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7484%" y="341" width="0.0796%" height="15" fill="rgb(218,215,28)" fg:x="1077" fg:w="1"/><text x="85.9984%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="85.4299%" y="517" width="0.4777%" height="15" fill="rgb(238,215,36)" fg:x="1073" fg:w="6"/><text x="85.6799%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="85.6688%" y="501" width="0.2389%" height="15" fill="rgb(220,31,10)" fg:x="1076" fg:w="3"/><text x="85.9188%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="85.6688%" y="485" width="0.2389%" height="15" fill="rgb(212,93,14)" fg:x="1076" fg:w="3"/><text x="85.9188%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="85.8280%" y="469" width="0.0796%" height="15" fill="rgb(254,207,2)" fg:x="1078" fg:w="1"/><text x="86.0780%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.8280%" y="453" width="0.0796%" height="15" fill="rgb(205,57,44)" fg:x="1078" fg:w="1"/><text x="86.0780%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="85.9076%" y="517" width="0.0796%" height="15" fill="rgb(226,151,19)" fg:x="1079" fg:w="1"/><text x="86.1576%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.9076%" y="501" width="0.0796%" height="15" fill="rgb(230,72,30)" fg:x="1079" fg:w="1"/><text x="86.1576%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.9076%" y="485" width="0.0796%" height="15" fill="rgb(244,0,8)" fg:x="1079" fg:w="1"/><text x="86.1576%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.9076%" y="469" width="0.0796%" height="15" fill="rgb(230,192,6)" fg:x="1079" fg:w="1"/><text x="86.1576%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9076%" y="453" width="0.0796%" height="15" fill="rgb(233,207,13)" fg:x="1079" fg:w="1"/><text x="86.1576%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.9076%" y="437" width="0.0796%" height="15" fill="rgb(206,227,7)" fg:x="1079" fg:w="1"/><text x="86.1576%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9076%" y="421" width="0.0796%" height="15" fill="rgb(213,217,25)" fg:x="1079" fg:w="1"/><text x="86.1576%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9076%" y="405" width="0.0796%" height="15" fill="rgb(249,75,4)" fg:x="1079" fg:w="1"/><text x="86.1576%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.9076%" y="389" width="0.0796%" height="15" fill="rgb(225,114,18)" fg:x="1079" fg:w="1"/><text x="86.1576%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9873%" y="453" width="0.0796%" height="15" fill="rgb(211,162,40)" fg:x="1080" fg:w="1"/><text x="86.2373%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9873%" y="437" width="0.0796%" height="15" fill="rgb(206,49,29)" fg:x="1080" fg:w="1"/><text x="86.2373%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9873%" y="421" width="0.0796%" height="15" fill="rgb(244,8,6)" fg:x="1080" fg:w="1"/><text x="86.2373%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (11 samples, 0.88%)</title><rect x="85.2707%" y="581" width="0.8758%" height="15" fill="rgb(231,194,28)" fg:x="1071" fg:w="11"/><text x="85.5207%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.88%)</title><rect x="85.2707%" y="565" width="0.8758%" height="15" fill="rgb(210,69,5)" fg:x="1071" fg:w="11"/><text x="85.5207%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (11 samples, 0.88%)</title><rect x="85.2707%" y="549" width="0.8758%" height="15" fill="rgb(216,186,12)" fg:x="1071" fg:w="11"/><text x="85.5207%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="85.4299%" y="533" width="0.7166%" height="15" fill="rgb(238,61,15)" fg:x="1073" fg:w="9"/><text x="85.6799%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="85.9873%" y="517" width="0.1592%" height="15" fill="rgb(226,104,1)" fg:x="1080" fg:w="2"/><text x="86.2373%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="85.9873%" y="501" width="0.1592%" height="15" fill="rgb(229,128,15)" fg:x="1080" fg:w="2"/><text x="86.2373%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="85.9873%" y="485" width="0.1592%" height="15" fill="rgb(247,110,15)" fg:x="1080" fg:w="2"/><text x="86.2373%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.9873%" y="469" width="0.1592%" height="15" fill="rgb(210,74,48)" fg:x="1080" fg:w="2"/><text x="86.2373%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.0669%" y="453" width="0.0796%" height="15" fill="rgb(246,121,10)" fg:x="1081" fg:w="1"/><text x="86.3169%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0669%" y="437" width="0.0796%" height="15" fill="rgb(214,156,37)" fg:x="1081" fg:w="1"/><text x="86.3169%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.0669%" y="421" width="0.0796%" height="15" fill="rgb(214,210,34)" fg:x="1081" fg:w="1"/><text x="86.3169%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0669%" y="405" width="0.0796%" height="15" fill="rgb(237,93,35)" fg:x="1081" fg:w="1"/><text x="86.3169%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.0669%" y="389" width="0.0796%" height="15" fill="rgb(206,36,8)" fg:x="1081" fg:w="1"/><text x="86.3169%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="86.1465%" y="517" width="0.0796%" height="15" fill="rgb(208,151,12)" fg:x="1082" fg:w="1"/><text x="86.3965%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.1465%" y="501" width="0.0796%" height="15" fill="rgb(225,133,52)" fg:x="1082" fg:w="1"/><text x="86.3965%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.1465%" y="485" width="0.0796%" height="15" fill="rgb(231,71,53)" fg:x="1082" fg:w="1"/><text x="86.3965%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.1465%" y="469" width="0.0796%" height="15" fill="rgb(243,76,21)" fg:x="1082" fg:w="1"/><text x="86.3965%" y="479.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="86.2261%" y="517" width="0.1592%" height="15" fill="rgb(252,144,3)" fg:x="1083" fg:w="2"/><text x="86.4761%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="86.2261%" y="501" width="0.1592%" height="15" fill="rgb(231,199,10)" fg:x="1083" fg:w="2"/><text x="86.4761%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="86.2261%" y="485" width="0.1592%" height="15" fill="rgb(215,18,11)" fg:x="1083" fg:w="2"/><text x="86.4761%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="86.2261%" y="469" width="0.1592%" height="15" fill="rgb(241,65,24)" fg:x="1083" fg:w="2"/><text x="86.4761%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="86.1465%" y="533" width="0.3185%" height="15" fill="rgb(251,192,38)" fg:x="1082" fg:w="4"/><text x="86.3965%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3854%" y="517" width="0.0796%" height="15" fill="rgb(205,9,35)" fg:x="1085" fg:w="1"/><text x="86.6354%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.3854%" y="501" width="0.0796%" height="15" fill="rgb(229,225,49)" fg:x="1085" fg:w="1"/><text x="86.6354%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.3854%" y="485" width="0.0796%" height="15" fill="rgb(207,125,39)" fg:x="1085" fg:w="1"/><text x="86.6354%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="86.3854%" y="469" width="0.0796%" height="15" fill="rgb(222,78,19)" fg:x="1085" fg:w="1"/><text x="86.6354%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="86.3854%" y="453" width="0.0796%" height="15" fill="rgb(248,207,20)" fg:x="1085" fg:w="1"/><text x="86.6354%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3854%" y="437" width="0.0796%" height="15" fill="rgb(205,103,49)" fg:x="1085" fg:w="1"/><text x="86.6354%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="86.3854%" y="421" width="0.0796%" height="15" fill="rgb(216,42,28)" fg:x="1085" fg:w="1"/><text x="86.6354%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3854%" y="405" width="0.0796%" height="15" fill="rgb(213,205,53)" fg:x="1085" fg:w="1"/><text x="86.6354%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="86.3854%" y="389" width="0.0796%" height="15" fill="rgb(239,140,53)" fg:x="1085" fg:w="1"/><text x="86.6354%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3854%" y="373" width="0.0796%" height="15" fill="rgb(248,95,9)" fg:x="1085" fg:w="1"/><text x="86.6354%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.4650%" y="517" width="0.0796%" height="15" fill="rgb(254,58,47)" fg:x="1086" fg:w="1"/><text x="86.7150%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.4650%" y="501" width="0.0796%" height="15" fill="rgb(234,227,14)" fg:x="1086" fg:w="1"/><text x="86.7150%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.4650%" y="485" width="0.0796%" height="15" fill="rgb(205,192,45)" fg:x="1086" fg:w="1"/><text x="86.7150%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.4650%" y="469" width="0.0796%" height="15" fill="rgb(253,187,31)" fg:x="1086" fg:w="1"/><text x="86.7150%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.4650%" y="453" width="0.0796%" height="15" fill="rgb(222,6,32)" fg:x="1086" fg:w="1"/><text x="86.7150%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5446%" y="501" width="0.0796%" height="15" fill="rgb(249,190,19)" fg:x="1087" fg:w="1"/><text x="86.7946%" y="511.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (142 samples, 11.31%)</title><rect x="75.3981%" y="597" width="11.3057%" height="15" fill="rgb(251,28,20)" fg:x="947" fg:w="142"/><text x="75.6481%" y="607.50">&lt;tests::HoldingKe..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (7 samples, 0.56%)</title><rect x="86.1465%" y="581" width="0.5573%" height="15" fill="rgb(210,223,40)" fg:x="1082" fg:w="7"/><text x="86.3965%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="86.1465%" y="565" width="0.5573%" height="15" fill="rgb(216,137,22)" fg:x="1082" fg:w="7"/><text x="86.3965%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="86.1465%" y="549" width="0.5573%" height="15" fill="rgb(247,39,34)" fg:x="1082" fg:w="7"/><text x="86.3965%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="86.4650%" y="533" width="0.2389%" height="15" fill="rgb(239,43,50)" fg:x="1086" fg:w="3"/><text x="86.7150%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="86.5446%" y="517" width="0.1592%" height="15" fill="rgb(241,212,9)" fg:x="1087" fg:w="2"/><text x="86.7946%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.6242%" y="501" width="0.0796%" height="15" fill="rgb(205,8,2)" fg:x="1088" fg:w="1"/><text x="86.8742%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.6242%" y="485" width="0.0796%" height="15" fill="rgb(217,173,54)" fg:x="1088" fg:w="1"/><text x="86.8742%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.6242%" y="469" width="0.0796%" height="15" fill="rgb(208,149,52)" fg:x="1088" fg:w="1"/><text x="86.8742%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.6242%" y="453" width="0.0796%" height="15" fill="rgb(239,99,40)" fg:x="1088" fg:w="1"/><text x="86.8742%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.6242%" y="437" width="0.0796%" height="15" fill="rgb(233,214,26)" fg:x="1088" fg:w="1"/><text x="86.8742%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="86.7038%" y="597" width="0.0796%" height="15" fill="rgb(231,225,37)" fg:x="1089" fg:w="1"/><text x="86.9538%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="86.7038%" y="581" width="0.0796%" height="15" fill="rgb(252,55,35)" fg:x="1089" fg:w="1"/><text x="86.9538%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.7834%" y="581" width="0.0796%" height="15" fill="rgb(239,43,18)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.7834%" y="565" width="0.0796%" height="15" fill="rgb(251,125,49)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.7834%" y="549" width="0.0796%" height="15" fill="rgb(212,83,54)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.7834%" y="533" width="0.0796%" height="15" fill="rgb(250,75,6)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.7834%" y="517" width="0.0796%" height="15" fill="rgb(252,36,40)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="86.7834%" y="501" width="0.0796%" height="15" fill="rgb(230,91,51)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="86.7834%" y="485" width="0.0796%" height="15" fill="rgb(212,92,28)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.7834%" y="469" width="0.0796%" height="15" fill="rgb(227,13,22)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.7834%" y="453" width="0.0796%" height="15" fill="rgb(239,204,32)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.7834%" y="437" width="0.0796%" height="15" fill="rgb(228,49,41)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.7834%" y="421" width="0.0796%" height="15" fill="rgb(206,95,6)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.7834%" y="405" width="0.0796%" height="15" fill="rgb(251,20,14)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="86.7834%" y="389" width="0.0796%" height="15" fill="rgb(214,99,28)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="86.7834%" y="373" width="0.0796%" height="15" fill="rgb(239,122,54)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="86.7834%" y="357" width="0.0796%" height="15" fill="rgb(218,217,46)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="86.7834%" y="341" width="0.0796%" height="15" fill="rgb(249,106,28)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="86.7834%" y="325" width="0.0796%" height="15" fill="rgb(250,158,18)" fg:x="1090" fg:w="1"/><text x="87.0334%" y="335.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="86.8631%" y="581" width="0.0796%" height="15" fill="rgb(226,137,29)" fg:x="1091" fg:w="1"/><text x="87.1131%" y="591.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="86.8631%" y="565" width="0.0796%" height="15" fill="rgb(210,188,1)" fg:x="1091" fg:w="1"/><text x="87.1131%" y="575.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="86.8631%" y="549" width="0.0796%" height="15" fill="rgb(227,84,42)" fg:x="1091" fg:w="1"/><text x="87.1131%" y="559.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="86.8631%" y="533" width="0.0796%" height="15" fill="rgb(222,147,48)" fg:x="1091" fg:w="1"/><text x="87.1131%" y="543.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="86.8631%" y="517" width="0.0796%" height="15" fill="rgb(241,150,43)" fg:x="1091" fg:w="1"/><text x="87.1131%" y="527.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="86.8631%" y="501" width="0.0796%" height="15" fill="rgb(206,139,52)" fg:x="1091" fg:w="1"/><text x="87.1131%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="86.8631%" y="485" width="0.0796%" height="15" fill="rgb(230,63,14)" fg:x="1091" fg:w="1"/><text x="87.1131%" y="495.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="86.8631%" y="469" width="0.0796%" height="15" fill="rgb(247,8,20)" fg:x="1091" fg:w="1"/><text x="87.1131%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="86.9427%" y="549" width="0.1592%" height="15" fill="rgb(213,115,4)" fg:x="1092" fg:w="2"/><text x="87.1927%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="86.9427%" y="533" width="0.1592%" height="15" fill="rgb(241,79,49)" fg:x="1092" fg:w="2"/><text x="87.1927%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="86.9427%" y="517" width="0.1592%" height="15" fill="rgb(222,42,35)" fg:x="1092" fg:w="2"/><text x="87.1927%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0223%" y="501" width="0.0796%" height="15" fill="rgb(247,59,23)" fg:x="1093" fg:w="1"/><text x="87.2723%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="87.1019%" y="485" width="0.0796%" height="15" fill="rgb(247,93,18)" fg:x="1094" fg:w="1"/><text x="87.3519%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.1019%" y="469" width="0.0796%" height="15" fill="rgb(249,107,47)" fg:x="1094" fg:w="1"/><text x="87.3519%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.1019%" y="453" width="0.0796%" height="15" fill="rgb(219,27,1)" fg:x="1094" fg:w="1"/><text x="87.3519%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.1019%" y="437" width="0.0796%" height="15" fill="rgb(217,82,32)" fg:x="1094" fg:w="1"/><text x="87.3519%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.1019%" y="421" width="0.0796%" height="15" fill="rgb(250,129,47)" fg:x="1094" fg:w="1"/><text x="87.3519%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.2611%" y="469" width="0.0796%" height="15" fill="rgb(253,88,35)" fg:x="1096" fg:w="1"/><text x="87.5111%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.2611%" y="453" width="0.0796%" height="15" fill="rgb(245,221,14)" fg:x="1096" fg:w="1"/><text x="87.5111%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.2611%" y="437" width="0.0796%" height="15" fill="rgb(217,119,54)" fg:x="1096" fg:w="1"/><text x="87.5111%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.2611%" y="421" width="0.0796%" height="15" fill="rgb(247,128,31)" fg:x="1096" fg:w="1"/><text x="87.5111%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="87.3408%" y="437" width="0.1592%" height="15" fill="rgb(211,99,22)" fg:x="1097" fg:w="2"/><text x="87.5908%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.5000%" y="421" width="0.0796%" height="15" fill="rgb(212,20,17)" fg:x="1099" fg:w="1"/><text x="87.7500%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.5000%" y="405" width="0.0796%" height="15" fill="rgb(209,159,29)" fg:x="1099" fg:w="1"/><text x="87.7500%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.5000%" y="389" width="0.0796%" height="15" fill="rgb(222,177,53)" fg:x="1099" fg:w="1"/><text x="87.7500%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.5000%" y="373" width="0.0796%" height="15" fill="rgb(234,46,43)" fg:x="1099" fg:w="1"/><text x="87.7500%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="87.5000%" y="437" width="0.2389%" height="15" fill="rgb(208,108,14)" fg:x="1099" fg:w="3"/><text x="87.7500%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="87.5796%" y="421" width="0.1592%" height="15" fill="rgb(226,78,53)" fg:x="1100" fg:w="2"/><text x="87.8296%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.6592%" y="405" width="0.0796%" height="15" fill="rgb(230,20,41)" fg:x="1101" fg:w="1"/><text x="87.9092%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.6592%" y="389" width="0.0796%" height="15" fill="rgb(213,195,35)" fg:x="1101" fg:w="1"/><text x="87.9092%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="87.3408%" y="453" width="0.5573%" height="15" fill="rgb(242,62,36)" fg:x="1097" fg:w="7"/><text x="87.5908%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.7389%" y="437" width="0.1592%" height="15" fill="rgb(222,210,37)" fg:x="1102" fg:w="2"/><text x="87.9889%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.8185%" y="421" width="0.0796%" height="15" fill="rgb(232,107,19)" fg:x="1103" fg:w="1"/><text x="88.0685%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.8185%" y="405" width="0.0796%" height="15" fill="rgb(235,85,17)" fg:x="1103" fg:w="1"/><text x="88.0685%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="87.3408%" y="469" width="0.6369%" height="15" fill="rgb(219,195,31)" fg:x="1097" fg:w="8"/><text x="87.5908%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.8981%" y="453" width="0.0796%" height="15" fill="rgb(231,183,30)" fg:x="1104" fg:w="1"/><text x="88.1481%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="87.1815%" y="485" width="0.9554%" height="15" fill="rgb(212,0,11)" fg:x="1095" fg:w="12"/><text x="87.4315%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.9777%" y="469" width="0.1592%" height="15" fill="rgb(249,53,54)" fg:x="1105" fg:w="2"/><text x="88.2277%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="87.9777%" y="453" width="0.1592%" height="15" fill="rgb(211,118,13)" fg:x="1105" fg:w="2"/><text x="88.2277%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="87.9777%" y="437" width="0.1592%" height="15" fill="rgb(237,42,9)" fg:x="1105" fg:w="2"/><text x="88.2277%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.0573%" y="421" width="0.0796%" height="15" fill="rgb(227,68,32)" fg:x="1106" fg:w="1"/><text x="88.3073%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.0573%" y="405" width="0.0796%" height="15" fill="rgb(238,10,7)" fg:x="1106" fg:w="1"/><text x="88.3073%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.0573%" y="389" width="0.0796%" height="15" fill="rgb(224,42,12)" fg:x="1106" fg:w="1"/><text x="88.3073%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.11%)</title><rect x="87.1019%" y="501" width="1.1146%" height="15" fill="rgb(252,190,5)" fg:x="1094" fg:w="14"/><text x="87.3519%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.1369%" y="485" width="0.0796%" height="15" fill="rgb(220,214,39)" fg:x="1107" fg:w="1"/><text x="88.3869%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.1369%" y="469" width="0.0796%" height="15" fill="rgb(247,98,4)" fg:x="1107" fg:w="1"/><text x="88.3869%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.1369%" y="453" width="0.0796%" height="15" fill="rgb(211,60,12)" fg:x="1107" fg:w="1"/><text x="88.3869%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="88.2166%" y="469" width="0.1592%" height="15" fill="rgb(224,42,10)" fg:x="1108" fg:w="2"/><text x="88.4666%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.2962%" y="453" width="0.0796%" height="15" fill="rgb(217,167,4)" fg:x="1109" fg:w="1"/><text x="88.5462%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="88.3758%" y="453" width="0.1592%" height="15" fill="rgb(253,18,17)" fg:x="1110" fg:w="2"/><text x="88.6258%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="88.2166%" y="501" width="0.3981%" height="15" fill="rgb(249,186,44)" fg:x="1108" fg:w="5"/><text x="88.4666%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="88.2166%" y="485" width="0.3981%" height="15" fill="rgb(254,124,54)" fg:x="1108" fg:w="5"/><text x="88.4666%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.3758%" y="469" width="0.2389%" height="15" fill="rgb(220,124,39)" fg:x="1110" fg:w="3"/><text x="88.6258%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.5350%" y="453" width="0.0796%" height="15" fill="rgb(225,96,46)" fg:x="1112" fg:w="1"/><text x="88.7850%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.5350%" y="437" width="0.0796%" height="15" fill="rgb(221,106,12)" fg:x="1112" fg:w="1"/><text x="88.7850%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.5350%" y="421" width="0.0796%" height="15" fill="rgb(227,133,23)" fg:x="1112" fg:w="1"/><text x="88.7850%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5350%" y="405" width="0.0796%" height="15" fill="rgb(216,44,52)" fg:x="1112" fg:w="1"/><text x="88.7850%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6146%" y="421" width="0.0796%" height="15" fill="rgb(239,149,7)" fg:x="1113" fg:w="1"/><text x="88.8646%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7739%" y="389" width="0.0796%" height="15" fill="rgb(211,157,31)" fg:x="1115" fg:w="1"/><text x="89.0239%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="88.8535%" y="389" width="0.1592%" height="15" fill="rgb(206,215,22)" fg:x="1116" fg:w="2"/><text x="89.1035%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="88.8535%" y="373" width="0.1592%" height="15" fill="rgb(208,113,15)" fg:x="1116" fg:w="2"/><text x="89.1035%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (8 samples, 0.64%)</title><rect x="88.6146%" y="485" width="0.6369%" height="15" fill="rgb(207,189,15)" fg:x="1113" fg:w="8"/><text x="88.8646%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="88.6146%" y="469" width="0.6369%" height="15" fill="rgb(231,115,4)" fg:x="1113" fg:w="8"/><text x="88.8646%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="88.6146%" y="453" width="0.6369%" height="15" fill="rgb(253,117,2)" fg:x="1113" fg:w="8"/><text x="88.8646%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="88.6146%" y="437" width="0.6369%" height="15" fill="rgb(248,48,24)" fg:x="1113" fg:w="8"/><text x="88.8646%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="88.6943%" y="421" width="0.5573%" height="15" fill="rgb(241,28,46)" fg:x="1114" fg:w="7"/><text x="88.9443%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="88.6943%" y="405" width="0.5573%" height="15" fill="rgb(216,165,52)" fg:x="1114" fg:w="7"/><text x="88.9443%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="89.0127%" y="389" width="0.2389%" height="15" fill="rgb(220,222,34)" fg:x="1118" fg:w="3"/><text x="89.2627%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="89.0127%" y="373" width="0.2389%" height="15" fill="rgb(247,222,49)" fg:x="1118" fg:w="3"/><text x="89.2627%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="89.0127%" y="357" width="0.2389%" height="15" fill="rgb(240,10,31)" fg:x="1118" fg:w="3"/><text x="89.2627%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.0924%" y="341" width="0.1592%" height="15" fill="rgb(221,199,35)" fg:x="1119" fg:w="2"/><text x="89.3424%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3312%" y="453" width="0.0796%" height="15" fill="rgb(230,223,11)" fg:x="1122" fg:w="1"/><text x="89.5812%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="89.4108%" y="453" width="0.3981%" height="15" fill="rgb(218,82,45)" fg:x="1123" fg:w="5"/><text x="89.6608%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.6497%" y="437" width="0.1592%" height="15" fill="rgb(233,213,33)" fg:x="1126" fg:w="2"/><text x="89.8997%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.7293%" y="421" width="0.0796%" height="15" fill="rgb(210,143,52)" fg:x="1127" fg:w="1"/><text x="89.9793%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="89.8089%" y="453" width="0.0796%" height="15" fill="rgb(206,95,4)" fg:x="1128" fg:w="1"/><text x="90.0589%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.8089%" y="437" width="0.0796%" height="15" fill="rgb(246,164,46)" fg:x="1128" fg:w="1"/><text x="90.0589%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8089%" y="421" width="0.0796%" height="15" fill="rgb(213,210,47)" fg:x="1128" fg:w="1"/><text x="90.0589%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2070%" y="405" width="0.0796%" height="15" fill="rgb(210,12,38)" fg:x="1133" fg:w="1"/><text x="90.4570%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2070%" y="389" width="0.0796%" height="15" fill="rgb(252,192,54)" fg:x="1133" fg:w="1"/><text x="90.4570%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2070%" y="373" width="0.0796%" height="15" fill="rgb(242,92,6)" fg:x="1133" fg:w="1"/><text x="90.4570%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4459%" y="373" width="0.0796%" height="15" fill="rgb(253,154,15)" fg:x="1136" fg:w="1"/><text x="90.6959%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.5255%" y="357" width="0.1592%" height="15" fill="rgb(209,20,43)" fg:x="1137" fg:w="2"/><text x="90.7755%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.5255%" y="341" width="0.1592%" height="15" fill="rgb(232,28,49)" fg:x="1137" fg:w="2"/><text x="90.7755%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.5255%" y="325" width="0.1592%" height="15" fill="rgb(248,131,53)" fg:x="1137" fg:w="2"/><text x="90.7755%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="90.5255%" y="309" width="0.1592%" height="15" fill="rgb(214,16,30)" fg:x="1137" fg:w="2"/><text x="90.7755%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="90.3662%" y="389" width="0.3981%" height="15" fill="rgb(245,16,0)" fg:x="1135" fg:w="5"/><text x="90.6162%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="90.5255%" y="373" width="0.2389%" height="15" fill="rgb(245,17,35)" fg:x="1137" fg:w="3"/><text x="90.7755%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.6847%" y="357" width="0.0796%" height="15" fill="rgb(249,27,53)" fg:x="1139" fg:w="1"/><text x="90.9347%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.88%)</title><rect x="89.9682%" y="437" width="0.8758%" height="15" fill="rgb(214,73,24)" fg:x="1130" fg:w="11"/><text x="90.2182%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="90.1274%" y="421" width="0.7166%" height="15" fill="rgb(223,84,37)" fg:x="1132" fg:w="9"/><text x="90.3774%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="90.2866%" y="405" width="0.5573%" height="15" fill="rgb(210,109,28)" fg:x="1134" fg:w="7"/><text x="90.5366%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7643%" y="389" width="0.0796%" height="15" fill="rgb(208,186,6)" fg:x="1140" fg:w="1"/><text x="91.0143%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (21 samples, 1.67%)</title><rect x="89.2516%" y="485" width="1.6720%" height="15" fill="rgb(235,201,30)" fg:x="1121" fg:w="21"/><text x="89.5016%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 1.67%)</title><rect x="89.2516%" y="469" width="1.6720%" height="15" fill="rgb(216,198,48)" fg:x="1121" fg:w="21"/><text x="89.5016%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.04%)</title><rect x="89.8885%" y="453" width="1.0350%" height="15" fill="rgb(254,186,25)" fg:x="1129" fg:w="13"/><text x="90.1385%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8439%" y="437" width="0.0796%" height="15" fill="rgb(227,87,5)" fg:x="1141" fg:w="1"/><text x="91.0939%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="91.0032%" y="325" width="0.1592%" height="15" fill="rgb(236,205,25)" fg:x="1143" fg:w="2"/><text x="91.2532%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.0032%" y="309" width="0.1592%" height="15" fill="rgb(229,99,32)" fg:x="1143" fg:w="2"/><text x="91.2532%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.1624%" y="325" width="0.0796%" height="15" fill="rgb(231,177,31)" fg:x="1145" fg:w="1"/><text x="91.4124%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1624%" y="309" width="0.0796%" height="15" fill="rgb(246,15,2)" fg:x="1145" fg:w="1"/><text x="91.4124%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="91.0032%" y="357" width="0.3185%" height="15" fill="rgb(207,39,15)" fg:x="1143" fg:w="4"/><text x="91.2532%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="91.0032%" y="341" width="0.3185%" height="15" fill="rgb(207,44,9)" fg:x="1143" fg:w="4"/><text x="91.2532%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2420%" y="325" width="0.0796%" height="15" fill="rgb(225,224,33)" fg:x="1146" fg:w="1"/><text x="91.4920%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2420%" y="309" width="0.0796%" height="15" fill="rgb(252,151,3)" fg:x="1146" fg:w="1"/><text x="91.4920%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="91.0032%" y="389" width="0.3981%" height="15" fill="rgb(211,140,13)" fg:x="1143" fg:w="5"/><text x="91.2532%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="91.0032%" y="373" width="0.3981%" height="15" fill="rgb(239,225,17)" fg:x="1143" fg:w="5"/><text x="91.2532%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.3217%" y="357" width="0.0796%" height="15" fill="rgb(223,170,52)" fg:x="1147" fg:w="1"/><text x="91.5717%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.3217%" y="341" width="0.0796%" height="15" fill="rgb(212,64,21)" fg:x="1147" fg:w="1"/><text x="91.5717%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.3217%" y="325" width="0.0796%" height="15" fill="rgb(236,126,48)" fg:x="1147" fg:w="1"/><text x="91.5717%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="90.9236%" y="421" width="0.5573%" height="15" fill="rgb(209,135,11)" fg:x="1142" fg:w="7"/><text x="91.1736%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="91.0032%" y="405" width="0.4777%" height="15" fill="rgb(228,126,40)" fg:x="1143" fg:w="6"/><text x="91.2532%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4013%" y="389" width="0.0796%" height="15" fill="rgb(205,196,36)" fg:x="1148" fg:w="1"/><text x="91.6513%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4013%" y="373" width="0.0796%" height="15" fill="rgb(243,160,33)" fg:x="1148" fg:w="1"/><text x="91.6513%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4013%" y="357" width="0.0796%" height="15" fill="rgb(210,84,20)" fg:x="1148" fg:w="1"/><text x="91.6513%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.4809%" y="421" width="0.0796%" height="15" fill="rgb(228,213,30)" fg:x="1149" fg:w="1"/><text x="91.7309%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4809%" y="405" width="0.0796%" height="15" fill="rgb(252,33,45)" fg:x="1149" fg:w="1"/><text x="91.7309%" y="415.50"></text></g><g><title>engine::session::Session::close (62 samples, 4.94%)</title><rect x="86.7834%" y="597" width="4.9363%" height="15" fill="rgb(254,227,20)" fg:x="1090" fg:w="62"/><text x="87.0334%" y="607.50">engine..</text></g><g><title>engine::session::state::State::close (60 samples, 4.78%)</title><rect x="86.9427%" y="581" width="4.7771%" height="15" fill="rgb(228,192,2)" fg:x="1092" fg:w="60"/><text x="87.1927%" y="591.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (60 samples, 4.78%)</title><rect x="86.9427%" y="565" width="4.7771%" height="15" fill="rgb(233,32,8)" fg:x="1092" fg:w="60"/><text x="87.1927%" y="575.50">engine..</text></g><g><title>core::iter::adapters::try_process (58 samples, 4.62%)</title><rect x="87.1019%" y="549" width="4.6178%" height="15" fill="rgb(220,146,47)" fg:x="1094" fg:w="58"/><text x="87.3519%" y="559.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (58 samples, 4.62%)</title><rect x="87.1019%" y="533" width="4.6178%" height="15" fill="rgb(246,194,1)" fg:x="1094" fg:w="58"/><text x="87.3519%" y="543.50">&lt;allo..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (58 samples, 4.62%)</title><rect x="87.1019%" y="517" width="4.6178%" height="15" fill="rgb(218,203,9)" fg:x="1094" fg:w="58"/><text x="87.3519%" y="527.50">engin..</text></g><g><title>kernel::model::any_entity_changes (39 samples, 3.11%)</title><rect x="88.6146%" y="501" width="3.1051%" height="15" fill="rgb(237,97,14)" fg:x="1113" fg:w="39"/><text x="88.8646%" y="511.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.80%)</title><rect x="90.9236%" y="485" width="0.7962%" height="15" fill="rgb(239,76,15)" fg:x="1142" fg:w="10"/><text x="91.1736%" y="495.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.80%)</title><rect x="90.9236%" y="469" width="0.7962%" height="15" fill="rgb(222,53,45)" fg:x="1142" fg:w="10"/><text x="91.1736%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="90.9236%" y="453" width="0.7962%" height="15" fill="rgb(237,88,5)" fg:x="1142" fg:w="10"/><text x="91.1736%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="90.9236%" y="437" width="0.7962%" height="15" fill="rgb(218,223,35)" fg:x="1142" fg:w="10"/><text x="91.1736%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.5605%" y="421" width="0.1592%" height="15" fill="rgb(243,229,38)" fg:x="1150" fg:w="2"/><text x="91.8105%" y="431.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="91.9586%" y="501" width="0.0796%" height="15" fill="rgb(240,75,41)" fg:x="1155" fg:w="1"/><text x="92.2086%" y="511.50"></text></g><g><title>&lt;core::char::ToUppercase as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.08%)</title><rect x="92.0382%" y="325" width="0.0796%" height="15" fill="rgb(209,110,37)" fg:x="1156" fg:w="1"/><text x="92.2882%" y="335.50"></text></g><g><title>&lt;replies::AreaObservation as replies::ToTaggedJson&gt;::to_tagged_json (3 samples, 0.24%)</title><rect x="92.0382%" y="341" width="0.2389%" height="15" fill="rgb(221,130,46)" fg:x="1156" fg:w="3"/><text x="92.2882%" y="351.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::AreaObservation&gt;::serialize (2 samples, 0.16%)</title><rect x="92.1178%" y="325" width="0.1592%" height="15" fill="rgb(237,160,20)" fg:x="1157" fg:w="2"/><text x="92.3678%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="92.1975%" y="309" width="0.0796%" height="15" fill="rgb(234,126,24)" fg:x="1158" fg:w="1"/><text x="92.4475%" y="319.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (1 samples, 0.08%)</title><rect x="92.1975%" y="293" width="0.0796%" height="15" fill="rgb(207,177,9)" fg:x="1158" fg:w="1"/><text x="92.4475%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="92.1975%" y="277" width="0.0796%" height="15" fill="rgb(231,191,33)" fg:x="1158" fg:w="1"/><text x="92.4475%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1975%" y="261" width="0.0796%" height="15" fill="rgb(207,42,1)" fg:x="1158" fg:w="1"/><text x="92.4475%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1975%" y="245" width="0.0796%" height="15" fill="rgb(218,34,50)" fg:x="1158" fg:w="1"/><text x="92.4475%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1975%" y="229" width="0.0796%" height="15" fill="rgb(254,126,39)" fg:x="1158" fg:w="1"/><text x="92.4475%" y="239.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::AreaObservation&gt;&gt;::try_from (4 samples, 0.32%)</title><rect x="92.0382%" y="357" width="0.3185%" height="15" fill="rgb(251,17,26)" fg:x="1156" fg:w="4"/><text x="92.2882%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (1 samples, 0.08%)</title><rect x="92.2771%" y="341" width="0.0796%" height="15" fill="rgb(252,215,34)" fg:x="1159" fg:w="1"/><text x="92.5271%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="92.2771%" y="325" width="0.0796%" height="15" fill="rgb(217,120,44)" fg:x="1159" fg:w="1"/><text x="92.5271%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.2771%" y="309" width="0.0796%" height="15" fill="rgb(211,31,11)" fg:x="1159" fg:w="1"/><text x="92.5271%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4363%" y="261" width="0.0796%" height="15" fill="rgb(222,69,51)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4363%" y="245" width="0.0796%" height="15" fill="rgb(215,229,42)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4363%" y="229" width="0.0796%" height="15" fill="rgb(212,102,15)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.4363%" y="213" width="0.0796%" height="15" fill="rgb(205,179,41)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.4363%" y="197" width="0.0796%" height="15" fill="rgb(219,148,46)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.4363%" y="181" width="0.0796%" height="15" fill="rgb(243,40,19)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.4363%" y="165" width="0.0796%" height="15" fill="rgb(208,206,34)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.4363%" y="149" width="0.0796%" height="15" fill="rgb(244,184,38)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.4363%" y="133" width="0.0796%" height="15" fill="rgb(244,151,47)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.4363%" y="117" width="0.0796%" height="15" fill="rgb(236,134,42)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.4363%" y="101" width="0.0796%" height="15" fill="rgb(233,93,22)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.4363%" y="85" width="0.0796%" height="15" fill="rgb(211,202,10)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.4363%" y="69" width="0.0796%" height="15" fill="rgb(240,63,8)" fg:x="1161" fg:w="1"/><text x="92.6863%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.4363%" y="293" width="0.1592%" height="15" fill="rgb(214,9,4)" fg:x="1161" fg:w="2"/><text x="92.6863%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.4363%" y="277" width="0.1592%" height="15" fill="rgb(243,66,45)" fg:x="1161" fg:w="2"/><text x="92.6863%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5159%" y="261" width="0.0796%" height="15" fill="rgb(220,50,42)" fg:x="1162" fg:w="1"/><text x="92.7659%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5955%" y="229" width="0.0796%" height="15" fill="rgb(220,134,27)" fg:x="1163" fg:w="1"/><text x="92.8455%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5955%" y="213" width="0.0796%" height="15" fill="rgb(246,151,50)" fg:x="1163" fg:w="1"/><text x="92.8455%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (6 samples, 0.48%)</title><rect x="92.3567%" y="325" width="0.4777%" height="15" fill="rgb(238,216,27)" fg:x="1160" fg:w="6"/><text x="92.6067%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="92.3567%" y="309" width="0.4777%" height="15" fill="rgb(250,92,11)" fg:x="1160" fg:w="6"/><text x="92.6067%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="92.5955%" y="293" width="0.2389%" height="15" fill="rgb(248,183,6)" fg:x="1163" fg:w="3"/><text x="92.8455%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.5955%" y="277" width="0.2389%" height="15" fill="rgb(211,204,50)" fg:x="1163" fg:w="3"/><text x="92.8455%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="92.5955%" y="261" width="0.2389%" height="15" fill="rgb(252,55,47)" fg:x="1163" fg:w="3"/><text x="92.8455%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.5955%" y="245" width="0.2389%" height="15" fill="rgb(240,198,32)" fg:x="1163" fg:w="3"/><text x="92.8455%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.6752%" y="229" width="0.1592%" height="15" fill="rgb(224,203,19)" fg:x="1164" fg:w="2"/><text x="92.9252%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.6752%" y="213" width="0.1592%" height="15" fill="rgb(205,27,16)" fg:x="1164" fg:w="2"/><text x="92.9252%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.9936%" y="293" width="0.0796%" height="15" fill="rgb(224,226,17)" fg:x="1168" fg:w="1"/><text x="93.2436%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.9936%" y="277" width="0.0796%" height="15" fill="rgb(205,216,54)" fg:x="1168" fg:w="1"/><text x="93.2436%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.9936%" y="261" width="0.0796%" height="15" fill="rgb(248,168,46)" fg:x="1168" fg:w="1"/><text x="93.2436%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.1529%" y="197" width="0.0796%" height="15" fill="rgb(226,111,45)" fg:x="1170" fg:w="1"/><text x="93.4029%" y="207.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (12 samples, 0.96%)</title><rect x="92.3567%" y="341" width="0.9554%" height="15" fill="rgb(231,15,9)" fg:x="1160" fg:w="12"/><text x="92.6067%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="92.8344%" y="325" width="0.4777%" height="15" fill="rgb(243,168,3)" fg:x="1166" fg:w="6"/><text x="93.0844%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="92.8344%" y="309" width="0.4777%" height="15" fill="rgb(221,220,54)" fg:x="1166" fg:w="6"/><text x="93.0844%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.0732%" y="293" width="0.2389%" height="15" fill="rgb(232,174,38)" fg:x="1169" fg:w="3"/><text x="93.3232%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.0732%" y="277" width="0.2389%" height="15" fill="rgb(205,14,38)" fg:x="1169" fg:w="3"/><text x="93.3232%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="93.0732%" y="261" width="0.2389%" height="15" fill="rgb(234,89,19)" fg:x="1169" fg:w="3"/><text x="93.3232%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.0732%" y="245" width="0.2389%" height="15" fill="rgb(216,68,51)" fg:x="1169" fg:w="3"/><text x="93.3232%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.0732%" y="229" width="0.2389%" height="15" fill="rgb(213,49,2)" fg:x="1169" fg:w="3"/><text x="93.3232%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.0732%" y="213" width="0.2389%" height="15" fill="rgb(242,146,30)" fg:x="1169" fg:w="3"/><text x="93.3232%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.2325%" y="197" width="0.0796%" height="15" fill="rgb(224,188,11)" fg:x="1171" fg:w="1"/><text x="93.4825%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.2325%" y="181" width="0.0796%" height="15" fill="rgb(213,159,11)" fg:x="1171" fg:w="1"/><text x="93.4825%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.3121%" y="341" width="0.0796%" height="15" fill="rgb(229,13,31)" fg:x="1172" fg:w="1"/><text x="93.5621%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.4713%" y="277" width="0.0796%" height="15" fill="rgb(209,103,11)" fg:x="1174" fg:w="1"/><text x="93.7213%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="93.5510%" y="261" width="0.3185%" height="15" fill="rgb(206,3,4)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="93.5510%" y="245" width="0.3185%" height="15" fill="rgb(252,10,49)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="93.5510%" y="229" width="0.3185%" height="15" fill="rgb(217,160,32)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="93.5510%" y="213" width="0.3185%" height="15" fill="rgb(249,196,0)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="93.5510%" y="197" width="0.3185%" height="15" fill="rgb(213,17,48)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="93.5510%" y="181" width="0.3185%" height="15" fill="rgb(206,42,46)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="93.5510%" y="165" width="0.3185%" height="15" fill="rgb(212,105,24)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="93.5510%" y="149" width="0.3185%" height="15" fill="rgb(243,216,30)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="93.5510%" y="133" width="0.3185%" height="15" fill="rgb(207,121,3)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="93.5510%" y="117" width="0.3185%" height="15" fill="rgb(249,78,0)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="93.5510%" y="101" width="0.3185%" height="15" fill="rgb(244,151,32)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="93.5510%" y="85" width="0.3185%" height="15" fill="rgb(228,63,25)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="93.5510%" y="69" width="0.3185%" height="15" fill="rgb(231,158,23)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="79.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="93.5510%" y="53" width="0.3185%" height="15" fill="rgb(248,107,23)" fg:x="1175" fg:w="4"/><text x="93.8010%" y="63.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="93.6306%" y="37" width="0.2389%" height="15" fill="rgb(215,168,21)" fg:x="1176" fg:w="3"/><text x="93.8806%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="93.4713%" y="293" width="0.4777%" height="15" fill="rgb(227,83,22)" fg:x="1174" fg:w="6"/><text x="93.7213%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="93.5510%" y="277" width="0.3981%" height="15" fill="rgb(217,118,43)" fg:x="1175" fg:w="5"/><text x="93.8010%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8694%" y="261" width="0.0796%" height="15" fill="rgb(229,220,41)" fg:x="1179" fg:w="1"/><text x="94.1194%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8694%" y="245" width="0.0796%" height="15" fill="rgb(254,146,46)" fg:x="1179" fg:w="1"/><text x="94.1194%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.8694%" y="229" width="0.0796%" height="15" fill="rgb(233,208,31)" fg:x="1179" fg:w="1"/><text x="94.1194%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8694%" y="213" width="0.0796%" height="15" fill="rgb(222,162,7)" fg:x="1179" fg:w="1"/><text x="94.1194%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8694%" y="197" width="0.0796%" height="15" fill="rgb(230,117,45)" fg:x="1179" fg:w="1"/><text x="94.1194%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8694%" y="181" width="0.0796%" height="15" fill="rgb(239,163,6)" fg:x="1179" fg:w="1"/><text x="94.1194%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.8694%" y="165" width="0.0796%" height="15" fill="rgb(246,130,17)" fg:x="1179" fg:w="1"/><text x="94.1194%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.9490%" y="261" width="0.1592%" height="15" fill="rgb(216,84,5)" fg:x="1180" fg:w="2"/><text x="94.1990%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.9490%" y="245" width="0.1592%" height="15" fill="rgb(230,200,21)" fg:x="1180" fg:w="2"/><text x="94.1990%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.9490%" y="229" width="0.1592%" height="15" fill="rgb(224,2,8)" fg:x="1180" fg:w="2"/><text x="94.1990%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0287%" y="213" width="0.0796%" height="15" fill="rgb(238,178,10)" fg:x="1181" fg:w="1"/><text x="94.2787%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0287%" y="197" width="0.0796%" height="15" fill="rgb(242,153,24)" fg:x="1181" fg:w="1"/><text x="94.2787%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.0287%" y="181" width="0.0796%" height="15" fill="rgb(242,32,48)" fg:x="1181" fg:w="1"/><text x="94.2787%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.0287%" y="165" width="0.0796%" height="15" fill="rgb(227,36,0)" fg:x="1181" fg:w="1"/><text x="94.2787%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.0287%" y="149" width="0.0796%" height="15" fill="rgb(251,33,35)" fg:x="1181" fg:w="1"/><text x="94.2787%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0287%" y="133" width="0.0796%" height="15" fill="rgb(232,168,51)" fg:x="1181" fg:w="1"/><text x="94.2787%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0287%" y="117" width="0.0796%" height="15" fill="rgb(228,56,10)" fg:x="1181" fg:w="1"/><text x="94.2787%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.0287%" y="101" width="0.0796%" height="15" fill="rgb(231,10,26)" fg:x="1181" fg:w="1"/><text x="94.2787%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.0287%" y="85" width="0.0796%" height="15" fill="rgb(226,202,12)" fg:x="1181" fg:w="1"/><text x="94.2787%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.0287%" y="69" width="0.0796%" height="15" fill="rgb(251,49,21)" fg:x="1181" fg:w="1"/><text x="94.2787%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.0287%" y="53" width="0.0796%" height="15" fill="rgb(206,228,28)" fg:x="1181" fg:w="1"/><text x="94.2787%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.0287%" y="37" width="0.0796%" height="15" fill="rgb(205,198,31)" fg:x="1181" fg:w="1"/><text x="94.2787%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="93.9490%" y="293" width="0.2389%" height="15" fill="rgb(213,69,1)" fg:x="1180" fg:w="3"/><text x="94.1990%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="93.9490%" y="277" width="0.2389%" height="15" fill="rgb(209,177,9)" fg:x="1180" fg:w="3"/><text x="94.1990%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.1083%" y="261" width="0.0796%" height="15" fill="rgb(227,119,30)" fg:x="1182" fg:w="1"/><text x="94.3583%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1083%" y="245" width="0.0796%" height="15" fill="rgb(234,106,41)" fg:x="1182" fg:w="1"/><text x="94.3583%" y="255.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (11 samples, 0.88%)</title><rect x="93.3917%" y="341" width="0.8758%" height="15" fill="rgb(244,103,47)" fg:x="1173" fg:w="11"/><text x="93.6417%" y="351.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (10 samples, 0.80%)</title><rect x="93.4713%" y="325" width="0.7962%" height="15" fill="rgb(212,211,25)" fg:x="1174" fg:w="10"/><text x="93.7213%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::new (10 samples, 0.80%)</title><rect x="93.4713%" y="309" width="0.7962%" height="15" fill="rgb(208,63,53)" fg:x="1174" fg:w="10"/><text x="93.7213%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="94.1879%" y="293" width="0.0796%" height="15" fill="rgb(213,176,21)" fg:x="1183" fg:w="1"/><text x="94.4379%" y="303.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="94.1879%" y="277" width="0.0796%" height="15" fill="rgb(243,124,12)" fg:x="1183" fg:w="1"/><text x="94.4379%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="94.1879%" y="261" width="0.0796%" height="15" fill="rgb(239,2,35)" fg:x="1183" fg:w="1"/><text x="94.4379%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.1879%" y="245" width="0.0796%" height="15" fill="rgb(253,169,22)" fg:x="1183" fg:w="1"/><text x="94.4379%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="94.2675%" y="341" width="0.0796%" height="15" fill="rgb(254,51,12)" fg:x="1184" fg:w="1"/><text x="94.5175%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="94.2675%" y="325" width="0.0796%" height="15" fill="rgb(244,17,47)" fg:x="1184" fg:w="1"/><text x="94.5175%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="94.3471%" y="341" width="0.0796%" height="15" fill="rgb(251,45,46)" fg:x="1185" fg:w="1"/><text x="94.5971%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="94.3471%" y="325" width="0.0796%" height="15" fill="rgb(223,87,43)" fg:x="1185" fg:w="1"/><text x="94.5971%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3471%" y="309" width="0.0796%" height="15" fill="rgb(230,132,31)" fg:x="1185" fg:w="1"/><text x="94.5971%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4268%" y="309" width="0.0796%" height="15" fill="rgb(206,99,1)" fg:x="1186" fg:w="1"/><text x="94.6768%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4268%" y="293" width="0.0796%" height="15" fill="rgb(227,110,25)" fg:x="1186" fg:w="1"/><text x="94.6768%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4268%" y="277" width="0.0796%" height="15" fill="rgb(217,182,7)" fg:x="1186" fg:w="1"/><text x="94.6768%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.4268%" y="261" width="0.0796%" height="15" fill="rgb(250,176,4)" fg:x="1186" fg:w="1"/><text x="94.6768%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5064%" y="309" width="0.0796%" height="15" fill="rgb(244,98,30)" fg:x="1187" fg:w="1"/><text x="94.7564%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (35 samples, 2.79%)</title><rect x="91.8790%" y="565" width="2.7866%" height="15" fill="rgb(228,150,42)" fg:x="1154" fg:w="35"/><text x="92.1290%" y="575.50">&lt;e..</text></g><g><title>kernel::plugins::mw::apply_middleware (35 samples, 2.79%)</title><rect x="91.8790%" y="549" width="2.7866%" height="15" fill="rgb(231,91,46)" fg:x="1154" fg:w="35"/><text x="92.1290%" y="559.50">ke..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (34 samples, 2.71%)</title><rect x="91.9586%" y="533" width="2.7070%" height="15" fill="rgb(252,161,32)" fg:x="1155" fg:w="34"/><text x="92.2086%" y="543.50">ke..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (34 samples, 2.71%)</title><rect x="91.9586%" y="517" width="2.7070%" height="15" fill="rgb(236,69,41)" fg:x="1155" fg:w="34"/><text x="92.2086%" y="527.50">&lt;e..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (33 samples, 2.63%)</title><rect x="92.0382%" y="501" width="2.6274%" height="15" fill="rgb(212,160,3)" fg:x="1156" fg:w="33"/><text x="92.2882%" y="511.50">ke..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (33 samples, 2.63%)</title><rect x="92.0382%" y="485" width="2.6274%" height="15" fill="rgb(216,5,50)" fg:x="1156" fg:w="33"/><text x="92.2882%" y="495.50">&lt;p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (33 samples, 2.63%)</title><rect x="92.0382%" y="469" width="2.6274%" height="15" fill="rgb(241,138,25)" fg:x="1156" fg:w="33"/><text x="92.2882%" y="479.50">ke..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (33 samples, 2.63%)</title><rect x="92.0382%" y="453" width="2.6274%" height="15" fill="rgb(239,42,18)" fg:x="1156" fg:w="33"/><text x="92.2882%" y="463.50">co..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (33 samples, 2.63%)</title><rect x="92.0382%" y="437" width="2.6274%" height="15" fill="rgb(239,40,7)" fg:x="1156" fg:w="33"/><text x="92.2882%" y="447.50">ke..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (33 samples, 2.63%)</title><rect x="92.0382%" y="421" width="2.6274%" height="15" fill="rgb(239,11,31)" fg:x="1156" fg:w="33"/><text x="92.2882%" y="431.50">co..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (33 samples, 2.63%)</title><rect x="92.0382%" y="405" width="2.6274%" height="15" fill="rgb(224,77,40)" fg:x="1156" fg:w="33"/><text x="92.2882%" y="415.50">&lt;a..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (33 samples, 2.63%)</title><rect x="92.0382%" y="389" width="2.6274%" height="15" fill="rgb(226,15,5)" fg:x="1156" fg:w="33"/><text x="92.2882%" y="399.50">&lt;e..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (33 samples, 2.63%)</title><rect x="92.0382%" y="373" width="2.6274%" height="15" fill="rgb(254,188,5)" fg:x="1156" fg:w="33"/><text x="92.2882%" y="383.50">&lt;p..</text></g><g><title>plugins_core::looking::model::new_area_observation (29 samples, 2.31%)</title><rect x="92.3567%" y="357" width="2.3089%" height="15" fill="rgb(241,148,52)" fg:x="1160" fg:w="29"/><text x="92.6067%" y="367.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="94.4268%" y="341" width="0.2389%" height="15" fill="rgb(251,48,36)" fg:x="1186" fg:w="3"/><text x="94.6768%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="94.4268%" y="325" width="0.2389%" height="15" fill="rgb(243,83,13)" fg:x="1186" fg:w="3"/><text x="94.6768%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.5860%" y="309" width="0.0796%" height="15" fill="rgb(210,105,0)" fg:x="1188" fg:w="1"/><text x="94.8360%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.5860%" y="293" width="0.0796%" height="15" fill="rgb(239,60,36)" fg:x="1188" fg:w="1"/><text x="94.8360%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5860%" y="277" width="0.0796%" height="15" fill="rgb(210,20,0)" fg:x="1188" fg:w="1"/><text x="94.8360%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="94.7452%" y="501" width="0.2389%" height="15" fill="rgb(244,26,53)" fg:x="1190" fg:w="3"/><text x="94.9952%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.8248%" y="485" width="0.1592%" height="15" fill="rgb(240,100,49)" fg:x="1191" fg:w="2"/><text x="95.0748%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9045%" y="469" width="0.0796%" height="15" fill="rgb(250,46,45)" fg:x="1192" fg:w="1"/><text x="95.1545%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9045%" y="453" width="0.0796%" height="15" fill="rgb(220,181,29)" fg:x="1192" fg:w="1"/><text x="95.1545%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9045%" y="437" width="0.0796%" height="15" fill="rgb(213,137,33)" fg:x="1192" fg:w="1"/><text x="95.1545%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.9841%" y="501" width="0.0796%" height="15" fill="rgb(213,27,48)" fg:x="1193" fg:w="1"/><text x="95.2341%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.9841%" y="485" width="0.0796%" height="15" fill="rgb(245,180,39)" fg:x="1193" fg:w="1"/><text x="95.2341%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9841%" y="469" width="0.0796%" height="15" fill="rgb(212,158,42)" fg:x="1193" fg:w="1"/><text x="95.2341%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.0637%" y="405" width="0.1592%" height="15" fill="rgb(228,193,18)" fg:x="1194" fg:w="2"/><text x="95.3137%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.0637%" y="389" width="0.1592%" height="15" fill="rgb(245,172,29)" fg:x="1194" fg:w="2"/><text x="95.3137%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.0637%" y="373" width="0.1592%" height="15" fill="rgb(207,98,24)" fg:x="1194" fg:w="2"/><text x="95.3137%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.0637%" y="357" width="0.1592%" height="15" fill="rgb(249,92,26)" fg:x="1194" fg:w="2"/><text x="95.3137%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.0637%" y="341" width="0.1592%" height="15" fill="rgb(217,176,26)" fg:x="1194" fg:w="2"/><text x="95.3137%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1433%" y="325" width="0.0796%" height="15" fill="rgb(221,8,39)" fg:x="1195" fg:w="1"/><text x="95.3933%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="95.2229%" y="405" width="0.0796%" height="15" fill="rgb(208,90,18)" fg:x="1196" fg:w="1"/><text x="95.4729%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.2229%" y="389" width="0.0796%" height="15" fill="rgb(207,202,30)" fg:x="1196" fg:w="1"/><text x="95.4729%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="95.2229%" y="373" width="0.0796%" height="15" fill="rgb(231,124,22)" fg:x="1196" fg:w="1"/><text x="95.4729%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.2229%" y="357" width="0.0796%" height="15" fill="rgb(206,15,5)" fg:x="1196" fg:w="1"/><text x="95.4729%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.3822%" y="373" width="0.0796%" height="15" fill="rgb(239,16,52)" fg:x="1198" fg:w="1"/><text x="95.6322%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.3822%" y="357" width="0.0796%" height="15" fill="rgb(245,213,29)" fg:x="1198" fg:w="1"/><text x="95.6322%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.48%)</title><rect x="95.0637%" y="501" width="0.4777%" height="15" fill="rgb(213,203,36)" fg:x="1194" fg:w="6"/><text x="95.3137%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="95.0637%" y="485" width="0.4777%" height="15" fill="rgb(209,55,18)" fg:x="1194" fg:w="6"/><text x="95.3137%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="95.0637%" y="469" width="0.4777%" height="15" fill="rgb(207,133,49)" fg:x="1194" fg:w="6"/><text x="95.3137%" y="479.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (6 samples, 0.48%)</title><rect x="95.0637%" y="453" width="0.4777%" height="15" fill="rgb(240,33,46)" fg:x="1194" fg:w="6"/><text x="95.3137%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="95.0637%" y="437" width="0.4777%" height="15" fill="rgb(212,35,2)" fg:x="1194" fg:w="6"/><text x="95.3137%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="95.0637%" y="421" width="0.4777%" height="15" fill="rgb(231,119,28)" fg:x="1194" fg:w="6"/><text x="95.3137%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.3025%" y="405" width="0.2389%" height="15" fill="rgb(252,178,7)" fg:x="1197" fg:w="3"/><text x="95.5525%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.3025%" y="389" width="0.2389%" height="15" fill="rgb(251,91,4)" fg:x="1197" fg:w="3"/><text x="95.5525%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="95.4618%" y="373" width="0.0796%" height="15" fill="rgb(233,122,19)" fg:x="1199" fg:w="1"/><text x="95.7118%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4618%" y="357" width="0.0796%" height="15" fill="rgb(231,208,46)" fg:x="1199" fg:w="1"/><text x="95.7118%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.4618%" y="341" width="0.0796%" height="15" fill="rgb(243,15,41)" fg:x="1199" fg:w="1"/><text x="95.7118%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.4618%" y="325" width="0.0796%" height="15" fill="rgb(210,32,43)" fg:x="1199" fg:w="1"/><text x="95.7118%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.7006%" y="341" width="0.0796%" height="15" fill="rgb(222,177,15)" fg:x="1202" fg:w="1"/><text x="95.9506%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7006%" y="325" width="0.0796%" height="15" fill="rgb(244,121,34)" fg:x="1202" fg:w="1"/><text x="95.9506%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="95.5414%" y="437" width="0.3185%" height="15" fill="rgb(234,138,4)" fg:x="1200" fg:w="4"/><text x="95.7914%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.7006%" y="421" width="0.1592%" height="15" fill="rgb(240,97,48)" fg:x="1202" fg:w="2"/><text x="95.9506%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.7006%" y="405" width="0.1592%" height="15" fill="rgb(237,65,54)" fg:x="1202" fg:w="2"/><text x="95.9506%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.7006%" y="389" width="0.1592%" height="15" fill="rgb(214,25,24)" fg:x="1202" fg:w="2"/><text x="95.9506%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.7006%" y="373" width="0.1592%" height="15" fill="rgb(213,5,3)" fg:x="1202" fg:w="2"/><text x="95.9506%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.7006%" y="357" width="0.1592%" height="15" fill="rgb(219,81,29)" fg:x="1202" fg:w="2"/><text x="95.9506%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.7803%" y="341" width="0.0796%" height="15" fill="rgb(220,43,48)" fg:x="1203" fg:w="1"/><text x="96.0303%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.7803%" y="325" width="0.0796%" height="15" fill="rgb(239,157,2)" fg:x="1203" fg:w="1"/><text x="96.0303%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (15 samples, 1.19%)</title><rect x="94.7452%" y="533" width="1.1943%" height="15" fill="rgb(213,104,43)" fg:x="1190" fg:w="15"/><text x="94.9952%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (15 samples, 1.19%)</title><rect x="94.7452%" y="517" width="1.1943%" height="15" fill="rgb(237,84,9)" fg:x="1190" fg:w="15"/><text x="94.9952%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="95.5414%" y="501" width="0.3981%" height="15" fill="rgb(252,6,33)" fg:x="1200" fg:w="5"/><text x="95.7914%" y="511.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="95.5414%" y="485" width="0.3981%" height="15" fill="rgb(251,172,22)" fg:x="1200" fg:w="5"/><text x="95.7914%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="95.5414%" y="469" width="0.3981%" height="15" fill="rgb(244,91,53)" fg:x="1200" fg:w="5"/><text x="95.7914%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.5414%" y="453" width="0.3981%" height="15" fill="rgb(219,29,30)" fg:x="1200" fg:w="5"/><text x="95.7914%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8599%" y="437" width="0.0796%" height="15" fill="rgb(213,3,15)" fg:x="1204" fg:w="1"/><text x="96.1099%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8599%" y="421" width="0.0796%" height="15" fill="rgb(208,25,28)" fg:x="1204" fg:w="1"/><text x="96.1099%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9395%" y="453" width="0.0796%" height="15" fill="rgb(252,144,25)" fg:x="1205" fg:w="1"/><text x="96.1895%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9395%" y="437" width="0.0796%" height="15" fill="rgb(226,220,25)" fg:x="1205" fg:w="1"/><text x="96.1895%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="95.9395%" y="501" width="0.3185%" height="15" fill="rgb(212,131,28)" fg:x="1205" fg:w="4"/><text x="96.1895%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="95.9395%" y="485" width="0.3185%" height="15" fill="rgb(219,143,52)" fg:x="1205" fg:w="4"/><text x="96.1895%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="95.9395%" y="469" width="0.3185%" height="15" fill="rgb(215,56,7)" fg:x="1205" fg:w="4"/><text x="96.1895%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="96.0191%" y="453" width="0.2389%" height="15" fill="rgb(239,59,51)" fg:x="1206" fg:w="3"/><text x="96.2691%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="96.0191%" y="437" width="0.2389%" height="15" fill="rgb(209,215,4)" fg:x="1206" fg:w="3"/><text x="96.2691%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.0987%" y="421" width="0.1592%" height="15" fill="rgb(221,118,39)" fg:x="1207" fg:w="2"/><text x="96.3487%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1783%" y="405" width="0.0796%" height="15" fill="rgb(236,6,44)" fg:x="1208" fg:w="1"/><text x="96.4283%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.1783%" y="389" width="0.0796%" height="15" fill="rgb(216,122,9)" fg:x="1208" fg:w="1"/><text x="96.4283%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.1783%" y="373" width="0.0796%" height="15" fill="rgb(244,134,42)" fg:x="1208" fg:w="1"/><text x="96.4283%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.1783%" y="357" width="0.0796%" height="15" fill="rgb(209,189,35)" fg:x="1208" fg:w="1"/><text x="96.4283%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1783%" y="341" width="0.0796%" height="15" fill="rgb(250,47,36)" fg:x="1208" fg:w="1"/><text x="96.4283%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1783%" y="325" width="0.0796%" height="15" fill="rgb(252,112,4)" fg:x="1208" fg:w="1"/><text x="96.4283%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.1783%" y="309" width="0.0796%" height="15" fill="rgb(221,79,51)" fg:x="1208" fg:w="1"/><text x="96.4283%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.1783%" y="293" width="0.0796%" height="15" fill="rgb(232,65,53)" fg:x="1208" fg:w="1"/><text x="96.4283%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.1783%" y="277" width="0.0796%" height="15" fill="rgb(211,37,7)" fg:x="1208" fg:w="1"/><text x="96.4283%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.1783%" y="261" width="0.0796%" height="15" fill="rgb(234,221,18)" fg:x="1208" fg:w="1"/><text x="96.4283%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1783%" y="245" width="0.0796%" height="15" fill="rgb(220,158,26)" fg:x="1208" fg:w="1"/><text x="96.4283%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2580%" y="453" width="0.0796%" height="15" fill="rgb(220,70,6)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2580%" y="437" width="0.0796%" height="15" fill="rgb(250,39,48)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2580%" y="421" width="0.0796%" height="15" fill="rgb(206,40,27)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2580%" y="405" width="0.0796%" height="15" fill="rgb(247,80,36)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2580%" y="389" width="0.0796%" height="15" fill="rgb(222,9,20)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2580%" y="373" width="0.0796%" height="15" fill="rgb(217,26,45)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.2580%" y="357" width="0.0796%" height="15" fill="rgb(221,67,14)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.2580%" y="341" width="0.0796%" height="15" fill="rgb(248,100,24)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.2580%" y="325" width="0.0796%" height="15" fill="rgb(230,187,16)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.2580%" y="309" width="0.0796%" height="15" fill="rgb(205,108,13)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.2580%" y="293" width="0.0796%" height="15" fill="rgb(235,71,51)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.2580%" y="277" width="0.0796%" height="15" fill="rgb(251,172,48)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.2580%" y="261" width="0.0796%" height="15" fill="rgb(240,96,49)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.2580%" y="245" width="0.0796%" height="15" fill="rgb(235,46,36)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.2580%" y="229" width="0.0796%" height="15" fill="rgb(244,3,49)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="96.2580%" y="213" width="0.0796%" height="15" fill="rgb(206,78,54)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="96.2580%" y="197" width="0.0796%" height="15" fill="rgb(208,85,42)" fg:x="1209" fg:w="1"/><text x="96.5080%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.4172%" y="357" width="0.0796%" height="15" fill="rgb(219,196,21)" fg:x="1211" fg:w="1"/><text x="96.6672%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="96.4172%" y="341" width="0.0796%" height="15" fill="rgb(238,19,9)" fg:x="1211" fg:w="1"/><text x="96.6672%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="96.4172%" y="325" width="0.0796%" height="15" fill="rgb(206,86,13)" fg:x="1211" fg:w="1"/><text x="96.6672%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4172%" y="309" width="0.0796%" height="15" fill="rgb(214,123,40)" fg:x="1211" fg:w="1"/><text x="96.6672%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4172%" y="293" width="0.0796%" height="15" fill="rgb(243,53,5)" fg:x="1211" fg:w="1"/><text x="96.6672%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="96.4172%" y="277" width="0.0796%" height="15" fill="rgb(254,186,31)" fg:x="1211" fg:w="1"/><text x="96.6672%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="96.3376%" y="453" width="0.2389%" height="15" fill="rgb(221,216,25)" fg:x="1210" fg:w="3"/><text x="96.5876%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="96.4172%" y="437" width="0.1592%" height="15" fill="rgb(248,107,42)" fg:x="1211" fg:w="2"/><text x="96.6672%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="96.4172%" y="421" width="0.1592%" height="15" fill="rgb(221,85,43)" fg:x="1211" fg:w="2"/><text x="96.6672%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="96.4172%" y="405" width="0.1592%" height="15" fill="rgb(225,34,24)" fg:x="1211" fg:w="2"/><text x="96.6672%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="96.4172%" y="389" width="0.1592%" height="15" fill="rgb(211,119,1)" fg:x="1211" fg:w="2"/><text x="96.6672%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="96.4172%" y="373" width="0.1592%" height="15" fill="rgb(254,216,46)" fg:x="1211" fg:w="2"/><text x="96.6672%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4968%" y="357" width="0.0796%" height="15" fill="rgb(238,11,38)" fg:x="1212" fg:w="1"/><text x="96.7468%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4968%" y="341" width="0.0796%" height="15" fill="rgb(233,50,15)" fg:x="1212" fg:w="1"/><text x="96.7468%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.4968%" y="325" width="0.0796%" height="15" fill="rgb(217,181,29)" fg:x="1212" fg:w="1"/><text x="96.7468%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4968%" y="309" width="0.0796%" height="15" fill="rgb(214,56,3)" fg:x="1212" fg:w="1"/><text x="96.7468%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="96.2580%" y="501" width="0.6369%" height="15" fill="rgb(230,69,45)" fg:x="1209" fg:w="8"/><text x="96.5080%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="96.2580%" y="485" width="0.6369%" height="15" fill="rgb(224,201,50)" fg:x="1209" fg:w="8"/><text x="96.5080%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.64%)</title><rect x="96.2580%" y="469" width="0.6369%" height="15" fill="rgb(217,228,18)" fg:x="1209" fg:w="8"/><text x="96.5080%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="96.5764%" y="453" width="0.3185%" height="15" fill="rgb(239,33,44)" fg:x="1213" fg:w="4"/><text x="96.8264%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.5764%" y="437" width="0.3185%" height="15" fill="rgb(248,210,23)" fg:x="1213" fg:w="4"/><text x="96.8264%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="96.6561%" y="421" width="0.2389%" height="15" fill="rgb(253,135,8)" fg:x="1214" fg:w="3"/><text x="96.9061%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="96.7357%" y="405" width="0.1592%" height="15" fill="rgb(217,98,21)" fg:x="1215" fg:w="2"/><text x="96.9857%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.7357%" y="389" width="0.1592%" height="15" fill="rgb(253,130,21)" fg:x="1215" fg:w="2"/><text x="96.9857%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.8153%" y="373" width="0.0796%" height="15" fill="rgb(207,81,54)" fg:x="1216" fg:w="1"/><text x="97.0653%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.8949%" y="421" width="0.0796%" height="15" fill="rgb(232,48,33)" fg:x="1217" fg:w="1"/><text x="97.1449%" y="431.50"></text></g><g><title>engine::session::internal::Added::find_refs (14 samples, 1.11%)</title><rect x="95.9395%" y="533" width="1.1146%" height="15" fill="rgb(211,9,35)" fg:x="1205" fg:w="14"/><text x="96.1895%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (14 samples, 1.11%)</title><rect x="95.9395%" y="517" width="1.1146%" height="15" fill="rgb(205,152,21)" fg:x="1205" fg:w="14"/><text x="96.1895%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.8949%" y="501" width="0.1592%" height="15" fill="rgb(249,21,27)" fg:x="1217" fg:w="2"/><text x="97.1449%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.8949%" y="485" width="0.1592%" height="15" fill="rgb(252,29,24)" fg:x="1217" fg:w="2"/><text x="97.1449%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="96.8949%" y="469" width="0.1592%" height="15" fill="rgb(230,130,50)" fg:x="1217" fg:w="2"/><text x="97.1449%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.8949%" y="453" width="0.1592%" height="15" fill="rgb(239,144,14)" fg:x="1217" fg:w="2"/><text x="97.1449%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.8949%" y="437" width="0.1592%" height="15" fill="rgb(227,111,50)" fg:x="1217" fg:w="2"/><text x="97.1449%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.9745%" y="421" width="0.0796%" height="15" fill="rgb(254,84,20)" fg:x="1218" fg:w="1"/><text x="97.2245%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.9745%" y="405" width="0.0796%" height="15" fill="rgb(232,90,48)" fg:x="1218" fg:w="1"/><text x="97.2245%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.9745%" y="389" width="0.0796%" height="15" fill="rgb(253,63,47)" fg:x="1218" fg:w="1"/><text x="97.2245%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.9745%" y="373" width="0.0796%" height="15" fill="rgb(251,146,35)" fg:x="1218" fg:w="1"/><text x="97.2245%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.0541%" y="517" width="0.1592%" height="15" fill="rgb(229,192,35)" fg:x="1219" fg:w="2"/><text x="97.3041%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.0541%" y="501" width="0.1592%" height="15" fill="rgb(225,68,9)" fg:x="1219" fg:w="2"/><text x="97.3041%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1338%" y="485" width="0.0796%" height="15" fill="rgb(214,97,34)" fg:x="1220" fg:w="1"/><text x="97.3838%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1338%" y="469" width="0.0796%" height="15" fill="rgb(253,31,26)" fg:x="1220" fg:w="1"/><text x="97.3838%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1338%" y="453" width="0.0796%" height="15" fill="rgb(225,151,47)" fg:x="1220" fg:w="1"/><text x="97.3838%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="97.2134%" y="501" width="0.0796%" height="15" fill="rgb(206,185,9)" fg:x="1221" fg:w="1"/><text x="97.4634%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.2134%" y="517" width="0.1592%" height="15" fill="rgb(249,65,17)" fg:x="1221" fg:w="2"/><text x="97.4634%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.2930%" y="501" width="0.0796%" height="15" fill="rgb(220,110,10)" fg:x="1222" fg:w="1"/><text x="97.5430%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2930%" y="485" width="0.0796%" height="15" fill="rgb(222,198,49)" fg:x="1222" fg:w="1"/><text x="97.5430%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2930%" y="469" width="0.0796%" height="15" fill="rgb(239,81,13)" fg:x="1222" fg:w="1"/><text x="97.5430%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.2930%" y="453" width="0.0796%" height="15" fill="rgb(216,128,11)" fg:x="1222" fg:w="1"/><text x="97.5430%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2930%" y="437" width="0.0796%" height="15" fill="rgb(247,156,8)" fg:x="1222" fg:w="1"/><text x="97.5430%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.4522%" y="389" width="0.0796%" height="15" fill="rgb(219,173,1)" fg:x="1224" fg:w="1"/><text x="97.7022%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="97.4522%" y="421" width="0.1592%" height="15" fill="rgb(227,42,24)" fg:x="1224" fg:w="2"/><text x="97.7022%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="97.4522%" y="405" width="0.1592%" height="15" fill="rgb(253,219,50)" fg:x="1224" fg:w="2"/><text x="97.7022%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.5318%" y="389" width="0.0796%" height="15" fill="rgb(215,191,54)" fg:x="1225" fg:w="1"/><text x="97.7818%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.5318%" y="373" width="0.0796%" height="15" fill="rgb(238,83,12)" fg:x="1225" fg:w="1"/><text x="97.7818%" y="383.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.4522%" y="469" width="0.2389%" height="15" fill="rgb(205,124,9)" fg:x="1224" fg:w="3"/><text x="97.7022%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.4522%" y="453" width="0.2389%" height="15" fill="rgb(253,174,7)" fg:x="1224" fg:w="3"/><text x="97.7022%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.4522%" y="437" width="0.2389%" height="15" fill="rgb(206,134,49)" fg:x="1224" fg:w="3"/><text x="97.7022%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6115%" y="421" width="0.0796%" height="15" fill="rgb(221,89,20)" fg:x="1226" fg:w="1"/><text x="97.8615%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6115%" y="405" width="0.0796%" height="15" fill="rgb(240,205,13)" fg:x="1226" fg:w="1"/><text x="97.8615%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.6115%" y="389" width="0.0796%" height="15" fill="rgb(237,174,32)" fg:x="1226" fg:w="1"/><text x="97.8615%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6115%" y="373" width="0.0796%" height="15" fill="rgb(226,12,15)" fg:x="1226" fg:w="1"/><text x="97.8615%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6115%" y="357" width="0.0796%" height="15" fill="rgb(245,160,52)" fg:x="1226" fg:w="1"/><text x="97.8615%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.6115%" y="341" width="0.0796%" height="15" fill="rgb(253,80,21)" fg:x="1226" fg:w="1"/><text x="97.8615%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6115%" y="325" width="0.0796%" height="15" fill="rgb(231,225,22)" fg:x="1226" fg:w="1"/><text x="97.8615%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6115%" y="309" width="0.0796%" height="15" fill="rgb(253,185,12)" fg:x="1226" fg:w="1"/><text x="97.8615%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.6115%" y="293" width="0.0796%" height="15" fill="rgb(234,197,21)" fg:x="1226" fg:w="1"/><text x="97.8615%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="97.3726%" y="517" width="0.3981%" height="15" fill="rgb(210,47,30)" fg:x="1223" fg:w="5"/><text x="97.6226%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="97.3726%" y="501" width="0.3981%" height="15" fill="rgb(246,139,27)" fg:x="1223" fg:w="5"/><text x="97.6226%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="97.3726%" y="485" width="0.3981%" height="15" fill="rgb(226,130,16)" fg:x="1223" fg:w="5"/><text x="97.6226%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6911%" y="469" width="0.0796%" height="15" fill="rgb(237,208,20)" fg:x="1227" fg:w="1"/><text x="97.9411%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6911%" y="453" width="0.0796%" height="15" fill="rgb(245,186,28)" fg:x="1227" fg:w="1"/><text x="97.9411%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.7707%" y="373" width="0.0796%" height="15" fill="rgb(238,105,39)" fg:x="1228" fg:w="1"/><text x="98.0207%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.7707%" y="357" width="0.0796%" height="15" fill="rgb(253,228,11)" fg:x="1228" fg:w="1"/><text x="98.0207%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (40 samples, 3.18%)</title><rect x="94.7452%" y="549" width="3.1847%" height="15" fill="rgb(224,136,38)" fg:x="1190" fg:w="40"/><text x="94.9952%" y="559.50">eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="97.0541%" y="533" width="0.8758%" height="15" fill="rgb(211,3,25)" fg:x="1219" fg:w="11"/><text x="97.3041%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="97.7707%" y="517" width="0.1592%" height="15" fill="rgb(238,66,34)" fg:x="1228" fg:w="2"/><text x="98.0207%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="97.7707%" y="501" width="0.1592%" height="15" fill="rgb(223,188,11)" fg:x="1228" fg:w="2"/><text x="98.0207%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.7707%" y="485" width="0.1592%" height="15" fill="rgb(221,10,35)" fg:x="1228" fg:w="2"/><text x="98.0207%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.7707%" y="469" width="0.1592%" height="15" fill="rgb(223,18,44)" fg:x="1228" fg:w="2"/><text x="98.0207%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.7707%" y="453" width="0.1592%" height="15" fill="rgb(220,97,41)" fg:x="1228" fg:w="2"/><text x="98.0207%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.7707%" y="437" width="0.1592%" height="15" fill="rgb(206,95,45)" fg:x="1228" fg:w="2"/><text x="98.0207%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.7707%" y="421" width="0.1592%" height="15" fill="rgb(209,96,13)" fg:x="1228" fg:w="2"/><text x="98.0207%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.7707%" y="405" width="0.1592%" height="15" fill="rgb(237,39,34)" fg:x="1228" fg:w="2"/><text x="98.0207%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.7707%" y="389" width="0.1592%" height="15" fill="rgb(213,49,47)" fg:x="1228" fg:w="2"/><text x="98.0207%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.8503%" y="373" width="0.0796%" height="15" fill="rgb(205,107,27)" fg:x="1229" fg:w="1"/><text x="98.1003%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.8503%" y="357" width="0.0796%" height="15" fill="rgb(212,142,9)" fg:x="1229" fg:w="1"/><text x="98.1003%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8503%" y="341" width="0.0796%" height="15" fill="rgb(226,182,0)" fg:x="1229" fg:w="1"/><text x="98.1003%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.9299%" y="533" width="0.0796%" height="15" fill="rgb(231,3,53)" fg:x="1230" fg:w="1"/><text x="98.1799%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9299%" y="517" width="0.0796%" height="15" fill="rgb(246,111,28)" fg:x="1230" fg:w="1"/><text x="98.1799%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0096%" y="485" width="0.0796%" height="15" fill="rgb(254,183,7)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0096%" y="469" width="0.0796%" height="15" fill="rgb(247,177,28)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0096%" y="453" width="0.0796%" height="15" fill="rgb(244,43,1)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0096%" y="437" width="0.0796%" height="15" fill="rgb(207,2,35)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.0096%" y="421" width="0.0796%" height="15" fill="rgb(213,83,22)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.0096%" y="405" width="0.0796%" height="15" fill="rgb(246,212,13)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.0096%" y="389" width="0.0796%" height="15" fill="rgb(213,127,46)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0096%" y="373" width="0.0796%" height="15" fill="rgb(219,215,39)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0096%" y="357" width="0.0796%" height="15" fill="rgb(227,99,17)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.0096%" y="341" width="0.0796%" height="15" fill="rgb(208,155,18)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.0096%" y="325" width="0.0796%" height="15" fill="rgb(223,204,38)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.0096%" y="309" width="0.0796%" height="15" fill="rgb(212,114,21)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.0096%" y="293" width="0.0796%" height="15" fill="rgb(250,74,13)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0096%" y="277" width="0.0796%" height="15" fill="rgb(234,7,1)" fg:x="1231" fg:w="1"/><text x="98.2596%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.0096%" y="517" width="0.1592%" height="15" fill="rgb(207,138,31)" fg:x="1231" fg:w="2"/><text x="98.2596%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.0096%" y="501" width="0.1592%" height="15" fill="rgb(215,186,42)" fg:x="1231" fg:w="2"/><text x="98.2596%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0892%" y="485" width="0.0796%" height="15" fill="rgb(229,205,49)" fg:x="1232" fg:w="1"/><text x="98.3392%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.1688%" y="421" width="0.0796%" height="15" fill="rgb(216,156,32)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.1688%" y="405" width="0.0796%" height="15" fill="rgb(238,7,21)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.1688%" y="389" width="0.0796%" height="15" fill="rgb(249,190,22)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.1688%" y="373" width="0.0796%" height="15" fill="rgb(253,51,31)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.1688%" y="357" width="0.0796%" height="15" fill="rgb(237,90,54)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.1688%" y="341" width="0.0796%" height="15" fill="rgb(250,214,33)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1688%" y="325" width="0.0796%" height="15" fill="rgb(237,10,49)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1688%" y="309" width="0.0796%" height="15" fill="rgb(241,56,36)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.1688%" y="293" width="0.0796%" height="15" fill="rgb(227,164,12)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.1688%" y="277" width="0.0796%" height="15" fill="rgb(249,149,35)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.1688%" y="261" width="0.0796%" height="15" fill="rgb(238,227,50)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.1688%" y="245" width="0.0796%" height="15" fill="rgb(235,102,45)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1688%" y="229" width="0.0796%" height="15" fill="rgb(211,10,38)" fg:x="1233" fg:w="1"/><text x="98.4188%" y="239.50"></text></g><g><title>engine::session::internal::Added::find_refs (5 samples, 0.40%)</title><rect x="97.9299%" y="549" width="0.3981%" height="15" fill="rgb(219,77,48)" fg:x="1230" fg:w="5"/><text x="98.1799%" y="559.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="98.0096%" y="533" width="0.3185%" height="15" fill="rgb(246,6,15)" fg:x="1231" fg:w="4"/><text x="98.2596%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="98.1688%" y="517" width="0.1592%" height="15" fill="rgb(207,220,2)" fg:x="1233" fg:w="2"/><text x="98.4188%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="98.1688%" y="501" width="0.1592%" height="15" fill="rgb(242,48,14)" fg:x="1233" fg:w="2"/><text x="98.4188%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="98.1688%" y="485" width="0.1592%" height="15" fill="rgb(218,19,27)" fg:x="1233" fg:w="2"/><text x="98.4188%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="98.1688%" y="469" width="0.1592%" height="15" fill="rgb(228,0,35)" fg:x="1233" fg:w="2"/><text x="98.4188%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="98.1688%" y="453" width="0.1592%" height="15" fill="rgb(244,142,54)" fg:x="1233" fg:w="2"/><text x="98.4188%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="98.1688%" y="437" width="0.1592%" height="15" fill="rgb(243,217,40)" fg:x="1233" fg:w="2"/><text x="98.4188%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.2484%" y="421" width="0.0796%" height="15" fill="rgb(207,114,16)" fg:x="1234" fg:w="1"/><text x="98.4984%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2484%" y="405" width="0.0796%" height="15" fill="rgb(224,33,25)" fg:x="1234" fg:w="1"/><text x="98.4984%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.2484%" y="389" width="0.0796%" height="15" fill="rgb(230,93,54)" fg:x="1234" fg:w="1"/><text x="98.4984%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.2484%" y="373" width="0.0796%" height="15" fill="rgb(224,56,24)" fg:x="1234" fg:w="1"/><text x="98.4984%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.2484%" y="357" width="0.0796%" height="15" fill="rgb(235,189,50)" fg:x="1234" fg:w="1"/><text x="98.4984%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.2484%" y="341" width="0.0796%" height="15" fill="rgb(242,173,8)" fg:x="1234" fg:w="1"/><text x="98.4984%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.2484%" y="325" width="0.0796%" height="15" fill="rgb(209,206,10)" fg:x="1234" fg:w="1"/><text x="98.4984%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3280%" y="533" width="0.0796%" height="15" fill="rgb(213,182,44)" fg:x="1235" fg:w="1"/><text x="98.5780%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3280%" y="517" width="0.0796%" height="15" fill="rgb(243,51,15)" fg:x="1235" fg:w="1"/><text x="98.5780%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3280%" y="501" width="0.0796%" height="15" fill="rgb(241,13,14)" fg:x="1235" fg:w="1"/><text x="98.5780%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4076%" y="437" width="0.0796%" height="15" fill="rgb(239,147,24)" fg:x="1236" fg:w="1"/><text x="98.6576%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4076%" y="421" width="0.0796%" height="15" fill="rgb(223,129,16)" fg:x="1236" fg:w="1"/><text x="98.6576%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="98.4076%" y="533" width="0.3185%" height="15" fill="rgb(209,169,13)" fg:x="1236" fg:w="4"/><text x="98.6576%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="98.4076%" y="517" width="0.3185%" height="15" fill="rgb(235,159,41)" fg:x="1236" fg:w="4"/><text x="98.6576%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.4076%" y="501" width="0.3185%" height="15" fill="rgb(223,219,48)" fg:x="1236" fg:w="4"/><text x="98.6576%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.4076%" y="485" width="0.3185%" height="15" fill="rgb(236,80,13)" fg:x="1236" fg:w="4"/><text x="98.6576%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.4076%" y="469" width="0.3185%" height="15" fill="rgb(213,5,6)" fg:x="1236" fg:w="4"/><text x="98.6576%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.4076%" y="453" width="0.3185%" height="15" fill="rgb(205,59,21)" fg:x="1236" fg:w="4"/><text x="98.6576%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.4873%" y="437" width="0.2389%" height="15" fill="rgb(247,137,35)" fg:x="1237" fg:w="3"/><text x="98.7373%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.4873%" y="421" width="0.2389%" height="15" fill="rgb(242,208,28)" fg:x="1237" fg:w="3"/><text x="98.7373%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="98.5669%" y="405" width="0.1592%" height="15" fill="rgb(245,62,25)" fg:x="1238" fg:w="2"/><text x="98.8169%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5669%" y="389" width="0.1592%" height="15" fill="rgb(233,99,54)" fg:x="1238" fg:w="2"/><text x="98.8169%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6465%" y="373" width="0.0796%" height="15" fill="rgb(213,10,37)" fg:x="1239" fg:w="1"/><text x="98.8965%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.6465%" y="357" width="0.0796%" height="15" fill="rgb(235,143,30)" fg:x="1239" fg:w="1"/><text x="98.8965%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (54 samples, 4.30%)</title><rect x="94.6656%" y="565" width="4.2994%" height="15" fill="rgb(250,146,33)" fg:x="1189" fg:w="54"/><text x="94.9156%" y="575.50">engin..</text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="98.3280%" y="549" width="0.6369%" height="15" fill="rgb(226,198,42)" fg:x="1235" fg:w="8"/><text x="98.5780%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="98.7261%" y="533" width="0.2389%" height="15" fill="rgb(222,55,6)" fg:x="1240" fg:w="3"/><text x="98.9761%" y="543.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="98.7261%" y="517" width="0.2389%" height="15" fill="rgb(213,224,31)" fg:x="1240" fg:w="3"/><text x="98.9761%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.7261%" y="501" width="0.2389%" height="15" fill="rgb(226,103,35)" fg:x="1240" fg:w="3"/><text x="98.9761%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.7261%" y="485" width="0.2389%" height="15" fill="rgb(205,66,45)" fg:x="1240" fg:w="3"/><text x="98.9761%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.7261%" y="469" width="0.2389%" height="15" fill="rgb(226,51,42)" fg:x="1240" fg:w="3"/><text x="98.9761%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.7261%" y="453" width="0.2389%" height="15" fill="rgb(206,69,1)" fg:x="1240" fg:w="3"/><text x="98.9761%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.8057%" y="437" width="0.1592%" height="15" fill="rgb(213,228,47)" fg:x="1241" fg:w="2"/><text x="99.0557%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8057%" y="421" width="0.1592%" height="15" fill="rgb(224,204,18)" fg:x="1241" fg:w="2"/><text x="99.0557%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8854%" y="405" width="0.0796%" height="15" fill="rgb(253,187,47)" fg:x="1242" fg:w="1"/><text x="99.1354%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="98.9650%" y="565" width="0.0796%" height="15" fill="rgb(232,61,2)" fg:x="1243" fg:w="1"/><text x="99.2150%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="98.9650%" y="549" width="0.0796%" height="15" fill="rgb(213,132,35)" fg:x="1243" fg:w="1"/><text x="99.2150%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="98.9650%" y="533" width="0.0796%" height="15" fill="rgb(247,33,21)" fg:x="1243" fg:w="1"/><text x="99.2150%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.9650%" y="517" width="0.0796%" height="15" fill="rgb(233,71,46)" fg:x="1243" fg:w="1"/><text x="99.2150%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="98.9650%" y="501" width="0.0796%" height="15" fill="rgb(222,173,43)" fg:x="1243" fg:w="1"/><text x="99.2150%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="99.0446%" y="389" width="0.0796%" height="15" fill="rgb(249,218,47)" fg:x="1244" fg:w="1"/><text x="99.2946%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.0446%" y="469" width="0.1592%" height="15" fill="rgb(254,185,48)" fg:x="1244" fg:w="2"/><text x="99.2946%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.0446%" y="453" width="0.1592%" height="15" fill="rgb(252,165,50)" fg:x="1244" fg:w="2"/><text x="99.2946%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.0446%" y="437" width="0.1592%" height="15" fill="rgb(206,219,6)" fg:x="1244" fg:w="2"/><text x="99.2946%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.0446%" y="421" width="0.1592%" height="15" fill="rgb(212,212,45)" fg:x="1244" fg:w="2"/><text x="99.2946%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.0446%" y="405" width="0.1592%" height="15" fill="rgb(221,31,9)" fg:x="1244" fg:w="2"/><text x="99.2946%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.1242%" y="389" width="0.0796%" height="15" fill="rgb(234,198,39)" fg:x="1245" fg:w="1"/><text x="99.3742%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1242%" y="373" width="0.0796%" height="15" fill="rgb(252,145,46)" fg:x="1245" fg:w="1"/><text x="99.3742%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="99.0446%" y="517" width="0.2389%" height="15" fill="rgb(237,149,0)" fg:x="1244" fg:w="3"/><text x="99.2946%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.0446%" y="501" width="0.2389%" height="15" fill="rgb(229,65,5)" fg:x="1244" fg:w="3"/><text x="99.2946%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.0446%" y="485" width="0.2389%" height="15" fill="rgb(235,60,36)" fg:x="1244" fg:w="3"/><text x="99.2946%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.2038%" y="469" width="0.0796%" height="15" fill="rgb(222,47,18)" fg:x="1246" fg:w="1"/><text x="99.4538%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2038%" y="453" width="0.0796%" height="15" fill="rgb(235,114,22)" fg:x="1246" fg:w="1"/><text x="99.4538%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (6 samples, 0.48%)</title><rect x="99.0446%" y="549" width="0.4777%" height="15" fill="rgb(209,167,11)" fg:x="1244" fg:w="6"/><text x="99.2946%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="99.0446%" y="533" width="0.4777%" height="15" fill="rgb(251,73,18)" fg:x="1244" fg:w="6"/><text x="99.2946%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="99.2834%" y="517" width="0.2389%" height="15" fill="rgb(217,60,17)" fg:x="1247" fg:w="3"/><text x="99.5334%" y="527.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="99.2834%" y="501" width="0.2389%" height="15" fill="rgb(224,36,37)" fg:x="1247" fg:w="3"/><text x="99.5334%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.3631%" y="485" width="0.1592%" height="15" fill="rgb(211,21,32)" fg:x="1248" fg:w="2"/><text x="99.6131%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.3631%" y="469" width="0.1592%" height="15" fill="rgb(231,55,48)" fg:x="1248" fg:w="2"/><text x="99.6131%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.3631%" y="453" width="0.1592%" height="15" fill="rgb(227,42,18)" fg:x="1248" fg:w="2"/><text x="99.6131%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.3631%" y="437" width="0.1592%" height="15" fill="rgb(217,2,27)" fg:x="1248" fg:w="2"/><text x="99.6131%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.3631%" y="421" width="0.1592%" height="15" fill="rgb(251,138,23)" fg:x="1248" fg:w="2"/><text x="99.6131%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4427%" y="405" width="0.0796%" height="15" fill="rgb(226,184,11)" fg:x="1249" fg:w="1"/><text x="99.6927%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.4427%" y="389" width="0.0796%" height="15" fill="rgb(242,142,12)" fg:x="1249" fg:w="1"/><text x="99.6927%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4427%" y="373" width="0.0796%" height="15" fill="rgb(234,187,18)" fg:x="1249" fg:w="1"/><text x="99.6927%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5223%" y="501" width="0.0796%" height="15" fill="rgb(237,44,42)" fg:x="1250" fg:w="1"/><text x="99.7723%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5223%" y="485" width="0.0796%" height="15" fill="rgb(211,90,23)" fg:x="1250" fg:w="1"/><text x="99.7723%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5223%" y="469" width="0.0796%" height="15" fill="rgb(207,81,18)" fg:x="1250" fg:w="1"/><text x="99.7723%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="99.5223%" y="533" width="0.2389%" height="15" fill="rgb(222,107,28)" fg:x="1250" fg:w="3"/><text x="99.7723%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="99.5223%" y="517" width="0.2389%" height="15" fill="rgb(237,83,52)" fg:x="1250" fg:w="3"/><text x="99.7723%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.6019%" y="501" width="0.1592%" height="15" fill="rgb(208,67,11)" fg:x="1251" fg:w="2"/><text x="99.8519%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.6019%" y="485" width="0.1592%" height="15" fill="rgb(249,157,49)" fg:x="1251" fg:w="2"/><text x="99.8519%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.6019%" y="469" width="0.1592%" height="15" fill="rgb(243,200,1)" fg:x="1251" fg:w="2"/><text x="99.8519%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.6019%" y="453" width="0.1592%" height="15" fill="rgb(225,162,37)" fg:x="1251" fg:w="2"/><text x="99.8519%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.6019%" y="437" width="0.1592%" height="15" fill="rgb(242,92,13)" fg:x="1251" fg:w="2"/><text x="99.8519%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.6019%" y="421" width="0.1592%" height="15" fill="rgb(220,43,36)" fg:x="1251" fg:w="2"/><text x="99.8519%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.6815%" y="405" width="0.0796%" height="15" fill="rgb(213,165,48)" fg:x="1252" fg:w="1"/><text x="99.9315%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.7611%" y="517" width="0.0796%" height="15" fill="rgb(227,200,9)" fg:x="1253" fg:w="1"/><text x="100.0111%" y="527.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (103 samples, 8.20%)</title><rect x="91.7197%" y="597" width="8.2006%" height="15" fill="rgb(221,222,28)" fg:x="1152" fg:w="103"/><text x="91.9697%" y="607.50">engine::ses..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (103 samples, 8.20%)</title><rect x="91.7197%" y="581" width="8.2006%" height="15" fill="rgb(223,142,26)" fg:x="1152" fg:w="103"/><text x="91.9697%" y="591.50">engine::ses..</text></g><g><title>kernel::model::entry::EntryResolver::world (11 samples, 0.88%)</title><rect x="99.0446%" y="565" width="0.8758%" height="15" fill="rgb(243,46,9)" fg:x="1244" fg:w="11"/><text x="99.2946%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="99.5223%" y="549" width="0.3981%" height="15" fill="rgb(250,56,11)" fg:x="1250" fg:w="5"/><text x="99.7723%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="99.7611%" y="533" width="0.1592%" height="15" fill="rgb(229,113,5)" fg:x="1253" fg:w="2"/><text x="100.0111%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.8408%" y="517" width="0.0796%" height="15" fill="rgb(244,108,28)" fg:x="1254" fg:w="1"/><text x="100.0908%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.8408%" y="501" width="0.0796%" height="15" fill="rgb(242,119,50)" fg:x="1254" fg:w="1"/><text x="100.0908%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8408%" y="485" width="0.0796%" height="15" fill="rgb(224,164,23)" fg:x="1254" fg:w="1"/><text x="100.0908%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.8408%" y="469" width="0.0796%" height="15" fill="rgb(214,227,44)" fg:x="1254" fg:w="1"/><text x="100.0908%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8408%" y="453" width="0.0796%" height="15" fill="rgb(238,202,4)" fg:x="1254" fg:w="1"/><text x="100.0908%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.8408%" y="437" width="0.0796%" height="15" fill="rgb(213,190,30)" fg:x="1254" fg:w="1"/><text x="100.0908%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.8408%" y="421" width="0.0796%" height="15" fill="rgb(239,15,2)" fg:x="1254" fg:w="1"/><text x="100.0908%" y="431.50"></text></g><g><title>all (1,256 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(249,229,4)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="959.50"></text></g><g><title>simple-f9bc7d3f (1,256 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(239,75,44)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="943.50">simple-f9bc7d3f</text></g><g><title>_start (1,256 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(251,206,23)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="927.50">_start</text></g><g><title>__libc_start_main (1,256 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(215,208,0)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="911.50">__libc_start_main</text></g><g><title>main (1,256 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(230,75,50)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (1,256 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(246,180,39)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,256 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(249,175,24)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,256 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(247,176,22)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,256 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(241,100,24)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,256 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(233,4,35)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="815.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,256 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(211,164,46)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,256 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(242,99,53)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,256 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(243,45,33)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,256 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(217,55,21)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,256 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(245,145,46)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="735.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,256 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(215,112,45)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,256 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(228,104,16)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="703.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,256 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(239,186,38)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="687.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,256 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(228,38,35)" fg:x="0" fg:w="1256"/><text x="0.2500%" y="671.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (334 samples, 26.59%)</title><rect x="73.4076%" y="645" width="26.5924%" height="15" fill="rgb(251,42,40)" fg:x="922" fg:w="334"/><text x="73.6576%" y="655.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as cri..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (334 samples, 26.59%)</title><rect x="73.4076%" y="629" width="26.5924%" height="15" fill="rgb(210,51,19)" fg:x="922" fg:w="334"/><text x="73.6576%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (334 samples, 26.59%)</title><rect x="73.4076%" y="613" width="26.5924%" height="15" fill="rgb(236,94,42)" fg:x="922" fg:w="334"/><text x="73.6576%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9204%" y="597" width="0.0796%" height="15" fill="rgb(239,167,16)" fg:x="1255" fg:w="1"/><text x="100.1704%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="99.9204%" y="581" width="0.0796%" height="15" fill="rgb(252,175,31)" fg:x="1255" fg:w="1"/><text x="100.1704%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.9204%" y="565" width="0.0796%" height="15" fill="rgb(206,166,30)" fg:x="1255" fg:w="1"/><text x="100.1704%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.9204%" y="549" width="0.0796%" height="15" fill="rgb(206,209,37)" fg:x="1255" fg:w="1"/><text x="100.1704%" y="559.50"></text></g></svg></svg>