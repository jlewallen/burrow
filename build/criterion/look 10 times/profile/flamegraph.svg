<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1174" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1157.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1157.00"> </text><svg id="frames" x="10" width="1180" total_samples="1247"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0000%" y="757" width="0.0802%" height="15" fill="rgb(237,96,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0000%" y="741" width="0.0802%" height="15" fill="rgb(230,113,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.1604%" y="725" width="0.1604%" height="15" fill="rgb(221,224,12)" fg:x="2" fg:w="2"/><text x="0.4104%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4010%" y="661" width="0.0802%" height="15" fill="rgb(219,112,44)" fg:x="5" fg:w="1"/><text x="0.6510%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.4812%" y="661" width="0.0802%" height="15" fill="rgb(210,31,13)" fg:x="6" fg:w="1"/><text x="0.7312%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.6415%" y="645" width="0.0802%" height="15" fill="rgb(230,25,16)" fg:x="8" fg:w="1"/><text x="0.8915%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.6415%" y="629" width="0.0802%" height="15" fill="rgb(246,108,53)" fg:x="8" fg:w="1"/><text x="0.8915%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.6415%" y="613" width="0.0802%" height="15" fill="rgb(241,172,50)" fg:x="8" fg:w="1"/><text x="0.8915%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6415%" y="597" width="0.0802%" height="15" fill="rgb(235,141,10)" fg:x="8" fg:w="1"/><text x="0.8915%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7217%" y="645" width="0.0802%" height="15" fill="rgb(220,174,43)" fg:x="9" fg:w="1"/><text x="0.9717%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.48%)</title><rect x="0.8019%" y="645" width="0.4812%" height="15" fill="rgb(215,181,40)" fg:x="10" fg:w="6"/><text x="1.0519%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.1227%" y="629" width="0.1604%" height="15" fill="rgb(230,97,2)" fg:x="14" fg:w="2"/><text x="1.3727%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2831%" y="629" width="0.0802%" height="15" fill="rgb(211,25,27)" fg:x="16" fg:w="1"/><text x="1.5331%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="0.4010%" y="693" width="1.1227%" height="15" fill="rgb(230,87,26)" fg:x="5" fg:w="14"/><text x="0.6510%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="0.4010%" y="677" width="1.1227%" height="15" fill="rgb(227,160,17)" fg:x="5" fg:w="14"/><text x="0.6510%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="0.5613%" y="661" width="0.9623%" height="15" fill="rgb(244,85,34)" fg:x="7" fg:w="12"/><text x="0.8113%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.2831%" y="645" width="0.2406%" height="15" fill="rgb(207,70,0)" fg:x="16" fg:w="3"/><text x="1.5331%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.3633%" y="629" width="0.1604%" height="15" fill="rgb(223,129,7)" fg:x="17" fg:w="2"/><text x="1.6133%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4435%" y="613" width="0.0802%" height="15" fill="rgb(246,105,7)" fg:x="18" fg:w="1"/><text x="1.6935%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.92%)</title><rect x="0.0000%" y="773" width="1.9246%" height="15" fill="rgb(215,154,42)" fg:x="0" fg:w="24"/><text x="0.2500%" y="783.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (23 samples, 1.84%)</title><rect x="0.0802%" y="757" width="1.8444%" height="15" fill="rgb(220,215,30)" fg:x="1" fg:w="23"/><text x="0.3302%" y="767.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.84%)</title><rect x="0.0802%" y="741" width="1.8444%" height="15" fill="rgb(228,81,51)" fg:x="1" fg:w="23"/><text x="0.3302%" y="751.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (20 samples, 1.60%)</title><rect x="0.3208%" y="725" width="1.6038%" height="15" fill="rgb(247,71,54)" fg:x="4" fg:w="20"/><text x="0.5708%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.60%)</title><rect x="0.3208%" y="709" width="1.6038%" height="15" fill="rgb(234,176,34)" fg:x="4" fg:w="20"/><text x="0.5708%" y="719.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="1.5237%" y="693" width="0.4010%" height="15" fill="rgb(241,103,54)" fg:x="19" fg:w="5"/><text x="1.7737%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.0048%" y="709" width="0.0802%" height="15" fill="rgb(228,22,34)" fg:x="25" fg:w="1"/><text x="2.2548%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.0850%" y="677" width="0.0802%" height="15" fill="rgb(241,179,48)" fg:x="26" fg:w="1"/><text x="2.3350%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.0850%" y="661" width="0.0802%" height="15" fill="rgb(235,167,37)" fg:x="26" fg:w="1"/><text x="2.3350%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.0850%" y="645" width="0.0802%" height="15" fill="rgb(213,109,30)" fg:x="26" fg:w="1"/><text x="2.3350%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.0850%" y="629" width="0.0802%" height="15" fill="rgb(222,172,16)" fg:x="26" fg:w="1"/><text x="2.3350%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.0850%" y="613" width="0.0802%" height="15" fill="rgb(233,192,5)" fg:x="26" fg:w="1"/><text x="2.3350%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.0850%" y="597" width="0.0802%" height="15" fill="rgb(247,189,41)" fg:x="26" fg:w="1"/><text x="2.3350%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="2.0850%" y="581" width="0.0802%" height="15" fill="rgb(218,134,47)" fg:x="26" fg:w="1"/><text x="2.3350%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.0850%" y="565" width="0.0802%" height="15" fill="rgb(216,29,3)" fg:x="26" fg:w="1"/><text x="2.3350%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.0850%" y="549" width="0.0802%" height="15" fill="rgb(246,140,12)" fg:x="26" fg:w="1"/><text x="2.3350%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.0850%" y="533" width="0.0802%" height="15" fill="rgb(230,136,11)" fg:x="26" fg:w="1"/><text x="2.3350%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.0850%" y="517" width="0.0802%" height="15" fill="rgb(247,22,47)" fg:x="26" fg:w="1"/><text x="2.3350%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.0850%" y="501" width="0.0802%" height="15" fill="rgb(218,84,22)" fg:x="26" fg:w="1"/><text x="2.3350%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.0850%" y="485" width="0.0802%" height="15" fill="rgb(216,87,39)" fg:x="26" fg:w="1"/><text x="2.3350%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="2.0850%" y="469" width="0.0802%" height="15" fill="rgb(221,178,8)" fg:x="26" fg:w="1"/><text x="2.3350%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.0850%" y="453" width="0.0802%" height="15" fill="rgb(230,42,11)" fg:x="26" fg:w="1"/><text x="2.3350%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="2.0850%" y="437" width="0.0802%" height="15" fill="rgb(237,229,4)" fg:x="26" fg:w="1"/><text x="2.3350%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="2.0850%" y="421" width="0.0802%" height="15" fill="rgb(222,31,33)" fg:x="26" fg:w="1"/><text x="2.3350%" y="431.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="2.0850%" y="405" width="0.0802%" height="15" fill="rgb(210,17,39)" fg:x="26" fg:w="1"/><text x="2.3350%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.0850%" y="389" width="0.0802%" height="15" fill="rgb(244,93,20)" fg:x="26" fg:w="1"/><text x="2.3350%" y="399.50"></text></g><g><title>anyhow::error::object_drop (1 samples, 0.08%)</title><rect x="2.1652%" y="677" width="0.0802%" height="15" fill="rgb(210,40,47)" fg:x="27" fg:w="1"/><text x="2.4152%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1652%" y="661" width="0.0802%" height="15" fill="rgb(239,211,47)" fg:x="27" fg:w="1"/><text x="2.4152%" y="671.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="2.3256%" y="629" width="0.0802%" height="15" fill="rgb(251,223,49)" fg:x="29" fg:w="1"/><text x="2.5756%" y="639.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="2.2454%" y="661" width="0.2406%" height="15" fill="rgb(221,149,5)" fg:x="28" fg:w="3"/><text x="2.4954%" y="671.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="2.2454%" y="645" width="0.2406%" height="15" fill="rgb(219,224,51)" fg:x="28" fg:w="3"/><text x="2.4954%" y="655.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="2.4058%" y="629" width="0.0802%" height="15" fill="rgb(223,7,8)" fg:x="30" fg:w="1"/><text x="2.6558%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.2879%" y="581" width="0.0802%" height="15" fill="rgb(241,217,22)" fg:x="41" fg:w="1"/><text x="3.5379%" y="591.50"></text></g><g><title>dlopen (12 samples, 0.96%)</title><rect x="2.4860%" y="661" width="0.9623%" height="15" fill="rgb(248,209,0)" fg:x="31" fg:w="12"/><text x="2.7360%" y="671.50"></text></g><g><title>_dl_catch_error (12 samples, 0.96%)</title><rect x="2.4860%" y="645" width="0.9623%" height="15" fill="rgb(217,205,4)" fg:x="31" fg:w="12"/><text x="2.7360%" y="655.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.96%)</title><rect x="2.4860%" y="629" width="0.9623%" height="15" fill="rgb(228,124,39)" fg:x="31" fg:w="12"/><text x="2.7360%" y="639.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.88%)</title><rect x="2.5662%" y="613" width="0.8821%" height="15" fill="rgb(250,116,42)" fg:x="32" fg:w="11"/><text x="2.8162%" y="623.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.88%)</title><rect x="2.5662%" y="597" width="0.8821%" height="15" fill="rgb(223,202,9)" fg:x="32" fg:w="11"/><text x="2.8162%" y="607.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="3.3681%" y="581" width="0.0802%" height="15" fill="rgb(242,222,40)" fg:x="42" fg:w="1"/><text x="3.6181%" y="591.50"></text></g><g><title>libloading::safe::Library::new (16 samples, 1.28%)</title><rect x="2.2454%" y="677" width="1.2831%" height="15" fill="rgb(229,99,46)" fg:x="28" fg:w="16"/><text x="2.4954%" y="687.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="3.4483%" y="661" width="0.0802%" height="15" fill="rgb(225,56,46)" fg:x="43" fg:w="1"/><text x="3.6983%" y="671.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="3.4483%" y="645" width="0.0802%" height="15" fill="rgb(227,94,5)" fg:x="43" fg:w="1"/><text x="3.6983%" y="655.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="3.4483%" y="629" width="0.0802%" height="15" fill="rgb(205,112,38)" fg:x="43" fg:w="1"/><text x="3.6983%" y="639.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="3.4483%" y="613" width="0.0802%" height="15" fill="rgb(231,133,46)" fg:x="43" fg:w="1"/><text x="3.6983%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (20 samples, 1.60%)</title><rect x="2.0850%" y="693" width="1.6038%" height="15" fill="rgb(217,16,9)" fg:x="26" fg:w="20"/><text x="2.3350%" y="703.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (2 samples, 0.16%)</title><rect x="3.5285%" y="677" width="0.1604%" height="15" fill="rgb(249,173,9)" fg:x="44" fg:w="2"/><text x="3.7785%" y="687.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.16%)</title><rect x="3.5285%" y="661" width="0.1604%" height="15" fill="rgb(205,163,53)" fg:x="44" fg:w="2"/><text x="3.7785%" y="671.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="3.6087%" y="645" width="0.0802%" height="15" fill="rgb(217,54,41)" fg:x="45" fg:w="1"/><text x="3.8587%" y="655.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (21 samples, 1.68%)</title><rect x="2.0850%" y="709" width="1.6840%" height="15" fill="rgb(228,216,12)" fg:x="26" fg:w="21"/><text x="2.3350%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="3.6889%" y="693" width="0.0802%" height="15" fill="rgb(244,228,15)" fg:x="46" fg:w="1"/><text x="3.9389%" y="703.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="3.6889%" y="677" width="0.0802%" height="15" fill="rgb(221,176,53)" fg:x="46" fg:w="1"/><text x="3.9389%" y="687.50"></text></g><g><title>engine::session::Session::initialize (26 samples, 2.09%)</title><rect x="2.0048%" y="725" width="2.0850%" height="15" fill="rgb(205,94,34)" fg:x="25" fg:w="26"/><text x="2.2548%" y="735.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="3.7690%" y="709" width="0.3208%" height="15" fill="rgb(213,110,48)" fg:x="47" fg:w="4"/><text x="4.0190%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="3.7690%" y="693" width="0.3208%" height="15" fill="rgb(236,142,28)" fg:x="47" fg:w="4"/><text x="4.0190%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="3.7690%" y="677" width="0.3208%" height="15" fill="rgb(225,135,29)" fg:x="47" fg:w="4"/><text x="4.0190%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="3.8492%" y="661" width="0.2406%" height="15" fill="rgb(252,45,31)" fg:x="48" fg:w="3"/><text x="4.0992%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="3.8492%" y="645" width="0.2406%" height="15" fill="rgb(211,187,50)" fg:x="48" fg:w="3"/><text x="4.0992%" y="655.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="3.8492%" y="629" width="0.2406%" height="15" fill="rgb(229,109,7)" fg:x="48" fg:w="3"/><text x="4.0992%" y="639.50"></text></g><g><title>&lt;plugins_core::helping::HelpingPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="4.0898%" y="677" width="0.0802%" height="15" fill="rgb(251,131,51)" fg:x="51" fg:w="1"/><text x="4.3398%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="4.1700%" y="677" width="0.0802%" height="15" fill="rgb(251,180,35)" fg:x="52" fg:w="1"/><text x="4.4200%" y="687.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (30 samples, 2.41%)</title><rect x="1.9246%" y="773" width="2.4058%" height="15" fill="rgb(211,46,32)" fg:x="24" fg:w="30"/><text x="2.1746%" y="783.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (30 samples, 2.41%)</title><rect x="1.9246%" y="757" width="2.4058%" height="15" fill="rgb(248,123,17)" fg:x="24" fg:w="30"/><text x="2.1746%" y="767.50">en..</text></g><g><title>engine::session::Session::new (30 samples, 2.41%)</title><rect x="1.9246%" y="741" width="2.4058%" height="15" fill="rgb(227,141,18)" fg:x="24" fg:w="30"/><text x="2.1746%" y="751.50">en..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="4.0898%" y="725" width="0.2406%" height="15" fill="rgb(216,102,9)" fg:x="51" fg:w="3"/><text x="4.3398%" y="735.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="4.0898%" y="709" width="0.2406%" height="15" fill="rgb(253,47,13)" fg:x="51" fg:w="3"/><text x="4.3398%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="4.0898%" y="693" width="0.2406%" height="15" fill="rgb(226,93,23)" fg:x="51" fg:w="3"/><text x="4.3398%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.2502%" y="677" width="0.0802%" height="15" fill="rgb(247,104,17)" fg:x="53" fg:w="1"/><text x="4.5002%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.2502%" y="661" width="0.0802%" height="15" fill="rgb(233,203,26)" fg:x="53" fg:w="1"/><text x="4.5002%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.2502%" y="645" width="0.0802%" height="15" fill="rgb(244,98,49)" fg:x="53" fg:w="1"/><text x="4.5002%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.4106%" y="757" width="0.0802%" height="15" fill="rgb(235,134,22)" fg:x="55" fg:w="1"/><text x="4.6606%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.4106%" y="741" width="0.0802%" height="15" fill="rgb(221,70,32)" fg:x="55" fg:w="1"/><text x="4.6606%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.4106%" y="725" width="0.0802%" height="15" fill="rgb(238,15,50)" fg:x="55" fg:w="1"/><text x="4.6606%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.4106%" y="709" width="0.0802%" height="15" fill="rgb(215,221,48)" fg:x="55" fg:w="1"/><text x="4.6606%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.4106%" y="693" width="0.0802%" height="15" fill="rgb(236,73,3)" fg:x="55" fg:w="1"/><text x="4.6606%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.4106%" y="677" width="0.0802%" height="15" fill="rgb(250,107,11)" fg:x="55" fg:w="1"/><text x="4.6606%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.4106%" y="661" width="0.0802%" height="15" fill="rgb(242,39,14)" fg:x="55" fg:w="1"/><text x="4.6606%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.4106%" y="645" width="0.0802%" height="15" fill="rgb(248,164,37)" fg:x="55" fg:w="1"/><text x="4.6606%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.4106%" y="629" width="0.0802%" height="15" fill="rgb(217,60,12)" fg:x="55" fg:w="1"/><text x="4.6606%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.4106%" y="613" width="0.0802%" height="15" fill="rgb(240,125,29)" fg:x="55" fg:w="1"/><text x="4.6606%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.4106%" y="597" width="0.0802%" height="15" fill="rgb(208,207,28)" fg:x="55" fg:w="1"/><text x="4.6606%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.4106%" y="581" width="0.0802%" height="15" fill="rgb(209,159,27)" fg:x="55" fg:w="1"/><text x="4.6606%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.4106%" y="565" width="0.0802%" height="15" fill="rgb(251,176,53)" fg:x="55" fg:w="1"/><text x="4.6606%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.4908%" y="741" width="0.0802%" height="15" fill="rgb(211,85,7)" fg:x="56" fg:w="1"/><text x="4.7408%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="4.4908%" y="725" width="0.0802%" height="15" fill="rgb(216,64,54)" fg:x="56" fg:w="1"/><text x="4.7408%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.4908%" y="709" width="0.0802%" height="15" fill="rgb(217,54,24)" fg:x="56" fg:w="1"/><text x="4.7408%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (2 samples, 0.16%)</title><rect x="4.4908%" y="757" width="0.1604%" height="15" fill="rgb(208,206,53)" fg:x="56" fg:w="2"/><text x="4.7408%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="4.5710%" y="741" width="0.0802%" height="15" fill="rgb(251,74,39)" fg:x="57" fg:w="1"/><text x="4.8210%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="4.6512%" y="725" width="0.1604%" height="15" fill="rgb(226,47,5)" fg:x="58" fg:w="2"/><text x="4.9012%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="4.6512%" y="741" width="0.2406%" height="15" fill="rgb(234,111,33)" fg:x="58" fg:w="3"/><text x="4.9012%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.8115%" y="725" width="0.0802%" height="15" fill="rgb(251,14,10)" fg:x="60" fg:w="1"/><text x="5.0615%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.8115%" y="709" width="0.0802%" height="15" fill="rgb(232,43,0)" fg:x="60" fg:w="1"/><text x="5.0615%" y="719.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="4.8917%" y="741" width="0.0802%" height="15" fill="rgb(222,68,43)" fg:x="61" fg:w="1"/><text x="5.1417%" y="751.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="4.8917%" y="725" width="0.0802%" height="15" fill="rgb(217,24,23)" fg:x="61" fg:w="1"/><text x="5.1417%" y="735.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="4.8917%" y="709" width="0.0802%" height="15" fill="rgb(229,209,14)" fg:x="61" fg:w="1"/><text x="5.1417%" y="719.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="4.8917%" y="693" width="0.0802%" height="15" fill="rgb(250,149,48)" fg:x="61" fg:w="1"/><text x="5.1417%" y="703.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="4.8917%" y="677" width="0.0802%" height="15" fill="rgb(210,120,37)" fg:x="61" fg:w="1"/><text x="5.1417%" y="687.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="4.8917%" y="661" width="0.0802%" height="15" fill="rgb(210,21,8)" fg:x="61" fg:w="1"/><text x="5.1417%" y="671.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="4.8917%" y="645" width="0.0802%" height="15" fill="rgb(243,145,7)" fg:x="61" fg:w="1"/><text x="5.1417%" y="655.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="4.8917%" y="629" width="0.0802%" height="15" fill="rgb(238,178,32)" fg:x="61" fg:w="1"/><text x="5.1417%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.0521%" y="709" width="0.0802%" height="15" fill="rgb(222,4,10)" fg:x="63" fg:w="1"/><text x="5.3021%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="5.0521%" y="693" width="0.0802%" height="15" fill="rgb(239,7,37)" fg:x="63" fg:w="1"/><text x="5.3021%" y="703.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="5.0521%" y="677" width="0.0802%" height="15" fill="rgb(215,31,37)" fg:x="63" fg:w="1"/><text x="5.3021%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.0521%" y="661" width="0.0802%" height="15" fill="rgb(224,83,33)" fg:x="63" fg:w="1"/><text x="5.3021%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="5.2125%" y="645" width="0.2406%" height="15" fill="rgb(239,55,3)" fg:x="65" fg:w="3"/><text x="5.4625%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.2927%" y="629" width="0.1604%" height="15" fill="rgb(247,92,11)" fg:x="66" fg:w="2"/><text x="5.5427%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="5.2125%" y="661" width="0.6415%" height="15" fill="rgb(239,200,7)" fg:x="65" fg:w="8"/><text x="5.4625%" y="671.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="5.4531%" y="645" width="0.4010%" height="15" fill="rgb(227,115,8)" fg:x="68" fg:w="5"/><text x="5.7031%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.6135%" y="629" width="0.2406%" height="15" fill="rgb(215,189,27)" fg:x="70" fg:w="3"/><text x="5.8635%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="5.6135%" y="613" width="0.2406%" height="15" fill="rgb(251,216,39)" fg:x="70" fg:w="3"/><text x="5.8635%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="5.9342%" y="645" width="0.3208%" height="15" fill="rgb(207,29,47)" fg:x="74" fg:w="4"/><text x="6.1842%" y="655.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="5.9342%" y="629" width="0.3208%" height="15" fill="rgb(210,71,34)" fg:x="74" fg:w="4"/><text x="6.1842%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="6.0144%" y="613" width="0.2406%" height="15" fill="rgb(253,217,51)" fg:x="75" fg:w="3"/><text x="6.2644%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.1748%" y="597" width="0.0802%" height="15" fill="rgb(222,117,46)" fg:x="77" fg:w="1"/><text x="6.4248%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="6.3352%" y="629" width="0.2406%" height="15" fill="rgb(226,132,6)" fg:x="79" fg:w="3"/><text x="6.5852%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="6.3352%" y="613" width="0.2406%" height="15" fill="rgb(254,145,51)" fg:x="79" fg:w="3"/><text x="6.5852%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.3352%" y="597" width="0.2406%" height="15" fill="rgb(231,199,27)" fg:x="79" fg:w="3"/><text x="6.5852%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.4154%" y="581" width="0.1604%" height="15" fill="rgb(245,158,14)" fg:x="80" fg:w="2"/><text x="6.6654%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.4154%" y="565" width="0.1604%" height="15" fill="rgb(240,113,14)" fg:x="80" fg:w="2"/><text x="6.6654%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.4154%" y="549" width="0.1604%" height="15" fill="rgb(210,20,13)" fg:x="80" fg:w="2"/><text x="6.6654%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="6.4154%" y="533" width="0.1604%" height="15" fill="rgb(241,144,13)" fg:x="80" fg:w="2"/><text x="6.6654%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="6.4154%" y="517" width="0.1604%" height="15" fill="rgb(235,43,34)" fg:x="80" fg:w="2"/><text x="6.6654%" y="527.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="6.4154%" y="501" width="0.1604%" height="15" fill="rgb(208,36,20)" fg:x="80" fg:w="2"/><text x="6.6654%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="6.5758%" y="629" width="0.5613%" height="15" fill="rgb(239,204,10)" fg:x="82" fg:w="7"/><text x="6.8258%" y="639.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="6.6560%" y="613" width="0.4812%" height="15" fill="rgb(217,84,43)" fg:x="83" fg:w="6"/><text x="6.9060%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="6.6560%" y="597" width="0.4812%" height="15" fill="rgb(241,170,50)" fg:x="83" fg:w="6"/><text x="6.9060%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="6.7362%" y="581" width="0.4010%" height="15" fill="rgb(226,205,29)" fg:x="84" fg:w="5"/><text x="6.9862%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="6.8164%" y="565" width="0.3208%" height="15" fill="rgb(233,113,1)" fg:x="85" fg:w="4"/><text x="7.0664%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="6.8164%" y="549" width="0.3208%" height="15" fill="rgb(253,98,13)" fg:x="85" fg:w="4"/><text x="7.0664%" y="559.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="6.8164%" y="533" width="0.3208%" height="15" fill="rgb(211,115,12)" fg:x="85" fg:w="4"/><text x="7.0664%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="7.2975%" y="613" width="0.0802%" height="15" fill="rgb(208,12,16)" fg:x="91" fg:w="1"/><text x="7.5475%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.2975%" y="597" width="0.0802%" height="15" fill="rgb(237,193,54)" fg:x="91" fg:w="1"/><text x="7.5475%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="7.3777%" y="613" width="0.2406%" height="15" fill="rgb(243,22,42)" fg:x="92" fg:w="3"/><text x="7.6277%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.4579%" y="597" width="0.1604%" height="15" fill="rgb(233,151,36)" fg:x="93" fg:w="2"/><text x="7.7079%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.5381%" y="581" width="0.0802%" height="15" fill="rgb(237,57,45)" fg:x="94" fg:w="1"/><text x="7.7881%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="7.5381%" y="565" width="0.0802%" height="15" fill="rgb(221,88,17)" fg:x="94" fg:w="1"/><text x="7.7881%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="7.6985%" y="597" width="0.4010%" height="15" fill="rgb(230,79,15)" fg:x="96" fg:w="5"/><text x="7.9485%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.8589%" y="581" width="0.2406%" height="15" fill="rgb(213,57,13)" fg:x="98" fg:w="3"/><text x="8.1089%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.9391%" y="565" width="0.1604%" height="15" fill="rgb(222,116,39)" fg:x="99" fg:w="2"/><text x="8.1891%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.0192%" y="549" width="0.0802%" height="15" fill="rgb(245,107,2)" fg:x="100" fg:w="1"/><text x="8.2692%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.1796%" y="581" width="0.0802%" height="15" fill="rgb(238,1,10)" fg:x="102" fg:w="1"/><text x="8.4296%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.1796%" y="565" width="0.0802%" height="15" fill="rgb(249,4,48)" fg:x="102" fg:w="1"/><text x="8.4296%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.1796%" y="549" width="0.0802%" height="15" fill="rgb(223,151,18)" fg:x="102" fg:w="1"/><text x="8.4296%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.1796%" y="533" width="0.0802%" height="15" fill="rgb(227,65,43)" fg:x="102" fg:w="1"/><text x="8.4296%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="8.0994%" y="597" width="0.2406%" height="15" fill="rgb(218,40,45)" fg:x="101" fg:w="3"/><text x="8.3494%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.2598%" y="581" width="0.0802%" height="15" fill="rgb(252,121,31)" fg:x="103" fg:w="1"/><text x="8.5098%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.2598%" y="565" width="0.0802%" height="15" fill="rgb(219,158,43)" fg:x="103" fg:w="1"/><text x="8.5098%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="7.6183%" y="613" width="0.8019%" height="15" fill="rgb(231,162,42)" fg:x="95" fg:w="10"/><text x="7.8683%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.3400%" y="597" width="0.0802%" height="15" fill="rgb(217,179,25)" fg:x="104" fg:w="1"/><text x="8.5900%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.3400%" y="581" width="0.0802%" height="15" fill="rgb(206,212,31)" fg:x="104" fg:w="1"/><text x="8.5900%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.3400%" y="565" width="0.0802%" height="15" fill="rgb(235,144,12)" fg:x="104" fg:w="1"/><text x="8.5900%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.25%)</title><rect x="6.2550%" y="645" width="2.2454%" height="15" fill="rgb(213,51,10)" fg:x="78" fg:w="28"/><text x="6.5050%" y="655.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="7.1371%" y="629" width="1.3633%" height="15" fill="rgb(231,145,14)" fg:x="89" fg:w="17"/><text x="7.3871%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.4202%" y="613" width="0.0802%" height="15" fill="rgb(235,15,28)" fg:x="105" fg:w="1"/><text x="8.6702%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.4202%" y="597" width="0.0802%" height="15" fill="rgb(237,206,10)" fg:x="105" fg:w="1"/><text x="8.6702%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.4202%" y="581" width="0.0802%" height="15" fill="rgb(236,227,27)" fg:x="105" fg:w="1"/><text x="8.6702%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (47 samples, 3.77%)</title><rect x="5.2125%" y="677" width="3.7690%" height="15" fill="rgb(246,83,35)" fg:x="65" fg:w="47"/><text x="5.4625%" y="687.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (39 samples, 3.13%)</title><rect x="5.8540%" y="661" width="3.1275%" height="15" fill="rgb(220,136,24)" fg:x="73" fg:w="39"/><text x="6.1040%" y="671.50">ser..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="8.5004%" y="645" width="0.4812%" height="15" fill="rgb(217,3,25)" fg:x="106" fg:w="6"/><text x="8.7504%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="8.5806%" y="629" width="0.4010%" height="15" fill="rgb(239,24,14)" fg:x="107" fg:w="5"/><text x="8.8306%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="8.6608%" y="613" width="0.3208%" height="15" fill="rgb(244,16,53)" fg:x="108" fg:w="4"/><text x="8.9108%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="8.6608%" y="597" width="0.3208%" height="15" fill="rgb(208,175,44)" fg:x="108" fg:w="4"/><text x="8.9108%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="8.6608%" y="581" width="0.3208%" height="15" fill="rgb(252,18,48)" fg:x="108" fg:w="4"/><text x="8.9108%" y="591.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="8.8212%" y="565" width="0.1604%" height="15" fill="rgb(234,199,32)" fg:x="110" fg:w="2"/><text x="9.0712%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.0617%" y="645" width="0.0802%" height="15" fill="rgb(225,77,54)" fg:x="113" fg:w="1"/><text x="9.3117%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.1419%" y="645" width="0.0802%" height="15" fill="rgb(225,42,25)" fg:x="114" fg:w="1"/><text x="9.3919%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.1419%" y="629" width="0.0802%" height="15" fill="rgb(242,227,46)" fg:x="114" fg:w="1"/><text x="9.3919%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="9.3023%" y="629" width="0.1604%" height="15" fill="rgb(246,197,35)" fg:x="116" fg:w="2"/><text x="9.5523%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.6231%" y="613" width="0.0802%" height="15" fill="rgb(215,159,26)" fg:x="120" fg:w="1"/><text x="9.8731%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.7033%" y="597" width="0.0802%" height="15" fill="rgb(212,194,50)" fg:x="121" fg:w="1"/><text x="9.9533%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.7835%" y="565" width="0.0802%" height="15" fill="rgb(246,132,1)" fg:x="122" fg:w="1"/><text x="10.0335%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="9.7835%" y="597" width="0.1604%" height="15" fill="rgb(217,71,7)" fg:x="122" fg:w="2"/><text x="10.0335%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="9.7835%" y="581" width="0.1604%" height="15" fill="rgb(252,59,32)" fg:x="122" fg:w="2"/><text x="10.0335%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.8637%" y="565" width="0.0802%" height="15" fill="rgb(253,204,25)" fg:x="123" fg:w="1"/><text x="10.1137%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="8.9816%" y="677" width="1.2029%" height="15" fill="rgb(232,21,16)" fg:x="112" fg:w="15"/><text x="9.2316%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.20%)</title><rect x="8.9816%" y="661" width="1.2029%" height="15" fill="rgb(248,90,29)" fg:x="112" fg:w="15"/><text x="9.2316%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="9.2221%" y="645" width="0.9623%" height="15" fill="rgb(249,223,7)" fg:x="115" fg:w="12"/><text x="9.4721%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="9.4627%" y="629" width="0.7217%" height="15" fill="rgb(231,119,42)" fg:x="118" fg:w="9"/><text x="9.7127%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="9.7033%" y="613" width="0.4812%" height="15" fill="rgb(215,41,35)" fg:x="121" fg:w="6"/><text x="9.9533%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="9.9439%" y="597" width="0.2406%" height="15" fill="rgb(220,44,45)" fg:x="124" fg:w="3"/><text x="10.1939%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="9.9439%" y="581" width="0.2406%" height="15" fill="rgb(253,197,36)" fg:x="124" fg:w="3"/><text x="10.1939%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.0241%" y="565" width="0.1604%" height="15" fill="rgb(245,225,54)" fg:x="125" fg:w="2"/><text x="10.2741%" y="575.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="10.2646%" y="661" width="0.0802%" height="15" fill="rgb(239,94,37)" fg:x="128" fg:w="1"/><text x="10.5146%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.4250%" y="629" width="0.1604%" height="15" fill="rgb(242,217,10)" fg:x="130" fg:w="2"/><text x="10.6750%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5052%" y="613" width="0.0802%" height="15" fill="rgb(250,193,7)" fg:x="131" fg:w="1"/><text x="10.7552%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.6656%" y="597" width="0.0802%" height="15" fill="rgb(230,104,19)" fg:x="133" fg:w="1"/><text x="10.9156%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.7458%" y="597" width="0.0802%" height="15" fill="rgb(230,181,4)" fg:x="134" fg:w="1"/><text x="10.9958%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.7458%" y="581" width="0.0802%" height="15" fill="rgb(216,219,49)" fg:x="134" fg:w="1"/><text x="10.9958%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="10.5854%" y="629" width="0.3208%" height="15" fill="rgb(254,144,0)" fg:x="132" fg:w="4"/><text x="10.8354%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="10.5854%" y="613" width="0.3208%" height="15" fill="rgb(205,209,38)" fg:x="132" fg:w="4"/><text x="10.8354%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.8260%" y="597" width="0.0802%" height="15" fill="rgb(240,21,42)" fg:x="135" fg:w="1"/><text x="11.0760%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="10.8260%" y="581" width="0.0802%" height="15" fill="rgb(241,132,3)" fg:x="135" fg:w="1"/><text x="11.0760%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9062%" y="629" width="0.0802%" height="15" fill="rgb(225,14,2)" fg:x="136" fg:w="1"/><text x="11.1562%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.9062%" y="613" width="0.0802%" height="15" fill="rgb(210,141,35)" fg:x="136" fg:w="1"/><text x="11.1562%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.9062%" y="597" width="0.0802%" height="15" fill="rgb(251,14,44)" fg:x="136" fg:w="1"/><text x="11.1562%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="11.0666%" y="597" width="0.0802%" height="15" fill="rgb(247,48,18)" fg:x="138" fg:w="1"/><text x="11.3166%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="11.2269%" y="549" width="0.3208%" height="15" fill="rgb(225,0,40)" fg:x="140" fg:w="4"/><text x="11.4769%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="11.3873%" y="533" width="0.1604%" height="15" fill="rgb(221,31,33)" fg:x="142" fg:w="2"/><text x="11.6373%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.4675%" y="517" width="0.0802%" height="15" fill="rgb(237,42,40)" fg:x="143" fg:w="1"/><text x="11.7175%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="11.2269%" y="581" width="0.4010%" height="15" fill="rgb(233,51,29)" fg:x="140" fg:w="5"/><text x="11.4769%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="11.2269%" y="565" width="0.4010%" height="15" fill="rgb(226,58,20)" fg:x="140" fg:w="5"/><text x="11.4769%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.5477%" y="549" width="0.0802%" height="15" fill="rgb(208,98,7)" fg:x="144" fg:w="1"/><text x="11.7977%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.7081%" y="517" width="0.0802%" height="15" fill="rgb(228,143,44)" fg:x="146" fg:w="1"/><text x="11.9581%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.7081%" y="549" width="0.1604%" height="15" fill="rgb(246,55,38)" fg:x="146" fg:w="2"/><text x="11.9581%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.7081%" y="533" width="0.1604%" height="15" fill="rgb(247,87,16)" fg:x="146" fg:w="2"/><text x="11.9581%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.7883%" y="517" width="0.0802%" height="15" fill="rgb(234,129,42)" fg:x="147" fg:w="1"/><text x="12.0383%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="11.8685%" y="549" width="0.0802%" height="15" fill="rgb(220,82,16)" fg:x="148" fg:w="1"/><text x="12.1185%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="11.8685%" y="533" width="0.0802%" height="15" fill="rgb(211,88,4)" fg:x="148" fg:w="1"/><text x="12.1185%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.0289%" y="533" width="0.0802%" height="15" fill="rgb(248,151,21)" fg:x="150" fg:w="1"/><text x="12.2789%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0289%" y="517" width="0.0802%" height="15" fill="rgb(238,163,6)" fg:x="150" fg:w="1"/><text x="12.2789%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0289%" y="501" width="0.0802%" height="15" fill="rgb(209,183,11)" fg:x="150" fg:w="1"/><text x="12.2789%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0289%" y="485" width="0.0802%" height="15" fill="rgb(219,37,20)" fg:x="150" fg:w="1"/><text x="12.2789%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.28%)</title><rect x="11.0666%" y="613" width="1.2831%" height="15" fill="rgb(210,158,4)" fg:x="138" fg:w="16"/><text x="11.3166%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="11.1468%" y="597" width="1.2029%" height="15" fill="rgb(221,167,53)" fg:x="139" fg:w="15"/><text x="11.3968%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="11.6279%" y="581" width="0.7217%" height="15" fill="rgb(237,151,45)" fg:x="145" fg:w="9"/><text x="11.8779%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="11.7081%" y="565" width="0.6415%" height="15" fill="rgb(231,39,3)" fg:x="146" fg:w="8"/><text x="11.9581%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="11.9487%" y="549" width="0.4010%" height="15" fill="rgb(212,167,28)" fg:x="149" fg:w="5"/><text x="12.1987%" y="559.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="12.1091%" y="533" width="0.2406%" height="15" fill="rgb(232,178,8)" fg:x="151" fg:w="3"/><text x="12.3591%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.3496%" y="613" width="0.0802%" height="15" fill="rgb(225,151,20)" fg:x="154" fg:w="1"/><text x="12.5996%" y="623.50"></text></g><g><title>kernel::model::any_entity_changes (29 samples, 2.33%)</title><rect x="10.1844%" y="677" width="2.3256%" height="15" fill="rgb(238,3,37)" fg:x="127" fg:w="29"/><text x="10.4344%" y="687.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (27 samples, 2.17%)</title><rect x="10.3448%" y="661" width="2.1652%" height="15" fill="rgb(251,147,42)" fg:x="129" fg:w="27"/><text x="10.5948%" y="671.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 2.17%)</title><rect x="10.3448%" y="645" width="2.1652%" height="15" fill="rgb(208,173,10)" fg:x="129" fg:w="27"/><text x="10.5948%" y="655.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.52%)</title><rect x="10.9864%" y="629" width="1.5237%" height="15" fill="rgb(246,225,4)" fg:x="137" fg:w="19"/><text x="11.2364%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.4298%" y="613" width="0.0802%" height="15" fill="rgb(248,102,6)" fg:x="155" fg:w="1"/><text x="12.6798%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.4298%" y="597" width="0.0802%" height="15" fill="rgb(232,6,21)" fg:x="155" fg:w="1"/><text x="12.6798%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="12.4298%" y="581" width="0.0802%" height="15" fill="rgb(221,179,22)" fg:x="155" fg:w="1"/><text x="12.6798%" y="591.50"></text></g><g><title>engine::session::Session::flush (99 samples, 7.94%)</title><rect x="4.6512%" y="757" width="7.9391%" height="15" fill="rgb(252,50,20)" fg:x="58" fg:w="99"/><text x="4.9012%" y="767.50">engine::ses..</text></g><g><title>engine::session::state::State::close (95 samples, 7.62%)</title><rect x="4.9719%" y="741" width="7.6183%" height="15" fill="rgb(222,56,38)" fg:x="62" fg:w="95"/><text x="5.2219%" y="751.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (94 samples, 7.54%)</title><rect x="5.0521%" y="725" width="7.5381%" height="15" fill="rgb(206,193,29)" fg:x="63" fg:w="94"/><text x="5.3021%" y="735.50">engine::se..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (93 samples, 7.46%)</title><rect x="5.1323%" y="709" width="7.4579%" height="15" fill="rgb(239,192,45)" fg:x="64" fg:w="93"/><text x="5.3823%" y="719.50">engine::se..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (92 samples, 7.38%)</title><rect x="5.2125%" y="693" width="7.3777%" height="15" fill="rgb(254,18,36)" fg:x="65" fg:w="92"/><text x="5.4625%" y="703.50">engine::se..</text></g><g><title>kernel::perms::find_acls (1 samples, 0.08%)</title><rect x="12.5100%" y="677" width="0.0802%" height="15" fill="rgb(221,127,11)" fg:x="156" fg:w="1"/><text x="12.7600%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7506%" y="549" width="0.0802%" height="15" fill="rgb(234,146,35)" fg:x="159" fg:w="1"/><text x="13.0006%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="12.7506%" y="725" width="0.1604%" height="15" fill="rgb(254,201,37)" fg:x="159" fg:w="2"/><text x="13.0006%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="12.7506%" y="709" width="0.1604%" height="15" fill="rgb(211,202,23)" fg:x="159" fg:w="2"/><text x="13.0006%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="12.7506%" y="693" width="0.1604%" height="15" fill="rgb(237,91,2)" fg:x="159" fg:w="2"/><text x="13.0006%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="12.7506%" y="677" width="0.1604%" height="15" fill="rgb(226,228,36)" fg:x="159" fg:w="2"/><text x="13.0006%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="12.7506%" y="661" width="0.1604%" height="15" fill="rgb(213,63,50)" fg:x="159" fg:w="2"/><text x="13.0006%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="12.7506%" y="645" width="0.1604%" height="15" fill="rgb(235,194,19)" fg:x="159" fg:w="2"/><text x="13.0006%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="12.7506%" y="629" width="0.1604%" height="15" fill="rgb(207,204,18)" fg:x="159" fg:w="2"/><text x="13.0006%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="12.7506%" y="613" width="0.1604%" height="15" fill="rgb(248,8,7)" fg:x="159" fg:w="2"/><text x="13.0006%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="12.7506%" y="597" width="0.1604%" height="15" fill="rgb(223,145,47)" fg:x="159" fg:w="2"/><text x="13.0006%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="12.7506%" y="581" width="0.1604%" height="15" fill="rgb(228,84,11)" fg:x="159" fg:w="2"/><text x="13.0006%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="12.7506%" y="565" width="0.1604%" height="15" fill="rgb(218,76,45)" fg:x="159" fg:w="2"/><text x="13.0006%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.8308%" y="549" width="0.0802%" height="15" fill="rgb(223,80,15)" fg:x="160" fg:w="1"/><text x="13.0808%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.8308%" y="533" width="0.0802%" height="15" fill="rgb(219,218,33)" fg:x="160" fg:w="1"/><text x="13.0808%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.8308%" y="517" width="0.0802%" height="15" fill="rgb(208,51,11)" fg:x="160" fg:w="1"/><text x="13.0808%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="12.8308%" y="501" width="0.0802%" height="15" fill="rgb(229,165,39)" fg:x="160" fg:w="1"/><text x="13.0808%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.8308%" y="485" width="0.0802%" height="15" fill="rgb(241,100,24)" fg:x="160" fg:w="1"/><text x="13.0808%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.8308%" y="469" width="0.0802%" height="15" fill="rgb(228,14,23)" fg:x="160" fg:w="1"/><text x="13.0808%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.8308%" y="453" width="0.0802%" height="15" fill="rgb(247,116,52)" fg:x="160" fg:w="1"/><text x="13.0808%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.8308%" y="437" width="0.0802%" height="15" fill="rgb(216,149,33)" fg:x="160" fg:w="1"/><text x="13.0808%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.8308%" y="421" width="0.0802%" height="15" fill="rgb(238,142,29)" fg:x="160" fg:w="1"/><text x="13.0808%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="12.8308%" y="405" width="0.0802%" height="15" fill="rgb(224,83,40)" fg:x="160" fg:w="1"/><text x="13.0808%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="12.8308%" y="389" width="0.0802%" height="15" fill="rgb(234,165,11)" fg:x="160" fg:w="1"/><text x="13.0808%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="12.8308%" y="373" width="0.0802%" height="15" fill="rgb(215,96,23)" fg:x="160" fg:w="1"/><text x="13.0808%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="12.8308%" y="357" width="0.0802%" height="15" fill="rgb(233,179,26)" fg:x="160" fg:w="1"/><text x="13.0808%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="12.8308%" y="341" width="0.0802%" height="15" fill="rgb(225,129,33)" fg:x="160" fg:w="1"/><text x="13.0808%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="12.8308%" y="325" width="0.0802%" height="15" fill="rgb(237,49,13)" fg:x="160" fg:w="1"/><text x="13.0808%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.8308%" y="309" width="0.0802%" height="15" fill="rgb(211,3,31)" fg:x="160" fg:w="1"/><text x="13.0808%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="12.8308%" y="293" width="0.0802%" height="15" fill="rgb(216,152,19)" fg:x="160" fg:w="1"/><text x="13.0808%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.8308%" y="277" width="0.0802%" height="15" fill="rgb(251,121,35)" fg:x="160" fg:w="1"/><text x="13.0808%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="12.8308%" y="261" width="0.0802%" height="15" fill="rgb(210,217,47)" fg:x="160" fg:w="1"/><text x="13.0808%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="12.8308%" y="245" width="0.0802%" height="15" fill="rgb(244,116,22)" fg:x="160" fg:w="1"/><text x="13.0808%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="12.8308%" y="229" width="0.0802%" height="15" fill="rgb(228,17,21)" fg:x="160" fg:w="1"/><text x="13.0808%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.8308%" y="213" width="0.0802%" height="15" fill="rgb(240,149,34)" fg:x="160" fg:w="1"/><text x="13.0808%" y="223.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9110%" y="677" width="0.0802%" height="15" fill="rgb(208,125,47)" fg:x="161" fg:w="1"/><text x="13.1610%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9110%" y="661" width="0.0802%" height="15" fill="rgb(249,186,39)" fg:x="161" fg:w="1"/><text x="13.1610%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9110%" y="645" width="0.0802%" height="15" fill="rgb(240,220,33)" fg:x="161" fg:w="1"/><text x="13.1610%" y="655.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="12.9110%" y="725" width="0.2406%" height="15" fill="rgb(243,110,23)" fg:x="161" fg:w="3"/><text x="13.1610%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="12.9110%" y="709" width="0.2406%" height="15" fill="rgb(219,163,46)" fg:x="161" fg:w="3"/><text x="13.1610%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.9110%" y="693" width="0.2406%" height="15" fill="rgb(216,126,30)" fg:x="161" fg:w="3"/><text x="13.1610%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="12.9912%" y="677" width="0.1604%" height="15" fill="rgb(208,139,11)" fg:x="162" fg:w="2"/><text x="13.2412%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="12.9912%" y="661" width="0.1604%" height="15" fill="rgb(213,118,36)" fg:x="162" fg:w="2"/><text x="13.2412%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="12.9912%" y="645" width="0.1604%" height="15" fill="rgb(226,43,17)" fg:x="162" fg:w="2"/><text x="13.2412%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.0714%" y="629" width="0.0802%" height="15" fill="rgb(254,217,4)" fg:x="163" fg:w="1"/><text x="13.3214%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.1516%" y="645" width="0.0802%" height="15" fill="rgb(210,134,47)" fg:x="164" fg:w="1"/><text x="13.4016%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.1516%" y="629" width="0.0802%" height="15" fill="rgb(237,24,49)" fg:x="164" fg:w="1"/><text x="13.4016%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.1516%" y="613" width="0.0802%" height="15" fill="rgb(251,39,46)" fg:x="164" fg:w="1"/><text x="13.4016%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.1516%" y="597" width="0.0802%" height="15" fill="rgb(251,220,3)" fg:x="164" fg:w="1"/><text x="13.4016%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.1516%" y="581" width="0.0802%" height="15" fill="rgb(228,105,12)" fg:x="164" fg:w="1"/><text x="13.4016%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="13.1516%" y="709" width="0.1604%" height="15" fill="rgb(215,196,1)" fg:x="164" fg:w="2"/><text x="13.4016%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="13.1516%" y="693" width="0.1604%" height="15" fill="rgb(214,33,39)" fg:x="164" fg:w="2"/><text x="13.4016%" y="703.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="13.1516%" y="677" width="0.1604%" height="15" fill="rgb(220,19,52)" fg:x="164" fg:w="2"/><text x="13.4016%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="13.1516%" y="661" width="0.1604%" height="15" fill="rgb(221,78,38)" fg:x="164" fg:w="2"/><text x="13.4016%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.2318%" y="645" width="0.0802%" height="15" fill="rgb(253,30,16)" fg:x="165" fg:w="1"/><text x="13.4818%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.2318%" y="629" width="0.0802%" height="15" fill="rgb(242,65,0)" fg:x="165" fg:w="1"/><text x="13.4818%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.2318%" y="613" width="0.0802%" height="15" fill="rgb(235,201,12)" fg:x="165" fg:w="1"/><text x="13.4818%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (20 samples, 1.60%)</title><rect x="12.5902%" y="741" width="1.6038%" height="15" fill="rgb(233,161,9)" fg:x="157" fg:w="20"/><text x="12.8402%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (13 samples, 1.04%)</title><rect x="13.1516%" y="725" width="1.0425%" height="15" fill="rgb(241,207,41)" fg:x="164" fg:w="13"/><text x="13.4016%" y="735.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (11 samples, 0.88%)</title><rect x="13.3119%" y="709" width="0.8821%" height="15" fill="rgb(212,69,46)" fg:x="166" fg:w="11"/><text x="13.5619%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.88%)</title><rect x="13.3119%" y="693" width="0.8821%" height="15" fill="rgb(239,69,45)" fg:x="166" fg:w="11"/><text x="13.5619%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.88%)</title><rect x="13.3119%" y="677" width="0.8821%" height="15" fill="rgb(242,117,48)" fg:x="166" fg:w="11"/><text x="13.5619%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.80%)</title><rect x="13.3921%" y="661" width="0.8019%" height="15" fill="rgb(228,41,36)" fg:x="167" fg:w="10"/><text x="13.6421%" y="671.50"></text></g><g><title>__libc_malloc (9 samples, 0.72%)</title><rect x="13.4723%" y="645" width="0.7217%" height="15" fill="rgb(212,3,32)" fg:x="168" fg:w="9"/><text x="13.7223%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1941%" y="661" width="0.0802%" height="15" fill="rgb(233,41,49)" fg:x="177" fg:w="1"/><text x="14.4441%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1941%" y="645" width="0.0802%" height="15" fill="rgb(252,170,49)" fg:x="177" fg:w="1"/><text x="14.4441%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1941%" y="629" width="0.0802%" height="15" fill="rgb(229,53,26)" fg:x="177" fg:w="1"/><text x="14.4441%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="14.1941%" y="725" width="0.1604%" height="15" fill="rgb(217,157,12)" fg:x="177" fg:w="2"/><text x="14.4441%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="14.1941%" y="709" width="0.1604%" height="15" fill="rgb(227,17,9)" fg:x="177" fg:w="2"/><text x="14.4441%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="14.1941%" y="693" width="0.1604%" height="15" fill="rgb(218,84,12)" fg:x="177" fg:w="2"/><text x="14.4441%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.1941%" y="677" width="0.1604%" height="15" fill="rgb(212,79,24)" fg:x="177" fg:w="2"/><text x="14.4441%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.2743%" y="661" width="0.0802%" height="15" fill="rgb(217,222,37)" fg:x="178" fg:w="1"/><text x="14.5243%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2743%" y="645" width="0.0802%" height="15" fill="rgb(246,208,8)" fg:x="178" fg:w="1"/><text x="14.5243%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.2743%" y="629" width="0.0802%" height="15" fill="rgb(244,133,10)" fg:x="178" fg:w="1"/><text x="14.5243%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2743%" y="613" width="0.0802%" height="15" fill="rgb(209,219,41)" fg:x="178" fg:w="1"/><text x="14.5243%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.2743%" y="597" width="0.0802%" height="15" fill="rgb(253,175,45)" fg:x="178" fg:w="1"/><text x="14.5243%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2743%" y="581" width="0.0802%" height="15" fill="rgb(235,100,37)" fg:x="178" fg:w="1"/><text x="14.5243%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.2743%" y="565" width="0.0802%" height="15" fill="rgb(225,87,19)" fg:x="178" fg:w="1"/><text x="14.5243%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="14.3545%" y="725" width="0.0802%" height="15" fill="rgb(217,152,17)" fg:x="179" fg:w="1"/><text x="14.6045%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3545%" y="709" width="0.0802%" height="15" fill="rgb(235,72,13)" fg:x="179" fg:w="1"/><text x="14.6045%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3545%" y="693" width="0.0802%" height="15" fill="rgb(233,140,18)" fg:x="179" fg:w="1"/><text x="14.6045%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3545%" y="677" width="0.0802%" height="15" fill="rgb(207,212,28)" fg:x="179" fg:w="1"/><text x="14.6045%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.3545%" y="661" width="0.0802%" height="15" fill="rgb(220,130,25)" fg:x="179" fg:w="1"/><text x="14.6045%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.3545%" y="645" width="0.0802%" height="15" fill="rgb(205,55,34)" fg:x="179" fg:w="1"/><text x="14.6045%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.3545%" y="629" width="0.0802%" height="15" fill="rgb(237,54,35)" fg:x="179" fg:w="1"/><text x="14.6045%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.3545%" y="613" width="0.0802%" height="15" fill="rgb(208,67,23)" fg:x="179" fg:w="1"/><text x="14.6045%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.3545%" y="597" width="0.0802%" height="15" fill="rgb(206,207,50)" fg:x="179" fg:w="1"/><text x="14.6045%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.3545%" y="581" width="0.0802%" height="15" fill="rgb(213,211,42)" fg:x="179" fg:w="1"/><text x="14.6045%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.3545%" y="565" width="0.0802%" height="15" fill="rgb(252,197,50)" fg:x="179" fg:w="1"/><text x="14.6045%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.3545%" y="549" width="0.0802%" height="15" fill="rgb(251,211,41)" fg:x="179" fg:w="1"/><text x="14.6045%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.3545%" y="533" width="0.0802%" height="15" fill="rgb(229,211,5)" fg:x="179" fg:w="1"/><text x="14.6045%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.3545%" y="517" width="0.0802%" height="15" fill="rgb(239,36,31)" fg:x="179" fg:w="1"/><text x="14.6045%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.4346%" y="725" width="0.1604%" height="15" fill="rgb(248,67,31)" fg:x="180" fg:w="2"/><text x="14.6846%" y="735.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="14.4346%" y="709" width="0.1604%" height="15" fill="rgb(249,55,44)" fg:x="180" fg:w="2"/><text x="14.6846%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.4346%" y="693" width="0.1604%" height="15" fill="rgb(216,82,12)" fg:x="180" fg:w="2"/><text x="14.6846%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="14.4346%" y="677" width="0.1604%" height="15" fill="rgb(242,174,1)" fg:x="180" fg:w="2"/><text x="14.6846%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="14.4346%" y="661" width="0.1604%" height="15" fill="rgb(208,120,29)" fg:x="180" fg:w="2"/><text x="14.6846%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.4346%" y="645" width="0.1604%" height="15" fill="rgb(221,105,43)" fg:x="180" fg:w="2"/><text x="14.6846%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5148%" y="629" width="0.0802%" height="15" fill="rgb(234,124,22)" fg:x="181" fg:w="1"/><text x="14.7648%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5950%" y="629" width="0.0802%" height="15" fill="rgb(212,23,30)" fg:x="182" fg:w="1"/><text x="14.8450%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5950%" y="613" width="0.0802%" height="15" fill="rgb(219,122,53)" fg:x="182" fg:w="1"/><text x="14.8450%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.5950%" y="677" width="0.1604%" height="15" fill="rgb(248,84,24)" fg:x="182" fg:w="2"/><text x="14.8450%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.5950%" y="661" width="0.1604%" height="15" fill="rgb(245,115,18)" fg:x="182" fg:w="2"/><text x="14.8450%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.5950%" y="645" width="0.1604%" height="15" fill="rgb(227,176,51)" fg:x="182" fg:w="2"/><text x="14.8450%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6752%" y="629" width="0.0802%" height="15" fill="rgb(229,63,42)" fg:x="183" fg:w="1"/><text x="14.9252%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6752%" y="613" width="0.0802%" height="15" fill="rgb(247,202,24)" fg:x="183" fg:w="1"/><text x="14.9252%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.6752%" y="597" width="0.0802%" height="15" fill="rgb(244,173,20)" fg:x="183" fg:w="1"/><text x="14.9252%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.6752%" y="581" width="0.0802%" height="15" fill="rgb(242,81,47)" fg:x="183" fg:w="1"/><text x="14.9252%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.6752%" y="565" width="0.0802%" height="15" fill="rgb(231,185,54)" fg:x="183" fg:w="1"/><text x="14.9252%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.6752%" y="549" width="0.0802%" height="15" fill="rgb(243,55,32)" fg:x="183" fg:w="1"/><text x="14.9252%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.6752%" y="533" width="0.0802%" height="15" fill="rgb(208,167,19)" fg:x="183" fg:w="1"/><text x="14.9252%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.6752%" y="517" width="0.0802%" height="15" fill="rgb(231,72,35)" fg:x="183" fg:w="1"/><text x="14.9252%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.6752%" y="501" width="0.0802%" height="15" fill="rgb(250,173,51)" fg:x="183" fg:w="1"/><text x="14.9252%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.6752%" y="485" width="0.0802%" height="15" fill="rgb(209,5,22)" fg:x="183" fg:w="1"/><text x="14.9252%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.6752%" y="469" width="0.0802%" height="15" fill="rgb(250,174,19)" fg:x="183" fg:w="1"/><text x="14.9252%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6752%" y="453" width="0.0802%" height="15" fill="rgb(217,3,49)" fg:x="183" fg:w="1"/><text x="14.9252%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7554%" y="661" width="0.0802%" height="15" fill="rgb(218,225,5)" fg:x="184" fg:w="1"/><text x="15.0054%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7554%" y="645" width="0.0802%" height="15" fill="rgb(236,89,11)" fg:x="184" fg:w="1"/><text x="15.0054%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.7554%" y="629" width="0.0802%" height="15" fill="rgb(206,33,28)" fg:x="184" fg:w="1"/><text x="15.0054%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.7554%" y="613" width="0.0802%" height="15" fill="rgb(241,56,42)" fg:x="184" fg:w="1"/><text x="15.0054%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.7554%" y="597" width="0.0802%" height="15" fill="rgb(222,44,11)" fg:x="184" fg:w="1"/><text x="15.0054%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7554%" y="581" width="0.0802%" height="15" fill="rgb(234,111,20)" fg:x="184" fg:w="1"/><text x="15.0054%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7554%" y="565" width="0.0802%" height="15" fill="rgb(237,77,6)" fg:x="184" fg:w="1"/><text x="15.0054%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.7554%" y="549" width="0.0802%" height="15" fill="rgb(235,111,23)" fg:x="184" fg:w="1"/><text x="15.0054%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.7554%" y="533" width="0.0802%" height="15" fill="rgb(251,135,29)" fg:x="184" fg:w="1"/><text x="15.0054%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.7554%" y="517" width="0.0802%" height="15" fill="rgb(217,57,1)" fg:x="184" fg:w="1"/><text x="15.0054%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.7554%" y="501" width="0.0802%" height="15" fill="rgb(249,119,31)" fg:x="184" fg:w="1"/><text x="15.0054%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7554%" y="485" width="0.0802%" height="15" fill="rgb(233,164,33)" fg:x="184" fg:w="1"/><text x="15.0054%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8356%" y="645" width="0.0802%" height="15" fill="rgb(250,217,43)" fg:x="185" fg:w="1"/><text x="15.0856%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8356%" y="629" width="0.0802%" height="15" fill="rgb(232,154,50)" fg:x="185" fg:w="1"/><text x="15.0856%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.8356%" y="613" width="0.0802%" height="15" fill="rgb(227,190,8)" fg:x="185" fg:w="1"/><text x="15.0856%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.8356%" y="597" width="0.0802%" height="15" fill="rgb(209,217,32)" fg:x="185" fg:w="1"/><text x="15.0856%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.8356%" y="581" width="0.0802%" height="15" fill="rgb(243,203,50)" fg:x="185" fg:w="1"/><text x="15.0856%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.8356%" y="565" width="0.0802%" height="15" fill="rgb(232,152,27)" fg:x="185" fg:w="1"/><text x="15.0856%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.8356%" y="549" width="0.0802%" height="15" fill="rgb(240,34,29)" fg:x="185" fg:w="1"/><text x="15.0856%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.8356%" y="533" width="0.0802%" height="15" fill="rgb(215,185,52)" fg:x="185" fg:w="1"/><text x="15.0856%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.8356%" y="517" width="0.0802%" height="15" fill="rgb(240,89,49)" fg:x="185" fg:w="1"/><text x="15.0856%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.8356%" y="501" width="0.0802%" height="15" fill="rgb(225,12,52)" fg:x="185" fg:w="1"/><text x="15.0856%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.8356%" y="485" width="0.0802%" height="15" fill="rgb(239,128,45)" fg:x="185" fg:w="1"/><text x="15.0856%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.8356%" y="469" width="0.0802%" height="15" fill="rgb(211,78,47)" fg:x="185" fg:w="1"/><text x="15.0856%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.8356%" y="453" width="0.0802%" height="15" fill="rgb(232,31,21)" fg:x="185" fg:w="1"/><text x="15.0856%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.8356%" y="437" width="0.0802%" height="15" fill="rgb(222,168,14)" fg:x="185" fg:w="1"/><text x="15.0856%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.9158%" y="645" width="0.0802%" height="15" fill="rgb(209,128,24)" fg:x="186" fg:w="1"/><text x="15.1658%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.9158%" y="629" width="0.0802%" height="15" fill="rgb(249,35,13)" fg:x="186" fg:w="1"/><text x="15.1658%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.9158%" y="613" width="0.0802%" height="15" fill="rgb(218,7,2)" fg:x="186" fg:w="1"/><text x="15.1658%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.9960%" y="613" width="0.0802%" height="15" fill="rgb(238,107,27)" fg:x="187" fg:w="1"/><text x="15.2460%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="14.5950%" y="709" width="0.5613%" height="15" fill="rgb(217,88,38)" fg:x="182" fg:w="7"/><text x="14.8450%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="14.5950%" y="693" width="0.5613%" height="15" fill="rgb(230,207,0)" fg:x="182" fg:w="7"/><text x="14.8450%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="14.7554%" y="677" width="0.4010%" height="15" fill="rgb(249,64,54)" fg:x="184" fg:w="5"/><text x="15.0054%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="14.8356%" y="661" width="0.3208%" height="15" fill="rgb(231,7,11)" fg:x="185" fg:w="4"/><text x="15.0856%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.9960%" y="645" width="0.1604%" height="15" fill="rgb(205,149,21)" fg:x="187" fg:w="2"/><text x="15.2460%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.9960%" y="629" width="0.1604%" height="15" fill="rgb(215,126,34)" fg:x="187" fg:w="2"/><text x="15.2460%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.0762%" y="613" width="0.0802%" height="15" fill="rgb(241,132,45)" fg:x="188" fg:w="1"/><text x="15.3262%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.0762%" y="597" width="0.0802%" height="15" fill="rgb(252,69,32)" fg:x="188" fg:w="1"/><text x="15.3262%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.0762%" y="581" width="0.0802%" height="15" fill="rgb(232,204,19)" fg:x="188" fg:w="1"/><text x="15.3262%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.0762%" y="565" width="0.0802%" height="15" fill="rgb(249,15,47)" fg:x="188" fg:w="1"/><text x="15.3262%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.0762%" y="549" width="0.0802%" height="15" fill="rgb(209,227,23)" fg:x="188" fg:w="1"/><text x="15.3262%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="14.5950%" y="725" width="0.6415%" height="15" fill="rgb(248,92,24)" fg:x="182" fg:w="8"/><text x="14.8450%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="15.1564%" y="709" width="0.0802%" height="15" fill="rgb(247,59,2)" fg:x="189" fg:w="1"/><text x="15.4064%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.1564%" y="693" width="0.0802%" height="15" fill="rgb(221,30,5)" fg:x="189" fg:w="1"/><text x="15.4064%" y="703.50"></text></g><g><title>plugins_core::build::Build::holding (34 samples, 2.73%)</title><rect x="12.5902%" y="757" width="2.7265%" height="15" fill="rgb(208,108,53)" fg:x="157" fg:w="34"/><text x="12.8402%" y="767.50">pl..</text></g><g><title>plugins_core::tools::set_container (14 samples, 1.12%)</title><rect x="14.1941%" y="741" width="1.1227%" height="15" fill="rgb(211,183,26)" fg:x="177" fg:w="14"/><text x="14.4441%" y="751.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="15.2366%" y="725" width="0.0802%" height="15" fill="rgb(232,132,4)" fg:x="190" fg:w="1"/><text x="15.4866%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.2366%" y="709" width="0.0802%" height="15" fill="rgb(253,128,37)" fg:x="190" fg:w="1"/><text x="15.4866%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="15.3168%" y="725" width="0.2406%" height="15" fill="rgb(221,58,24)" fg:x="191" fg:w="3"/><text x="15.5668%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="15.3168%" y="709" width="0.2406%" height="15" fill="rgb(230,54,45)" fg:x="191" fg:w="3"/><text x="15.5668%" y="719.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="15.3970%" y="693" width="0.1604%" height="15" fill="rgb(254,21,18)" fg:x="192" fg:w="2"/><text x="15.6470%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.4771%" y="677" width="0.0802%" height="15" fill="rgb(221,108,0)" fg:x="193" fg:w="1"/><text x="15.7271%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5573%" y="693" width="0.0802%" height="15" fill="rgb(206,95,1)" fg:x="194" fg:w="1"/><text x="15.8073%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5573%" y="677" width="0.0802%" height="15" fill="rgb(237,52,5)" fg:x="194" fg:w="1"/><text x="15.8073%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="15.5573%" y="725" width="0.2406%" height="15" fill="rgb(218,150,34)" fg:x="194" fg:w="3"/><text x="15.8073%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.5573%" y="709" width="0.2406%" height="15" fill="rgb(235,194,28)" fg:x="194" fg:w="3"/><text x="15.8073%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.6375%" y="693" width="0.1604%" height="15" fill="rgb(245,92,18)" fg:x="195" fg:w="2"/><text x="15.8875%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.6375%" y="677" width="0.1604%" height="15" fill="rgb(253,203,53)" fg:x="195" fg:w="2"/><text x="15.8875%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="15.6375%" y="661" width="0.1604%" height="15" fill="rgb(249,185,47)" fg:x="195" fg:w="2"/><text x="15.8875%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.6375%" y="645" width="0.1604%" height="15" fill="rgb(252,194,52)" fg:x="195" fg:w="2"/><text x="15.8875%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.7177%" y="629" width="0.0802%" height="15" fill="rgb(210,53,36)" fg:x="196" fg:w="1"/><text x="15.9677%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.7177%" y="613" width="0.0802%" height="15" fill="rgb(237,37,25)" fg:x="196" fg:w="1"/><text x="15.9677%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.7177%" y="597" width="0.0802%" height="15" fill="rgb(242,116,27)" fg:x="196" fg:w="1"/><text x="15.9677%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.7979%" y="677" width="0.0802%" height="15" fill="rgb(213,185,26)" fg:x="197" fg:w="1"/><text x="16.0479%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="15.7979%" y="709" width="0.2406%" height="15" fill="rgb(225,204,8)" fg:x="197" fg:w="3"/><text x="16.0479%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.7979%" y="693" width="0.2406%" height="15" fill="rgb(254,111,37)" fg:x="197" fg:w="3"/><text x="16.0479%" y="703.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="15.8781%" y="677" width="0.1604%" height="15" fill="rgb(242,35,9)" fg:x="198" fg:w="2"/><text x="16.1281%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.8781%" y="661" width="0.1604%" height="15" fill="rgb(232,138,49)" fg:x="198" fg:w="2"/><text x="16.1281%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="15.7979%" y="725" width="0.3208%" height="15" fill="rgb(247,56,4)" fg:x="197" fg:w="4"/><text x="16.0479%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.0385%" y="709" width="0.0802%" height="15" fill="rgb(226,179,17)" fg:x="200" fg:w="1"/><text x="16.2885%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="16.0385%" y="693" width="0.0802%" height="15" fill="rgb(216,163,45)" fg:x="200" fg:w="1"/><text x="16.2885%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.0385%" y="677" width="0.0802%" height="15" fill="rgb(211,157,3)" fg:x="200" fg:w="1"/><text x="16.2885%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.0385%" y="661" width="0.0802%" height="15" fill="rgb(234,44,20)" fg:x="200" fg:w="1"/><text x="16.2885%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="16.1187%" y="677" width="0.0802%" height="15" fill="rgb(254,138,23)" fg:x="201" fg:w="1"/><text x="16.3687%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.1187%" y="661" width="0.0802%" height="15" fill="rgb(206,119,39)" fg:x="201" fg:w="1"/><text x="16.3687%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1187%" y="645" width="0.0802%" height="15" fill="rgb(231,105,52)" fg:x="201" fg:w="1"/><text x="16.3687%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.1187%" y="629" width="0.0802%" height="15" fill="rgb(250,20,5)" fg:x="201" fg:w="1"/><text x="16.3687%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.1187%" y="613" width="0.0802%" height="15" fill="rgb(215,198,30)" fg:x="201" fg:w="1"/><text x="16.3687%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (12 samples, 0.96%)</title><rect x="15.3168%" y="757" width="0.9623%" height="15" fill="rgb(246,142,8)" fg:x="191" fg:w="12"/><text x="15.5668%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="15.3168%" y="741" width="0.9623%" height="15" fill="rgb(243,26,38)" fg:x="191" fg:w="12"/><text x="15.5668%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="16.1187%" y="725" width="0.1604%" height="15" fill="rgb(205,133,28)" fg:x="201" fg:w="2"/><text x="16.3687%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="16.1187%" y="709" width="0.1604%" height="15" fill="rgb(212,34,0)" fg:x="201" fg:w="2"/><text x="16.3687%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="16.1187%" y="693" width="0.1604%" height="15" fill="rgb(251,226,22)" fg:x="201" fg:w="2"/><text x="16.3687%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.1989%" y="677" width="0.0802%" height="15" fill="rgb(252,119,9)" fg:x="202" fg:w="1"/><text x="16.4489%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1989%" y="661" width="0.0802%" height="15" fill="rgb(213,150,50)" fg:x="202" fg:w="1"/><text x="16.4489%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1989%" y="645" width="0.0802%" height="15" fill="rgb(212,24,39)" fg:x="202" fg:w="1"/><text x="16.4489%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1989%" y="629" width="0.0802%" height="15" fill="rgb(213,46,39)" fg:x="202" fg:w="1"/><text x="16.4489%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.1989%" y="613" width="0.0802%" height="15" fill="rgb(239,106,12)" fg:x="202" fg:w="1"/><text x="16.4489%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.1989%" y="597" width="0.0802%" height="15" fill="rgb(249,229,21)" fg:x="202" fg:w="1"/><text x="16.4489%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.1989%" y="581" width="0.0802%" height="15" fill="rgb(212,158,3)" fg:x="202" fg:w="1"/><text x="16.4489%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.1989%" y="565" width="0.0802%" height="15" fill="rgb(253,26,48)" fg:x="202" fg:w="1"/><text x="16.4489%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.1989%" y="549" width="0.0802%" height="15" fill="rgb(238,178,20)" fg:x="202" fg:w="1"/><text x="16.4489%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.1989%" y="533" width="0.0802%" height="15" fill="rgb(208,86,15)" fg:x="202" fg:w="1"/><text x="16.4489%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.1989%" y="517" width="0.0802%" height="15" fill="rgb(239,42,53)" fg:x="202" fg:w="1"/><text x="16.4489%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.1989%" y="501" width="0.0802%" height="15" fill="rgb(245,226,8)" fg:x="202" fg:w="1"/><text x="16.4489%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.1989%" y="485" width="0.0802%" height="15" fill="rgb(216,176,32)" fg:x="202" fg:w="1"/><text x="16.4489%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.1989%" y="469" width="0.0802%" height="15" fill="rgb(231,186,21)" fg:x="202" fg:w="1"/><text x="16.4489%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.1989%" y="453" width="0.0802%" height="15" fill="rgb(205,95,49)" fg:x="202" fg:w="1"/><text x="16.4489%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1989%" y="437" width="0.0802%" height="15" fill="rgb(217,145,8)" fg:x="202" fg:w="1"/><text x="16.4489%" y="447.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="16.2791%" y="757" width="0.0802%" height="15" fill="rgb(239,144,48)" fg:x="203" fg:w="1"/><text x="16.5291%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="16.2791%" y="741" width="0.0802%" height="15" fill="rgb(214,189,23)" fg:x="203" fg:w="1"/><text x="16.5291%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="16.2791%" y="725" width="0.0802%" height="15" fill="rgb(229,157,17)" fg:x="203" fg:w="1"/><text x="16.5291%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.2791%" y="709" width="0.0802%" height="15" fill="rgb(230,5,48)" fg:x="203" fg:w="1"/><text x="16.5291%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="16.3593%" y="725" width="0.0802%" height="15" fill="rgb(224,156,48)" fg:x="204" fg:w="1"/><text x="16.6093%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="16.3593%" y="709" width="0.0802%" height="15" fill="rgb(223,14,29)" fg:x="204" fg:w="1"/><text x="16.6093%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="16.3593%" y="693" width="0.0802%" height="15" fill="rgb(229,96,36)" fg:x="204" fg:w="1"/><text x="16.6093%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="16.3593%" y="677" width="0.0802%" height="15" fill="rgb(231,102,53)" fg:x="204" fg:w="1"/><text x="16.6093%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.3593%" y="661" width="0.0802%" height="15" fill="rgb(210,77,38)" fg:x="204" fg:w="1"/><text x="16.6093%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.3593%" y="645" width="0.0802%" height="15" fill="rgb(235,131,6)" fg:x="204" fg:w="1"/><text x="16.6093%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="16.3593%" y="629" width="0.0802%" height="15" fill="rgb(252,55,38)" fg:x="204" fg:w="1"/><text x="16.6093%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.3593%" y="613" width="0.0802%" height="15" fill="rgb(246,38,14)" fg:x="204" fg:w="1"/><text x="16.6093%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.3593%" y="597" width="0.0802%" height="15" fill="rgb(242,27,5)" fg:x="204" fg:w="1"/><text x="16.6093%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.3593%" y="581" width="0.0802%" height="15" fill="rgb(228,65,35)" fg:x="204" fg:w="1"/><text x="16.6093%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="16.3593%" y="565" width="0.0802%" height="15" fill="rgb(245,93,11)" fg:x="204" fg:w="1"/><text x="16.6093%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.3593%" y="549" width="0.0802%" height="15" fill="rgb(213,1,31)" fg:x="204" fg:w="1"/><text x="16.6093%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.3593%" y="533" width="0.0802%" height="15" fill="rgb(237,205,14)" fg:x="204" fg:w="1"/><text x="16.6093%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.3593%" y="517" width="0.0802%" height="15" fill="rgb(232,118,45)" fg:x="204" fg:w="1"/><text x="16.6093%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.3593%" y="501" width="0.0802%" height="15" fill="rgb(218,5,6)" fg:x="204" fg:w="1"/><text x="16.6093%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="16.3593%" y="485" width="0.0802%" height="15" fill="rgb(251,87,51)" fg:x="204" fg:w="1"/><text x="16.6093%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="16.3593%" y="469" width="0.0802%" height="15" fill="rgb(207,225,20)" fg:x="204" fg:w="1"/><text x="16.6093%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="16.3593%" y="453" width="0.0802%" height="15" fill="rgb(222,78,54)" fg:x="204" fg:w="1"/><text x="16.6093%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="16.3593%" y="437" width="0.0802%" height="15" fill="rgb(232,85,16)" fg:x="204" fg:w="1"/><text x="16.6093%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.08%)</title><rect x="16.3593%" y="421" width="0.0802%" height="15" fill="rgb(244,25,33)" fg:x="204" fg:w="1"/><text x="16.6093%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="16.3593%" y="741" width="0.1604%" height="15" fill="rgb(233,24,36)" fg:x="204" fg:w="2"/><text x="16.6093%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.4395%" y="725" width="0.0802%" height="15" fill="rgb(253,49,54)" fg:x="205" fg:w="1"/><text x="16.6895%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.4395%" y="709" width="0.0802%" height="15" fill="rgb(245,12,22)" fg:x="205" fg:w="1"/><text x="16.6895%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.4395%" y="693" width="0.0802%" height="15" fill="rgb(253,141,28)" fg:x="205" fg:w="1"/><text x="16.6895%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4395%" y="677" width="0.0802%" height="15" fill="rgb(225,207,27)" fg:x="205" fg:w="1"/><text x="16.6895%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.4395%" y="661" width="0.0802%" height="15" fill="rgb(220,84,2)" fg:x="205" fg:w="1"/><text x="16.6895%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4395%" y="645" width="0.0802%" height="15" fill="rgb(224,37,37)" fg:x="205" fg:w="1"/><text x="16.6895%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.4395%" y="629" width="0.0802%" height="15" fill="rgb(220,143,18)" fg:x="205" fg:w="1"/><text x="16.6895%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4395%" y="613" width="0.0802%" height="15" fill="rgb(210,88,33)" fg:x="205" fg:w="1"/><text x="16.6895%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.4395%" y="597" width="0.0802%" height="15" fill="rgb(219,87,51)" fg:x="205" fg:w="1"/><text x="16.6895%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5196%" y="709" width="0.0802%" height="15" fill="rgb(211,7,35)" fg:x="206" fg:w="1"/><text x="16.7696%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5998%" y="709" width="0.0802%" height="15" fill="rgb(232,77,2)" fg:x="207" fg:w="1"/><text x="16.8498%" y="719.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (3 samples, 0.24%)</title><rect x="16.5196%" y="741" width="0.2406%" height="15" fill="rgb(249,94,25)" fg:x="206" fg:w="3"/><text x="16.7696%" y="751.50"></text></g><g><title>engine::users::model::add_username_to_key (3 samples, 0.24%)</title><rect x="16.5196%" y="725" width="0.2406%" height="15" fill="rgb(215,112,2)" fg:x="206" fg:w="3"/><text x="16.7696%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.6800%" y="709" width="0.0802%" height="15" fill="rgb(226,115,48)" fg:x="208" fg:w="1"/><text x="16.9300%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.6800%" y="693" width="0.0802%" height="15" fill="rgb(249,196,10)" fg:x="208" fg:w="1"/><text x="16.9300%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.6800%" y="677" width="0.0802%" height="15" fill="rgb(237,109,14)" fg:x="208" fg:w="1"/><text x="16.9300%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="16.9206%" y="645" width="0.0802%" height="15" fill="rgb(217,103,53)" fg:x="211" fg:w="1"/><text x="17.1706%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="16.9206%" y="661" width="0.1604%" height="15" fill="rgb(244,137,9)" fg:x="211" fg:w="2"/><text x="17.1706%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="17.0008%" y="645" width="0.0802%" height="15" fill="rgb(227,201,3)" fg:x="212" fg:w="1"/><text x="17.2508%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="17.0008%" y="629" width="0.0802%" height="15" fill="rgb(243,94,6)" fg:x="212" fg:w="1"/><text x="17.2508%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.0008%" y="613" width="0.0802%" height="15" fill="rgb(235,118,5)" fg:x="212" fg:w="1"/><text x="17.2508%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.0008%" y="597" width="0.0802%" height="15" fill="rgb(247,10,30)" fg:x="212" fg:w="1"/><text x="17.2508%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.0008%" y="581" width="0.0802%" height="15" fill="rgb(205,26,28)" fg:x="212" fg:w="1"/><text x="17.2508%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.0008%" y="565" width="0.0802%" height="15" fill="rgb(206,99,35)" fg:x="212" fg:w="1"/><text x="17.2508%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.0008%" y="549" width="0.0802%" height="15" fill="rgb(238,130,40)" fg:x="212" fg:w="1"/><text x="17.2508%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="16.8404%" y="693" width="0.3208%" height="15" fill="rgb(224,126,31)" fg:x="210" fg:w="4"/><text x="17.0904%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="16.9206%" y="677" width="0.2406%" height="15" fill="rgb(254,105,17)" fg:x="211" fg:w="3"/><text x="17.1706%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="17.0810%" y="661" width="0.0802%" height="15" fill="rgb(216,87,36)" fg:x="213" fg:w="1"/><text x="17.3310%" y="671.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="17.2414%" y="629" width="0.0802%" height="15" fill="rgb(240,21,12)" fg:x="215" fg:w="1"/><text x="17.4914%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.2414%" y="613" width="0.0802%" height="15" fill="rgb(245,192,34)" fg:x="215" fg:w="1"/><text x="17.4914%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="17.2414%" y="661" width="0.1604%" height="15" fill="rgb(226,100,49)" fg:x="215" fg:w="2"/><text x="17.4914%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.2414%" y="645" width="0.1604%" height="15" fill="rgb(245,188,27)" fg:x="215" fg:w="2"/><text x="17.4914%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="17.3216%" y="629" width="0.0802%" height="15" fill="rgb(212,170,8)" fg:x="216" fg:w="1"/><text x="17.5716%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.3216%" y="613" width="0.0802%" height="15" fill="rgb(217,113,29)" fg:x="216" fg:w="1"/><text x="17.5716%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3216%" y="597" width="0.0802%" height="15" fill="rgb(237,30,3)" fg:x="216" fg:w="1"/><text x="17.5716%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.4018%" y="581" width="0.0802%" height="15" fill="rgb(227,19,28)" fg:x="217" fg:w="1"/><text x="17.6518%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.4018%" y="565" width="0.0802%" height="15" fill="rgb(239,172,45)" fg:x="217" fg:w="1"/><text x="17.6518%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.4018%" y="549" width="0.0802%" height="15" fill="rgb(254,55,39)" fg:x="217" fg:w="1"/><text x="17.6518%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.4018%" y="533" width="0.0802%" height="15" fill="rgb(249,208,12)" fg:x="217" fg:w="1"/><text x="17.6518%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.4820%" y="581" width="0.0802%" height="15" fill="rgb(240,52,13)" fg:x="218" fg:w="1"/><text x="17.7320%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="17.4018%" y="613" width="0.2406%" height="15" fill="rgb(252,149,13)" fg:x="217" fg:w="3"/><text x="17.6518%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="17.4018%" y="597" width="0.2406%" height="15" fill="rgb(232,81,48)" fg:x="217" fg:w="3"/><text x="17.6518%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="17.5621%" y="581" width="0.0802%" height="15" fill="rgb(222,144,2)" fg:x="219" fg:w="1"/><text x="17.8121%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.5621%" y="565" width="0.0802%" height="15" fill="rgb(216,81,32)" fg:x="219" fg:w="1"/><text x="17.8121%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.5621%" y="549" width="0.0802%" height="15" fill="rgb(244,78,51)" fg:x="219" fg:w="1"/><text x="17.8121%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="17.5621%" y="533" width="0.0802%" height="15" fill="rgb(217,66,21)" fg:x="219" fg:w="1"/><text x="17.8121%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.5621%" y="517" width="0.0802%" height="15" fill="rgb(247,101,42)" fg:x="219" fg:w="1"/><text x="17.8121%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="17.1612%" y="677" width="0.5613%" height="15" fill="rgb(227,81,39)" fg:x="214" fg:w="7"/><text x="17.4112%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="17.4018%" y="661" width="0.3208%" height="15" fill="rgb(220,223,44)" fg:x="217" fg:w="4"/><text x="17.6518%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="17.4018%" y="645" width="0.3208%" height="15" fill="rgb(205,218,2)" fg:x="217" fg:w="4"/><text x="17.6518%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="17.4018%" y="629" width="0.3208%" height="15" fill="rgb(212,207,28)" fg:x="217" fg:w="4"/><text x="17.6518%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.6423%" y="613" width="0.0802%" height="15" fill="rgb(224,12,41)" fg:x="220" fg:w="1"/><text x="17.8923%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6423%" y="597" width="0.0802%" height="15" fill="rgb(216,118,12)" fg:x="220" fg:w="1"/><text x="17.8923%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6423%" y="581" width="0.0802%" height="15" fill="rgb(252,97,46)" fg:x="220" fg:w="1"/><text x="17.8923%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="17.7225%" y="661" width="0.0802%" height="15" fill="rgb(244,206,19)" fg:x="221" fg:w="1"/><text x="17.9725%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="17.7225%" y="645" width="0.0802%" height="15" fill="rgb(231,84,31)" fg:x="221" fg:w="1"/><text x="17.9725%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8829%" y="597" width="0.0802%" height="15" fill="rgb(244,133,0)" fg:x="223" fg:w="1"/><text x="18.1329%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8829%" y="581" width="0.0802%" height="15" fill="rgb(223,15,50)" fg:x="223" fg:w="1"/><text x="18.1329%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8829%" y="565" width="0.0802%" height="15" fill="rgb(250,118,49)" fg:x="223" fg:w="1"/><text x="18.1329%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8829%" y="549" width="0.0802%" height="15" fill="rgb(248,25,38)" fg:x="223" fg:w="1"/><text x="18.1329%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.8829%" y="533" width="0.0802%" height="15" fill="rgb(215,70,14)" fg:x="223" fg:w="1"/><text x="18.1329%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.8829%" y="517" width="0.0802%" height="15" fill="rgb(215,28,15)" fg:x="223" fg:w="1"/><text x="18.1329%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.8829%" y="501" width="0.0802%" height="15" fill="rgb(243,6,28)" fg:x="223" fg:w="1"/><text x="18.1329%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8829%" y="485" width="0.0802%" height="15" fill="rgb(222,130,1)" fg:x="223" fg:w="1"/><text x="18.1329%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8829%" y="469" width="0.0802%" height="15" fill="rgb(236,166,44)" fg:x="223" fg:w="1"/><text x="18.1329%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.8829%" y="453" width="0.0802%" height="15" fill="rgb(221,108,14)" fg:x="223" fg:w="1"/><text x="18.1329%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.8829%" y="437" width="0.0802%" height="15" fill="rgb(252,3,45)" fg:x="223" fg:w="1"/><text x="18.1329%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.8829%" y="421" width="0.0802%" height="15" fill="rgb(237,68,30)" fg:x="223" fg:w="1"/><text x="18.1329%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.8829%" y="405" width="0.0802%" height="15" fill="rgb(211,79,22)" fg:x="223" fg:w="1"/><text x="18.1329%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8829%" y="389" width="0.0802%" height="15" fill="rgb(252,185,21)" fg:x="223" fg:w="1"/><text x="18.1329%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="17.8829%" y="629" width="0.1604%" height="15" fill="rgb(225,189,26)" fg:x="223" fg:w="2"/><text x="18.1329%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.8829%" y="613" width="0.1604%" height="15" fill="rgb(241,30,40)" fg:x="223" fg:w="2"/><text x="18.1329%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.9631%" y="597" width="0.0802%" height="15" fill="rgb(235,215,44)" fg:x="224" fg:w="1"/><text x="18.2131%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="17.8027%" y="661" width="0.3208%" height="15" fill="rgb(205,8,29)" fg:x="222" fg:w="4"/><text x="18.0527%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="17.8027%" y="645" width="0.3208%" height="15" fill="rgb(241,137,42)" fg:x="222" fg:w="4"/><text x="18.0527%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="18.0433%" y="629" width="0.0802%" height="15" fill="rgb(237,155,2)" fg:x="225" fg:w="1"/><text x="18.2933%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.0433%" y="613" width="0.0802%" height="15" fill="rgb(245,29,42)" fg:x="225" fg:w="1"/><text x="18.2933%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.0433%" y="597" width="0.0802%" height="15" fill="rgb(234,101,35)" fg:x="225" fg:w="1"/><text x="18.2933%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0433%" y="581" width="0.0802%" height="15" fill="rgb(228,64,37)" fg:x="225" fg:w="1"/><text x="18.2933%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.0433%" y="565" width="0.0802%" height="15" fill="rgb(217,214,36)" fg:x="225" fg:w="1"/><text x="18.2933%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0433%" y="549" width="0.0802%" height="15" fill="rgb(243,70,3)" fg:x="225" fg:w="1"/><text x="18.2933%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.0433%" y="533" width="0.0802%" height="15" fill="rgb(253,158,52)" fg:x="225" fg:w="1"/><text x="18.2933%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0433%" y="517" width="0.0802%" height="15" fill="rgb(234,111,54)" fg:x="225" fg:w="1"/><text x="18.2933%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.1235%" y="645" width="0.0802%" height="15" fill="rgb(217,70,32)" fg:x="226" fg:w="1"/><text x="18.3735%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.1235%" y="629" width="0.0802%" height="15" fill="rgb(234,18,33)" fg:x="226" fg:w="1"/><text x="18.3735%" y="639.50"></text></g><g><title>plugins_core::build::Build::leads_to (14 samples, 1.12%)</title><rect x="17.1612%" y="693" width="1.1227%" height="15" fill="rgb(234,12,49)" fg:x="214" fg:w="14"/><text x="17.4112%" y="703.50"></text></g><g><title>plugins_core::tools::leads_to (7 samples, 0.56%)</title><rect x="17.7225%" y="677" width="0.5613%" height="15" fill="rgb(236,10,21)" fg:x="221" fg:w="7"/><text x="17.9725%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="18.1235%" y="661" width="0.1604%" height="15" fill="rgb(248,182,45)" fg:x="226" fg:w="2"/><text x="18.3735%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="18.2037%" y="645" width="0.0802%" height="15" fill="rgb(217,95,36)" fg:x="227" fg:w="1"/><text x="18.4537%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.2037%" y="629" width="0.0802%" height="15" fill="rgb(212,110,31)" fg:x="227" fg:w="1"/><text x="18.4537%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="18.2037%" y="613" width="0.0802%" height="15" fill="rgb(206,32,53)" fg:x="227" fg:w="1"/><text x="18.4537%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="18.2037%" y="597" width="0.0802%" height="15" fill="rgb(246,141,37)" fg:x="227" fg:w="1"/><text x="18.4537%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 1.60%)</title><rect x="16.7602%" y="741" width="1.6038%" height="15" fill="rgb(219,16,7)" fg:x="209" fg:w="20"/><text x="17.0102%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 1.60%)</title><rect x="16.7602%" y="725" width="1.6038%" height="15" fill="rgb(230,205,45)" fg:x="209" fg:w="20"/><text x="17.0102%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (20 samples, 1.60%)</title><rect x="16.7602%" y="709" width="1.6038%" height="15" fill="rgb(231,43,49)" fg:x="209" fg:w="20"/><text x="17.0102%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="18.2839%" y="693" width="0.0802%" height="15" fill="rgb(212,106,34)" fg:x="228" fg:w="1"/><text x="18.5339%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="18.2839%" y="677" width="0.0802%" height="15" fill="rgb(206,83,17)" fg:x="228" fg:w="1"/><text x="18.5339%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.2839%" y="661" width="0.0802%" height="15" fill="rgb(244,154,49)" fg:x="228" fg:w="1"/><text x="18.5339%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.2839%" y="645" width="0.0802%" height="15" fill="rgb(244,149,49)" fg:x="228" fg:w="1"/><text x="18.5339%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2839%" y="629" width="0.0802%" height="15" fill="rgb(227,134,18)" fg:x="228" fg:w="1"/><text x="18.5339%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.2839%" y="613" width="0.0802%" height="15" fill="rgb(237,116,36)" fg:x="228" fg:w="1"/><text x="18.5339%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2839%" y="597" width="0.0802%" height="15" fill="rgb(205,129,40)" fg:x="228" fg:w="1"/><text x="18.5339%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.3641%" y="661" width="0.0802%" height="15" fill="rgb(236,178,4)" fg:x="229" fg:w="1"/><text x="18.6141%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="18.3641%" y="725" width="0.1604%" height="15" fill="rgb(251,76,53)" fg:x="229" fg:w="2"/><text x="18.6141%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.3641%" y="709" width="0.1604%" height="15" fill="rgb(242,92,40)" fg:x="229" fg:w="2"/><text x="18.6141%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.3641%" y="693" width="0.1604%" height="15" fill="rgb(209,45,30)" fg:x="229" fg:w="2"/><text x="18.6141%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="18.3641%" y="677" width="0.1604%" height="15" fill="rgb(218,157,36)" fg:x="229" fg:w="2"/><text x="18.6141%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.4443%" y="661" width="0.0802%" height="15" fill="rgb(222,186,16)" fg:x="230" fg:w="1"/><text x="18.6943%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="18.5245%" y="677" width="0.2406%" height="15" fill="rgb(254,72,35)" fg:x="231" fg:w="3"/><text x="18.7745%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="18.5245%" y="661" width="0.2406%" height="15" fill="rgb(224,25,35)" fg:x="231" fg:w="3"/><text x="18.7745%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="18.6047%" y="645" width="0.1604%" height="15" fill="rgb(206,135,52)" fg:x="232" fg:w="2"/><text x="18.8547%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="19.1660%" y="565" width="0.1604%" height="15" fill="rgb(229,174,47)" fg:x="239" fg:w="2"/><text x="19.4160%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="18.8452%" y="613" width="0.5613%" height="15" fill="rgb(242,184,21)" fg:x="235" fg:w="7"/><text x="19.0952%" y="623.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="18.8452%" y="597" width="0.5613%" height="15" fill="rgb(213,22,45)" fg:x="235" fg:w="7"/><text x="19.0952%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="19.0858%" y="581" width="0.3208%" height="15" fill="rgb(237,81,54)" fg:x="238" fg:w="4"/><text x="19.3358%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="19.3264%" y="565" width="0.0802%" height="15" fill="rgb(248,177,18)" fg:x="241" fg:w="1"/><text x="19.5764%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="18.8452%" y="629" width="0.6415%" height="15" fill="rgb(254,31,16)" fg:x="235" fg:w="8"/><text x="19.0952%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.4066%" y="613" width="0.0802%" height="15" fill="rgb(235,20,31)" fg:x="242" fg:w="1"/><text x="19.6566%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.4066%" y="597" width="0.0802%" height="15" fill="rgb(240,56,43)" fg:x="242" fg:w="1"/><text x="19.6566%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.7273%" y="613" width="0.0802%" height="15" fill="rgb(237,197,51)" fg:x="246" fg:w="1"/><text x="19.9773%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="19.8075%" y="613" width="0.5613%" height="15" fill="rgb(241,162,44)" fg:x="247" fg:w="7"/><text x="20.0575%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.2887%" y="597" width="0.0802%" height="15" fill="rgb(224,23,20)" fg:x="253" fg:w="1"/><text x="20.5387%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.2887%" y="581" width="0.0802%" height="15" fill="rgb(250,109,34)" fg:x="253" fg:w="1"/><text x="20.5387%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.2887%" y="565" width="0.0802%" height="15" fill="rgb(214,175,50)" fg:x="253" fg:w="1"/><text x="20.5387%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="20.6095%" y="565" width="0.2406%" height="15" fill="rgb(213,182,5)" fg:x="257" fg:w="3"/><text x="20.8595%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="20.6095%" y="549" width="0.2406%" height="15" fill="rgb(209,199,19)" fg:x="257" fg:w="3"/><text x="20.8595%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.6897%" y="533" width="0.1604%" height="15" fill="rgb(236,224,42)" fg:x="258" fg:w="2"/><text x="20.9397%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.6897%" y="517" width="0.1604%" height="15" fill="rgb(246,226,29)" fg:x="258" fg:w="2"/><text x="20.9397%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="20.6897%" y="501" width="0.1604%" height="15" fill="rgb(227,223,11)" fg:x="258" fg:w="2"/><text x="20.9397%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="20.6897%" y="485" width="0.1604%" height="15" fill="rgb(219,7,51)" fg:x="258" fg:w="2"/><text x="20.9397%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="20.6897%" y="469" width="0.1604%" height="15" fill="rgb(245,167,10)" fg:x="258" fg:w="2"/><text x="20.9397%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="20.8500%" y="565" width="0.0802%" height="15" fill="rgb(237,224,16)" fg:x="260" fg:w="1"/><text x="21.1000%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="20.5293%" y="597" width="0.5613%" height="15" fill="rgb(226,132,13)" fg:x="256" fg:w="7"/><text x="20.7793%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="20.5293%" y="581" width="0.5613%" height="15" fill="rgb(214,140,3)" fg:x="256" fg:w="7"/><text x="20.7793%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.9302%" y="565" width="0.1604%" height="15" fill="rgb(221,177,4)" fg:x="261" fg:w="2"/><text x="21.1802%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.0104%" y="549" width="0.0802%" height="15" fill="rgb(238,139,3)" fg:x="262" fg:w="1"/><text x="21.2604%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="21.3312%" y="549" width="0.3208%" height="15" fill="rgb(216,17,39)" fg:x="266" fg:w="4"/><text x="21.5812%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.5718%" y="533" width="0.0802%" height="15" fill="rgb(238,120,9)" fg:x="269" fg:w="1"/><text x="21.8218%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.5718%" y="517" width="0.0802%" height="15" fill="rgb(244,92,53)" fg:x="269" fg:w="1"/><text x="21.8218%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="21.5718%" y="501" width="0.0802%" height="15" fill="rgb(224,148,33)" fg:x="269" fg:w="1"/><text x="21.8218%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="21.0906%" y="597" width="0.6415%" height="15" fill="rgb(243,6,36)" fg:x="263" fg:w="8"/><text x="21.3406%" y="607.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="21.2510%" y="581" width="0.4812%" height="15" fill="rgb(230,102,11)" fg:x="265" fg:w="6"/><text x="21.5010%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="21.2510%" y="565" width="0.4812%" height="15" fill="rgb(234,148,36)" fg:x="265" fg:w="6"/><text x="21.5010%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="21.6520%" y="549" width="0.0802%" height="15" fill="rgb(251,153,25)" fg:x="270" fg:w="1"/><text x="21.9020%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="21.7322%" y="581" width="0.3208%" height="15" fill="rgb(215,129,8)" fg:x="271" fg:w="4"/><text x="21.9822%" y="591.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="21.7322%" y="565" width="0.3208%" height="15" fill="rgb(224,128,35)" fg:x="271" fg:w="4"/><text x="21.9822%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="21.7322%" y="549" width="0.3208%" height="15" fill="rgb(237,56,52)" fg:x="271" fg:w="4"/><text x="21.9822%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="21.7322%" y="533" width="0.3208%" height="15" fill="rgb(234,213,19)" fg:x="271" fg:w="4"/><text x="21.9822%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="22.0529%" y="565" width="0.0802%" height="15" fill="rgb(252,82,23)" fg:x="275" fg:w="1"/><text x="22.3029%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="22.1331%" y="565" width="0.2406%" height="15" fill="rgb(254,201,21)" fg:x="276" fg:w="3"/><text x="22.3831%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="22.1331%" y="549" width="0.2406%" height="15" fill="rgb(250,186,11)" fg:x="276" fg:w="3"/><text x="22.3831%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="22.1331%" y="533" width="0.2406%" height="15" fill="rgb(211,174,5)" fg:x="276" fg:w="3"/><text x="22.3831%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="22.3737%" y="565" width="0.1604%" height="15" fill="rgb(214,121,10)" fg:x="279" fg:w="2"/><text x="22.6237%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.3737%" y="549" width="0.1604%" height="15" fill="rgb(241,66,2)" fg:x="279" fg:w="2"/><text x="22.6237%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="22.3737%" y="533" width="0.1604%" height="15" fill="rgb(220,167,19)" fg:x="279" fg:w="2"/><text x="22.6237%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="22.3737%" y="517" width="0.1604%" height="15" fill="rgb(231,54,50)" fg:x="279" fg:w="2"/><text x="22.6237%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.4539%" y="501" width="0.0802%" height="15" fill="rgb(239,217,53)" fg:x="280" fg:w="1"/><text x="22.7039%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.4539%" y="485" width="0.0802%" height="15" fill="rgb(248,8,0)" fg:x="280" fg:w="1"/><text x="22.7039%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="22.4539%" y="469" width="0.0802%" height="15" fill="rgb(229,118,37)" fg:x="280" fg:w="1"/><text x="22.7039%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="21.7322%" y="597" width="1.0425%" height="15" fill="rgb(253,223,43)" fg:x="271" fg:w="13"/><text x="21.9822%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="22.0529%" y="581" width="0.7217%" height="15" fill="rgb(211,77,36)" fg:x="275" fg:w="9"/><text x="22.3029%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="22.5341%" y="565" width="0.2406%" height="15" fill="rgb(219,3,53)" fg:x="281" fg:w="3"/><text x="22.7841%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="22.6143%" y="549" width="0.1604%" height="15" fill="rgb(244,45,42)" fg:x="282" fg:w="2"/><text x="22.8643%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.6945%" y="533" width="0.0802%" height="15" fill="rgb(225,95,27)" fg:x="283" fg:w="1"/><text x="22.9445%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.65%)</title><rect x="20.3689%" y="613" width="2.6464%" height="15" fill="rgb(207,74,8)" fg:x="254" fg:w="33"/><text x="20.6189%" y="623.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="22.7747%" y="597" width="0.2406%" height="15" fill="rgb(243,63,36)" fg:x="284" fg:w="3"/><text x="23.0247%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="22.7747%" y="581" width="0.2406%" height="15" fill="rgb(211,180,12)" fg:x="284" fg:w="3"/><text x="23.0247%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.9350%" y="565" width="0.0802%" height="15" fill="rgb(254,166,49)" fg:x="286" fg:w="1"/><text x="23.1850%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (59 samples, 4.73%)</title><rect x="18.8452%" y="645" width="4.7314%" height="15" fill="rgb(205,19,0)" fg:x="235" fg:w="59"/><text x="19.0952%" y="655.50">&lt;serde..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (51 samples, 4.09%)</title><rect x="19.4868%" y="629" width="4.0898%" height="15" fill="rgb(224,172,32)" fg:x="243" fg:w="51"/><text x="19.7368%" y="639.50">serd..</text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="23.0152%" y="613" width="0.5613%" height="15" fill="rgb(254,136,30)" fg:x="287" fg:w="7"/><text x="23.2652%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="23.0954%" y="597" width="0.4812%" height="15" fill="rgb(246,19,35)" fg:x="288" fg:w="6"/><text x="23.3454%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="23.0954%" y="581" width="0.4812%" height="15" fill="rgb(219,24,36)" fg:x="288" fg:w="6"/><text x="23.3454%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="23.1756%" y="565" width="0.4010%" height="15" fill="rgb(251,55,1)" fg:x="289" fg:w="5"/><text x="23.4256%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="23.1756%" y="549" width="0.4010%" height="15" fill="rgb(218,117,39)" fg:x="289" fg:w="5"/><text x="23.4256%" y="559.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="23.2558%" y="533" width="0.3208%" height="15" fill="rgb(248,169,11)" fg:x="290" fg:w="4"/><text x="23.5058%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5766%" y="613" width="0.0802%" height="15" fill="rgb(244,40,44)" fg:x="294" fg:w="1"/><text x="23.8266%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.6568%" y="613" width="0.0802%" height="15" fill="rgb(234,62,37)" fg:x="295" fg:w="1"/><text x="23.9068%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6568%" y="597" width="0.0802%" height="15" fill="rgb(207,117,42)" fg:x="295" fg:w="1"/><text x="23.9068%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.8172%" y="597" width="0.0802%" height="15" fill="rgb(213,43,2)" fg:x="297" fg:w="1"/><text x="24.0672%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="23.8974%" y="597" width="0.1604%" height="15" fill="rgb(244,202,51)" fg:x="298" fg:w="2"/><text x="24.1474%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="23.8974%" y="581" width="0.1604%" height="15" fill="rgb(253,174,46)" fg:x="298" fg:w="2"/><text x="24.1474%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.0577%" y="581" width="0.0802%" height="15" fill="rgb(251,23,1)" fg:x="300" fg:w="1"/><text x="24.3077%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.1379%" y="581" width="0.0802%" height="15" fill="rgb(253,26,1)" fg:x="301" fg:w="1"/><text x="24.3879%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.2983%" y="565" width="0.0802%" height="15" fill="rgb(216,89,31)" fg:x="303" fg:w="1"/><text x="24.5483%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="24.3785%" y="565" width="0.2406%" height="15" fill="rgb(209,109,5)" fg:x="304" fg:w="3"/><text x="24.6285%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="24.3785%" y="549" width="0.2406%" height="15" fill="rgb(229,63,13)" fg:x="304" fg:w="3"/><text x="24.6285%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.6191%" y="533" width="0.0802%" height="15" fill="rgb(238,137,54)" fg:x="307" fg:w="1"/><text x="24.8691%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="24.6191%" y="565" width="0.1604%" height="15" fill="rgb(228,1,9)" fg:x="307" fg:w="2"/><text x="24.8691%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="24.6191%" y="549" width="0.1604%" height="15" fill="rgb(249,120,48)" fg:x="307" fg:w="2"/><text x="24.8691%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.6993%" y="533" width="0.0802%" height="15" fill="rgb(209,72,36)" fg:x="308" fg:w="1"/><text x="24.9493%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.7795%" y="549" width="0.0802%" height="15" fill="rgb(247,98,49)" fg:x="309" fg:w="1"/><text x="25.0295%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="23.5766%" y="645" width="1.3633%" height="15" fill="rgb(233,75,36)" fg:x="294" fg:w="17"/><text x="23.8266%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.36%)</title><rect x="23.5766%" y="629" width="1.3633%" height="15" fill="rgb(225,14,24)" fg:x="294" fg:w="17"/><text x="23.8266%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="23.7370%" y="613" width="1.2029%" height="15" fill="rgb(237,193,20)" fg:x="296" fg:w="15"/><text x="23.9870%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="24.0577%" y="597" width="0.8821%" height="15" fill="rgb(239,122,19)" fg:x="300" fg:w="11"/><text x="24.3077%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="24.2181%" y="581" width="0.7217%" height="15" fill="rgb(231,220,10)" fg:x="302" fg:w="9"/><text x="24.4681%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="24.7795%" y="565" width="0.1604%" height="15" fill="rgb(220,66,15)" fg:x="309" fg:w="2"/><text x="25.0295%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.8597%" y="549" width="0.0802%" height="15" fill="rgb(215,171,52)" fg:x="310" fg:w="1"/><text x="25.1097%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.9399%" y="613" width="0.0802%" height="15" fill="rgb(241,169,50)" fg:x="311" fg:w="1"/><text x="25.1899%" y="623.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="24.9399%" y="629" width="0.1604%" height="15" fill="rgb(236,189,0)" fg:x="311" fg:w="2"/><text x="25.1899%" y="639.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="25.0200%" y="613" width="0.0802%" height="15" fill="rgb(217,147,20)" fg:x="312" fg:w="1"/><text x="25.2700%" y="623.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="25.0200%" y="597" width="0.0802%" height="15" fill="rgb(206,188,39)" fg:x="312" fg:w="1"/><text x="25.2700%" y="607.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="25.0200%" y="581" width="0.0802%" height="15" fill="rgb(227,118,25)" fg:x="312" fg:w="1"/><text x="25.2700%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="25.0200%" y="565" width="0.0802%" height="15" fill="rgb(248,171,40)" fg:x="312" fg:w="1"/><text x="25.2700%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="25.1002%" y="629" width="0.0802%" height="15" fill="rgb(251,90,54)" fg:x="313" fg:w="1"/><text x="25.3502%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.1002%" y="613" width="0.0802%" height="15" fill="rgb(234,11,46)" fg:x="313" fg:w="1"/><text x="25.3502%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="25.1804%" y="613" width="0.0802%" height="15" fill="rgb(229,134,13)" fg:x="314" fg:w="1"/><text x="25.4304%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.4210%" y="597" width="0.1604%" height="15" fill="rgb(223,129,3)" fg:x="317" fg:w="2"/><text x="25.6710%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="25.5814%" y="597" width="0.4812%" height="15" fill="rgb(221,124,13)" fg:x="319" fg:w="6"/><text x="25.8314%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.9022%" y="581" width="0.1604%" height="15" fill="rgb(234,3,18)" fg:x="323" fg:w="2"/><text x="26.1522%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="26.0626%" y="581" width="0.0802%" height="15" fill="rgb(249,199,20)" fg:x="325" fg:w="1"/><text x="26.3126%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1427%" y="565" width="0.0802%" height="15" fill="rgb(224,134,6)" fg:x="326" fg:w="1"/><text x="26.3927%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="26.0626%" y="597" width="0.2406%" height="15" fill="rgb(254,83,26)" fg:x="325" fg:w="3"/><text x="26.3126%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="26.1427%" y="581" width="0.1604%" height="15" fill="rgb(217,88,9)" fg:x="326" fg:w="2"/><text x="26.3927%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="26.2229%" y="565" width="0.0802%" height="15" fill="rgb(225,73,2)" fg:x="327" fg:w="1"/><text x="26.4729%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="26.2229%" y="549" width="0.0802%" height="15" fill="rgb(226,44,39)" fg:x="327" fg:w="1"/><text x="26.4729%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="26.3031%" y="597" width="0.0802%" height="15" fill="rgb(228,53,17)" fg:x="328" fg:w="1"/><text x="26.5531%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.3031%" y="581" width="0.0802%" height="15" fill="rgb(212,27,27)" fg:x="328" fg:w="1"/><text x="26.5531%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.3031%" y="565" width="0.0802%" height="15" fill="rgb(241,50,6)" fg:x="328" fg:w="1"/><text x="26.5531%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.3031%" y="549" width="0.0802%" height="15" fill="rgb(225,28,51)" fg:x="328" fg:w="1"/><text x="26.5531%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.4635%" y="565" width="0.0802%" height="15" fill="rgb(215,33,16)" fg:x="330" fg:w="1"/><text x="26.7135%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="26.5437%" y="565" width="0.1604%" height="15" fill="rgb(243,40,39)" fg:x="331" fg:w="2"/><text x="26.7937%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.7041%" y="549" width="0.0802%" height="15" fill="rgb(225,11,42)" fg:x="333" fg:w="1"/><text x="26.9541%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.7041%" y="533" width="0.0802%" height="15" fill="rgb(241,220,38)" fg:x="333" fg:w="1"/><text x="26.9541%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.7041%" y="517" width="0.0802%" height="15" fill="rgb(244,52,35)" fg:x="333" fg:w="1"/><text x="26.9541%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="26.7843%" y="533" width="0.0802%" height="15" fill="rgb(246,42,46)" fg:x="334" fg:w="1"/><text x="27.0343%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="26.8645%" y="517" width="0.0802%" height="15" fill="rgb(205,184,13)" fg:x="335" fg:w="1"/><text x="27.1145%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.8645%" y="501" width="0.0802%" height="15" fill="rgb(209,48,36)" fg:x="335" fg:w="1"/><text x="27.1145%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="26.7843%" y="549" width="0.2406%" height="15" fill="rgb(244,34,51)" fg:x="334" fg:w="3"/><text x="27.0343%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="26.8645%" y="533" width="0.1604%" height="15" fill="rgb(221,107,33)" fg:x="335" fg:w="2"/><text x="27.1145%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9447%" y="517" width="0.0802%" height="15" fill="rgb(224,203,12)" fg:x="336" fg:w="1"/><text x="27.1947%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.1852%" y="517" width="0.1604%" height="15" fill="rgb(230,215,18)" fg:x="339" fg:w="2"/><text x="27.4352%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.1852%" y="501" width="0.1604%" height="15" fill="rgb(206,185,35)" fg:x="339" fg:w="2"/><text x="27.4352%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="27.1852%" y="485" width="0.1604%" height="15" fill="rgb(228,140,34)" fg:x="339" fg:w="2"/><text x="27.4352%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="26.7041%" y="565" width="0.9623%" height="15" fill="rgb(208,93,13)" fg:x="333" fg:w="12"/><text x="26.9541%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="27.0249%" y="549" width="0.6415%" height="15" fill="rgb(221,193,39)" fg:x="337" fg:w="8"/><text x="27.2749%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="27.1051%" y="533" width="0.5613%" height="15" fill="rgb(241,132,34)" fg:x="338" fg:w="7"/><text x="27.3551%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="27.3456%" y="517" width="0.3208%" height="15" fill="rgb(221,141,10)" fg:x="341" fg:w="4"/><text x="27.5956%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="27.5060%" y="501" width="0.1604%" height="15" fill="rgb(226,90,31)" fg:x="343" fg:w="2"/><text x="27.7560%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.5060%" y="485" width="0.1604%" height="15" fill="rgb(243,75,5)" fg:x="343" fg:w="2"/><text x="27.7560%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.5862%" y="469" width="0.0802%" height="15" fill="rgb(227,156,21)" fg:x="344" fg:w="1"/><text x="27.8362%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.5862%" y="453" width="0.0802%" height="15" fill="rgb(250,195,8)" fg:x="344" fg:w="1"/><text x="27.8362%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.28%)</title><rect x="26.4635%" y="581" width="1.2831%" height="15" fill="rgb(220,134,5)" fg:x="330" fg:w="16"/><text x="26.7135%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="27.6664%" y="565" width="0.0802%" height="15" fill="rgb(246,106,34)" fg:x="345" fg:w="1"/><text x="27.9164%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.6664%" y="549" width="0.0802%" height="15" fill="rgb(205,1,4)" fg:x="345" fg:w="1"/><text x="27.9164%" y="559.50"></text></g><g><title>engine::session::Session::flush (118 samples, 9.46%)</title><rect x="18.3641%" y="741" width="9.4627%" height="15" fill="rgb(224,151,29)" fg:x="229" fg:w="118"/><text x="18.6141%" y="751.50">engine::sessio..</text></g><g><title>engine::session::Session::save_changes (116 samples, 9.30%)</title><rect x="18.5245%" y="725" width="9.3023%" height="15" fill="rgb(251,196,0)" fg:x="231" fg:w="116"/><text x="18.7745%" y="735.50">engine::sessi..</text></g><g><title>engine::session::state::State::close (116 samples, 9.30%)</title><rect x="18.5245%" y="709" width="9.3023%" height="15" fill="rgb(212,127,0)" fg:x="231" fg:w="116"/><text x="18.7745%" y="719.50">engine::sessi..</text></g><g><title>engine::session::state::State::flush_entities (116 samples, 9.30%)</title><rect x="18.5245%" y="693" width="9.3023%" height="15" fill="rgb(236,71,53)" fg:x="231" fg:w="116"/><text x="18.7745%" y="703.50">engine::sessi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (113 samples, 9.06%)</title><rect x="18.7650%" y="677" width="9.0617%" height="15" fill="rgb(227,99,0)" fg:x="234" fg:w="113"/><text x="19.0150%" y="687.50">engine::sessi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (112 samples, 8.98%)</title><rect x="18.8452%" y="661" width="8.9816%" height="15" fill="rgb(239,89,21)" fg:x="235" fg:w="112"/><text x="19.0952%" y="671.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (36 samples, 2.89%)</title><rect x="24.9399%" y="645" width="2.8869%" height="15" fill="rgb(243,122,19)" fg:x="311" fg:w="36"/><text x="25.1899%" y="655.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (33 samples, 2.65%)</title><rect x="25.1804%" y="629" width="2.6464%" height="15" fill="rgb(229,192,45)" fg:x="314" fg:w="33"/><text x="25.4304%" y="639.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (32 samples, 2.57%)</title><rect x="25.2606%" y="613" width="2.5662%" height="15" fill="rgb(235,165,35)" fg:x="315" fg:w="32"/><text x="25.5106%" y="623.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.44%)</title><rect x="26.3833%" y="597" width="1.4435%" height="15" fill="rgb(253,202,0)" fg:x="329" fg:w="18"/><text x="26.6333%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.7466%" y="581" width="0.0802%" height="15" fill="rgb(235,51,20)" fg:x="346" fg:w="1"/><text x="27.9966%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.7466%" y="565" width="0.0802%" height="15" fill="rgb(218,95,46)" fg:x="346" fg:w="1"/><text x="27.9966%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.7466%" y="549" width="0.0802%" height="15" fill="rgb(212,81,10)" fg:x="346" fg:w="1"/><text x="27.9966%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="27.8268%" y="709" width="0.0802%" height="15" fill="rgb(240,59,0)" fg:x="347" fg:w="1"/><text x="28.0768%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="27.8268%" y="725" width="0.1604%" height="15" fill="rgb(212,191,42)" fg:x="347" fg:w="2"/><text x="28.0768%" y="735.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="27.9070%" y="709" width="0.0802%" height="15" fill="rgb(233,140,3)" fg:x="348" fg:w="1"/><text x="28.1570%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="27.9872%" y="709" width="0.0802%" height="15" fill="rgb(215,69,23)" fg:x="349" fg:w="1"/><text x="28.2372%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.9872%" y="693" width="0.0802%" height="15" fill="rgb(240,202,20)" fg:x="349" fg:w="1"/><text x="28.2372%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.9872%" y="677" width="0.0802%" height="15" fill="rgb(209,146,50)" fg:x="349" fg:w="1"/><text x="28.2372%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="27.8268%" y="741" width="0.3208%" height="15" fill="rgb(253,102,54)" fg:x="347" fg:w="4"/><text x="28.0768%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="27.9872%" y="725" width="0.1604%" height="15" fill="rgb(250,173,47)" fg:x="349" fg:w="2"/><text x="28.2372%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="28.0674%" y="709" width="0.0802%" height="15" fill="rgb(232,142,7)" fg:x="350" fg:w="1"/><text x="28.3174%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.0674%" y="693" width="0.0802%" height="15" fill="rgb(230,157,47)" fg:x="350" fg:w="1"/><text x="28.3174%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.0674%" y="677" width="0.0802%" height="15" fill="rgb(214,177,35)" fg:x="350" fg:w="1"/><text x="28.3174%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="28.0674%" y="661" width="0.0802%" height="15" fill="rgb(234,119,46)" fg:x="350" fg:w="1"/><text x="28.3174%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="28.1476%" y="709" width="0.1604%" height="15" fill="rgb(241,180,50)" fg:x="351" fg:w="2"/><text x="28.3976%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="28.1476%" y="693" width="0.1604%" height="15" fill="rgb(221,54,25)" fg:x="351" fg:w="2"/><text x="28.3976%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="28.2277%" y="677" width="0.0802%" height="15" fill="rgb(209,157,44)" fg:x="352" fg:w="1"/><text x="28.4777%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="28.2277%" y="661" width="0.0802%" height="15" fill="rgb(246,115,41)" fg:x="352" fg:w="1"/><text x="28.4777%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.2277%" y="645" width="0.0802%" height="15" fill="rgb(229,86,1)" fg:x="352" fg:w="1"/><text x="28.4777%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.2277%" y="629" width="0.0802%" height="15" fill="rgb(240,108,53)" fg:x="352" fg:w="1"/><text x="28.4777%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="28.2277%" y="613" width="0.0802%" height="15" fill="rgb(227,134,2)" fg:x="352" fg:w="1"/><text x="28.4777%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="28.2277%" y="597" width="0.0802%" height="15" fill="rgb(213,129,25)" fg:x="352" fg:w="1"/><text x="28.4777%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.2277%" y="581" width="0.0802%" height="15" fill="rgb(226,35,21)" fg:x="352" fg:w="1"/><text x="28.4777%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.2277%" y="565" width="0.0802%" height="15" fill="rgb(208,129,26)" fg:x="352" fg:w="1"/><text x="28.4777%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="28.2277%" y="549" width="0.0802%" height="15" fill="rgb(224,83,6)" fg:x="352" fg:w="1"/><text x="28.4777%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="28.2277%" y="533" width="0.0802%" height="15" fill="rgb(227,52,39)" fg:x="352" fg:w="1"/><text x="28.4777%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.2277%" y="517" width="0.0802%" height="15" fill="rgb(241,30,17)" fg:x="352" fg:w="1"/><text x="28.4777%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.2277%" y="501" width="0.0802%" height="15" fill="rgb(246,186,42)" fg:x="352" fg:w="1"/><text x="28.4777%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.2277%" y="485" width="0.0802%" height="15" fill="rgb(221,169,15)" fg:x="352" fg:w="1"/><text x="28.4777%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.2277%" y="469" width="0.0802%" height="15" fill="rgb(235,108,21)" fg:x="352" fg:w="1"/><text x="28.4777%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="28.2277%" y="453" width="0.0802%" height="15" fill="rgb(219,148,30)" fg:x="352" fg:w="1"/><text x="28.4777%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="28.2277%" y="437" width="0.0802%" height="15" fill="rgb(220,109,5)" fg:x="352" fg:w="1"/><text x="28.4777%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="28.2277%" y="421" width="0.0802%" height="15" fill="rgb(213,203,48)" fg:x="352" fg:w="1"/><text x="28.4777%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="28.2277%" y="405" width="0.0802%" height="15" fill="rgb(244,71,33)" fg:x="352" fg:w="1"/><text x="28.4777%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="28.2277%" y="389" width="0.0802%" height="15" fill="rgb(209,23,2)" fg:x="352" fg:w="1"/><text x="28.4777%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="28.2277%" y="373" width="0.0802%" height="15" fill="rgb(219,97,7)" fg:x="352" fg:w="1"/><text x="28.4777%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="28.2277%" y="357" width="0.0802%" height="15" fill="rgb(216,161,23)" fg:x="352" fg:w="1"/><text x="28.4777%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.08%)</title><rect x="28.2277%" y="341" width="0.0802%" height="15" fill="rgb(207,45,42)" fg:x="352" fg:w="1"/><text x="28.4777%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.3079%" y="629" width="0.0802%" height="15" fill="rgb(241,61,4)" fg:x="353" fg:w="1"/><text x="28.5579%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.3079%" y="613" width="0.0802%" height="15" fill="rgb(236,170,1)" fg:x="353" fg:w="1"/><text x="28.5579%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.3079%" y="597" width="0.0802%" height="15" fill="rgb(239,72,5)" fg:x="353" fg:w="1"/><text x="28.5579%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.3079%" y="581" width="0.0802%" height="15" fill="rgb(214,13,50)" fg:x="353" fg:w="1"/><text x="28.5579%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.3079%" y="565" width="0.0802%" height="15" fill="rgb(224,88,9)" fg:x="353" fg:w="1"/><text x="28.5579%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.3079%" y="549" width="0.0802%" height="15" fill="rgb(238,192,34)" fg:x="353" fg:w="1"/><text x="28.5579%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.3079%" y="533" width="0.0802%" height="15" fill="rgb(217,203,50)" fg:x="353" fg:w="1"/><text x="28.5579%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.3079%" y="517" width="0.0802%" height="15" fill="rgb(241,123,32)" fg:x="353" fg:w="1"/><text x="28.5579%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.3079%" y="501" width="0.0802%" height="15" fill="rgb(248,151,39)" fg:x="353" fg:w="1"/><text x="28.5579%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.3079%" y="485" width="0.0802%" height="15" fill="rgb(208,89,6)" fg:x="353" fg:w="1"/><text x="28.5579%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.3079%" y="469" width="0.0802%" height="15" fill="rgb(254,43,26)" fg:x="353" fg:w="1"/><text x="28.5579%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.3079%" y="453" width="0.0802%" height="15" fill="rgb(216,158,13)" fg:x="353" fg:w="1"/><text x="28.5579%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.3079%" y="645" width="0.1604%" height="15" fill="rgb(212,47,37)" fg:x="353" fg:w="2"/><text x="28.5579%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.3881%" y="629" width="0.0802%" height="15" fill="rgb(254,16,10)" fg:x="354" fg:w="1"/><text x="28.6381%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="28.3079%" y="677" width="0.2406%" height="15" fill="rgb(223,228,16)" fg:x="353" fg:w="3"/><text x="28.5579%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="28.3079%" y="661" width="0.2406%" height="15" fill="rgb(249,108,50)" fg:x="353" fg:w="3"/><text x="28.5579%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.4683%" y="645" width="0.0802%" height="15" fill="rgb(208,220,5)" fg:x="355" fg:w="1"/><text x="28.7183%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.4683%" y="629" width="0.0802%" height="15" fill="rgb(217,89,48)" fg:x="355" fg:w="1"/><text x="28.7183%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.4683%" y="613" width="0.0802%" height="15" fill="rgb(212,113,41)" fg:x="355" fg:w="1"/><text x="28.7183%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.4683%" y="597" width="0.0802%" height="15" fill="rgb(231,127,5)" fg:x="355" fg:w="1"/><text x="28.7183%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.4683%" y="581" width="0.0802%" height="15" fill="rgb(217,141,17)" fg:x="355" fg:w="1"/><text x="28.7183%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.4683%" y="565" width="0.0802%" height="15" fill="rgb(245,125,54)" fg:x="355" fg:w="1"/><text x="28.7183%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.4683%" y="549" width="0.0802%" height="15" fill="rgb(248,125,3)" fg:x="355" fg:w="1"/><text x="28.7183%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.4683%" y="533" width="0.0802%" height="15" fill="rgb(236,119,51)" fg:x="355" fg:w="1"/><text x="28.7183%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.4683%" y="517" width="0.0802%" height="15" fill="rgb(239,99,8)" fg:x="355" fg:w="1"/><text x="28.7183%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.4683%" y="501" width="0.0802%" height="15" fill="rgb(224,228,4)" fg:x="355" fg:w="1"/><text x="28.7183%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.4683%" y="485" width="0.0802%" height="15" fill="rgb(220,131,45)" fg:x="355" fg:w="1"/><text x="28.7183%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.4683%" y="469" width="0.0802%" height="15" fill="rgb(215,62,5)" fg:x="355" fg:w="1"/><text x="28.7183%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.5485%" y="677" width="0.0802%" height="15" fill="rgb(253,12,24)" fg:x="356" fg:w="1"/><text x="28.7985%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.5485%" y="661" width="0.0802%" height="15" fill="rgb(248,120,50)" fg:x="356" fg:w="1"/><text x="28.7985%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.5485%" y="645" width="0.0802%" height="15" fill="rgb(245,194,10)" fg:x="356" fg:w="1"/><text x="28.7985%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.5485%" y="629" width="0.0802%" height="15" fill="rgb(241,149,38)" fg:x="356" fg:w="1"/><text x="28.7985%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="28.3079%" y="709" width="0.4010%" height="15" fill="rgb(219,215,7)" fg:x="353" fg:w="5"/><text x="28.5579%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="28.3079%" y="693" width="0.4010%" height="15" fill="rgb(208,120,31)" fg:x="353" fg:w="5"/><text x="28.5579%" y="703.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="28.6287%" y="677" width="0.0802%" height="15" fill="rgb(244,30,8)" fg:x="357" fg:w="1"/><text x="28.8787%" y="687.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.7089%" y="661" width="0.0802%" height="15" fill="rgb(238,35,44)" fg:x="358" fg:w="1"/><text x="28.9589%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.7089%" y="645" width="0.0802%" height="15" fill="rgb(243,218,37)" fg:x="358" fg:w="1"/><text x="28.9589%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.7089%" y="629" width="0.0802%" height="15" fill="rgb(218,169,10)" fg:x="358" fg:w="1"/><text x="28.9589%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.7089%" y="613" width="0.0802%" height="15" fill="rgb(221,144,10)" fg:x="358" fg:w="1"/><text x="28.9589%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="28.7089%" y="693" width="0.1604%" height="15" fill="rgb(226,41,38)" fg:x="358" fg:w="2"/><text x="28.9589%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.7089%" y="677" width="0.1604%" height="15" fill="rgb(228,3,1)" fg:x="358" fg:w="2"/><text x="28.9589%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="28.7891%" y="661" width="0.0802%" height="15" fill="rgb(209,129,12)" fg:x="359" fg:w="1"/><text x="29.0391%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.7891%" y="645" width="0.0802%" height="15" fill="rgb(213,136,33)" fg:x="359" fg:w="1"/><text x="29.0391%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.7891%" y="629" width="0.0802%" height="15" fill="rgb(209,181,29)" fg:x="359" fg:w="1"/><text x="29.0391%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.7891%" y="613" width="0.0802%" height="15" fill="rgb(234,173,18)" fg:x="359" fg:w="1"/><text x="29.0391%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.8693%" y="677" width="0.0802%" height="15" fill="rgb(227,73,47)" fg:x="360" fg:w="1"/><text x="29.1193%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="28.7089%" y="709" width="0.3208%" height="15" fill="rgb(234,9,34)" fg:x="358" fg:w="4"/><text x="28.9589%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="28.8693%" y="693" width="0.1604%" height="15" fill="rgb(235,172,15)" fg:x="360" fg:w="2"/><text x="29.1193%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="28.9495%" y="677" width="0.0802%" height="15" fill="rgb(245,61,2)" fg:x="361" fg:w="1"/><text x="29.1995%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.9495%" y="661" width="0.0802%" height="15" fill="rgb(238,39,47)" fg:x="361" fg:w="1"/><text x="29.1995%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.9495%" y="645" width="0.0802%" height="15" fill="rgb(234,37,24)" fg:x="361" fg:w="1"/><text x="29.1995%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.9495%" y="629" width="0.0802%" height="15" fill="rgb(248,223,24)" fg:x="361" fg:w="1"/><text x="29.1995%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.0297%" y="597" width="0.0802%" height="15" fill="rgb(223,12,15)" fg:x="362" fg:w="1"/><text x="29.2797%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.0297%" y="581" width="0.0802%" height="15" fill="rgb(249,6,3)" fg:x="362" fg:w="1"/><text x="29.2797%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="29.0297%" y="693" width="0.1604%" height="15" fill="rgb(237,105,33)" fg:x="362" fg:w="2"/><text x="29.2797%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="29.0297%" y="677" width="0.1604%" height="15" fill="rgb(252,208,35)" fg:x="362" fg:w="2"/><text x="29.2797%" y="687.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="29.0297%" y="661" width="0.1604%" height="15" fill="rgb(215,181,35)" fg:x="362" fg:w="2"/><text x="29.2797%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="29.0297%" y="645" width="0.1604%" height="15" fill="rgb(246,212,3)" fg:x="362" fg:w="2"/><text x="29.2797%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="29.0297%" y="629" width="0.1604%" height="15" fill="rgb(247,156,24)" fg:x="362" fg:w="2"/><text x="29.2797%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="29.0297%" y="613" width="0.1604%" height="15" fill="rgb(248,9,31)" fg:x="362" fg:w="2"/><text x="29.2797%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.1099%" y="597" width="0.0802%" height="15" fill="rgb(234,26,45)" fg:x="363" fg:w="1"/><text x="29.3599%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="28.1476%" y="725" width="1.2029%" height="15" fill="rgb(249,11,32)" fg:x="351" fg:w="15"/><text x="28.3976%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="29.0297%" y="709" width="0.3208%" height="15" fill="rgb(249,162,33)" fg:x="362" fg:w="4"/><text x="29.2797%" y="719.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="29.1901%" y="693" width="0.1604%" height="15" fill="rgb(232,4,32)" fg:x="364" fg:w="2"/><text x="29.4401%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.1901%" y="677" width="0.1604%" height="15" fill="rgb(212,5,45)" fg:x="364" fg:w="2"/><text x="29.4401%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.1901%" y="661" width="0.1604%" height="15" fill="rgb(227,95,13)" fg:x="364" fg:w="2"/><text x="29.4401%" y="671.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="29.4306%" y="661" width="0.0802%" height="15" fill="rgb(223,205,10)" fg:x="367" fg:w="1"/><text x="29.6806%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="29.5108%" y="645" width="0.2406%" height="15" fill="rgb(222,178,8)" fg:x="368" fg:w="3"/><text x="29.7608%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6712%" y="629" width="0.0802%" height="15" fill="rgb(216,13,22)" fg:x="370" fg:w="1"/><text x="29.9212%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6712%" y="613" width="0.0802%" height="15" fill="rgb(240,167,12)" fg:x="370" fg:w="1"/><text x="29.9212%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6712%" y="597" width="0.0802%" height="15" fill="rgb(235,68,35)" fg:x="370" fg:w="1"/><text x="29.9212%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6712%" y="581" width="0.0802%" height="15" fill="rgb(253,40,27)" fg:x="370" fg:w="1"/><text x="29.9212%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.6712%" y="565" width="0.0802%" height="15" fill="rgb(214,19,28)" fg:x="370" fg:w="1"/><text x="29.9212%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.6712%" y="549" width="0.0802%" height="15" fill="rgb(210,167,45)" fg:x="370" fg:w="1"/><text x="29.9212%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.6712%" y="533" width="0.0802%" height="15" fill="rgb(232,97,40)" fg:x="370" fg:w="1"/><text x="29.9212%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.6712%" y="517" width="0.0802%" height="15" fill="rgb(250,35,23)" fg:x="370" fg:w="1"/><text x="29.9212%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.6712%" y="501" width="0.0802%" height="15" fill="rgb(248,47,53)" fg:x="370" fg:w="1"/><text x="29.9212%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.6712%" y="485" width="0.0802%" height="15" fill="rgb(226,58,50)" fg:x="370" fg:w="1"/><text x="29.9212%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.7514%" y="613" width="0.0802%" height="15" fill="rgb(217,105,26)" fg:x="371" fg:w="1"/><text x="30.0014%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.7514%" y="597" width="0.0802%" height="15" fill="rgb(208,64,1)" fg:x="371" fg:w="1"/><text x="30.0014%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.8316%" y="597" width="0.0802%" height="15" fill="rgb(214,80,1)" fg:x="372" fg:w="1"/><text x="30.0816%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="29.7514%" y="645" width="0.2406%" height="15" fill="rgb(206,175,26)" fg:x="371" fg:w="3"/><text x="30.0014%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="29.7514%" y="629" width="0.2406%" height="15" fill="rgb(235,156,37)" fg:x="371" fg:w="3"/><text x="30.0014%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="29.8316%" y="613" width="0.1604%" height="15" fill="rgb(213,100,9)" fg:x="372" fg:w="2"/><text x="30.0816%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.9118%" y="597" width="0.0802%" height="15" fill="rgb(241,15,13)" fg:x="373" fg:w="1"/><text x="30.1618%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.9118%" y="581" width="0.0802%" height="15" fill="rgb(205,97,43)" fg:x="373" fg:w="1"/><text x="30.1618%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="29.4306%" y="677" width="0.6415%" height="15" fill="rgb(216,106,32)" fg:x="367" fg:w="8"/><text x="29.6806%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="29.5108%" y="661" width="0.5613%" height="15" fill="rgb(226,200,8)" fg:x="368" fg:w="7"/><text x="29.7608%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.9920%" y="645" width="0.0802%" height="15" fill="rgb(244,54,29)" fg:x="374" fg:w="1"/><text x="30.2420%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.9920%" y="629" width="0.0802%" height="15" fill="rgb(252,169,12)" fg:x="374" fg:w="1"/><text x="30.2420%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.9920%" y="613" width="0.0802%" height="15" fill="rgb(231,199,11)" fg:x="374" fg:w="1"/><text x="30.2420%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.9920%" y="597" width="0.0802%" height="15" fill="rgb(233,191,18)" fg:x="374" fg:w="1"/><text x="30.2420%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.9920%" y="581" width="0.0802%" height="15" fill="rgb(215,83,47)" fg:x="374" fg:w="1"/><text x="30.2420%" y="591.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="30.0722%" y="661" width="0.0802%" height="15" fill="rgb(251,67,19)" fg:x="375" fg:w="1"/><text x="30.3222%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.0722%" y="645" width="0.0802%" height="15" fill="rgb(240,7,20)" fg:x="375" fg:w="1"/><text x="30.3222%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1524%" y="645" width="0.0802%" height="15" fill="rgb(210,150,26)" fg:x="376" fg:w="1"/><text x="30.4024%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1524%" y="629" width="0.0802%" height="15" fill="rgb(228,75,42)" fg:x="376" fg:w="1"/><text x="30.4024%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1524%" y="613" width="0.0802%" height="15" fill="rgb(237,134,48)" fg:x="376" fg:w="1"/><text x="30.4024%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1524%" y="597" width="0.0802%" height="15" fill="rgb(205,80,50)" fg:x="376" fg:w="1"/><text x="30.4024%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.1524%" y="581" width="0.0802%" height="15" fill="rgb(217,74,48)" fg:x="376" fg:w="1"/><text x="30.4024%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.1524%" y="565" width="0.0802%" height="15" fill="rgb(205,82,50)" fg:x="376" fg:w="1"/><text x="30.4024%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.1524%" y="549" width="0.0802%" height="15" fill="rgb(228,1,33)" fg:x="376" fg:w="1"/><text x="30.4024%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1524%" y="533" width="0.0802%" height="15" fill="rgb(214,50,23)" fg:x="376" fg:w="1"/><text x="30.4024%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1524%" y="517" width="0.0802%" height="15" fill="rgb(210,62,9)" fg:x="376" fg:w="1"/><text x="30.4024%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.1524%" y="501" width="0.0802%" height="15" fill="rgb(210,104,37)" fg:x="376" fg:w="1"/><text x="30.4024%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.1524%" y="485" width="0.0802%" height="15" fill="rgb(232,104,43)" fg:x="376" fg:w="1"/><text x="30.4024%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.1524%" y="469" width="0.0802%" height="15" fill="rgb(244,52,6)" fg:x="376" fg:w="1"/><text x="30.4024%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.1524%" y="453" width="0.0802%" height="15" fill="rgb(211,174,52)" fg:x="376" fg:w="1"/><text x="30.4024%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.04%)</title><rect x="29.3504%" y="709" width="1.0425%" height="15" fill="rgb(229,48,4)" fg:x="366" fg:w="13"/><text x="29.6004%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (12 samples, 0.96%)</title><rect x="29.4306%" y="693" width="0.9623%" height="15" fill="rgb(205,155,16)" fg:x="367" fg:w="12"/><text x="29.6806%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="30.0722%" y="677" width="0.3208%" height="15" fill="rgb(211,141,53)" fg:x="375" fg:w="4"/><text x="30.3222%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="30.1524%" y="661" width="0.2406%" height="15" fill="rgb(240,148,11)" fg:x="376" fg:w="3"/><text x="30.4024%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.2326%" y="645" width="0.1604%" height="15" fill="rgb(214,45,23)" fg:x="377" fg:w="2"/><text x="30.4826%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.2326%" y="629" width="0.1604%" height="15" fill="rgb(248,74,26)" fg:x="377" fg:w="2"/><text x="30.4826%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="30.2326%" y="613" width="0.1604%" height="15" fill="rgb(218,121,16)" fg:x="377" fg:w="2"/><text x="30.4826%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.2326%" y="597" width="0.1604%" height="15" fill="rgb(218,10,47)" fg:x="377" fg:w="2"/><text x="30.4826%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="30.2326%" y="581" width="0.1604%" height="15" fill="rgb(227,99,14)" fg:x="377" fg:w="2"/><text x="30.4826%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.3128%" y="565" width="0.0802%" height="15" fill="rgb(229,83,46)" fg:x="378" fg:w="1"/><text x="30.5628%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.3128%" y="549" width="0.0802%" height="15" fill="rgb(228,25,1)" fg:x="378" fg:w="1"/><text x="30.5628%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.3929%" y="693" width="0.0802%" height="15" fill="rgb(252,190,15)" fg:x="379" fg:w="1"/><text x="30.6429%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.3929%" y="677" width="0.0802%" height="15" fill="rgb(213,103,51)" fg:x="379" fg:w="1"/><text x="30.6429%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="30.3929%" y="709" width="0.2406%" height="15" fill="rgb(220,38,44)" fg:x="379" fg:w="3"/><text x="30.6429%" y="719.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="30.4731%" y="693" width="0.1604%" height="15" fill="rgb(210,45,26)" fg:x="380" fg:w="2"/><text x="30.7231%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.4731%" y="677" width="0.1604%" height="15" fill="rgb(205,95,48)" fg:x="380" fg:w="2"/><text x="30.7231%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.5533%" y="661" width="0.0802%" height="15" fill="rgb(225,179,37)" fg:x="381" fg:w="1"/><text x="30.8033%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="30.5533%" y="645" width="0.0802%" height="15" fill="rgb(230,209,3)" fg:x="381" fg:w="1"/><text x="30.8033%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.5533%" y="629" width="0.0802%" height="15" fill="rgb(248,12,46)" fg:x="381" fg:w="1"/><text x="30.8033%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.6335%" y="629" width="0.1604%" height="15" fill="rgb(234,18,0)" fg:x="382" fg:w="2"/><text x="30.8835%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.6335%" y="613" width="0.1604%" height="15" fill="rgb(238,197,14)" fg:x="382" fg:w="2"/><text x="30.8835%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7137%" y="597" width="0.0802%" height="15" fill="rgb(251,162,48)" fg:x="383" fg:w="1"/><text x="30.9637%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7137%" y="581" width="0.0802%" height="15" fill="rgb(237,73,42)" fg:x="383" fg:w="1"/><text x="30.9637%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.7137%" y="565" width="0.0802%" height="15" fill="rgb(211,108,8)" fg:x="383" fg:w="1"/><text x="30.9637%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.7137%" y="549" width="0.0802%" height="15" fill="rgb(213,45,22)" fg:x="383" fg:w="1"/><text x="30.9637%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.7137%" y="533" width="0.0802%" height="15" fill="rgb(252,154,5)" fg:x="383" fg:w="1"/><text x="30.9637%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="30.7137%" y="517" width="0.0802%" height="15" fill="rgb(221,79,52)" fg:x="383" fg:w="1"/><text x="30.9637%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="30.7137%" y="501" width="0.0802%" height="15" fill="rgb(229,220,36)" fg:x="383" fg:w="1"/><text x="30.9637%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="30.7939%" y="565" width="0.0802%" height="15" fill="rgb(211,17,16)" fg:x="384" fg:w="1"/><text x="31.0439%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.8741%" y="565" width="0.0802%" height="15" fill="rgb(222,55,31)" fg:x="385" fg:w="1"/><text x="31.1241%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="30.6335%" y="661" width="0.4812%" height="15" fill="rgb(221,221,31)" fg:x="382" fg:w="6"/><text x="30.8835%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="30.6335%" y="645" width="0.4812%" height="15" fill="rgb(227,168,26)" fg:x="382" fg:w="6"/><text x="30.8835%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="30.7939%" y="629" width="0.3208%" height="15" fill="rgb(224,139,9)" fg:x="384" fg:w="4"/><text x="31.0439%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="30.7939%" y="613" width="0.3208%" height="15" fill="rgb(254,172,0)" fg:x="384" fg:w="4"/><text x="31.0439%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="30.7939%" y="597" width="0.3208%" height="15" fill="rgb(235,203,1)" fg:x="384" fg:w="4"/><text x="31.0439%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="30.7939%" y="581" width="0.3208%" height="15" fill="rgb(216,205,24)" fg:x="384" fg:w="4"/><text x="31.0439%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.9543%" y="565" width="0.1604%" height="15" fill="rgb(233,24,6)" fg:x="386" fg:w="2"/><text x="31.2043%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.9543%" y="549" width="0.1604%" height="15" fill="rgb(244,110,9)" fg:x="386" fg:w="2"/><text x="31.2043%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.0345%" y="533" width="0.0802%" height="15" fill="rgb(239,222,42)" fg:x="387" fg:w="1"/><text x="31.2845%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.1147%" y="629" width="0.0802%" height="15" fill="rgb(218,145,13)" fg:x="388" fg:w="1"/><text x="31.3647%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.1147%" y="613" width="0.0802%" height="15" fill="rgb(207,69,11)" fg:x="388" fg:w="1"/><text x="31.3647%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.1147%" y="597" width="0.0802%" height="15" fill="rgb(220,223,22)" fg:x="388" fg:w="1"/><text x="31.3647%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1147%" y="581" width="0.0802%" height="15" fill="rgb(245,102,5)" fg:x="388" fg:w="1"/><text x="31.3647%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1147%" y="565" width="0.0802%" height="15" fill="rgb(211,148,2)" fg:x="388" fg:w="1"/><text x="31.3647%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.1147%" y="549" width="0.0802%" height="15" fill="rgb(241,13,44)" fg:x="388" fg:w="1"/><text x="31.3647%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.1147%" y="533" width="0.0802%" height="15" fill="rgb(219,137,21)" fg:x="388" fg:w="1"/><text x="31.3647%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.1147%" y="517" width="0.0802%" height="15" fill="rgb(242,206,5)" fg:x="388" fg:w="1"/><text x="31.3647%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1147%" y="501" width="0.0802%" height="15" fill="rgb(217,114,22)" fg:x="388" fg:w="1"/><text x="31.3647%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1147%" y="485" width="0.0802%" height="15" fill="rgb(253,206,42)" fg:x="388" fg:w="1"/><text x="31.3647%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.1147%" y="469" width="0.0802%" height="15" fill="rgb(236,102,18)" fg:x="388" fg:w="1"/><text x="31.3647%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.1147%" y="453" width="0.0802%" height="15" fill="rgb(208,59,49)" fg:x="388" fg:w="1"/><text x="31.3647%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.1147%" y="437" width="0.0802%" height="15" fill="rgb(215,194,28)" fg:x="388" fg:w="1"/><text x="31.3647%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.1147%" y="421" width="0.0802%" height="15" fill="rgb(243,207,11)" fg:x="388" fg:w="1"/><text x="31.3647%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.1147%" y="405" width="0.0802%" height="15" fill="rgb(254,179,35)" fg:x="388" fg:w="1"/><text x="31.3647%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.1949%" y="629" width="0.0802%" height="15" fill="rgb(235,97,3)" fg:x="389" fg:w="1"/><text x="31.4449%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="30.6335%" y="693" width="0.7217%" height="15" fill="rgb(215,155,33)" fg:x="382" fg:w="9"/><text x="30.8835%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="30.6335%" y="677" width="0.7217%" height="15" fill="rgb(223,128,12)" fg:x="382" fg:w="9"/><text x="30.8835%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="31.1147%" y="661" width="0.2406%" height="15" fill="rgb(208,157,18)" fg:x="388" fg:w="3"/><text x="31.3647%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.1147%" y="645" width="0.2406%" height="15" fill="rgb(249,70,54)" fg:x="388" fg:w="3"/><text x="31.3647%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.2751%" y="629" width="0.0802%" height="15" fill="rgb(244,118,24)" fg:x="390" fg:w="1"/><text x="31.5251%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.2751%" y="613" width="0.0802%" height="15" fill="rgb(211,54,0)" fg:x="390" fg:w="1"/><text x="31.5251%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.2751%" y="597" width="0.0802%" height="15" fill="rgb(245,137,45)" fg:x="390" fg:w="1"/><text x="31.5251%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.80%)</title><rect x="30.6335%" y="709" width="0.8019%" height="15" fill="rgb(232,154,31)" fg:x="382" fg:w="10"/><text x="30.8835%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="31.3553%" y="693" width="0.0802%" height="15" fill="rgb(253,6,39)" fg:x="391" fg:w="1"/><text x="31.6053%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.3553%" y="677" width="0.0802%" height="15" fill="rgb(234,183,24)" fg:x="391" fg:w="1"/><text x="31.6053%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="31.3553%" y="661" width="0.0802%" height="15" fill="rgb(252,84,40)" fg:x="391" fg:w="1"/><text x="31.6053%" y="671.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="31.3553%" y="645" width="0.0802%" height="15" fill="rgb(224,65,2)" fg:x="391" fg:w="1"/><text x="31.6053%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="31.3553%" y="629" width="0.0802%" height="15" fill="rgb(229,38,24)" fg:x="391" fg:w="1"/><text x="31.6053%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="31.3553%" y="613" width="0.0802%" height="15" fill="rgb(218,131,50)" fg:x="391" fg:w="1"/><text x="31.6053%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.3553%" y="597" width="0.0802%" height="15" fill="rgb(233,106,18)" fg:x="391" fg:w="1"/><text x="31.6053%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.3553%" y="581" width="0.0802%" height="15" fill="rgb(220,216,11)" fg:x="391" fg:w="1"/><text x="31.6053%" y="591.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="31.3553%" y="565" width="0.0802%" height="15" fill="rgb(251,100,45)" fg:x="391" fg:w="1"/><text x="31.6053%" y="575.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="31.3553%" y="549" width="0.0802%" height="15" fill="rgb(235,143,32)" fg:x="391" fg:w="1"/><text x="31.6053%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.3553%" y="533" width="0.0802%" height="15" fill="rgb(248,124,34)" fg:x="391" fg:w="1"/><text x="31.6053%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.3553%" y="517" width="0.0802%" height="15" fill="rgb(225,221,4)" fg:x="391" fg:w="1"/><text x="31.6053%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="31.3553%" y="501" width="0.0802%" height="15" fill="rgb(242,27,43)" fg:x="391" fg:w="1"/><text x="31.6053%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="31.3553%" y="485" width="0.0802%" height="15" fill="rgb(227,54,8)" fg:x="391" fg:w="1"/><text x="31.6053%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="31.3553%" y="469" width="0.0802%" height="15" fill="rgb(253,139,49)" fg:x="391" fg:w="1"/><text x="31.6053%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="31.3553%" y="453" width="0.0802%" height="15" fill="rgb(231,26,43)" fg:x="391" fg:w="1"/><text x="31.6053%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="31.3553%" y="437" width="0.0802%" height="15" fill="rgb(207,121,39)" fg:x="391" fg:w="1"/><text x="31.6053%" y="447.50"></text></g><g><title>plugins_core::build::Build::holding (42 samples, 3.37%)</title><rect x="28.1476%" y="741" width="3.3681%" height="15" fill="rgb(223,101,35)" fg:x="351" fg:w="42"/><text x="28.3976%" y="751.50">plu..</text></g><g><title>plugins_core::tools::set_container (27 samples, 2.17%)</title><rect x="29.3504%" y="725" width="2.1652%" height="15" fill="rgb(232,87,23)" fg:x="366" fg:w="27"/><text x="29.6004%" y="735.50">p..</text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="31.4354%" y="709" width="0.0802%" height="15" fill="rgb(225,180,29)" fg:x="392" fg:w="1"/><text x="31.6854%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.4354%" y="693" width="0.0802%" height="15" fill="rgb(225,25,17)" fg:x="392" fg:w="1"/><text x="31.6854%" y="703.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="31.4354%" y="677" width="0.0802%" height="15" fill="rgb(223,8,52)" fg:x="392" fg:w="1"/><text x="31.6854%" y="687.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="31.5156%" y="741" width="0.0802%" height="15" fill="rgb(246,42,21)" fg:x="393" fg:w="1"/><text x="31.7656%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="31.5156%" y="725" width="0.0802%" height="15" fill="rgb(205,64,43)" fg:x="393" fg:w="1"/><text x="31.7656%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.5156%" y="709" width="0.0802%" height="15" fill="rgb(221,160,13)" fg:x="393" fg:w="1"/><text x="31.7656%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.5156%" y="693" width="0.0802%" height="15" fill="rgb(239,58,35)" fg:x="393" fg:w="1"/><text x="31.7656%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.5156%" y="677" width="0.0802%" height="15" fill="rgb(251,26,40)" fg:x="393" fg:w="1"/><text x="31.7656%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.5156%" y="661" width="0.0802%" height="15" fill="rgb(247,0,4)" fg:x="393" fg:w="1"/><text x="31.7656%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.5156%" y="645" width="0.0802%" height="15" fill="rgb(218,130,10)" fg:x="393" fg:w="1"/><text x="31.7656%" y="655.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="31.5958%" y="709" width="0.0802%" height="15" fill="rgb(239,32,7)" fg:x="394" fg:w="1"/><text x="31.8458%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.5958%" y="693" width="0.0802%" height="15" fill="rgb(210,192,24)" fg:x="394" fg:w="1"/><text x="31.8458%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.5958%" y="677" width="0.0802%" height="15" fill="rgb(226,212,17)" fg:x="394" fg:w="1"/><text x="31.8458%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="31.5958%" y="661" width="0.0802%" height="15" fill="rgb(219,201,28)" fg:x="394" fg:w="1"/><text x="31.8458%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.6760%" y="677" width="0.0802%" height="15" fill="rgb(235,207,41)" fg:x="395" fg:w="1"/><text x="31.9260%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.6760%" y="661" width="0.0802%" height="15" fill="rgb(241,95,54)" fg:x="395" fg:w="1"/><text x="31.9260%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.6760%" y="645" width="0.0802%" height="15" fill="rgb(248,12,23)" fg:x="395" fg:w="1"/><text x="31.9260%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.6760%" y="629" width="0.0802%" height="15" fill="rgb(228,173,4)" fg:x="395" fg:w="1"/><text x="31.9260%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.6760%" y="613" width="0.0802%" height="15" fill="rgb(254,99,5)" fg:x="395" fg:w="1"/><text x="31.9260%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.6760%" y="597" width="0.0802%" height="15" fill="rgb(212,184,17)" fg:x="395" fg:w="1"/><text x="31.9260%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.6760%" y="581" width="0.0802%" height="15" fill="rgb(252,174,1)" fg:x="395" fg:w="1"/><text x="31.9260%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.6760%" y="565" width="0.0802%" height="15" fill="rgb(241,118,51)" fg:x="395" fg:w="1"/><text x="31.9260%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.6760%" y="549" width="0.0802%" height="15" fill="rgb(227,94,47)" fg:x="395" fg:w="1"/><text x="31.9260%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.6760%" y="533" width="0.0802%" height="15" fill="rgb(229,104,2)" fg:x="395" fg:w="1"/><text x="31.9260%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.6760%" y="517" width="0.0802%" height="15" fill="rgb(219,28,31)" fg:x="395" fg:w="1"/><text x="31.9260%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.6760%" y="501" width="0.0802%" height="15" fill="rgb(233,109,36)" fg:x="395" fg:w="1"/><text x="31.9260%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.6760%" y="485" width="0.0802%" height="15" fill="rgb(246,88,11)" fg:x="395" fg:w="1"/><text x="31.9260%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="31.7562%" y="661" width="0.0802%" height="15" fill="rgb(209,212,17)" fg:x="396" fg:w="1"/><text x="32.0062%" y="671.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="31.6760%" y="709" width="0.2406%" height="15" fill="rgb(243,59,29)" fg:x="395" fg:w="3"/><text x="31.9260%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="31.6760%" y="693" width="0.2406%" height="15" fill="rgb(244,205,48)" fg:x="395" fg:w="3"/><text x="31.9260%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="31.7562%" y="677" width="0.1604%" height="15" fill="rgb(227,30,6)" fg:x="396" fg:w="2"/><text x="32.0062%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.8364%" y="661" width="0.0802%" height="15" fill="rgb(220,205,48)" fg:x="397" fg:w="1"/><text x="32.0864%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="31.8364%" y="645" width="0.0802%" height="15" fill="rgb(250,94,14)" fg:x="397" fg:w="1"/><text x="32.0864%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="31.8364%" y="629" width="0.0802%" height="15" fill="rgb(216,119,42)" fg:x="397" fg:w="1"/><text x="32.0864%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="31.8364%" y="613" width="0.0802%" height="15" fill="rgb(232,155,0)" fg:x="397" fg:w="1"/><text x="32.0864%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.8364%" y="597" width="0.0802%" height="15" fill="rgb(212,24,32)" fg:x="397" fg:w="1"/><text x="32.0864%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (7 samples, 0.56%)</title><rect x="31.5958%" y="741" width="0.5613%" height="15" fill="rgb(216,69,20)" fg:x="394" fg:w="7"/><text x="31.8458%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (7 samples, 0.56%)</title><rect x="31.5958%" y="725" width="0.5613%" height="15" fill="rgb(229,73,31)" fg:x="394" fg:w="7"/><text x="31.8458%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.9166%" y="709" width="0.2406%" height="15" fill="rgb(224,219,20)" fg:x="398" fg:w="3"/><text x="32.1666%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.9968%" y="693" width="0.1604%" height="15" fill="rgb(215,146,41)" fg:x="399" fg:w="2"/><text x="32.2468%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.9968%" y="677" width="0.1604%" height="15" fill="rgb(244,71,31)" fg:x="399" fg:w="2"/><text x="32.2468%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="31.9968%" y="661" width="0.1604%" height="15" fill="rgb(224,24,11)" fg:x="399" fg:w="2"/><text x="32.2468%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.9968%" y="645" width="0.1604%" height="15" fill="rgb(229,76,15)" fg:x="399" fg:w="2"/><text x="32.2468%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="32.0770%" y="629" width="0.0802%" height="15" fill="rgb(209,93,2)" fg:x="400" fg:w="1"/><text x="32.3270%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.0770%" y="613" width="0.0802%" height="15" fill="rgb(216,200,50)" fg:x="400" fg:w="1"/><text x="32.3270%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="32.2374%" y="709" width="0.0802%" height="15" fill="rgb(211,67,34)" fg:x="402" fg:w="1"/><text x="32.4874%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="32.2374%" y="693" width="0.0802%" height="15" fill="rgb(225,87,47)" fg:x="402" fg:w="1"/><text x="32.4874%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="32.2374%" y="677" width="0.0802%" height="15" fill="rgb(217,185,16)" fg:x="402" fg:w="1"/><text x="32.4874%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="32.2374%" y="661" width="0.0802%" height="15" fill="rgb(205,0,0)" fg:x="402" fg:w="1"/><text x="32.4874%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.2374%" y="645" width="0.0802%" height="15" fill="rgb(207,116,45)" fg:x="402" fg:w="1"/><text x="32.4874%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.2374%" y="629" width="0.0802%" height="15" fill="rgb(221,156,26)" fg:x="402" fg:w="1"/><text x="32.4874%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="32.2374%" y="613" width="0.0802%" height="15" fill="rgb(213,140,4)" fg:x="402" fg:w="1"/><text x="32.4874%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="32.3176%" y="709" width="0.1604%" height="15" fill="rgb(231,224,15)" fg:x="403" fg:w="2"/><text x="32.5676%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.3176%" y="693" width="0.1604%" height="15" fill="rgb(244,76,20)" fg:x="403" fg:w="2"/><text x="32.5676%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3978%" y="677" width="0.0802%" height="15" fill="rgb(238,117,7)" fg:x="404" fg:w="1"/><text x="32.6478%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3978%" y="661" width="0.0802%" height="15" fill="rgb(235,1,10)" fg:x="404" fg:w="1"/><text x="32.6478%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3978%" y="645" width="0.0802%" height="15" fill="rgb(216,165,6)" fg:x="404" fg:w="1"/><text x="32.6478%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.3978%" y="629" width="0.0802%" height="15" fill="rgb(246,91,35)" fg:x="404" fg:w="1"/><text x="32.6478%" y="639.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.5581%" y="661" width="0.1604%" height="15" fill="rgb(228,96,24)" fg:x="406" fg:w="2"/><text x="32.8081%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.6383%" y="645" width="0.0802%" height="15" fill="rgb(254,217,53)" fg:x="407" fg:w="1"/><text x="32.8883%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.6383%" y="629" width="0.0802%" height="15" fill="rgb(209,60,0)" fg:x="407" fg:w="1"/><text x="32.8883%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.6383%" y="613" width="0.0802%" height="15" fill="rgb(250,93,26)" fg:x="407" fg:w="1"/><text x="32.8883%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.7185%" y="629" width="0.0802%" height="15" fill="rgb(211,9,40)" fg:x="408" fg:w="1"/><text x="32.9685%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="32.5581%" y="693" width="0.3208%" height="15" fill="rgb(242,57,20)" fg:x="406" fg:w="4"/><text x="32.8081%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="32.5581%" y="677" width="0.3208%" height="15" fill="rgb(248,85,48)" fg:x="406" fg:w="4"/><text x="32.8081%" y="687.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="32.7185%" y="661" width="0.1604%" height="15" fill="rgb(212,117,2)" fg:x="408" fg:w="2"/><text x="32.9685%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.7185%" y="645" width="0.1604%" height="15" fill="rgb(243,19,3)" fg:x="408" fg:w="2"/><text x="32.9685%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.7987%" y="629" width="0.0802%" height="15" fill="rgb(232,217,24)" fg:x="409" fg:w="1"/><text x="33.0487%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.7987%" y="613" width="0.0802%" height="15" fill="rgb(224,175,40)" fg:x="409" fg:w="1"/><text x="33.0487%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="32.7987%" y="597" width="0.0802%" height="15" fill="rgb(212,162,32)" fg:x="409" fg:w="1"/><text x="33.0487%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="32.7987%" y="581" width="0.0802%" height="15" fill="rgb(215,9,4)" fg:x="409" fg:w="1"/><text x="33.0487%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.48%)</title><rect x="32.4779%" y="709" width="0.4812%" height="15" fill="rgb(242,42,7)" fg:x="405" fg:w="6"/><text x="32.7279%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="32.8789%" y="693" width="0.0802%" height="15" fill="rgb(242,184,45)" fg:x="410" fg:w="1"/><text x="33.1289%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.8789%" y="677" width="0.0802%" height="15" fill="rgb(228,111,51)" fg:x="410" fg:w="1"/><text x="33.1289%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.8789%" y="661" width="0.0802%" height="15" fill="rgb(236,147,17)" fg:x="410" fg:w="1"/><text x="33.1289%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.8789%" y="645" width="0.0802%" height="15" fill="rgb(210,75,22)" fg:x="410" fg:w="1"/><text x="33.1289%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.0393%" y="629" width="0.0802%" height="15" fill="rgb(217,159,45)" fg:x="412" fg:w="1"/><text x="33.2893%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.0393%" y="613" width="0.0802%" height="15" fill="rgb(245,165,53)" fg:x="412" fg:w="1"/><text x="33.2893%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0393%" y="597" width="0.0802%" height="15" fill="rgb(251,190,50)" fg:x="412" fg:w="1"/><text x="33.2893%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="33.0393%" y="661" width="0.1604%" height="15" fill="rgb(208,203,29)" fg:x="412" fg:w="2"/><text x="33.2893%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="33.0393%" y="645" width="0.1604%" height="15" fill="rgb(207,209,35)" fg:x="412" fg:w="2"/><text x="33.2893%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.1195%" y="629" width="0.0802%" height="15" fill="rgb(230,144,49)" fg:x="413" fg:w="1"/><text x="33.3695%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="33.0393%" y="693" width="0.4010%" height="15" fill="rgb(229,31,6)" fg:x="412" fg:w="5"/><text x="33.2893%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="33.0393%" y="677" width="0.4010%" height="15" fill="rgb(251,129,24)" fg:x="412" fg:w="5"/><text x="33.2893%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="33.1997%" y="661" width="0.2406%" height="15" fill="rgb(235,105,15)" fg:x="414" fg:w="3"/><text x="33.4497%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="33.1997%" y="645" width="0.2406%" height="15" fill="rgb(216,52,43)" fg:x="414" fg:w="3"/><text x="33.4497%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="33.1997%" y="629" width="0.2406%" height="15" fill="rgb(238,144,41)" fg:x="414" fg:w="3"/><text x="33.4497%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="33.2799%" y="613" width="0.1604%" height="15" fill="rgb(243,63,9)" fg:x="415" fg:w="2"/><text x="33.5299%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.2799%" y="597" width="0.1604%" height="15" fill="rgb(246,208,1)" fg:x="415" fg:w="2"/><text x="33.5299%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.2799%" y="581" width="0.1604%" height="15" fill="rgb(233,182,18)" fg:x="415" fg:w="2"/><text x="33.5299%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.2799%" y="565" width="0.1604%" height="15" fill="rgb(242,224,8)" fg:x="415" fg:w="2"/><text x="33.5299%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.3601%" y="549" width="0.0802%" height="15" fill="rgb(243,54,37)" fg:x="416" fg:w="1"/><text x="33.6101%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.28%)</title><rect x="32.2374%" y="725" width="1.2831%" height="15" fill="rgb(233,192,12)" fg:x="402" fg:w="16"/><text x="32.4874%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="32.9591%" y="709" width="0.5613%" height="15" fill="rgb(251,192,53)" fg:x="411" fg:w="7"/><text x="33.2091%" y="719.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="33.4403%" y="693" width="0.0802%" height="15" fill="rgb(246,141,26)" fg:x="417" fg:w="1"/><text x="33.6903%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4403%" y="677" width="0.0802%" height="15" fill="rgb(239,195,19)" fg:x="417" fg:w="1"/><text x="33.6903%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.5204%" y="725" width="0.0802%" height="15" fill="rgb(241,16,39)" fg:x="418" fg:w="1"/><text x="33.7704%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.6006%" y="661" width="0.0802%" height="15" fill="rgb(223,13,53)" fg:x="419" fg:w="1"/><text x="33.8506%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6808%" y="645" width="0.0802%" height="15" fill="rgb(214,227,0)" fg:x="420" fg:w="1"/><text x="33.9308%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6808%" y="629" width="0.0802%" height="15" fill="rgb(228,103,26)" fg:x="420" fg:w="1"/><text x="33.9308%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6808%" y="613" width="0.0802%" height="15" fill="rgb(254,177,53)" fg:x="420" fg:w="1"/><text x="33.9308%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="33.6006%" y="677" width="0.2406%" height="15" fill="rgb(208,201,34)" fg:x="419" fg:w="3"/><text x="33.8506%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="33.6808%" y="661" width="0.1604%" height="15" fill="rgb(212,39,5)" fg:x="420" fg:w="2"/><text x="33.9308%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7610%" y="645" width="0.0802%" height="15" fill="rgb(246,117,3)" fg:x="421" fg:w="1"/><text x="34.0110%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7610%" y="629" width="0.0802%" height="15" fill="rgb(244,118,39)" fg:x="421" fg:w="1"/><text x="34.0110%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.7610%" y="613" width="0.0802%" height="15" fill="rgb(241,64,10)" fg:x="421" fg:w="1"/><text x="34.0110%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7610%" y="597" width="0.0802%" height="15" fill="rgb(229,39,44)" fg:x="421" fg:w="1"/><text x="34.0110%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="33.7610%" y="581" width="0.0802%" height="15" fill="rgb(230,226,3)" fg:x="421" fg:w="1"/><text x="34.0110%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.7610%" y="565" width="0.0802%" height="15" fill="rgb(222,13,42)" fg:x="421" fg:w="1"/><text x="34.0110%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.0818%" y="645" width="0.0802%" height="15" fill="rgb(247,180,54)" fg:x="425" fg:w="1"/><text x="34.3318%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.0818%" y="629" width="0.0802%" height="15" fill="rgb(205,96,16)" fg:x="425" fg:w="1"/><text x="34.3318%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.0818%" y="613" width="0.0802%" height="15" fill="rgb(205,100,21)" fg:x="425" fg:w="1"/><text x="34.3318%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.0818%" y="597" width="0.0802%" height="15" fill="rgb(248,51,4)" fg:x="425" fg:w="1"/><text x="34.3318%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.0818%" y="581" width="0.0802%" height="15" fill="rgb(217,197,30)" fg:x="425" fg:w="1"/><text x="34.3318%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.0818%" y="565" width="0.0802%" height="15" fill="rgb(240,179,40)" fg:x="425" fg:w="1"/><text x="34.3318%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.0818%" y="549" width="0.0802%" height="15" fill="rgb(212,185,35)" fg:x="425" fg:w="1"/><text x="34.3318%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.0818%" y="533" width="0.0802%" height="15" fill="rgb(251,222,31)" fg:x="425" fg:w="1"/><text x="34.3318%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.0818%" y="517" width="0.0802%" height="15" fill="rgb(208,140,36)" fg:x="425" fg:w="1"/><text x="34.3318%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.0818%" y="501" width="0.0802%" height="15" fill="rgb(220,148,1)" fg:x="425" fg:w="1"/><text x="34.3318%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.0818%" y="485" width="0.0802%" height="15" fill="rgb(254,4,28)" fg:x="425" fg:w="1"/><text x="34.3318%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.0818%" y="469" width="0.0802%" height="15" fill="rgb(222,185,44)" fg:x="425" fg:w="1"/><text x="34.3318%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.0818%" y="453" width="0.0802%" height="15" fill="rgb(215,74,39)" fg:x="425" fg:w="1"/><text x="34.3318%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.0818%" y="437" width="0.0802%" height="15" fill="rgb(247,86,4)" fg:x="425" fg:w="1"/><text x="34.3318%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0818%" y="421" width="0.0802%" height="15" fill="rgb(231,105,32)" fg:x="425" fg:w="1"/><text x="34.3318%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="33.6006%" y="709" width="0.6415%" height="15" fill="rgb(222,65,35)" fg:x="419" fg:w="8"/><text x="33.8506%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="33.6006%" y="693" width="0.6415%" height="15" fill="rgb(218,145,35)" fg:x="419" fg:w="8"/><text x="33.8506%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="33.8412%" y="677" width="0.4010%" height="15" fill="rgb(208,7,15)" fg:x="422" fg:w="5"/><text x="34.0912%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="33.9214%" y="661" width="0.3208%" height="15" fill="rgb(209,83,13)" fg:x="423" fg:w="4"/><text x="34.1714%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.1620%" y="645" width="0.0802%" height="15" fill="rgb(218,3,10)" fg:x="426" fg:w="1"/><text x="34.4120%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.1620%" y="629" width="0.0802%" height="15" fill="rgb(211,219,4)" fg:x="426" fg:w="1"/><text x="34.4120%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.1620%" y="613" width="0.0802%" height="15" fill="rgb(228,194,12)" fg:x="426" fg:w="1"/><text x="34.4120%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.1620%" y="597" width="0.0802%" height="15" fill="rgb(210,175,7)" fg:x="426" fg:w="1"/><text x="34.4120%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.1620%" y="581" width="0.0802%" height="15" fill="rgb(243,132,6)" fg:x="426" fg:w="1"/><text x="34.4120%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="34.2422%" y="645" width="0.0802%" height="15" fill="rgb(207,72,18)" fg:x="427" fg:w="1"/><text x="34.4922%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.2422%" y="629" width="0.0802%" height="15" fill="rgb(236,1,18)" fg:x="427" fg:w="1"/><text x="34.4922%" y="639.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="34.2422%" y="693" width="0.1604%" height="15" fill="rgb(227,0,18)" fg:x="427" fg:w="2"/><text x="34.4922%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.2422%" y="677" width="0.1604%" height="15" fill="rgb(247,37,5)" fg:x="427" fg:w="2"/><text x="34.4922%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="34.2422%" y="661" width="0.1604%" height="15" fill="rgb(237,179,24)" fg:x="427" fg:w="2"/><text x="34.4922%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="34.3224%" y="645" width="0.0802%" height="15" fill="rgb(226,53,20)" fg:x="428" fg:w="1"/><text x="34.5724%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.3224%" y="629" width="0.0802%" height="15" fill="rgb(247,75,7)" fg:x="428" fg:w="1"/><text x="34.5724%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="34.2422%" y="709" width="0.2406%" height="15" fill="rgb(233,96,12)" fg:x="427" fg:w="3"/><text x="34.4922%" y="719.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="34.4026%" y="693" width="0.0802%" height="15" fill="rgb(224,125,0)" fg:x="429" fg:w="1"/><text x="34.6526%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.4026%" y="677" width="0.0802%" height="15" fill="rgb(224,92,25)" fg:x="429" fg:w="1"/><text x="34.6526%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="34.4026%" y="661" width="0.0802%" height="15" fill="rgb(224,42,24)" fg:x="429" fg:w="1"/><text x="34.6526%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.4828%" y="629" width="0.0802%" height="15" fill="rgb(234,132,49)" fg:x="430" fg:w="1"/><text x="34.7328%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.4828%" y="613" width="0.0802%" height="15" fill="rgb(248,100,35)" fg:x="430" fg:w="1"/><text x="34.7328%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.4828%" y="597" width="0.0802%" height="15" fill="rgb(239,94,40)" fg:x="430" fg:w="1"/><text x="34.7328%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="34.4828%" y="661" width="0.1604%" height="15" fill="rgb(235,139,28)" fg:x="430" fg:w="2"/><text x="34.7328%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="34.4828%" y="645" width="0.1604%" height="15" fill="rgb(217,144,7)" fg:x="430" fg:w="2"/><text x="34.7328%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.5630%" y="629" width="0.0802%" height="15" fill="rgb(227,55,4)" fg:x="431" fg:w="1"/><text x="34.8130%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.5630%" y="613" width="0.0802%" height="15" fill="rgb(252,82,54)" fg:x="431" fg:w="1"/><text x="34.8130%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.5630%" y="597" width="0.0802%" height="15" fill="rgb(245,172,4)" fg:x="431" fg:w="1"/><text x="34.8130%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.5630%" y="581" width="0.0802%" height="15" fill="rgb(207,26,27)" fg:x="431" fg:w="1"/><text x="34.8130%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.5630%" y="565" width="0.0802%" height="15" fill="rgb(252,98,18)" fg:x="431" fg:w="1"/><text x="34.8130%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.5630%" y="549" width="0.0802%" height="15" fill="rgb(244,8,26)" fg:x="431" fg:w="1"/><text x="34.8130%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.6431%" y="597" width="0.1604%" height="15" fill="rgb(237,173,45)" fg:x="432" fg:w="2"/><text x="34.8931%" y="607.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="34.7233%" y="581" width="0.0802%" height="15" fill="rgb(208,213,49)" fg:x="433" fg:w="1"/><text x="34.9733%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.7233%" y="565" width="0.0802%" height="15" fill="rgb(212,122,37)" fg:x="433" fg:w="1"/><text x="34.9733%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.6431%" y="629" width="0.2406%" height="15" fill="rgb(213,80,17)" fg:x="432" fg:w="3"/><text x="34.8931%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.6431%" y="613" width="0.2406%" height="15" fill="rgb(206,210,43)" fg:x="432" fg:w="3"/><text x="34.8931%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8035%" y="597" width="0.0802%" height="15" fill="rgb(229,214,3)" fg:x="434" fg:w="1"/><text x="35.0535%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8035%" y="581" width="0.0802%" height="15" fill="rgb(235,213,29)" fg:x="434" fg:w="1"/><text x="35.0535%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.8035%" y="565" width="0.0802%" height="15" fill="rgb(248,135,26)" fg:x="434" fg:w="1"/><text x="35.0535%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.8035%" y="549" width="0.0802%" height="15" fill="rgb(242,188,12)" fg:x="434" fg:w="1"/><text x="35.0535%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.8035%" y="533" width="0.0802%" height="15" fill="rgb(245,38,12)" fg:x="434" fg:w="1"/><text x="35.0535%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.8035%" y="517" width="0.0802%" height="15" fill="rgb(218,42,13)" fg:x="434" fg:w="1"/><text x="35.0535%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.8035%" y="501" width="0.0802%" height="15" fill="rgb(238,132,49)" fg:x="434" fg:w="1"/><text x="35.0535%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (233 samples, 18.68%)</title><rect x="16.3593%" y="757" width="18.6848%" height="15" fill="rgb(209,196,19)" fg:x="204" fg:w="233"/><text x="16.6093%" y="767.50">plugins_core::build::BuildSur..</text></g><g><title>plugins_core::build::Build::occupying (36 samples, 2.89%)</title><rect x="32.1572%" y="741" width="2.8869%" height="15" fill="rgb(244,131,22)" fg:x="401" fg:w="36"/><text x="32.4072%" y="751.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (18 samples, 1.44%)</title><rect x="33.6006%" y="725" width="1.4435%" height="15" fill="rgb(223,18,34)" fg:x="419" fg:w="18"/><text x="33.8506%" y="735.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (7 samples, 0.56%)</title><rect x="34.4828%" y="709" width="0.5613%" height="15" fill="rgb(252,124,54)" fg:x="430" fg:w="7"/><text x="34.7328%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="34.4828%" y="693" width="0.5613%" height="15" fill="rgb(229,106,42)" fg:x="430" fg:w="7"/><text x="34.7328%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="34.4828%" y="677" width="0.5613%" height="15" fill="rgb(221,129,1)" fg:x="430" fg:w="7"/><text x="34.7328%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="34.6431%" y="661" width="0.4010%" height="15" fill="rgb(229,74,15)" fg:x="432" fg:w="5"/><text x="34.8931%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="34.6431%" y="645" width="0.4010%" height="15" fill="rgb(210,206,50)" fg:x="432" fg:w="5"/><text x="34.8931%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="34.8837%" y="629" width="0.1604%" height="15" fill="rgb(251,114,31)" fg:x="435" fg:w="2"/><text x="35.1337%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="34.8837%" y="613" width="0.1604%" height="15" fill="rgb(215,225,28)" fg:x="435" fg:w="2"/><text x="35.1337%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.9639%" y="597" width="0.0802%" height="15" fill="rgb(237,109,14)" fg:x="436" fg:w="1"/><text x="35.2139%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.9639%" y="581" width="0.0802%" height="15" fill="rgb(230,13,37)" fg:x="436" fg:w="1"/><text x="35.2139%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.9639%" y="565" width="0.0802%" height="15" fill="rgb(231,40,28)" fg:x="436" fg:w="1"/><text x="35.2139%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="35.0441%" y="725" width="0.0802%" height="15" fill="rgb(231,202,18)" fg:x="437" fg:w="1"/><text x="35.2941%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="35.0441%" y="709" width="0.0802%" height="15" fill="rgb(225,33,18)" fg:x="437" fg:w="1"/><text x="35.2941%" y="719.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="35.0441%" y="693" width="0.0802%" height="15" fill="rgb(223,64,47)" fg:x="437" fg:w="1"/><text x="35.2941%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="35.0441%" y="677" width="0.0802%" height="15" fill="rgb(234,114,13)" fg:x="437" fg:w="1"/><text x="35.2941%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="35.0441%" y="661" width="0.0802%" height="15" fill="rgb(248,56,40)" fg:x="437" fg:w="1"/><text x="35.2941%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.0441%" y="645" width="0.0802%" height="15" fill="rgb(221,194,21)" fg:x="437" fg:w="1"/><text x="35.2941%" y="655.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="35.1243%" y="725" width="0.0802%" height="15" fill="rgb(242,108,46)" fg:x="438" fg:w="1"/><text x="35.3743%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="35.2045%" y="709" width="0.0802%" height="15" fill="rgb(220,106,10)" fg:x="439" fg:w="1"/><text x="35.4545%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.2045%" y="693" width="0.0802%" height="15" fill="rgb(211,88,4)" fg:x="439" fg:w="1"/><text x="35.4545%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (4 samples, 0.32%)</title><rect x="35.0441%" y="757" width="0.3208%" height="15" fill="rgb(214,95,34)" fg:x="437" fg:w="4"/><text x="35.2941%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="35.0441%" y="741" width="0.3208%" height="15" fill="rgb(250,160,33)" fg:x="437" fg:w="4"/><text x="35.2941%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="35.2045%" y="725" width="0.1604%" height="15" fill="rgb(225,29,10)" fg:x="439" fg:w="2"/><text x="35.4545%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2847%" y="709" width="0.0802%" height="15" fill="rgb(224,28,30)" fg:x="440" fg:w="1"/><text x="35.5347%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.5253%" y="501" width="0.0802%" height="15" fill="rgb(231,77,4)" fg:x="443" fg:w="1"/><text x="35.7753%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.5253%" y="485" width="0.0802%" height="15" fill="rgb(209,63,21)" fg:x="443" fg:w="1"/><text x="35.7753%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.5253%" y="469" width="0.0802%" height="15" fill="rgb(226,22,11)" fg:x="443" fg:w="1"/><text x="35.7753%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.5253%" y="453" width="0.0802%" height="15" fill="rgb(216,82,30)" fg:x="443" fg:w="1"/><text x="35.7753%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.5253%" y="437" width="0.0802%" height="15" fill="rgb(246,227,38)" fg:x="443" fg:w="1"/><text x="35.7753%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.5253%" y="421" width="0.0802%" height="15" fill="rgb(251,203,53)" fg:x="443" fg:w="1"/><text x="35.7753%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.5253%" y="405" width="0.0802%" height="15" fill="rgb(254,101,1)" fg:x="443" fg:w="1"/><text x="35.7753%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.5253%" y="389" width="0.0802%" height="15" fill="rgb(241,180,5)" fg:x="443" fg:w="1"/><text x="35.7753%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.5253%" y="373" width="0.0802%" height="15" fill="rgb(218,168,4)" fg:x="443" fg:w="1"/><text x="35.7753%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="35.5253%" y="357" width="0.0802%" height="15" fill="rgb(224,223,32)" fg:x="443" fg:w="1"/><text x="35.7753%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.5253%" y="341" width="0.0802%" height="15" fill="rgb(236,106,22)" fg:x="443" fg:w="1"/><text x="35.7753%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="35.5253%" y="325" width="0.0802%" height="15" fill="rgb(206,121,5)" fg:x="443" fg:w="1"/><text x="35.7753%" y="335.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="35.6055%" y="485" width="0.0802%" height="15" fill="rgb(233,87,28)" fg:x="444" fg:w="1"/><text x="35.8555%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="35.6055%" y="469" width="0.0802%" height="15" fill="rgb(236,137,17)" fg:x="444" fg:w="1"/><text x="35.8555%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.6055%" y="453" width="0.0802%" height="15" fill="rgb(209,183,38)" fg:x="444" fg:w="1"/><text x="35.8555%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.6055%" y="437" width="0.0802%" height="15" fill="rgb(206,162,44)" fg:x="444" fg:w="1"/><text x="35.8555%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.6055%" y="421" width="0.0802%" height="15" fill="rgb(237,70,39)" fg:x="444" fg:w="1"/><text x="35.8555%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.6055%" y="405" width="0.0802%" height="15" fill="rgb(212,176,5)" fg:x="444" fg:w="1"/><text x="35.8555%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.6055%" y="389" width="0.0802%" height="15" fill="rgb(232,95,16)" fg:x="444" fg:w="1"/><text x="35.8555%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.6055%" y="373" width="0.0802%" height="15" fill="rgb(219,115,35)" fg:x="444" fg:w="1"/><text x="35.8555%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.6055%" y="357" width="0.0802%" height="15" fill="rgb(251,67,27)" fg:x="444" fg:w="1"/><text x="35.8555%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.6055%" y="341" width="0.0802%" height="15" fill="rgb(222,95,40)" fg:x="444" fg:w="1"/><text x="35.8555%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.6055%" y="325" width="0.0802%" height="15" fill="rgb(250,35,16)" fg:x="444" fg:w="1"/><text x="35.8555%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.6055%" y="309" width="0.0802%" height="15" fill="rgb(224,86,44)" fg:x="444" fg:w="1"/><text x="35.8555%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.6055%" y="293" width="0.0802%" height="15" fill="rgb(237,53,53)" fg:x="444" fg:w="1"/><text x="35.8555%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="35.6055%" y="277" width="0.0802%" height="15" fill="rgb(208,171,33)" fg:x="444" fg:w="1"/><text x="35.8555%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.6055%" y="261" width="0.0802%" height="15" fill="rgb(222,64,27)" fg:x="444" fg:w="1"/><text x="35.8555%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="35.6055%" y="245" width="0.0802%" height="15" fill="rgb(221,121,35)" fg:x="444" fg:w="1"/><text x="35.8555%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="35.6055%" y="229" width="0.0802%" height="15" fill="rgb(228,137,42)" fg:x="444" fg:w="1"/><text x="35.8555%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="35.6055%" y="213" width="0.0802%" height="15" fill="rgb(227,54,21)" fg:x="444" fg:w="1"/><text x="35.8555%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.6055%" y="197" width="0.0802%" height="15" fill="rgb(240,168,33)" fg:x="444" fg:w="1"/><text x="35.8555%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="35.4451%" y="709" width="0.3208%" height="15" fill="rgb(243,159,6)" fg:x="442" fg:w="4"/><text x="35.6951%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="35.4451%" y="693" width="0.3208%" height="15" fill="rgb(205,211,41)" fg:x="442" fg:w="4"/><text x="35.6951%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="35.4451%" y="677" width="0.3208%" height="15" fill="rgb(253,30,1)" fg:x="442" fg:w="4"/><text x="35.6951%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="35.4451%" y="661" width="0.3208%" height="15" fill="rgb(226,80,18)" fg:x="442" fg:w="4"/><text x="35.6951%" y="671.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="35.4451%" y="645" width="0.3208%" height="15" fill="rgb(253,156,46)" fg:x="442" fg:w="4"/><text x="35.6951%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="35.4451%" y="629" width="0.3208%" height="15" fill="rgb(248,87,27)" fg:x="442" fg:w="4"/><text x="35.6951%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="35.4451%" y="613" width="0.3208%" height="15" fill="rgb(227,122,2)" fg:x="442" fg:w="4"/><text x="35.6951%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="35.5253%" y="597" width="0.2406%" height="15" fill="rgb(229,94,39)" fg:x="443" fg:w="3"/><text x="35.7753%" y="607.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="35.5253%" y="581" width="0.2406%" height="15" fill="rgb(225,173,31)" fg:x="443" fg:w="3"/><text x="35.7753%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="35.5253%" y="565" width="0.2406%" height="15" fill="rgb(239,176,30)" fg:x="443" fg:w="3"/><text x="35.7753%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="35.5253%" y="549" width="0.2406%" height="15" fill="rgb(212,104,21)" fg:x="443" fg:w="3"/><text x="35.7753%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="35.5253%" y="533" width="0.2406%" height="15" fill="rgb(240,209,40)" fg:x="443" fg:w="3"/><text x="35.7753%" y="543.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="35.5253%" y="517" width="0.2406%" height="15" fill="rgb(234,195,5)" fg:x="443" fg:w="3"/><text x="35.7753%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="35.6055%" y="501" width="0.1604%" height="15" fill="rgb(238,213,1)" fg:x="444" fg:w="2"/><text x="35.8555%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.6856%" y="485" width="0.0802%" height="15" fill="rgb(235,182,54)" fg:x="445" fg:w="1"/><text x="35.9356%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.6856%" y="469" width="0.0802%" height="15" fill="rgb(229,50,46)" fg:x="445" fg:w="1"/><text x="35.9356%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.6856%" y="453" width="0.0802%" height="15" fill="rgb(219,145,13)" fg:x="445" fg:w="1"/><text x="35.9356%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.6856%" y="437" width="0.0802%" height="15" fill="rgb(220,226,10)" fg:x="445" fg:w="1"/><text x="35.9356%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.6856%" y="421" width="0.0802%" height="15" fill="rgb(248,47,30)" fg:x="445" fg:w="1"/><text x="35.9356%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.6856%" y="405" width="0.0802%" height="15" fill="rgb(231,209,44)" fg:x="445" fg:w="1"/><text x="35.9356%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.6856%" y="389" width="0.0802%" height="15" fill="rgb(209,80,30)" fg:x="445" fg:w="1"/><text x="35.9356%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.6856%" y="373" width="0.0802%" height="15" fill="rgb(232,9,14)" fg:x="445" fg:w="1"/><text x="35.9356%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.6856%" y="357" width="0.0802%" height="15" fill="rgb(243,91,43)" fg:x="445" fg:w="1"/><text x="35.9356%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="35.6856%" y="341" width="0.0802%" height="15" fill="rgb(231,90,52)" fg:x="445" fg:w="1"/><text x="35.9356%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.6856%" y="325" width="0.0802%" height="15" fill="rgb(253,192,44)" fg:x="445" fg:w="1"/><text x="35.9356%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="35.6856%" y="309" width="0.0802%" height="15" fill="rgb(241,66,31)" fg:x="445" fg:w="1"/><text x="35.9356%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="35.6856%" y="293" width="0.0802%" height="15" fill="rgb(235,81,37)" fg:x="445" fg:w="1"/><text x="35.9356%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="35.6856%" y="277" width="0.0802%" height="15" fill="rgb(223,221,9)" fg:x="445" fg:w="1"/><text x="35.9356%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.6856%" y="261" width="0.0802%" height="15" fill="rgb(242,180,7)" fg:x="445" fg:w="1"/><text x="35.9356%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="35.7658%" y="709" width="0.0802%" height="15" fill="rgb(243,78,19)" fg:x="446" fg:w="1"/><text x="36.0158%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.7658%" y="693" width="0.0802%" height="15" fill="rgb(233,23,17)" fg:x="446" fg:w="1"/><text x="36.0158%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.7658%" y="677" width="0.0802%" height="15" fill="rgb(252,122,45)" fg:x="446" fg:w="1"/><text x="36.0158%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.7658%" y="661" width="0.0802%" height="15" fill="rgb(247,108,20)" fg:x="446" fg:w="1"/><text x="36.0158%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.7658%" y="645" width="0.0802%" height="15" fill="rgb(235,84,21)" fg:x="446" fg:w="1"/><text x="36.0158%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.7658%" y="629" width="0.0802%" height="15" fill="rgb(247,129,10)" fg:x="446" fg:w="1"/><text x="36.0158%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.8460%" y="709" width="0.0802%" height="15" fill="rgb(208,173,14)" fg:x="447" fg:w="1"/><text x="36.0960%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="35.9262%" y="693" width="0.0802%" height="15" fill="rgb(236,31,38)" fg:x="448" fg:w="1"/><text x="36.1762%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="35.9262%" y="677" width="0.0802%" height="15" fill="rgb(232,65,17)" fg:x="448" fg:w="1"/><text x="36.1762%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="35.9262%" y="709" width="0.2406%" height="15" fill="rgb(224,45,49)" fg:x="448" fg:w="3"/><text x="36.1762%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="36.0064%" y="693" width="0.1604%" height="15" fill="rgb(225,2,53)" fg:x="449" fg:w="2"/><text x="36.2564%" y="703.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="36.0064%" y="677" width="0.1604%" height="15" fill="rgb(248,210,53)" fg:x="449" fg:w="2"/><text x="36.2564%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.0866%" y="661" width="0.0802%" height="15" fill="rgb(211,1,30)" fg:x="450" fg:w="1"/><text x="36.3366%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.0866%" y="645" width="0.0802%" height="15" fill="rgb(224,96,15)" fg:x="450" fg:w="1"/><text x="36.3366%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.0866%" y="629" width="0.0802%" height="15" fill="rgb(252,45,11)" fg:x="450" fg:w="1"/><text x="36.3366%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.0866%" y="613" width="0.0802%" height="15" fill="rgb(220,125,38)" fg:x="450" fg:w="1"/><text x="36.3366%" y="623.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="36.1668%" y="661" width="0.0802%" height="15" fill="rgb(243,161,33)" fg:x="451" fg:w="1"/><text x="36.4168%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.1668%" y="645" width="0.0802%" height="15" fill="rgb(248,197,34)" fg:x="451" fg:w="1"/><text x="36.4168%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2470%" y="581" width="0.0802%" height="15" fill="rgb(228,165,23)" fg:x="452" fg:w="1"/><text x="36.4970%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2470%" y="565" width="0.0802%" height="15" fill="rgb(236,94,38)" fg:x="452" fg:w="1"/><text x="36.4970%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.2470%" y="549" width="0.0802%" height="15" fill="rgb(220,13,23)" fg:x="452" fg:w="1"/><text x="36.4970%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.2470%" y="533" width="0.0802%" height="15" fill="rgb(234,26,39)" fg:x="452" fg:w="1"/><text x="36.4970%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.2470%" y="517" width="0.0802%" height="15" fill="rgb(205,117,44)" fg:x="452" fg:w="1"/><text x="36.4970%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.2470%" y="501" width="0.0802%" height="15" fill="rgb(250,42,2)" fg:x="452" fg:w="1"/><text x="36.4970%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.2470%" y="485" width="0.0802%" height="15" fill="rgb(223,83,14)" fg:x="452" fg:w="1"/><text x="36.4970%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.2470%" y="629" width="0.1604%" height="15" fill="rgb(241,147,50)" fg:x="452" fg:w="2"/><text x="36.4970%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.2470%" y="613" width="0.1604%" height="15" fill="rgb(218,90,6)" fg:x="452" fg:w="2"/><text x="36.4970%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.2470%" y="597" width="0.1604%" height="15" fill="rgb(210,191,5)" fg:x="452" fg:w="2"/><text x="36.4970%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.3272%" y="581" width="0.0802%" height="15" fill="rgb(225,139,19)" fg:x="453" fg:w="1"/><text x="36.5772%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.4074%" y="597" width="0.0802%" height="15" fill="rgb(210,1,33)" fg:x="454" fg:w="1"/><text x="36.6574%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.4074%" y="629" width="0.1604%" height="15" fill="rgb(213,50,3)" fg:x="454" fg:w="2"/><text x="36.6574%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="36.4074%" y="613" width="0.1604%" height="15" fill="rgb(234,227,4)" fg:x="454" fg:w="2"/><text x="36.6574%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.4876%" y="597" width="0.0802%" height="15" fill="rgb(246,63,5)" fg:x="455" fg:w="1"/><text x="36.7376%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.4876%" y="581" width="0.0802%" height="15" fill="rgb(245,136,27)" fg:x="455" fg:w="1"/><text x="36.7376%" y="591.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="36.2470%" y="661" width="0.4010%" height="15" fill="rgb(247,199,27)" fg:x="452" fg:w="5"/><text x="36.4970%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="36.2470%" y="645" width="0.4010%" height="15" fill="rgb(252,158,49)" fg:x="452" fg:w="5"/><text x="36.4970%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="36.5678%" y="629" width="0.0802%" height="15" fill="rgb(254,73,1)" fg:x="456" fg:w="1"/><text x="36.8178%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.5678%" y="613" width="0.0802%" height="15" fill="rgb(248,93,19)" fg:x="456" fg:w="1"/><text x="36.8178%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="36.5678%" y="597" width="0.0802%" height="15" fill="rgb(206,67,5)" fg:x="456" fg:w="1"/><text x="36.8178%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="36.5678%" y="581" width="0.0802%" height="15" fill="rgb(209,210,4)" fg:x="456" fg:w="1"/><text x="36.8178%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5678%" y="565" width="0.0802%" height="15" fill="rgb(214,185,36)" fg:x="456" fg:w="1"/><text x="36.8178%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6480%" y="645" width="0.0802%" height="15" fill="rgb(233,191,26)" fg:x="457" fg:w="1"/><text x="36.8980%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.6480%" y="629" width="0.0802%" height="15" fill="rgb(248,94,17)" fg:x="457" fg:w="1"/><text x="36.8980%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.6480%" y="613" width="0.0802%" height="15" fill="rgb(250,64,4)" fg:x="457" fg:w="1"/><text x="36.8980%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.6480%" y="597" width="0.0802%" height="15" fill="rgb(218,41,53)" fg:x="457" fg:w="1"/><text x="36.8980%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.6480%" y="581" width="0.0802%" height="15" fill="rgb(251,176,28)" fg:x="457" fg:w="1"/><text x="36.8980%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.6480%" y="565" width="0.0802%" height="15" fill="rgb(247,22,9)" fg:x="457" fg:w="1"/><text x="36.8980%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.6480%" y="549" width="0.0802%" height="15" fill="rgb(218,201,14)" fg:x="457" fg:w="1"/><text x="36.8980%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.6480%" y="533" width="0.0802%" height="15" fill="rgb(218,94,10)" fg:x="457" fg:w="1"/><text x="36.8980%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.7281%" y="645" width="0.0802%" height="15" fill="rgb(222,183,52)" fg:x="458" fg:w="1"/><text x="36.9781%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.7281%" y="629" width="0.0802%" height="15" fill="rgb(242,140,25)" fg:x="458" fg:w="1"/><text x="36.9781%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.7281%" y="613" width="0.0802%" height="15" fill="rgb(235,197,38)" fg:x="458" fg:w="1"/><text x="36.9781%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.52%)</title><rect x="35.3649%" y="725" width="1.5237%" height="15" fill="rgb(237,136,15)" fg:x="441" fg:w="19"/><text x="35.6149%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.72%)</title><rect x="36.1668%" y="709" width="0.7217%" height="15" fill="rgb(223,44,49)" fg:x="451" fg:w="9"/><text x="36.4168%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (9 samples, 0.72%)</title><rect x="36.1668%" y="693" width="0.7217%" height="15" fill="rgb(227,71,15)" fg:x="451" fg:w="9"/><text x="36.4168%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (9 samples, 0.72%)</title><rect x="36.1668%" y="677" width="0.7217%" height="15" fill="rgb(225,153,20)" fg:x="451" fg:w="9"/><text x="36.4168%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="36.6480%" y="661" width="0.2406%" height="15" fill="rgb(210,190,26)" fg:x="457" fg:w="3"/><text x="36.8980%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8083%" y="645" width="0.0802%" height="15" fill="rgb(223,147,5)" fg:x="459" fg:w="1"/><text x="37.0583%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8083%" y="629" width="0.0802%" height="15" fill="rgb(207,14,23)" fg:x="459" fg:w="1"/><text x="37.0583%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.8083%" y="613" width="0.0802%" height="15" fill="rgb(211,195,53)" fg:x="459" fg:w="1"/><text x="37.0583%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="36.8885%" y="725" width="0.1604%" height="15" fill="rgb(237,75,46)" fg:x="460" fg:w="2"/><text x="37.1385%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="36.9687%" y="709" width="0.0802%" height="15" fill="rgb(254,55,14)" fg:x="461" fg:w="1"/><text x="37.2187%" y="719.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="36.9687%" y="693" width="0.0802%" height="15" fill="rgb(230,185,30)" fg:x="461" fg:w="1"/><text x="37.2187%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.9687%" y="677" width="0.0802%" height="15" fill="rgb(220,14,11)" fg:x="461" fg:w="1"/><text x="37.2187%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (22 samples, 1.76%)</title><rect x="35.3649%" y="757" width="1.7642%" height="15" fill="rgb(215,169,44)" fg:x="441" fg:w="22"/><text x="35.6149%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (22 samples, 1.76%)</title><rect x="35.3649%" y="741" width="1.7642%" height="15" fill="rgb(253,203,20)" fg:x="441" fg:w="22"/><text x="35.6149%" y="751.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="37.0489%" y="725" width="0.0802%" height="15" fill="rgb(229,225,17)" fg:x="462" fg:w="1"/><text x="37.2989%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="37.0489%" y="709" width="0.0802%" height="15" fill="rgb(236,76,26)" fg:x="462" fg:w="1"/><text x="37.2989%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="37.0489%" y="693" width="0.0802%" height="15" fill="rgb(234,15,30)" fg:x="462" fg:w="1"/><text x="37.2989%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="37.0489%" y="677" width="0.0802%" height="15" fill="rgb(211,113,48)" fg:x="462" fg:w="1"/><text x="37.2989%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0489%" y="661" width="0.0802%" height="15" fill="rgb(221,31,36)" fg:x="462" fg:w="1"/><text x="37.2989%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.4499%" y="517" width="0.0802%" height="15" fill="rgb(215,118,52)" fg:x="467" fg:w="1"/><text x="37.6999%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.4499%" y="501" width="0.0802%" height="15" fill="rgb(241,151,27)" fg:x="467" fg:w="1"/><text x="37.6999%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.4499%" y="485" width="0.0802%" height="15" fill="rgb(253,51,3)" fg:x="467" fg:w="1"/><text x="37.6999%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.4499%" y="469" width="0.0802%" height="15" fill="rgb(216,201,24)" fg:x="467" fg:w="1"/><text x="37.6999%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.4499%" y="453" width="0.0802%" height="15" fill="rgb(231,107,4)" fg:x="467" fg:w="1"/><text x="37.6999%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.4499%" y="437" width="0.0802%" height="15" fill="rgb(243,97,54)" fg:x="467" fg:w="1"/><text x="37.6999%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.4499%" y="421" width="0.0802%" height="15" fill="rgb(221,32,51)" fg:x="467" fg:w="1"/><text x="37.6999%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.4499%" y="405" width="0.0802%" height="15" fill="rgb(218,171,35)" fg:x="467" fg:w="1"/><text x="37.6999%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.4499%" y="389" width="0.0802%" height="15" fill="rgb(214,20,53)" fg:x="467" fg:w="1"/><text x="37.6999%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="37.4499%" y="373" width="0.0802%" height="15" fill="rgb(239,9,52)" fg:x="467" fg:w="1"/><text x="37.6999%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.4499%" y="357" width="0.0802%" height="15" fill="rgb(215,114,45)" fg:x="467" fg:w="1"/><text x="37.6999%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4499%" y="341" width="0.0802%" height="15" fill="rgb(208,118,9)" fg:x="467" fg:w="1"/><text x="37.6999%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="37.5301%" y="501" width="0.0802%" height="15" fill="rgb(235,7,39)" fg:x="468" fg:w="1"/><text x="37.7801%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="37.5301%" y="485" width="0.0802%" height="15" fill="rgb(243,225,15)" fg:x="468" fg:w="1"/><text x="37.7801%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.5301%" y="469" width="0.0802%" height="15" fill="rgb(225,216,18)" fg:x="468" fg:w="1"/><text x="37.7801%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.5301%" y="453" width="0.0802%" height="15" fill="rgb(233,36,38)" fg:x="468" fg:w="1"/><text x="37.7801%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.5301%" y="437" width="0.0802%" height="15" fill="rgb(239,88,23)" fg:x="468" fg:w="1"/><text x="37.7801%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.5301%" y="421" width="0.0802%" height="15" fill="rgb(219,181,35)" fg:x="468" fg:w="1"/><text x="37.7801%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.5301%" y="405" width="0.0802%" height="15" fill="rgb(215,18,46)" fg:x="468" fg:w="1"/><text x="37.7801%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.5301%" y="389" width="0.0802%" height="15" fill="rgb(241,38,11)" fg:x="468" fg:w="1"/><text x="37.7801%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.5301%" y="373" width="0.0802%" height="15" fill="rgb(248,169,45)" fg:x="468" fg:w="1"/><text x="37.7801%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.5301%" y="357" width="0.0802%" height="15" fill="rgb(239,50,49)" fg:x="468" fg:w="1"/><text x="37.7801%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.5301%" y="341" width="0.0802%" height="15" fill="rgb(231,96,31)" fg:x="468" fg:w="1"/><text x="37.7801%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.5301%" y="325" width="0.0802%" height="15" fill="rgb(224,193,37)" fg:x="468" fg:w="1"/><text x="37.7801%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.5301%" y="309" width="0.0802%" height="15" fill="rgb(227,153,50)" fg:x="468" fg:w="1"/><text x="37.7801%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="37.5301%" y="293" width="0.0802%" height="15" fill="rgb(249,228,3)" fg:x="468" fg:w="1"/><text x="37.7801%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.5301%" y="277" width="0.0802%" height="15" fill="rgb(219,164,43)" fg:x="468" fg:w="1"/><text x="37.7801%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="37.5301%" y="261" width="0.0802%" height="15" fill="rgb(216,45,41)" fg:x="468" fg:w="1"/><text x="37.7801%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="37.5301%" y="245" width="0.0802%" height="15" fill="rgb(210,226,51)" fg:x="468" fg:w="1"/><text x="37.7801%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="37.5301%" y="229" width="0.0802%" height="15" fill="rgb(209,117,49)" fg:x="468" fg:w="1"/><text x="37.7801%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="37.5301%" y="213" width="0.0802%" height="15" fill="rgb(206,196,24)" fg:x="468" fg:w="1"/><text x="37.7801%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="37.4499%" y="725" width="0.2406%" height="15" fill="rgb(253,218,3)" fg:x="467" fg:w="3"/><text x="37.6999%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="37.4499%" y="709" width="0.2406%" height="15" fill="rgb(252,166,2)" fg:x="467" fg:w="3"/><text x="37.6999%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="37.4499%" y="693" width="0.2406%" height="15" fill="rgb(236,218,26)" fg:x="467" fg:w="3"/><text x="37.6999%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="37.4499%" y="677" width="0.2406%" height="15" fill="rgb(254,84,19)" fg:x="467" fg:w="3"/><text x="37.6999%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="37.4499%" y="661" width="0.2406%" height="15" fill="rgb(219,137,29)" fg:x="467" fg:w="3"/><text x="37.6999%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="37.4499%" y="645" width="0.2406%" height="15" fill="rgb(227,47,52)" fg:x="467" fg:w="3"/><text x="37.6999%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="37.4499%" y="629" width="0.2406%" height="15" fill="rgb(229,167,24)" fg:x="467" fg:w="3"/><text x="37.6999%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="37.4499%" y="613" width="0.2406%" height="15" fill="rgb(233,164,1)" fg:x="467" fg:w="3"/><text x="37.6999%" y="623.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="37.4499%" y="597" width="0.2406%" height="15" fill="rgb(218,88,48)" fg:x="467" fg:w="3"/><text x="37.6999%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="37.4499%" y="581" width="0.2406%" height="15" fill="rgb(226,214,24)" fg:x="467" fg:w="3"/><text x="37.6999%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="37.4499%" y="565" width="0.2406%" height="15" fill="rgb(233,29,12)" fg:x="467" fg:w="3"/><text x="37.6999%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="37.4499%" y="549" width="0.2406%" height="15" fill="rgb(219,120,34)" fg:x="467" fg:w="3"/><text x="37.6999%" y="559.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="37.4499%" y="533" width="0.2406%" height="15" fill="rgb(226,78,44)" fg:x="467" fg:w="3"/><text x="37.6999%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="37.5301%" y="517" width="0.1604%" height="15" fill="rgb(240,15,48)" fg:x="468" fg:w="2"/><text x="37.7801%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.6103%" y="501" width="0.0802%" height="15" fill="rgb(253,176,7)" fg:x="469" fg:w="1"/><text x="37.8603%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.6103%" y="485" width="0.0802%" height="15" fill="rgb(206,166,28)" fg:x="469" fg:w="1"/><text x="37.8603%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.6103%" y="469" width="0.0802%" height="15" fill="rgb(241,53,51)" fg:x="469" fg:w="1"/><text x="37.8603%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.6103%" y="453" width="0.0802%" height="15" fill="rgb(249,112,30)" fg:x="469" fg:w="1"/><text x="37.8603%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.6103%" y="437" width="0.0802%" height="15" fill="rgb(217,85,30)" fg:x="469" fg:w="1"/><text x="37.8603%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.6103%" y="421" width="0.0802%" height="15" fill="rgb(233,49,7)" fg:x="469" fg:w="1"/><text x="37.8603%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.6103%" y="405" width="0.0802%" height="15" fill="rgb(234,109,9)" fg:x="469" fg:w="1"/><text x="37.8603%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.6103%" y="389" width="0.0802%" height="15" fill="rgb(253,95,22)" fg:x="469" fg:w="1"/><text x="37.8603%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.6103%" y="373" width="0.0802%" height="15" fill="rgb(233,176,25)" fg:x="469" fg:w="1"/><text x="37.8603%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="37.6103%" y="357" width="0.0802%" height="15" fill="rgb(236,33,39)" fg:x="469" fg:w="1"/><text x="37.8603%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.6103%" y="341" width="0.0802%" height="15" fill="rgb(223,226,42)" fg:x="469" fg:w="1"/><text x="37.8603%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="37.6103%" y="325" width="0.0802%" height="15" fill="rgb(216,99,33)" fg:x="469" fg:w="1"/><text x="37.8603%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="37.6103%" y="309" width="0.0802%" height="15" fill="rgb(235,84,23)" fg:x="469" fg:w="1"/><text x="37.8603%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="37.6103%" y="293" width="0.0802%" height="15" fill="rgb(232,2,27)" fg:x="469" fg:w="1"/><text x="37.8603%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="37.6103%" y="277" width="0.0802%" height="15" fill="rgb(241,23,22)" fg:x="469" fg:w="1"/><text x="37.8603%" y="287.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="37.6905%" y="677" width="0.0802%" height="15" fill="rgb(211,73,27)" fg:x="470" fg:w="1"/><text x="37.9405%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="37.6905%" y="661" width="0.0802%" height="15" fill="rgb(235,109,49)" fg:x="470" fg:w="1"/><text x="37.9405%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.6905%" y="645" width="0.0802%" height="15" fill="rgb(230,99,29)" fg:x="470" fg:w="1"/><text x="37.9405%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.6905%" y="629" width="0.0802%" height="15" fill="rgb(245,199,7)" fg:x="470" fg:w="1"/><text x="37.9405%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.6905%" y="613" width="0.0802%" height="15" fill="rgb(217,179,10)" fg:x="470" fg:w="1"/><text x="37.9405%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.6905%" y="597" width="0.0802%" height="15" fill="rgb(254,99,47)" fg:x="470" fg:w="1"/><text x="37.9405%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.6905%" y="581" width="0.0802%" height="15" fill="rgb(251,121,7)" fg:x="470" fg:w="1"/><text x="37.9405%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.6905%" y="565" width="0.0802%" height="15" fill="rgb(250,177,26)" fg:x="470" fg:w="1"/><text x="37.9405%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.8508%" y="629" width="0.0802%" height="15" fill="rgb(232,88,15)" fg:x="472" fg:w="1"/><text x="38.1008%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="37.6905%" y="709" width="0.3208%" height="15" fill="rgb(251,54,54)" fg:x="470" fg:w="4"/><text x="37.9405%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="37.6905%" y="693" width="0.3208%" height="15" fill="rgb(208,177,15)" fg:x="470" fg:w="4"/><text x="37.9405%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="37.7706%" y="677" width="0.2406%" height="15" fill="rgb(205,97,32)" fg:x="471" fg:w="3"/><text x="38.0206%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.8508%" y="661" width="0.1604%" height="15" fill="rgb(217,192,13)" fg:x="472" fg:w="2"/><text x="38.1008%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.8508%" y="645" width="0.1604%" height="15" fill="rgb(215,163,41)" fg:x="472" fg:w="2"/><text x="38.1008%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.9310%" y="629" width="0.0802%" height="15" fill="rgb(246,83,29)" fg:x="473" fg:w="1"/><text x="38.1810%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.9310%" y="613" width="0.0802%" height="15" fill="rgb(219,2,45)" fg:x="473" fg:w="1"/><text x="38.1810%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.9310%" y="597" width="0.0802%" height="15" fill="rgb(242,215,33)" fg:x="473" fg:w="1"/><text x="38.1810%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="37.2093%" y="741" width="0.9623%" height="15" fill="rgb(217,1,6)" fg:x="464" fg:w="12"/><text x="37.4593%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="37.6905%" y="725" width="0.4812%" height="15" fill="rgb(207,85,52)" fg:x="470" fg:w="6"/><text x="37.9405%" y="735.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="38.0112%" y="709" width="0.1604%" height="15" fill="rgb(231,171,19)" fg:x="474" fg:w="2"/><text x="38.2612%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.0112%" y="693" width="0.1604%" height="15" fill="rgb(207,128,4)" fg:x="474" fg:w="2"/><text x="38.2612%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.0112%" y="677" width="0.1604%" height="15" fill="rgb(219,208,4)" fg:x="474" fg:w="2"/><text x="38.2612%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="38.0112%" y="661" width="0.1604%" height="15" fill="rgb(235,161,42)" fg:x="474" fg:w="2"/><text x="38.2612%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.0914%" y="645" width="0.0802%" height="15" fill="rgb(247,218,18)" fg:x="475" fg:w="1"/><text x="38.3414%" y="655.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="38.1716%" y="709" width="0.1604%" height="15" fill="rgb(232,114,51)" fg:x="476" fg:w="2"/><text x="38.4216%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.1716%" y="693" width="0.1604%" height="15" fill="rgb(222,95,3)" fg:x="476" fg:w="2"/><text x="38.4216%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.1716%" y="677" width="0.1604%" height="15" fill="rgb(240,65,29)" fg:x="476" fg:w="2"/><text x="38.4216%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="38.1716%" y="661" width="0.1604%" height="15" fill="rgb(249,209,20)" fg:x="476" fg:w="2"/><text x="38.4216%" y="671.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="38.2518%" y="645" width="0.0802%" height="15" fill="rgb(241,48,37)" fg:x="477" fg:w="1"/><text x="38.5018%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="38.2518%" y="629" width="0.0802%" height="15" fill="rgb(230,140,42)" fg:x="477" fg:w="1"/><text x="38.5018%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.4122%" y="581" width="0.0802%" height="15" fill="rgb(230,176,45)" fg:x="479" fg:w="1"/><text x="38.6622%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.4122%" y="565" width="0.0802%" height="15" fill="rgb(245,112,21)" fg:x="479" fg:w="1"/><text x="38.6622%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.4122%" y="549" width="0.0802%" height="15" fill="rgb(207,183,35)" fg:x="479" fg:w="1"/><text x="38.6622%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.4122%" y="533" width="0.0802%" height="15" fill="rgb(227,44,33)" fg:x="479" fg:w="1"/><text x="38.6622%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.4122%" y="517" width="0.0802%" height="15" fill="rgb(246,120,21)" fg:x="479" fg:w="1"/><text x="38.6622%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.4122%" y="501" width="0.0802%" height="15" fill="rgb(235,57,52)" fg:x="479" fg:w="1"/><text x="38.6622%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.4122%" y="485" width="0.0802%" height="15" fill="rgb(238,84,10)" fg:x="479" fg:w="1"/><text x="38.6622%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.4122%" y="677" width="0.1604%" height="15" fill="rgb(251,200,32)" fg:x="479" fg:w="2"/><text x="38.6622%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.4122%" y="661" width="0.1604%" height="15" fill="rgb(247,159,13)" fg:x="479" fg:w="2"/><text x="38.6622%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.4122%" y="645" width="0.1604%" height="15" fill="rgb(238,64,4)" fg:x="479" fg:w="2"/><text x="38.6622%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="38.4122%" y="629" width="0.1604%" height="15" fill="rgb(221,131,51)" fg:x="479" fg:w="2"/><text x="38.6622%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="38.4122%" y="613" width="0.1604%" height="15" fill="rgb(242,5,29)" fg:x="479" fg:w="2"/><text x="38.6622%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="38.4122%" y="597" width="0.1604%" height="15" fill="rgb(214,130,32)" fg:x="479" fg:w="2"/><text x="38.6622%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="38.4924%" y="581" width="0.0802%" height="15" fill="rgb(244,210,16)" fg:x="480" fg:w="1"/><text x="38.7424%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="38.4924%" y="565" width="0.0802%" height="15" fill="rgb(234,48,26)" fg:x="480" fg:w="1"/><text x="38.7424%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.5726%" y="677" width="0.0802%" height="15" fill="rgb(231,82,38)" fg:x="481" fg:w="1"/><text x="38.8226%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="38.5726%" y="661" width="0.0802%" height="15" fill="rgb(254,128,41)" fg:x="481" fg:w="1"/><text x="38.8226%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.6528%" y="677" width="0.0802%" height="15" fill="rgb(212,73,49)" fg:x="482" fg:w="1"/><text x="38.9028%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.6528%" y="661" width="0.0802%" height="15" fill="rgb(205,62,54)" fg:x="482" fg:w="1"/><text x="38.9028%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.6528%" y="645" width="0.0802%" height="15" fill="rgb(228,0,8)" fg:x="482" fg:w="1"/><text x="38.9028%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.6528%" y="629" width="0.0802%" height="15" fill="rgb(251,28,17)" fg:x="482" fg:w="1"/><text x="38.9028%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (8 samples, 0.64%)</title><rect x="38.1716%" y="741" width="0.6415%" height="15" fill="rgb(238,105,27)" fg:x="476" fg:w="8"/><text x="38.4216%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (8 samples, 0.64%)</title><rect x="38.1716%" y="725" width="0.6415%" height="15" fill="rgb(237,216,33)" fg:x="476" fg:w="8"/><text x="38.4216%" y="735.50"></text></g><g><title>kernel::model::props::save_props (6 samples, 0.48%)</title><rect x="38.3320%" y="709" width="0.4812%" height="15" fill="rgb(229,228,25)" fg:x="478" fg:w="6"/><text x="38.5820%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="38.3320%" y="693" width="0.4812%" height="15" fill="rgb(233,75,23)" fg:x="478" fg:w="6"/><text x="38.5820%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="38.7330%" y="677" width="0.0802%" height="15" fill="rgb(231,207,16)" fg:x="483" fg:w="1"/><text x="38.9830%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.7330%" y="661" width="0.0802%" height="15" fill="rgb(231,191,45)" fg:x="483" fg:w="1"/><text x="38.9830%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="38.7330%" y="645" width="0.0802%" height="15" fill="rgb(224,133,17)" fg:x="483" fg:w="1"/><text x="38.9830%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="38.7330%" y="629" width="0.0802%" height="15" fill="rgb(209,178,27)" fg:x="483" fg:w="1"/><text x="38.9830%" y="639.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="38.7330%" y="613" width="0.0802%" height="15" fill="rgb(218,37,11)" fg:x="483" fg:w="1"/><text x="38.9830%" y="623.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.7330%" y="597" width="0.0802%" height="15" fill="rgb(251,226,25)" fg:x="483" fg:w="1"/><text x="38.9830%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="38.8132%" y="709" width="0.0802%" height="15" fill="rgb(209,222,27)" fg:x="484" fg:w="1"/><text x="39.0632%" y="719.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="38.8132%" y="693" width="0.0802%" height="15" fill="rgb(238,22,21)" fg:x="484" fg:w="1"/><text x="39.0632%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8933%" y="709" width="0.0802%" height="15" fill="rgb(233,161,25)" fg:x="485" fg:w="1"/><text x="39.1433%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="38.8132%" y="725" width="0.2406%" height="15" fill="rgb(226,122,53)" fg:x="484" fg:w="3"/><text x="39.0632%" y="735.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="38.9735%" y="709" width="0.0802%" height="15" fill="rgb(220,123,17)" fg:x="486" fg:w="1"/><text x="39.2235%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="38.9735%" y="693" width="0.0802%" height="15" fill="rgb(230,224,35)" fg:x="486" fg:w="1"/><text x="39.2235%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.9735%" y="677" width="0.0802%" height="15" fill="rgb(246,83,8)" fg:x="486" fg:w="1"/><text x="39.2235%" y="687.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (434 samples, 34.80%)</title><rect x="4.3304%" y="773" width="34.8035%" height="15" fill="rgb(230,214,17)" fg:x="54" fg:w="434"/><text x="4.5804%" y="783.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prep..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (25 samples, 2.00%)</title><rect x="37.1291%" y="757" width="2.0048%" height="15" fill="rgb(222,97,18)" fg:x="463" fg:w="25"/><text x="37.3791%" y="767.50">p..</text></g><g><title>plugins_core::build::Build::new_world (4 samples, 0.32%)</title><rect x="38.8132%" y="741" width="0.3208%" height="15" fill="rgb(206,79,1)" fg:x="484" fg:w="4"/><text x="39.0632%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="39.0537%" y="725" width="0.0802%" height="15" fill="rgb(214,121,34)" fg:x="487" fg:w="1"/><text x="39.3037%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="39.0537%" y="709" width="0.0802%" height="15" fill="rgb(249,199,46)" fg:x="487" fg:w="1"/><text x="39.3037%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.0537%" y="693" width="0.0802%" height="15" fill="rgb(214,222,46)" fg:x="487" fg:w="1"/><text x="39.3037%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.1339%" y="757" width="0.0802%" height="15" fill="rgb(248,168,30)" fg:x="488" fg:w="1"/><text x="39.3839%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="39.1339%" y="773" width="0.1604%" height="15" fill="rgb(226,14,28)" fg:x="488" fg:w="2"/><text x="39.3839%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="39.2141%" y="757" width="0.0802%" height="15" fill="rgb(253,123,1)" fg:x="489" fg:w="1"/><text x="39.4641%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorageFactory&gt; (1 samples, 0.08%)</title><rect x="39.2141%" y="741" width="0.0802%" height="15" fill="rgb(225,24,42)" fg:x="489" fg:w="1"/><text x="39.4641%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (2 samples, 0.16%)</title><rect x="39.2943%" y="773" width="0.1604%" height="15" fill="rgb(216,161,37)" fg:x="490" fg:w="2"/><text x="39.5443%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.3745%" y="757" width="0.0802%" height="15" fill="rgb(251,164,26)" fg:x="491" fg:w="1"/><text x="39.6245%" y="767.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="39.4547%" y="741" width="0.2406%" height="15" fill="rgb(219,177,3)" fg:x="492" fg:w="3"/><text x="39.7047%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="39.4547%" y="757" width="0.3208%" height="15" fill="rgb(222,65,0)" fg:x="492" fg:w="4"/><text x="39.7047%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.6953%" y="741" width="0.0802%" height="15" fill="rgb(223,69,54)" fg:x="495" fg:w="1"/><text x="39.9453%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.6953%" y="725" width="0.0802%" height="15" fill="rgb(235,30,27)" fg:x="495" fg:w="1"/><text x="39.9453%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="39.7755%" y="757" width="0.1604%" height="15" fill="rgb(220,183,50)" fg:x="496" fg:w="2"/><text x="40.0255%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="39.7755%" y="741" width="0.1604%" height="15" fill="rgb(248,198,15)" fg:x="496" fg:w="2"/><text x="40.0255%" y="751.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="39.7755%" y="725" width="0.1604%" height="15" fill="rgb(222,211,4)" fg:x="496" fg:w="2"/><text x="40.0255%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="39.7755%" y="709" width="0.1604%" height="15" fill="rgb(214,102,34)" fg:x="496" fg:w="2"/><text x="40.0255%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="39.7755%" y="693" width="0.1604%" height="15" fill="rgb(245,92,5)" fg:x="496" fg:w="2"/><text x="40.0255%" y="703.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="39.7755%" y="677" width="0.1604%" height="15" fill="rgb(252,72,51)" fg:x="496" fg:w="2"/><text x="40.0255%" y="687.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="39.7755%" y="661" width="0.1604%" height="15" fill="rgb(252,208,19)" fg:x="496" fg:w="2"/><text x="40.0255%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="39.7755%" y="645" width="0.1604%" height="15" fill="rgb(211,69,7)" fg:x="496" fg:w="2"/><text x="40.0255%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="39.7755%" y="629" width="0.1604%" height="15" fill="rgb(211,27,16)" fg:x="496" fg:w="2"/><text x="40.0255%" y="639.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="39.8557%" y="613" width="0.0802%" height="15" fill="rgb(219,216,14)" fg:x="497" fg:w="1"/><text x="40.1057%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.8557%" y="597" width="0.0802%" height="15" fill="rgb(219,71,8)" fg:x="497" fg:w="1"/><text x="40.1057%" y="607.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="39.8557%" y="581" width="0.0802%" height="15" fill="rgb(223,170,53)" fg:x="497" fg:w="1"/><text x="40.1057%" y="591.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="39.8557%" y="565" width="0.0802%" height="15" fill="rgb(246,21,26)" fg:x="497" fg:w="1"/><text x="40.1057%" y="575.50"></text></g><g><title>core::str::count::count_chars (1 samples, 0.08%)</title><rect x="39.8557%" y="549" width="0.0802%" height="15" fill="rgb(248,20,46)" fg:x="497" fg:w="1"/><text x="40.1057%" y="559.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.08%)</title><rect x="39.8557%" y="533" width="0.0802%" height="15" fill="rgb(252,94,11)" fg:x="497" fg:w="1"/><text x="40.1057%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="39.8557%" y="517" width="0.0802%" height="15" fill="rgb(236,163,8)" fg:x="497" fg:w="1"/><text x="40.1057%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="39.8557%" y="501" width="0.0802%" height="15" fill="rgb(217,221,45)" fg:x="497" fg:w="1"/><text x="40.1057%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="39.8557%" y="485" width="0.0802%" height="15" fill="rgb(238,38,17)" fg:x="497" fg:w="1"/><text x="40.1057%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="39.8557%" y="469" width="0.0802%" height="15" fill="rgb(242,210,23)" fg:x="497" fg:w="1"/><text x="40.1057%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="39.8557%" y="453" width="0.0802%" height="15" fill="rgb(250,86,53)" fg:x="497" fg:w="1"/><text x="40.1057%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="39.8557%" y="437" width="0.0802%" height="15" fill="rgb(223,168,25)" fg:x="497" fg:w="1"/><text x="40.1057%" y="447.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="39.9358%" y="757" width="0.0802%" height="15" fill="rgb(251,189,4)" fg:x="498" fg:w="1"/><text x="40.1858%" y="767.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="39.9358%" y="741" width="0.0802%" height="15" fill="rgb(245,19,28)" fg:x="498" fg:w="1"/><text x="40.1858%" y="751.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="39.9358%" y="725" width="0.0802%" height="15" fill="rgb(207,10,34)" fg:x="498" fg:w="1"/><text x="40.1858%" y="735.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="39.9358%" y="709" width="0.0802%" height="15" fill="rgb(235,153,31)" fg:x="498" fg:w="1"/><text x="40.1858%" y="719.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="39.9358%" y="693" width="0.0802%" height="15" fill="rgb(228,72,37)" fg:x="498" fg:w="1"/><text x="40.1858%" y="703.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="39.9358%" y="677" width="0.0802%" height="15" fill="rgb(215,15,16)" fg:x="498" fg:w="1"/><text x="40.1858%" y="687.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="39.9358%" y="661" width="0.0802%" height="15" fill="rgb(250,119,29)" fg:x="498" fg:w="1"/><text x="40.1858%" y="671.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="39.9358%" y="645" width="0.0802%" height="15" fill="rgb(214,59,1)" fg:x="498" fg:w="1"/><text x="40.1858%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="40.0160%" y="725" width="0.1604%" height="15" fill="rgb(223,109,25)" fg:x="499" fg:w="2"/><text x="40.2660%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.2566%" y="693" width="0.0802%" height="15" fill="rgb(230,198,22)" fg:x="502" fg:w="1"/><text x="40.5066%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="40.1764%" y="709" width="0.2406%" height="15" fill="rgb(245,184,46)" fg:x="501" fg:w="3"/><text x="40.4264%" y="719.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="40.3368%" y="693" width="0.0802%" height="15" fill="rgb(253,73,16)" fg:x="503" fg:w="1"/><text x="40.5868%" y="703.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="40.3368%" y="677" width="0.0802%" height="15" fill="rgb(206,94,45)" fg:x="503" fg:w="1"/><text x="40.5868%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3368%" y="661" width="0.0802%" height="15" fill="rgb(236,83,27)" fg:x="503" fg:w="1"/><text x="40.5868%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="40.1764%" y="725" width="0.3208%" height="15" fill="rgb(220,196,8)" fg:x="501" fg:w="4"/><text x="40.4264%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.4170%" y="709" width="0.0802%" height="15" fill="rgb(254,185,14)" fg:x="504" fg:w="1"/><text x="40.6670%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="40.5774%" y="709" width="0.0802%" height="15" fill="rgb(226,50,22)" fg:x="506" fg:w="1"/><text x="40.8274%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.5774%" y="693" width="0.0802%" height="15" fill="rgb(253,147,0)" fg:x="506" fg:w="1"/><text x="40.8274%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="40.5774%" y="677" width="0.0802%" height="15" fill="rgb(252,46,33)" fg:x="506" fg:w="1"/><text x="40.8274%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="40.8180%" y="661" width="0.2406%" height="15" fill="rgb(242,22,54)" fg:x="509" fg:w="3"/><text x="41.0680%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="40.8982%" y="645" width="0.1604%" height="15" fill="rgb(223,178,32)" fg:x="510" fg:w="2"/><text x="41.1482%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="40.8180%" y="677" width="0.4010%" height="15" fill="rgb(214,106,53)" fg:x="509" fg:w="5"/><text x="41.0680%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.0585%" y="661" width="0.1604%" height="15" fill="rgb(232,65,50)" fg:x="512" fg:w="2"/><text x="41.3085%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.1387%" y="645" width="0.0802%" height="15" fill="rgb(231,110,28)" fg:x="513" fg:w="1"/><text x="41.3887%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.1387%" y="629" width="0.0802%" height="15" fill="rgb(216,71,40)" fg:x="513" fg:w="1"/><text x="41.3887%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="41.2189%" y="661" width="0.3208%" height="15" fill="rgb(229,89,53)" fg:x="514" fg:w="4"/><text x="41.4689%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="41.2991%" y="645" width="0.2406%" height="15" fill="rgb(210,124,14)" fg:x="515" fg:w="3"/><text x="41.5491%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="41.3793%" y="629" width="0.1604%" height="15" fill="rgb(236,213,6)" fg:x="516" fg:w="2"/><text x="41.6293%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.4595%" y="613" width="0.0802%" height="15" fill="rgb(228,41,5)" fg:x="517" fg:w="1"/><text x="41.7095%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="41.5397%" y="613" width="0.1604%" height="15" fill="rgb(221,167,25)" fg:x="518" fg:w="2"/><text x="41.7897%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.5397%" y="597" width="0.1604%" height="15" fill="rgb(228,144,37)" fg:x="518" fg:w="2"/><text x="41.7897%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="41.5397%" y="581" width="0.1604%" height="15" fill="rgb(227,189,38)" fg:x="518" fg:w="2"/><text x="41.7897%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.6199%" y="565" width="0.0802%" height="15" fill="rgb(218,8,2)" fg:x="519" fg:w="1"/><text x="41.8699%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="41.7001%" y="613" width="0.1604%" height="15" fill="rgb(209,61,28)" fg:x="520" fg:w="2"/><text x="41.9501%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="41.7001%" y="597" width="0.1604%" height="15" fill="rgb(233,140,39)" fg:x="520" fg:w="2"/><text x="41.9501%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.7001%" y="581" width="0.1604%" height="15" fill="rgb(251,66,48)" fg:x="520" fg:w="2"/><text x="41.9501%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="41.5397%" y="645" width="0.4010%" height="15" fill="rgb(210,44,45)" fg:x="518" fg:w="5"/><text x="41.7897%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="41.5397%" y="629" width="0.4010%" height="15" fill="rgb(214,136,46)" fg:x="518" fg:w="5"/><text x="41.7897%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.8605%" y="613" width="0.0802%" height="15" fill="rgb(207,130,50)" fg:x="522" fg:w="1"/><text x="42.1105%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.8605%" y="597" width="0.0802%" height="15" fill="rgb(228,102,49)" fg:x="522" fg:w="1"/><text x="42.1105%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.8605%" y="581" width="0.0802%" height="15" fill="rgb(253,55,1)" fg:x="522" fg:w="1"/><text x="42.1105%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="41.9407%" y="645" width="0.2406%" height="15" fill="rgb(238,222,9)" fg:x="523" fg:w="3"/><text x="42.1907%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="42.1010%" y="629" width="0.0802%" height="15" fill="rgb(246,99,6)" fg:x="525" fg:w="1"/><text x="42.3510%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="42.1010%" y="613" width="0.0802%" height="15" fill="rgb(219,110,26)" fg:x="525" fg:w="1"/><text x="42.3510%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.1010%" y="597" width="0.0802%" height="15" fill="rgb(239,160,33)" fg:x="525" fg:w="1"/><text x="42.3510%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="42.1010%" y="581" width="0.0802%" height="15" fill="rgb(220,202,23)" fg:x="525" fg:w="1"/><text x="42.3510%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.1010%" y="565" width="0.0802%" height="15" fill="rgb(208,80,26)" fg:x="525" fg:w="1"/><text x="42.3510%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="42.1010%" y="549" width="0.0802%" height="15" fill="rgb(243,85,7)" fg:x="525" fg:w="1"/><text x="42.3510%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="42.2614%" y="629" width="0.2406%" height="15" fill="rgb(228,77,47)" fg:x="527" fg:w="3"/><text x="42.5114%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="42.2614%" y="613" width="0.2406%" height="15" fill="rgb(212,226,8)" fg:x="527" fg:w="3"/><text x="42.5114%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="42.3416%" y="597" width="0.1604%" height="15" fill="rgb(241,120,54)" fg:x="528" fg:w="2"/><text x="42.5916%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="42.3416%" y="581" width="0.1604%" height="15" fill="rgb(226,80,16)" fg:x="528" fg:w="2"/><text x="42.5916%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="42.5822%" y="613" width="0.4812%" height="15" fill="rgb(240,76,13)" fg:x="531" fg:w="6"/><text x="42.8322%" y="623.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="42.6624%" y="597" width="0.4010%" height="15" fill="rgb(252,74,8)" fg:x="532" fg:w="5"/><text x="42.9124%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="42.9030%" y="581" width="0.1604%" height="15" fill="rgb(244,155,2)" fg:x="535" fg:w="2"/><text x="43.1530%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="42.5020%" y="629" width="0.8019%" height="15" fill="rgb(215,81,35)" fg:x="530" fg:w="10"/><text x="42.7520%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="43.0634%" y="613" width="0.2406%" height="15" fill="rgb(206,55,2)" fg:x="537" fg:w="3"/><text x="43.3134%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="43.1435%" y="597" width="0.1604%" height="15" fill="rgb(231,2,34)" fg:x="538" fg:w="2"/><text x="43.3935%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.2237%" y="581" width="0.0802%" height="15" fill="rgb(242,176,48)" fg:x="539" fg:w="1"/><text x="43.4737%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.44%)</title><rect x="42.1812%" y="645" width="1.4435%" height="15" fill="rgb(249,31,36)" fg:x="526" fg:w="18"/><text x="42.4312%" y="655.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="43.3039%" y="629" width="0.3208%" height="15" fill="rgb(205,18,17)" fg:x="540" fg:w="4"/><text x="43.5539%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="43.3841%" y="613" width="0.2406%" height="15" fill="rgb(254,130,5)" fg:x="541" fg:w="3"/><text x="43.6341%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="43.3841%" y="597" width="0.2406%" height="15" fill="rgb(229,42,45)" fg:x="541" fg:w="3"/><text x="43.6341%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.17%)</title><rect x="41.5397%" y="661" width="2.1652%" height="15" fill="rgb(245,95,25)" fg:x="518" fg:w="27"/><text x="41.7897%" y="671.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.6247%" y="645" width="0.0802%" height="15" fill="rgb(249,193,38)" fg:x="544" fg:w="1"/><text x="43.8747%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.6247%" y="629" width="0.0802%" height="15" fill="rgb(241,140,43)" fg:x="544" fg:w="1"/><text x="43.8747%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.6247%" y="613" width="0.0802%" height="15" fill="rgb(245,78,48)" fg:x="544" fg:w="1"/><text x="43.8747%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="44.0257%" y="629" width="0.1604%" height="15" fill="rgb(214,92,39)" fg:x="549" fg:w="2"/><text x="44.2757%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="44.0257%" y="613" width="0.1604%" height="15" fill="rgb(211,189,14)" fg:x="549" fg:w="2"/><text x="44.2757%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="44.0257%" y="597" width="0.1604%" height="15" fill="rgb(218,7,24)" fg:x="549" fg:w="2"/><text x="44.2757%" y="607.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="44.0257%" y="581" width="0.1604%" height="15" fill="rgb(224,200,49)" fg:x="549" fg:w="2"/><text x="44.2757%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (43 samples, 3.45%)</title><rect x="40.8180%" y="693" width="3.4483%" height="15" fill="rgb(218,210,14)" fg:x="509" fg:w="43"/><text x="41.0680%" y="703.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.05%)</title><rect x="41.2189%" y="677" width="3.0473%" height="15" fill="rgb(234,142,31)" fg:x="514" fg:w="38"/><text x="41.4689%" y="687.50">ser..</text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="43.7049%" y="661" width="0.5613%" height="15" fill="rgb(227,165,2)" fg:x="545" fg:w="7"/><text x="43.9549%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="43.7851%" y="645" width="0.4812%" height="15" fill="rgb(232,44,46)" fg:x="546" fg:w="6"/><text x="44.0351%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="44.1860%" y="629" width="0.0802%" height="15" fill="rgb(236,149,47)" fg:x="551" fg:w="1"/><text x="44.4360%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.5068%" y="661" width="0.0802%" height="15" fill="rgb(227,45,31)" fg:x="555" fg:w="1"/><text x="44.7568%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.6672%" y="645" width="0.0802%" height="15" fill="rgb(240,176,51)" fg:x="557" fg:w="1"/><text x="44.9172%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.8276%" y="629" width="0.0802%" height="15" fill="rgb(249,146,41)" fg:x="559" fg:w="1"/><text x="45.0776%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.9078%" y="613" width="0.1604%" height="15" fill="rgb(213,208,4)" fg:x="560" fg:w="2"/><text x="45.1578%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="45.0682%" y="613" width="0.1604%" height="15" fill="rgb(245,84,36)" fg:x="562" fg:w="2"/><text x="45.3182%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.1484%" y="597" width="0.0802%" height="15" fill="rgb(254,84,18)" fg:x="563" fg:w="1"/><text x="45.3984%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="45.2285%" y="613" width="0.0802%" height="15" fill="rgb(225,38,54)" fg:x="564" fg:w="1"/><text x="45.4785%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="45.2285%" y="597" width="0.0802%" height="15" fill="rgb(246,50,30)" fg:x="564" fg:w="1"/><text x="45.4785%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.2285%" y="581" width="0.0802%" height="15" fill="rgb(246,148,9)" fg:x="564" fg:w="1"/><text x="45.4785%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="44.2662%" y="693" width="1.2029%" height="15" fill="rgb(223,75,4)" fg:x="552" fg:w="15"/><text x="44.5162%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.20%)</title><rect x="44.2662%" y="677" width="1.2029%" height="15" fill="rgb(239,148,41)" fg:x="552" fg:w="15"/><text x="44.5162%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="44.5870%" y="661" width="0.8821%" height="15" fill="rgb(205,195,3)" fg:x="556" fg:w="11"/><text x="44.8370%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="44.7474%" y="645" width="0.7217%" height="15" fill="rgb(254,161,1)" fg:x="558" fg:w="9"/><text x="44.9974%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="44.9078%" y="629" width="0.5613%" height="15" fill="rgb(211,229,8)" fg:x="560" fg:w="7"/><text x="45.1578%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="45.3087%" y="613" width="0.1604%" height="15" fill="rgb(220,97,9)" fg:x="565" fg:w="2"/><text x="45.5587%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.3889%" y="597" width="0.0802%" height="15" fill="rgb(240,218,8)" fg:x="566" fg:w="1"/><text x="45.6389%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.3889%" y="581" width="0.0802%" height="15" fill="rgb(250,44,0)" fg:x="566" fg:w="1"/><text x="45.6389%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.5493%" y="661" width="0.1604%" height="15" fill="rgb(236,41,53)" fg:x="568" fg:w="2"/><text x="45.7993%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.7899%" y="629" width="0.1604%" height="15" fill="rgb(218,227,13)" fg:x="571" fg:w="2"/><text x="46.0399%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.0305%" y="613" width="0.1604%" height="15" fill="rgb(217,94,32)" fg:x="574" fg:w="2"/><text x="46.2805%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="46.1909%" y="613" width="0.1604%" height="15" fill="rgb(213,217,12)" fg:x="576" fg:w="2"/><text x="46.4409%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.1909%" y="597" width="0.1604%" height="15" fill="rgb(229,13,46)" fg:x="576" fg:w="2"/><text x="46.4409%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.3512%" y="597" width="0.0802%" height="15" fill="rgb(243,139,5)" fg:x="578" fg:w="1"/><text x="46.6012%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.4314%" y="597" width="0.0802%" height="15" fill="rgb(249,38,45)" fg:x="579" fg:w="1"/><text x="46.6814%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="46.5116%" y="597" width="0.0802%" height="15" fill="rgb(216,70,11)" fg:x="580" fg:w="1"/><text x="46.7616%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.6720%" y="581" width="0.1604%" height="15" fill="rgb(253,101,25)" fg:x="582" fg:w="2"/><text x="46.9220%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="46.8324%" y="581" width="0.1604%" height="15" fill="rgb(207,197,30)" fg:x="584" fg:w="2"/><text x="47.0824%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="46.9126%" y="565" width="0.0802%" height="15" fill="rgb(238,87,13)" fg:x="585" fg:w="1"/><text x="47.1626%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.0730%" y="565" width="0.0802%" height="15" fill="rgb(215,155,8)" fg:x="587" fg:w="1"/><text x="47.3230%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.60%)</title><rect x="45.7097%" y="661" width="1.6038%" height="15" fill="rgb(239,166,38)" fg:x="570" fg:w="20"/><text x="45.9597%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (20 samples, 1.60%)</title><rect x="45.7097%" y="645" width="1.6038%" height="15" fill="rgb(240,194,35)" fg:x="570" fg:w="20"/><text x="45.9597%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="45.9503%" y="629" width="1.3633%" height="15" fill="rgb(219,10,44)" fg:x="573" fg:w="17"/><text x="46.2003%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="46.3512%" y="613" width="0.9623%" height="15" fill="rgb(251,220,35)" fg:x="578" fg:w="12"/><text x="46.6012%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="46.5918%" y="597" width="0.7217%" height="15" fill="rgb(218,117,13)" fg:x="581" fg:w="9"/><text x="46.8418%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="46.9928%" y="581" width="0.3208%" height="15" fill="rgb(221,213,40)" fg:x="586" fg:w="4"/><text x="47.2428%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="47.1532%" y="565" width="0.1604%" height="15" fill="rgb(251,224,35)" fg:x="588" fg:w="2"/><text x="47.4032%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="47.3136%" y="597" width="0.0802%" height="15" fill="rgb(241,33,39)" fg:x="590" fg:w="1"/><text x="47.5636%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="47.3136%" y="629" width="0.1604%" height="15" fill="rgb(222,74,17)" fg:x="590" fg:w="2"/><text x="47.5636%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="47.3136%" y="613" width="0.1604%" height="15" fill="rgb(225,103,0)" fg:x="590" fg:w="2"/><text x="47.5636%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.3937%" y="597" width="0.0802%" height="15" fill="rgb(240,0,12)" fg:x="591" fg:w="1"/><text x="47.6437%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="47.3136%" y="645" width="0.2406%" height="15" fill="rgb(233,213,37)" fg:x="590" fg:w="3"/><text x="47.5636%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.4739%" y="629" width="0.0802%" height="15" fill="rgb(225,84,52)" fg:x="592" fg:w="1"/><text x="47.7239%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.5541%" y="645" width="0.0802%" height="15" fill="rgb(247,160,51)" fg:x="593" fg:w="1"/><text x="47.8041%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.6343%" y="613" width="0.0802%" height="15" fill="rgb(244,60,51)" fg:x="594" fg:w="1"/><text x="47.8843%" y="623.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (28 samples, 2.25%)</title><rect x="45.5493%" y="677" width="2.2454%" height="15" fill="rgb(233,114,7)" fg:x="568" fg:w="28"/><text x="45.7993%" y="687.50">&lt;..</text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="47.3136%" y="661" width="0.4812%" height="15" fill="rgb(246,136,16)" fg:x="590" fg:w="6"/><text x="47.5636%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="47.6343%" y="645" width="0.1604%" height="15" fill="rgb(243,114,45)" fg:x="594" fg:w="2"/><text x="47.8843%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="47.6343%" y="629" width="0.1604%" height="15" fill="rgb(247,183,43)" fg:x="594" fg:w="2"/><text x="47.8843%" y="639.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="47.7145%" y="613" width="0.0802%" height="15" fill="rgb(251,210,42)" fg:x="595" fg:w="1"/><text x="47.9645%" y="623.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="47.7145%" y="597" width="0.0802%" height="15" fill="rgb(221,88,35)" fg:x="595" fg:w="1"/><text x="47.9645%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (3 samples, 0.24%)</title><rect x="47.7947%" y="677" width="0.2406%" height="15" fill="rgb(242,21,20)" fg:x="596" fg:w="3"/><text x="48.0447%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.8749%" y="661" width="0.1604%" height="15" fill="rgb(233,226,36)" fg:x="597" fg:w="2"/><text x="48.1249%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="48.0353%" y="661" width="0.0802%" height="15" fill="rgb(243,189,34)" fg:x="599" fg:w="1"/><text x="48.2853%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.1957%" y="645" width="0.0802%" height="15" fill="rgb(207,145,50)" fg:x="601" fg:w="1"/><text x="48.4457%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.8372%" y="613" width="0.0802%" height="15" fill="rgb(242,1,50)" fg:x="609" fg:w="1"/><text x="49.0872%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.72%)</title><rect x="48.2759%" y="645" width="0.7217%" height="15" fill="rgb(231,65,32)" fg:x="602" fg:w="9"/><text x="48.5259%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="48.6768%" y="629" width="0.3208%" height="15" fill="rgb(208,68,49)" fg:x="607" fg:w="4"/><text x="48.9268%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="48.9174%" y="613" width="0.0802%" height="15" fill="rgb(253,54,49)" fg:x="610" fg:w="1"/><text x="49.1674%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="48.9976%" y="629" width="0.0802%" height="15" fill="rgb(245,186,24)" fg:x="611" fg:w="1"/><text x="49.2476%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="48.9976%" y="645" width="0.1604%" height="15" fill="rgb(209,2,41)" fg:x="611" fg:w="2"/><text x="49.2476%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="49.0778%" y="629" width="0.0802%" height="15" fill="rgb(242,208,54)" fg:x="612" fg:w="1"/><text x="49.3278%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.0778%" y="613" width="0.0802%" height="15" fill="rgb(225,9,51)" fg:x="612" fg:w="1"/><text x="49.3278%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.0778%" y="597" width="0.0802%" height="15" fill="rgb(207,207,25)" fg:x="612" fg:w="1"/><text x="49.3278%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.0778%" y="581" width="0.0802%" height="15" fill="rgb(253,96,18)" fg:x="612" fg:w="1"/><text x="49.3278%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="49.1580%" y="645" width="0.0802%" height="15" fill="rgb(252,215,20)" fg:x="613" fg:w="1"/><text x="49.4080%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="49.1580%" y="629" width="0.0802%" height="15" fill="rgb(245,227,26)" fg:x="613" fg:w="1"/><text x="49.4080%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.1580%" y="613" width="0.0802%" height="15" fill="rgb(241,208,0)" fg:x="613" fg:w="1"/><text x="49.4080%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="49.2382%" y="645" width="0.0802%" height="15" fill="rgb(224,130,10)" fg:x="614" fg:w="1"/><text x="49.4882%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="49.2382%" y="629" width="0.0802%" height="15" fill="rgb(237,29,0)" fg:x="614" fg:w="1"/><text x="49.4882%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.2382%" y="613" width="0.0802%" height="15" fill="rgb(219,27,41)" fg:x="614" fg:w="1"/><text x="49.4882%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.6391%" y="613" width="0.0802%" height="15" fill="rgb(245,101,19)" fg:x="619" fg:w="1"/><text x="49.8891%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="49.8797%" y="597" width="0.3208%" height="15" fill="rgb(243,44,37)" fg:x="622" fg:w="4"/><text x="50.1297%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="49.9599%" y="581" width="0.2406%" height="15" fill="rgb(228,213,43)" fg:x="623" fg:w="3"/><text x="50.2099%" y="591.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="49.9599%" y="565" width="0.2406%" height="15" fill="rgb(219,163,21)" fg:x="623" fg:w="3"/><text x="50.2099%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="50.2005%" y="581" width="0.0802%" height="15" fill="rgb(234,86,24)" fg:x="626" fg:w="1"/><text x="50.4505%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="50.2005%" y="597" width="0.2406%" height="15" fill="rgb(225,10,24)" fg:x="626" fg:w="3"/><text x="50.4505%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="50.2807%" y="581" width="0.1604%" height="15" fill="rgb(218,109,7)" fg:x="627" fg:w="2"/><text x="50.5307%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="50.2807%" y="565" width="0.1604%" height="15" fill="rgb(210,20,26)" fg:x="627" fg:w="2"/><text x="50.5307%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.3609%" y="549" width="0.0802%" height="15" fill="rgb(216,18,1)" fg:x="628" fg:w="1"/><text x="50.6109%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="50.6816%" y="565" width="0.4812%" height="15" fill="rgb(206,163,23)" fg:x="632" fg:w="6"/><text x="50.9316%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="50.8420%" y="549" width="0.3208%" height="15" fill="rgb(229,150,31)" fg:x="634" fg:w="4"/><text x="51.0920%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.0024%" y="533" width="0.1604%" height="15" fill="rgb(231,10,5)" fg:x="636" fg:w="2"/><text x="51.2524%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="51.4836%" y="533" width="0.4010%" height="15" fill="rgb(250,40,50)" fg:x="642" fg:w="5"/><text x="51.7336%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="51.4836%" y="517" width="0.4010%" height="15" fill="rgb(217,119,7)" fg:x="642" fg:w="5"/><text x="51.7336%" y="527.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="51.5638%" y="501" width="0.3208%" height="15" fill="rgb(245,214,40)" fg:x="643" fg:w="4"/><text x="51.8138%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="51.3232%" y="549" width="0.6415%" height="15" fill="rgb(216,187,1)" fg:x="640" fg:w="8"/><text x="51.5732%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="51.8845%" y="533" width="0.0802%" height="15" fill="rgb(237,146,21)" fg:x="647" fg:w="1"/><text x="52.1345%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 1.76%)</title><rect x="50.5213%" y="581" width="1.7642%" height="15" fill="rgb(210,174,47)" fg:x="630" fg:w="22"/><text x="50.7713%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.12%)</title><rect x="51.1628%" y="565" width="1.1227%" height="15" fill="rgb(218,111,39)" fg:x="638" fg:w="14"/><text x="51.4128%" y="575.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="51.9647%" y="549" width="0.3208%" height="15" fill="rgb(224,95,19)" fg:x="648" fg:w="4"/><text x="52.2147%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (36 samples, 2.89%)</title><rect x="49.7193%" y="613" width="2.8869%" height="15" fill="rgb(234,15,38)" fg:x="620" fg:w="36"/><text x="49.9693%" y="623.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (27 samples, 2.17%)</title><rect x="50.4411%" y="597" width="2.1652%" height="15" fill="rgb(246,56,12)" fg:x="629" fg:w="27"/><text x="50.6911%" y="607.50">s..</text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="52.2855%" y="581" width="0.3208%" height="15" fill="rgb(247,16,17)" fg:x="652" fg:w="4"/><text x="52.5355%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (42 samples, 3.37%)</title><rect x="49.3986%" y="629" width="3.3681%" height="15" fill="rgb(215,151,11)" fg:x="616" fg:w="42"/><text x="49.6486%" y="639.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="52.6063%" y="613" width="0.1604%" height="15" fill="rgb(225,16,24)" fg:x="656" fg:w="2"/><text x="52.8563%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7666%" y="629" width="0.0802%" height="15" fill="rgb(217,117,5)" fg:x="658" fg:w="1"/><text x="53.0166%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.9270%" y="597" width="0.0802%" height="15" fill="rgb(246,187,53)" fg:x="660" fg:w="1"/><text x="53.1770%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (63 samples, 5.05%)</title><rect x="48.0353%" y="677" width="5.0521%" height="15" fill="rgb(241,71,40)" fg:x="599" fg:w="63"/><text x="48.2853%" y="687.50">kernel..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (62 samples, 4.97%)</title><rect x="48.1155%" y="661" width="4.9719%" height="15" fill="rgb(231,67,39)" fg:x="600" fg:w="62"/><text x="48.3655%" y="671.50">&lt;serde..</text></g><g><title>serde::ser::Serializer::collect_map (47 samples, 3.77%)</title><rect x="49.3184%" y="645" width="3.7690%" height="15" fill="rgb(222,120,24)" fg:x="615" fg:w="47"/><text x="49.5684%" y="655.50">serd..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.8468%" y="629" width="0.2406%" height="15" fill="rgb(248,3,3)" fg:x="659" fg:w="3"/><text x="53.0968%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.9270%" y="613" width="0.1604%" height="15" fill="rgb(228,218,5)" fg:x="660" fg:w="2"/><text x="53.1770%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="53.0072%" y="597" width="0.0802%" height="15" fill="rgb(212,202,43)" fg:x="661" fg:w="1"/><text x="53.2572%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.1676%" y="565" width="0.0802%" height="15" fill="rgb(235,183,2)" fg:x="663" fg:w="1"/><text x="53.4176%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.2478%" y="501" width="0.0802%" height="15" fill="rgb(230,165,10)" fg:x="664" fg:w="1"/><text x="53.4978%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.2478%" y="485" width="0.0802%" height="15" fill="rgb(219,54,40)" fg:x="664" fg:w="1"/><text x="53.4978%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="53.3280%" y="469" width="0.1604%" height="15" fill="rgb(244,73,9)" fg:x="665" fg:w="2"/><text x="53.5780%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="53.2478%" y="533" width="0.3208%" height="15" fill="rgb(212,32,45)" fg:x="664" fg:w="4"/><text x="53.4978%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="53.2478%" y="517" width="0.3208%" height="15" fill="rgb(205,58,31)" fg:x="664" fg:w="4"/><text x="53.4978%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.3280%" y="501" width="0.2406%" height="15" fill="rgb(250,120,43)" fg:x="665" fg:w="3"/><text x="53.5780%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.3280%" y="485" width="0.2406%" height="15" fill="rgb(235,13,10)" fg:x="665" fg:w="3"/><text x="53.5780%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="53.4884%" y="469" width="0.0802%" height="15" fill="rgb(232,219,31)" fg:x="667" fg:w="1"/><text x="53.7384%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.7289%" y="485" width="0.0802%" height="15" fill="rgb(218,157,51)" fg:x="670" fg:w="1"/><text x="53.9789%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="53.9695%" y="453" width="0.1604%" height="15" fill="rgb(211,91,52)" fg:x="673" fg:w="2"/><text x="54.2195%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="53.6488%" y="517" width="0.6415%" height="15" fill="rgb(240,173,1)" fg:x="669" fg:w="8"/><text x="53.8988%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="53.7289%" y="501" width="0.5613%" height="15" fill="rgb(248,20,47)" fg:x="670" fg:w="7"/><text x="53.9789%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="53.8091%" y="485" width="0.4812%" height="15" fill="rgb(217,221,40)" fg:x="671" fg:w="6"/><text x="54.0591%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="53.8893%" y="469" width="0.4010%" height="15" fill="rgb(226,149,51)" fg:x="672" fg:w="5"/><text x="54.1393%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="54.1299%" y="453" width="0.1604%" height="15" fill="rgb(252,193,7)" fg:x="675" fg:w="2"/><text x="54.3799%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="54.2903%" y="501" width="0.1604%" height="15" fill="rgb(205,123,0)" fg:x="677" fg:w="2"/><text x="54.5403%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="54.2903%" y="517" width="0.2406%" height="15" fill="rgb(233,173,25)" fg:x="677" fg:w="3"/><text x="54.5403%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.4507%" y="501" width="0.0802%" height="15" fill="rgb(216,63,32)" fg:x="679" fg:w="1"/><text x="54.7007%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="53.2478%" y="549" width="1.4435%" height="15" fill="rgb(209,56,45)" fg:x="664" fg:w="18"/><text x="53.4978%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="53.5686%" y="533" width="1.1227%" height="15" fill="rgb(226,111,49)" fg:x="668" fg:w="14"/><text x="53.8186%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.5309%" y="517" width="0.1604%" height="15" fill="rgb(244,181,21)" fg:x="680" fg:w="2"/><text x="54.7809%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.6111%" y="501" width="0.0802%" height="15" fill="rgb(222,126,15)" fg:x="681" fg:w="1"/><text x="54.8611%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="54.6111%" y="485" width="0.0802%" height="15" fill="rgb(222,95,17)" fg:x="681" fg:w="1"/><text x="54.8611%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="54.6111%" y="469" width="0.0802%" height="15" fill="rgb(254,46,5)" fg:x="681" fg:w="1"/><text x="54.8611%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.6913%" y="549" width="0.1604%" height="15" fill="rgb(236,216,35)" fg:x="682" fg:w="2"/><text x="54.9413%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.7715%" y="533" width="0.0802%" height="15" fill="rgb(217,187,26)" fg:x="683" fg:w="1"/><text x="55.0215%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.84%)</title><rect x="53.1676%" y="581" width="1.8444%" height="15" fill="rgb(207,192,25)" fg:x="663" fg:w="23"/><text x="53.4176%" y="591.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.76%)</title><rect x="53.2478%" y="565" width="1.7642%" height="15" fill="rgb(253,135,27)" fg:x="664" fg:w="22"/><text x="53.4978%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.8516%" y="549" width="0.1604%" height="15" fill="rgb(211,122,29)" fg:x="684" fg:w="2"/><text x="55.1016%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.8516%" y="533" width="0.1604%" height="15" fill="rgb(233,162,40)" fg:x="684" fg:w="2"/><text x="55.1016%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.8516%" y="517" width="0.1604%" height="15" fill="rgb(222,184,47)" fg:x="684" fg:w="2"/><text x="55.1016%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="55.2526%" y="565" width="0.1604%" height="15" fill="rgb(249,99,23)" fg:x="689" fg:w="2"/><text x="55.5026%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (8 samples, 0.64%)</title><rect x="55.0120%" y="581" width="0.6415%" height="15" fill="rgb(214,60,12)" fg:x="686" fg:w="8"/><text x="55.2620%" y="591.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="55.4130%" y="565" width="0.2406%" height="15" fill="rgb(250,229,36)" fg:x="691" fg:w="3"/><text x="55.6630%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.57%)</title><rect x="53.1676%" y="597" width="2.5662%" height="15" fill="rgb(232,195,10)" fg:x="663" fg:w="32"/><text x="53.4176%" y="607.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.6536%" y="581" width="0.0802%" height="15" fill="rgb(205,213,31)" fg:x="694" fg:w="1"/><text x="55.9036%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.6536%" y="565" width="0.0802%" height="15" fill="rgb(237,43,8)" fg:x="694" fg:w="1"/><text x="55.9036%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.6536%" y="549" width="0.0802%" height="15" fill="rgb(216,208,3)" fg:x="694" fg:w="1"/><text x="55.9036%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (34 samples, 2.73%)</title><rect x="53.0874%" y="613" width="2.7265%" height="15" fill="rgb(228,179,44)" fg:x="662" fg:w="34"/><text x="53.3374%" y="623.50">&lt;&amp;..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.7338%" y="597" width="0.0802%" height="15" fill="rgb(230,192,27)" fg:x="695" fg:w="1"/><text x="55.9838%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.24%)</title><rect x="55.8941%" y="597" width="0.2406%" height="15" fill="rgb(251,30,38)" fg:x="697" fg:w="3"/><text x="56.1441%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="55.8140%" y="613" width="0.4010%" height="15" fill="rgb(246,55,52)" fg:x="696" fg:w="5"/><text x="56.0640%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.1347%" y="597" width="0.0802%" height="15" fill="rgb(249,79,26)" fg:x="700" fg:w="1"/><text x="56.3847%" y="607.50"></text></g><g><title>engine::session::state::State::close (204 samples, 16.36%)</title><rect x="40.0160%" y="757" width="16.3593%" height="15" fill="rgb(220,202,16)" fg:x="499" fg:w="204"/><text x="40.2660%" y="767.50">engine::session::state::S..</text></g><g><title>engine::session::state::State::flush_entities (204 samples, 16.36%)</title><rect x="40.0160%" y="741" width="16.3593%" height="15" fill="rgb(250,170,23)" fg:x="499" fg:w="204"/><text x="40.2660%" y="751.50">engine::session::state::S..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (198 samples, 15.88%)</title><rect x="40.4972%" y="725" width="15.8781%" height="15" fill="rgb(230,7,37)" fg:x="505" fg:w="198"/><text x="40.7472%" y="735.50">engine::session::interna..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (196 samples, 15.72%)</title><rect x="40.6576%" y="709" width="15.7177%" height="15" fill="rgb(213,71,1)" fg:x="507" fg:w="196"/><text x="40.9076%" y="719.50">engine::session::state::..</text></g><g><title>kernel::model::any_entity_changes (136 samples, 10.91%)</title><rect x="45.4691%" y="693" width="10.9062%" height="15" fill="rgb(227,87,39)" fg:x="567" fg:w="136"/><text x="45.7191%" y="703.50">kernel::model::a..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (41 samples, 3.29%)</title><rect x="53.0874%" y="677" width="3.2879%" height="15" fill="rgb(210,41,29)" fg:x="662" fg:w="41"/><text x="53.3374%" y="687.50">ser..</text></g><g><title>serde_json::de::from_trait (41 samples, 3.29%)</title><rect x="53.0874%" y="661" width="3.2879%" height="15" fill="rgb(206,191,31)" fg:x="662" fg:w="41"/><text x="53.3374%" y="671.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (41 samples, 3.29%)</title><rect x="53.0874%" y="645" width="3.2879%" height="15" fill="rgb(247,75,54)" fg:x="662" fg:w="41"/><text x="53.3374%" y="655.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (41 samples, 3.29%)</title><rect x="53.0874%" y="629" width="3.2879%" height="15" fill="rgb(208,54,50)" fg:x="662" fg:w="41"/><text x="53.3374%" y="639.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.2149%" y="613" width="0.1604%" height="15" fill="rgb(214,90,37)" fg:x="701" fg:w="2"/><text x="56.4649%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.2951%" y="597" width="0.0802%" height="15" fill="rgb(220,132,6)" fg:x="702" fg:w="1"/><text x="56.5451%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.2951%" y="581" width="0.0802%" height="15" fill="rgb(213,167,7)" fg:x="702" fg:w="1"/><text x="56.5451%" y="591.50"></text></g><g><title>engine::session::Session::close (214 samples, 17.16%)</title><rect x="39.4547%" y="773" width="17.1612%" height="15" fill="rgb(243,36,27)" fg:x="492" fg:w="214"/><text x="39.7047%" y="783.50">engine::session::Session::c..</text></g><g><title>kernel::plugins::SessionPlugins::stop (3 samples, 0.24%)</title><rect x="56.3753%" y="757" width="0.2406%" height="15" fill="rgb(235,147,12)" fg:x="703" fg:w="3"/><text x="56.6253%" y="767.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::Plugin&gt;::stop (1 samples, 0.08%)</title><rect x="56.5357%" y="741" width="0.0802%" height="15" fill="rgb(212,198,44)" fg:x="705" fg:w="1"/><text x="56.7857%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.6961%" y="709" width="0.0802%" height="15" fill="rgb(218,68,50)" fg:x="707" fg:w="1"/><text x="56.9461%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.9366%" y="421" width="0.0802%" height="15" fill="rgb(224,79,48)" fg:x="710" fg:w="1"/><text x="57.1866%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.9366%" y="405" width="0.0802%" height="15" fill="rgb(213,191,50)" fg:x="710" fg:w="1"/><text x="57.1866%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="56.9366%" y="389" width="0.0802%" height="15" fill="rgb(254,146,10)" fg:x="710" fg:w="1"/><text x="57.1866%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="56.9366%" y="373" width="0.0802%" height="15" fill="rgb(215,175,11)" fg:x="710" fg:w="1"/><text x="57.1866%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="56.9366%" y="357" width="0.0802%" height="15" fill="rgb(207,49,7)" fg:x="710" fg:w="1"/><text x="57.1866%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="56.9366%" y="341" width="0.0802%" height="15" fill="rgb(234,144,29)" fg:x="710" fg:w="1"/><text x="57.1866%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="56.9366%" y="325" width="0.0802%" height="15" fill="rgb(213,222,48)" fg:x="710" fg:w="1"/><text x="57.1866%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="56.9366%" y="309" width="0.0802%" height="15" fill="rgb(222,8,6)" fg:x="710" fg:w="1"/><text x="57.1866%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="56.9366%" y="293" width="0.0802%" height="15" fill="rgb(221,114,49)" fg:x="710" fg:w="1"/><text x="57.1866%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="56.9366%" y="277" width="0.0802%" height="15" fill="rgb(250,140,42)" fg:x="710" fg:w="1"/><text x="57.1866%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="56.9366%" y="261" width="0.0802%" height="15" fill="rgb(250,150,27)" fg:x="710" fg:w="1"/><text x="57.1866%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="56.8565%" y="645" width="0.2406%" height="15" fill="rgb(252,159,3)" fg:x="709" fg:w="3"/><text x="57.1065%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="56.8565%" y="629" width="0.2406%" height="15" fill="rgb(241,182,3)" fg:x="709" fg:w="3"/><text x="57.1065%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="56.8565%" y="613" width="0.2406%" height="15" fill="rgb(236,3,9)" fg:x="709" fg:w="3"/><text x="57.1065%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="56.9366%" y="597" width="0.1604%" height="15" fill="rgb(223,227,51)" fg:x="710" fg:w="2"/><text x="57.1866%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="56.9366%" y="581" width="0.1604%" height="15" fill="rgb(232,133,30)" fg:x="710" fg:w="2"/><text x="57.1866%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="56.9366%" y="565" width="0.1604%" height="15" fill="rgb(209,93,27)" fg:x="710" fg:w="2"/><text x="57.1866%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="56.9366%" y="549" width="0.1604%" height="15" fill="rgb(208,108,34)" fg:x="710" fg:w="2"/><text x="57.1866%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="56.9366%" y="533" width="0.1604%" height="15" fill="rgb(215,189,13)" fg:x="710" fg:w="2"/><text x="57.1866%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="56.9366%" y="517" width="0.1604%" height="15" fill="rgb(206,88,23)" fg:x="710" fg:w="2"/><text x="57.1866%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="56.9366%" y="501" width="0.1604%" height="15" fill="rgb(240,173,0)" fg:x="710" fg:w="2"/><text x="57.1866%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="56.9366%" y="485" width="0.1604%" height="15" fill="rgb(223,106,52)" fg:x="710" fg:w="2"/><text x="57.1866%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="56.9366%" y="469" width="0.1604%" height="15" fill="rgb(206,130,16)" fg:x="710" fg:w="2"/><text x="57.1866%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="56.9366%" y="453" width="0.1604%" height="15" fill="rgb(220,54,25)" fg:x="710" fg:w="2"/><text x="57.1866%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="56.9366%" y="437" width="0.1604%" height="15" fill="rgb(210,4,38)" fg:x="710" fg:w="2"/><text x="57.1866%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="57.0168%" y="421" width="0.0802%" height="15" fill="rgb(238,94,39)" fg:x="711" fg:w="1"/><text x="57.2668%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.0168%" y="405" width="0.0802%" height="15" fill="rgb(234,124,34)" fg:x="711" fg:w="1"/><text x="57.2668%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.0168%" y="389" width="0.0802%" height="15" fill="rgb(221,91,40)" fg:x="711" fg:w="1"/><text x="57.2668%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="57.0168%" y="373" width="0.0802%" height="15" fill="rgb(246,53,28)" fg:x="711" fg:w="1"/><text x="57.2668%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="57.0168%" y="357" width="0.0802%" height="15" fill="rgb(229,109,7)" fg:x="711" fg:w="1"/><text x="57.2668%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="57.0168%" y="341" width="0.0802%" height="15" fill="rgb(249,117,8)" fg:x="711" fg:w="1"/><text x="57.2668%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="57.0168%" y="325" width="0.0802%" height="15" fill="rgb(210,181,1)" fg:x="711" fg:w="1"/><text x="57.2668%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="57.0168%" y="309" width="0.0802%" height="15" fill="rgb(211,66,1)" fg:x="711" fg:w="1"/><text x="57.2668%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="57.0168%" y="293" width="0.0802%" height="15" fill="rgb(221,90,14)" fg:x="711" fg:w="1"/><text x="57.2668%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="57.0168%" y="277" width="0.0802%" height="15" fill="rgb(219,222,44)" fg:x="711" fg:w="1"/><text x="57.2668%" y="287.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="57.1772%" y="581" width="0.0802%" height="15" fill="rgb(246,34,33)" fg:x="713" fg:w="1"/><text x="57.4272%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.2574%" y="517" width="0.0802%" height="15" fill="rgb(227,135,41)" fg:x="714" fg:w="1"/><text x="57.5074%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="57.2574%" y="565" width="0.1604%" height="15" fill="rgb(226,15,14)" fg:x="714" fg:w="2"/><text x="57.5074%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="57.2574%" y="549" width="0.1604%" height="15" fill="rgb(236,148,47)" fg:x="714" fg:w="2"/><text x="57.5074%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="57.2574%" y="533" width="0.1604%" height="15" fill="rgb(233,162,52)" fg:x="714" fg:w="2"/><text x="57.5074%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="57.3376%" y="517" width="0.0802%" height="15" fill="rgb(244,35,28)" fg:x="715" fg:w="1"/><text x="57.5876%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.3376%" y="501" width="0.0802%" height="15" fill="rgb(205,121,10)" fg:x="715" fg:w="1"/><text x="57.5876%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.4178%" y="469" width="0.1604%" height="15" fill="rgb(250,58,18)" fg:x="716" fg:w="2"/><text x="57.6678%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.4980%" y="453" width="0.0802%" height="15" fill="rgb(216,37,13)" fg:x="717" fg:w="1"/><text x="57.7480%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4980%" y="437" width="0.0802%" height="15" fill="rgb(221,215,42)" fg:x="717" fg:w="1"/><text x="57.7480%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.6584%" y="437" width="0.0802%" height="15" fill="rgb(217,214,19)" fg:x="719" fg:w="1"/><text x="57.9084%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.8188%" y="373" width="0.0802%" height="15" fill="rgb(233,139,13)" fg:x="721" fg:w="1"/><text x="58.0688%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="57.7386%" y="421" width="0.2406%" height="15" fill="rgb(247,168,23)" fg:x="720" fg:w="3"/><text x="57.9886%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="57.7386%" y="405" width="0.2406%" height="15" fill="rgb(207,202,1)" fg:x="720" fg:w="3"/><text x="57.9886%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.8188%" y="389" width="0.1604%" height="15" fill="rgb(220,155,48)" fg:x="721" fg:w="2"/><text x="58.0688%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="57.8990%" y="373" width="0.0802%" height="15" fill="rgb(250,43,26)" fg:x="722" fg:w="1"/><text x="58.1490%" y="383.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="57.4178%" y="549" width="0.7217%" height="15" fill="rgb(212,190,23)" fg:x="716" fg:w="9"/><text x="57.6678%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="57.4178%" y="533" width="0.7217%" height="15" fill="rgb(216,39,24)" fg:x="716" fg:w="9"/><text x="57.6678%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="57.4178%" y="517" width="0.7217%" height="15" fill="rgb(252,113,16)" fg:x="716" fg:w="9"/><text x="57.6678%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="57.4178%" y="501" width="0.7217%" height="15" fill="rgb(208,113,19)" fg:x="716" fg:w="9"/><text x="57.6678%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="57.4178%" y="485" width="0.7217%" height="15" fill="rgb(234,107,25)" fg:x="716" fg:w="9"/><text x="57.6678%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="57.5782%" y="469" width="0.5613%" height="15" fill="rgb(234,217,51)" fg:x="718" fg:w="7"/><text x="57.8282%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="57.5782%" y="453" width="0.5613%" height="15" fill="rgb(251,29,42)" fg:x="718" fg:w="7"/><text x="57.8282%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="57.7386%" y="437" width="0.4010%" height="15" fill="rgb(221,62,51)" fg:x="720" fg:w="5"/><text x="57.9886%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="57.9791%" y="421" width="0.1604%" height="15" fill="rgb(240,192,43)" fg:x="723" fg:w="2"/><text x="58.2291%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.9791%" y="405" width="0.1604%" height="15" fill="rgb(224,157,47)" fg:x="723" fg:w="2"/><text x="58.2291%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.9791%" y="389" width="0.1604%" height="15" fill="rgb(226,84,45)" fg:x="723" fg:w="2"/><text x="58.2291%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.0593%" y="373" width="0.0802%" height="15" fill="rgb(208,207,23)" fg:x="724" fg:w="1"/><text x="58.3093%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.0593%" y="357" width="0.0802%" height="15" fill="rgb(253,34,51)" fg:x="724" fg:w="1"/><text x="58.3093%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.1395%" y="517" width="0.0802%" height="15" fill="rgb(227,26,34)" fg:x="725" fg:w="1"/><text x="58.3895%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.2197%" y="485" width="0.0802%" height="15" fill="rgb(245,75,19)" fg:x="726" fg:w="1"/><text x="58.4697%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.2999%" y="437" width="0.0802%" height="15" fill="rgb(250,191,31)" fg:x="727" fg:w="1"/><text x="58.5499%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.2999%" y="421" width="0.0802%" height="15" fill="rgb(224,11,50)" fg:x="727" fg:w="1"/><text x="58.5499%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.2999%" y="405" width="0.0802%" height="15" fill="rgb(231,171,7)" fg:x="727" fg:w="1"/><text x="58.5499%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.2999%" y="389" width="0.0802%" height="15" fill="rgb(252,214,10)" fg:x="727" fg:w="1"/><text x="58.5499%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="58.2999%" y="373" width="0.0802%" height="15" fill="rgb(249,45,46)" fg:x="727" fg:w="1"/><text x="58.5499%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="58.2999%" y="357" width="0.0802%" height="15" fill="rgb(240,173,7)" fg:x="727" fg:w="1"/><text x="58.5499%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="58.2999%" y="469" width="0.3208%" height="15" fill="rgb(235,214,13)" fg:x="727" fg:w="4"/><text x="58.5499%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="58.2999%" y="453" width="0.3208%" height="15" fill="rgb(245,156,8)" fg:x="727" fg:w="4"/><text x="58.5499%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="58.3801%" y="437" width="0.2406%" height="15" fill="rgb(235,46,12)" fg:x="728" fg:w="3"/><text x="58.6301%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="58.4603%" y="421" width="0.1604%" height="15" fill="rgb(221,81,14)" fg:x="729" fg:w="2"/><text x="58.7103%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="58.4603%" y="405" width="0.1604%" height="15" fill="rgb(238,207,9)" fg:x="729" fg:w="2"/><text x="58.7103%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.5405%" y="389" width="0.0802%" height="15" fill="rgb(224,129,35)" fg:x="730" fg:w="1"/><text x="58.7905%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="58.5405%" y="373" width="0.0802%" height="15" fill="rgb(243,218,34)" fg:x="730" fg:w="1"/><text x="58.7905%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.6207%" y="437" width="0.0802%" height="15" fill="rgb(220,166,13)" fg:x="731" fg:w="1"/><text x="58.8707%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="58.6207%" y="469" width="0.1604%" height="15" fill="rgb(227,167,49)" fg:x="731" fg:w="2"/><text x="58.8707%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="58.6207%" y="453" width="0.1604%" height="15" fill="rgb(234,142,12)" fg:x="731" fg:w="2"/><text x="58.8707%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="58.7009%" y="437" width="0.0802%" height="15" fill="rgb(207,100,48)" fg:x="732" fg:w="1"/><text x="58.9509%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="58.7009%" y="421" width="0.0802%" height="15" fill="rgb(210,25,14)" fg:x="732" fg:w="1"/><text x="58.9509%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="58.7009%" y="405" width="0.0802%" height="15" fill="rgb(246,116,27)" fg:x="732" fg:w="1"/><text x="58.9509%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (19 samples, 1.52%)</title><rect x="57.4178%" y="565" width="1.5237%" height="15" fill="rgb(214,193,42)" fg:x="716" fg:w="19"/><text x="57.6678%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="58.1395%" y="549" width="0.8019%" height="15" fill="rgb(214,122,8)" fg:x="725" fg:w="10"/><text x="58.3895%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="58.1395%" y="533" width="0.8019%" height="15" fill="rgb(244,173,18)" fg:x="725" fg:w="10"/><text x="58.3895%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="58.2197%" y="517" width="0.7217%" height="15" fill="rgb(232,68,19)" fg:x="726" fg:w="9"/><text x="58.4697%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="58.2197%" y="501" width="0.7217%" height="15" fill="rgb(236,224,1)" fg:x="726" fg:w="9"/><text x="58.4697%" y="511.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="58.2999%" y="485" width="0.6415%" height="15" fill="rgb(240,11,8)" fg:x="727" fg:w="8"/><text x="58.5499%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.7811%" y="469" width="0.1604%" height="15" fill="rgb(244,159,20)" fg:x="733" fg:w="2"/><text x="59.0311%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.7811%" y="453" width="0.1604%" height="15" fill="rgb(240,223,54)" fg:x="733" fg:w="2"/><text x="59.0311%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="58.8613%" y="437" width="0.0802%" height="15" fill="rgb(237,146,5)" fg:x="734" fg:w="1"/><text x="59.1113%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.8613%" y="421" width="0.0802%" height="15" fill="rgb(218,221,32)" fg:x="734" fg:w="1"/><text x="59.1113%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.8613%" y="405" width="0.0802%" height="15" fill="rgb(244,96,26)" fg:x="734" fg:w="1"/><text x="59.1113%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="58.8613%" y="389" width="0.0802%" height="15" fill="rgb(245,184,37)" fg:x="734" fg:w="1"/><text x="59.1113%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.8613%" y="373" width="0.0802%" height="15" fill="rgb(248,91,47)" fg:x="734" fg:w="1"/><text x="59.1113%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.8613%" y="357" width="0.0802%" height="15" fill="rgb(243,199,8)" fg:x="734" fg:w="1"/><text x="59.1113%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.8613%" y="341" width="0.0802%" height="15" fill="rgb(249,12,15)" fg:x="734" fg:w="1"/><text x="59.1113%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="59.0217%" y="469" width="0.1604%" height="15" fill="rgb(245,97,12)" fg:x="736" fg:w="2"/><text x="59.2717%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.1820%" y="453" width="0.0802%" height="15" fill="rgb(244,61,1)" fg:x="738" fg:w="1"/><text x="59.4320%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.1820%" y="469" width="0.1604%" height="15" fill="rgb(222,194,10)" fg:x="738" fg:w="2"/><text x="59.4320%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.2622%" y="453" width="0.0802%" height="15" fill="rgb(226,178,8)" fg:x="739" fg:w="1"/><text x="59.5122%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (27 samples, 2.17%)</title><rect x="57.2574%" y="581" width="2.1652%" height="15" fill="rgb(241,32,34)" fg:x="714" fg:w="27"/><text x="57.5074%" y="591.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="58.9415%" y="565" width="0.4812%" height="15" fill="rgb(254,26,6)" fg:x="735" fg:w="6"/><text x="59.1915%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="58.9415%" y="549" width="0.4812%" height="15" fill="rgb(249,71,11)" fg:x="735" fg:w="6"/><text x="59.1915%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="58.9415%" y="533" width="0.4812%" height="15" fill="rgb(232,170,27)" fg:x="735" fg:w="6"/><text x="59.1915%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="58.9415%" y="517" width="0.4812%" height="15" fill="rgb(214,223,17)" fg:x="735" fg:w="6"/><text x="59.1915%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="58.9415%" y="501" width="0.4812%" height="15" fill="rgb(250,18,15)" fg:x="735" fg:w="6"/><text x="59.1915%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="58.9415%" y="485" width="0.4812%" height="15" fill="rgb(212,153,51)" fg:x="735" fg:w="6"/><text x="59.1915%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.3424%" y="469" width="0.0802%" height="15" fill="rgb(219,194,12)" fg:x="740" fg:w="1"/><text x="59.5924%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.3424%" y="453" width="0.0802%" height="15" fill="rgb(212,58,17)" fg:x="740" fg:w="1"/><text x="59.5924%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.3424%" y="437" width="0.0802%" height="15" fill="rgb(254,5,10)" fg:x="740" fg:w="1"/><text x="59.5924%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.3424%" y="421" width="0.0802%" height="15" fill="rgb(246,91,7)" fg:x="740" fg:w="1"/><text x="59.5924%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (30 samples, 2.41%)</title><rect x="57.0970%" y="613" width="2.4058%" height="15" fill="rgb(218,108,49)" fg:x="712" fg:w="30"/><text x="57.3470%" y="623.50">&lt;e..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (29 samples, 2.33%)</title><rect x="57.1772%" y="597" width="2.3256%" height="15" fill="rgb(238,123,20)" fg:x="713" fg:w="29"/><text x="57.4272%" y="607.50">&lt;..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="59.4226%" y="581" width="0.0802%" height="15" fill="rgb(231,69,23)" fg:x="741" fg:w="1"/><text x="59.6726%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5028%" y="613" width="0.0802%" height="15" fill="rgb(230,209,3)" fg:x="742" fg:w="1"/><text x="59.7528%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.5028%" y="597" width="0.0802%" height="15" fill="rgb(231,19,0)" fg:x="742" fg:w="1"/><text x="59.7528%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.5028%" y="581" width="0.0802%" height="15" fill="rgb(226,192,25)" fg:x="742" fg:w="1"/><text x="59.7528%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5028%" y="565" width="0.0802%" height="15" fill="rgb(223,175,53)" fg:x="742" fg:w="1"/><text x="59.7528%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5028%" y="549" width="0.0802%" height="15" fill="rgb(248,35,51)" fg:x="742" fg:w="1"/><text x="59.7528%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.5028%" y="533" width="0.0802%" height="15" fill="rgb(230,37,26)" fg:x="742" fg:w="1"/><text x="59.7528%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.5028%" y="517" width="0.0802%" height="15" fill="rgb(206,120,22)" fg:x="742" fg:w="1"/><text x="59.7528%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.5028%" y="501" width="0.0802%" height="15" fill="rgb(207,165,28)" fg:x="742" fg:w="1"/><text x="59.7528%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5028%" y="485" width="0.0802%" height="15" fill="rgb(226,23,46)" fg:x="742" fg:w="1"/><text x="59.7528%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5028%" y="469" width="0.0802%" height="15" fill="rgb(208,130,44)" fg:x="742" fg:w="1"/><text x="59.7528%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.5028%" y="453" width="0.0802%" height="15" fill="rgb(231,67,8)" fg:x="742" fg:w="1"/><text x="59.7528%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.5028%" y="437" width="0.0802%" height="15" fill="rgb(205,183,22)" fg:x="742" fg:w="1"/><text x="59.7528%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.5028%" y="421" width="0.0802%" height="15" fill="rgb(224,47,9)" fg:x="742" fg:w="1"/><text x="59.7528%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.5028%" y="405" width="0.0802%" height="15" fill="rgb(250,183,49)" fg:x="742" fg:w="1"/><text x="59.7528%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5028%" y="389" width="0.0802%" height="15" fill="rgb(220,151,39)" fg:x="742" fg:w="1"/><text x="59.7528%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.5830%" y="581" width="0.0802%" height="15" fill="rgb(220,118,20)" fg:x="743" fg:w="1"/><text x="59.8330%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (36 samples, 2.89%)</title><rect x="56.8565%" y="661" width="2.8869%" height="15" fill="rgb(231,65,51)" fg:x="709" fg:w="36"/><text x="57.1065%" y="671.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (33 samples, 2.65%)</title><rect x="57.0970%" y="645" width="2.6464%" height="15" fill="rgb(253,125,37)" fg:x="712" fg:w="33"/><text x="57.3470%" y="655.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (33 samples, 2.65%)</title><rect x="57.0970%" y="629" width="2.6464%" height="15" fill="rgb(232,102,6)" fg:x="712" fg:w="33"/><text x="57.3470%" y="639.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.5830%" y="613" width="0.1604%" height="15" fill="rgb(251,105,13)" fg:x="743" fg:w="2"/><text x="59.8330%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.5830%" y="597" width="0.1604%" height="15" fill="rgb(222,179,29)" fg:x="743" fg:w="2"/><text x="59.8330%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.6632%" y="581" width="0.0802%" height="15" fill="rgb(229,180,53)" fg:x="744" fg:w="1"/><text x="59.9132%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.6632%" y="565" width="0.0802%" height="15" fill="rgb(238,104,13)" fg:x="744" fg:w="1"/><text x="59.9132%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.6632%" y="549" width="0.0802%" height="15" fill="rgb(210,130,5)" fg:x="744" fg:w="1"/><text x="59.9132%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="59.7434%" y="613" width="0.0802%" height="15" fill="rgb(233,87,49)" fg:x="745" fg:w="1"/><text x="59.9934%" y="623.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="59.7434%" y="597" width="0.0802%" height="15" fill="rgb(243,34,9)" fg:x="745" fg:w="1"/><text x="59.9934%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.7434%" y="581" width="0.0802%" height="15" fill="rgb(235,225,10)" fg:x="745" fg:w="1"/><text x="59.9934%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="59.8236%" y="405" width="0.0802%" height="15" fill="rgb(212,0,30)" fg:x="746" fg:w="1"/><text x="60.0736%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="59.8236%" y="389" width="0.0802%" height="15" fill="rgb(211,177,0)" fg:x="746" fg:w="1"/><text x="60.0736%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="59.8236%" y="373" width="0.0802%" height="15" fill="rgb(225,220,11)" fg:x="746" fg:w="1"/><text x="60.0736%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="59.8236%" y="357" width="0.0802%" height="15" fill="rgb(215,10,13)" fg:x="746" fg:w="1"/><text x="60.0736%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.8236%" y="341" width="0.0802%" height="15" fill="rgb(240,177,14)" fg:x="746" fg:w="1"/><text x="60.0736%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.8236%" y="325" width="0.0802%" height="15" fill="rgb(243,7,39)" fg:x="746" fg:w="1"/><text x="60.0736%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="59.8236%" y="309" width="0.0802%" height="15" fill="rgb(212,99,0)" fg:x="746" fg:w="1"/><text x="60.0736%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="59.8236%" y="293" width="0.0802%" height="15" fill="rgb(225,162,48)" fg:x="746" fg:w="1"/><text x="60.0736%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="59.8236%" y="277" width="0.0802%" height="15" fill="rgb(246,16,25)" fg:x="746" fg:w="1"/><text x="60.0736%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="59.8236%" y="261" width="0.0802%" height="15" fill="rgb(220,150,2)" fg:x="746" fg:w="1"/><text x="60.0736%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="59.8236%" y="245" width="0.0802%" height="15" fill="rgb(237,113,11)" fg:x="746" fg:w="1"/><text x="60.0736%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="59.8236%" y="229" width="0.0802%" height="15" fill="rgb(236,70,20)" fg:x="746" fg:w="1"/><text x="60.0736%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="59.8236%" y="213" width="0.0802%" height="15" fill="rgb(234,94,7)" fg:x="746" fg:w="1"/><text x="60.0736%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="59.8236%" y="197" width="0.0802%" height="15" fill="rgb(250,221,0)" fg:x="746" fg:w="1"/><text x="60.0736%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="59.8236%" y="181" width="0.0802%" height="15" fill="rgb(245,149,46)" fg:x="746" fg:w="1"/><text x="60.0736%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="59.8236%" y="165" width="0.0802%" height="15" fill="rgb(215,37,27)" fg:x="746" fg:w="1"/><text x="60.0736%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="59.8236%" y="149" width="0.0802%" height="15" fill="rgb(232,65,3)" fg:x="746" fg:w="1"/><text x="60.0736%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="59.8236%" y="133" width="0.0802%" height="15" fill="rgb(214,2,16)" fg:x="746" fg:w="1"/><text x="60.0736%" y="143.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="59.8236%" y="117" width="0.0802%" height="15" fill="rgb(227,131,50)" fg:x="746" fg:w="1"/><text x="60.0736%" y="127.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (39 samples, 3.13%)</title><rect x="56.8565%" y="677" width="3.1275%" height="15" fill="rgb(247,131,45)" fg:x="709" fg:w="39"/><text x="57.1065%" y="687.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="59.7434%" y="661" width="0.2406%" height="15" fill="rgb(215,97,47)" fg:x="745" fg:w="3"/><text x="59.9934%" y="671.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="59.7434%" y="645" width="0.2406%" height="15" fill="rgb(233,143,12)" fg:x="745" fg:w="3"/><text x="59.9934%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="59.7434%" y="629" width="0.2406%" height="15" fill="rgb(222,57,17)" fg:x="745" fg:w="3"/><text x="59.9934%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="59.8236%" y="613" width="0.1604%" height="15" fill="rgb(214,119,38)" fg:x="746" fg:w="2"/><text x="60.0736%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="59.8236%" y="597" width="0.1604%" height="15" fill="rgb(217,28,47)" fg:x="746" fg:w="2"/><text x="60.0736%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="59.8236%" y="581" width="0.1604%" height="15" fill="rgb(231,14,52)" fg:x="746" fg:w="2"/><text x="60.0736%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="59.8236%" y="565" width="0.1604%" height="15" fill="rgb(220,158,18)" fg:x="746" fg:w="2"/><text x="60.0736%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="59.8236%" y="549" width="0.1604%" height="15" fill="rgb(222,143,46)" fg:x="746" fg:w="2"/><text x="60.0736%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="59.8236%" y="533" width="0.1604%" height="15" fill="rgb(227,165,5)" fg:x="746" fg:w="2"/><text x="60.0736%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="59.8236%" y="517" width="0.1604%" height="15" fill="rgb(216,222,49)" fg:x="746" fg:w="2"/><text x="60.0736%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="59.8236%" y="501" width="0.1604%" height="15" fill="rgb(238,73,39)" fg:x="746" fg:w="2"/><text x="60.0736%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="59.8236%" y="485" width="0.1604%" height="15" fill="rgb(252,115,9)" fg:x="746" fg:w="2"/><text x="60.0736%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="59.8236%" y="469" width="0.1604%" height="15" fill="rgb(238,202,4)" fg:x="746" fg:w="2"/><text x="60.0736%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="59.8236%" y="453" width="0.1604%" height="15" fill="rgb(252,153,44)" fg:x="746" fg:w="2"/><text x="60.0736%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="59.8236%" y="437" width="0.1604%" height="15" fill="rgb(235,128,27)" fg:x="746" fg:w="2"/><text x="60.0736%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="59.8236%" y="421" width="0.1604%" height="15" fill="rgb(221,121,47)" fg:x="746" fg:w="2"/><text x="60.0736%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.9038%" y="405" width="0.0802%" height="15" fill="rgb(247,211,47)" fg:x="747" fg:w="1"/><text x="60.1538%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.9038%" y="389" width="0.0802%" height="15" fill="rgb(252,47,49)" fg:x="747" fg:w="1"/><text x="60.1538%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="59.9038%" y="373" width="0.0802%" height="15" fill="rgb(219,119,53)" fg:x="747" fg:w="1"/><text x="60.1538%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="59.9038%" y="357" width="0.0802%" height="15" fill="rgb(243,165,53)" fg:x="747" fg:w="1"/><text x="60.1538%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="59.9038%" y="341" width="0.0802%" height="15" fill="rgb(230,12,35)" fg:x="747" fg:w="1"/><text x="60.1538%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="59.9038%" y="325" width="0.0802%" height="15" fill="rgb(239,57,49)" fg:x="747" fg:w="1"/><text x="60.1538%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.08%)</title><rect x="59.9038%" y="309" width="0.0802%" height="15" fill="rgb(231,154,7)" fg:x="747" fg:w="1"/><text x="60.1538%" y="319.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9840%" y="677" width="0.0802%" height="15" fill="rgb(248,81,34)" fg:x="748" fg:w="1"/><text x="60.2340%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9840%" y="661" width="0.0802%" height="15" fill="rgb(247,9,5)" fg:x="748" fg:w="1"/><text x="60.2340%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9840%" y="645" width="0.0802%" height="15" fill="rgb(228,172,27)" fg:x="748" fg:w="1"/><text x="60.2340%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.9840%" y="629" width="0.0802%" height="15" fill="rgb(230,57,44)" fg:x="748" fg:w="1"/><text x="60.2340%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.9840%" y="613" width="0.0802%" height="15" fill="rgb(249,35,22)" fg:x="748" fg:w="1"/><text x="60.2340%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.9840%" y="597" width="0.0802%" height="15" fill="rgb(250,137,27)" fg:x="748" fg:w="1"/><text x="60.2340%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.9840%" y="581" width="0.0802%" height="15" fill="rgb(251,57,31)" fg:x="748" fg:w="1"/><text x="60.2340%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.9840%" y="565" width="0.0802%" height="15" fill="rgb(238,60,0)" fg:x="748" fg:w="1"/><text x="60.2340%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.9840%" y="549" width="0.0802%" height="15" fill="rgb(242,185,39)" fg:x="748" fg:w="1"/><text x="60.2340%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.9840%" y="533" width="0.0802%" height="15" fill="rgb(240,63,43)" fg:x="748" fg:w="1"/><text x="60.2340%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.9840%" y="517" width="0.0802%" height="15" fill="rgb(236,155,6)" fg:x="748" fg:w="1"/><text x="60.2340%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.9840%" y="501" width="0.0802%" height="15" fill="rgb(215,11,29)" fg:x="748" fg:w="1"/><text x="60.2340%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.9840%" y="485" width="0.0802%" height="15" fill="rgb(228,180,48)" fg:x="748" fg:w="1"/><text x="60.2340%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="60.0642%" y="677" width="0.0802%" height="15" fill="rgb(241,102,12)" fg:x="749" fg:w="1"/><text x="60.3142%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.0642%" y="661" width="0.0802%" height="15" fill="rgb(246,213,4)" fg:x="749" fg:w="1"/><text x="60.3142%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="60.3047%" y="629" width="0.0802%" height="15" fill="rgb(218,134,35)" fg:x="752" fg:w="1"/><text x="60.5547%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="60.6255%" y="549" width="0.2406%" height="15" fill="rgb(251,117,35)" fg:x="756" fg:w="3"/><text x="60.8755%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (3 samples, 0.24%)</title><rect x="60.6255%" y="533" width="0.2406%" height="15" fill="rgb(206,156,45)" fg:x="756" fg:w="3"/><text x="60.8755%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.7859%" y="517" width="0.0802%" height="15" fill="rgb(218,52,27)" fg:x="758" fg:w="1"/><text x="61.0359%" y="527.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="60.8661%" y="549" width="0.0802%" height="15" fill="rgb(238,83,36)" fg:x="759" fg:w="1"/><text x="61.1161%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8661%" y="533" width="0.0802%" height="15" fill="rgb(218,53,43)" fg:x="759" fg:w="1"/><text x="61.1161%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8661%" y="517" width="0.0802%" height="15" fill="rgb(239,54,39)" fg:x="759" fg:w="1"/><text x="61.1161%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8661%" y="501" width="0.0802%" height="15" fill="rgb(212,198,13)" fg:x="759" fg:w="1"/><text x="61.1161%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.8661%" y="485" width="0.0802%" height="15" fill="rgb(234,54,46)" fg:x="759" fg:w="1"/><text x="61.1161%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.8661%" y="469" width="0.0802%" height="15" fill="rgb(217,120,7)" fg:x="759" fg:w="1"/><text x="61.1161%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.8661%" y="453" width="0.0802%" height="15" fill="rgb(246,39,15)" fg:x="759" fg:w="1"/><text x="61.1161%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8661%" y="437" width="0.0802%" height="15" fill="rgb(242,143,31)" fg:x="759" fg:w="1"/><text x="61.1161%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8661%" y="421" width="0.0802%" height="15" fill="rgb(252,60,24)" fg:x="759" fg:w="1"/><text x="61.1161%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.8661%" y="405" width="0.0802%" height="15" fill="rgb(249,220,7)" fg:x="759" fg:w="1"/><text x="61.1161%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.8661%" y="389" width="0.0802%" height="15" fill="rgb(236,67,13)" fg:x="759" fg:w="1"/><text x="61.1161%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.8661%" y="373" width="0.0802%" height="15" fill="rgb(210,62,39)" fg:x="759" fg:w="1"/><text x="61.1161%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.8661%" y="357" width="0.0802%" height="15" fill="rgb(219,122,53)" fg:x="759" fg:w="1"/><text x="61.1161%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8661%" y="341" width="0.0802%" height="15" fill="rgb(218,87,25)" fg:x="759" fg:w="1"/><text x="61.1161%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="61.0265%" y="517" width="0.0802%" height="15" fill="rgb(234,179,48)" fg:x="761" fg:w="1"/><text x="61.2765%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="61.0265%" y="501" width="0.0802%" height="15" fill="rgb(248,90,0)" fg:x="761" fg:w="1"/><text x="61.2765%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.0265%" y="485" width="0.0802%" height="15" fill="rgb(207,228,37)" fg:x="761" fg:w="1"/><text x="61.2765%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.0265%" y="469" width="0.0802%" height="15" fill="rgb(235,214,15)" fg:x="761" fg:w="1"/><text x="61.2765%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.0265%" y="453" width="0.0802%" height="15" fill="rgb(210,144,39)" fg:x="761" fg:w="1"/><text x="61.2765%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="61.1868%" y="501" width="0.0802%" height="15" fill="rgb(222,67,41)" fg:x="763" fg:w="1"/><text x="61.4368%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.1868%" y="485" width="0.0802%" height="15" fill="rgb(205,35,37)" fg:x="763" fg:w="1"/><text x="61.4368%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="61.1868%" y="469" width="0.0802%" height="15" fill="rgb(216,125,40)" fg:x="763" fg:w="1"/><text x="61.4368%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="61.3472%" y="485" width="0.3208%" height="15" fill="rgb(228,227,20)" fg:x="765" fg:w="4"/><text x="61.5972%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.5878%" y="469" width="0.0802%" height="15" fill="rgb(242,173,45)" fg:x="768" fg:w="1"/><text x="61.8378%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5878%" y="453" width="0.0802%" height="15" fill="rgb(215,79,24)" fg:x="768" fg:w="1"/><text x="61.8378%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5878%" y="437" width="0.0802%" height="15" fill="rgb(238,164,38)" fg:x="768" fg:w="1"/><text x="61.8378%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.5878%" y="421" width="0.0802%" height="15" fill="rgb(245,196,38)" fg:x="768" fg:w="1"/><text x="61.8378%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.5878%" y="405" width="0.0802%" height="15" fill="rgb(231,217,29)" fg:x="768" fg:w="1"/><text x="61.8378%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.5878%" y="389" width="0.0802%" height="15" fill="rgb(245,6,4)" fg:x="768" fg:w="1"/><text x="61.8378%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.5878%" y="373" width="0.0802%" height="15" fill="rgb(214,76,49)" fg:x="768" fg:w="1"/><text x="61.8378%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.5878%" y="357" width="0.0802%" height="15" fill="rgb(205,96,12)" fg:x="768" fg:w="1"/><text x="61.8378%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.5878%" y="341" width="0.0802%" height="15" fill="rgb(243,131,4)" fg:x="768" fg:w="1"/><text x="61.8378%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.5878%" y="325" width="0.0802%" height="15" fill="rgb(214,114,4)" fg:x="768" fg:w="1"/><text x="61.8378%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.5878%" y="309" width="0.0802%" height="15" fill="rgb(234,215,15)" fg:x="768" fg:w="1"/><text x="61.8378%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.5878%" y="293" width="0.0802%" height="15" fill="rgb(250,216,45)" fg:x="768" fg:w="1"/><text x="61.8378%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5878%" y="277" width="0.0802%" height="15" fill="rgb(236,128,4)" fg:x="768" fg:w="1"/><text x="61.8378%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.6680%" y="485" width="0.0802%" height="15" fill="rgb(234,50,33)" fg:x="769" fg:w="1"/><text x="61.9180%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.7482%" y="453" width="0.0802%" height="15" fill="rgb(253,131,37)" fg:x="770" fg:w="1"/><text x="61.9982%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.8284%" y="437" width="0.0802%" height="15" fill="rgb(218,55,27)" fg:x="771" fg:w="1"/><text x="62.0784%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="61.7482%" y="485" width="0.2406%" height="15" fill="rgb(241,220,28)" fg:x="770" fg:w="3"/><text x="61.9982%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="61.7482%" y="469" width="0.2406%" height="15" fill="rgb(241,90,48)" fg:x="770" fg:w="3"/><text x="61.9982%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="61.8284%" y="453" width="0.1604%" height="15" fill="rgb(216,43,37)" fg:x="771" fg:w="2"/><text x="62.0784%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.9086%" y="437" width="0.0802%" height="15" fill="rgb(207,173,9)" fg:x="772" fg:w="1"/><text x="62.1586%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.9086%" y="421" width="0.0802%" height="15" fill="rgb(240,126,30)" fg:x="772" fg:w="1"/><text x="62.1586%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.1492%" y="421" width="0.0802%" height="15" fill="rgb(228,178,53)" fg:x="775" fg:w="1"/><text x="62.3992%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.1492%" y="405" width="0.0802%" height="15" fill="rgb(217,33,4)" fg:x="775" fg:w="1"/><text x="62.3992%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.1492%" y="389" width="0.0802%" height="15" fill="rgb(206,124,34)" fg:x="775" fg:w="1"/><text x="62.3992%" y="399.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="62.2294%" y="421" width="0.0802%" height="15" fill="rgb(208,122,53)" fg:x="776" fg:w="1"/><text x="62.4794%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.3095%" y="421" width="0.0802%" height="15" fill="rgb(215,202,26)" fg:x="777" fg:w="1"/><text x="62.5595%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (20 samples, 1.60%)</title><rect x="61.1067%" y="517" width="1.6038%" height="15" fill="rgb(232,198,31)" fg:x="762" fg:w="20"/><text x="61.3567%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (18 samples, 1.44%)</title><rect x="61.2670%" y="501" width="1.4435%" height="15" fill="rgb(222,23,35)" fg:x="764" fg:w="18"/><text x="61.5170%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="61.9888%" y="485" width="0.7217%" height="15" fill="rgb(242,27,53)" fg:x="773" fg:w="9"/><text x="62.2388%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="61.9888%" y="469" width="0.7217%" height="15" fill="rgb(210,216,42)" fg:x="773" fg:w="9"/><text x="62.2388%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="61.9888%" y="453" width="0.7217%" height="15" fill="rgb(234,39,38)" fg:x="773" fg:w="9"/><text x="62.2388%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="61.9888%" y="437" width="0.7217%" height="15" fill="rgb(235,126,54)" fg:x="773" fg:w="9"/><text x="62.2388%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="62.3897%" y="421" width="0.3208%" height="15" fill="rgb(235,150,33)" fg:x="778" fg:w="4"/><text x="62.6397%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.3897%" y="405" width="0.3208%" height="15" fill="rgb(249,49,53)" fg:x="778" fg:w="4"/><text x="62.6397%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="62.5501%" y="389" width="0.1604%" height="15" fill="rgb(238,60,50)" fg:x="780" fg:w="2"/><text x="62.8001%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.6303%" y="373" width="0.0802%" height="15" fill="rgb(210,5,2)" fg:x="781" fg:w="1"/><text x="62.8803%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.8709%" y="453" width="0.2406%" height="15" fill="rgb(214,207,24)" fg:x="784" fg:w="3"/><text x="63.1209%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.9511%" y="437" width="0.1604%" height="15" fill="rgb(228,173,2)" fg:x="785" fg:w="2"/><text x="63.2011%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.9511%" y="421" width="0.1604%" height="15" fill="rgb(244,26,8)" fg:x="785" fg:w="2"/><text x="63.2011%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="62.9511%" y="405" width="0.1604%" height="15" fill="rgb(249,153,35)" fg:x="785" fg:w="2"/><text x="63.2011%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="62.9511%" y="389" width="0.1604%" height="15" fill="rgb(221,215,40)" fg:x="785" fg:w="2"/><text x="63.2011%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="62.9511%" y="373" width="0.1604%" height="15" fill="rgb(238,106,35)" fg:x="785" fg:w="2"/><text x="63.2011%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.9511%" y="357" width="0.1604%" height="15" fill="rgb(207,195,21)" fg:x="785" fg:w="2"/><text x="63.2011%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.9511%" y="341" width="0.1604%" height="15" fill="rgb(205,43,29)" fg:x="785" fg:w="2"/><text x="63.2011%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="62.9511%" y="325" width="0.1604%" height="15" fill="rgb(236,35,21)" fg:x="785" fg:w="2"/><text x="63.2011%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="62.9511%" y="309" width="0.1604%" height="15" fill="rgb(244,74,8)" fg:x="785" fg:w="2"/><text x="63.2011%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="62.9511%" y="293" width="0.1604%" height="15" fill="rgb(241,229,7)" fg:x="785" fg:w="2"/><text x="63.2011%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="62.9511%" y="277" width="0.1604%" height="15" fill="rgb(212,223,25)" fg:x="785" fg:w="2"/><text x="63.2011%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="62.9511%" y="261" width="0.1604%" height="15" fill="rgb(234,58,53)" fg:x="785" fg:w="2"/><text x="63.2011%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.1115%" y="453" width="0.0802%" height="15" fill="rgb(244,36,1)" fg:x="787" fg:w="1"/><text x="63.3615%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.1115%" y="437" width="0.0802%" height="15" fill="rgb(222,40,54)" fg:x="787" fg:w="1"/><text x="63.3615%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.1115%" y="421" width="0.0802%" height="15" fill="rgb(210,207,39)" fg:x="787" fg:w="1"/><text x="63.3615%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.1115%" y="405" width="0.0802%" height="15" fill="rgb(234,52,14)" fg:x="787" fg:w="1"/><text x="63.3615%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.1115%" y="389" width="0.0802%" height="15" fill="rgb(239,108,46)" fg:x="787" fg:w="1"/><text x="63.3615%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.1115%" y="373" width="0.0802%" height="15" fill="rgb(252,223,5)" fg:x="787" fg:w="1"/><text x="63.3615%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.1115%" y="357" width="0.0802%" height="15" fill="rgb(227,181,11)" fg:x="787" fg:w="1"/><text x="63.3615%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.1115%" y="341" width="0.0802%" height="15" fill="rgb(248,126,40)" fg:x="787" fg:w="1"/><text x="63.3615%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.1115%" y="325" width="0.0802%" height="15" fill="rgb(243,1,18)" fg:x="787" fg:w="1"/><text x="63.3615%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.1115%" y="309" width="0.0802%" height="15" fill="rgb(214,145,23)" fg:x="787" fg:w="1"/><text x="63.3615%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.1115%" y="293" width="0.0802%" height="15" fill="rgb(241,218,11)" fg:x="787" fg:w="1"/><text x="63.3615%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="63.1115%" y="277" width="0.0802%" height="15" fill="rgb(214,219,24)" fg:x="787" fg:w="1"/><text x="63.3615%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="63.1115%" y="261" width="0.0802%" height="15" fill="rgb(235,32,7)" fg:x="787" fg:w="1"/><text x="63.3615%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="62.8709%" y="485" width="0.4010%" height="15" fill="rgb(227,121,28)" fg:x="784" fg:w="5"/><text x="63.1209%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="62.8709%" y="469" width="0.4010%" height="15" fill="rgb(216,129,49)" fg:x="784" fg:w="5"/><text x="63.1209%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.1917%" y="453" width="0.0802%" height="15" fill="rgb(207,194,50)" fg:x="788" fg:w="1"/><text x="63.4417%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.2719%" y="485" width="0.0802%" height="15" fill="rgb(207,4,18)" fg:x="789" fg:w="1"/><text x="63.5219%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.3520%" y="437" width="0.0802%" height="15" fill="rgb(213,50,30)" fg:x="790" fg:w="1"/><text x="63.6020%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="63.3520%" y="485" width="0.1604%" height="15" fill="rgb(208,77,22)" fg:x="790" fg:w="2"/><text x="63.6020%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="63.3520%" y="469" width="0.1604%" height="15" fill="rgb(244,204,34)" fg:x="790" fg:w="2"/><text x="63.6020%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="63.3520%" y="453" width="0.1604%" height="15" fill="rgb(230,20,17)" fg:x="790" fg:w="2"/><text x="63.6020%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.4322%" y="437" width="0.0802%" height="15" fill="rgb(237,83,15)" fg:x="791" fg:w="1"/><text x="63.6822%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.4322%" y="421" width="0.0802%" height="15" fill="rgb(221,109,25)" fg:x="791" fg:w="1"/><text x="63.6822%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.5926%" y="421" width="0.0802%" height="15" fill="rgb(205,194,52)" fg:x="793" fg:w="1"/><text x="63.8426%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.5926%" y="405" width="0.0802%" height="15" fill="rgb(244,173,54)" fg:x="793" fg:w="1"/><text x="63.8426%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.6728%" y="421" width="0.0802%" height="15" fill="rgb(227,181,18)" fg:x="794" fg:w="1"/><text x="63.9228%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9936%" y="389" width="0.0802%" height="15" fill="rgb(238,36,30)" fg:x="798" fg:w="1"/><text x="64.2436%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="64.0738%" y="389" width="0.2406%" height="15" fill="rgb(254,85,0)" fg:x="799" fg:w="3"/><text x="64.3238%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (21 samples, 1.68%)</title><rect x="62.7105%" y="517" width="1.6840%" height="15" fill="rgb(247,63,33)" fg:x="782" fg:w="21"/><text x="62.9605%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (21 samples, 1.68%)</title><rect x="62.7105%" y="501" width="1.6840%" height="15" fill="rgb(220,7,54)" fg:x="782" fg:w="21"/><text x="62.9605%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="63.5124%" y="485" width="0.8821%" height="15" fill="rgb(238,227,21)" fg:x="792" fg:w="11"/><text x="63.7624%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="63.5124%" y="469" width="0.8821%" height="15" fill="rgb(237,29,31)" fg:x="792" fg:w="11"/><text x="63.7624%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.88%)</title><rect x="63.5124%" y="453" width="0.8821%" height="15" fill="rgb(211,21,50)" fg:x="792" fg:w="11"/><text x="63.7624%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="63.5124%" y="437" width="0.8821%" height="15" fill="rgb(239,119,2)" fg:x="792" fg:w="11"/><text x="63.7624%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="63.7530%" y="421" width="0.6415%" height="15" fill="rgb(250,2,39)" fg:x="795" fg:w="8"/><text x="64.0030%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="63.7530%" y="405" width="0.6415%" height="15" fill="rgb(244,46,53)" fg:x="795" fg:w="8"/><text x="64.0030%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.3144%" y="389" width="0.0802%" height="15" fill="rgb(209,21,19)" fg:x="802" fg:w="1"/><text x="64.5644%" y="399.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (44 samples, 3.53%)</title><rect x="61.0265%" y="533" width="3.5285%" height="15" fill="rgb(236,145,4)" fg:x="761" fg:w="44"/><text x="61.2765%" y="543.50">&lt;&amp;k..</text></g><g><title>plugins_core::looking::model::Unqualified::qualify (2 samples, 0.16%)</title><rect x="64.3945%" y="517" width="0.1604%" height="15" fill="rgb(220,133,36)" fg:x="803" fg:w="2"/><text x="64.6445%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.4747%" y="501" width="0.0802%" height="15" fill="rgb(244,18,3)" fg:x="804" fg:w="1"/><text x="64.7247%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="64.7153%" y="501" width="0.0802%" height="15" fill="rgb(232,171,48)" fg:x="807" fg:w="1"/><text x="64.9653%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.7955%" y="485" width="0.0802%" height="15" fill="rgb(223,223,53)" fg:x="808" fg:w="1"/><text x="65.0455%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.7955%" y="469" width="0.0802%" height="15" fill="rgb(246,92,13)" fg:x="808" fg:w="1"/><text x="65.0455%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.7955%" y="453" width="0.0802%" height="15" fill="rgb(229,171,10)" fg:x="808" fg:w="1"/><text x="65.0455%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.7955%" y="437" width="0.0802%" height="15" fill="rgb(213,131,26)" fg:x="808" fg:w="1"/><text x="65.0455%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.7955%" y="421" width="0.0802%" height="15" fill="rgb(242,87,54)" fg:x="808" fg:w="1"/><text x="65.0455%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7955%" y="405" width="0.0802%" height="15" fill="rgb(237,21,35)" fg:x="808" fg:w="1"/><text x="65.0455%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7955%" y="389" width="0.0802%" height="15" fill="rgb(253,13,47)" fg:x="808" fg:w="1"/><text x="65.0455%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.7955%" y="373" width="0.0802%" height="15" fill="rgb(215,122,49)" fg:x="808" fg:w="1"/><text x="65.0455%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.7955%" y="357" width="0.0802%" height="15" fill="rgb(209,179,30)" fg:x="808" fg:w="1"/><text x="65.0455%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.7955%" y="341" width="0.0802%" height="15" fill="rgb(235,100,24)" fg:x="808" fg:w="1"/><text x="65.0455%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.7955%" y="325" width="0.0802%" height="15" fill="rgb(209,67,24)" fg:x="808" fg:w="1"/><text x="65.0455%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7955%" y="309" width="0.0802%" height="15" fill="rgb(206,74,32)" fg:x="808" fg:w="1"/><text x="65.0455%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="64.8757%" y="293" width="0.0802%" height="15" fill="rgb(212,45,25)" fg:x="809" fg:w="1"/><text x="65.1257%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="64.8757%" y="277" width="0.0802%" height="15" fill="rgb(239,26,3)" fg:x="809" fg:w="1"/><text x="65.1257%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.8757%" y="261" width="0.0802%" height="15" fill="rgb(218,36,15)" fg:x="809" fg:w="1"/><text x="65.1257%" y="271.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="64.8757%" y="245" width="0.0802%" height="15" fill="rgb(206,108,24)" fg:x="809" fg:w="1"/><text x="65.1257%" y="255.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="64.8757%" y="229" width="0.0802%" height="15" fill="rgb(234,204,42)" fg:x="809" fg:w="1"/><text x="65.1257%" y="239.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="64.8757%" y="213" width="0.0802%" height="15" fill="rgb(229,2,11)" fg:x="809" fg:w="1"/><text x="65.1257%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.8757%" y="197" width="0.0802%" height="15" fill="rgb(221,20,48)" fg:x="809" fg:w="1"/><text x="65.1257%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.8757%" y="181" width="0.0802%" height="15" fill="rgb(244,164,10)" fg:x="809" fg:w="1"/><text x="65.1257%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="64.8757%" y="165" width="0.0802%" height="15" fill="rgb(243,229,2)" fg:x="809" fg:w="1"/><text x="65.1257%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="64.8757%" y="149" width="0.0802%" height="15" fill="rgb(232,131,37)" fg:x="809" fg:w="1"/><text x="65.1257%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="64.8757%" y="133" width="0.0802%" height="15" fill="rgb(217,156,11)" fg:x="809" fg:w="1"/><text x="65.1257%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="64.8757%" y="117" width="0.0802%" height="15" fill="rgb(239,99,48)" fg:x="809" fg:w="1"/><text x="65.1257%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="64.8757%" y="101" width="0.0802%" height="15" fill="rgb(231,209,9)" fg:x="809" fg:w="1"/><text x="65.1257%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="64.8757%" y="85" width="0.0802%" height="15" fill="rgb(254,97,27)" fg:x="809" fg:w="1"/><text x="65.1257%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="64.8757%" y="69" width="0.0802%" height="15" fill="rgb(223,151,38)" fg:x="809" fg:w="1"/><text x="65.1257%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="64.8757%" y="53" width="0.0802%" height="15" fill="rgb(219,206,35)" fg:x="809" fg:w="1"/><text x="65.1257%" y="63.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="64.8757%" y="37" width="0.0802%" height="15" fill="rgb(216,130,31)" fg:x="809" fg:w="1"/><text x="65.1257%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (6 samples, 0.48%)</title><rect x="64.5549%" y="533" width="0.4812%" height="15" fill="rgb(251,97,34)" fg:x="805" fg:w="6"/><text x="64.8049%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="64.6351%" y="517" width="0.4010%" height="15" fill="rgb(246,159,47)" fg:x="806" fg:w="5"/><text x="64.8851%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="64.7955%" y="501" width="0.2406%" height="15" fill="rgb(232,87,10)" fg:x="808" fg:w="3"/><text x="65.0455%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="64.8757%" y="485" width="0.1604%" height="15" fill="rgb(249,1,37)" fg:x="809" fg:w="2"/><text x="65.1257%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="64.8757%" y="469" width="0.1604%" height="15" fill="rgb(239,135,14)" fg:x="809" fg:w="2"/><text x="65.1257%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="64.8757%" y="453" width="0.1604%" height="15" fill="rgb(253,116,46)" fg:x="809" fg:w="2"/><text x="65.1257%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="64.8757%" y="437" width="0.1604%" height="15" fill="rgb(222,217,37)" fg:x="809" fg:w="2"/><text x="65.1257%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="64.8757%" y="421" width="0.1604%" height="15" fill="rgb(252,96,8)" fg:x="809" fg:w="2"/><text x="65.1257%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="64.8757%" y="405" width="0.1604%" height="15" fill="rgb(254,103,41)" fg:x="809" fg:w="2"/><text x="65.1257%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="64.8757%" y="389" width="0.1604%" height="15" fill="rgb(218,213,19)" fg:x="809" fg:w="2"/><text x="65.1257%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="64.8757%" y="373" width="0.1604%" height="15" fill="rgb(253,95,21)" fg:x="809" fg:w="2"/><text x="65.1257%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="64.8757%" y="357" width="0.1604%" height="15" fill="rgb(229,26,28)" fg:x="809" fg:w="2"/><text x="65.1257%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="64.8757%" y="341" width="0.1604%" height="15" fill="rgb(230,129,16)" fg:x="809" fg:w="2"/><text x="65.1257%" y="351.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="64.8757%" y="325" width="0.1604%" height="15" fill="rgb(236,126,17)" fg:x="809" fg:w="2"/><text x="65.1257%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="64.8757%" y="309" width="0.1604%" height="15" fill="rgb(209,33,33)" fg:x="809" fg:w="2"/><text x="65.1257%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.9559%" y="293" width="0.0802%" height="15" fill="rgb(227,85,29)" fg:x="810" fg:w="1"/><text x="65.2059%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.9559%" y="277" width="0.0802%" height="15" fill="rgb(241,53,46)" fg:x="810" fg:w="1"/><text x="65.2059%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="64.9559%" y="261" width="0.0802%" height="15" fill="rgb(228,167,53)" fg:x="810" fg:w="1"/><text x="65.2059%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="64.9559%" y="245" width="0.0802%" height="15" fill="rgb(238,195,45)" fg:x="810" fg:w="1"/><text x="65.2059%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="64.9559%" y="229" width="0.0802%" height="15" fill="rgb(252,124,45)" fg:x="810" fg:w="1"/><text x="65.2059%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="64.9559%" y="213" width="0.0802%" height="15" fill="rgb(251,38,35)" fg:x="810" fg:w="1"/><text x="65.2059%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="64.9559%" y="197" width="0.0802%" height="15" fill="rgb(227,33,2)" fg:x="810" fg:w="1"/><text x="65.2059%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="64.9559%" y="181" width="0.0802%" height="15" fill="rgb(223,157,46)" fg:x="810" fg:w="1"/><text x="65.2059%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="64.9559%" y="165" width="0.0802%" height="15" fill="rgb(222,78,41)" fg:x="810" fg:w="1"/><text x="65.2059%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="64.9559%" y="149" width="0.0802%" height="15" fill="rgb(248,176,11)" fg:x="810" fg:w="1"/><text x="65.2059%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="64.9559%" y="133" width="0.0802%" height="15" fill="rgb(241,221,18)" fg:x="810" fg:w="1"/><text x="65.2059%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="64.9559%" y="117" width="0.0802%" height="15" fill="rgb(218,85,22)" fg:x="810" fg:w="1"/><text x="65.2059%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="64.9559%" y="101" width="0.0802%" height="15" fill="rgb(222,223,7)" fg:x="810" fg:w="1"/><text x="65.2059%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="64.9559%" y="85" width="0.0802%" height="15" fill="rgb(254,59,39)" fg:x="810" fg:w="1"/><text x="65.2059%" y="95.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="64.9559%" y="69" width="0.0802%" height="15" fill="rgb(247,100,27)" fg:x="810" fg:w="1"/><text x="65.2059%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="65.0361%" y="533" width="0.0802%" height="15" fill="rgb(237,207,10)" fg:x="811" fg:w="1"/><text x="65.2861%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="65.1163%" y="533" width="0.0802%" height="15" fill="rgb(220,121,28)" fg:x="812" fg:w="1"/><text x="65.3663%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (2 samples, 0.16%)</title><rect x="65.3569%" y="517" width="0.1604%" height="15" fill="rgb(213,223,20)" fg:x="815" fg:w="2"/><text x="65.6069%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8380%" y="469" width="0.0802%" height="15" fill="rgb(205,121,27)" fg:x="821" fg:w="1"/><text x="66.0880%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.9182%" y="453" width="0.2406%" height="15" fill="rgb(253,24,53)" fg:x="822" fg:w="3"/><text x="66.1682%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.0786%" y="437" width="0.0802%" height="15" fill="rgb(224,224,47)" fg:x="824" fg:w="1"/><text x="66.3286%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.0786%" y="421" width="0.0802%" height="15" fill="rgb(250,125,36)" fg:x="824" fg:w="1"/><text x="66.3286%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.0786%" y="405" width="0.0802%" height="15" fill="rgb(240,144,38)" fg:x="824" fg:w="1"/><text x="66.3286%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.0786%" y="389" width="0.0802%" height="15" fill="rgb(250,15,50)" fg:x="824" fg:w="1"/><text x="66.3286%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.0786%" y="373" width="0.0802%" height="15" fill="rgb(210,24,26)" fg:x="824" fg:w="1"/><text x="66.3286%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.0786%" y="357" width="0.0802%" height="15" fill="rgb(234,53,53)" fg:x="824" fg:w="1"/><text x="66.3286%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.0786%" y="341" width="0.0802%" height="15" fill="rgb(208,108,28)" fg:x="824" fg:w="1"/><text x="66.3286%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.0786%" y="325" width="0.0802%" height="15" fill="rgb(227,143,7)" fg:x="824" fg:w="1"/><text x="66.3286%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.0786%" y="309" width="0.0802%" height="15" fill="rgb(238,189,38)" fg:x="824" fg:w="1"/><text x="66.3286%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.0786%" y="293" width="0.0802%" height="15" fill="rgb(222,69,15)" fg:x="824" fg:w="1"/><text x="66.3286%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.0786%" y="277" width="0.0802%" height="15" fill="rgb(213,169,7)" fg:x="824" fg:w="1"/><text x="66.3286%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.0786%" y="261" width="0.0802%" height="15" fill="rgb(251,219,4)" fg:x="824" fg:w="1"/><text x="66.3286%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (7 samples, 0.56%)</title><rect x="65.6776%" y="501" width="0.5613%" height="15" fill="rgb(241,55,40)" fg:x="819" fg:w="7"/><text x="65.9276%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="65.7578%" y="485" width="0.4812%" height="15" fill="rgb(243,57,30)" fg:x="820" fg:w="6"/><text x="66.0078%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="65.9182%" y="469" width="0.3208%" height="15" fill="rgb(234,50,30)" fg:x="822" fg:w="4"/><text x="66.1682%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.1588%" y="453" width="0.0802%" height="15" fill="rgb(239,23,42)" fg:x="825" fg:w="1"/><text x="66.4088%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.2390%" y="485" width="0.0802%" height="15" fill="rgb(217,38,19)" fg:x="826" fg:w="1"/><text x="66.4890%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="66.5597%" y="357" width="0.1604%" height="15" fill="rgb(215,179,16)" fg:x="830" fg:w="2"/><text x="66.8097%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="66.5597%" y="341" width="0.1604%" height="15" fill="rgb(254,21,37)" fg:x="830" fg:w="2"/><text x="66.8097%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.6399%" y="325" width="0.0802%" height="15" fill="rgb(219,207,48)" fg:x="831" fg:w="1"/><text x="66.8899%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.6399%" y="309" width="0.0802%" height="15" fill="rgb(227,225,41)" fg:x="831" fg:w="1"/><text x="66.8899%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="66.6399%" y="293" width="0.0802%" height="15" fill="rgb(223,130,1)" fg:x="831" fg:w="1"/><text x="66.8899%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.6399%" y="277" width="0.0802%" height="15" fill="rgb(249,54,42)" fg:x="831" fg:w="1"/><text x="66.8899%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.6399%" y="261" width="0.0802%" height="15" fill="rgb(248,69,25)" fg:x="831" fg:w="1"/><text x="66.8899%" y="271.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="66.7201%" y="341" width="0.1604%" height="15" fill="rgb(234,21,32)" fg:x="832" fg:w="2"/><text x="66.9701%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8805%" y="325" width="0.0802%" height="15" fill="rgb(252,136,6)" fg:x="834" fg:w="1"/><text x="67.1305%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8805%" y="309" width="0.0802%" height="15" fill="rgb(245,87,12)" fg:x="834" fg:w="1"/><text x="67.1305%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8805%" y="293" width="0.0802%" height="15" fill="rgb(208,12,15)" fg:x="834" fg:w="1"/><text x="67.1305%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (8 samples, 0.64%)</title><rect x="66.4796%" y="389" width="0.6415%" height="15" fill="rgb(250,98,2)" fg:x="829" fg:w="8"/><text x="66.7296%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="66.5597%" y="373" width="0.5613%" height="15" fill="rgb(205,213,15)" fg:x="830" fg:w="7"/><text x="66.8097%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="66.7201%" y="357" width="0.4010%" height="15" fill="rgb(248,192,44)" fg:x="832" fg:w="5"/><text x="66.9701%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="66.8805%" y="341" width="0.2406%" height="15" fill="rgb(221,89,17)" fg:x="834" fg:w="3"/><text x="67.1305%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.9607%" y="325" width="0.1604%" height="15" fill="rgb(209,55,3)" fg:x="835" fg:w="2"/><text x="67.2107%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.9607%" y="309" width="0.1604%" height="15" fill="rgb(247,23,45)" fg:x="835" fg:w="2"/><text x="67.2107%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="66.9607%" y="293" width="0.1604%" height="15" fill="rgb(235,152,23)" fg:x="835" fg:w="2"/><text x="67.2107%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.9607%" y="277" width="0.1604%" height="15" fill="rgb(244,63,13)" fg:x="835" fg:w="2"/><text x="67.2107%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.9607%" y="261" width="0.1604%" height="15" fill="rgb(227,30,37)" fg:x="835" fg:w="2"/><text x="67.2107%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.9607%" y="245" width="0.1604%" height="15" fill="rgb(224,49,42)" fg:x="835" fg:w="2"/><text x="67.2107%" y="255.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="67.0409%" y="229" width="0.0802%" height="15" fill="rgb(218,129,5)" fg:x="836" fg:w="1"/><text x="67.2909%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="67.6022%" y="293" width="0.1604%" height="15" fill="rgb(240,199,54)" fg:x="843" fg:w="2"/><text x="67.8522%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.6824%" y="277" width="0.0802%" height="15" fill="rgb(234,31,13)" fg:x="844" fg:w="1"/><text x="67.9324%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.7626%" y="293" width="0.0802%" height="15" fill="rgb(219,73,54)" fg:x="845" fg:w="1"/><text x="68.0126%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.7626%" y="277" width="0.0802%" height="15" fill="rgb(251,162,10)" fg:x="845" fg:w="1"/><text x="68.0126%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="67.7626%" y="261" width="0.0802%" height="15" fill="rgb(240,138,47)" fg:x="845" fg:w="1"/><text x="68.0126%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.9230%" y="229" width="0.1604%" height="15" fill="rgb(216,138,26)" fg:x="847" fg:w="2"/><text x="68.1730%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.0032%" y="213" width="0.0802%" height="15" fill="rgb(243,17,35)" fg:x="848" fg:w="1"/><text x="68.2532%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.0032%" y="197" width="0.0802%" height="15" fill="rgb(241,60,18)" fg:x="848" fg:w="1"/><text x="68.2532%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.0834%" y="213" width="0.1604%" height="15" fill="rgb(234,2,44)" fg:x="849" fg:w="2"/><text x="68.3334%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="67.9230%" y="245" width="0.4010%" height="15" fill="rgb(225,225,33)" fg:x="847" fg:w="5"/><text x="68.1730%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="68.0834%" y="229" width="0.2406%" height="15" fill="rgb(234,50,31)" fg:x="849" fg:w="3"/><text x="68.3334%" y="239.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="68.2438%" y="213" width="0.0802%" height="15" fill="rgb(249,6,25)" fg:x="851" fg:w="1"/><text x="68.4938%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3240%" y="213" width="0.0802%" height="15" fill="rgb(241,5,17)" fg:x="852" fg:w="1"/><text x="68.5740%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3240%" y="197" width="0.0802%" height="15" fill="rgb(207,116,10)" fg:x="852" fg:w="1"/><text x="68.5740%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3240%" y="181" width="0.0802%" height="15" fill="rgb(222,128,18)" fg:x="852" fg:w="1"/><text x="68.5740%" y="191.50"></text></g><g><title>serde_json::de::from_trait (17 samples, 1.36%)</title><rect x="67.1211%" y="373" width="1.3633%" height="15" fill="rgb(229,109,25)" fg:x="837" fg:w="17"/><text x="67.3711%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16 samples, 1.28%)</title><rect x="67.2013%" y="357" width="1.2831%" height="15" fill="rgb(222,102,25)" fg:x="838" fg:w="16"/><text x="67.4513%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.28%)</title><rect x="67.2013%" y="341" width="1.2831%" height="15" fill="rgb(239,211,5)" fg:x="838" fg:w="16"/><text x="67.4513%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15 samples, 1.20%)</title><rect x="67.2815%" y="325" width="1.2029%" height="15" fill="rgb(223,136,26)" fg:x="839" fg:w="15"/><text x="67.5315%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="67.4419%" y="309" width="1.0425%" height="15" fill="rgb(227,30,15)" fg:x="841" fg:w="13"/><text x="67.6919%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="67.8428%" y="293" width="0.6415%" height="15" fill="rgb(247,76,4)" fg:x="846" fg:w="8"/><text x="68.0928%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="67.8428%" y="277" width="0.6415%" height="15" fill="rgb(245,38,48)" fg:x="846" fg:w="8"/><text x="68.0928%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="67.8428%" y="261" width="0.6415%" height="15" fill="rgb(210,220,14)" fg:x="846" fg:w="8"/><text x="68.0928%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="68.3240%" y="245" width="0.1604%" height="15" fill="rgb(224,60,51)" fg:x="852" fg:w="2"/><text x="68.5740%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.3240%" y="229" width="0.1604%" height="15" fill="rgb(212,133,49)" fg:x="852" fg:w="2"/><text x="68.5740%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.4042%" y="213" width="0.0802%" height="15" fill="rgb(231,39,22)" fg:x="853" fg:w="1"/><text x="68.6542%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4042%" y="197" width="0.0802%" height="15" fill="rgb(236,173,22)" fg:x="853" fg:w="1"/><text x="68.6542%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.4844%" y="341" width="0.0802%" height="15" fill="rgb(210,70,0)" fg:x="854" fg:w="1"/><text x="68.7344%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.7249%" y="229" width="0.0802%" height="15" fill="rgb(215,170,11)" fg:x="857" fg:w="1"/><text x="68.9749%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.7249%" y="213" width="0.0802%" height="15" fill="rgb(220,154,28)" fg:x="857" fg:w="1"/><text x="68.9749%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.7249%" y="197" width="0.0802%" height="15" fill="rgb(240,160,41)" fg:x="857" fg:w="1"/><text x="68.9749%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.7249%" y="181" width="0.0802%" height="15" fill="rgb(243,215,41)" fg:x="857" fg:w="1"/><text x="68.9749%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.7249%" y="165" width="0.0802%" height="15" fill="rgb(214,208,31)" fg:x="857" fg:w="1"/><text x="68.9749%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="68.8051%" y="229" width="0.1604%" height="15" fill="rgb(247,57,22)" fg:x="858" fg:w="2"/><text x="69.0551%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.8051%" y="213" width="0.1604%" height="15" fill="rgb(228,73,52)" fg:x="858" fg:w="2"/><text x="69.0551%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.8051%" y="197" width="0.1604%" height="15" fill="rgb(252,60,9)" fg:x="858" fg:w="2"/><text x="69.0551%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="68.8853%" y="181" width="0.0802%" height="15" fill="rgb(233,9,51)" fg:x="859" fg:w="1"/><text x="69.1353%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.8853%" y="165" width="0.0802%" height="15" fill="rgb(223,67,14)" fg:x="859" fg:w="1"/><text x="69.1353%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8853%" y="149" width="0.0802%" height="15" fill="rgb(222,86,2)" fg:x="859" fg:w="1"/><text x="69.1353%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="68.7249%" y="261" width="0.4812%" height="15" fill="rgb(243,58,54)" fg:x="857" fg:w="6"/><text x="68.9749%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="68.7249%" y="245" width="0.4812%" height="15" fill="rgb(210,200,39)" fg:x="857" fg:w="6"/><text x="68.9749%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="68.9655%" y="229" width="0.2406%" height="15" fill="rgb(238,135,9)" fg:x="860" fg:w="3"/><text x="69.2155%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1259%" y="213" width="0.0802%" height="15" fill="rgb(232,179,7)" fg:x="862" fg:w="1"/><text x="69.3759%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="69.2061%" y="197" width="0.0802%" height="15" fill="rgb(245,65,41)" fg:x="863" fg:w="1"/><text x="69.4561%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.2061%" y="181" width="0.0802%" height="15" fill="rgb(227,43,8)" fg:x="863" fg:w="1"/><text x="69.4561%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="69.2863%" y="197" width="0.0802%" height="15" fill="rgb(235,91,14)" fg:x="864" fg:w="1"/><text x="69.5363%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="69.2863%" y="181" width="0.0802%" height="15" fill="rgb(235,219,31)" fg:x="864" fg:w="1"/><text x="69.5363%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.2863%" y="165" width="0.0802%" height="15" fill="rgb(227,121,25)" fg:x="864" fg:w="1"/><text x="69.5363%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="69.2061%" y="245" width="0.2406%" height="15" fill="rgb(254,129,24)" fg:x="863" fg:w="3"/><text x="69.4561%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="69.2061%" y="229" width="0.2406%" height="15" fill="rgb(226,144,49)" fg:x="863" fg:w="3"/><text x="69.4561%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.2061%" y="213" width="0.2406%" height="15" fill="rgb(214,187,32)" fg:x="863" fg:w="3"/><text x="69.4561%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.3665%" y="197" width="0.0802%" height="15" fill="rgb(243,129,46)" fg:x="865" fg:w="1"/><text x="69.6165%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.3665%" y="181" width="0.0802%" height="15" fill="rgb(221,185,35)" fg:x="865" fg:w="1"/><text x="69.6165%" y="191.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="69.3665%" y="165" width="0.0802%" height="15" fill="rgb(205,0,32)" fg:x="865" fg:w="1"/><text x="69.6165%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="68.5646%" y="293" width="0.9623%" height="15" fill="rgb(229,179,12)" fg:x="855" fg:w="12"/><text x="68.8146%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="68.5646%" y="277" width="0.9623%" height="15" fill="rgb(252,107,19)" fg:x="855" fg:w="12"/><text x="68.8146%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (4 samples, 0.32%)</title><rect x="69.2061%" y="261" width="0.3208%" height="15" fill="rgb(220,95,27)" fg:x="863" fg:w="4"/><text x="69.4561%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="69.4467%" y="245" width="0.0802%" height="15" fill="rgb(240,113,40)" fg:x="866" fg:w="1"/><text x="69.6967%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4467%" y="229" width="0.0802%" height="15" fill="rgb(208,4,43)" fg:x="866" fg:w="1"/><text x="69.6967%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.5269%" y="293" width="0.0802%" height="15" fill="rgb(247,189,30)" fg:x="867" fg:w="1"/><text x="69.7769%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6071%" y="245" width="0.0802%" height="15" fill="rgb(231,157,17)" fg:x="868" fg:w="1"/><text x="69.8571%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="69.6071%" y="293" width="0.1604%" height="15" fill="rgb(224,139,6)" fg:x="868" fg:w="2"/><text x="69.8571%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="69.6071%" y="277" width="0.1604%" height="15" fill="rgb(223,83,16)" fg:x="868" fg:w="2"/><text x="69.8571%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="69.6071%" y="261" width="0.1604%" height="15" fill="rgb(232,211,20)" fg:x="868" fg:w="2"/><text x="69.8571%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.6872%" y="245" width="0.0802%" height="15" fill="rgb(225,203,35)" fg:x="869" fg:w="1"/><text x="69.9372%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.7674%" y="261" width="0.0802%" height="15" fill="rgb(215,211,44)" fg:x="870" fg:w="1"/><text x="70.0174%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.7674%" y="245" width="0.0802%" height="15" fill="rgb(248,213,26)" fg:x="870" fg:w="1"/><text x="70.0174%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="69.8476%" y="245" width="0.0802%" height="15" fill="rgb(214,23,52)" fg:x="871" fg:w="1"/><text x="70.0976%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.8476%" y="229" width="0.0802%" height="15" fill="rgb(225,173,50)" fg:x="871" fg:w="1"/><text x="70.0976%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.9278%" y="213" width="0.0802%" height="15" fill="rgb(206,150,22)" fg:x="872" fg:w="1"/><text x="70.1778%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (19 samples, 1.52%)</title><rect x="68.5646%" y="341" width="1.5237%" height="15" fill="rgb(239,64,23)" fg:x="855" fg:w="19"/><text x="68.8146%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (19 samples, 1.52%)</title><rect x="68.5646%" y="325" width="1.5237%" height="15" fill="rgb(242,50,38)" fg:x="855" fg:w="19"/><text x="68.8146%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (19 samples, 1.52%)</title><rect x="68.5646%" y="309" width="1.5237%" height="15" fill="rgb(217,91,15)" fg:x="855" fg:w="19"/><text x="68.8146%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="69.7674%" y="293" width="0.3208%" height="15" fill="rgb(230,172,6)" fg:x="870" fg:w="4"/><text x="70.0174%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="69.7674%" y="277" width="0.3208%" height="15" fill="rgb(221,98,26)" fg:x="870" fg:w="4"/><text x="70.0174%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="69.8476%" y="261" width="0.2406%" height="15" fill="rgb(227,210,45)" fg:x="871" fg:w="3"/><text x="70.0976%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.9278%" y="245" width="0.1604%" height="15" fill="rgb(206,8,30)" fg:x="872" fg:w="2"/><text x="70.1778%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.9278%" y="229" width="0.1604%" height="15" fill="rgb(241,219,17)" fg:x="872" fg:w="2"/><text x="70.1778%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.0080%" y="213" width="0.0802%" height="15" fill="rgb(247,121,29)" fg:x="873" fg:w="1"/><text x="70.2580%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (38 samples, 3.05%)</title><rect x="67.1211%" y="389" width="3.0473%" height="15" fill="rgb(219,169,49)" fg:x="837" fg:w="38"/><text x="67.3711%" y="399.50">&lt;ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (21 samples, 1.68%)</title><rect x="68.4844%" y="373" width="1.6840%" height="15" fill="rgb(253,49,49)" fg:x="854" fg:w="21"/><text x="68.7344%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (21 samples, 1.68%)</title><rect x="68.4844%" y="357" width="1.6840%" height="15" fill="rgb(217,178,3)" fg:x="854" fg:w="21"/><text x="68.7344%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.0882%" y="341" width="0.0802%" height="15" fill="rgb(234,73,37)" fg:x="874" fg:w="1"/><text x="70.3382%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.0882%" y="325" width="0.0802%" height="15" fill="rgb(250,98,22)" fg:x="874" fg:w="1"/><text x="70.3382%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.0882%" y="309" width="0.0802%" height="15" fill="rgb(220,108,37)" fg:x="874" fg:w="1"/><text x="70.3382%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.1684%" y="389" width="0.0802%" height="15" fill="rgb(225,168,10)" fg:x="875" fg:w="1"/><text x="70.4184%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.1684%" y="373" width="0.0802%" height="15" fill="rgb(247,215,21)" fg:x="875" fg:w="1"/><text x="70.4184%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.1684%" y="357" width="0.0802%" height="15" fill="rgb(253,189,31)" fg:x="875" fg:w="1"/><text x="70.4184%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1684%" y="341" width="0.0802%" height="15" fill="rgb(241,54,22)" fg:x="875" fg:w="1"/><text x="70.4184%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.1684%" y="325" width="0.0802%" height="15" fill="rgb(211,87,4)" fg:x="875" fg:w="1"/><text x="70.4184%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1684%" y="309" width="0.0802%" height="15" fill="rgb(245,112,24)" fg:x="875" fg:w="1"/><text x="70.4184%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.1684%" y="293" width="0.0802%" height="15" fill="rgb(235,190,41)" fg:x="875" fg:w="1"/><text x="70.4184%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1684%" y="277" width="0.0802%" height="15" fill="rgb(214,89,8)" fg:x="875" fg:w="1"/><text x="70.4184%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.1684%" y="261" width="0.0802%" height="15" fill="rgb(249,155,35)" fg:x="875" fg:w="1"/><text x="70.4184%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.3288%" y="357" width="0.0802%" height="15" fill="rgb(249,88,26)" fg:x="877" fg:w="1"/><text x="70.5788%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (53 samples, 4.25%)</title><rect x="66.4796%" y="421" width="4.2502%" height="15" fill="rgb(232,56,8)" fg:x="829" fg:w="53"/><text x="66.7296%" y="431.50">&lt;engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (53 samples, 4.25%)</title><rect x="66.4796%" y="405" width="4.2502%" height="15" fill="rgb(240,95,3)" fg:x="829" fg:w="53"/><text x="66.7296%" y="415.50">engin..</text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.48%)</title><rect x="70.2486%" y="389" width="0.4812%" height="15" fill="rgb(222,44,28)" fg:x="876" fg:w="6"/><text x="70.4986%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="70.3288%" y="373" width="0.4010%" height="15" fill="rgb(234,16,30)" fg:x="877" fg:w="5"/><text x="70.5788%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="70.4090%" y="357" width="0.3208%" height="15" fill="rgb(223,26,17)" fg:x="878" fg:w="4"/><text x="70.6590%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="70.4090%" y="341" width="0.3208%" height="15" fill="rgb(239,187,47)" fg:x="878" fg:w="4"/><text x="70.6590%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="70.4892%" y="325" width="0.2406%" height="15" fill="rgb(247,102,50)" fg:x="879" fg:w="3"/><text x="70.7392%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (57 samples, 4.57%)</title><rect x="66.2390%" y="501" width="4.5710%" height="15" fill="rgb(231,216,22)" fg:x="826" fg:w="57"/><text x="66.4890%" y="511.50">&lt;plug..</text></g><g><title>core::iter::adapters::try_process (56 samples, 4.49%)</title><rect x="66.3192%" y="485" width="4.4908%" height="15" fill="rgb(216,201,26)" fg:x="827" fg:w="56"/><text x="66.5692%" y="495.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 4.49%)</title><rect x="66.3192%" y="469" width="4.4908%" height="15" fill="rgb(214,186,23)" fg:x="827" fg:w="56"/><text x="66.5692%" y="479.50">&lt;allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (56 samples, 4.49%)</title><rect x="66.3192%" y="453" width="4.4908%" height="15" fill="rgb(235,184,4)" fg:x="827" fg:w="56"/><text x="66.5692%" y="463.50">&lt;core..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (55 samples, 4.41%)</title><rect x="66.3994%" y="437" width="4.4106%" height="15" fill="rgb(244,46,17)" fg:x="828" fg:w="55"/><text x="66.6494%" y="447.50">&lt;engi..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.7298%" y="421" width="0.0802%" height="15" fill="rgb(248,74,46)" fg:x="882" fg:w="1"/><text x="70.9798%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8099%" y="501" width="0.0802%" height="15" fill="rgb(243,79,5)" fg:x="883" fg:w="1"/><text x="71.0599%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.0505%" y="469" width="0.0802%" height="15" fill="rgb(213,148,1)" fg:x="886" fg:w="1"/><text x="71.3005%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.1307%" y="469" width="0.0802%" height="15" fill="rgb(221,30,0)" fg:x="887" fg:w="1"/><text x="71.3807%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.2109%" y="469" width="0.0802%" height="15" fill="rgb(207,85,29)" fg:x="888" fg:w="1"/><text x="71.4609%" y="479.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (137 samples, 10.99%)</title><rect x="60.6255%" y="565" width="10.9864%" height="15" fill="rgb(239,31,46)" fg:x="756" fg:w="137"/><text x="60.8755%" y="575.50">&lt;plugins_core::l..</text></g><g><title>plugins_core::looking::model::new_area_observation (133 samples, 10.67%)</title><rect x="60.9463%" y="549" width="10.6656%" height="15" fill="rgb(219,6,1)" fg:x="760" fg:w="133"/><text x="61.1963%" y="559.50">plugins_core::lo..</text></g><g><title>kernel::model::entry::Entry::scope (80 samples, 6.42%)</title><rect x="65.1965%" y="533" width="6.4154%" height="15" fill="rgb(229,90,29)" fg:x="813" fg:w="80"/><text x="65.4465%" y="543.50">kernel::..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (76 samples, 6.09%)</title><rect x="65.5172%" y="517" width="6.0946%" height="15" fill="rgb(242,201,42)" fg:x="817" fg:w="76"/><text x="65.7672%" y="527.50">kernel::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="70.8901%" y="501" width="0.7217%" height="15" fill="rgb(243,80,54)" fg:x="884" fg:w="9"/><text x="71.1401%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="70.8901%" y="485" width="0.7217%" height="15" fill="rgb(223,166,15)" fg:x="884" fg:w="9"/><text x="71.1401%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="71.2911%" y="469" width="0.3208%" height="15" fill="rgb(238,78,27)" fg:x="889" fg:w="4"/><text x="71.5411%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="71.2911%" y="453" width="0.3208%" height="15" fill="rgb(235,28,43)" fg:x="889" fg:w="4"/><text x="71.5411%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="71.3713%" y="437" width="0.2406%" height="15" fill="rgb(240,210,28)" fg:x="890" fg:w="3"/><text x="71.6213%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="71.3713%" y="421" width="0.2406%" height="15" fill="rgb(253,6,46)" fg:x="890" fg:w="3"/><text x="71.6213%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="71.3713%" y="405" width="0.2406%" height="15" fill="rgb(250,159,47)" fg:x="890" fg:w="3"/><text x="71.6213%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.5317%" y="389" width="0.0802%" height="15" fill="rgb(216,139,2)" fg:x="892" fg:w="1"/><text x="71.7817%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.5317%" y="373" width="0.0802%" height="15" fill="rgb(221,124,44)" fg:x="892" fg:w="1"/><text x="71.7817%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (187 samples, 15.00%)</title><rect x="56.6961%" y="741" width="14.9960%" height="15" fill="rgb(205,37,22)" fg:x="707" fg:w="187"/><text x="56.9461%" y="751.50">&lt;engine::session::Sessi..</text></g><g><title>kernel::plugins::mw::apply_middleware (187 samples, 15.00%)</title><rect x="56.6961%" y="725" width="14.9960%" height="15" fill="rgb(250,55,8)" fg:x="707" fg:w="187"/><text x="56.9461%" y="735.50">kernel::plugins::mw::ap..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (186 samples, 14.92%)</title><rect x="56.7763%" y="709" width="14.9158%" height="15" fill="rgb(215,83,48)" fg:x="708" fg:w="186"/><text x="57.0263%" y="719.50">kernel::plugins::mw::Mi..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (185 samples, 14.84%)</title><rect x="56.8565%" y="693" width="14.8356%" height="15" fill="rgb(253,2,32)" fg:x="709" fg:w="185"/><text x="57.1065%" y="703.50">&lt;engine::session::Expan..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (144 samples, 11.55%)</title><rect x="60.1443%" y="677" width="11.5477%" height="15" fill="rgb(236,67,28)" fg:x="750" fg:w="144"/><text x="60.3943%" y="687.50">kernel::plugins::..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (143 samples, 11.47%)</title><rect x="60.2245%" y="661" width="11.4675%" height="15" fill="rgb(252,55,15)" fg:x="751" fg:w="143"/><text x="60.4745%" y="671.50">&lt;plugins_dynlib::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (142 samples, 11.39%)</title><rect x="60.3047%" y="645" width="11.3873%" height="15" fill="rgb(243,173,17)" fg:x="752" fg:w="142"/><text x="60.5547%" y="655.50">kernel::plugins::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (141 samples, 11.31%)</title><rect x="60.3849%" y="629" width="11.3071%" height="15" fill="rgb(215,212,13)" fg:x="753" fg:w="141"/><text x="60.6349%" y="639.50">core::ops::functi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (141 samples, 11.31%)</title><rect x="60.3849%" y="613" width="11.3071%" height="15" fill="rgb(253,176,6)" fg:x="753" fg:w="141"/><text x="60.6349%" y="623.50">kernel::plugins::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (141 samples, 11.31%)</title><rect x="60.3849%" y="597" width="11.3071%" height="15" fill="rgb(236,105,26)" fg:x="753" fg:w="141"/><text x="60.6349%" y="607.50">core::ops::functi..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (139 samples, 11.15%)</title><rect x="60.5453%" y="581" width="11.1468%" height="15" fill="rgb(239,226,32)" fg:x="755" fg:w="139"/><text x="60.7953%" y="591.50">&lt;engine::session..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.6119%" y="565" width="0.0802%" height="15" fill="rgb(236,104,51)" fg:x="893" fg:w="1"/><text x="71.8619%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="71.6119%" y="549" width="0.0802%" height="15" fill="rgb(220,172,33)" fg:x="893" fg:w="1"/><text x="71.8619%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.6119%" y="533" width="0.0802%" height="15" fill="rgb(224,182,25)" fg:x="893" fg:w="1"/><text x="71.8619%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="71.7723%" y="709" width="0.1604%" height="15" fill="rgb(236,184,24)" fg:x="895" fg:w="2"/><text x="72.0223%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.8524%" y="693" width="0.0802%" height="15" fill="rgb(241,221,14)" fg:x="896" fg:w="1"/><text x="72.1024%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.0128%" y="693" width="0.0802%" height="15" fill="rgb(227,146,5)" fg:x="898" fg:w="1"/><text x="72.2628%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.3336%" y="565" width="0.0802%" height="15" fill="rgb(214,15,23)" fg:x="902" fg:w="1"/><text x="72.5836%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="72.1732%" y="661" width="0.4010%" height="15" fill="rgb(233,157,31)" fg:x="900" fg:w="5"/><text x="72.4232%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="72.1732%" y="645" width="0.4010%" height="15" fill="rgb(211,27,52)" fg:x="900" fg:w="5"/><text x="72.4232%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="72.2534%" y="629" width="0.3208%" height="15" fill="rgb(212,223,15)" fg:x="901" fg:w="4"/><text x="72.5034%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="72.2534%" y="613" width="0.3208%" height="15" fill="rgb(254,211,0)" fg:x="901" fg:w="4"/><text x="72.5034%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="72.2534%" y="597" width="0.3208%" height="15" fill="rgb(205,43,38)" fg:x="901" fg:w="4"/><text x="72.5034%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="72.2534%" y="581" width="0.3208%" height="15" fill="rgb(242,206,46)" fg:x="901" fg:w="4"/><text x="72.5034%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.4138%" y="565" width="0.1604%" height="15" fill="rgb(220,221,12)" fg:x="903" fg:w="2"/><text x="72.6638%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.4138%" y="549" width="0.1604%" height="15" fill="rgb(217,156,35)" fg:x="903" fg:w="2"/><text x="72.6638%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.4940%" y="533" width="0.0802%" height="15" fill="rgb(207,181,49)" fg:x="904" fg:w="1"/><text x="72.7440%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="72.6544%" y="645" width="0.0802%" height="15" fill="rgb(235,103,47)" fg:x="906" fg:w="1"/><text x="72.9044%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.6544%" y="629" width="0.0802%" height="15" fill="rgb(222,63,28)" fg:x="906" fg:w="1"/><text x="72.9044%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (10 samples, 0.80%)</title><rect x="72.0930%" y="693" width="0.8019%" height="15" fill="rgb(244,137,21)" fg:x="899" fg:w="10"/><text x="72.3430%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="72.1732%" y="677" width="0.7217%" height="15" fill="rgb(228,35,27)" fg:x="900" fg:w="9"/><text x="72.4232%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="72.5742%" y="661" width="0.3208%" height="15" fill="rgb(226,191,41)" fg:x="905" fg:w="4"/><text x="72.8242%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="72.7346%" y="645" width="0.1604%" height="15" fill="rgb(210,154,3)" fg:x="907" fg:w="2"/><text x="72.9846%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.7346%" y="629" width="0.1604%" height="15" fill="rgb(216,60,49)" fg:x="907" fg:w="2"/><text x="72.9846%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.7346%" y="613" width="0.1604%" height="15" fill="rgb(226,17,20)" fg:x="907" fg:w="2"/><text x="72.9846%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8148%" y="597" width="0.0802%" height="15" fill="rgb(206,115,35)" fg:x="908" fg:w="1"/><text x="73.0648%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.8949%" y="629" width="0.0802%" height="15" fill="rgb(227,88,1)" fg:x="909" fg:w="1"/><text x="73.1449%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.9751%" y="629" width="0.0802%" height="15" fill="rgb(230,222,24)" fg:x="910" fg:w="1"/><text x="73.2251%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.0553%" y="597" width="0.0802%" height="15" fill="rgb(214,124,32)" fg:x="911" fg:w="1"/><text x="73.3053%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0553%" y="581" width="0.0802%" height="15" fill="rgb(240,41,36)" fg:x="911" fg:w="1"/><text x="73.3053%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1355%" y="597" width="0.0802%" height="15" fill="rgb(221,17,52)" fg:x="912" fg:w="1"/><text x="73.3855%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.2959%" y="565" width="0.0802%" height="15" fill="rgb(252,70,16)" fg:x="914" fg:w="1"/><text x="73.5459%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.5365%" y="533" width="0.1604%" height="15" fill="rgb(250,177,4)" fg:x="917" fg:w="2"/><text x="73.7865%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.6167%" y="517" width="0.0802%" height="15" fill="rgb(240,188,47)" fg:x="918" fg:w="1"/><text x="73.8667%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="73.6969%" y="517" width="0.0802%" height="15" fill="rgb(215,92,12)" fg:x="919" fg:w="1"/><text x="73.9469%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.7771%" y="501" width="0.0802%" height="15" fill="rgb(242,110,29)" fg:x="920" fg:w="1"/><text x="74.0271%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="73.7771%" y="485" width="0.0802%" height="15" fill="rgb(208,211,26)" fg:x="920" fg:w="1"/><text x="74.0271%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.8573%" y="501" width="0.0802%" height="15" fill="rgb(244,147,6)" fg:x="921" fg:w="1"/><text x="74.1073%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="73.4563%" y="549" width="0.5613%" height="15" fill="rgb(211,130,42)" fg:x="916" fg:w="7"/><text x="73.7063%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="73.6969%" y="533" width="0.3208%" height="15" fill="rgb(220,63,1)" fg:x="919" fg:w="4"/><text x="73.9469%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="73.7771%" y="517" width="0.2406%" height="15" fill="rgb(241,212,30)" fg:x="920" fg:w="3"/><text x="74.0271%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.9374%" y="501" width="0.0802%" height="15" fill="rgb(233,153,17)" fg:x="922" fg:w="1"/><text x="74.1874%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="73.9374%" y="485" width="0.0802%" height="15" fill="rgb(236,3,10)" fg:x="922" fg:w="1"/><text x="74.1874%" y="495.50"></text></g><g><title>serde_json::de::from_trait (15 samples, 1.20%)</title><rect x="72.8949%" y="677" width="1.2029%" height="15" fill="rgb(232,41,21)" fg:x="909" fg:w="15"/><text x="73.1449%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15 samples, 1.20%)</title><rect x="72.8949%" y="661" width="1.2029%" height="15" fill="rgb(206,63,51)" fg:x="909" fg:w="15"/><text x="73.1449%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.20%)</title><rect x="72.8949%" y="645" width="1.2029%" height="15" fill="rgb(250,214,3)" fg:x="909" fg:w="15"/><text x="73.1449%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.04%)</title><rect x="73.0553%" y="629" width="1.0425%" height="15" fill="rgb(254,89,27)" fg:x="911" fg:w="13"/><text x="73.3053%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="73.0553%" y="613" width="1.0425%" height="15" fill="rgb(249,41,14)" fg:x="911" fg:w="13"/><text x="73.3053%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="73.2157%" y="597" width="0.8821%" height="15" fill="rgb(221,196,51)" fg:x="913" fg:w="11"/><text x="73.4657%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="73.2157%" y="581" width="0.8821%" height="15" fill="rgb(214,116,26)" fg:x="913" fg:w="11"/><text x="73.4657%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="73.3761%" y="565" width="0.7217%" height="15" fill="rgb(236,67,7)" fg:x="915" fg:w="9"/><text x="73.6261%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.0176%" y="549" width="0.0802%" height="15" fill="rgb(253,179,32)" fg:x="923" fg:w="1"/><text x="74.2676%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.0176%" y="533" width="0.0802%" height="15" fill="rgb(218,33,15)" fg:x="923" fg:w="1"/><text x="74.2676%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0176%" y="517" width="0.0802%" height="15" fill="rgb(217,202,41)" fg:x="923" fg:w="1"/><text x="74.2676%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0176%" y="501" width="0.0802%" height="15" fill="rgb(234,133,5)" fg:x="923" fg:w="1"/><text x="74.2676%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0176%" y="485" width="0.0802%" height="15" fill="rgb(240,47,40)" fg:x="923" fg:w="1"/><text x="74.2676%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.1780%" y="645" width="0.0802%" height="15" fill="rgb(234,166,26)" fg:x="925" fg:w="1"/><text x="74.4280%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.2582%" y="645" width="0.0802%" height="15" fill="rgb(244,125,51)" fg:x="926" fg:w="1"/><text x="74.5082%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.4186%" y="533" width="0.0802%" height="15" fill="rgb(229,171,11)" fg:x="928" fg:w="1"/><text x="74.6686%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="74.4186%" y="517" width="0.0802%" height="15" fill="rgb(224,38,45)" fg:x="928" fg:w="1"/><text x="74.6686%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="74.4186%" y="501" width="0.0802%" height="15" fill="rgb(237,27,7)" fg:x="928" fg:w="1"/><text x="74.6686%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="74.4186%" y="565" width="0.1604%" height="15" fill="rgb(216,52,7)" fg:x="928" fg:w="2"/><text x="74.6686%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.4186%" y="549" width="0.1604%" height="15" fill="rgb(243,11,11)" fg:x="928" fg:w="2"/><text x="74.6686%" y="559.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.4988%" y="533" width="0.0802%" height="15" fill="rgb(253,167,20)" fg:x="929" fg:w="1"/><text x="74.7488%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.4988%" y="517" width="0.0802%" height="15" fill="rgb(215,207,5)" fg:x="929" fg:w="1"/><text x="74.7488%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.4988%" y="501" width="0.0802%" height="15" fill="rgb(252,127,31)" fg:x="929" fg:w="1"/><text x="74.7488%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.5790%" y="549" width="0.0802%" height="15" fill="rgb(209,106,27)" fg:x="930" fg:w="1"/><text x="74.8290%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.5790%" y="533" width="0.0802%" height="15" fill="rgb(214,220,18)" fg:x="930" fg:w="1"/><text x="74.8290%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.5790%" y="517" width="0.0802%" height="15" fill="rgb(237,89,12)" fg:x="930" fg:w="1"/><text x="74.8290%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.5790%" y="501" width="0.0802%" height="15" fill="rgb(209,167,36)" fg:x="930" fg:w="1"/><text x="74.8290%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.5790%" y="485" width="0.0802%" height="15" fill="rgb(243,45,22)" fg:x="930" fg:w="1"/><text x="74.8290%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="74.5790%" y="469" width="0.0802%" height="15" fill="rgb(239,2,46)" fg:x="930" fg:w="1"/><text x="74.8290%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="74.5790%" y="453" width="0.0802%" height="15" fill="rgb(241,101,0)" fg:x="930" fg:w="1"/><text x="74.8290%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="74.3384%" y="597" width="0.4010%" height="15" fill="rgb(244,34,31)" fg:x="927" fg:w="5"/><text x="74.5884%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="74.3384%" y="581" width="0.4010%" height="15" fill="rgb(248,23,22)" fg:x="927" fg:w="5"/><text x="74.5884%" y="591.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="74.5790%" y="565" width="0.1604%" height="15" fill="rgb(218,27,48)" fg:x="930" fg:w="2"/><text x="74.8290%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="74.6592%" y="549" width="0.0802%" height="15" fill="rgb(232,78,1)" fg:x="931" fg:w="1"/><text x="74.9092%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6592%" y="533" width="0.0802%" height="15" fill="rgb(233,169,12)" fg:x="931" fg:w="1"/><text x="74.9092%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.8196%" y="549" width="0.0802%" height="15" fill="rgb(225,222,54)" fg:x="933" fg:w="1"/><text x="75.0696%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="74.7394%" y="597" width="0.2406%" height="15" fill="rgb(245,126,29)" fg:x="932" fg:w="3"/><text x="74.9894%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="74.7394%" y="581" width="0.2406%" height="15" fill="rgb(241,63,48)" fg:x="932" fg:w="3"/><text x="74.9894%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="74.8196%" y="565" width="0.1604%" height="15" fill="rgb(235,126,38)" fg:x="933" fg:w="2"/><text x="75.0696%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.8998%" y="549" width="0.0802%" height="15" fill="rgb(232,96,49)" fg:x="934" fg:w="1"/><text x="75.1498%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.8998%" y="533" width="0.0802%" height="15" fill="rgb(211,146,40)" fg:x="934" fg:w="1"/><text x="75.1498%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="74.9800%" y="565" width="0.1604%" height="15" fill="rgb(247,93,44)" fg:x="935" fg:w="2"/><text x="75.2300%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="74.9800%" y="549" width="0.1604%" height="15" fill="rgb(251,41,49)" fg:x="935" fg:w="2"/><text x="75.2300%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.2205%" y="517" width="0.0802%" height="15" fill="rgb(218,155,12)" fg:x="938" fg:w="1"/><text x="75.4705%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.2205%" y="501" width="0.0802%" height="15" fill="rgb(221,161,30)" fg:x="938" fg:w="1"/><text x="75.4705%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.2205%" y="485" width="0.0802%" height="15" fill="rgb(221,179,11)" fg:x="938" fg:w="1"/><text x="75.4705%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.04%)</title><rect x="74.3384%" y="645" width="1.0425%" height="15" fill="rgb(224,170,48)" fg:x="927" fg:w="13"/><text x="74.5884%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="74.3384%" y="629" width="1.0425%" height="15" fill="rgb(223,117,5)" fg:x="927" fg:w="13"/><text x="74.5884%" y="639.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (13 samples, 1.04%)</title><rect x="74.3384%" y="613" width="1.0425%" height="15" fill="rgb(209,52,20)" fg:x="927" fg:w="13"/><text x="74.5884%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="74.9800%" y="597" width="0.4010%" height="15" fill="rgb(209,19,41)" fg:x="935" fg:w="5"/><text x="75.2300%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="74.9800%" y="581" width="0.4010%" height="15" fill="rgb(210,177,12)" fg:x="935" fg:w="5"/><text x="75.2300%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="75.1403%" y="565" width="0.2406%" height="15" fill="rgb(211,159,37)" fg:x="937" fg:w="3"/><text x="75.3903%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.1403%" y="549" width="0.2406%" height="15" fill="rgb(209,20,2)" fg:x="937" fg:w="3"/><text x="75.3903%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.1403%" y="533" width="0.2406%" height="15" fill="rgb(244,3,46)" fg:x="937" fg:w="3"/><text x="75.3903%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.3007%" y="517" width="0.0802%" height="15" fill="rgb(220,94,38)" fg:x="939" fg:w="1"/><text x="75.5507%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.3007%" y="501" width="0.0802%" height="15" fill="rgb(253,14,31)" fg:x="939" fg:w="1"/><text x="75.5507%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3007%" y="485" width="0.0802%" height="15" fill="rgb(234,176,13)" fg:x="939" fg:w="1"/><text x="75.5507%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.3809%" y="613" width="0.0802%" height="15" fill="rgb(218,62,25)" fg:x="940" fg:w="1"/><text x="75.6309%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.3809%" y="597" width="0.0802%" height="15" fill="rgb(216,124,40)" fg:x="940" fg:w="1"/><text x="75.6309%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (33 samples, 2.65%)</title><rect x="72.8949%" y="693" width="2.6464%" height="15" fill="rgb(228,170,12)" fg:x="909" fg:w="33"/><text x="73.1449%" y="703.50">&lt;k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (18 samples, 1.44%)</title><rect x="74.0978%" y="677" width="1.4435%" height="15" fill="rgb(231,226,5)" fg:x="924" fg:w="18"/><text x="74.3478%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (18 samples, 1.44%)</title><rect x="74.0978%" y="661" width="1.4435%" height="15" fill="rgb(237,122,22)" fg:x="924" fg:w="18"/><text x="74.3478%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.3809%" y="645" width="0.1604%" height="15" fill="rgb(209,185,25)" fg:x="940" fg:w="2"/><text x="75.6309%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.3809%" y="629" width="0.1604%" height="15" fill="rgb(228,200,32)" fg:x="940" fg:w="2"/><text x="75.6309%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.4611%" y="613" width="0.0802%" height="15" fill="rgb(217,140,10)" fg:x="941" fg:w="1"/><text x="75.7111%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5413%" y="677" width="0.0802%" height="15" fill="rgb(253,17,24)" fg:x="942" fg:w="1"/><text x="75.7913%" y="687.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="75.6215%" y="677" width="0.0802%" height="15" fill="rgb(212,61,6)" fg:x="943" fg:w="1"/><text x="75.8715%" y="687.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="75.7017%" y="661" width="0.0802%" height="15" fill="rgb(205,14,25)" fg:x="944" fg:w="1"/><text x="75.9517%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.7819%" y="597" width="0.0802%" height="15" fill="rgb(232,69,41)" fg:x="945" fg:w="1"/><text x="76.0319%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.7819%" y="581" width="0.0802%" height="15" fill="rgb(241,106,47)" fg:x="945" fg:w="1"/><text x="76.0319%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="75.5413%" y="693" width="0.4010%" height="15" fill="rgb(210,213,53)" fg:x="942" fg:w="5"/><text x="75.7913%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="75.7017%" y="677" width="0.2406%" height="15" fill="rgb(253,175,27)" fg:x="944" fg:w="3"/><text x="75.9517%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.7819%" y="661" width="0.1604%" height="15" fill="rgb(211,171,24)" fg:x="945" fg:w="2"/><text x="76.0319%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7819%" y="645" width="0.1604%" height="15" fill="rgb(229,80,7)" fg:x="945" fg:w="2"/><text x="76.0319%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="75.7819%" y="629" width="0.1604%" height="15" fill="rgb(212,46,39)" fg:x="945" fg:w="2"/><text x="76.0319%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7819%" y="613" width="0.1604%" height="15" fill="rgb(240,80,45)" fg:x="945" fg:w="2"/><text x="76.0319%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.8621%" y="597" width="0.0802%" height="15" fill="rgb(253,177,40)" fg:x="946" fg:w="1"/><text x="76.1121%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8621%" y="581" width="0.0802%" height="15" fill="rgb(249,200,15)" fg:x="946" fg:w="1"/><text x="76.1121%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (54 samples, 4.33%)</title><rect x="71.6921%" y="725" width="4.3304%" height="15" fill="rgb(217,78,26)" fg:x="894" fg:w="54"/><text x="71.9421%" y="735.50">&lt;engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (51 samples, 4.09%)</title><rect x="71.9326%" y="709" width="4.0898%" height="15" fill="rgb(254,151,32)" fg:x="897" fg:w="51"/><text x="72.1826%" y="719.50">engi..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="75.9423%" y="693" width="0.0802%" height="15" fill="rgb(226,165,27)" fg:x="947" fg:w="1"/><text x="76.1923%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9423%" y="677" width="0.0802%" height="15" fill="rgb(250,206,4)" fg:x="947" fg:w="1"/><text x="76.1923%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (56 samples, 4.49%)</title><rect x="71.6921%" y="741" width="4.4908%" height="15" fill="rgb(231,229,27)" fg:x="894" fg:w="56"/><text x="71.9421%" y="751.50">&lt;engi..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="76.0225%" y="725" width="0.1604%" height="15" fill="rgb(239,217,8)" fg:x="948" fg:w="2"/><text x="76.2725%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="76.0225%" y="709" width="0.1604%" height="15" fill="rgb(225,204,27)" fg:x="948" fg:w="2"/><text x="76.2725%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="76.0225%" y="693" width="0.1604%" height="15" fill="rgb(230,56,32)" fg:x="948" fg:w="2"/><text x="76.2725%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="76.0225%" y="677" width="0.1604%" height="15" fill="rgb(222,56,27)" fg:x="948" fg:w="2"/><text x="76.2725%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="76.0225%" y="661" width="0.1604%" height="15" fill="rgb(253,108,27)" fg:x="948" fg:w="2"/><text x="76.2725%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="76.0225%" y="645" width="0.1604%" height="15" fill="rgb(212,87,36)" fg:x="948" fg:w="2"/><text x="76.2725%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="76.0225%" y="629" width="0.1604%" height="15" fill="rgb(247,82,36)" fg:x="948" fg:w="2"/><text x="76.2725%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="76.0225%" y="613" width="0.1604%" height="15" fill="rgb(222,143,9)" fg:x="948" fg:w="2"/><text x="76.2725%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="76.0225%" y="597" width="0.1604%" height="15" fill="rgb(238,162,48)" fg:x="948" fg:w="2"/><text x="76.2725%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="76.0225%" y="581" width="0.1604%" height="15" fill="rgb(221,59,43)" fg:x="948" fg:w="2"/><text x="76.2725%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="76.0225%" y="565" width="0.1604%" height="15" fill="rgb(205,166,41)" fg:x="948" fg:w="2"/><text x="76.2725%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="76.0225%" y="549" width="0.1604%" height="15" fill="rgb(241,186,40)" fg:x="948" fg:w="2"/><text x="76.2725%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.0225%" y="533" width="0.1604%" height="15" fill="rgb(216,119,35)" fg:x="948" fg:w="2"/><text x="76.2725%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.0225%" y="517" width="0.1604%" height="15" fill="rgb(208,68,38)" fg:x="948" fg:w="2"/><text x="76.2725%" y="527.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="76.0225%" y="501" width="0.1604%" height="15" fill="rgb(217,113,1)" fg:x="948" fg:w="2"/><text x="76.2725%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="76.0225%" y="485" width="0.1604%" height="15" fill="rgb(242,153,3)" fg:x="948" fg:w="2"/><text x="76.2725%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="76.0225%" y="469" width="0.1604%" height="15" fill="rgb(229,76,35)" fg:x="948" fg:w="2"/><text x="76.2725%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="76.0225%" y="453" width="0.1604%" height="15" fill="rgb(229,125,34)" fg:x="948" fg:w="2"/><text x="76.2725%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="76.0225%" y="437" width="0.1604%" height="15" fill="rgb(238,179,36)" fg:x="948" fg:w="2"/><text x="76.2725%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="76.0225%" y="421" width="0.1604%" height="15" fill="rgb(244,183,19)" fg:x="948" fg:w="2"/><text x="76.2725%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="76.0225%" y="405" width="0.1604%" height="15" fill="rgb(216,85,49)" fg:x="948" fg:w="2"/><text x="76.2725%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="76.0225%" y="389" width="0.1604%" height="15" fill="rgb(208,161,47)" fg:x="948" fg:w="2"/><text x="76.2725%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="76.0225%" y="373" width="0.1604%" height="15" fill="rgb(233,210,18)" fg:x="948" fg:w="2"/><text x="76.2725%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="76.0225%" y="357" width="0.1604%" height="15" fill="rgb(205,104,42)" fg:x="948" fg:w="2"/><text x="76.2725%" y="367.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="76.1828%" y="741" width="0.0802%" height="15" fill="rgb(248,90,43)" fg:x="950" fg:w="1"/><text x="76.4328%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="76.1828%" y="725" width="0.0802%" height="15" fill="rgb(206,198,11)" fg:x="950" fg:w="1"/><text x="76.4328%" y="735.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="76.1828%" y="709" width="0.0802%" height="15" fill="rgb(239,165,27)" fg:x="950" fg:w="1"/><text x="76.4328%" y="719.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="76.1828%" y="693" width="0.0802%" height="15" fill="rgb(246,44,32)" fg:x="950" fg:w="1"/><text x="76.4328%" y="703.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="76.1828%" y="677" width="0.0802%" height="15" fill="rgb(252,65,42)" fg:x="950" fg:w="1"/><text x="76.4328%" y="687.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="76.1828%" y="661" width="0.0802%" height="15" fill="rgb(246,197,18)" fg:x="950" fg:w="1"/><text x="76.4328%" y="671.50"></text></g><g><title>plugins_core::library::parser::spaces (1 samples, 0.08%)</title><rect x="76.1828%" y="645" width="0.0802%" height="15" fill="rgb(216,192,4)" fg:x="950" fg:w="1"/><text x="76.4328%" y="655.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (2 samples, 0.16%)</title><rect x="76.2630%" y="741" width="0.1604%" height="15" fill="rgb(208,117,10)" fg:x="951" fg:w="2"/><text x="76.5130%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.4234%" y="725" width="0.0802%" height="15" fill="rgb(240,61,47)" fg:x="953" fg:w="1"/><text x="76.6734%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="76.5036%" y="693" width="0.0802%" height="15" fill="rgb(228,178,21)" fg:x="954" fg:w="1"/><text x="76.7536%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.6640%" y="661" width="0.0802%" height="15" fill="rgb(219,96,54)" fg:x="956" fg:w="1"/><text x="76.9140%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6640%" y="645" width="0.0802%" height="15" fill="rgb(250,177,24)" fg:x="956" fg:w="1"/><text x="76.9140%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7442%" y="629" width="0.0802%" height="15" fill="rgb(242,154,46)" fg:x="957" fg:w="1"/><text x="76.9942%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.7442%" y="613" width="0.0802%" height="15" fill="rgb(226,176,29)" fg:x="957" fg:w="1"/><text x="76.9942%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="76.7442%" y="597" width="0.0802%" height="15" fill="rgb(226,29,2)" fg:x="957" fg:w="1"/><text x="76.9942%" y="607.50"></text></g><g><title>engine::users::model::username_to_key (6 samples, 0.48%)</title><rect x="76.4234%" y="741" width="0.4812%" height="15" fill="rgb(237,104,14)" fg:x="953" fg:w="6"/><text x="76.6734%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="76.5036%" y="725" width="0.4010%" height="15" fill="rgb(245,207,31)" fg:x="954" fg:w="5"/><text x="76.7536%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="76.5036%" y="709" width="0.4010%" height="15" fill="rgb(229,211,45)" fg:x="954" fg:w="5"/><text x="76.7536%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="76.5838%" y="693" width="0.3208%" height="15" fill="rgb(229,113,15)" fg:x="955" fg:w="4"/><text x="76.8338%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="76.5838%" y="677" width="0.3208%" height="15" fill="rgb(237,147,15)" fg:x="955" fg:w="4"/><text x="76.8338%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="76.7442%" y="661" width="0.1604%" height="15" fill="rgb(244,120,12)" fg:x="957" fg:w="2"/><text x="76.9942%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.7442%" y="645" width="0.1604%" height="15" fill="rgb(205,120,12)" fg:x="957" fg:w="2"/><text x="76.9942%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="76.8244%" y="629" width="0.0802%" height="15" fill="rgb(231,26,45)" fg:x="958" fg:w="1"/><text x="77.0744%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (960 samples, 76.98%)</title><rect x="0.0000%" y="821" width="76.9848%" height="15" fill="rgb(246,98,1)" fg:x="0" fg:w="960"/><text x="0.2500%" y="831.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (960 samples, 76.98%)</title><rect x="0.0000%" y="805" width="76.9848%" height="15" fill="rgb(207,68,45)" fg:x="0" fg:w="960"/><text x="0.2500%" y="815.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (960 samples, 76.98%)</title><rect x="0.0000%" y="789" width="76.9848%" height="15" fill="rgb(231,27,38)" fg:x="0" fg:w="960"/><text x="0.2500%" y="799.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (254 samples, 20.37%)</title><rect x="56.6159%" y="773" width="20.3689%" height="15" fill="rgb(214,223,3)" fg:x="706" fg:w="254"/><text x="56.8659%" y="783.50">engine::session::Session::evalua..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (254 samples, 20.37%)</title><rect x="56.6159%" y="757" width="20.3689%" height="15" fill="rgb(228,195,46)" fg:x="706" fg:w="254"/><text x="56.8659%" y="767.50">engine::session::Session::evalua..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="76.9046%" y="741" width="0.0802%" height="15" fill="rgb(231,100,42)" fg:x="959" fg:w="1"/><text x="77.1546%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.9848%" y="741" width="0.0802%" height="15" fill="rgb(236,53,4)" fg:x="960" fg:w="1"/><text x="77.2348%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.9848%" y="725" width="0.0802%" height="15" fill="rgb(230,152,12)" fg:x="960" fg:w="1"/><text x="77.2348%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="76.9848%" y="757" width="0.1604%" height="15" fill="rgb(226,101,19)" fg:x="960" fg:w="2"/><text x="77.2348%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.0650%" y="741" width="0.0802%" height="15" fill="rgb(250,149,32)" fg:x="961" fg:w="1"/><text x="77.3150%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.2253%" y="645" width="0.0802%" height="15" fill="rgb(232,178,12)" fg:x="963" fg:w="1"/><text x="77.4753%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.2253%" y="629" width="0.0802%" height="15" fill="rgb(246,151,17)" fg:x="963" fg:w="1"/><text x="77.4753%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.2253%" y="613" width="0.0802%" height="15" fill="rgb(252,17,51)" fg:x="963" fg:w="1"/><text x="77.4753%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.3055%" y="645" width="0.0802%" height="15" fill="rgb(250,207,23)" fg:x="964" fg:w="1"/><text x="77.5555%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.3055%" y="629" width="0.0802%" height="15" fill="rgb(205,27,5)" fg:x="964" fg:w="1"/><text x="77.5555%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="76.9848%" y="773" width="0.6415%" height="15" fill="rgb(224,32,19)" fg:x="960" fg:w="8"/><text x="77.2348%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (6 samples, 0.48%)</title><rect x="77.1451%" y="757" width="0.4812%" height="15" fill="rgb(247,214,40)" fg:x="962" fg:w="6"/><text x="77.3951%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="77.1451%" y="741" width="0.4812%" height="15" fill="rgb(239,199,17)" fg:x="962" fg:w="6"/><text x="77.3951%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (6 samples, 0.48%)</title><rect x="77.1451%" y="725" width="0.4812%" height="15" fill="rgb(251,159,9)" fg:x="962" fg:w="6"/><text x="77.3951%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="77.2253%" y="709" width="0.4010%" height="15" fill="rgb(225,78,32)" fg:x="963" fg:w="5"/><text x="77.4753%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="77.2253%" y="693" width="0.4010%" height="15" fill="rgb(206,97,47)" fg:x="963" fg:w="5"/><text x="77.4753%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="77.2253%" y="677" width="0.4010%" height="15" fill="rgb(227,107,4)" fg:x="963" fg:w="5"/><text x="77.4753%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="77.2253%" y="661" width="0.4010%" height="15" fill="rgb(241,146,50)" fg:x="963" fg:w="5"/><text x="77.4753%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="77.3857%" y="645" width="0.2406%" height="15" fill="rgb(232,92,30)" fg:x="965" fg:w="3"/><text x="77.6357%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="77.4659%" y="629" width="0.1604%" height="15" fill="rgb(222,0,40)" fg:x="966" fg:w="2"/><text x="77.7159%" y="639.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="77.6263%" y="661" width="0.0802%" height="15" fill="rgb(219,54,33)" fg:x="968" fg:w="1"/><text x="77.8763%" y="671.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="77.6263%" y="645" width="0.0802%" height="15" fill="rgb(226,209,28)" fg:x="968" fg:w="1"/><text x="77.8763%" y="655.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="77.6263%" y="629" width="0.0802%" height="15" fill="rgb(254,205,35)" fg:x="968" fg:w="1"/><text x="77.8763%" y="639.50"></text></g><g><title>libloading::safe::Library::new (5 samples, 0.40%)</title><rect x="77.6263%" y="677" width="0.4010%" height="15" fill="rgb(230,159,3)" fg:x="968" fg:w="5"/><text x="77.8763%" y="687.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="77.7065%" y="661" width="0.3208%" height="15" fill="rgb(232,190,24)" fg:x="969" fg:w="4"/><text x="77.9565%" y="671.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="77.7065%" y="645" width="0.3208%" height="15" fill="rgb(217,227,44)" fg:x="969" fg:w="4"/><text x="77.9565%" y="655.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="77.7065%" y="629" width="0.3208%" height="15" fill="rgb(236,211,1)" fg:x="969" fg:w="4"/><text x="77.9565%" y="639.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="77.7065%" y="613" width="0.3208%" height="15" fill="rgb(250,127,46)" fg:x="969" fg:w="4"/><text x="77.9565%" y="623.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="77.7065%" y="597" width="0.3208%" height="15" fill="rgb(229,213,6)" fg:x="969" fg:w="4"/><text x="77.9565%" y="607.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.48%)</title><rect x="77.6263%" y="709" width="0.4812%" height="15" fill="rgb(237,15,36)" fg:x="968" fg:w="6"/><text x="77.8763%" y="719.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.48%)</title><rect x="77.6263%" y="693" width="0.4812%" height="15" fill="rgb(213,131,41)" fg:x="968" fg:w="6"/><text x="77.8763%" y="703.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="78.0273%" y="677" width="0.0802%" height="15" fill="rgb(225,82,44)" fg:x="973" fg:w="1"/><text x="78.2773%" y="687.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="78.0273%" y="661" width="0.0802%" height="15" fill="rgb(249,42,11)" fg:x="973" fg:w="1"/><text x="78.2773%" y="671.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (7 samples, 0.56%)</title><rect x="77.6263%" y="773" width="0.5613%" height="15" fill="rgb(253,11,29)" fg:x="968" fg:w="7"/><text x="77.8763%" y="783.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (7 samples, 0.56%)</title><rect x="77.6263%" y="757" width="0.5613%" height="15" fill="rgb(206,8,54)" fg:x="968" fg:w="7"/><text x="77.8763%" y="767.50"></text></g><g><title>engine::session::Session::new (7 samples, 0.56%)</title><rect x="77.6263%" y="741" width="0.5613%" height="15" fill="rgb(222,186,2)" fg:x="968" fg:w="7"/><text x="77.8763%" y="751.50"></text></g><g><title>engine::session::Session::initialize (7 samples, 0.56%)</title><rect x="77.6263%" y="725" width="0.5613%" height="15" fill="rgb(221,206,53)" fg:x="968" fg:w="7"/><text x="77.8763%" y="735.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="78.1075%" y="709" width="0.0802%" height="15" fill="rgb(230,150,21)" fg:x="974" fg:w="1"/><text x="78.3575%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="78.1075%" y="693" width="0.0802%" height="15" fill="rgb(253,202,10)" fg:x="974" fg:w="1"/><text x="78.3575%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.1075%" y="677" width="0.0802%" height="15" fill="rgb(238,109,40)" fg:x="974" fg:w="1"/><text x="78.3575%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.1075%" y="661" width="0.0802%" height="15" fill="rgb(247,120,22)" fg:x="974" fg:w="1"/><text x="78.3575%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.1075%" y="645" width="0.0802%" height="15" fill="rgb(207,43,30)" fg:x="974" fg:w="1"/><text x="78.3575%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.1075%" y="629" width="0.0802%" height="15" fill="rgb(213,211,24)" fg:x="974" fg:w="1"/><text x="78.3575%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.1877%" y="757" width="0.0802%" height="15" fill="rgb(239,73,39)" fg:x="975" fg:w="1"/><text x="78.4377%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.1877%" y="741" width="0.0802%" height="15" fill="rgb(245,182,19)" fg:x="975" fg:w="1"/><text x="78.4377%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.1877%" y="725" width="0.0802%" height="15" fill="rgb(247,143,26)" fg:x="975" fg:w="1"/><text x="78.4377%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.1877%" y="709" width="0.0802%" height="15" fill="rgb(228,191,23)" fg:x="975" fg:w="1"/><text x="78.4377%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.1877%" y="693" width="0.0802%" height="15" fill="rgb(253,165,31)" fg:x="975" fg:w="1"/><text x="78.4377%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.1877%" y="677" width="0.0802%" height="15" fill="rgb(234,138,20)" fg:x="975" fg:w="1"/><text x="78.4377%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.1877%" y="661" width="0.0802%" height="15" fill="rgb(218,191,29)" fg:x="975" fg:w="1"/><text x="78.4377%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.1877%" y="645" width="0.0802%" height="15" fill="rgb(221,157,19)" fg:x="975" fg:w="1"/><text x="78.4377%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.1877%" y="629" width="0.0802%" height="15" fill="rgb(237,26,42)" fg:x="975" fg:w="1"/><text x="78.4377%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.1877%" y="613" width="0.0802%" height="15" fill="rgb(220,163,24)" fg:x="975" fg:w="1"/><text x="78.4377%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.1877%" y="597" width="0.0802%" height="15" fill="rgb(242,115,20)" fg:x="975" fg:w="1"/><text x="78.4377%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.1877%" y="581" width="0.0802%" height="15" fill="rgb(210,206,9)" fg:x="975" fg:w="1"/><text x="78.4377%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.1877%" y="565" width="0.0802%" height="15" fill="rgb(208,71,17)" fg:x="975" fg:w="1"/><text x="78.4377%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="78.2678%" y="757" width="0.0802%" height="15" fill="rgb(233,7,5)" fg:x="976" fg:w="1"/><text x="78.5178%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="78.2678%" y="741" width="0.0802%" height="15" fill="rgb(207,92,33)" fg:x="976" fg:w="1"/><text x="78.5178%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2678%" y="725" width="0.0802%" height="15" fill="rgb(218,87,9)" fg:x="976" fg:w="1"/><text x="78.5178%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.4282%" y="709" width="0.0802%" height="15" fill="rgb(219,47,37)" fg:x="978" fg:w="1"/><text x="78.6782%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="78.4282%" y="693" width="0.0802%" height="15" fill="rgb(221,152,34)" fg:x="978" fg:w="1"/><text x="78.6782%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="78.4282%" y="677" width="0.0802%" height="15" fill="rgb(235,176,21)" fg:x="978" fg:w="1"/><text x="78.6782%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.5084%" y="661" width="0.0802%" height="15" fill="rgb(232,212,21)" fg:x="979" fg:w="1"/><text x="78.7584%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.5084%" y="645" width="0.0802%" height="15" fill="rgb(245,82,39)" fg:x="979" fg:w="1"/><text x="78.7584%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.5886%" y="645" width="0.0802%" height="15" fill="rgb(241,52,51)" fg:x="980" fg:w="1"/><text x="78.8386%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.5886%" y="629" width="0.0802%" height="15" fill="rgb(219,91,24)" fg:x="980" fg:w="1"/><text x="78.8386%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.6688%" y="597" width="0.1604%" height="15" fill="rgb(241,142,12)" fg:x="981" fg:w="2"/><text x="78.9188%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.6688%" y="581" width="0.1604%" height="15" fill="rgb(230,27,9)" fg:x="981" fg:w="2"/><text x="78.9188%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="78.6688%" y="565" width="0.1604%" height="15" fill="rgb(249,181,32)" fg:x="981" fg:w="2"/><text x="78.9188%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="78.6688%" y="549" width="0.1604%" height="15" fill="rgb(230,107,3)" fg:x="981" fg:w="2"/><text x="78.9188%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="78.6688%" y="533" width="0.1604%" height="15" fill="rgb(246,204,14)" fg:x="981" fg:w="2"/><text x="78.9188%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="78.6688%" y="517" width="0.1604%" height="15" fill="rgb(213,192,47)" fg:x="981" fg:w="2"/><text x="78.9188%" y="527.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="78.6688%" y="501" width="0.1604%" height="15" fill="rgb(240,44,36)" fg:x="981" fg:w="2"/><text x="78.9188%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="78.6688%" y="629" width="0.2406%" height="15" fill="rgb(244,209,38)" fg:x="981" fg:w="3"/><text x="78.9188%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="78.6688%" y="613" width="0.2406%" height="15" fill="rgb(219,34,37)" fg:x="981" fg:w="3"/><text x="78.9188%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.8292%" y="597" width="0.0802%" height="15" fill="rgb(210,28,6)" fg:x="983" fg:w="1"/><text x="79.0792%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.8292%" y="581" width="0.0802%" height="15" fill="rgb(244,110,52)" fg:x="983" fg:w="1"/><text x="79.0792%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.8292%" y="565" width="0.0802%" height="15" fill="rgb(254,124,47)" fg:x="983" fg:w="1"/><text x="79.0792%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.8292%" y="549" width="0.0802%" height="15" fill="rgb(254,110,13)" fg:x="983" fg:w="1"/><text x="79.0792%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.9094%" y="629" width="0.1604%" height="15" fill="rgb(252,57,21)" fg:x="984" fg:w="2"/><text x="79.1594%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.9094%" y="613" width="0.1604%" height="15" fill="rgb(242,60,45)" fg:x="984" fg:w="2"/><text x="79.1594%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="78.9094%" y="597" width="0.1604%" height="15" fill="rgb(234,49,30)" fg:x="984" fg:w="2"/><text x="79.1594%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="78.9094%" y="581" width="0.1604%" height="15" fill="rgb(218,98,6)" fg:x="984" fg:w="2"/><text x="79.1594%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.9896%" y="565" width="0.0802%" height="15" fill="rgb(220,174,29)" fg:x="985" fg:w="1"/><text x="79.2396%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.9896%" y="549" width="0.0802%" height="15" fill="rgb(236,163,23)" fg:x="985" fg:w="1"/><text x="79.2396%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.9896%" y="533" width="0.0802%" height="15" fill="rgb(242,114,45)" fg:x="985" fg:w="1"/><text x="79.2396%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.0698%" y="597" width="0.1604%" height="15" fill="rgb(232,10,53)" fg:x="986" fg:w="2"/><text x="79.3198%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.1500%" y="581" width="0.0802%" height="15" fill="rgb(245,108,29)" fg:x="987" fg:w="1"/><text x="79.4000%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.1500%" y="565" width="0.0802%" height="15" fill="rgb(240,89,53)" fg:x="987" fg:w="1"/><text x="79.4000%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="79.0698%" y="613" width="0.2406%" height="15" fill="rgb(226,60,45)" fg:x="986" fg:w="3"/><text x="79.3198%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.2302%" y="597" width="0.0802%" height="15" fill="rgb(230,41,44)" fg:x="988" fg:w="1"/><text x="79.4802%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="78.6688%" y="645" width="0.7217%" height="15" fill="rgb(230,26,20)" fg:x="981" fg:w="9"/><text x="78.9188%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="79.0698%" y="629" width="0.3208%" height="15" fill="rgb(237,170,32)" fg:x="986" fg:w="4"/><text x="79.3198%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.3103%" y="613" width="0.0802%" height="15" fill="rgb(212,35,42)" fg:x="989" fg:w="1"/><text x="79.5603%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.3103%" y="597" width="0.0802%" height="15" fill="rgb(227,31,34)" fg:x="989" fg:w="1"/><text x="79.5603%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.04%)</title><rect x="78.5084%" y="677" width="1.0425%" height="15" fill="rgb(216,19,18)" fg:x="979" fg:w="13"/><text x="78.7584%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="78.5886%" y="661" width="0.9623%" height="15" fill="rgb(211,133,42)" fg:x="980" fg:w="12"/><text x="78.8386%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.3905%" y="645" width="0.1604%" height="15" fill="rgb(244,66,13)" fg:x="990" fg:w="2"/><text x="79.6405%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.4707%" y="629" width="0.0802%" height="15" fill="rgb(218,185,50)" fg:x="991" fg:w="1"/><text x="79.7207%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.4707%" y="613" width="0.0802%" height="15" fill="rgb(219,149,13)" fg:x="991" fg:w="1"/><text x="79.7207%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.4707%" y="597" width="0.0802%" height="15" fill="rgb(221,125,0)" fg:x="991" fg:w="1"/><text x="79.7207%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.4707%" y="581" width="0.0802%" height="15" fill="rgb(247,126,27)" fg:x="991" fg:w="1"/><text x="79.7207%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.4707%" y="565" width="0.0802%" height="15" fill="rgb(250,138,30)" fg:x="991" fg:w="1"/><text x="79.7207%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.6311%" y="645" width="0.0802%" height="15" fill="rgb(230,151,9)" fg:x="993" fg:w="1"/><text x="79.8811%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7113%" y="629" width="0.0802%" height="15" fill="rgb(233,80,38)" fg:x="994" fg:w="1"/><text x="79.9613%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.7915%" y="613" width="0.0802%" height="15" fill="rgb(232,68,43)" fg:x="995" fg:w="1"/><text x="80.0415%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7915%" y="597" width="0.0802%" height="15" fill="rgb(254,5,50)" fg:x="995" fg:w="1"/><text x="80.0415%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="79.5509%" y="677" width="0.4010%" height="15" fill="rgb(225,45,5)" fg:x="992" fg:w="5"/><text x="79.8009%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="79.5509%" y="661" width="0.4010%" height="15" fill="rgb(239,22,3)" fg:x="992" fg:w="5"/><text x="79.8009%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.7113%" y="645" width="0.2406%" height="15" fill="rgb(243,129,0)" fg:x="994" fg:w="3"/><text x="79.9613%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.7915%" y="629" width="0.1604%" height="15" fill="rgb(223,164,0)" fg:x="995" fg:w="2"/><text x="80.0415%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.8717%" y="613" width="0.0802%" height="15" fill="rgb(221,46,29)" fg:x="996" fg:w="1"/><text x="80.1217%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.8717%" y="597" width="0.0802%" height="15" fill="rgb(205,97,47)" fg:x="996" fg:w="1"/><text x="80.1217%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.8717%" y="581" width="0.0802%" height="15" fill="rgb(249,14,8)" fg:x="996" fg:w="1"/><text x="80.1217%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.9519%" y="629" width="0.0802%" height="15" fill="rgb(216,77,3)" fg:x="997" fg:w="1"/><text x="80.2019%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="80.0321%" y="581" width="0.3208%" height="15" fill="rgb(206,168,54)" fg:x="998" fg:w="4"/><text x="80.2821%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="80.0321%" y="565" width="0.3208%" height="15" fill="rgb(236,3,41)" fg:x="998" fg:w="4"/><text x="80.2821%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="80.1925%" y="549" width="0.1604%" height="15" fill="rgb(231,132,24)" fg:x="1000" fg:w="2"/><text x="80.4425%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2727%" y="533" width="0.0802%" height="15" fill="rgb(227,221,40)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2727%" y="517" width="0.0802%" height="15" fill="rgb(233,151,11)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="80.0321%" y="597" width="0.4010%" height="15" fill="rgb(247,81,35)" fg:x="998" fg:w="5"/><text x="80.2821%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.3528%" y="581" width="0.0802%" height="15" fill="rgb(243,128,48)" fg:x="1002" fg:w="1"/><text x="80.6028%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.3528%" y="565" width="0.0802%" height="15" fill="rgb(253,16,10)" fg:x="1002" fg:w="1"/><text x="80.6028%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.3528%" y="549" width="0.0802%" height="15" fill="rgb(228,67,27)" fg:x="1002" fg:w="1"/><text x="80.6028%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.3528%" y="533" width="0.0802%" height="15" fill="rgb(231,105,25)" fg:x="1002" fg:w="1"/><text x="80.6028%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3528%" y="517" width="0.0802%" height="15" fill="rgb(213,166,47)" fg:x="1002" fg:w="1"/><text x="80.6028%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="80.0321%" y="613" width="0.4812%" height="15" fill="rgb(209,27,10)" fg:x="998" fg:w="6"/><text x="80.2821%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.4330%" y="597" width="0.0802%" height="15" fill="rgb(241,44,30)" fg:x="1003" fg:w="1"/><text x="80.6830%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.4330%" y="581" width="0.0802%" height="15" fill="rgb(223,216,15)" fg:x="1003" fg:w="1"/><text x="80.6830%" y="591.50"></text></g><g><title>engine::session::Session::flush (28 samples, 2.25%)</title><rect x="78.3480%" y="757" width="2.2454%" height="15" fill="rgb(227,14,7)" fg:x="977" fg:w="28"/><text x="78.5980%" y="767.50">e..</text></g><g><title>engine::session::state::State::close (27 samples, 2.17%)</title><rect x="78.4282%" y="741" width="2.1652%" height="15" fill="rgb(237,14,5)" fg:x="978" fg:w="27"/><text x="78.6782%" y="751.50">e..</text></g><g><title>engine::session::state::State::flush_entities (27 samples, 2.17%)</title><rect x="78.4282%" y="725" width="2.1652%" height="15" fill="rgb(232,14,36)" fg:x="978" fg:w="27"/><text x="78.6782%" y="735.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (26 samples, 2.09%)</title><rect x="78.5084%" y="709" width="2.0850%" height="15" fill="rgb(234,0,38)" fg:x="979" fg:w="26"/><text x="78.7584%" y="719.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (26 samples, 2.09%)</title><rect x="78.5084%" y="693" width="2.0850%" height="15" fill="rgb(207,170,14)" fg:x="979" fg:w="26"/><text x="78.7584%" y="703.50">e..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.64%)</title><rect x="79.9519%" y="677" width="0.6415%" height="15" fill="rgb(252,45,13)" fg:x="997" fg:w="8"/><text x="80.2019%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="79.9519%" y="661" width="0.6415%" height="15" fill="rgb(213,142,7)" fg:x="997" fg:w="8"/><text x="80.2019%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="79.9519%" y="645" width="0.6415%" height="15" fill="rgb(216,157,23)" fg:x="997" fg:w="8"/><text x="80.2019%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="80.0321%" y="629" width="0.5613%" height="15" fill="rgb(212,145,33)" fg:x="998" fg:w="7"/><text x="80.2821%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.5132%" y="613" width="0.0802%" height="15" fill="rgb(233,26,13)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="80.6736%" y="725" width="0.0802%" height="15" fill="rgb(219,196,19)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="80.6736%" y="709" width="0.0802%" height="15" fill="rgb(246,56,21)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="80.6736%" y="693" width="0.0802%" height="15" fill="rgb(222,28,53)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.6736%" y="677" width="0.0802%" height="15" fill="rgb(224,5,27)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.6736%" y="661" width="0.0802%" height="15" fill="rgb(220,153,33)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.6736%" y="645" width="0.0802%" height="15" fill="rgb(226,58,19)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.6736%" y="629" width="0.0802%" height="15" fill="rgb(239,112,23)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.6736%" y="613" width="0.0802%" height="15" fill="rgb(251,213,20)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.6736%" y="597" width="0.0802%" height="15" fill="rgb(215,181,21)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.6736%" y="581" width="0.0802%" height="15" fill="rgb(240,8,35)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.6736%" y="565" width="0.0802%" height="15" fill="rgb(232,203,3)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.6736%" y="549" width="0.0802%" height="15" fill="rgb(214,202,43)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.6736%" y="533" width="0.0802%" height="15" fill="rgb(254,35,11)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.6736%" y="517" width="0.0802%" height="15" fill="rgb(239,173,13)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.6736%" y="501" width="0.0802%" height="15" fill="rgb(220,141,0)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.6736%" y="485" width="0.0802%" height="15" fill="rgb(210,98,12)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="80.6736%" y="469" width="0.0802%" height="15" fill="rgb(254,153,22)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="80.6736%" y="453" width="0.0802%" height="15" fill="rgb(247,223,17)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="80.6736%" y="437" width="0.0802%" height="15" fill="rgb(246,56,7)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="80.6736%" y="421" width="0.0802%" height="15" fill="rgb(240,226,12)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.08%)</title><rect x="80.6736%" y="405" width="0.0802%" height="15" fill="rgb(205,87,46)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="80.6736%" y="741" width="0.2406%" height="15" fill="rgb(245,214,51)" fg:x="1006" fg:w="3"/><text x="80.9236%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="80.7538%" y="725" width="0.1604%" height="15" fill="rgb(223,172,33)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="735.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="80.7538%" y="709" width="0.1604%" height="15" fill="rgb(227,203,34)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.7538%" y="693" width="0.1604%" height="15" fill="rgb(248,143,44)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.7538%" y="677" width="0.1604%" height="15" fill="rgb(226,162,5)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="80.7538%" y="661" width="0.1604%" height="15" fill="rgb(211,143,1)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="80.7538%" y="645" width="0.1604%" height="15" fill="rgb(224,96,15)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (5 samples, 0.40%)</title><rect x="80.5934%" y="757" width="0.4010%" height="15" fill="rgb(222,4,38)" fg:x="1005" fg:w="5"/><text x="80.8434%" y="767.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="80.9142%" y="741" width="0.0802%" height="15" fill="rgb(253,228,15)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="80.9142%" y="725" width="0.0802%" height="15" fill="rgb(242,194,12)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="80.9142%" y="709" width="0.0802%" height="15" fill="rgb(214,177,31)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.9142%" y="693" width="0.0802%" height="15" fill="rgb(226,58,51)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.9142%" y="677" width="0.0802%" height="15" fill="rgb(250,119,16)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9142%" y="661" width="0.0802%" height="15" fill="rgb(223,128,53)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9142%" y="645" width="0.0802%" height="15" fill="rgb(251,199,15)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9142%" y="629" width="0.0802%" height="15" fill="rgb(235,168,42)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9142%" y="613" width="0.0802%" height="15" fill="rgb(250,210,17)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9142%" y="597" width="0.0802%" height="15" fill="rgb(226,36,41)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.9142%" y="581" width="0.0802%" height="15" fill="rgb(225,87,10)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.9142%" y="565" width="0.0802%" height="15" fill="rgb(228,83,9)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.9142%" y="549" width="0.0802%" height="15" fill="rgb(225,16,36)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.9142%" y="533" width="0.0802%" height="15" fill="rgb(242,198,13)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.9142%" y="517" width="0.0802%" height="15" fill="rgb(239,25,51)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.9142%" y="501" width="0.0802%" height="15" fill="rgb(239,28,37)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.9142%" y="485" width="0.0802%" height="15" fill="rgb(234,70,17)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.9142%" y="469" width="0.0802%" height="15" fill="rgb(231,215,53)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.9142%" y="453" width="0.0802%" height="15" fill="rgb(218,140,42)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9944%" y="629" width="0.0802%" height="15" fill="rgb(233,227,45)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9944%" y="613" width="0.0802%" height="15" fill="rgb(225,189,21)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.9944%" y="597" width="0.0802%" height="15" fill="rgb(237,176,54)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.9944%" y="581" width="0.0802%" height="15" fill="rgb(215,131,46)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.9944%" y="565" width="0.0802%" height="15" fill="rgb(218,95,20)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.9944%" y="549" width="0.0802%" height="15" fill="rgb(208,198,12)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.9944%" y="533" width="0.0802%" height="15" fill="rgb(239,107,50)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.9944%" y="517" width="0.0802%" height="15" fill="rgb(240,217,37)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.9944%" y="501" width="0.0802%" height="15" fill="rgb(242,197,49)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.9944%" y="485" width="0.0802%" height="15" fill="rgb(219,171,17)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.9944%" y="469" width="0.0802%" height="15" fill="rgb(209,81,40)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9944%" y="453" width="0.0802%" height="15" fill="rgb(237,156,30)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="80.9944%" y="677" width="0.1604%" height="15" fill="rgb(212,127,16)" fg:x="1010" fg:w="2"/><text x="81.2444%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.9944%" y="661" width="0.1604%" height="15" fill="rgb(226,66,32)" fg:x="1010" fg:w="2"/><text x="81.2444%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.9944%" y="645" width="0.1604%" height="15" fill="rgb(245,22,46)" fg:x="1010" fg:w="2"/><text x="81.2444%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0746%" y="629" width="0.0802%" height="15" fill="rgb(210,112,21)" fg:x="1011" fg:w="1"/><text x="81.3246%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="80.9944%" y="709" width="0.2406%" height="15" fill="rgb(207,118,39)" fg:x="1010" fg:w="3"/><text x="81.2444%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="80.9944%" y="693" width="0.2406%" height="15" fill="rgb(205,206,35)" fg:x="1010" fg:w="3"/><text x="81.2444%" y="703.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.1548%" y="677" width="0.0802%" height="15" fill="rgb(222,120,2)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1548%" y="661" width="0.0802%" height="15" fill="rgb(205,38,18)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="80.9944%" y="757" width="0.3208%" height="15" fill="rgb(226,61,2)" fg:x="1010" fg:w="4"/><text x="81.2444%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="80.9944%" y="741" width="0.3208%" height="15" fill="rgb(242,161,23)" fg:x="1010" fg:w="4"/><text x="81.2444%" y="751.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="80.9944%" y="725" width="0.3208%" height="15" fill="rgb(213,13,52)" fg:x="1010" fg:w="4"/><text x="81.2444%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.2350%" y="709" width="0.0802%" height="15" fill="rgb(246,209,47)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2350%" y="693" width="0.0802%" height="15" fill="rgb(214,41,3)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2350%" y="677" width="0.0802%" height="15" fill="rgb(236,119,38)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.2350%" y="661" width="0.0802%" height="15" fill="rgb(218,50,11)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="671.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="81.3152%" y="725" width="0.0802%" height="15" fill="rgb(228,38,11)" fg:x="1014" fg:w="1"/><text x="81.5652%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.3152%" y="709" width="0.0802%" height="15" fill="rgb(212,13,9)" fg:x="1014" fg:w="1"/><text x="81.5652%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.3152%" y="693" width="0.0802%" height="15" fill="rgb(208,211,9)" fg:x="1014" fg:w="1"/><text x="81.5652%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="81.3152%" y="677" width="0.0802%" height="15" fill="rgb(239,39,32)" fg:x="1014" fg:w="1"/><text x="81.5652%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="81.3152%" y="757" width="0.1604%" height="15" fill="rgb(254,179,26)" fg:x="1014" fg:w="2"/><text x="81.5652%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="81.3152%" y="741" width="0.1604%" height="15" fill="rgb(249,165,28)" fg:x="1014" fg:w="2"/><text x="81.5652%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.3953%" y="725" width="0.0802%" height="15" fill="rgb(225,59,50)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.3953%" y="709" width="0.0802%" height="15" fill="rgb(209,122,5)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3953%" y="693" width="0.0802%" height="15" fill="rgb(214,65,34)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.3953%" y="677" width="0.0802%" height="15" fill="rgb(249,183,32)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.3953%" y="661" width="0.0802%" height="15" fill="rgb(218,122,24)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3953%" y="645" width="0.0802%" height="15" fill="rgb(224,109,18)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.3953%" y="629" width="0.0802%" height="15" fill="rgb(210,68,50)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3953%" y="613" width="0.0802%" height="15" fill="rgb(212,184,34)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="81.4755%" y="741" width="0.0802%" height="15" fill="rgb(238,105,48)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.4755%" y="725" width="0.0802%" height="15" fill="rgb(222,134,54)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.4755%" y="709" width="0.0802%" height="15" fill="rgb(246,24,43)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4755%" y="693" width="0.0802%" height="15" fill="rgb(227,169,22)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4755%" y="677" width="0.0802%" height="15" fill="rgb(253,152,4)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4755%" y="661" width="0.0802%" height="15" fill="rgb(219,158,36)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4755%" y="645" width="0.0802%" height="15" fill="rgb(251,128,40)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="81.5557%" y="741" width="0.1604%" height="15" fill="rgb(254,101,39)" fg:x="1017" fg:w="2"/><text x="81.8057%" y="751.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="81.5557%" y="725" width="0.1604%" height="15" fill="rgb(221,168,40)" fg:x="1017" fg:w="2"/><text x="81.8057%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.6359%" y="709" width="0.0802%" height="15" fill="rgb(221,14,27)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="719.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6359%" y="693" width="0.0802%" height="15" fill="rgb(207,36,43)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.6359%" y="677" width="0.0802%" height="15" fill="rgb(240,172,53)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="81.7161%" y="693" width="0.0802%" height="15" fill="rgb(241,138,43)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="81.7161%" y="677" width="0.0802%" height="15" fill="rgb(227,78,19)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="81.7161%" y="661" width="0.0802%" height="15" fill="rgb(215,127,44)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="671.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="81.7161%" y="645" width="0.0802%" height="15" fill="rgb(227,13,10)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="81.7161%" y="629" width="0.0802%" height="15" fill="rgb(249,177,6)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="81.7161%" y="613" width="0.0802%" height="15" fill="rgb(215,154,26)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="81.7161%" y="597" width="0.0802%" height="15" fill="rgb(250,168,20)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.7161%" y="581" width="0.0802%" height="15" fill="rgb(222,53,38)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.7161%" y="565" width="0.0802%" height="15" fill="rgb(245,154,5)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="81.7161%" y="549" width="0.0802%" height="15" fill="rgb(214,89,50)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="81.7161%" y="533" width="0.0802%" height="15" fill="rgb(232,73,14)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="81.7161%" y="517" width="0.0802%" height="15" fill="rgb(230,101,20)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="81.7161%" y="501" width="0.0802%" height="15" fill="rgb(208,56,28)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="81.7161%" y="485" width="0.0802%" height="15" fill="rgb(247,205,22)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="81.7963%" y="693" width="0.0802%" height="15" fill="rgb(252,109,51)" fg:x="1020" fg:w="1"/><text x="82.0463%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="81.7963%" y="677" width="0.0802%" height="15" fill="rgb(220,40,24)" fg:x="1020" fg:w="1"/><text x="82.0463%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="81.7963%" y="661" width="0.0802%" height="15" fill="rgb(251,108,7)" fg:x="1020" fg:w="1"/><text x="82.0463%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="81.7963%" y="645" width="0.0802%" height="15" fill="rgb(238,102,51)" fg:x="1020" fg:w="1"/><text x="82.0463%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.8765%" y="661" width="0.0802%" height="15" fill="rgb(219,149,34)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.8765%" y="645" width="0.0802%" height="15" fill="rgb(239,70,0)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8765%" y="629" width="0.0802%" height="15" fill="rgb(246,214,23)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8765%" y="613" width="0.0802%" height="15" fill="rgb(239,221,51)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="623.50"></text></g><g><title>plugins_core::build::Build::leads_to (2 samples, 0.16%)</title><rect x="81.8765%" y="693" width="0.1604%" height="15" fill="rgb(254,62,14)" fg:x="1021" fg:w="2"/><text x="82.1265%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="81.8765%" y="677" width="0.1604%" height="15" fill="rgb(253,57,33)" fg:x="1021" fg:w="2"/><text x="82.1265%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.9567%" y="661" width="0.0802%" height="15" fill="rgb(229,34,6)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="81.9567%" y="645" width="0.0802%" height="15" fill="rgb(235,191,23)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.9567%" y="629" width="0.0802%" height="15" fill="rgb(217,207,27)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.9567%" y="613" width="0.0802%" height="15" fill="rgb(232,41,44)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.9567%" y="597" width="0.0802%" height="15" fill="rgb(221,188,19)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.40%)</title><rect x="81.7161%" y="741" width="0.4010%" height="15" fill="rgb(245,180,45)" fg:x="1019" fg:w="5"/><text x="81.9661%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="81.7161%" y="725" width="0.4010%" height="15" fill="rgb(250,220,42)" fg:x="1019" fg:w="5"/><text x="81.9661%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="81.7161%" y="709" width="0.4010%" height="15" fill="rgb(234,16,34)" fg:x="1019" fg:w="5"/><text x="81.9661%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="82.0369%" y="693" width="0.0802%" height="15" fill="rgb(233,217,23)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="82.0369%" y="677" width="0.0802%" height="15" fill="rgb(209,22,46)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.0369%" y="661" width="0.0802%" height="15" fill="rgb(213,101,18)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.0369%" y="645" width="0.0802%" height="15" fill="rgb(215,179,52)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.0369%" y="629" width="0.0802%" height="15" fill="rgb(223,50,25)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.0369%" y="613" width="0.0802%" height="15" fill="rgb(224,51,44)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="82.1171%" y="725" width="0.0802%" height="15" fill="rgb(224,13,54)" fg:x="1024" fg:w="1"/><text x="82.3671%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="82.1973%" y="645" width="0.2406%" height="15" fill="rgb(219,58,47)" fg:x="1025" fg:w="3"/><text x="82.4473%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3577%" y="629" width="0.0802%" height="15" fill="rgb(246,124,34)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="82.1973%" y="677" width="0.3208%" height="15" fill="rgb(245,109,25)" fg:x="1025" fg:w="4"/><text x="82.4473%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="82.1973%" y="661" width="0.3208%" height="15" fill="rgb(235,48,23)" fg:x="1025" fg:w="4"/><text x="82.4473%" y="671.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="82.4379%" y="645" width="0.0802%" height="15" fill="rgb(229,203,36)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.4379%" y="629" width="0.0802%" height="15" fill="rgb(234,180,9)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.5180%" y="629" width="0.0802%" height="15" fill="rgb(228,98,45)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.5982%" y="613" width="0.0802%" height="15" fill="rgb(240,24,36)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.5982%" y="597" width="0.0802%" height="15" fill="rgb(227,154,19)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.5982%" y="581" width="0.0802%" height="15" fill="rgb(231,2,48)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.5982%" y="565" width="0.0802%" height="15" fill="rgb(219,216,0)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="82.5982%" y="629" width="0.2406%" height="15" fill="rgb(251,88,0)" fg:x="1030" fg:w="3"/><text x="82.8482%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.6784%" y="613" width="0.1604%" height="15" fill="rgb(242,45,45)" fg:x="1031" fg:w="2"/><text x="82.9284%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.7586%" y="597" width="0.0802%" height="15" fill="rgb(218,149,45)" fg:x="1032" fg:w="1"/><text x="83.0086%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.8388%" y="613" width="0.0802%" height="15" fill="rgb(247,194,10)" fg:x="1033" fg:w="1"/><text x="83.0888%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.8388%" y="597" width="0.0802%" height="15" fill="rgb(234,33,37)" fg:x="1033" fg:w="1"/><text x="83.0888%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.9190%" y="613" width="0.1604%" height="15" fill="rgb(218,61,13)" fg:x="1034" fg:w="2"/><text x="83.1690%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.9190%" y="597" width="0.1604%" height="15" fill="rgb(210,80,52)" fg:x="1034" fg:w="2"/><text x="83.1690%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.9190%" y="581" width="0.1604%" height="15" fill="rgb(218,203,27)" fg:x="1034" fg:w="2"/><text x="83.1690%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.9992%" y="565" width="0.0802%" height="15" fill="rgb(209,126,33)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.1596%" y="565" width="0.0802%" height="15" fill="rgb(234,173,41)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.1596%" y="549" width="0.0802%" height="15" fill="rgb(228,166,9)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.1596%" y="533" width="0.0802%" height="15" fill="rgb(208,124,43)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.1596%" y="517" width="0.0802%" height="15" fill="rgb(212,154,38)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="83.1596%" y="597" width="0.1604%" height="15" fill="rgb(246,179,35)" fg:x="1037" fg:w="2"/><text x="83.4096%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.1596%" y="581" width="0.1604%" height="15" fill="rgb(251,3,50)" fg:x="1037" fg:w="2"/><text x="83.4096%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2398%" y="565" width="0.0802%" height="15" fill="rgb(219,96,8)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.2398%" y="549" width="0.0802%" height="15" fill="rgb(251,216,33)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="83.3200%" y="597" width="0.1604%" height="15" fill="rgb(243,145,29)" fg:x="1039" fg:w="2"/><text x="83.5700%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.3200%" y="581" width="0.1604%" height="15" fill="rgb(210,75,20)" fg:x="1039" fg:w="2"/><text x="83.5700%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.4804%" y="581" width="0.0802%" height="15" fill="rgb(235,56,8)" fg:x="1041" fg:w="1"/><text x="83.7304%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.4804%" y="565" width="0.0802%" height="15" fill="rgb(226,175,49)" fg:x="1041" fg:w="1"/><text x="83.7304%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.4804%" y="549" width="0.0802%" height="15" fill="rgb(242,204,23)" fg:x="1041" fg:w="1"/><text x="83.7304%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="83.5605%" y="565" width="0.3208%" height="15" fill="rgb(225,104,24)" fg:x="1042" fg:w="4"/><text x="83.8105%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.7209%" y="549" width="0.1604%" height="15" fill="rgb(253,34,1)" fg:x="1044" fg:w="2"/><text x="83.9709%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.7209%" y="533" width="0.1604%" height="15" fill="rgb(233,199,23)" fg:x="1044" fg:w="2"/><text x="83.9709%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.8011%" y="517" width="0.0802%" height="15" fill="rgb(247,7,51)" fg:x="1045" fg:w="1"/><text x="84.0511%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="83.5605%" y="581" width="0.4010%" height="15" fill="rgb(214,146,12)" fg:x="1042" fg:w="5"/><text x="83.8105%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.8813%" y="565" width="0.0802%" height="15" fill="rgb(234,181,43)" fg:x="1046" fg:w="1"/><text x="84.1313%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="82.8388%" y="629" width="1.2029%" height="15" fill="rgb(239,148,6)" fg:x="1033" fg:w="15"/><text x="83.0888%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="83.0794%" y="613" width="0.9623%" height="15" fill="rgb(206,151,17)" fg:x="1036" fg:w="12"/><text x="83.3294%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="83.4804%" y="597" width="0.5613%" height="15" fill="rgb(213,215,10)" fg:x="1041" fg:w="7"/><text x="83.7304%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.9615%" y="581" width="0.0802%" height="15" fill="rgb(215,220,44)" fg:x="1047" fg:w="1"/><text x="84.2115%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (20 samples, 1.60%)</title><rect x="82.5180%" y="645" width="1.6038%" height="15" fill="rgb(245,205,37)" fg:x="1029" fg:w="20"/><text x="82.7680%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.0417%" y="629" width="0.0802%" height="15" fill="rgb(245,130,43)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.0417%" y="613" width="0.0802%" height="15" fill="rgb(231,227,38)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.0417%" y="597" width="0.0802%" height="15" fill="rgb(233,185,4)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.0417%" y="581" width="0.0802%" height="15" fill="rgb(224,154,43)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.0417%" y="565" width="0.0802%" height="15" fill="rgb(235,156,15)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="84.0417%" y="549" width="0.0802%" height="15" fill="rgb(211,55,43)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="84.0417%" y="533" width="0.0802%" height="15" fill="rgb(247,149,40)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.1219%" y="597" width="0.0802%" height="15" fill="rgb(232,171,16)" fg:x="1049" fg:w="1"/><text x="84.3719%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.2021%" y="533" width="0.0802%" height="15" fill="rgb(215,117,49)" fg:x="1050" fg:w="1"/><text x="84.4521%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="84.2021%" y="565" width="0.2406%" height="15" fill="rgb(246,194,11)" fg:x="1050" fg:w="3"/><text x="84.4521%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="84.2021%" y="549" width="0.2406%" height="15" fill="rgb(242,101,44)" fg:x="1050" fg:w="3"/><text x="84.4521%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="84.2823%" y="533" width="0.1604%" height="15" fill="rgb(226,174,6)" fg:x="1051" fg:w="2"/><text x="84.5323%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="84.1219%" y="645" width="0.4010%" height="15" fill="rgb(213,150,20)" fg:x="1049" fg:w="5"/><text x="84.3719%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="84.1219%" y="629" width="0.4010%" height="15" fill="rgb(222,124,42)" fg:x="1049" fg:w="5"/><text x="84.3719%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="84.1219%" y="613" width="0.4010%" height="15" fill="rgb(250,19,47)" fg:x="1049" fg:w="5"/><text x="84.3719%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="84.2021%" y="597" width="0.3208%" height="15" fill="rgb(241,217,19)" fg:x="1050" fg:w="4"/><text x="84.4521%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="84.2021%" y="581" width="0.3208%" height="15" fill="rgb(207,210,34)" fg:x="1050" fg:w="4"/><text x="84.4521%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.4427%" y="565" width="0.0802%" height="15" fill="rgb(244,45,4)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.4427%" y="549" width="0.0802%" height="15" fill="rgb(252,134,50)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="84.6832%" y="597" width="0.0802%" height="15" fill="rgb(238,74,2)" fg:x="1056" fg:w="1"/><text x="84.9332%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="84.6832%" y="581" width="0.0802%" height="15" fill="rgb(226,58,46)" fg:x="1056" fg:w="1"/><text x="84.9332%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="84.7634%" y="597" width="0.0802%" height="15" fill="rgb(232,83,35)" fg:x="1057" fg:w="1"/><text x="85.0134%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.7634%" y="581" width="0.0802%" height="15" fill="rgb(212,148,47)" fg:x="1057" fg:w="1"/><text x="85.0134%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7634%" y="565" width="0.0802%" height="15" fill="rgb(235,29,1)" fg:x="1057" fg:w="1"/><text x="85.0134%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.8436%" y="597" width="0.0802%" height="15" fill="rgb(247,55,37)" fg:x="1058" fg:w="1"/><text x="85.0936%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.8436%" y="581" width="0.0802%" height="15" fill="rgb(222,48,3)" fg:x="1058" fg:w="1"/><text x="85.0936%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="84.8436%" y="565" width="0.0802%" height="15" fill="rgb(234,21,33)" fg:x="1058" fg:w="1"/><text x="85.0936%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="84.8436%" y="549" width="0.0802%" height="15" fill="rgb(247,178,53)" fg:x="1058" fg:w="1"/><text x="85.0936%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9238%" y="549" width="0.0802%" height="15" fill="rgb(225,75,7)" fg:x="1059" fg:w="1"/><text x="85.1738%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9238%" y="533" width="0.0802%" height="15" fill="rgb(219,199,7)" fg:x="1059" fg:w="1"/><text x="85.1738%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9238%" y="517" width="0.0802%" height="15" fill="rgb(209,93,42)" fg:x="1059" fg:w="1"/><text x="85.1738%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0842%" y="517" width="0.0802%" height="15" fill="rgb(240,175,17)" fg:x="1061" fg:w="1"/><text x="85.3342%" y="527.50"></text></g><g><title>engine::session::Session::flush (40 samples, 3.21%)</title><rect x="82.1171%" y="741" width="3.2077%" height="15" fill="rgb(232,106,7)" fg:x="1024" fg:w="40"/><text x="82.3671%" y="751.50">eng..</text></g><g><title>engine::session::Session::save_changes (39 samples, 3.13%)</title><rect x="82.1973%" y="725" width="3.1275%" height="15" fill="rgb(242,106,43)" fg:x="1025" fg:w="39"/><text x="82.4473%" y="735.50">eng..</text></g><g><title>engine::session::state::State::close (39 samples, 3.13%)</title><rect x="82.1973%" y="709" width="3.1275%" height="15" fill="rgb(242,61,37)" fg:x="1025" fg:w="39"/><text x="82.4473%" y="719.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (39 samples, 3.13%)</title><rect x="82.1973%" y="693" width="3.1275%" height="15" fill="rgb(205,72,10)" fg:x="1025" fg:w="39"/><text x="82.4473%" y="703.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (35 samples, 2.81%)</title><rect x="82.5180%" y="677" width="2.8067%" height="15" fill="rgb(214,184,36)" fg:x="1029" fg:w="35"/><text x="82.7680%" y="687.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (35 samples, 2.81%)</title><rect x="82.5180%" y="661" width="2.8067%" height="15" fill="rgb(206,107,18)" fg:x="1029" fg:w="35"/><text x="82.7680%" y="671.50">en..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.80%)</title><rect x="84.5229%" y="645" width="0.8019%" height="15" fill="rgb(210,75,5)" fg:x="1054" fg:w="10"/><text x="84.7729%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="84.6832%" y="629" width="0.6415%" height="15" fill="rgb(205,3,19)" fg:x="1056" fg:w="8"/><text x="84.9332%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="84.6832%" y="613" width="0.6415%" height="15" fill="rgb(207,181,42)" fg:x="1056" fg:w="8"/><text x="84.9332%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="84.9238%" y="597" width="0.4010%" height="15" fill="rgb(229,179,43)" fg:x="1059" fg:w="5"/><text x="85.1738%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="84.9238%" y="581" width="0.4010%" height="15" fill="rgb(246,95,30)" fg:x="1059" fg:w="5"/><text x="85.1738%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="84.9238%" y="565" width="0.4010%" height="15" fill="rgb(234,144,45)" fg:x="1059" fg:w="5"/><text x="85.1738%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="85.0040%" y="549" width="0.3208%" height="15" fill="rgb(250,54,25)" fg:x="1060" fg:w="4"/><text x="85.2540%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="85.0040%" y="533" width="0.3208%" height="15" fill="rgb(215,195,40)" fg:x="1060" fg:w="4"/><text x="85.2540%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="85.1644%" y="517" width="0.1604%" height="15" fill="rgb(233,188,42)" fg:x="1062" fg:w="2"/><text x="85.4144%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.2446%" y="501" width="0.0802%" height="15" fill="rgb(247,227,35)" fg:x="1063" fg:w="1"/><text x="85.4946%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.2446%" y="485" width="0.0802%" height="15" fill="rgb(249,124,27)" fg:x="1063" fg:w="1"/><text x="85.4946%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.2446%" y="469" width="0.0802%" height="15" fill="rgb(219,207,25)" fg:x="1063" fg:w="1"/><text x="85.4946%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2446%" y="453" width="0.0802%" height="15" fill="rgb(241,216,47)" fg:x="1063" fg:w="1"/><text x="85.4946%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4050%" y="677" width="0.0802%" height="15" fill="rgb(233,82,50)" fg:x="1065" fg:w="1"/><text x="85.6550%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4050%" y="661" width="0.0802%" height="15" fill="rgb(232,63,2)" fg:x="1065" fg:w="1"/><text x="85.6550%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4050%" y="645" width="0.0802%" height="15" fill="rgb(236,184,28)" fg:x="1065" fg:w="1"/><text x="85.6550%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.4050%" y="709" width="0.1604%" height="15" fill="rgb(254,63,27)" fg:x="1065" fg:w="2"/><text x="85.6550%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.4050%" y="693" width="0.1604%" height="15" fill="rgb(253,106,28)" fg:x="1065" fg:w="2"/><text x="85.6550%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.4852%" y="677" width="0.0802%" height="15" fill="rgb(225,141,39)" fg:x="1066" fg:w="1"/><text x="85.7352%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.5654%" y="693" width="0.0802%" height="15" fill="rgb(222,157,20)" fg:x="1067" fg:w="1"/><text x="85.8154%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.5654%" y="677" width="0.0802%" height="15" fill="rgb(210,190,9)" fg:x="1067" fg:w="1"/><text x="85.8154%" y="687.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.5654%" y="661" width="0.0802%" height="15" fill="rgb(242,167,7)" fg:x="1067" fg:w="1"/><text x="85.8154%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="85.5654%" y="709" width="0.1604%" height="15" fill="rgb(227,82,41)" fg:x="1067" fg:w="2"/><text x="85.8154%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.6455%" y="693" width="0.0802%" height="15" fill="rgb(222,131,13)" fg:x="1068" fg:w="1"/><text x="85.8955%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="85.6455%" y="677" width="0.0802%" height="15" fill="rgb(221,98,26)" fg:x="1068" fg:w="1"/><text x="85.8955%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.6455%" y="661" width="0.0802%" height="15" fill="rgb(251,63,52)" fg:x="1068" fg:w="1"/><text x="85.8955%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.6455%" y="645" width="0.0802%" height="15" fill="rgb(246,25,43)" fg:x="1068" fg:w="1"/><text x="85.8955%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.6455%" y="629" width="0.0802%" height="15" fill="rgb(247,167,15)" fg:x="1068" fg:w="1"/><text x="85.8955%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7257%" y="629" width="0.0802%" height="15" fill="rgb(240,104,42)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.7257%" y="613" width="0.0802%" height="15" fill="rgb(224,54,6)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7257%" y="597" width="0.0802%" height="15" fill="rgb(244,108,35)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7257%" y="581" width="0.0802%" height="15" fill="rgb(216,154,2)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8059%" y="629" width="0.0802%" height="15" fill="rgb(222,8,47)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.8059%" y="613" width="0.0802%" height="15" fill="rgb(252,93,1)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="623.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="85.7257%" y="661" width="0.3208%" height="15" fill="rgb(223,226,51)" fg:x="1069" fg:w="4"/><text x="85.9757%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="85.7257%" y="645" width="0.3208%" height="15" fill="rgb(206,147,9)" fg:x="1069" fg:w="4"/><text x="85.9757%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="85.8861%" y="629" width="0.1604%" height="15" fill="rgb(248,180,41)" fg:x="1071" fg:w="2"/><text x="86.1361%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.8861%" y="613" width="0.1604%" height="15" fill="rgb(209,47,50)" fg:x="1071" fg:w="2"/><text x="86.1361%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="85.8861%" y="597" width="0.1604%" height="15" fill="rgb(243,65,31)" fg:x="1071" fg:w="2"/><text x="86.1361%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="85.9663%" y="581" width="0.0802%" height="15" fill="rgb(228,128,1)" fg:x="1072" fg:w="1"/><text x="86.2163%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9663%" y="565" width="0.0802%" height="15" fill="rgb(231,192,16)" fg:x="1072" fg:w="1"/><text x="86.2163%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.0465%" y="581" width="0.0802%" height="15" fill="rgb(224,26,40)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.0465%" y="565" width="0.0802%" height="15" fill="rgb(214,192,17)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="85.3248%" y="725" width="0.8821%" height="15" fill="rgb(225,147,18)" fg:x="1064" fg:w="11"/><text x="85.5748%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="85.7257%" y="709" width="0.4812%" height="15" fill="rgb(205,35,11)" fg:x="1069" fg:w="6"/><text x="85.9757%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="85.7257%" y="693" width="0.4812%" height="15" fill="rgb(242,40,42)" fg:x="1069" fg:w="6"/><text x="85.9757%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="85.7257%" y="677" width="0.4812%" height="15" fill="rgb(250,170,13)" fg:x="1069" fg:w="6"/><text x="85.9757%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.0465%" y="661" width="0.1604%" height="15" fill="rgb(240,161,28)" fg:x="1073" fg:w="2"/><text x="86.2965%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.0465%" y="645" width="0.1604%" height="15" fill="rgb(245,179,12)" fg:x="1073" fg:w="2"/><text x="86.2965%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.0465%" y="629" width="0.1604%" height="15" fill="rgb(250,92,32)" fg:x="1073" fg:w="2"/><text x="86.2965%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="86.0465%" y="613" width="0.1604%" height="15" fill="rgb(233,10,40)" fg:x="1073" fg:w="2"/><text x="86.2965%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.0465%" y="597" width="0.1604%" height="15" fill="rgb(217,98,1)" fg:x="1073" fg:w="2"/><text x="86.2965%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1267%" y="581" width="0.0802%" height="15" fill="rgb(238,202,7)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.1267%" y="565" width="0.0802%" height="15" fill="rgb(222,91,3)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="86.1267%" y="549" width="0.0802%" height="15" fill="rgb(211,170,49)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="86.2069%" y="709" width="0.0802%" height="15" fill="rgb(253,139,18)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="86.2069%" y="693" width="0.0802%" height="15" fill="rgb(222,4,43)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.2069%" y="677" width="0.0802%" height="15" fill="rgb(207,205,12)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="687.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="86.2069%" y="661" width="0.0802%" height="15" fill="rgb(216,159,46)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.2871%" y="709" width="0.0802%" height="15" fill="rgb(236,115,1)" fg:x="1076" fg:w="1"/><text x="86.5371%" y="719.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="86.2871%" y="693" width="0.0802%" height="15" fill="rgb(251,35,33)" fg:x="1076" fg:w="1"/><text x="86.5371%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.2871%" y="677" width="0.0802%" height="15" fill="rgb(248,62,51)" fg:x="1076" fg:w="1"/><text x="86.5371%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.2871%" y="661" width="0.0802%" height="15" fill="rgb(254,180,19)" fg:x="1076" fg:w="1"/><text x="86.5371%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="86.2871%" y="645" width="0.0802%" height="15" fill="rgb(217,100,32)" fg:x="1076" fg:w="1"/><text x="86.5371%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.2871%" y="629" width="0.0802%" height="15" fill="rgb(224,71,22)" fg:x="1076" fg:w="1"/><text x="86.5371%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2871%" y="613" width="0.0802%" height="15" fill="rgb(251,185,33)" fg:x="1076" fg:w="1"/><text x="86.5371%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2871%" y="597" width="0.0802%" height="15" fill="rgb(209,75,48)" fg:x="1076" fg:w="1"/><text x="86.5371%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="86.2871%" y="581" width="0.0802%" height="15" fill="rgb(253,190,16)" fg:x="1076" fg:w="1"/><text x="86.5371%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (14 samples, 1.12%)</title><rect x="85.3248%" y="741" width="1.1227%" height="15" fill="rgb(226,140,1)" fg:x="1064" fg:w="14"/><text x="85.5748%" y="751.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="86.2069%" y="725" width="0.2406%" height="15" fill="rgb(206,75,30)" fg:x="1075" fg:w="3"/><text x="86.4569%" y="735.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="86.3673%" y="709" width="0.0802%" height="15" fill="rgb(231,208,37)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="86.3673%" y="693" width="0.0802%" height="15" fill="rgb(238,136,40)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.3673%" y="677" width="0.0802%" height="15" fill="rgb(247,137,17)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.3673%" y="661" width="0.0802%" height="15" fill="rgb(240,60,40)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="86.4475%" y="741" width="0.0802%" height="15" fill="rgb(236,68,50)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="86.4475%" y="725" width="0.0802%" height="15" fill="rgb(230,42,12)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.4475%" y="709" width="0.0802%" height="15" fill="rgb(219,16,16)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.4475%" y="693" width="0.0802%" height="15" fill="rgb(220,38,35)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.4475%" y="677" width="0.0802%" height="15" fill="rgb(228,33,1)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.4475%" y="661" width="0.0802%" height="15" fill="rgb(241,46,31)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.4475%" y="645" width="0.0802%" height="15" fill="rgb(232,58,20)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.4475%" y="629" width="0.0802%" height="15" fill="rgb(206,228,53)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.4475%" y="613" width="0.0802%" height="15" fill="rgb(206,88,33)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.4475%" y="597" width="0.0802%" height="15" fill="rgb(238,69,7)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.4475%" y="581" width="0.0802%" height="15" fill="rgb(250,21,46)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.4475%" y="565" width="0.0802%" height="15" fill="rgb(215,212,21)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.4475%" y="549" width="0.0802%" height="15" fill="rgb(211,35,12)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.4475%" y="533" width="0.0802%" height="15" fill="rgb(231,184,16)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.4475%" y="517" width="0.0802%" height="15" fill="rgb(242,140,15)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.4475%" y="501" width="0.0802%" height="15" fill="rgb(220,37,14)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.4475%" y="485" width="0.0802%" height="15" fill="rgb(223,146,22)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4475%" y="469" width="0.0802%" height="15" fill="rgb(216,132,15)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.5277%" y="677" width="0.0802%" height="15" fill="rgb(248,83,5)" fg:x="1079" fg:w="1"/><text x="86.7777%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.5277%" y="661" width="0.0802%" height="15" fill="rgb(231,206,48)" fg:x="1079" fg:w="1"/><text x="86.7777%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5277%" y="645" width="0.0802%" height="15" fill="rgb(253,185,37)" fg:x="1079" fg:w="1"/><text x="86.7777%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="86.5277%" y="741" width="0.1604%" height="15" fill="rgb(208,21,44)" fg:x="1079" fg:w="2"/><text x="86.7777%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="86.5277%" y="725" width="0.1604%" height="15" fill="rgb(236,125,4)" fg:x="1079" fg:w="2"/><text x="86.7777%" y="735.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="86.5277%" y="709" width="0.1604%" height="15" fill="rgb(226,134,25)" fg:x="1079" fg:w="2"/><text x="86.7777%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.5277%" y="693" width="0.1604%" height="15" fill="rgb(250,201,12)" fg:x="1079" fg:w="2"/><text x="86.7777%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.6079%" y="677" width="0.0802%" height="15" fill="rgb(225,92,18)" fg:x="1080" fg:w="1"/><text x="86.8579%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.6079%" y="661" width="0.0802%" height="15" fill="rgb(227,35,22)" fg:x="1080" fg:w="1"/><text x="86.8579%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="86.6881%" y="709" width="0.0802%" height="15" fill="rgb(214,180,52)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="86.6881%" y="693" width="0.0802%" height="15" fill="rgb(233,55,38)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.6881%" y="677" width="0.0802%" height="15" fill="rgb(249,171,43)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.6881%" y="661" width="0.0802%" height="15" fill="rgb(239,87,2)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.6881%" y="645" width="0.0802%" height="15" fill="rgb(248,141,5)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.6881%" y="629" width="0.0802%" height="15" fill="rgb(238,33,42)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.6881%" y="613" width="0.0802%" height="15" fill="rgb(231,57,19)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.6881%" y="597" width="0.0802%" height="15" fill="rgb(214,78,53)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.6881%" y="581" width="0.0802%" height="15" fill="rgb(206,132,29)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.6881%" y="565" width="0.0802%" height="15" fill="rgb(248,174,31)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.6881%" y="549" width="0.0802%" height="15" fill="rgb(221,87,13)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.6881%" y="533" width="0.0802%" height="15" fill="rgb(223,197,17)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="86.7682%" y="709" width="0.1604%" height="15" fill="rgb(220,144,50)" fg:x="1082" fg:w="2"/><text x="87.0182%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="86.8484%" y="693" width="0.0802%" height="15" fill="rgb(244,201,11)" fg:x="1083" fg:w="1"/><text x="87.0984%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.8484%" y="677" width="0.0802%" height="15" fill="rgb(249,81,34)" fg:x="1083" fg:w="1"/><text x="87.0984%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="86.8484%" y="661" width="0.0802%" height="15" fill="rgb(205,161,12)" fg:x="1083" fg:w="1"/><text x="87.0984%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.8484%" y="645" width="0.0802%" height="15" fill="rgb(252,139,50)" fg:x="1083" fg:w="1"/><text x="87.0984%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8484%" y="629" width="0.0802%" height="15" fill="rgb(205,169,14)" fg:x="1083" fg:w="1"/><text x="87.0984%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="86.6881%" y="725" width="0.3208%" height="15" fill="rgb(248,198,33)" fg:x="1081" fg:w="4"/><text x="86.9381%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="86.9286%" y="709" width="0.0802%" height="15" fill="rgb(236,23,21)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="86.9286%" y="693" width="0.0802%" height="15" fill="rgb(231,13,38)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.9286%" y="677" width="0.0802%" height="15" fill="rgb(239,139,21)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.9286%" y="661" width="0.0802%" height="15" fill="rgb(222,164,45)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.9286%" y="645" width="0.0802%" height="15" fill="rgb(230,52,27)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.9286%" y="629" width="0.0802%" height="15" fill="rgb(227,143,42)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.9286%" y="613" width="0.0802%" height="15" fill="rgb(249,127,1)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.9286%" y="597" width="0.0802%" height="15" fill="rgb(243,107,26)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9286%" y="581" width="0.0802%" height="15" fill="rgb(225,7,45)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="87.0088%" y="709" width="0.0802%" height="15" fill="rgb(241,88,38)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="87.0088%" y="693" width="0.0802%" height="15" fill="rgb(226,121,9)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0890%" y="645" width="0.0802%" height="15" fill="rgb(253,60,29)" fg:x="1086" fg:w="1"/><text x="87.3390%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.0890%" y="629" width="0.0802%" height="15" fill="rgb(244,181,39)" fg:x="1086" fg:w="1"/><text x="87.3390%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0890%" y="613" width="0.0802%" height="15" fill="rgb(252,203,31)" fg:x="1086" fg:w="1"/><text x="87.3390%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0890%" y="597" width="0.0802%" height="15" fill="rgb(224,120,8)" fg:x="1086" fg:w="1"/><text x="87.3390%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0890%" y="581" width="0.0802%" height="15" fill="rgb(205,171,54)" fg:x="1086" fg:w="1"/><text x="87.3390%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.1692%" y="613" width="0.0802%" height="15" fill="rgb(235,89,11)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.1692%" y="597" width="0.0802%" height="15" fill="rgb(212,180,28)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="87.0890%" y="709" width="0.2406%" height="15" fill="rgb(247,84,49)" fg:x="1086" fg:w="3"/><text x="87.3390%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="87.0890%" y="693" width="0.2406%" height="15" fill="rgb(236,187,52)" fg:x="1086" fg:w="3"/><text x="87.3390%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="87.0890%" y="677" width="0.2406%" height="15" fill="rgb(227,24,15)" fg:x="1086" fg:w="3"/><text x="87.3390%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="87.0890%" y="661" width="0.2406%" height="15" fill="rgb(227,211,13)" fg:x="1086" fg:w="3"/><text x="87.3390%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.1692%" y="645" width="0.1604%" height="15" fill="rgb(245,52,14)" fg:x="1087" fg:w="2"/><text x="87.4192%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.1692%" y="629" width="0.1604%" height="15" fill="rgb(225,185,13)" fg:x="1087" fg:w="2"/><text x="87.4192%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.2494%" y="613" width="0.0802%" height="15" fill="rgb(217,160,29)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2494%" y="597" width="0.0802%" height="15" fill="rgb(216,115,53)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.2494%" y="581" width="0.0802%" height="15" fill="rgb(236,99,5)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2494%" y="565" width="0.0802%" height="15" fill="rgb(222,60,38)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.2494%" y="549" width="0.0802%" height="15" fill="rgb(212,82,22)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.2494%" y="533" width="0.0802%" height="15" fill="rgb(214,48,28)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="87.3296%" y="709" width="0.0802%" height="15" fill="rgb(245,196,50)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3296%" y="693" width="0.0802%" height="15" fill="rgb(225,159,46)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3296%" y="677" width="0.0802%" height="15" fill="rgb(207,195,48)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3296%" y="661" width="0.0802%" height="15" fill="rgb(240,73,3)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.3296%" y="645" width="0.0802%" height="15" fill="rgb(245,57,23)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.3296%" y="629" width="0.0802%" height="15" fill="rgb(240,75,18)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.3296%" y="613" width="0.0802%" height="15" fill="rgb(238,168,12)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.3296%" y="597" width="0.0802%" height="15" fill="rgb(226,20,40)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.3296%" y="581" width="0.0802%" height="15" fill="rgb(224,130,35)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.3296%" y="565" width="0.0802%" height="15" fill="rgb(225,63,41)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.3296%" y="549" width="0.0802%" height="15" fill="rgb(219,3,3)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.3296%" y="533" width="0.0802%" height="15" fill="rgb(218,157,4)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.3296%" y="517" width="0.0802%" height="15" fill="rgb(232,76,36)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="87.4900%" y="645" width="0.0802%" height="15" fill="rgb(247,36,0)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="87.4098%" y="709" width="0.2406%" height="15" fill="rgb(205,2,34)" fg:x="1090" fg:w="3"/><text x="87.6598%" y="719.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="87.4098%" y="693" width="0.2406%" height="15" fill="rgb(239,136,13)" fg:x="1090" fg:w="3"/><text x="87.6598%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.4900%" y="677" width="0.1604%" height="15" fill="rgb(253,122,12)" fg:x="1091" fg:w="2"/><text x="87.7400%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="87.4900%" y="661" width="0.1604%" height="15" fill="rgb(222,174,7)" fg:x="1091" fg:w="2"/><text x="87.7400%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="87.5702%" y="645" width="0.0802%" height="15" fill="rgb(208,191,42)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.5702%" y="629" width="0.0802%" height="15" fill="rgb(237,212,15)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.6504%" y="661" width="0.0802%" height="15" fill="rgb(215,65,20)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.6504%" y="645" width="0.0802%" height="15" fill="rgb(232,103,11)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6504%" y="629" width="0.0802%" height="15" fill="rgb(235,148,18)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.6504%" y="613" width="0.0802%" height="15" fill="rgb(240,173,7)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6504%" y="597" width="0.0802%" height="15" fill="rgb(228,182,25)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (79 samples, 6.34%)</title><rect x="81.4755%" y="757" width="6.3352%" height="15" fill="rgb(247,3,52)" fg:x="1016" fg:w="79"/><text x="81.7255%" y="767.50">plugins_..</text></g><g><title>plugins_core::build::Build::occupying (14 samples, 1.12%)</title><rect x="86.6881%" y="741" width="1.1227%" height="15" fill="rgb(226,155,8)" fg:x="1081" fg:w="14"/><text x="86.9381%" y="751.50"></text></g><g><title>plugins_core::tools::set_occupying (10 samples, 0.80%)</title><rect x="87.0088%" y="725" width="0.8019%" height="15" fill="rgb(243,195,38)" fg:x="1085" fg:w="10"/><text x="87.2588%" y="735.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="87.6504%" y="709" width="0.1604%" height="15" fill="rgb(254,181,33)" fg:x="1093" fg:w="2"/><text x="87.9004%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="87.6504%" y="693" width="0.1604%" height="15" fill="rgb(232,98,23)" fg:x="1093" fg:w="2"/><text x="87.9004%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="87.6504%" y="677" width="0.1604%" height="15" fill="rgb(205,23,10)" fg:x="1093" fg:w="2"/><text x="87.9004%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.7306%" y="661" width="0.0802%" height="15" fill="rgb(212,124,38)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.7306%" y="645" width="0.0802%" height="15" fill="rgb(228,207,2)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7306%" y="629" width="0.0802%" height="15" fill="rgb(215,120,22)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.7306%" y="613" width="0.0802%" height="15" fill="rgb(251,172,33)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7306%" y="597" width="0.0802%" height="15" fill="rgb(250,83,2)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7306%" y="581" width="0.0802%" height="15" fill="rgb(210,132,53)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7306%" y="565" width="0.0802%" height="15" fill="rgb(221,208,36)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="87.8107%" y="757" width="0.0802%" height="15" fill="rgb(205,192,46)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="87.8107%" y="741" width="0.0802%" height="15" fill="rgb(223,163,14)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="87.8107%" y="725" width="0.0802%" height="15" fill="rgb(218,41,28)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.8107%" y="709" width="0.0802%" height="15" fill="rgb(235,104,10)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.8107%" y="693" width="0.0802%" height="15" fill="rgb(246,17,4)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.8107%" y="677" width="0.0802%" height="15" fill="rgb(240,7,16)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.8107%" y="661" width="0.0802%" height="15" fill="rgb(213,160,23)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.8107%" y="645" width="0.0802%" height="15" fill="rgb(251,179,49)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.8107%" y="629" width="0.0802%" height="15" fill="rgb(247,198,10)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.8107%" y="613" width="0.0802%" height="15" fill="rgb(220,65,29)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.0513%" y="629" width="0.0802%" height="15" fill="rgb(237,171,28)" fg:x="1098" fg:w="1"/><text x="88.3013%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.0513%" y="613" width="0.0802%" height="15" fill="rgb(228,44,26)" fg:x="1098" fg:w="1"/><text x="88.3013%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.0513%" y="597" width="0.0802%" height="15" fill="rgb(216,210,27)" fg:x="1098" fg:w="1"/><text x="88.3013%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="88.0513%" y="677" width="0.1604%" height="15" fill="rgb(252,10,17)" fg:x="1098" fg:w="2"/><text x="88.3013%" y="687.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="88.0513%" y="661" width="0.1604%" height="15" fill="rgb(214,172,30)" fg:x="1098" fg:w="2"/><text x="88.3013%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="88.0513%" y="645" width="0.1604%" height="15" fill="rgb(253,130,48)" fg:x="1098" fg:w="2"/><text x="88.3013%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1315%" y="629" width="0.0802%" height="15" fill="rgb(226,99,43)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.1315%" y="613" width="0.0802%" height="15" fill="rgb(239,111,26)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.1315%" y="597" width="0.0802%" height="15" fill="rgb(240,27,53)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1315%" y="581" width="0.0802%" height="15" fill="rgb(254,163,12)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="88.1315%" y="565" width="0.0802%" height="15" fill="rgb(225,51,48)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.40%)</title><rect x="87.8909%" y="757" width="0.4010%" height="15" fill="rgb(205,19,32)" fg:x="1096" fg:w="5"/><text x="88.1409%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="87.8909%" y="741" width="0.4010%" height="15" fill="rgb(218,119,26)" fg:x="1096" fg:w="5"/><text x="88.1409%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="87.9711%" y="725" width="0.3208%" height="15" fill="rgb(231,173,33)" fg:x="1097" fg:w="4"/><text x="88.2211%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="88.0513%" y="709" width="0.2406%" height="15" fill="rgb(241,100,29)" fg:x="1098" fg:w="3"/><text x="88.3013%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="88.0513%" y="693" width="0.2406%" height="15" fill="rgb(250,194,34)" fg:x="1098" fg:w="3"/><text x="88.3013%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="88.2117%" y="677" width="0.0802%" height="15" fill="rgb(215,23,50)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="88.2919%" y="709" width="0.0802%" height="15" fill="rgb(206,49,37)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="719.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="88.2919%" y="693" width="0.0802%" height="15" fill="rgb(247,39,21)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.2919%" y="677" width="0.0802%" height="15" fill="rgb(209,220,15)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.2919%" y="661" width="0.0802%" height="15" fill="rgb(206,41,33)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.2919%" y="645" width="0.0802%" height="15" fill="rgb(221,225,45)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.2919%" y="629" width="0.0802%" height="15" fill="rgb(216,27,18)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.2919%" y="613" width="0.0802%" height="15" fill="rgb(250,193,34)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.2919%" y="597" width="0.0802%" height="15" fill="rgb(227,215,20)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.2919%" y="581" width="0.0802%" height="15" fill="rgb(242,211,27)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.2919%" y="565" width="0.0802%" height="15" fill="rgb(229,190,30)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.2919%" y="549" width="0.0802%" height="15" fill="rgb(253,31,29)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.2919%" y="533" width="0.0802%" height="15" fill="rgb(229,177,52)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.2919%" y="517" width="0.0802%" height="15" fill="rgb(226,88,8)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.2919%" y="501" width="0.0802%" height="15" fill="rgb(214,55,27)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.2919%" y="485" width="0.0802%" height="15" fill="rgb(233,202,5)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="88.2919%" y="725" width="0.1604%" height="15" fill="rgb(251,49,30)" fg:x="1101" fg:w="2"/><text x="88.5419%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.3721%" y="709" width="0.0802%" height="15" fill="rgb(235,18,52)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.3721%" y="693" width="0.0802%" height="15" fill="rgb(250,111,51)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.3721%" y="677" width="0.0802%" height="15" fill="rgb(218,13,25)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.3721%" y="661" width="0.0802%" height="15" fill="rgb(248,96,7)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.3721%" y="645" width="0.0802%" height="15" fill="rgb(217,31,15)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.3721%" y="629" width="0.0802%" height="15" fill="rgb(228,59,49)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.3721%" y="613" width="0.0802%" height="15" fill="rgb(210,152,38)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.3721%" y="597" width="0.0802%" height="15" fill="rgb(206,71,11)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.3721%" y="581" width="0.0802%" height="15" fill="rgb(244,199,5)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.3721%" y="565" width="0.0802%" height="15" fill="rgb(253,49,1)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.3721%" y="549" width="0.0802%" height="15" fill="rgb(225,206,40)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.3721%" y="533" width="0.0802%" height="15" fill="rgb(243,116,47)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.3721%" y="517" width="0.0802%" height="15" fill="rgb(219,225,16)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.3721%" y="501" width="0.0802%" height="15" fill="rgb(233,29,47)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="88.3721%" y="485" width="0.0802%" height="15" fill="rgb(250,179,18)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="88.3721%" y="469" width="0.0802%" height="15" fill="rgb(215,176,6)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="88.3721%" y="453" width="0.0802%" height="15" fill="rgb(214,117,39)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="88.3721%" y="437" width="0.0802%" height="15" fill="rgb(247,183,36)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="88.3721%" y="421" width="0.0802%" height="15" fill="rgb(237,200,3)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.4523%" y="725" width="0.0802%" height="15" fill="rgb(212,220,24)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.4523%" y="709" width="0.0802%" height="15" fill="rgb(245,216,20)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="88.5325%" y="725" width="0.0802%" height="15" fill="rgb(219,124,7)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="88.5325%" y="709" width="0.0802%" height="15" fill="rgb(227,167,8)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.5325%" y="693" width="0.0802%" height="15" fill="rgb(241,37,2)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.5325%" y="677" width="0.0802%" height="15" fill="rgb(238,134,33)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5325%" y="661" width="0.0802%" height="15" fill="rgb(248,48,27)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5325%" y="645" width="0.0802%" height="15" fill="rgb(212,14,16)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5325%" y="629" width="0.0802%" height="15" fill="rgb(217,205,37)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.5325%" y="613" width="0.0802%" height="15" fill="rgb(233,185,47)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.5325%" y="597" width="0.0802%" height="15" fill="rgb(244,88,8)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.5325%" y="581" width="0.0802%" height="15" fill="rgb(213,0,20)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.5325%" y="565" width="0.0802%" height="15" fill="rgb(238,159,36)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.5325%" y="549" width="0.0802%" height="15" fill="rgb(253,173,17)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.5325%" y="533" width="0.0802%" height="15" fill="rgb(221,23,28)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.5325%" y="517" width="0.0802%" height="15" fill="rgb(218,113,15)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.5325%" y="501" width="0.0802%" height="15" fill="rgb(233,58,3)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.5325%" y="485" width="0.0802%" height="15" fill="rgb(250,46,35)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.5325%" y="469" width="0.0802%" height="15" fill="rgb(210,169,11)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.5325%" y="453" width="0.0802%" height="15" fill="rgb(246,88,19)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.5325%" y="437" width="0.0802%" height="15" fill="rgb(206,81,49)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="88.2919%" y="741" width="0.4010%" height="15" fill="rgb(232,144,18)" fg:x="1101" fg:w="5"/><text x="88.5419%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="88.6127%" y="725" width="0.0802%" height="15" fill="rgb(235,2,27)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6127%" y="709" width="0.0802%" height="15" fill="rgb(239,157,39)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6127%" y="693" width="0.0802%" height="15" fill="rgb(220,11,17)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.6127%" y="677" width="0.0802%" height="15" fill="rgb(243,94,50)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.6127%" y="661" width="0.0802%" height="15" fill="rgb(218,22,0)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.6127%" y="645" width="0.0802%" height="15" fill="rgb(249,70,21)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.6127%" y="629" width="0.0802%" height="15" fill="rgb(245,111,46)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.6127%" y="613" width="0.0802%" height="15" fill="rgb(244,183,12)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.6127%" y="597" width="0.0802%" height="15" fill="rgb(207,117,0)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.6127%" y="581" width="0.0802%" height="15" fill="rgb(206,20,43)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.6127%" y="565" width="0.0802%" height="15" fill="rgb(221,104,11)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.6127%" y="549" width="0.0802%" height="15" fill="rgb(254,36,50)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6127%" y="533" width="0.0802%" height="15" fill="rgb(252,17,15)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="543.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="88.6929%" y="709" width="0.0802%" height="15" fill="rgb(219,129,43)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6929%" y="693" width="0.0802%" height="15" fill="rgb(205,34,45)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.6929%" y="677" width="0.0802%" height="15" fill="rgb(251,201,32)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="88.6929%" y="741" width="0.1604%" height="15" fill="rgb(205,56,0)" fg:x="1106" fg:w="2"/><text x="88.9429%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="88.6929%" y="725" width="0.1604%" height="15" fill="rgb(211,193,27)" fg:x="1106" fg:w="2"/><text x="88.9429%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="88.7731%" y="709" width="0.0802%" height="15" fill="rgb(231,100,42)" fg:x="1107" fg:w="1"/><text x="89.0231%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="88.7731%" y="693" width="0.0802%" height="15" fill="rgb(245,85,27)" fg:x="1107" fg:w="1"/><text x="89.0231%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.7731%" y="677" width="0.0802%" height="15" fill="rgb(241,76,24)" fg:x="1107" fg:w="1"/><text x="89.0231%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="88.8532%" y="709" width="0.1604%" height="15" fill="rgb(249,157,15)" fg:x="1108" fg:w="2"/><text x="89.1032%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.9334%" y="693" width="0.0802%" height="15" fill="rgb(222,218,25)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.9334%" y="677" width="0.0802%" height="15" fill="rgb(252,156,52)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="687.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.9334%" y="661" width="0.0802%" height="15" fill="rgb(211,185,7)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (136 samples, 10.91%)</title><rect x="78.1877%" y="773" width="10.9062%" height="15" fill="rgb(234,108,24)" fg:x="975" fg:w="136"/><text x="78.4377%" y="783.50">&lt;tests::HoldingK..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (10 samples, 0.80%)</title><rect x="88.2919%" y="757" width="0.8019%" height="15" fill="rgb(227,218,2)" fg:x="1101" fg:w="10"/><text x="88.5419%" y="767.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="88.8532%" y="741" width="0.2406%" height="15" fill="rgb(224,0,36)" fg:x="1108" fg:w="3"/><text x="89.1032%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="88.8532%" y="725" width="0.2406%" height="15" fill="rgb(233,201,10)" fg:x="1108" fg:w="3"/><text x="89.1032%" y="735.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="89.0136%" y="709" width="0.0802%" height="15" fill="rgb(252,209,14)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="89.0136%" y="693" width="0.0802%" height="15" fill="rgb(205,93,49)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="89.0136%" y="677" width="0.0802%" height="15" fill="rgb(234,116,45)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="89.0938%" y="773" width="0.0802%" height="15" fill="rgb(248,89,35)" fg:x="1111" fg:w="1"/><text x="89.3438%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="89.0938%" y="757" width="0.0802%" height="15" fill="rgb(233,167,45)" fg:x="1111" fg:w="1"/><text x="89.3438%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="89.0938%" y="741" width="0.0802%" height="15" fill="rgb(248,228,14)" fg:x="1111" fg:w="1"/><text x="89.3438%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="89.1740%" y="757" width="0.0802%" height="15" fill="rgb(246,91,14)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="767.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="89.1740%" y="741" width="0.0802%" height="15" fill="rgb(227,142,5)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="89.2542%" y="645" width="0.1604%" height="15" fill="rgb(221,63,33)" fg:x="1113" fg:w="2"/><text x="89.5042%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="89.2542%" y="629" width="0.1604%" height="15" fill="rgb(233,49,0)" fg:x="1113" fg:w="2"/><text x="89.5042%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.3344%" y="613" width="0.0802%" height="15" fill="rgb(251,115,38)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.3344%" y="597" width="0.0802%" height="15" fill="rgb(231,214,32)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.3344%" y="581" width="0.0802%" height="15" fill="rgb(248,73,46)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="89.3344%" y="565" width="0.0802%" height="15" fill="rgb(237,156,4)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="89.3344%" y="549" width="0.0802%" height="15" fill="rgb(227,132,2)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="89.3344%" y="533" width="0.0802%" height="15" fill="rgb(248,161,9)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="89.3344%" y="517" width="0.0802%" height="15" fill="rgb(238,77,38)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="89.3344%" y="501" width="0.0802%" height="15" fill="rgb(222,166,40)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="89.3344%" y="485" width="0.0802%" height="15" fill="rgb(214,168,45)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.3344%" y="469" width="0.0802%" height="15" fill="rgb(226,64,37)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="89.3344%" y="453" width="0.0802%" height="15" fill="rgb(232,210,43)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.3344%" y="437" width="0.0802%" height="15" fill="rgb(214,76,33)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="89.3344%" y="421" width="0.0802%" height="15" fill="rgb(210,78,5)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="89.3344%" y="405" width="0.0802%" height="15" fill="rgb(211,107,37)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="89.3344%" y="389" width="0.0802%" height="15" fill="rgb(249,67,16)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="89.3344%" y="373" width="0.0802%" height="15" fill="rgb(222,114,31)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="383.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="89.2542%" y="757" width="0.2406%" height="15" fill="rgb(242,118,19)" fg:x="1113" fg:w="3"/><text x="89.5042%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="89.2542%" y="741" width="0.2406%" height="15" fill="rgb(223,115,1)" fg:x="1113" fg:w="3"/><text x="89.5042%" y="751.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="89.2542%" y="725" width="0.2406%" height="15" fill="rgb(241,182,54)" fg:x="1113" fg:w="3"/><text x="89.5042%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="89.2542%" y="709" width="0.2406%" height="15" fill="rgb(244,166,36)" fg:x="1113" fg:w="3"/><text x="89.5042%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="89.2542%" y="693" width="0.2406%" height="15" fill="rgb(241,52,43)" fg:x="1113" fg:w="3"/><text x="89.5042%" y="703.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="89.2542%" y="677" width="0.2406%" height="15" fill="rgb(236,82,9)" fg:x="1113" fg:w="3"/><text x="89.5042%" y="687.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (3 samples, 0.24%)</title><rect x="89.2542%" y="661" width="0.2406%" height="15" fill="rgb(241,119,0)" fg:x="1113" fg:w="3"/><text x="89.5042%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.4146%" y="645" width="0.0802%" height="15" fill="rgb(221,19,22)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.4146%" y="629" width="0.0802%" height="15" fill="rgb(254,144,35)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="89.4146%" y="613" width="0.0802%" height="15" fill="rgb(246,132,30)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="623.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="89.4146%" y="597" width="0.0802%" height="15" fill="rgb(234,69,28)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.4146%" y="581" width="0.0802%" height="15" fill="rgb(219,106,47)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.4146%" y="565" width="0.0802%" height="15" fill="rgb(218,79,24)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="89.4146%" y="549" width="0.0802%" height="15" fill="rgb(225,26,21)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="89.4146%" y="533" width="0.0802%" height="15" fill="rgb(217,68,49)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="89.4146%" y="517" width="0.0802%" height="15" fill="rgb(220,204,28)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="89.4146%" y="501" width="0.0802%" height="15" fill="rgb(237,208,43)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="89.4146%" y="485" width="0.0802%" height="15" fill="rgb(213,97,42)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="89.4146%" y="469" width="0.0802%" height="15" fill="rgb(238,96,52)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.4146%" y="453" width="0.0802%" height="15" fill="rgb(228,14,13)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="89.4146%" y="437" width="0.0802%" height="15" fill="rgb(219,123,13)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.4146%" y="421" width="0.0802%" height="15" fill="rgb(216,144,17)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4146%" y="405" width="0.0802%" height="15" fill="rgb(230,228,29)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.4948%" y="725" width="0.0802%" height="15" fill="rgb(233,18,5)" fg:x="1116" fg:w="1"/><text x="89.7448%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="89.4948%" y="709" width="0.0802%" height="15" fill="rgb(233,197,12)" fg:x="1116" fg:w="1"/><text x="89.7448%" y="719.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="89.4948%" y="693" width="0.0802%" height="15" fill="rgb(234,140,29)" fg:x="1116" fg:w="1"/><text x="89.7448%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.4948%" y="677" width="0.0802%" height="15" fill="rgb(233,113,19)" fg:x="1116" fg:w="1"/><text x="89.7448%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.6552%" y="693" width="0.0802%" height="15" fill="rgb(246,209,13)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.6552%" y="677" width="0.0802%" height="15" fill="rgb(242,79,54)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.6552%" y="661" width="0.0802%" height="15" fill="rgb(219,73,16)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.6552%" y="645" width="0.0802%" height="15" fill="rgb(224,52,10)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.6552%" y="629" width="0.0802%" height="15" fill="rgb(237,179,5)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="89.6552%" y="613" width="0.0802%" height="15" fill="rgb(231,20,6)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.6552%" y="597" width="0.0802%" height="15" fill="rgb(253,171,45)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.8156%" y="661" width="0.0802%" height="15" fill="rgb(230,75,49)" fg:x="1120" fg:w="1"/><text x="90.0656%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="89.8957%" y="661" width="0.3208%" height="15" fill="rgb(216,83,46)" fg:x="1121" fg:w="4"/><text x="90.1457%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="89.9759%" y="645" width="0.2406%" height="15" fill="rgb(236,56,9)" fg:x="1122" fg:w="3"/><text x="90.2259%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="89.9759%" y="629" width="0.2406%" height="15" fill="rgb(215,28,34)" fg:x="1122" fg:w="3"/><text x="90.2259%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="90.0561%" y="613" width="0.1604%" height="15" fill="rgb(230,222,20)" fg:x="1123" fg:w="2"/><text x="90.3061%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="90.2165%" y="645" width="0.1604%" height="15" fill="rgb(235,209,51)" fg:x="1125" fg:w="2"/><text x="90.4665%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="90.2165%" y="629" width="0.1604%" height="15" fill="rgb(235,167,1)" fg:x="1125" fg:w="2"/><text x="90.4665%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="90.2165%" y="613" width="0.1604%" height="15" fill="rgb(248,220,0)" fg:x="1125" fg:w="2"/><text x="90.4665%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="90.2165%" y="597" width="0.1604%" height="15" fill="rgb(239,0,18)" fg:x="1125" fg:w="2"/><text x="90.4665%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="90.2165%" y="581" width="0.1604%" height="15" fill="rgb(229,179,11)" fg:x="1125" fg:w="2"/><text x="90.4665%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="90.2165%" y="565" width="0.1604%" height="15" fill="rgb(226,116,53)" fg:x="1125" fg:w="2"/><text x="90.4665%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="90.2165%" y="549" width="0.1604%" height="15" fill="rgb(218,1,49)" fg:x="1125" fg:w="2"/><text x="90.4665%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="90.2165%" y="533" width="0.1604%" height="15" fill="rgb(208,184,47)" fg:x="1125" fg:w="2"/><text x="90.4665%" y="543.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="90.2165%" y="517" width="0.1604%" height="15" fill="rgb(238,174,3)" fg:x="1125" fg:w="2"/><text x="90.4665%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.3769%" y="629" width="0.0802%" height="15" fill="rgb(247,188,6)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="90.4571%" y="629" width="0.1604%" height="15" fill="rgb(211,165,46)" fg:x="1128" fg:w="2"/><text x="90.7071%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="90.4571%" y="613" width="0.1604%" height="15" fill="rgb(222,190,10)" fg:x="1128" fg:w="2"/><text x="90.7071%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.5373%" y="597" width="0.0802%" height="15" fill="rgb(206,185,3)" fg:x="1129" fg:w="1"/><text x="90.7873%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="90.3769%" y="645" width="0.3208%" height="15" fill="rgb(244,125,37)" fg:x="1127" fg:w="4"/><text x="90.6269%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="90.6175%" y="629" width="0.0802%" height="15" fill="rgb(211,43,7)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="90.6175%" y="613" width="0.0802%" height="15" fill="rgb(250,41,42)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.6175%" y="597" width="0.0802%" height="15" fill="rgb(254,54,42)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.6175%" y="581" width="0.0802%" height="15" fill="rgb(213,71,43)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.6175%" y="565" width="0.0802%" height="15" fill="rgb(249,3,44)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.6175%" y="549" width="0.0802%" height="15" fill="rgb(229,80,41)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="90.2165%" y="661" width="0.5613%" height="15" fill="rgb(231,25,28)" fg:x="1125" fg:w="7"/><text x="90.4665%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.6977%" y="645" width="0.0802%" height="15" fill="rgb(208,79,48)" fg:x="1131" fg:w="1"/><text x="90.9477%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.12%)</title><rect x="89.7354%" y="693" width="1.1227%" height="15" fill="rgb(207,196,38)" fg:x="1119" fg:w="14"/><text x="89.9854%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="89.7354%" y="677" width="1.1227%" height="15" fill="rgb(228,105,49)" fg:x="1119" fg:w="14"/><text x="89.9854%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.7779%" y="661" width="0.0802%" height="15" fill="rgb(237,99,15)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.7779%" y="645" width="0.0802%" height="15" fill="rgb(224,207,46)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.8581%" y="693" width="0.0802%" height="15" fill="rgb(249,117,50)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.8581%" y="677" width="0.0802%" height="15" fill="rgb(248,17,13)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.8581%" y="661" width="0.0802%" height="15" fill="rgb(228,187,36)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.8581%" y="645" width="0.0802%" height="15" fill="rgb(234,132,20)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3392%" y="613" width="0.0802%" height="15" fill="rgb(209,170,46)" fg:x="1139" fg:w="1"/><text x="91.5892%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.4194%" y="613" width="0.0802%" height="15" fill="rgb(237,23,19)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.4996%" y="581" width="0.0802%" height="15" fill="rgb(227,21,26)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="91.0184%" y="661" width="0.6415%" height="15" fill="rgb(222,220,48)" fg:x="1135" fg:w="8"/><text x="91.2684%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="91.0184%" y="645" width="0.6415%" height="15" fill="rgb(214,9,16)" fg:x="1135" fg:w="8"/><text x="91.2684%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="91.0986%" y="629" width="0.5613%" height="15" fill="rgb(209,73,30)" fg:x="1136" fg:w="7"/><text x="91.3486%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="91.4996%" y="613" width="0.1604%" height="15" fill="rgb(207,20,33)" fg:x="1141" fg:w="2"/><text x="91.7496%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="91.4996%" y="597" width="0.1604%" height="15" fill="rgb(219,153,12)" fg:x="1141" fg:w="2"/><text x="91.7496%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.5798%" y="581" width="0.0802%" height="15" fill="rgb(235,97,25)" fg:x="1142" fg:w="1"/><text x="91.8298%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="91.6600%" y="645" width="0.1604%" height="15" fill="rgb(244,30,34)" fg:x="1143" fg:w="2"/><text x="91.9100%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="91.6600%" y="629" width="0.1604%" height="15" fill="rgb(214,106,45)" fg:x="1143" fg:w="2"/><text x="91.9100%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="91.7402%" y="613" width="0.0802%" height="15" fill="rgb(226,41,9)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.7402%" y="597" width="0.0802%" height="15" fill="rgb(253,139,29)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (11 samples, 0.88%)</title><rect x="91.0184%" y="677" width="0.8821%" height="15" fill="rgb(213,205,39)" fg:x="1135" fg:w="11"/><text x="91.2684%" y="687.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="91.6600%" y="661" width="0.2406%" height="15" fill="rgb(209,27,10)" fg:x="1143" fg:w="3"/><text x="91.9100%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="91.8204%" y="645" width="0.0802%" height="15" fill="rgb(249,142,16)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="91.8204%" y="629" width="0.0802%" height="15" fill="rgb(242,65,12)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.8204%" y="613" width="0.0802%" height="15" fill="rgb(232,48,10)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="91.9006%" y="645" width="0.0802%" height="15" fill="rgb(253,67,19)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="91.9808%" y="629" width="0.0802%" height="15" fill="rgb(227,93,29)" fg:x="1147" fg:w="1"/><text x="92.2308%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="91.9808%" y="645" width="0.1604%" height="15" fill="rgb(226,189,53)" fg:x="1147" fg:w="2"/><text x="92.2308%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="92.0609%" y="629" width="0.0802%" height="15" fill="rgb(223,224,1)" fg:x="1148" fg:w="1"/><text x="92.3109%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.0609%" y="613" width="0.0802%" height="15" fill="rgb(221,84,32)" fg:x="1148" fg:w="1"/><text x="92.3109%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.1411%" y="613" width="0.0802%" height="15" fill="rgb(214,189,28)" fg:x="1149" fg:w="1"/><text x="92.3911%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3817%" y="597" width="0.0802%" height="15" fill="rgb(234,7,52)" fg:x="1152" fg:w="1"/><text x="92.6317%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3817%" y="581" width="0.0802%" height="15" fill="rgb(249,73,31)" fg:x="1152" fg:w="1"/><text x="92.6317%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3817%" y="565" width="0.0802%" height="15" fill="rgb(253,153,41)" fg:x="1152" fg:w="1"/><text x="92.6317%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.4619%" y="549" width="0.1604%" height="15" fill="rgb(249,52,34)" fg:x="1153" fg:w="2"/><text x="92.7119%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.4619%" y="533" width="0.1604%" height="15" fill="rgb(236,177,47)" fg:x="1153" fg:w="2"/><text x="92.7119%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="92.4619%" y="517" width="0.1604%" height="15" fill="rgb(252,185,45)" fg:x="1153" fg:w="2"/><text x="92.7119%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="92.4619%" y="597" width="0.2406%" height="15" fill="rgb(251,15,30)" fg:x="1153" fg:w="3"/><text x="92.7119%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="92.4619%" y="581" width="0.2406%" height="15" fill="rgb(233,31,4)" fg:x="1153" fg:w="3"/><text x="92.7119%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="92.4619%" y="565" width="0.2406%" height="15" fill="rgb(254,44,24)" fg:x="1153" fg:w="3"/><text x="92.7119%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="92.6223%" y="549" width="0.0802%" height="15" fill="rgb(218,54,1)" fg:x="1155" fg:w="1"/><text x="92.8723%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.6223%" y="533" width="0.0802%" height="15" fill="rgb(243,209,39)" fg:x="1155" fg:w="1"/><text x="92.8723%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.7025%" y="581" width="0.0802%" height="15" fill="rgb(206,75,33)" fg:x="1156" fg:w="1"/><text x="92.9525%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="92.7827%" y="581" width="0.0802%" height="15" fill="rgb(223,108,18)" fg:x="1157" fg:w="1"/><text x="93.0327%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="92.8629%" y="549" width="0.1604%" height="15" fill="rgb(244,89,31)" fg:x="1158" fg:w="2"/><text x="93.1129%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="93.0233%" y="549" width="0.0802%" height="15" fill="rgb(222,167,27)" fg:x="1160" fg:w="1"/><text x="93.2733%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="92.2213%" y="613" width="0.9623%" height="15" fill="rgb(247,41,16)" fg:x="1150" fg:w="12"/><text x="92.4713%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="92.7025%" y="597" width="0.4812%" height="15" fill="rgb(233,168,40)" fg:x="1156" fg:w="6"/><text x="92.9525%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="92.8629%" y="581" width="0.3208%" height="15" fill="rgb(205,211,8)" fg:x="1158" fg:w="4"/><text x="93.1129%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="92.8629%" y="565" width="0.3208%" height="15" fill="rgb(238,105,11)" fg:x="1158" fg:w="4"/><text x="93.1129%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1034%" y="549" width="0.0802%" height="15" fill="rgb(223,142,52)" fg:x="1161" fg:w="1"/><text x="93.3534%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.36%)</title><rect x="91.9006%" y="677" width="1.3633%" height="15" fill="rgb(238,51,33)" fg:x="1146" fg:w="17"/><text x="92.1506%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.36%)</title><rect x="91.9006%" y="661" width="1.3633%" height="15" fill="rgb(231,188,43)" fg:x="1146" fg:w="17"/><text x="92.1506%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.12%)</title><rect x="92.1411%" y="645" width="1.1227%" height="15" fill="rgb(216,92,17)" fg:x="1149" fg:w="14"/><text x="92.3911%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.12%)</title><rect x="92.1411%" y="629" width="1.1227%" height="15" fill="rgb(228,2,40)" fg:x="1149" fg:w="14"/><text x="92.3911%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="93.1836%" y="613" width="0.0802%" height="15" fill="rgb(226,73,15)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1836%" y="597" width="0.0802%" height="15" fill="rgb(227,66,46)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.2638%" y="533" width="0.1604%" height="15" fill="rgb(209,71,6)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.2638%" y="517" width="0.1604%" height="15" fill="rgb(246,100,25)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.2638%" y="501" width="0.1604%" height="15" fill="rgb(248,185,27)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.3440%" y="485" width="0.0802%" height="15" fill="rgb(225,118,47)" fg:x="1164" fg:w="1"/><text x="93.5940%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="93.2638%" y="549" width="0.3208%" height="15" fill="rgb(220,185,44)" fg:x="1163" fg:w="4"/><text x="93.5138%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.4242%" y="533" width="0.1604%" height="15" fill="rgb(227,95,24)" fg:x="1165" fg:w="2"/><text x="93.6742%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="93.4242%" y="517" width="0.1604%" height="15" fill="rgb(252,84,24)" fg:x="1165" fg:w="2"/><text x="93.6742%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="93.4242%" y="501" width="0.1604%" height="15" fill="rgb(240,34,44)" fg:x="1165" fg:w="2"/><text x="93.6742%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5846%" y="533" width="0.0802%" height="15" fill="rgb(209,72,54)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="93.5846%" y="549" width="0.1604%" height="15" fill="rgb(226,19,45)" fg:x="1167" fg:w="2"/><text x="93.8346%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="93.6648%" y="533" width="0.0802%" height="15" fill="rgb(246,7,45)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="93.6648%" y="517" width="0.0802%" height="15" fill="rgb(225,45,2)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="93.2638%" y="613" width="0.5613%" height="15" fill="rgb(221,80,29)" fg:x="1163" fg:w="7"/><text x="93.5138%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="93.2638%" y="597" width="0.5613%" height="15" fill="rgb(228,11,19)" fg:x="1163" fg:w="7"/><text x="93.5138%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="93.2638%" y="581" width="0.5613%" height="15" fill="rgb(243,17,21)" fg:x="1163" fg:w="7"/><text x="93.5138%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="93.2638%" y="565" width="0.5613%" height="15" fill="rgb(243,88,8)" fg:x="1163" fg:w="7"/><text x="93.5138%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7450%" y="549" width="0.0802%" height="15" fill="rgb(214,17,9)" fg:x="1169" fg:w="1"/><text x="93.9950%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7450%" y="533" width="0.0802%" height="15" fill="rgb(232,169,15)" fg:x="1169" fg:w="1"/><text x="93.9950%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7450%" y="517" width="0.0802%" height="15" fill="rgb(232,86,53)" fg:x="1169" fg:w="1"/><text x="93.9950%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="93.8252%" y="613" width="0.1604%" height="15" fill="rgb(222,100,4)" fg:x="1170" fg:w="2"/><text x="94.0752%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.9054%" y="597" width="0.0802%" height="15" fill="rgb(253,151,38)" fg:x="1171" fg:w="1"/><text x="94.1554%" y="607.50"></text></g><g><title>engine::session::Session::close (61 samples, 4.89%)</title><rect x="89.1740%" y="773" width="4.8917%" height="15" fill="rgb(238,215,29)" fg:x="1112" fg:w="61"/><text x="89.4240%" y="783.50">engine..</text></g><g><title>engine::session::state::State::close (57 samples, 4.57%)</title><rect x="89.4948%" y="757" width="4.5710%" height="15" fill="rgb(205,128,53)" fg:x="1116" fg:w="57"/><text x="89.7448%" y="767.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (57 samples, 4.57%)</title><rect x="89.4948%" y="741" width="4.5710%" height="15" fill="rgb(248,183,14)" fg:x="1116" fg:w="57"/><text x="89.7448%" y="751.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (56 samples, 4.49%)</title><rect x="89.5750%" y="725" width="4.4908%" height="15" fill="rgb(244,172,35)" fg:x="1117" fg:w="56"/><text x="89.8250%" y="735.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (55 samples, 4.41%)</title><rect x="89.6552%" y="709" width="4.4106%" height="15" fill="rgb(234,93,19)" fg:x="1118" fg:w="55"/><text x="89.9052%" y="719.50">engin..</text></g><g><title>kernel::model::any_entity_changes (39 samples, 3.13%)</title><rect x="90.9383%" y="693" width="3.1275%" height="15" fill="rgb(227,109,7)" fg:x="1134" fg:w="39"/><text x="91.1883%" y="703.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.80%)</title><rect x="93.2638%" y="677" width="0.8019%" height="15" fill="rgb(233,136,54)" fg:x="1163" fg:w="10"/><text x="93.5138%" y="687.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.80%)</title><rect x="93.2638%" y="661" width="0.8019%" height="15" fill="rgb(233,19,40)" fg:x="1163" fg:w="10"/><text x="93.5138%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="93.2638%" y="645" width="0.8019%" height="15" fill="rgb(247,41,18)" fg:x="1163" fg:w="10"/><text x="93.5138%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="93.2638%" y="629" width="0.8019%" height="15" fill="rgb(220,34,34)" fg:x="1163" fg:w="10"/><text x="93.5138%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.9856%" y="613" width="0.0802%" height="15" fill="rgb(222,135,32)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.9856%" y="597" width="0.0802%" height="15" fill="rgb(214,80,19)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.9856%" y="581" width="0.0802%" height="15" fill="rgb(234,54,46)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.1460%" y="533" width="0.0802%" height="15" fill="rgb(251,48,23)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="94.1460%" y="517" width="0.0802%" height="15" fill="rgb(254,109,52)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.1460%" y="501" width="0.0802%" height="15" fill="rgb(240,186,19)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="94.1460%" y="565" width="0.1604%" height="15" fill="rgb(246,187,17)" fg:x="1174" fg:w="2"/><text x="94.3960%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="94.1460%" y="549" width="0.1604%" height="15" fill="rgb(212,21,5)" fg:x="1174" fg:w="2"/><text x="94.3960%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="94.2261%" y="533" width="0.0802%" height="15" fill="rgb(225,185,18)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.2261%" y="517" width="0.0802%" height="15" fill="rgb(245,114,17)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.2261%" y="501" width="0.0802%" height="15" fill="rgb(223,164,24)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2261%" y="485" width="0.0802%" height="15" fill="rgb(211,228,3)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.2261%" y="469" width="0.0802%" height="15" fill="rgb(223,16,38)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2261%" y="453" width="0.0802%" height="15" fill="rgb(207,31,54)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.2261%" y="437" width="0.0802%" height="15" fill="rgb(220,39,11)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="447.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="94.3063%" y="549" width="0.0802%" height="15" fill="rgb(235,185,0)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.3063%" y="533" width="0.0802%" height="15" fill="rgb(249,39,18)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3063%" y="517" width="0.0802%" height="15" fill="rgb(240,110,33)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.4667%" y="437" width="0.0802%" height="15" fill="rgb(210,92,42)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4667%" y="421" width="0.0802%" height="15" fill="rgb(218,215,28)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.4667%" y="405" width="0.0802%" height="15" fill="rgb(238,215,36)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.4667%" y="389" width="0.0802%" height="15" fill="rgb(220,31,10)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4667%" y="373" width="0.0802%" height="15" fill="rgb(212,93,14)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.4667%" y="357" width="0.0802%" height="15" fill="rgb(254,207,2)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.4667%" y="341" width="0.0802%" height="15" fill="rgb(205,57,44)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.4667%" y="325" width="0.0802%" height="15" fill="rgb(226,151,19)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.4667%" y="517" width="0.1604%" height="15" fill="rgb(230,72,30)" fg:x="1178" fg:w="2"/><text x="94.7167%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.4667%" y="501" width="0.1604%" height="15" fill="rgb(244,0,8)" fg:x="1178" fg:w="2"/><text x="94.7167%" y="511.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.4667%" y="485" width="0.1604%" height="15" fill="rgb(230,192,6)" fg:x="1178" fg:w="2"/><text x="94.7167%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.4667%" y="469" width="0.1604%" height="15" fill="rgb(233,207,13)" fg:x="1178" fg:w="2"/><text x="94.7167%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.4667%" y="453" width="0.1604%" height="15" fill="rgb(206,227,7)" fg:x="1178" fg:w="2"/><text x="94.7167%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.5469%" y="437" width="0.0802%" height="15" fill="rgb(213,217,25)" fg:x="1179" fg:w="1"/><text x="94.7969%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.5469%" y="421" width="0.0802%" height="15" fill="rgb(249,75,4)" fg:x="1179" fg:w="1"/><text x="94.7969%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.5469%" y="405" width="0.0802%" height="15" fill="rgb(225,114,18)" fg:x="1179" fg:w="1"/><text x="94.7969%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.5469%" y="389" width="0.0802%" height="15" fill="rgb(211,162,40)" fg:x="1179" fg:w="1"/><text x="94.7969%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.5469%" y="373" width="0.0802%" height="15" fill="rgb(206,49,29)" fg:x="1179" fg:w="1"/><text x="94.7969%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="94.5469%" y="357" width="0.0802%" height="15" fill="rgb(244,8,6)" fg:x="1179" fg:w="1"/><text x="94.7969%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5469%" y="341" width="0.0802%" height="15" fill="rgb(231,194,28)" fg:x="1179" fg:w="1"/><text x="94.7969%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (5 samples, 0.40%)</title><rect x="94.3063%" y="565" width="0.4010%" height="15" fill="rgb(210,69,5)" fg:x="1176" fg:w="5"/><text x="94.5563%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="94.3865%" y="549" width="0.3208%" height="15" fill="rgb(216,186,12)" fg:x="1177" fg:w="4"/><text x="94.6365%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="94.3865%" y="533" width="0.3208%" height="15" fill="rgb(238,61,15)" fg:x="1177" fg:w="4"/><text x="94.6365%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.6271%" y="517" width="0.0802%" height="15" fill="rgb(226,104,1)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.7073%" y="549" width="0.0802%" height="15" fill="rgb(229,128,15)" fg:x="1181" fg:w="1"/><text x="94.9573%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (9 samples, 0.72%)</title><rect x="94.1460%" y="613" width="0.7217%" height="15" fill="rgb(247,110,15)" fg:x="1174" fg:w="9"/><text x="94.3960%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.72%)</title><rect x="94.1460%" y="597" width="0.7217%" height="15" fill="rgb(210,74,48)" fg:x="1174" fg:w="9"/><text x="94.3960%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="94.1460%" y="581" width="0.7217%" height="15" fill="rgb(246,121,10)" fg:x="1174" fg:w="9"/><text x="94.3960%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="94.7073%" y="565" width="0.1604%" height="15" fill="rgb(214,156,37)" fg:x="1181" fg:w="2"/><text x="94.9573%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.7875%" y="549" width="0.0802%" height="15" fill="rgb(214,210,34)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7875%" y="533" width="0.0802%" height="15" fill="rgb(237,93,35)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7875%" y="517" width="0.0802%" height="15" fill="rgb(206,36,8)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.7875%" y="501" width="0.0802%" height="15" fill="rgb(208,151,12)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7875%" y="485" width="0.0802%" height="15" fill="rgb(225,133,52)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7875%" y="469" width="0.0802%" height="15" fill="rgb(231,71,53)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7875%" y="453" width="0.0802%" height="15" fill="rgb(243,76,21)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="463.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (10 samples, 0.80%)</title><rect x="94.1460%" y="661" width="0.8019%" height="15" fill="rgb(252,144,3)" fg:x="1174" fg:w="10"/><text x="94.3960%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.80%)</title><rect x="94.1460%" y="645" width="0.8019%" height="15" fill="rgb(231,199,10)" fg:x="1174" fg:w="10"/><text x="94.3960%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="94.1460%" y="629" width="0.8019%" height="15" fill="rgb(215,18,11)" fg:x="1174" fg:w="10"/><text x="94.3960%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.8677%" y="613" width="0.0802%" height="15" fill="rgb(241,65,24)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.8677%" y="597" width="0.0802%" height="15" fill="rgb(251,192,38)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.8677%" y="581" width="0.0802%" height="15" fill="rgb(205,9,35)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.8677%" y="565" width="0.0802%" height="15" fill="rgb(229,225,49)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="575.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (11 samples, 0.88%)</title><rect x="94.1460%" y="677" width="0.8821%" height="15" fill="rgb(207,125,39)" fg:x="1174" fg:w="11"/><text x="94.3960%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="94.9479%" y="661" width="0.0802%" height="15" fill="rgb(222,78,19)" fg:x="1184" fg:w="1"/><text x="95.1979%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9479%" y="645" width="0.0802%" height="15" fill="rgb(248,207,20)" fg:x="1184" fg:w="1"/><text x="95.1979%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.0281%" y="677" width="0.1604%" height="15" fill="rgb(205,103,49)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.0281%" y="661" width="0.1604%" height="15" fill="rgb(216,42,28)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.0281%" y="645" width="0.1604%" height="15" fill="rgb(213,205,53)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="95.0281%" y="629" width="0.1604%" height="15" fill="rgb(239,140,53)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="95.0281%" y="613" width="0.1604%" height="15" fill="rgb(248,95,9)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="95.0281%" y="597" width="0.1604%" height="15" fill="rgb(254,58,47)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="95.0281%" y="581" width="0.1604%" height="15" fill="rgb(234,227,14)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="95.0281%" y="565" width="0.1604%" height="15" fill="rgb(205,192,45)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="95.0281%" y="549" width="0.1604%" height="15" fill="rgb(253,187,31)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="95.0281%" y="533" width="0.1604%" height="15" fill="rgb(222,6,32)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="95.0281%" y="517" width="0.1604%" height="15" fill="rgb(249,190,19)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="95.0281%" y="501" width="0.1604%" height="15" fill="rgb(251,28,20)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.0281%" y="485" width="0.1604%" height="15" fill="rgb(210,223,40)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.1885%" y="501" width="0.0802%" height="15" fill="rgb(216,137,22)" fg:x="1187" fg:w="1"/><text x="95.4385%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.3488%" y="453" width="0.0802%" height="15" fill="rgb(247,39,34)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3488%" y="437" width="0.0802%" height="15" fill="rgb(239,43,50)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3488%" y="421" width="0.0802%" height="15" fill="rgb(241,212,9)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.3488%" y="405" width="0.0802%" height="15" fill="rgb(205,8,2)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.3488%" y="389" width="0.0802%" height="15" fill="rgb(217,173,54)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.3488%" y="373" width="0.0802%" height="15" fill="rgb(208,149,52)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.3488%" y="357" width="0.0802%" height="15" fill="rgb(239,99,40)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.3488%" y="341" width="0.0802%" height="15" fill="rgb(233,214,26)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.3488%" y="325" width="0.0802%" height="15" fill="rgb(231,225,37)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.3488%" y="309" width="0.0802%" height="15" fill="rgb(252,55,35)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.3488%" y="293" width="0.0802%" height="15" fill="rgb(239,43,18)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.3488%" y="277" width="0.0802%" height="15" fill="rgb(251,125,49)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3488%" y="261" width="0.0802%" height="15" fill="rgb(212,83,54)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.3488%" y="485" width="0.1604%" height="15" fill="rgb(250,75,6)" fg:x="1189" fg:w="2"/><text x="95.5988%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.3488%" y="469" width="0.1604%" height="15" fill="rgb(252,36,40)" fg:x="1189" fg:w="2"/><text x="95.5988%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4290%" y="453" width="0.0802%" height="15" fill="rgb(230,91,51)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4290%" y="437" width="0.0802%" height="15" fill="rgb(212,92,28)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.4290%" y="421" width="0.0802%" height="15" fill="rgb(227,13,22)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.4290%" y="405" width="0.0802%" height="15" fill="rgb(239,204,32)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.4290%" y="389" width="0.0802%" height="15" fill="rgb(228,49,41)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4290%" y="373" width="0.0802%" height="15" fill="rgb(206,95,6)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4290%" y="357" width="0.0802%" height="15" fill="rgb(251,20,14)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.4290%" y="341" width="0.0802%" height="15" fill="rgb(214,99,28)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.4290%" y="325" width="0.0802%" height="15" fill="rgb(239,122,54)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.4290%" y="309" width="0.0802%" height="15" fill="rgb(218,217,46)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.4290%" y="293" width="0.0802%" height="15" fill="rgb(249,106,28)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4290%" y="277" width="0.0802%" height="15" fill="rgb(250,158,18)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="95.5092%" y="485" width="0.0802%" height="15" fill="rgb(226,137,29)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (7 samples, 0.56%)</title><rect x="95.1885%" y="517" width="0.5613%" height="15" fill="rgb(210,188,1)" fg:x="1187" fg:w="7"/><text x="95.4385%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="95.2686%" y="501" width="0.4812%" height="15" fill="rgb(227,84,42)" fg:x="1188" fg:w="6"/><text x="95.5186%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.5894%" y="485" width="0.1604%" height="15" fill="rgb(222,147,48)" fg:x="1192" fg:w="2"/><text x="95.8394%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.5894%" y="469" width="0.1604%" height="15" fill="rgb(241,150,43)" fg:x="1192" fg:w="2"/><text x="95.8394%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.6696%" y="453" width="0.0802%" height="15" fill="rgb(206,139,52)" fg:x="1193" fg:w="1"/><text x="95.9196%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6696%" y="437" width="0.0802%" height="15" fill="rgb(230,63,14)" fg:x="1193" fg:w="1"/><text x="95.9196%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6696%" y="421" width="0.0802%" height="15" fill="rgb(247,8,20)" fg:x="1193" fg:w="1"/><text x="95.9196%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6696%" y="405" width="0.0802%" height="15" fill="rgb(213,115,4)" fg:x="1193" fg:w="1"/><text x="95.9196%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.6696%" y="389" width="0.0802%" height="15" fill="rgb(241,79,49)" fg:x="1193" fg:w="1"/><text x="95.9196%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="95.7498%" y="501" width="0.0802%" height="15" fill="rgb(222,42,35)" fg:x="1194" fg:w="1"/><text x="95.9998%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.7498%" y="485" width="0.0802%" height="15" fill="rgb(247,59,23)" fg:x="1194" fg:w="1"/><text x="95.9998%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.7498%" y="469" width="0.0802%" height="15" fill="rgb(247,93,18)" fg:x="1194" fg:w="1"/><text x="95.9998%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.9904%" y="485" width="0.0802%" height="15" fill="rgb(249,107,47)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.9904%" y="469" width="0.0802%" height="15" fill="rgb(219,27,1)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.9904%" y="453" width="0.0802%" height="15" fill="rgb(217,82,32)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0706%" y="453" width="0.0802%" height="15" fill="rgb(250,129,47)" fg:x="1198" fg:w="1"/><text x="96.3206%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.1508%" y="421" width="0.1604%" height="15" fill="rgb(253,88,35)" fg:x="1199" fg:w="2"/><text x="96.4008%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="96.1508%" y="405" width="0.1604%" height="15" fill="rgb(245,221,14)" fg:x="1199" fg:w="2"/><text x="96.4008%" y="415.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (16 samples, 1.28%)</title><rect x="95.1885%" y="533" width="1.2831%" height="15" fill="rgb(217,119,54)" fg:x="1187" fg:w="16"/><text x="95.4385%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="95.7498%" y="517" width="0.7217%" height="15" fill="rgb(247,128,31)" fg:x="1194" fg:w="9"/><text x="95.9998%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="95.8300%" y="501" width="0.6415%" height="15" fill="rgb(211,99,22)" fg:x="1195" fg:w="8"/><text x="96.0800%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="96.0706%" y="485" width="0.4010%" height="15" fill="rgb(212,20,17)" fg:x="1198" fg:w="5"/><text x="96.3206%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="96.0706%" y="469" width="0.4010%" height="15" fill="rgb(209,159,29)" fg:x="1198" fg:w="5"/><text x="96.3206%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="96.1508%" y="453" width="0.3208%" height="15" fill="rgb(222,177,53)" fg:x="1199" fg:w="4"/><text x="96.4008%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.1508%" y="437" width="0.3208%" height="15" fill="rgb(234,46,43)" fg:x="1199" fg:w="4"/><text x="96.4008%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.3111%" y="421" width="0.1604%" height="15" fill="rgb(208,108,14)" fg:x="1201" fg:w="2"/><text x="96.5611%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3111%" y="405" width="0.1604%" height="15" fill="rgb(226,78,53)" fg:x="1201" fg:w="2"/><text x="96.5611%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3913%" y="389" width="0.0802%" height="15" fill="rgb(230,20,41)" fg:x="1202" fg:w="1"/><text x="96.6413%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="96.4715%" y="533" width="0.0802%" height="15" fill="rgb(213,195,35)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="96.4715%" y="517" width="0.0802%" height="15" fill="rgb(242,62,36)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="96.4715%" y="501" width="0.0802%" height="15" fill="rgb(222,210,37)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="96.4715%" y="485" width="0.0802%" height="15" fill="rgb(232,107,19)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="96.4715%" y="469" width="0.0802%" height="15" fill="rgb(235,85,17)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.4715%" y="453" width="0.0802%" height="15" fill="rgb(219,195,31)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.4715%" y="437" width="0.0802%" height="15" fill="rgb(231,183,30)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="96.4715%" y="421" width="0.0802%" height="15" fill="rgb(212,0,11)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="96.4715%" y="405" width="0.0802%" height="15" fill="rgb(249,53,54)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.4715%" y="389" width="0.0802%" height="15" fill="rgb(211,118,13)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.4715%" y="373" width="0.0802%" height="15" fill="rgb(237,42,9)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="96.4715%" y="357" width="0.0802%" height="15" fill="rgb(227,68,32)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="96.4715%" y="341" width="0.0802%" height="15" fill="rgb(238,10,7)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.4715%" y="325" width="0.0802%" height="15" fill="rgb(224,42,12)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.4715%" y="309" width="0.0802%" height="15" fill="rgb(252,190,5)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="96.4715%" y="293" width="0.0802%" height="15" fill="rgb(220,214,39)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="96.4715%" y="277" width="0.0802%" height="15" fill="rgb(247,98,4)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="96.4715%" y="261" width="0.0802%" height="15" fill="rgb(211,60,12)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="96.4715%" y="245" width="0.0802%" height="15" fill="rgb(224,42,10)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="96.4715%" y="229" width="0.0802%" height="15" fill="rgb(217,167,4)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="96.4715%" y="213" width="0.0802%" height="15" fill="rgb(253,18,17)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.4715%" y="197" width="0.0802%" height="15" fill="rgb(249,186,44)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="207.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.6319%" y="501" width="0.0802%" height="15" fill="rgb(254,124,54)" fg:x="1205" fg:w="1"/><text x="96.8819%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.6319%" y="485" width="0.0802%" height="15" fill="rgb(220,124,39)" fg:x="1205" fg:w="1"/><text x="96.8819%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.7923%" y="357" width="0.0802%" height="15" fill="rgb(225,96,46)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.7923%" y="341" width="0.0802%" height="15" fill="rgb(221,106,12)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.7923%" y="325" width="0.0802%" height="15" fill="rgb(227,133,23)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7923%" y="309" width="0.0802%" height="15" fill="rgb(216,44,52)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.7923%" y="293" width="0.0802%" height="15" fill="rgb(239,149,7)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7923%" y="277" width="0.0802%" height="15" fill="rgb(211,157,31)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.7923%" y="261" width="0.0802%" height="15" fill="rgb(206,215,22)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7923%" y="245" width="0.0802%" height="15" fill="rgb(208,113,15)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.7923%" y="229" width="0.0802%" height="15" fill="rgb(207,189,15)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.7923%" y="213" width="0.0802%" height="15" fill="rgb(231,115,4)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.8725%" y="341" width="0.0802%" height="15" fill="rgb(253,117,2)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.9527%" y="229" width="0.0802%" height="15" fill="rgb(248,48,24)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="96.8725%" y="357" width="0.2406%" height="15" fill="rgb(241,28,46)" fg:x="1208" fg:w="3"/><text x="97.1225%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.9527%" y="341" width="0.1604%" height="15" fill="rgb(216,165,52)" fg:x="1209" fg:w="2"/><text x="97.2027%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.9527%" y="325" width="0.1604%" height="15" fill="rgb(220,222,34)" fg:x="1209" fg:w="2"/><text x="97.2027%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9527%" y="309" width="0.1604%" height="15" fill="rgb(247,222,49)" fg:x="1209" fg:w="2"/><text x="97.2027%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.9527%" y="293" width="0.1604%" height="15" fill="rgb(240,10,31)" fg:x="1209" fg:w="2"/><text x="97.2027%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9527%" y="277" width="0.1604%" height="15" fill="rgb(221,199,35)" fg:x="1209" fg:w="2"/><text x="97.2027%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.9527%" y="261" width="0.1604%" height="15" fill="rgb(230,223,11)" fg:x="1209" fg:w="2"/><text x="97.2027%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9527%" y="245" width="0.1604%" height="15" fill="rgb(218,82,45)" fg:x="1209" fg:w="2"/><text x="97.2027%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.0329%" y="229" width="0.0802%" height="15" fill="rgb(233,213,33)" fg:x="1210" fg:w="1"/><text x="97.2829%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="96.7121%" y="389" width="0.4812%" height="15" fill="rgb(210,143,52)" fg:x="1206" fg:w="6"/><text x="96.9621%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="96.7121%" y="373" width="0.4812%" height="15" fill="rgb(206,95,4)" fg:x="1206" fg:w="6"/><text x="96.9621%" y="383.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="97.1131%" y="357" width="0.0802%" height="15" fill="rgb(246,164,46)" fg:x="1211" fg:w="1"/><text x="97.3631%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="97.1131%" y="341" width="0.0802%" height="15" fill="rgb(213,210,47)" fg:x="1211" fg:w="1"/><text x="97.3631%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.1933%" y="325" width="0.0802%" height="15" fill="rgb(210,12,38)" fg:x="1212" fg:w="1"/><text x="97.4433%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.3536%" y="293" width="0.0802%" height="15" fill="rgb(252,192,54)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="97.3536%" y="277" width="0.0802%" height="15" fill="rgb(242,92,6)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4338%" y="293" width="0.0802%" height="15" fill="rgb(253,154,15)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4338%" y="277" width="0.0802%" height="15" fill="rgb(209,20,43)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.4338%" y="261" width="0.0802%" height="15" fill="rgb(232,28,49)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="271.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="97.1933%" y="373" width="0.4812%" height="15" fill="rgb(248,131,53)" fg:x="1212" fg:w="6"/><text x="97.4433%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="97.1933%" y="357" width="0.4812%" height="15" fill="rgb(214,16,30)" fg:x="1212" fg:w="6"/><text x="97.4433%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="97.1933%" y="341" width="0.4812%" height="15" fill="rgb(245,16,0)" fg:x="1212" fg:w="6"/><text x="97.4433%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="97.2735%" y="325" width="0.4010%" height="15" fill="rgb(245,17,35)" fg:x="1213" fg:w="5"/><text x="97.5235%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="97.2735%" y="309" width="0.4010%" height="15" fill="rgb(249,27,53)" fg:x="1213" fg:w="5"/><text x="97.5235%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.5140%" y="293" width="0.1604%" height="15" fill="rgb(214,73,24)" fg:x="1216" fg:w="2"/><text x="97.7640%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.5140%" y="277" width="0.1604%" height="15" fill="rgb(223,84,37)" fg:x="1216" fg:w="2"/><text x="97.7640%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.5942%" y="261" width="0.0802%" height="15" fill="rgb(210,109,28)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.5942%" y="245" width="0.0802%" height="15" fill="rgb(208,186,6)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.5942%" y="229" width="0.0802%" height="15" fill="rgb(235,201,30)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="97.5942%" y="213" width="0.0802%" height="15" fill="rgb(216,198,48)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6744%" y="293" width="0.0802%" height="15" fill="rgb(254,186,25)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6744%" y="277" width="0.0802%" height="15" fill="rgb(227,87,5)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.6744%" y="261" width="0.0802%" height="15" fill="rgb(236,205,25)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6744%" y="245" width="0.0802%" height="15" fill="rgb(229,99,32)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6744%" y="229" width="0.0802%" height="15" fill="rgb(231,177,31)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6744%" y="213" width="0.0802%" height="15" fill="rgb(246,15,2)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (8 samples, 0.64%)</title><rect x="97.1933%" y="389" width="0.6415%" height="15" fill="rgb(207,39,15)" fg:x="1212" fg:w="8"/><text x="97.4433%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.6744%" y="373" width="0.1604%" height="15" fill="rgb(207,44,9)" fg:x="1218" fg:w="2"/><text x="97.9244%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.6744%" y="357" width="0.1604%" height="15" fill="rgb(225,224,33)" fg:x="1218" fg:w="2"/><text x="97.9244%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="97.6744%" y="341" width="0.1604%" height="15" fill="rgb(252,151,3)" fg:x="1218" fg:w="2"/><text x="97.9244%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.6744%" y="325" width="0.1604%" height="15" fill="rgb(211,140,13)" fg:x="1218" fg:w="2"/><text x="97.9244%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.6744%" y="309" width="0.1604%" height="15" fill="rgb(239,225,17)" fg:x="1218" fg:w="2"/><text x="97.9244%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7546%" y="293" width="0.0802%" height="15" fill="rgb(223,170,52)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.7546%" y="277" width="0.0802%" height="15" fill="rgb(212,64,21)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.7546%" y="261" width="0.0802%" height="15" fill="rgb(236,126,48)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7546%" y="245" width="0.0802%" height="15" fill="rgb(209,135,11)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.7546%" y="229" width="0.0802%" height="15" fill="rgb(228,126,40)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.7546%" y="213" width="0.0802%" height="15" fill="rgb(205,196,36)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7546%" y="197" width="0.0802%" height="15" fill="rgb(243,160,33)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.7546%" y="181" width="0.0802%" height="15" fill="rgb(210,84,20)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8348%" y="357" width="0.0802%" height="15" fill="rgb(228,213,30)" fg:x="1220" fg:w="1"/><text x="98.0848%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8348%" y="341" width="0.0802%" height="15" fill="rgb(252,33,45)" fg:x="1220" fg:w="1"/><text x="98.0848%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8348%" y="325" width="0.0802%" height="15" fill="rgb(254,227,20)" fg:x="1220" fg:w="1"/><text x="98.0848%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.8348%" y="389" width="0.1604%" height="15" fill="rgb(228,192,2)" fg:x="1220" fg:w="2"/><text x="98.0848%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.8348%" y="373" width="0.1604%" height="15" fill="rgb(233,32,8)" fg:x="1220" fg:w="2"/><text x="98.0848%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9150%" y="357" width="0.0802%" height="15" fill="rgb(220,146,47)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9150%" y="341" width="0.0802%" height="15" fill="rgb(246,194,1)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.9150%" y="325" width="0.0802%" height="15" fill="rgb(218,203,9)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9150%" y="309" width="0.0802%" height="15" fill="rgb(237,97,14)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9150%" y="293" width="0.0802%" height="15" fill="rgb(239,76,15)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9150%" y="277" width="0.0802%" height="15" fill="rgb(222,53,45)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (18 samples, 1.44%)</title><rect x="96.7121%" y="501" width="1.4435%" height="15" fill="rgb(237,88,5)" fg:x="1206" fg:w="18"/><text x="96.9621%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (18 samples, 1.44%)</title><rect x="96.7121%" y="485" width="1.4435%" height="15" fill="rgb(218,223,35)" fg:x="1206" fg:w="18"/><text x="96.9621%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 1.44%)</title><rect x="96.7121%" y="469" width="1.4435%" height="15" fill="rgb(243,229,38)" fg:x="1206" fg:w="18"/><text x="96.9621%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 1.44%)</title><rect x="96.7121%" y="453" width="1.4435%" height="15" fill="rgb(240,75,41)" fg:x="1206" fg:w="18"/><text x="96.9621%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (18 samples, 1.44%)</title><rect x="96.7121%" y="437" width="1.4435%" height="15" fill="rgb(209,110,37)" fg:x="1206" fg:w="18"/><text x="96.9621%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (18 samples, 1.44%)</title><rect x="96.7121%" y="421" width="1.4435%" height="15" fill="rgb(221,130,46)" fg:x="1206" fg:w="18"/><text x="96.9621%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (18 samples, 1.44%)</title><rect x="96.7121%" y="405" width="1.4435%" height="15" fill="rgb(237,160,20)" fg:x="1206" fg:w="18"/><text x="96.9621%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="97.9952%" y="389" width="0.1604%" height="15" fill="rgb(234,126,24)" fg:x="1222" fg:w="2"/><text x="98.2452%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.9952%" y="373" width="0.1604%" height="15" fill="rgb(207,177,9)" fg:x="1222" fg:w="2"/><text x="98.2452%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.9952%" y="357" width="0.1604%" height="15" fill="rgb(231,191,33)" fg:x="1222" fg:w="2"/><text x="98.2452%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="97.9952%" y="341" width="0.1604%" height="15" fill="rgb(207,42,1)" fg:x="1222" fg:w="2"/><text x="98.2452%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.9952%" y="325" width="0.1604%" height="15" fill="rgb(218,34,50)" fg:x="1222" fg:w="2"/><text x="98.2452%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (53 samples, 4.25%)</title><rect x="94.0658%" y="741" width="4.2502%" height="15" fill="rgb(254,126,39)" fg:x="1173" fg:w="53"/><text x="94.3158%" y="751.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::apply_middleware (53 samples, 4.25%)</title><rect x="94.0658%" y="725" width="4.2502%" height="15" fill="rgb(251,17,26)" fg:x="1173" fg:w="53"/><text x="94.3158%" y="735.50">kerne..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (53 samples, 4.25%)</title><rect x="94.0658%" y="709" width="4.2502%" height="15" fill="rgb(252,215,34)" fg:x="1173" fg:w="53"/><text x="94.3158%" y="719.50">kerne..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (53 samples, 4.25%)</title><rect x="94.0658%" y="693" width="4.2502%" height="15" fill="rgb(217,120,44)" fg:x="1173" fg:w="53"/><text x="94.3158%" y="703.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (39 samples, 3.13%)</title><rect x="95.1885%" y="677" width="3.1275%" height="15" fill="rgb(211,31,11)" fg:x="1187" fg:w="39"/><text x="95.4385%" y="687.50">ker..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (39 samples, 3.13%)</title><rect x="95.1885%" y="661" width="3.1275%" height="15" fill="rgb(222,69,51)" fg:x="1187" fg:w="39"/><text x="95.4385%" y="671.50">&lt;pl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (39 samples, 3.13%)</title><rect x="95.1885%" y="645" width="3.1275%" height="15" fill="rgb(215,229,42)" fg:x="1187" fg:w="39"/><text x="95.4385%" y="655.50">ker..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (39 samples, 3.13%)</title><rect x="95.1885%" y="629" width="3.1275%" height="15" fill="rgb(212,102,15)" fg:x="1187" fg:w="39"/><text x="95.4385%" y="639.50">cor..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (39 samples, 3.13%)</title><rect x="95.1885%" y="613" width="3.1275%" height="15" fill="rgb(205,179,41)" fg:x="1187" fg:w="39"/><text x="95.4385%" y="623.50">ker..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (39 samples, 3.13%)</title><rect x="95.1885%" y="597" width="3.1275%" height="15" fill="rgb(219,148,46)" fg:x="1187" fg:w="39"/><text x="95.4385%" y="607.50">cor..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (39 samples, 3.13%)</title><rect x="95.1885%" y="581" width="3.1275%" height="15" fill="rgb(243,40,19)" fg:x="1187" fg:w="39"/><text x="95.4385%" y="591.50">&lt;en..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (39 samples, 3.13%)</title><rect x="95.1885%" y="565" width="3.1275%" height="15" fill="rgb(208,206,34)" fg:x="1187" fg:w="39"/><text x="95.4385%" y="575.50">&lt;pl..</text></g><g><title>plugins_core::looking::model::new_area_observation (39 samples, 3.13%)</title><rect x="95.1885%" y="549" width="3.1275%" height="15" fill="rgb(244,184,38)" fg:x="1187" fg:w="39"/><text x="95.4385%" y="559.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (22 samples, 1.76%)</title><rect x="96.5517%" y="533" width="1.7642%" height="15" fill="rgb(244,151,47)" fg:x="1204" fg:w="22"/><text x="96.8017%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (22 samples, 1.76%)</title><rect x="96.5517%" y="517" width="1.7642%" height="15" fill="rgb(236,134,42)" fg:x="1204" fg:w="22"/><text x="96.8017%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.1556%" y="501" width="0.1604%" height="15" fill="rgb(233,93,22)" fg:x="1224" fg:w="2"/><text x="98.4056%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.1556%" y="485" width="0.1604%" height="15" fill="rgb(211,202,10)" fg:x="1224" fg:w="2"/><text x="98.4056%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.2358%" y="469" width="0.0802%" height="15" fill="rgb(240,63,8)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.2358%" y="453" width="0.0802%" height="15" fill="rgb(214,9,4)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.3160%" y="661" width="0.0802%" height="15" fill="rgb(243,66,45)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="671.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="98.3160%" y="645" width="0.0802%" height="15" fill="rgb(220,50,42)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="98.3160%" y="693" width="0.2406%" height="15" fill="rgb(220,134,27)" fg:x="1226" fg:w="3"/><text x="98.5660%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="98.3160%" y="677" width="0.2406%" height="15" fill="rgb(246,151,50)" fg:x="1226" fg:w="3"/><text x="98.5660%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="98.3962%" y="661" width="0.1604%" height="15" fill="rgb(238,216,27)" fg:x="1227" fg:w="2"/><text x="98.6462%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.3962%" y="645" width="0.1604%" height="15" fill="rgb(250,92,11)" fg:x="1227" fg:w="2"/><text x="98.6462%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4763%" y="629" width="0.0802%" height="15" fill="rgb(248,183,6)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4763%" y="613" width="0.0802%" height="15" fill="rgb(211,204,50)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4763%" y="597" width="0.0802%" height="15" fill="rgb(252,55,47)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.5565%" y="629" width="0.0802%" height="15" fill="rgb(240,198,32)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.5565%" y="613" width="0.0802%" height="15" fill="rgb(224,203,19)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="623.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="98.5565%" y="677" width="0.3208%" height="15" fill="rgb(205,27,16)" fg:x="1229" fg:w="4"/><text x="98.8065%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.5565%" y="661" width="0.3208%" height="15" fill="rgb(224,226,17)" fg:x="1229" fg:w="4"/><text x="98.8065%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.5565%" y="645" width="0.3208%" height="15" fill="rgb(205,216,54)" fg:x="1229" fg:w="4"/><text x="98.8065%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.6367%" y="629" width="0.2406%" height="15" fill="rgb(248,168,46)" fg:x="1230" fg:w="3"/><text x="98.8867%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.7169%" y="613" width="0.1604%" height="15" fill="rgb(226,111,45)" fg:x="1231" fg:w="2"/><text x="98.9669%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.7971%" y="597" width="0.0802%" height="15" fill="rgb(231,15,9)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7971%" y="581" width="0.0802%" height="15" fill="rgb(243,168,3)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.7971%" y="565" width="0.0802%" height="15" fill="rgb(221,220,54)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7971%" y="549" width="0.0802%" height="15" fill="rgb(232,174,38)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.9575%" y="565" width="0.1604%" height="15" fill="rgb(205,14,38)" fg:x="1234" fg:w="2"/><text x="99.2075%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0377%" y="549" width="0.0802%" height="15" fill="rgb(234,89,19)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="559.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.0377%" y="533" width="0.0802%" height="15" fill="rgb(216,68,51)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="99.0377%" y="517" width="0.0802%" height="15" fill="rgb(213,49,2)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.9575%" y="597" width="0.2406%" height="15" fill="rgb(242,146,30)" fg:x="1234" fg:w="3"/><text x="99.2075%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.9575%" y="581" width="0.2406%" height="15" fill="rgb(224,188,11)" fg:x="1234" fg:w="3"/><text x="99.2075%" y="591.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.1179%" y="565" width="0.0802%" height="15" fill="rgb(213,159,11)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1179%" y="549" width="0.0802%" height="15" fill="rgb(229,13,31)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1179%" y="533" width="0.0802%" height="15" fill="rgb(209,103,11)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1179%" y="517" width="0.0802%" height="15" fill="rgb(206,3,4)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.1179%" y="501" width="0.0802%" height="15" fill="rgb(252,10,49)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="99.1179%" y="485" width="0.0802%" height="15" fill="rgb(217,160,32)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1179%" y="469" width="0.0802%" height="15" fill="rgb(249,196,0)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.1981%" y="517" width="0.0802%" height="15" fill="rgb(213,17,48)" fg:x="1237" fg:w="1"/><text x="99.4481%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.1981%" y="501" width="0.0802%" height="15" fill="rgb(206,42,46)" fg:x="1237" fg:w="1"/><text x="99.4481%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.1981%" y="485" width="0.0802%" height="15" fill="rgb(212,105,24)" fg:x="1237" fg:w="1"/><text x="99.4481%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="98.9575%" y="645" width="0.4010%" height="15" fill="rgb(243,216,30)" fg:x="1234" fg:w="5"/><text x="99.2075%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.9575%" y="629" width="0.4010%" height="15" fill="rgb(207,121,3)" fg:x="1234" fg:w="5"/><text x="99.2075%" y="639.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="98.9575%" y="613" width="0.4010%" height="15" fill="rgb(249,78,0)" fg:x="1234" fg:w="5"/><text x="99.2075%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1981%" y="597" width="0.1604%" height="15" fill="rgb(244,151,32)" fg:x="1237" fg:w="2"/><text x="99.4481%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1981%" y="581" width="0.1604%" height="15" fill="rgb(228,63,25)" fg:x="1237" fg:w="2"/><text x="99.4481%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="99.1981%" y="565" width="0.1604%" height="15" fill="rgb(231,158,23)" fg:x="1237" fg:w="2"/><text x="99.4481%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1981%" y="549" width="0.1604%" height="15" fill="rgb(248,107,23)" fg:x="1237" fg:w="2"/><text x="99.4481%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1981%" y="533" width="0.1604%" height="15" fill="rgb(215,168,21)" fg:x="1237" fg:w="2"/><text x="99.4481%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2783%" y="517" width="0.0802%" height="15" fill="rgb(227,83,22)" fg:x="1238" fg:w="1"/><text x="99.5283%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2783%" y="501" width="0.0802%" height="15" fill="rgb(217,118,43)" fg:x="1238" fg:w="1"/><text x="99.5283%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2783%" y="485" width="0.0802%" height="15" fill="rgb(229,220,41)" fg:x="1238" fg:w="1"/><text x="99.5283%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (11 samples, 0.88%)</title><rect x="98.5565%" y="693" width="0.8821%" height="15" fill="rgb(254,146,46)" fg:x="1229" fg:w="11"/><text x="98.8065%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="98.8773%" y="677" width="0.5613%" height="15" fill="rgb(233,208,31)" fg:x="1233" fg:w="7"/><text x="99.1273%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="98.8773%" y="661" width="0.5613%" height="15" fill="rgb(222,162,7)" fg:x="1233" fg:w="7"/><text x="99.1273%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3585%" y="645" width="0.0802%" height="15" fill="rgb(230,117,45)" fg:x="1239" fg:w="1"/><text x="99.6085%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3585%" y="629" width="0.0802%" height="15" fill="rgb(239,163,6)" fg:x="1239" fg:w="1"/><text x="99.6085%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (15 samples, 1.20%)</title><rect x="98.3160%" y="725" width="1.2029%" height="15" fill="rgb(246,130,17)" fg:x="1226" fg:w="15"/><text x="98.5660%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (15 samples, 1.20%)</title><rect x="98.3160%" y="709" width="1.2029%" height="15" fill="rgb(216,84,5)" fg:x="1226" fg:w="15"/><text x="98.5660%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.4387%" y="693" width="0.0802%" height="15" fill="rgb(230,200,21)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.4387%" y="677" width="0.0802%" height="15" fill="rgb(224,2,8)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.4387%" y="661" width="0.0802%" height="15" fill="rgb(238,178,10)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4387%" y="645" width="0.0802%" height="15" fill="rgb(242,153,24)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.4387%" y="629" width="0.0802%" height="15" fill="rgb(242,32,48)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4387%" y="613" width="0.0802%" height="15" fill="rgb(227,36,0)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.4387%" y="597" width="0.0802%" height="15" fill="rgb(251,33,35)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4387%" y="581" width="0.0802%" height="15" fill="rgb(232,168,51)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="99.4387%" y="565" width="0.0802%" height="15" fill="rgb(228,56,10)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.5188%" y="517" width="0.0802%" height="15" fill="rgb(231,10,26)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.5188%" y="501" width="0.0802%" height="15" fill="rgb(226,202,12)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.5188%" y="485" width="0.0802%" height="15" fill="rgb(251,49,21)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.5188%" y="469" width="0.0802%" height="15" fill="rgb(206,228,28)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.5188%" y="453" width="0.0802%" height="15" fill="rgb(205,198,31)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.5188%" y="437" width="0.0802%" height="15" fill="rgb(213,69,1)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.5188%" y="421" width="0.0802%" height="15" fill="rgb(209,177,9)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.5188%" y="405" width="0.0802%" height="15" fill="rgb(227,119,30)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.5188%" y="389" width="0.0802%" height="15" fill="rgb(234,106,41)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.5188%" y="373" width="0.0802%" height="15" fill="rgb(244,103,47)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.5188%" y="357" width="0.0802%" height="15" fill="rgb(212,211,25)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.5188%" y="341" width="0.0802%" height="15" fill="rgb(208,63,53)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.5188%" y="325" width="0.0802%" height="15" fill="rgb(213,176,21)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.5188%" y="309" width="0.0802%" height="15" fill="rgb(243,124,12)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.5188%" y="293" width="0.0802%" height="15" fill="rgb(239,2,35)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.5188%" y="277" width="0.0802%" height="15" fill="rgb(253,169,22)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.5188%" y="261" width="0.0802%" height="15" fill="rgb(254,51,12)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.5188%" y="245" width="0.0802%" height="15" fill="rgb(244,17,47)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.5188%" y="229" width="0.0802%" height="15" fill="rgb(251,45,46)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (18 samples, 1.44%)</title><rect x="98.3160%" y="741" width="1.4435%" height="15" fill="rgb(223,87,43)" fg:x="1226" fg:w="18"/><text x="98.5660%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="99.5188%" y="725" width="0.2406%" height="15" fill="rgb(230,132,31)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="99.5188%" y="709" width="0.2406%" height="15" fill="rgb(206,99,1)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="99.5188%" y="693" width="0.2406%" height="15" fill="rgb(227,110,25)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="703.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.5188%" y="677" width="0.2406%" height="15" fill="rgb(217,182,7)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="99.5188%" y="661" width="0.2406%" height="15" fill="rgb(250,176,4)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="99.5188%" y="645" width="0.2406%" height="15" fill="rgb(244,98,30)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="99.5188%" y="629" width="0.2406%" height="15" fill="rgb(228,150,42)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="639.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.5188%" y="613" width="0.2406%" height="15" fill="rgb(231,91,46)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="99.5188%" y="597" width="0.2406%" height="15" fill="rgb(252,161,32)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="99.5188%" y="581" width="0.2406%" height="15" fill="rgb(236,69,41)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="99.5188%" y="565" width="0.2406%" height="15" fill="rgb(212,160,3)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="575.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.5188%" y="549" width="0.2406%" height="15" fill="rgb(216,5,50)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="99.5188%" y="533" width="0.2406%" height="15" fill="rgb(241,138,25)" fg:x="1241" fg:w="3"/><text x="99.7688%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="99.5990%" y="517" width="0.1604%" height="15" fill="rgb(239,42,18)" fg:x="1242" fg:w="2"/><text x="99.8490%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="99.5990%" y="501" width="0.1604%" height="15" fill="rgb(239,40,7)" fg:x="1242" fg:w="2"/><text x="99.8490%" y="511.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="99.5990%" y="485" width="0.1604%" height="15" fill="rgb(239,11,31)" fg:x="1242" fg:w="2"/><text x="99.8490%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="99.5990%" y="469" width="0.1604%" height="15" fill="rgb(224,77,40)" fg:x="1242" fg:w="2"/><text x="99.8490%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="99.5990%" y="453" width="0.1604%" height="15" fill="rgb(226,15,5)" fg:x="1242" fg:w="2"/><text x="99.8490%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="99.5990%" y="437" width="0.1604%" height="15" fill="rgb(254,188,5)" fg:x="1242" fg:w="2"/><text x="99.8490%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="99.5990%" y="421" width="0.1604%" height="15" fill="rgb(241,148,52)" fg:x="1242" fg:w="2"/><text x="99.8490%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="99.5990%" y="405" width="0.1604%" height="15" fill="rgb(251,48,36)" fg:x="1242" fg:w="2"/><text x="99.8490%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="99.5990%" y="389" width="0.1604%" height="15" fill="rgb(243,83,13)" fg:x="1242" fg:w="2"/><text x="99.8490%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="99.5990%" y="373" width="0.1604%" height="15" fill="rgb(210,105,0)" fg:x="1242" fg:w="2"/><text x="99.8490%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.6792%" y="357" width="0.0802%" height="15" fill="rgb(239,60,36)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.6792%" y="341" width="0.0802%" height="15" fill="rgb(210,20,0)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.6792%" y="325" width="0.0802%" height="15" fill="rgb(244,26,53)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.6792%" y="309" width="0.0802%" height="15" fill="rgb(240,100,49)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.6792%" y="293" width="0.0802%" height="15" fill="rgb(250,46,45)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="303.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7594%" y="741" width="0.0802%" height="15" fill="rgb(220,181,29)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.7594%" y="725" width="0.0802%" height="15" fill="rgb(213,137,33)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="735.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7594%" y="709" width="0.0802%" height="15" fill="rgb(213,27,48)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="719.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.7594%" y="693" width="0.0802%" height="15" fill="rgb(245,180,39)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="703.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.7594%" y="677" width="0.0802%" height="15" fill="rgb(212,158,42)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="687.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.7594%" y="661" width="0.0802%" height="15" fill="rgb(228,193,18)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.8396%" y="725" width="0.0802%" height="15" fill="rgb(245,172,29)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="735.50"></text></g><g><title>all (1,247 samples, 100%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(207,98,24)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1135.50"></text></g><g><title>simple-b5e2632a (1,247 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(249,92,26)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1119.50">simple-b5e2632a</text></g><g><title>_start (1,247 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(217,176,26)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1103.50">_start</text></g><g><title>__libc_start_main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(221,8,39)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1087.50">__libc_start_main</text></g><g><title>main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(208,90,18)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1071.50">main</text></g><g><title>std::rt::lang_start_internal (1,247 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(207,202,30)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1055.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,247 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(231,124,22)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,247 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(206,15,5)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,247 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(239,16,52)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1007.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,247 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(245,213,29)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="991.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,247 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(213,203,36)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,247 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(209,55,18)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,247 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(207,133,49)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="943.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,247 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(240,33,46)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="927.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,247 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(212,35,2)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="911.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,247 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(231,119,28)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="895.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(252,178,7)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="879.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,247 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(251,91,4)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="863.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,247 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(233,122,19)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="847.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (287 samples, 23.02%)</title><rect x="76.9848%" y="821" width="23.0152%" height="15" fill="rgb(231,208,46)" fg:x="960" fg:w="287"/><text x="77.2348%" y="831.50">&lt;criterion::routine::Function&lt;M,F,T&gt; ..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (287 samples, 23.02%)</title><rect x="76.9848%" y="805" width="23.0152%" height="15" fill="rgb(243,15,41)" fg:x="960" fg:w="287"/><text x="77.2348%" y="815.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (287 samples, 23.02%)</title><rect x="76.9848%" y="789" width="23.0152%" height="15" fill="rgb(210,32,43)" fg:x="960" fg:w="287"/><text x="77.2348%" y="799.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (74 samples, 5.93%)</title><rect x="94.0658%" y="773" width="5.9342%" height="15" fill="rgb(222,177,15)" fg:x="1173" fg:w="74"/><text x="94.3158%" y="783.50">engine::..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (74 samples, 5.93%)</title><rect x="94.0658%" y="757" width="5.9342%" height="15" fill="rgb(244,121,34)" fg:x="1173" fg:w="74"/><text x="94.3158%" y="767.50">engine::..</text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="99.8396%" y="741" width="0.1604%" height="15" fill="rgb(234,138,4)" fg:x="1245" fg:w="2"/><text x="100.0896%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.9198%" y="725" width="0.0802%" height="15" fill="rgb(240,97,48)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.9198%" y="709" width="0.0802%" height="15" fill="rgb(237,65,54)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.9198%" y="693" width="0.0802%" height="15" fill="rgb(214,25,24)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.9198%" y="677" width="0.0802%" height="15" fill="rgb(213,5,3)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="687.50"></text></g></svg></svg>