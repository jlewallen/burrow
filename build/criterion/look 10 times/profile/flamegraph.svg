<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="1249"><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.0801%" y="533" width="0.2402%" height="15" fill="rgb(224,206,38)" fg:x="1" fg:w="3"/><text x="0.3301%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (3 samples, 0.24%)</title><rect x="0.0801%" y="517" width="0.2402%" height="15" fill="rgb(212,201,54)" fg:x="1" fg:w="3"/><text x="0.3301%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.1601%" y="501" width="0.1601%" height="15" fill="rgb(218,154,48)" fg:x="2" fg:w="2"/><text x="0.4101%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.1601%" y="485" width="0.1601%" height="15" fill="rgb(232,93,24)" fg:x="2" fg:w="2"/><text x="0.4101%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.2402%" y="469" width="0.0801%" height="15" fill="rgb(245,30,21)" fg:x="3" fg:w="1"/><text x="0.4902%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.2402%" y="453" width="0.0801%" height="15" fill="rgb(242,148,29)" fg:x="3" fg:w="1"/><text x="0.4902%" y="463.50"></text></g><g><title>sqlite3HashClear (1 samples, 0.08%)</title><rect x="0.5604%" y="485" width="0.0801%" height="15" fill="rgb(244,153,54)" fg:x="7" fg:w="1"/><text x="0.8104%" y="495.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="0.5604%" y="469" width="0.0801%" height="15" fill="rgb(252,87,22)" fg:x="7" fg:w="1"/><text x="0.8104%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5604%" y="453" width="0.0801%" height="15" fill="rgb(210,51,29)" fg:x="7" fg:w="1"/><text x="0.8104%" y="463.50"></text></g><g><title>sqlite3SchemaClear (1 samples, 0.08%)</title><rect x="0.6405%" y="485" width="0.0801%" height="15" fill="rgb(242,136,47)" fg:x="8" fg:w="1"/><text x="0.8905%" y="495.50"></text></g><g><title>sqlite3DeleteColumnNames (1 samples, 0.08%)</title><rect x="0.6405%" y="469" width="0.0801%" height="15" fill="rgb(238,68,4)" fg:x="8" fg:w="1"/><text x="0.8905%" y="479.50"></text></g><g><title>sqlite3ExprListDelete (1 samples, 0.08%)</title><rect x="0.6405%" y="453" width="0.0801%" height="15" fill="rgb(242,161,30)" fg:x="8" fg:w="1"/><text x="0.8905%" y="463.50"></text></g><g><title>sqlite3VtabModuleUnref (1 samples, 0.08%)</title><rect x="0.7206%" y="485" width="0.0801%" height="15" fill="rgb(218,58,44)" fg:x="9" fg:w="1"/><text x="0.9706%" y="495.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="0.7206%" y="469" width="0.0801%" height="15" fill="rgb(252,125,32)" fg:x="9" fg:w="1"/><text x="0.9706%" y="479.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="0.7206%" y="453" width="0.0801%" height="15" fill="rgb(219,178,0)" fg:x="9" fg:w="1"/><text x="0.9706%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.8807%" y="469" width="0.1601%" height="15" fill="rgb(213,152,7)" fg:x="11" fg:w="2"/><text x="1.1307%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="0.0000%" y="565" width="1.1209%" height="15" fill="rgb(249,109,34)" fg:x="0" fg:w="14"/><text x="0.2500%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (14 samples, 1.12%)</title><rect x="0.0000%" y="549" width="1.1209%" height="15" fill="rgb(232,96,21)" fg:x="0" fg:w="14"/><text x="0.2500%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::Connection&gt; (10 samples, 0.80%)</title><rect x="0.3203%" y="533" width="0.8006%" height="15" fill="rgb(228,27,39)" fg:x="4" fg:w="10"/><text x="0.5703%" y="543.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::close (10 samples, 0.80%)</title><rect x="0.3203%" y="517" width="0.8006%" height="15" fill="rgb(211,182,52)" fg:x="4" fg:w="10"/><text x="0.5703%" y="527.50"></text></g><g><title>sqlite3LeaveMutexAndCloseZombie (9 samples, 0.72%)</title><rect x="0.4003%" y="501" width="0.7206%" height="15" fill="rgb(234,178,38)" fg:x="5" fg:w="9"/><text x="0.6503%" y="511.50"></text></g><g><title>sqlite3_free (4 samples, 0.32%)</title><rect x="0.8006%" y="485" width="0.3203%" height="15" fill="rgb(221,111,3)" fg:x="10" fg:w="4"/><text x="1.0506%" y="495.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="1.0408%" y="469" width="0.0801%" height="15" fill="rgb(228,175,21)" fg:x="13" fg:w="1"/><text x="1.2908%" y="479.50"></text></g><g><title>sqlite3BtreeOpen (1 samples, 0.08%)</title><rect x="1.1209%" y="501" width="0.0801%" height="15" fill="rgb(228,174,43)" fg:x="14" fg:w="1"/><text x="1.3709%" y="511.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="1.1209%" y="485" width="0.0801%" height="15" fill="rgb(211,191,0)" fg:x="14" fg:w="1"/><text x="1.3709%" y="495.50"></text></g><g><title>sqlite3Fts3InitHashTable (1 samples, 0.08%)</title><rect x="1.2010%" y="485" width="0.0801%" height="15" fill="rgb(253,117,3)" fg:x="15" fg:w="1"/><text x="1.4510%" y="495.50"></text></g><g><title>sqlite3_create_function (1 samples, 0.08%)</title><rect x="1.2010%" y="469" width="0.0801%" height="15" fill="rgb(241,127,19)" fg:x="15" fg:w="1"/><text x="1.4510%" y="479.50"></text></g><g><title>sqlite3CreateFunc (1 samples, 0.08%)</title><rect x="1.2010%" y="453" width="0.0801%" height="15" fill="rgb(218,103,12)" fg:x="15" fg:w="1"/><text x="1.4510%" y="463.50"></text></g><g><title>sqlite3FindFunction (1 samples, 0.08%)</title><rect x="1.2010%" y="437" width="0.0801%" height="15" fill="rgb(236,214,43)" fg:x="15" fg:w="1"/><text x="1.4510%" y="447.50"></text></g><g><title>sqlite3Fts3Init (2 samples, 0.16%)</title><rect x="1.2010%" y="501" width="0.1601%" height="15" fill="rgb(244,144,19)" fg:x="15" fg:w="2"/><text x="1.4510%" y="511.50"></text></g><g><title>sqlite3_overload_function (1 samples, 0.08%)</title><rect x="1.2810%" y="485" width="0.0801%" height="15" fill="rgb(246,188,10)" fg:x="16" fg:w="1"/><text x="1.5310%" y="495.50"></text></g><g><title>sqlite3_create_function_v2 (1 samples, 0.08%)</title><rect x="1.2810%" y="469" width="0.0801%" height="15" fill="rgb(212,193,33)" fg:x="16" fg:w="1"/><text x="1.5310%" y="479.50"></text></g><g><title>sqlite3CreateFunc (1 samples, 0.08%)</title><rect x="1.2810%" y="453" width="0.0801%" height="15" fill="rgb(241,51,29)" fg:x="16" fg:w="1"/><text x="1.5310%" y="463.50"></text></g><g><title>sqlite3FindFunction (1 samples, 0.08%)</title><rect x="1.2810%" y="437" width="0.0801%" height="15" fill="rgb(211,58,19)" fg:x="16" fg:w="1"/><text x="1.5310%" y="447.50"></text></g><g><title>sqlite3HashFind (1 samples, 0.08%)</title><rect x="1.2810%" y="421" width="0.0801%" height="15" fill="rgb(229,111,26)" fg:x="16" fg:w="1"/><text x="1.5310%" y="431.50"></text></g><g><title>sqlite3StrICmp (1 samples, 0.08%)</title><rect x="1.2810%" y="405" width="0.0801%" height="15" fill="rgb(213,115,40)" fg:x="16" fg:w="1"/><text x="1.5310%" y="415.50"></text></g><g><title>sqlite3_create_function (1 samples, 0.08%)</title><rect x="1.4412%" y="485" width="0.0801%" height="15" fill="rgb(209,56,44)" fg:x="18" fg:w="1"/><text x="1.6912%" y="495.50"></text></g><g><title>sqlite3CreateFunc (1 samples, 0.08%)</title><rect x="1.4412%" y="469" width="0.0801%" height="15" fill="rgb(230,108,32)" fg:x="18" fg:w="1"/><text x="1.6912%" y="479.50"></text></g><g><title>sqlite3FindFunction (1 samples, 0.08%)</title><rect x="1.4412%" y="453" width="0.0801%" height="15" fill="rgb(216,165,31)" fg:x="18" fg:w="1"/><text x="1.6912%" y="463.50"></text></g><g><title>sqlite3DbMallocZero (1 samples, 0.08%)</title><rect x="1.4412%" y="437" width="0.0801%" height="15" fill="rgb(218,122,21)" fg:x="18" fg:w="1"/><text x="1.6912%" y="447.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="1.4412%" y="421" width="0.0801%" height="15" fill="rgb(223,224,47)" fg:x="18" fg:w="1"/><text x="1.6912%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.4412%" y="405" width="0.0801%" height="15" fill="rgb(238,102,44)" fg:x="18" fg:w="1"/><text x="1.6912%" y="415.50"></text></g><g><title>sqlite3Fts5Init (3 samples, 0.24%)</title><rect x="1.3611%" y="501" width="0.2402%" height="15" fill="rgb(236,46,40)" fg:x="17" fg:w="3"/><text x="1.6111%" y="511.50"></text></g><g><title>sqlite3_overload_function (1 samples, 0.08%)</title><rect x="1.5212%" y="485" width="0.0801%" height="15" fill="rgb(247,202,50)" fg:x="19" fg:w="1"/><text x="1.7712%" y="495.50"></text></g><g><title>sqlite3_create_function_v2 (1 samples, 0.08%)</title><rect x="1.5212%" y="469" width="0.0801%" height="15" fill="rgb(209,99,20)" fg:x="19" fg:w="1"/><text x="1.7712%" y="479.50"></text></g><g><title>sqlite3HashFind (1 samples, 0.08%)</title><rect x="1.6013%" y="437" width="0.0801%" height="15" fill="rgb(252,27,34)" fg:x="20" fg:w="1"/><text x="1.8513%" y="447.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::open_with_flags (8 samples, 0.64%)</title><rect x="1.1209%" y="517" width="0.6405%" height="15" fill="rgb(215,206,23)" fg:x="14" fg:w="8"/><text x="1.3709%" y="527.50"></text></g><g><title>sqlite3Json1Init (2 samples, 0.16%)</title><rect x="1.6013%" y="501" width="0.1601%" height="15" fill="rgb(212,135,36)" fg:x="20" fg:w="2"/><text x="1.8513%" y="511.50"></text></g><g><title>sqlite3_create_window_function (2 samples, 0.16%)</title><rect x="1.6013%" y="485" width="0.1601%" height="15" fill="rgb(240,189,1)" fg:x="20" fg:w="2"/><text x="1.8513%" y="495.50"></text></g><g><title>sqlite3CreateFunc (2 samples, 0.16%)</title><rect x="1.6013%" y="469" width="0.1601%" height="15" fill="rgb(242,56,20)" fg:x="20" fg:w="2"/><text x="1.8513%" y="479.50"></text></g><g><title>sqlite3FindFunction (2 samples, 0.16%)</title><rect x="1.6013%" y="453" width="0.1601%" height="15" fill="rgb(247,132,33)" fg:x="20" fg:w="2"/><text x="1.8513%" y="463.50"></text></g><g><title>sqlite3HashInsert (1 samples, 0.08%)</title><rect x="1.6813%" y="437" width="0.0801%" height="15" fill="rgb(208,149,11)" fg:x="21" fg:w="1"/><text x="1.9313%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (1 samples, 0.08%)</title><rect x="1.7614%" y="501" width="0.0801%" height="15" fill="rgb(211,33,11)" fg:x="22" fg:w="1"/><text x="2.0114%" y="511.50"></text></g><g><title>__pthread_mutex_trylock (1 samples, 0.08%)</title><rect x="1.8415%" y="469" width="0.0801%" height="15" fill="rgb(221,29,38)" fg:x="23" fg:w="1"/><text x="2.0915%" y="479.50"></text></g><g><title>sqlite3GetToken (2 samples, 0.16%)</title><rect x="2.0016%" y="453" width="0.1601%" height="15" fill="rgb(206,182,49)" fg:x="25" fg:w="2"/><text x="2.2516%" y="463.50"></text></g><g><title>sqlite3MPrintf (1 samples, 0.08%)</title><rect x="2.4019%" y="405" width="0.0801%" height="15" fill="rgb(216,140,1)" fg:x="30" fg:w="1"/><text x="2.6519%" y="415.50"></text></g><g><title>sqlite3VMPrintf (1 samples, 0.08%)</title><rect x="2.4019%" y="389" width="0.0801%" height="15" fill="rgb(232,57,40)" fg:x="30" fg:w="1"/><text x="2.6519%" y="399.50"></text></g><g><title>sqlite3_str_vappendf (1 samples, 0.08%)</title><rect x="2.4019%" y="373" width="0.0801%" height="15" fill="rgb(224,186,18)" fg:x="30" fg:w="1"/><text x="2.6519%" y="383.50"></text></g><g><title>sqlite3GetToken (2 samples, 0.16%)</title><rect x="2.4820%" y="373" width="0.1601%" height="15" fill="rgb(215,121,11)" fg:x="31" fg:w="2"/><text x="2.7320%" y="383.50"></text></g><g><title>sqlite3RunParser (4 samples, 0.32%)</title><rect x="2.4820%" y="389" width="0.3203%" height="15" fill="rgb(245,147,10)" fg:x="31" fg:w="4"/><text x="2.7320%" y="399.50"></text></g><g><title>sqlite3Parser (2 samples, 0.16%)</title><rect x="2.6421%" y="373" width="0.1601%" height="15" fill="rgb(238,153,13)" fg:x="33" fg:w="2"/><text x="2.8921%" y="383.50"></text></g><g><title>sqlite3Insert (1 samples, 0.08%)</title><rect x="2.7222%" y="357" width="0.0801%" height="15" fill="rgb(233,108,0)" fg:x="34" fg:w="1"/><text x="2.9722%" y="367.50"></text></g><g><title>sqlite3AddPrimaryKey (6 samples, 0.48%)</title><rect x="2.4019%" y="437" width="0.4804%" height="15" fill="rgb(212,157,17)" fg:x="30" fg:w="6"/><text x="2.6519%" y="447.50"></text></g><g><title>sqlite3CreateIndex (6 samples, 0.48%)</title><rect x="2.4019%" y="421" width="0.4804%" height="15" fill="rgb(225,213,38)" fg:x="30" fg:w="6"/><text x="2.6519%" y="431.50"></text></g><g><title>sqlite3NestedParse (5 samples, 0.40%)</title><rect x="2.4820%" y="405" width="0.4003%" height="15" fill="rgb(248,16,11)" fg:x="31" fg:w="5"/><text x="2.7320%" y="415.50"></text></g><g><title>sqlite3VMPrintf (1 samples, 0.08%)</title><rect x="2.8022%" y="389" width="0.0801%" height="15" fill="rgb(241,33,4)" fg:x="35" fg:w="1"/><text x="3.0522%" y="399.50"></text></g><g><title>sqlite3_str_vappendf (1 samples, 0.08%)</title><rect x="2.8022%" y="373" width="0.0801%" height="15" fill="rgb(222,26,43)" fg:x="35" fg:w="1"/><text x="3.0522%" y="383.50"></text></g><g><title>sqlite3_str_append (1 samples, 0.08%)</title><rect x="2.8022%" y="357" width="0.0801%" height="15" fill="rgb(243,29,36)" fg:x="35" fg:w="1"/><text x="3.0522%" y="367.50"></text></g><g><title>sqlite3FindTable (1 samples, 0.08%)</title><rect x="2.9624%" y="421" width="0.0801%" height="15" fill="rgb(241,9,27)" fg:x="37" fg:w="1"/><text x="3.2124%" y="431.50"></text></g><g><title>sqlite3HashFind (1 samples, 0.08%)</title><rect x="2.9624%" y="405" width="0.0801%" height="15" fill="rgb(205,117,26)" fg:x="37" fg:w="1"/><text x="3.2124%" y="415.50"></text></g><g><title>sqlite3StrICmp (1 samples, 0.08%)</title><rect x="2.9624%" y="389" width="0.0801%" height="15" fill="rgb(209,80,39)" fg:x="37" fg:w="1"/><text x="3.2124%" y="399.50"></text></g><g><title>sqlite3MPrintf (1 samples, 0.08%)</title><rect x="3.0424%" y="421" width="0.0801%" height="15" fill="rgb(239,155,6)" fg:x="38" fg:w="1"/><text x="3.2924%" y="431.50"></text></g><g><title>sqlite3VMPrintf (1 samples, 0.08%)</title><rect x="3.0424%" y="405" width="0.0801%" height="15" fill="rgb(212,104,12)" fg:x="38" fg:w="1"/><text x="3.2924%" y="415.50"></text></g><g><title>sqlite3_str_vappendf (1 samples, 0.08%)</title><rect x="3.0424%" y="389" width="0.0801%" height="15" fill="rgb(234,204,3)" fg:x="38" fg:w="1"/><text x="3.2924%" y="399.50"></text></g><g><title>sqlite3Parser (3 samples, 0.24%)</title><rect x="3.2026%" y="389" width="0.2402%" height="15" fill="rgb(251,218,7)" fg:x="40" fg:w="3"/><text x="3.4526%" y="399.50"></text></g><g><title>sqlite3Insert (1 samples, 0.08%)</title><rect x="3.3627%" y="373" width="0.0801%" height="15" fill="rgb(221,81,32)" fg:x="42" fg:w="1"/><text x="3.6127%" y="383.50"></text></g><g><title>sqlite3SrcListDelete (1 samples, 0.08%)</title><rect x="3.3627%" y="357" width="0.0801%" height="15" fill="rgb(214,152,26)" fg:x="42" fg:w="1"/><text x="3.6127%" y="367.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="3.3627%" y="341" width="0.0801%" height="15" fill="rgb(223,22,3)" fg:x="42" fg:w="1"/><text x="3.6127%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.3627%" y="325" width="0.0801%" height="15" fill="rgb(207,174,7)" fg:x="42" fg:w="1"/><text x="3.6127%" y="335.50"></text></g><g><title>sqlite3NestedParse (5 samples, 0.40%)</title><rect x="3.1225%" y="421" width="0.4003%" height="15" fill="rgb(224,19,52)" fg:x="39" fg:w="5"/><text x="3.3725%" y="431.50"></text></g><g><title>sqlite3RunParser (5 samples, 0.40%)</title><rect x="3.1225%" y="405" width="0.4003%" height="15" fill="rgb(228,24,14)" fg:x="39" fg:w="5"/><text x="3.3725%" y="415.50"></text></g><g><title>sqlite3ParserAlloc (1 samples, 0.08%)</title><rect x="3.4428%" y="389" width="0.0801%" height="15" fill="rgb(230,153,43)" fg:x="43" fg:w="1"/><text x="3.6928%" y="399.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="3.4428%" y="373" width="0.0801%" height="15" fill="rgb(231,106,12)" fg:x="43" fg:w="1"/><text x="3.6928%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.4428%" y="357" width="0.0801%" height="15" fill="rgb(215,92,2)" fg:x="43" fg:w="1"/><text x="3.6928%" y="367.50"></text></g><g><title>sqlite3SrcListLookup (1 samples, 0.08%)</title><rect x="3.5228%" y="421" width="0.0801%" height="15" fill="rgb(249,143,25)" fg:x="44" fg:w="1"/><text x="3.7728%" y="431.50"></text></g><g><title>sqlite3LocateTable (1 samples, 0.08%)</title><rect x="3.5228%" y="405" width="0.0801%" height="15" fill="rgb(252,7,35)" fg:x="44" fg:w="1"/><text x="3.7728%" y="415.50"></text></g><g><title>sqlite3FindTable (1 samples, 0.08%)</title><rect x="3.5228%" y="389" width="0.0801%" height="15" fill="rgb(216,69,40)" fg:x="44" fg:w="1"/><text x="3.7728%" y="399.50"></text></g><g><title>sqlite3HashFind (1 samples, 0.08%)</title><rect x="3.5228%" y="373" width="0.0801%" height="15" fill="rgb(240,36,33)" fg:x="44" fg:w="1"/><text x="3.7728%" y="383.50"></text></g><g><title>sqlite3StrICmp (1 samples, 0.08%)</title><rect x="3.5228%" y="357" width="0.0801%" height="15" fill="rgb(231,128,14)" fg:x="44" fg:w="1"/><text x="3.7728%" y="367.50"></text></g><g><title>sqlite3UniqueConstraint (1 samples, 0.08%)</title><rect x="3.6029%" y="421" width="0.0801%" height="15" fill="rgb(245,143,14)" fg:x="45" fg:w="1"/><text x="3.8529%" y="431.50"></text></g><g><title>sqlite3HaltConstraint (1 samples, 0.08%)</title><rect x="3.6029%" y="405" width="0.0801%" height="15" fill="rgb(222,130,28)" fg:x="45" fg:w="1"/><text x="3.8529%" y="415.50"></text></g><g><title>sqlite3VdbeAddOp4 (1 samples, 0.08%)</title><rect x="3.6029%" y="389" width="0.0801%" height="15" fill="rgb(212,10,48)" fg:x="45" fg:w="1"/><text x="3.8529%" y="399.50"></text></g><g><title>sqlite3VdbeChangeP4 (1 samples, 0.08%)</title><rect x="3.6029%" y="373" width="0.0801%" height="15" fill="rgb(254,118,45)" fg:x="45" fg:w="1"/><text x="3.8529%" y="383.50"></text></g><g><title>sqlite3VdbeCreate (1 samples, 0.08%)</title><rect x="3.6829%" y="421" width="0.0801%" height="15" fill="rgb(228,6,45)" fg:x="46" fg:w="1"/><text x="3.9329%" y="431.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="3.6829%" y="405" width="0.0801%" height="15" fill="rgb(241,18,35)" fg:x="46" fg:w="1"/><text x="3.9329%" y="415.50"></text></g><g><title>sqlite3CreateIndex (12 samples, 0.96%)</title><rect x="2.8823%" y="437" width="0.9608%" height="15" fill="rgb(227,214,53)" fg:x="36" fg:w="12"/><text x="3.1323%" y="447.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="3.7630%" y="421" width="0.0801%" height="15" fill="rgb(224,107,51)" fg:x="47" fg:w="1"/><text x="4.0130%" y="431.50"></text></g><g><title>sqlite3MPrintf (1 samples, 0.08%)</title><rect x="3.8431%" y="421" width="0.0801%" height="15" fill="rgb(248,60,28)" fg:x="48" fg:w="1"/><text x="4.0931%" y="431.50"></text></g><g><title>sqlite3VMPrintf (1 samples, 0.08%)</title><rect x="3.8431%" y="405" width="0.0801%" height="15" fill="rgb(249,101,23)" fg:x="48" fg:w="1"/><text x="4.0931%" y="415.50"></text></g><g><title>sqlite3_str_vappendf (1 samples, 0.08%)</title><rect x="3.8431%" y="389" width="0.0801%" height="15" fill="rgb(228,51,19)" fg:x="48" fg:w="1"/><text x="4.0931%" y="399.50"></text></g><g><title>sqlite3DbStrNDup (1 samples, 0.08%)</title><rect x="3.9231%" y="293" width="0.0801%" height="15" fill="rgb(213,20,6)" fg:x="49" fg:w="1"/><text x="4.1731%" y="303.50"></text></g><g><title>sqlite3ExprCode (2 samples, 0.16%)</title><rect x="3.9231%" y="357" width="0.1601%" height="15" fill="rgb(212,124,10)" fg:x="49" fg:w="2"/><text x="4.1731%" y="367.50"></text></g><g><title>sqlite3ExprCodeTarget (2 samples, 0.16%)</title><rect x="3.9231%" y="341" width="0.1601%" height="15" fill="rgb(248,3,40)" fg:x="49" fg:w="2"/><text x="4.1731%" y="351.50"></text></g><g><title>sqlite3VdbeLoadString (2 samples, 0.16%)</title><rect x="3.9231%" y="325" width="0.1601%" height="15" fill="rgb(223,178,23)" fg:x="49" fg:w="2"/><text x="4.1731%" y="335.50"></text></g><g><title>sqlite3VdbeAddOp4 (2 samples, 0.16%)</title><rect x="3.9231%" y="309" width="0.1601%" height="15" fill="rgb(240,132,45)" fg:x="49" fg:w="2"/><text x="4.1731%" y="319.50"></text></g><g><title>sqlite3Strlen30 (1 samples, 0.08%)</title><rect x="4.0032%" y="293" width="0.0801%" height="15" fill="rgb(245,164,36)" fg:x="50" fg:w="1"/><text x="4.2532%" y="303.50"></text></g><g><title>sqlite3TriggersExist (1 samples, 0.08%)</title><rect x="4.0833%" y="357" width="0.0801%" height="15" fill="rgb(231,188,53)" fg:x="51" fg:w="1"/><text x="4.3333%" y="367.50"></text></g><g><title>sqlite3TriggerList (1 samples, 0.08%)</title><rect x="4.0833%" y="341" width="0.0801%" height="15" fill="rgb(237,198,39)" fg:x="51" fg:w="1"/><text x="4.3333%" y="351.50"></text></g><g><title>sqlite3RunParser (4 samples, 0.32%)</title><rect x="3.9231%" y="405" width="0.3203%" height="15" fill="rgb(223,120,35)" fg:x="49" fg:w="4"/><text x="4.1731%" y="415.50"></text></g><g><title>sqlite3Parser (4 samples, 0.32%)</title><rect x="3.9231%" y="389" width="0.3203%" height="15" fill="rgb(253,107,49)" fg:x="49" fg:w="4"/><text x="4.1731%" y="399.50"></text></g><g><title>sqlite3Update (4 samples, 0.32%)</title><rect x="3.9231%" y="373" width="0.3203%" height="15" fill="rgb(216,44,31)" fg:x="49" fg:w="4"/><text x="4.1731%" y="383.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="4.1633%" y="357" width="0.0801%" height="15" fill="rgb(253,87,21)" fg:x="52" fg:w="1"/><text x="4.4133%" y="367.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="4.1633%" y="341" width="0.0801%" height="15" fill="rgb(226,18,2)" fg:x="52" fg:w="1"/><text x="4.4133%" y="351.50"></text></g><g><title>sqlite3EndTable (8 samples, 0.64%)</title><rect x="3.8431%" y="437" width="0.6405%" height="15" fill="rgb(216,8,46)" fg:x="48" fg:w="8"/><text x="4.0931%" y="447.50"></text></g><g><title>sqlite3NestedParse (7 samples, 0.56%)</title><rect x="3.9231%" y="421" width="0.5604%" height="15" fill="rgb(226,140,39)" fg:x="49" fg:w="7"/><text x="4.1731%" y="431.50"></text></g><g><title>sqlite3VMPrintf (3 samples, 0.24%)</title><rect x="4.2434%" y="405" width="0.2402%" height="15" fill="rgb(221,194,54)" fg:x="53" fg:w="3"/><text x="4.4934%" y="415.50"></text></g><g><title>sqlite3_str_vappendf (3 samples, 0.24%)</title><rect x="4.2434%" y="389" width="0.2402%" height="15" fill="rgb(213,92,11)" fg:x="53" fg:w="3"/><text x="4.4934%" y="399.50"></text></g><g><title>sqlite3ExprListAppendNew (1 samples, 0.08%)</title><rect x="4.4836%" y="437" width="0.0801%" height="15" fill="rgb(229,162,46)" fg:x="56" fg:w="1"/><text x="4.7336%" y="447.50"></text></g><g><title>sqlite3BtreeBeginTrans (1 samples, 0.08%)</title><rect x="4.5637%" y="373" width="0.0801%" height="15" fill="rgb(214,111,36)" fg:x="57" fg:w="1"/><text x="4.8137%" y="383.50"></text></g><g><title>sqlite3AddColumn (2 samples, 0.16%)</title><rect x="4.7238%" y="325" width="0.1601%" height="15" fill="rgb(207,6,21)" fg:x="59" fg:w="2"/><text x="4.9738%" y="335.50"></text></g><g><title>sqlite3Realloc (2 samples, 0.16%)</title><rect x="4.7238%" y="309" width="0.1601%" height="15" fill="rgb(213,127,38)" fg:x="59" fg:w="2"/><text x="4.9738%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="4.7238%" y="293" width="0.1601%" height="15" fill="rgb(238,118,32)" fg:x="59" fg:w="2"/><text x="4.9738%" y="303.50"></text></g><g><title>sqlite3InitCallback (4 samples, 0.32%)</title><rect x="4.6437%" y="373" width="0.3203%" height="15" fill="rgb(240,139,39)" fg:x="58" fg:w="4"/><text x="4.8937%" y="383.50"></text></g><g><title>sqlite3RunParser (4 samples, 0.32%)</title><rect x="4.6437%" y="357" width="0.3203%" height="15" fill="rgb(235,10,37)" fg:x="58" fg:w="4"/><text x="4.8937%" y="367.50"></text></g><g><title>sqlite3Parser (4 samples, 0.32%)</title><rect x="4.6437%" y="341" width="0.3203%" height="15" fill="rgb(249,171,38)" fg:x="58" fg:w="4"/><text x="4.8937%" y="351.50"></text></g><g><title>sqlite3EndTable (1 samples, 0.08%)</title><rect x="4.8839%" y="325" width="0.0801%" height="15" fill="rgb(242,144,32)" fg:x="61" fg:w="1"/><text x="5.1339%" y="335.50"></text></g><g><title>sqlite3GetToken (1 samples, 0.08%)</title><rect x="4.9640%" y="325" width="0.0801%" height="15" fill="rgb(217,117,21)" fg:x="62" fg:w="1"/><text x="5.2140%" y="335.50"></text></g><g><title>sqlite3ExprListDelete (1 samples, 0.08%)</title><rect x="5.2042%" y="309" width="0.0801%" height="15" fill="rgb(249,87,1)" fg:x="65" fg:w="1"/><text x="5.4542%" y="319.50"></text></g><g><title>sqlite3GenerateColumnNames (1 samples, 0.08%)</title><rect x="5.2842%" y="293" width="0.0801%" height="15" fill="rgb(248,196,48)" fg:x="66" fg:w="1"/><text x="5.5342%" y="303.50"></text></g><g><title>sqlite3VdbeMemSetStr (1 samples, 0.08%)</title><rect x="5.2842%" y="277" width="0.0801%" height="15" fill="rgb(251,206,33)" fg:x="66" fg:w="1"/><text x="5.5342%" y="287.50"></text></g><g><title>sqlite3VdbeMemGrow (1 samples, 0.08%)</title><rect x="5.2842%" y="261" width="0.0801%" height="15" fill="rgb(232,141,28)" fg:x="66" fg:w="1"/><text x="5.5342%" y="271.50"></text></g><g><title>sqlite3Pragma (11 samples, 0.88%)</title><rect x="4.5637%" y="437" width="0.8807%" height="15" fill="rgb(209,167,14)" fg:x="57" fg:w="11"/><text x="4.8137%" y="447.50"></text></g><g><title>sqlite3ReadSchema (11 samples, 0.88%)</title><rect x="4.5637%" y="421" width="0.8807%" height="15" fill="rgb(225,11,50)" fg:x="57" fg:w="11"/><text x="4.8137%" y="431.50"></text></g><g><title>sqlite3Init (11 samples, 0.88%)</title><rect x="4.5637%" y="405" width="0.8807%" height="15" fill="rgb(209,50,20)" fg:x="57" fg:w="11"/><text x="4.8137%" y="415.50"></text></g><g><title>sqlite3InitOne (11 samples, 0.88%)</title><rect x="4.5637%" y="389" width="0.8807%" height="15" fill="rgb(212,17,46)" fg:x="57" fg:w="11"/><text x="4.8137%" y="399.50"></text></g><g><title>sqlite3_exec (6 samples, 0.48%)</title><rect x="4.9640%" y="373" width="0.4804%" height="15" fill="rgb(216,101,39)" fg:x="62" fg:w="6"/><text x="5.2140%" y="383.50"></text></g><g><title>sqlite3_prepare_v2 (6 samples, 0.48%)</title><rect x="4.9640%" y="357" width="0.4804%" height="15" fill="rgb(212,228,48)" fg:x="62" fg:w="6"/><text x="5.2140%" y="367.50"></text></g><g><title>sqlite3RunParser (6 samples, 0.48%)</title><rect x="4.9640%" y="341" width="0.4804%" height="15" fill="rgb(250,6,50)" fg:x="62" fg:w="6"/><text x="5.2140%" y="351.50"></text></g><g><title>sqlite3Parser (5 samples, 0.40%)</title><rect x="5.0440%" y="325" width="0.4003%" height="15" fill="rgb(250,160,48)" fg:x="63" fg:w="5"/><text x="5.2940%" y="335.50"></text></g><g><title>sqlite3Select (2 samples, 0.16%)</title><rect x="5.2842%" y="309" width="0.1601%" height="15" fill="rgb(244,216,33)" fg:x="66" fg:w="2"/><text x="5.5342%" y="319.50"></text></g><g><title>sqlite3SelectPrep (1 samples, 0.08%)</title><rect x="5.3643%" y="293" width="0.0801%" height="15" fill="rgb(207,157,5)" fg:x="67" fg:w="1"/><text x="5.6143%" y="303.50"></text></g><g><title>sqlite3WalkSelect (1 samples, 0.08%)</title><rect x="5.3643%" y="277" width="0.0801%" height="15" fill="rgb(228,199,8)" fg:x="67" fg:w="1"/><text x="5.6143%" y="287.50"></text></g><g><title>sqlite3Expr (1 samples, 0.08%)</title><rect x="5.3643%" y="261" width="0.0801%" height="15" fill="rgb(227,80,20)" fg:x="67" fg:w="1"/><text x="5.6143%" y="271.50"></text></g><g><title>sqlite3ExprAlloc (1 samples, 0.08%)</title><rect x="5.3643%" y="245" width="0.0801%" height="15" fill="rgb(222,9,33)" fg:x="67" fg:w="1"/><text x="5.6143%" y="255.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="5.3643%" y="229" width="0.0801%" height="15" fill="rgb(239,44,28)" fg:x="67" fg:w="1"/><text x="5.6143%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.3643%" y="213" width="0.0801%" height="15" fill="rgb(249,187,43)" fg:x="67" fg:w="1"/><text x="5.6143%" y="223.50"></text></g><g><title>sqlite3Parser (42 samples, 3.36%)</title><rect x="2.1617%" y="453" width="3.3627%" height="15" fill="rgb(216,141,28)" fg:x="27" fg:w="42"/><text x="2.4117%" y="463.50">sql..</text></g><g><title>sqlite3StartTable (1 samples, 0.08%)</title><rect x="5.4444%" y="437" width="0.0801%" height="15" fill="rgb(230,154,53)" fg:x="68" fg:w="1"/><text x="5.6944%" y="447.50"></text></g><g><title>sqlite3OpenSchemaTable (1 samples, 0.08%)</title><rect x="5.4444%" y="421" width="0.0801%" height="15" fill="rgb(227,82,4)" fg:x="68" fg:w="1"/><text x="5.6944%" y="431.50"></text></g><g><title>sqlite3DbReallocOrFree (1 samples, 0.08%)</title><rect x="5.4444%" y="405" width="0.0801%" height="15" fill="rgb(220,107,16)" fg:x="68" fg:w="1"/><text x="5.6944%" y="415.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (49 samples, 3.92%)</title><rect x="1.8415%" y="501" width="3.9231%" height="15" fill="rgb(207,187,2)" fg:x="23" fg:w="49"/><text x="2.0915%" y="511.50">rusq..</text></g><g><title>sqlite3_prepare_v2 (49 samples, 3.92%)</title><rect x="1.8415%" y="485" width="3.9231%" height="15" fill="rgb(210,162,52)" fg:x="23" fg:w="49"/><text x="2.0915%" y="495.50">sqli..</text></g><g><title>sqlite3RunParser (48 samples, 3.84%)</title><rect x="1.9215%" y="469" width="3.8431%" height="15" fill="rgb(217,216,49)" fg:x="24" fg:w="48"/><text x="2.1715%" y="479.50">sqli..</text></g><g><title>sqlite3ParserAlloc (3 samples, 0.24%)</title><rect x="5.5244%" y="453" width="0.2402%" height="15" fill="rgb(218,146,49)" fg:x="69" fg:w="3"/><text x="5.7744%" y="463.50"></text></g><g><title>sqlite3Malloc (3 samples, 0.24%)</title><rect x="5.5244%" y="437" width="0.2402%" height="15" fill="rgb(216,55,40)" fg:x="69" fg:w="3"/><text x="5.7744%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="5.5244%" y="421" width="0.2402%" height="15" fill="rgb(208,196,21)" fg:x="69" fg:w="3"/><text x="5.7744%" y="431.50"></text></g><g><title>sqlite3BtreeBeginTrans (1 samples, 0.08%)</title><rect x="5.8447%" y="453" width="0.0801%" height="15" fill="rgb(242,117,42)" fg:x="73" fg:w="1"/><text x="6.0947%" y="463.50"></text></g><g><title>sqlite3BtreeCreateTable (4 samples, 0.32%)</title><rect x="5.9247%" y="453" width="0.3203%" height="15" fill="rgb(210,11,23)" fg:x="74" fg:w="4"/><text x="6.1747%" y="463.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="6.1649%" y="437" width="0.0801%" height="15" fill="rgb(217,110,2)" fg:x="77" fg:w="1"/><text x="6.4149%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.1649%" y="421" width="0.0801%" height="15" fill="rgb(229,77,54)" fg:x="77" fg:w="1"/><text x="6.4149%" y="431.50"></text></g><g><title>sqlite3VdbeMemGrow (2 samples, 0.16%)</title><rect x="6.2450%" y="453" width="0.1601%" height="15" fill="rgb(218,53,16)" fg:x="78" fg:w="2"/><text x="6.4950%" y="463.50"></text></g><g><title>sqlite3DbMallocRaw (1 samples, 0.08%)</title><rect x="6.3251%" y="437" width="0.0801%" height="15" fill="rgb(215,38,13)" fg:x="79" fg:w="1"/><text x="6.5751%" y="447.50"></text></g><g><title>sqlite3HasExplicitNulls (1 samples, 0.08%)</title><rect x="6.6453%" y="357" width="0.0801%" height="15" fill="rgb(235,42,18)" fg:x="83" fg:w="1"/><text x="6.8953%" y="367.50"></text></g><g><title>sqlite3AddPrimaryKey (3 samples, 0.24%)</title><rect x="6.5653%" y="389" width="0.2402%" height="15" fill="rgb(219,66,54)" fg:x="82" fg:w="3"/><text x="6.8153%" y="399.50"></text></g><g><title>sqlite3CreateIndex (3 samples, 0.24%)</title><rect x="6.5653%" y="373" width="0.2402%" height="15" fill="rgb(222,205,4)" fg:x="82" fg:w="3"/><text x="6.8153%" y="383.50"></text></g><g><title>sqlite3HashInsert (1 samples, 0.08%)</title><rect x="6.7254%" y="357" width="0.0801%" height="15" fill="rgb(227,213,46)" fg:x="84" fg:w="1"/><text x="6.9754%" y="367.50"></text></g><g><title>sqlite3StrICmp (1 samples, 0.08%)</title><rect x="6.7254%" y="341" width="0.0801%" height="15" fill="rgb(250,145,42)" fg:x="84" fg:w="1"/><text x="6.9754%" y="351.50"></text></g><g><title>sqlite3CreateIndex (1 samples, 0.08%)</title><rect x="6.8054%" y="389" width="0.0801%" height="15" fill="rgb(219,15,2)" fg:x="85" fg:w="1"/><text x="7.0554%" y="399.50"></text></g><g><title>sqlite3ResolveSelfReference (1 samples, 0.08%)</title><rect x="6.8054%" y="373" width="0.0801%" height="15" fill="rgb(231,181,52)" fg:x="85" fg:w="1"/><text x="7.0554%" y="383.50"></text></g><g><title>sqlite3ResolveExprNames (1 samples, 0.08%)</title><rect x="6.8054%" y="357" width="0.0801%" height="15" fill="rgb(235,1,42)" fg:x="85" fg:w="1"/><text x="7.0554%" y="367.50"></text></g><g><title>sqlite3EndTable (1 samples, 0.08%)</title><rect x="6.8855%" y="389" width="0.0801%" height="15" fill="rgb(249,88,27)" fg:x="86" fg:w="1"/><text x="7.1355%" y="399.50"></text></g><g><title>sqlite3InitCallback (8 samples, 0.64%)</title><rect x="6.4051%" y="437" width="0.6405%" height="15" fill="rgb(235,145,16)" fg:x="80" fg:w="8"/><text x="6.6551%" y="447.50"></text></g><g><title>sqlite3RunParser (7 samples, 0.56%)</title><rect x="6.4852%" y="421" width="0.5604%" height="15" fill="rgb(237,114,19)" fg:x="81" fg:w="7"/><text x="6.7352%" y="431.50"></text></g><g><title>sqlite3Parser (6 samples, 0.48%)</title><rect x="6.5653%" y="405" width="0.4804%" height="15" fill="rgb(238,51,50)" fg:x="82" fg:w="6"/><text x="6.8153%" y="415.50"></text></g><g><title>sqlite3StartTable (1 samples, 0.08%)</title><rect x="6.9656%" y="389" width="0.0801%" height="15" fill="rgb(205,194,25)" fg:x="87" fg:w="1"/><text x="7.2156%" y="399.50"></text></g><g><title>sqlite3VdbeFinalize (1 samples, 0.08%)</title><rect x="7.0456%" y="437" width="0.0801%" height="15" fill="rgb(215,203,17)" fg:x="88" fg:w="1"/><text x="7.2956%" y="447.50"></text></g><g><title>sqlite3VdbeDelete (1 samples, 0.08%)</title><rect x="7.0456%" y="421" width="0.0801%" height="15" fill="rgb(233,112,49)" fg:x="88" fg:w="1"/><text x="7.2956%" y="431.50"></text></g><g><title>sqlite3VdbeClearObject (1 samples, 0.08%)</title><rect x="7.0456%" y="405" width="0.0801%" height="15" fill="rgb(241,130,26)" fg:x="88" fg:w="1"/><text x="7.2956%" y="415.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="7.0456%" y="389" width="0.0801%" height="15" fill="rgb(252,223,19)" fg:x="88" fg:w="1"/><text x="7.2956%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.0456%" y="373" width="0.0801%" height="15" fill="rgb(211,95,25)" fg:x="88" fg:w="1"/><text x="7.2956%" y="383.50"></text></g><g><title>sqlite3_column_text (1 samples, 0.08%)</title><rect x="7.1257%" y="437" width="0.0801%" height="15" fill="rgb(251,182,27)" fg:x="89" fg:w="1"/><text x="7.3757%" y="447.50"></text></g><g><title>sqlite3VdbeMemStringify (1 samples, 0.08%)</title><rect x="7.1257%" y="421" width="0.0801%" height="15" fill="rgb(238,24,4)" fg:x="89" fg:w="1"/><text x="7.3757%" y="431.50"></text></g><g><title>sqlite3VdbeMemClearAndResize (1 samples, 0.08%)</title><rect x="7.1257%" y="405" width="0.0801%" height="15" fill="rgb(224,220,25)" fg:x="89" fg:w="1"/><text x="7.3757%" y="415.50"></text></g><g><title>sqlite3GetToken (2 samples, 0.16%)</title><rect x="7.2058%" y="405" width="0.1601%" height="15" fill="rgb(239,133,26)" fg:x="90" fg:w="2"/><text x="7.4558%" y="415.50"></text></g><g><title>sqlite3ExprListAppendNew (1 samples, 0.08%)</title><rect x="7.4460%" y="389" width="0.0801%" height="15" fill="rgb(211,94,48)" fg:x="93" fg:w="1"/><text x="7.6960%" y="399.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="7.4460%" y="373" width="0.0801%" height="15" fill="rgb(239,87,6)" fg:x="93" fg:w="1"/><text x="7.6960%" y="383.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="7.4460%" y="357" width="0.0801%" height="15" fill="rgb(227,62,0)" fg:x="93" fg:w="1"/><text x="7.6960%" y="367.50"></text></g><g><title>sqlite3ResolveSelectNames (1 samples, 0.08%)</title><rect x="7.5260%" y="357" width="0.0801%" height="15" fill="rgb(211,226,4)" fg:x="94" fg:w="1"/><text x="7.7760%" y="367.50"></text></g><g><title>sqlite3WalkSelect (1 samples, 0.08%)</title><rect x="7.5260%" y="341" width="0.0801%" height="15" fill="rgb(253,38,52)" fg:x="94" fg:w="1"/><text x="7.7760%" y="351.50"></text></g><g><title>sqlite3ResolveExprNames (1 samples, 0.08%)</title><rect x="7.5260%" y="325" width="0.0801%" height="15" fill="rgb(229,126,40)" fg:x="94" fg:w="1"/><text x="7.7760%" y="335.50"></text></g><g><title>sqlite3SelectPrep (2 samples, 0.16%)</title><rect x="7.5260%" y="373" width="0.1601%" height="15" fill="rgb(229,165,44)" fg:x="94" fg:w="2"/><text x="7.7760%" y="383.50"></text></g><g><title>sqlite3WalkSelect (1 samples, 0.08%)</title><rect x="7.6061%" y="357" width="0.0801%" height="15" fill="rgb(247,95,47)" fg:x="95" fg:w="1"/><text x="7.8561%" y="367.50"></text></g><g><title>sqlite3Expr (1 samples, 0.08%)</title><rect x="7.6061%" y="341" width="0.0801%" height="15" fill="rgb(216,140,30)" fg:x="95" fg:w="1"/><text x="7.8561%" y="351.50"></text></g><g><title>sqlite3ExprAlloc (1 samples, 0.08%)</title><rect x="7.6061%" y="325" width="0.0801%" height="15" fill="rgb(246,214,8)" fg:x="95" fg:w="1"/><text x="7.8561%" y="335.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="7.6061%" y="309" width="0.0801%" height="15" fill="rgb(227,224,15)" fg:x="95" fg:w="1"/><text x="7.8561%" y="319.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="7.8463%" y="357" width="0.0801%" height="15" fill="rgb(233,175,4)" fg:x="98" fg:w="1"/><text x="8.0963%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.8463%" y="341" width="0.0801%" height="15" fill="rgb(221,66,45)" fg:x="98" fg:w="1"/><text x="8.0963%" y="351.50"></text></g><g><title>sqlite3Select (7 samples, 0.56%)</title><rect x="7.5260%" y="389" width="0.5604%" height="15" fill="rgb(221,178,18)" fg:x="94" fg:w="7"/><text x="7.7760%" y="399.50"></text></g><g><title>sqlite3WhereBegin (5 samples, 0.40%)</title><rect x="7.6861%" y="373" width="0.4003%" height="15" fill="rgb(213,81,29)" fg:x="96" fg:w="5"/><text x="7.9361%" y="383.50"></text></g><g><title>sqlite3WhereExprAnalyze (2 samples, 0.16%)</title><rect x="7.9263%" y="357" width="0.1601%" height="15" fill="rgb(220,89,49)" fg:x="99" fg:w="2"/><text x="8.1763%" y="367.50"></text></g><g><title>sqlite3Parser (10 samples, 0.80%)</title><rect x="7.3659%" y="405" width="0.8006%" height="15" fill="rgb(227,60,33)" fg:x="92" fg:w="10"/><text x="7.6159%" y="415.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="8.0865%" y="389" width="0.0801%" height="15" fill="rgb(205,113,12)" fg:x="101" fg:w="1"/><text x="8.3365%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0865%" y="373" width="0.0801%" height="15" fill="rgb(211,32,1)" fg:x="101" fg:w="1"/><text x="8.3365%" y="383.50"></text></g><g><title>sqlite3ParserAlloc (1 samples, 0.08%)</title><rect x="8.1665%" y="405" width="0.0801%" height="15" fill="rgb(246,2,12)" fg:x="102" fg:w="1"/><text x="8.4165%" y="415.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="8.1665%" y="389" width="0.0801%" height="15" fill="rgb(243,37,27)" fg:x="102" fg:w="1"/><text x="8.4165%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.1665%" y="373" width="0.0801%" height="15" fill="rgb(248,211,31)" fg:x="102" fg:w="1"/><text x="8.4165%" y="383.50"></text></g><g><title>sqlite3_prepare_v2 (14 samples, 1.12%)</title><rect x="7.2058%" y="437" width="1.1209%" height="15" fill="rgb(242,146,47)" fg:x="90" fg:w="14"/><text x="7.4558%" y="447.50"></text></g><g><title>sqlite3RunParser (14 samples, 1.12%)</title><rect x="7.2058%" y="421" width="1.1209%" height="15" fill="rgb(206,70,20)" fg:x="90" fg:w="14"/><text x="7.4558%" y="431.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="8.2466%" y="405" width="0.0801%" height="15" fill="rgb(215,10,51)" fg:x="103" fg:w="1"/><text x="8.4966%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.2466%" y="389" width="0.0801%" height="15" fill="rgb(243,178,53)" fg:x="103" fg:w="1"/><text x="8.4966%" y="399.50"></text></g><g><title>&lt;sqlite::Factory as engine::storage::EntityStorageFactory&gt;::create_storage (92 samples, 7.37%)</title><rect x="1.1209%" y="549" width="7.3659%" height="15" fill="rgb(233,221,20)" fg:x="14" fg:w="92"/><text x="1.3709%" y="559.50">&lt;sqlite::F..</text></g><g><title>sqlite::SqliteStorage::new (92 samples, 7.37%)</title><rect x="1.1209%" y="533" width="7.3659%" height="15" fill="rgb(218,95,35)" fg:x="14" fg:w="92"/><text x="1.3709%" y="543.50">sqlite::Sq..</text></g><g><title>sqlite::SqliteStorage::new::{{closure}} (84 samples, 6.73%)</title><rect x="1.7614%" y="517" width="6.7254%" height="15" fill="rgb(229,13,5)" fg:x="22" fg:w="84"/><text x="2.0114%" y="527.50">sqlite::S..</text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (34 samples, 2.72%)</title><rect x="5.7646%" y="501" width="2.7222%" height="15" fill="rgb(252,164,30)" fg:x="72" fg:w="34"/><text x="6.0146%" y="511.50">ru..</text></g><g><title>sqlite3_step (34 samples, 2.72%)</title><rect x="5.7646%" y="485" width="2.7222%" height="15" fill="rgb(232,68,36)" fg:x="72" fg:w="34"/><text x="6.0146%" y="495.50">sq..</text></g><g><title>sqlite3VdbeExec (34 samples, 2.72%)</title><rect x="5.7646%" y="469" width="2.7222%" height="15" fill="rgb(219,59,54)" fg:x="72" fg:w="34"/><text x="6.0146%" y="479.50">sq..</text></g><g><title>sqlite3_exec (26 samples, 2.08%)</title><rect x="6.4051%" y="453" width="2.0817%" height="15" fill="rgb(250,92,33)" fg:x="80" fg:w="26"/><text x="6.6551%" y="463.50">s..</text></g><g><title>sqlite3_step (2 samples, 0.16%)</title><rect x="8.3267%" y="437" width="0.1601%" height="15" fill="rgb(229,162,54)" fg:x="104" fg:w="2"/><text x="8.5767%" y="447.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.08%)</title><rect x="8.4067%" y="421" width="0.0801%" height="15" fill="rgb(244,114,52)" fg:x="105" fg:w="1"/><text x="8.6567%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="8.6469%" y="485" width="0.0801%" height="15" fill="rgb(212,211,43)" fg:x="108" fg:w="1"/><text x="8.8969%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.6469%" y="469" width="0.0801%" height="15" fill="rgb(226,147,8)" fg:x="108" fg:w="1"/><text x="8.8969%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="8.6469%" y="453" width="0.0801%" height="15" fill="rgb(226,23,13)" fg:x="108" fg:w="1"/><text x="8.8969%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="8.6469%" y="437" width="0.0801%" height="15" fill="rgb(240,63,4)" fg:x="108" fg:w="1"/><text x="8.8969%" y="447.50"></text></g><g><title>rusqlite::row::Row::get (1 samples, 0.08%)</title><rect x="8.6469%" y="421" width="0.0801%" height="15" fill="rgb(221,1,32)" fg:x="108" fg:w="1"/><text x="8.8969%" y="431.50"></text></g><g><title>rusqlite::statement::Statement::value_ref (1 samples, 0.08%)</title><rect x="8.6469%" y="405" width="0.0801%" height="15" fill="rgb(242,117,10)" fg:x="108" fg:w="1"/><text x="8.8969%" y="415.50"></text></g><g><title>sqlite3GenerateColumnNames (1 samples, 0.08%)</title><rect x="8.9672%" y="405" width="0.0801%" height="15" fill="rgb(249,172,44)" fg:x="112" fg:w="1"/><text x="9.2172%" y="415.50"></text></g><g><title>sqlite3VdbeMemSetStr (1 samples, 0.08%)</title><rect x="8.9672%" y="389" width="0.0801%" height="15" fill="rgb(244,46,45)" fg:x="112" fg:w="1"/><text x="9.2172%" y="399.50"></text></g><g><title>sqlite3VdbeMemGrow (1 samples, 0.08%)</title><rect x="8.9672%" y="373" width="0.0801%" height="15" fill="rgb(206,43,17)" fg:x="112" fg:w="1"/><text x="9.2172%" y="383.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="8.9672%" y="357" width="0.0801%" height="15" fill="rgb(239,218,39)" fg:x="112" fg:w="1"/><text x="9.2172%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9672%" y="341" width="0.0801%" height="15" fill="rgb(208,169,54)" fg:x="112" fg:w="1"/><text x="9.2172%" y="351.50"></text></g><g><title>sqlite3Parser (3 samples, 0.24%)</title><rect x="8.8871%" y="437" width="0.2402%" height="15" fill="rgb(247,25,42)" fg:x="111" fg:w="3"/><text x="9.1371%" y="447.50"></text></g><g><title>sqlite3Select (2 samples, 0.16%)</title><rect x="8.9672%" y="421" width="0.1601%" height="15" fill="rgb(226,23,31)" fg:x="112" fg:w="2"/><text x="9.2172%" y="431.50"></text></g><g><title>sqlite3WhereBegin (1 samples, 0.08%)</title><rect x="9.0472%" y="405" width="0.0801%" height="15" fill="rgb(247,16,28)" fg:x="113" fg:w="1"/><text x="9.2972%" y="415.50"></text></g><g><title>sqlite3RunParser (6 samples, 0.48%)</title><rect x="8.7270%" y="453" width="0.4804%" height="15" fill="rgb(231,147,38)" fg:x="109" fg:w="6"/><text x="8.9770%" y="463.50"></text></g><g><title>sqlite3ParserAlloc (1 samples, 0.08%)</title><rect x="9.1273%" y="437" width="0.0801%" height="15" fill="rgb(253,81,48)" fg:x="114" fg:w="1"/><text x="9.3773%" y="447.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="9.1273%" y="421" width="0.0801%" height="15" fill="rgb(249,222,43)" fg:x="114" fg:w="1"/><text x="9.3773%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.1273%" y="405" width="0.0801%" height="15" fill="rgb(221,3,27)" fg:x="114" fg:w="1"/><text x="9.3773%" y="415.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::load (8 samples, 0.64%)</title><rect x="8.6469%" y="501" width="0.6405%" height="15" fill="rgb(228,180,5)" fg:x="108" fg:w="8"/><text x="8.8969%" y="511.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (7 samples, 0.56%)</title><rect x="8.7270%" y="485" width="0.5604%" height="15" fill="rgb(227,131,42)" fg:x="109" fg:w="7"/><text x="8.9770%" y="495.50"></text></g><g><title>sqlite3_prepare_v2 (7 samples, 0.56%)</title><rect x="8.7270%" y="469" width="0.5604%" height="15" fill="rgb(212,3,39)" fg:x="109" fg:w="7"/><text x="8.9770%" y="479.50"></text></g><g><title>sqlite3VdbeSetSql (1 samples, 0.08%)</title><rect x="9.2074%" y="453" width="0.0801%" height="15" fill="rgb(226,45,5)" fg:x="115" fg:w="1"/><text x="9.4574%" y="463.50"></text></g><g><title>sqlite3DbStrNDup (1 samples, 0.08%)</title><rect x="9.2074%" y="437" width="0.0801%" height="15" fill="rgb(215,167,45)" fg:x="115" fg:w="1"/><text x="9.4574%" y="447.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="9.2074%" y="421" width="0.0801%" height="15" fill="rgb(250,218,53)" fg:x="115" fg:w="1"/><text x="9.4574%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.2074%" y="405" width="0.0801%" height="15" fill="rgb(207,140,0)" fg:x="115" fg:w="1"/><text x="9.4574%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="9.2874%" y="485" width="0.1601%" height="15" fill="rgb(238,133,51)" fg:x="116" fg:w="2"/><text x="9.5374%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="9.2874%" y="469" width="0.1601%" height="15" fill="rgb(218,203,53)" fg:x="116" fg:w="2"/><text x="9.5374%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.2874%" y="453" width="0.1601%" height="15" fill="rgb(226,184,25)" fg:x="116" fg:w="2"/><text x="9.5374%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.2874%" y="437" width="0.1601%" height="15" fill="rgb(231,121,21)" fg:x="116" fg:w="2"/><text x="9.5374%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (12 samples, 0.96%)</title><rect x="8.5669%" y="533" width="0.9608%" height="15" fill="rgb(251,14,34)" fg:x="107" fg:w="12"/><text x="8.8169%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (11 samples, 0.88%)</title><rect x="8.6469%" y="517" width="0.8807%" height="15" fill="rgb(249,193,11)" fg:x="108" fg:w="11"/><text x="8.8969%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity (3 samples, 0.24%)</title><rect x="9.2874%" y="501" width="0.2402%" height="15" fill="rgb(220,172,37)" fg:x="116" fg:w="3"/><text x="9.5374%" y="511.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="9.4476%" y="485" width="0.0801%" height="15" fill="rgb(231,229,43)" fg:x="118" fg:w="1"/><text x="9.6976%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="9.4476%" y="469" width="0.0801%" height="15" fill="rgb(250,161,5)" fg:x="118" fg:w="1"/><text x="9.6976%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="9.4476%" y="453" width="0.0801%" height="15" fill="rgb(218,225,18)" fg:x="118" fg:w="1"/><text x="9.6976%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="9.4476%" y="437" width="0.0801%" height="15" fill="rgb(245,45,42)" fg:x="118" fg:w="1"/><text x="9.6976%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="9.4476%" y="421" width="0.0801%" height="15" fill="rgb(211,115,1)" fg:x="118" fg:w="1"/><text x="9.6976%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="9.4476%" y="405" width="0.0801%" height="15" fill="rgb(248,133,52)" fg:x="118" fg:w="1"/><text x="9.6976%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="9.4476%" y="389" width="0.0801%" height="15" fill="rgb(238,100,21)" fg:x="118" fg:w="1"/><text x="9.6976%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="9.4476%" y="373" width="0.0801%" height="15" fill="rgb(247,144,11)" fg:x="118" fg:w="1"/><text x="9.6976%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="9.4476%" y="357" width="0.0801%" height="15" fill="rgb(206,164,16)" fg:x="118" fg:w="1"/><text x="9.6976%" y="367.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="9.5276%" y="533" width="0.0801%" height="15" fill="rgb(222,34,3)" fg:x="119" fg:w="1"/><text x="9.7776%" y="543.50"></text></g><g><title>rusqlite::Connection::execute (1 samples, 0.08%)</title><rect x="9.5276%" y="517" width="0.0801%" height="15" fill="rgb(248,82,4)" fg:x="119" fg:w="1"/><text x="9.7776%" y="527.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (1 samples, 0.08%)</title><rect x="9.5276%" y="501" width="0.0801%" height="15" fill="rgb(228,81,46)" fg:x="119" fg:w="1"/><text x="9.7776%" y="511.50"></text></g><g><title>sqlite3_step (1 samples, 0.08%)</title><rect x="9.5276%" y="485" width="0.0801%" height="15" fill="rgb(227,67,47)" fg:x="119" fg:w="1"/><text x="9.7776%" y="495.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.08%)</title><rect x="9.5276%" y="469" width="0.0801%" height="15" fill="rgb(215,93,53)" fg:x="119" fg:w="1"/><text x="9.7776%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (107 samples, 8.57%)</title><rect x="1.1209%" y="565" width="8.5669%" height="15" fill="rgb(248,194,39)" fg:x="14" fg:w="107"/><text x="1.3709%" y="575.50">&lt;engine::dom..</text></g><g><title>engine::session::Session::new (15 samples, 1.20%)</title><rect x="8.4868%" y="549" width="1.2010%" height="15" fill="rgb(215,5,19)" fg:x="106" fg:w="15"/><text x="8.7368%" y="559.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="9.6077%" y="533" width="0.0801%" height="15" fill="rgb(226,215,51)" fg:x="120" fg:w="1"/><text x="9.8577%" y="543.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (1 samples, 0.08%)</title><rect x="9.7678%" y="517" width="0.0801%" height="15" fill="rgb(225,56,26)" fg:x="122" fg:w="1"/><text x="10.0178%" y="527.50"></text></g><g><title>sqlite3_prepare_v2 (1 samples, 0.08%)</title><rect x="9.7678%" y="501" width="0.0801%" height="15" fill="rgb(222,75,29)" fg:x="122" fg:w="1"/><text x="10.0178%" y="511.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.08%)</title><rect x="9.7678%" y="485" width="0.0801%" height="15" fill="rgb(236,139,6)" fg:x="122" fg:w="1"/><text x="10.0178%" y="495.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::begin (2 samples, 0.16%)</title><rect x="9.7678%" y="549" width="0.1601%" height="15" fill="rgb(223,137,36)" fg:x="122" fg:w="2"/><text x="10.0178%" y="559.50"></text></g><g><title>rusqlite::Connection::execute (2 samples, 0.16%)</title><rect x="9.7678%" y="533" width="0.1601%" height="15" fill="rgb(226,99,2)" fg:x="122" fg:w="2"/><text x="10.0178%" y="543.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (1 samples, 0.08%)</title><rect x="9.8479%" y="517" width="0.0801%" height="15" fill="rgb(206,133,23)" fg:x="123" fg:w="1"/><text x="10.0979%" y="527.50"></text></g><g><title>sqlite3_step (1 samples, 0.08%)</title><rect x="9.8479%" y="501" width="0.0801%" height="15" fill="rgb(243,173,15)" fg:x="123" fg:w="1"/><text x="10.0979%" y="511.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.08%)</title><rect x="9.8479%" y="485" width="0.0801%" height="15" fill="rgb(228,69,28)" fg:x="123" fg:w="1"/><text x="10.0979%" y="495.50"></text></g><g><title>sqlite3VdbeCheckFk (1 samples, 0.08%)</title><rect x="9.8479%" y="469" width="0.0801%" height="15" fill="rgb(212,51,22)" fg:x="123" fg:w="1"/><text x="10.0979%" y="479.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (1 samples, 0.08%)</title><rect x="9.9279%" y="485" width="0.0801%" height="15" fill="rgb(227,113,0)" fg:x="124" fg:w="1"/><text x="10.1779%" y="495.50"></text></g><g><title>sqlite3_prepare_v2 (1 samples, 0.08%)</title><rect x="9.9279%" y="469" width="0.0801%" height="15" fill="rgb(252,84,27)" fg:x="124" fg:w="1"/><text x="10.1779%" y="479.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.08%)</title><rect x="9.9279%" y="453" width="0.0801%" height="15" fill="rgb(223,145,39)" fg:x="124" fg:w="1"/><text x="10.1779%" y="463.50"></text></g><g><title>sqlite3Parser (1 samples, 0.08%)</title><rect x="9.9279%" y="437" width="0.0801%" height="15" fill="rgb(239,219,30)" fg:x="124" fg:w="1"/><text x="10.1779%" y="447.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="9.9279%" y="517" width="0.1601%" height="15" fill="rgb(224,196,39)" fg:x="124" fg:w="2"/><text x="10.1779%" y="527.50"></text></g><g><title>rusqlite::Connection::execute (2 samples, 0.16%)</title><rect x="9.9279%" y="501" width="0.1601%" height="15" fill="rgb(205,35,43)" fg:x="124" fg:w="2"/><text x="10.1779%" y="511.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (1 samples, 0.08%)</title><rect x="10.0080%" y="485" width="0.0801%" height="15" fill="rgb(228,201,21)" fg:x="125" fg:w="1"/><text x="10.2580%" y="495.50"></text></g><g><title>sqlite3_step (1 samples, 0.08%)</title><rect x="10.0080%" y="469" width="0.0801%" height="15" fill="rgb(237,118,16)" fg:x="125" fg:w="1"/><text x="10.2580%" y="479.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.08%)</title><rect x="10.0080%" y="453" width="0.0801%" height="15" fill="rgb(241,17,19)" fg:x="125" fg:w="1"/><text x="10.2580%" y="463.50"></text></g><g><title>sqlite3VdbeHalt (1 samples, 0.08%)</title><rect x="10.0080%" y="437" width="0.0801%" height="15" fill="rgb(214,10,25)" fg:x="125" fg:w="1"/><text x="10.2580%" y="447.50"></text></g><g><title>sqlite3BtreeCommitPhaseTwo (1 samples, 0.08%)</title><rect x="10.0080%" y="421" width="0.0801%" height="15" fill="rgb(238,37,29)" fg:x="125" fg:w="1"/><text x="10.2580%" y="431.50"></text></g><g><title>&lt;(A,B,C,D,E) as rusqlite::params::Params&gt;::__bind_in (1 samples, 0.08%)</title><rect x="10.0881%" y="469" width="0.0801%" height="15" fill="rgb(253,83,25)" fg:x="126" fg:w="1"/><text x="10.3381%" y="479.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameter (1 samples, 0.08%)</title><rect x="10.0881%" y="453" width="0.0801%" height="15" fill="rgb(234,192,12)" fg:x="126" fg:w="1"/><text x="10.3381%" y="463.50"></text></g><g><title>sqlite3PExpr (1 samples, 0.08%)</title><rect x="10.4083%" y="405" width="0.0801%" height="15" fill="rgb(241,216,45)" fg:x="130" fg:w="1"/><text x="10.6583%" y="415.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="10.4083%" y="389" width="0.0801%" height="15" fill="rgb(242,22,33)" fg:x="130" fg:w="1"/><text x="10.6583%" y="399.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="10.4083%" y="373" width="0.0801%" height="15" fill="rgb(231,105,49)" fg:x="130" fg:w="1"/><text x="10.6583%" y="383.50"></text></g><g><title>sqlite3CompleteInsertion (1 samples, 0.08%)</title><rect x="10.5685%" y="389" width="0.0801%" height="15" fill="rgb(218,204,15)" fg:x="132" fg:w="1"/><text x="10.8185%" y="399.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="10.6485%" y="389" width="0.0801%" height="15" fill="rgb(235,138,41)" fg:x="133" fg:w="1"/><text x="10.8985%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.6485%" y="373" width="0.0801%" height="15" fill="rgb(246,0,9)" fg:x="133" fg:w="1"/><text x="10.8985%" y="383.50"></text></g><g><title>sqlite3ResolveExprNames (1 samples, 0.08%)</title><rect x="10.7286%" y="389" width="0.0801%" height="15" fill="rgb(210,74,4)" fg:x="134" fg:w="1"/><text x="10.9786%" y="399.50"></text></g><g><title>sqlite3BinaryCompareCollSeq (1 samples, 0.08%)</title><rect x="10.8887%" y="373" width="0.0801%" height="15" fill="rgb(250,60,41)" fg:x="136" fg:w="1"/><text x="11.1387%" y="383.50"></text></g><g><title>sqlite3ExprCollSeq (1 samples, 0.08%)</title><rect x="10.8887%" y="357" width="0.0801%" height="15" fill="rgb(220,115,12)" fg:x="136" fg:w="1"/><text x="11.1387%" y="367.50"></text></g><g><title>sqlite3BinaryCompareCollSeq (1 samples, 0.08%)</title><rect x="11.0488%" y="341" width="0.0801%" height="15" fill="rgb(237,100,13)" fg:x="138" fg:w="1"/><text x="11.2988%" y="351.50"></text></g><g><title>sqlite3ExprCollSeq (1 samples, 0.08%)</title><rect x="11.0488%" y="325" width="0.0801%" height="15" fill="rgb(213,55,26)" fg:x="138" fg:w="1"/><text x="11.2988%" y="335.50"></text></g><g><title>sqlite3ExprCodeRunJustOnce (2 samples, 0.16%)</title><rect x="11.1289%" y="341" width="0.1601%" height="15" fill="rgb(216,17,4)" fg:x="139" fg:w="2"/><text x="11.3789%" y="351.50"></text></g><g><title>sqlite3Malloc (2 samples, 0.16%)</title><rect x="11.1289%" y="325" width="0.1601%" height="15" fill="rgb(220,153,47)" fg:x="139" fg:w="2"/><text x="11.3789%" y="335.50"></text></g><g><title>sqlite3ExprCodeTemp (1 samples, 0.08%)</title><rect x="11.2890%" y="341" width="0.0801%" height="15" fill="rgb(215,131,9)" fg:x="141" fg:w="1"/><text x="11.5390%" y="351.50"></text></g><g><title>sqlite3ExprCodeTarget (1 samples, 0.08%)</title><rect x="11.2890%" y="325" width="0.0801%" height="15" fill="rgb(233,46,42)" fg:x="141" fg:w="1"/><text x="11.5390%" y="335.50"></text></g><g><title>sqlite3ExprCodeGetColumn (1 samples, 0.08%)</title><rect x="11.2890%" y="309" width="0.0801%" height="15" fill="rgb(226,86,7)" fg:x="141" fg:w="1"/><text x="11.5390%" y="319.50"></text></g><g><title>sqlite3ExprCodeGetColumnOfTable (1 samples, 0.08%)</title><rect x="11.2890%" y="293" width="0.0801%" height="15" fill="rgb(239,226,21)" fg:x="141" fg:w="1"/><text x="11.5390%" y="303.50"></text></g><g><title>sqlite3WhereBegin (8 samples, 0.64%)</title><rect x="10.8086%" y="389" width="0.6405%" height="15" fill="rgb(244,137,22)" fg:x="135" fg:w="8"/><text x="11.0586%" y="399.50"></text></g><g><title>sqlite3WhereCodeOneLoopStart (6 samples, 0.48%)</title><rect x="10.9688%" y="373" width="0.4804%" height="15" fill="rgb(211,139,35)" fg:x="137" fg:w="6"/><text x="11.2188%" y="383.50"></text></g><g><title>sqlite3ExprIfFalse (5 samples, 0.40%)</title><rect x="11.0488%" y="357" width="0.4003%" height="15" fill="rgb(214,62,50)" fg:x="138" fg:w="5"/><text x="11.2988%" y="367.50"></text></g><g><title>sqlite3ExprIsVector (1 samples, 0.08%)</title><rect x="11.3691%" y="341" width="0.0801%" height="15" fill="rgb(212,113,44)" fg:x="142" fg:w="1"/><text x="11.6191%" y="351.50"></text></g><g><title>sqlite3WhereEnd (1 samples, 0.08%)</title><rect x="11.4492%" y="389" width="0.0801%" height="15" fill="rgb(226,150,43)" fg:x="143" fg:w="1"/><text x="11.6992%" y="399.50"></text></g><g><title>sqlite3Parser (20 samples, 1.60%)</title><rect x="10.3283%" y="421" width="1.6013%" height="15" fill="rgb(250,71,37)" fg:x="129" fg:w="20"/><text x="10.5783%" y="431.50"></text></g><g><title>sqlite3Update (18 samples, 1.44%)</title><rect x="10.4884%" y="405" width="1.4412%" height="15" fill="rgb(219,76,19)" fg:x="131" fg:w="18"/><text x="10.7384%" y="415.50"></text></g><g><title>sqlite3_free (5 samples, 0.40%)</title><rect x="11.5292%" y="389" width="0.4003%" height="15" fill="rgb(250,39,11)" fg:x="144" fg:w="5"/><text x="11.7792%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="11.6894%" y="373" width="0.2402%" height="15" fill="rgb(230,64,31)" fg:x="146" fg:w="3"/><text x="11.9394%" y="383.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (23 samples, 1.84%)</title><rect x="10.1681%" y="469" width="1.8415%" height="15" fill="rgb(208,222,23)" fg:x="127" fg:w="23"/><text x="10.4181%" y="479.50">r..</text></g><g><title>sqlite3_prepare_v2 (23 samples, 1.84%)</title><rect x="10.1681%" y="453" width="1.8415%" height="15" fill="rgb(227,125,18)" fg:x="127" fg:w="23"/><text x="10.4181%" y="463.50">s..</text></g><g><title>sqlite3RunParser (23 samples, 1.84%)</title><rect x="10.1681%" y="437" width="1.8415%" height="15" fill="rgb(234,210,9)" fg:x="127" fg:w="23"/><text x="10.4181%" y="447.50">s..</text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="11.9295%" y="421" width="0.0801%" height="15" fill="rgb(217,127,24)" fg:x="149" fg:w="1"/><text x="12.1795%" y="431.50"></text></g><g><title>sqlite3StatusDown (1 samples, 0.08%)</title><rect x="11.9295%" y="405" width="0.0801%" height="15" fill="rgb(239,141,48)" fg:x="149" fg:w="1"/><text x="12.1795%" y="415.50"></text></g><g><title>sqlite3BtreeInsert (1 samples, 0.08%)</title><rect x="12.0096%" y="421" width="0.0801%" height="15" fill="rgb(227,109,8)" fg:x="150" fg:w="1"/><text x="12.2596%" y="431.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="12.0096%" y="405" width="0.0801%" height="15" fill="rgb(235,184,23)" fg:x="150" fg:w="1"/><text x="12.2596%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0096%" y="389" width="0.0801%" height="15" fill="rgb(227,226,48)" fg:x="150" fg:w="1"/><text x="12.2596%" y="399.50"></text></g><g><title>sqlite3DbFreeNN (1 samples, 0.08%)</title><rect x="12.1697%" y="405" width="0.0801%" height="15" fill="rgb(206,150,11)" fg:x="152" fg:w="1"/><text x="12.4197%" y="415.50"></text></g><g><title>sqlite3VdbeHalt (3 samples, 0.24%)</title><rect x="12.0897%" y="421" width="0.2402%" height="15" fill="rgb(254,2,33)" fg:x="151" fg:w="3"/><text x="12.3397%" y="431.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="12.2498%" y="405" width="0.0801%" height="15" fill="rgb(243,160,20)" fg:x="153" fg:w="1"/><text x="12.4998%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2498%" y="389" width="0.0801%" height="15" fill="rgb(218,208,30)" fg:x="153" fg:w="1"/><text x="12.4998%" y="399.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::save (29 samples, 2.32%)</title><rect x="10.0881%" y="485" width="2.3219%" height="15" fill="rgb(224,120,49)" fg:x="126" fg:w="29"/><text x="10.3381%" y="495.50">&lt;..</text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (5 samples, 0.40%)</title><rect x="12.0096%" y="469" width="0.4003%" height="15" fill="rgb(246,12,2)" fg:x="150" fg:w="5"/><text x="12.2596%" y="479.50"></text></g><g><title>sqlite3_step (5 samples, 0.40%)</title><rect x="12.0096%" y="453" width="0.4003%" height="15" fill="rgb(236,117,3)" fg:x="150" fg:w="5"/><text x="12.2596%" y="463.50"></text></g><g><title>sqlite3VdbeExec (5 samples, 0.40%)</title><rect x="12.0096%" y="437" width="0.4003%" height="15" fill="rgb(216,128,52)" fg:x="150" fg:w="5"/><text x="12.2596%" y="447.50"></text></g><g><title>sqlite3VdbeSerialPut (1 samples, 0.08%)</title><rect x="12.3299%" y="421" width="0.0801%" height="15" fill="rgb(246,145,19)" fg:x="154" fg:w="1"/><text x="12.5799%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (30 samples, 2.40%)</title><rect x="10.0881%" y="517" width="2.4019%" height="15" fill="rgb(222,11,46)" fg:x="126" fg:w="30"/><text x="10.3381%" y="527.50">al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 2.40%)</title><rect x="10.0881%" y="501" width="2.4019%" height="15" fill="rgb(245,82,36)" fg:x="126" fg:w="30"/><text x="10.3381%" y="511.50">&lt;c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.4099%" y="485" width="0.0801%" height="15" fill="rgb(250,73,51)" fg:x="155" fg:w="1"/><text x="12.6599%" y="495.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="12.4900%" y="517" width="0.0801%" height="15" fill="rgb(221,189,23)" fg:x="156" fg:w="1"/><text x="12.7400%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="12.4900%" y="501" width="0.0801%" height="15" fill="rgb(210,33,7)" fg:x="156" fg:w="1"/><text x="12.7400%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="12.4900%" y="485" width="0.0801%" height="15" fill="rgb(210,107,22)" fg:x="156" fg:w="1"/><text x="12.7400%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4900%" y="469" width="0.0801%" height="15" fill="rgb(222,116,37)" fg:x="156" fg:w="1"/><text x="12.7400%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4900%" y="453" width="0.0801%" height="15" fill="rgb(254,17,48)" fg:x="156" fg:w="1"/><text x="12.7400%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="12.5701%" y="501" width="0.0801%" height="15" fill="rgb(224,36,32)" fg:x="157" fg:w="1"/><text x="12.8201%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="12.6501%" y="469" width="0.0801%" height="15" fill="rgb(232,90,46)" fg:x="158" fg:w="1"/><text x="12.9001%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="12.6501%" y="453" width="0.0801%" height="15" fill="rgb(241,66,40)" fg:x="158" fg:w="1"/><text x="12.9001%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.6501%" y="437" width="0.0801%" height="15" fill="rgb(249,184,29)" fg:x="158" fg:w="1"/><text x="12.9001%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.6501%" y="421" width="0.0801%" height="15" fill="rgb(231,181,1)" fg:x="158" fg:w="1"/><text x="12.9001%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="12.7302%" y="453" width="0.1601%" height="15" fill="rgb(224,94,2)" fg:x="159" fg:w="2"/><text x="12.9802%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="12.7302%" y="437" width="0.1601%" height="15" fill="rgb(229,170,15)" fg:x="159" fg:w="2"/><text x="12.9802%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.8102%" y="421" width="0.0801%" height="15" fill="rgb(240,127,35)" fg:x="160" fg:w="1"/><text x="13.0602%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.8102%" y="405" width="0.0801%" height="15" fill="rgb(248,196,34)" fg:x="160" fg:w="1"/><text x="13.0602%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.8102%" y="389" width="0.0801%" height="15" fill="rgb(236,137,7)" fg:x="160" fg:w="1"/><text x="13.0602%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.8102%" y="373" width="0.0801%" height="15" fill="rgb(235,127,16)" fg:x="160" fg:w="1"/><text x="13.0602%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.8102%" y="357" width="0.0801%" height="15" fill="rgb(250,192,54)" fg:x="160" fg:w="1"/><text x="13.0602%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="12.8903%" y="437" width="0.0801%" height="15" fill="rgb(218,98,20)" fg:x="161" fg:w="1"/><text x="13.1403%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="12.8903%" y="421" width="0.0801%" height="15" fill="rgb(230,176,47)" fg:x="161" fg:w="1"/><text x="13.1403%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.8903%" y="405" width="0.0801%" height="15" fill="rgb(244,2,33)" fg:x="161" fg:w="1"/><text x="13.1403%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.8903%" y="389" width="0.0801%" height="15" fill="rgb(231,100,17)" fg:x="161" fg:w="1"/><text x="13.1403%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.8903%" y="373" width="0.0801%" height="15" fill="rgb(245,23,12)" fg:x="161" fg:w="1"/><text x="13.1403%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="12.8903%" y="453" width="0.1601%" height="15" fill="rgb(249,55,22)" fg:x="161" fg:w="2"/><text x="13.1403%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.9704%" y="437" width="0.0801%" height="15" fill="rgb(207,134,9)" fg:x="162" fg:w="1"/><text x="13.2204%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="12.7302%" y="469" width="0.4003%" height="15" fill="rgb(218,134,0)" fg:x="159" fg:w="5"/><text x="12.9802%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.0504%" y="453" width="0.0801%" height="15" fill="rgb(213,212,33)" fg:x="163" fg:w="1"/><text x="13.3004%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.0504%" y="437" width="0.0801%" height="15" fill="rgb(252,106,18)" fg:x="163" fg:w="1"/><text x="13.3004%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.0504%" y="421" width="0.0801%" height="15" fill="rgb(208,126,42)" fg:x="163" fg:w="1"/><text x="13.3004%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.0504%" y="405" width="0.0801%" height="15" fill="rgb(246,175,29)" fg:x="163" fg:w="1"/><text x="13.3004%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.0504%" y="389" width="0.0801%" height="15" fill="rgb(215,13,50)" fg:x="163" fg:w="1"/><text x="13.3004%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.0504%" y="373" width="0.0801%" height="15" fill="rgb(216,172,15)" fg:x="163" fg:w="1"/><text x="13.3004%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (7 samples, 0.56%)</title><rect x="12.6501%" y="485" width="0.5604%" height="15" fill="rgb(212,103,13)" fg:x="158" fg:w="7"/><text x="12.9001%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.1305%" y="469" width="0.0801%" height="15" fill="rgb(231,171,36)" fg:x="164" fg:w="1"/><text x="13.3805%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.1305%" y="453" width="0.0801%" height="15" fill="rgb(250,123,20)" fg:x="164" fg:w="1"/><text x="13.3805%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.1305%" y="437" width="0.0801%" height="15" fill="rgb(212,53,50)" fg:x="164" fg:w="1"/><text x="13.3805%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.1305%" y="421" width="0.0801%" height="15" fill="rgb(243,54,12)" fg:x="164" fg:w="1"/><text x="13.3805%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.1305%" y="405" width="0.0801%" height="15" fill="rgb(234,101,34)" fg:x="164" fg:w="1"/><text x="13.3805%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.2906%" y="437" width="0.0801%" height="15" fill="rgb(254,67,22)" fg:x="166" fg:w="1"/><text x="13.5406%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="13.2106%" y="485" width="0.2402%" height="15" fill="rgb(250,35,47)" fg:x="165" fg:w="3"/><text x="13.4606%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="13.2906%" y="469" width="0.1601%" height="15" fill="rgb(226,126,38)" fg:x="166" fg:w="2"/><text x="13.5406%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="13.2906%" y="453" width="0.1601%" height="15" fill="rgb(216,138,53)" fg:x="166" fg:w="2"/><text x="13.5406%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3707%" y="437" width="0.0801%" height="15" fill="rgb(246,199,43)" fg:x="167" fg:w="1"/><text x="13.6207%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.3707%" y="421" width="0.0801%" height="15" fill="rgb(232,125,11)" fg:x="167" fg:w="1"/><text x="13.6207%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5308%" y="437" width="0.0801%" height="15" fill="rgb(218,219,45)" fg:x="169" fg:w="1"/><text x="13.7808%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6109%" y="437" width="0.0801%" height="15" fill="rgb(216,102,54)" fg:x="170" fg:w="1"/><text x="13.8609%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6109%" y="421" width="0.0801%" height="15" fill="rgb(250,228,7)" fg:x="170" fg:w="1"/><text x="13.8609%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="13.6109%" y="405" width="0.0801%" height="15" fill="rgb(226,125,25)" fg:x="170" fg:w="1"/><text x="13.8609%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6109%" y="389" width="0.0801%" height="15" fill="rgb(224,165,27)" fg:x="170" fg:w="1"/><text x="13.8609%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6109%" y="373" width="0.0801%" height="15" fill="rgb(233,86,3)" fg:x="170" fg:w="1"/><text x="13.8609%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6109%" y="357" width="0.0801%" height="15" fill="rgb(228,116,20)" fg:x="170" fg:w="1"/><text x="13.8609%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6109%" y="341" width="0.0801%" height="15" fill="rgb(209,192,17)" fg:x="170" fg:w="1"/><text x="13.8609%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6109%" y="325" width="0.0801%" height="15" fill="rgb(224,88,34)" fg:x="170" fg:w="1"/><text x="13.8609%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6109%" y="309" width="0.0801%" height="15" fill="rgb(233,38,6)" fg:x="170" fg:w="1"/><text x="13.8609%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6109%" y="293" width="0.0801%" height="15" fill="rgb(212,59,30)" fg:x="170" fg:w="1"/><text x="13.8609%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6910%" y="389" width="0.0801%" height="15" fill="rgb(213,80,3)" fg:x="171" fg:w="1"/><text x="13.9410%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6910%" y="373" width="0.0801%" height="15" fill="rgb(251,178,7)" fg:x="171" fg:w="1"/><text x="13.9410%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6910%" y="357" width="0.0801%" height="15" fill="rgb(213,154,26)" fg:x="171" fg:w="1"/><text x="13.9410%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="13.7710%" y="373" width="0.0801%" height="15" fill="rgb(238,165,49)" fg:x="172" fg:w="1"/><text x="14.0210%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="13.8511%" y="373" width="0.0801%" height="15" fill="rgb(248,91,46)" fg:x="173" fg:w="1"/><text x="14.1011%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.8511%" y="357" width="0.0801%" height="15" fill="rgb(244,21,52)" fg:x="173" fg:w="1"/><text x="14.1011%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="13.5308%" y="469" width="0.4804%" height="15" fill="rgb(247,122,20)" fg:x="169" fg:w="6"/><text x="13.7808%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="13.5308%" y="453" width="0.4804%" height="15" fill="rgb(218,27,9)" fg:x="169" fg:w="6"/><text x="13.7808%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="13.6910%" y="437" width="0.3203%" height="15" fill="rgb(246,7,6)" fg:x="171" fg:w="4"/><text x="13.9410%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (4 samples, 0.32%)</title><rect x="13.6910%" y="421" width="0.3203%" height="15" fill="rgb(227,135,54)" fg:x="171" fg:w="4"/><text x="13.9410%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="13.6910%" y="405" width="0.3203%" height="15" fill="rgb(247,14,11)" fg:x="171" fg:w="4"/><text x="13.9410%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="13.7710%" y="389" width="0.2402%" height="15" fill="rgb(206,149,34)" fg:x="172" fg:w="3"/><text x="14.0210%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9311%" y="373" width="0.0801%" height="15" fill="rgb(227,228,4)" fg:x="174" fg:w="1"/><text x="14.1811%" y="383.50"></text></g><g><title>engine::session::Session::flush (52 samples, 4.16%)</title><rect x="9.9279%" y="549" width="4.1633%" height="15" fill="rgb(238,218,28)" fg:x="124" fg:w="52"/><text x="10.1779%" y="559.50">engin..</text></g><g><title>engine::session::Session::save_entity_changes (52 samples, 4.16%)</title><rect x="9.9279%" y="533" width="4.1633%" height="15" fill="rgb(252,86,40)" fg:x="124" fg:w="52"/><text x="10.1779%" y="543.50">engin..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (19 samples, 1.52%)</title><rect x="12.5701%" y="517" width="1.5212%" height="15" fill="rgb(251,225,11)" fg:x="157" fg:w="19"/><text x="12.8201%" y="527.50"></text></g><g><title>engine::session::Session::check_for_changes (18 samples, 1.44%)</title><rect x="12.6501%" y="501" width="1.4412%" height="15" fill="rgb(206,46,49)" fg:x="158" fg:w="18"/><text x="12.9001%" y="511.50"></text></g><g><title>kernel::compare::any_entity_changes (8 samples, 0.64%)</title><rect x="13.4508%" y="485" width="0.6405%" height="15" fill="rgb(245,128,24)" fg:x="168" fg:w="8"/><text x="13.7008%" y="495.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="14.0112%" y="469" width="0.0801%" height="15" fill="rgb(219,177,34)" fg:x="175" fg:w="1"/><text x="14.2612%" y="479.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="14.0112%" y="453" width="0.0801%" height="15" fill="rgb(218,60,48)" fg:x="175" fg:w="1"/><text x="14.2612%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="14.0112%" y="437" width="0.0801%" height="15" fill="rgb(221,11,5)" fg:x="175" fg:w="1"/><text x="14.2612%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="14.0112%" y="421" width="0.0801%" height="15" fill="rgb(220,148,13)" fg:x="175" fg:w="1"/><text x="14.2612%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="14.0913%" y="533" width="0.0801%" height="15" fill="rgb(210,16,3)" fg:x="176" fg:w="1"/><text x="14.3413%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="14.0913%" y="517" width="0.0801%" height="15" fill="rgb(236,80,2)" fg:x="176" fg:w="1"/><text x="14.3413%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="14.0913%" y="501" width="0.0801%" height="15" fill="rgb(239,129,19)" fg:x="176" fg:w="1"/><text x="14.3413%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="14.1713%" y="517" width="0.0801%" height="15" fill="rgb(220,106,35)" fg:x="177" fg:w="1"/><text x="14.4213%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="14.1713%" y="501" width="0.0801%" height="15" fill="rgb(252,139,45)" fg:x="177" fg:w="1"/><text x="14.4213%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1713%" y="485" width="0.0801%" height="15" fill="rgb(229,8,36)" fg:x="177" fg:w="1"/><text x="14.4213%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (4 samples, 0.32%)</title><rect x="14.0913%" y="549" width="0.3203%" height="15" fill="rgb(230,126,33)" fg:x="176" fg:w="4"/><text x="14.3413%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="14.1713%" y="533" width="0.2402%" height="15" fill="rgb(239,140,21)" fg:x="177" fg:w="3"/><text x="14.4213%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="14.2514%" y="517" width="0.1601%" height="15" fill="rgb(254,104,9)" fg:x="178" fg:w="2"/><text x="14.5014%" y="527.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="14.3315%" y="501" width="0.0801%" height="15" fill="rgb(239,52,14)" fg:x="179" fg:w="1"/><text x="14.5815%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.3315%" y="485" width="0.0801%" height="15" fill="rgb(208,227,44)" fg:x="179" fg:w="1"/><text x="14.5815%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.3315%" y="469" width="0.0801%" height="15" fill="rgb(246,18,19)" fg:x="179" fg:w="1"/><text x="14.5815%" y="479.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4115%" y="485" width="0.0801%" height="15" fill="rgb(235,228,25)" fg:x="180" fg:w="1"/><text x="14.6615%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4115%" y="469" width="0.0801%" height="15" fill="rgb(240,156,20)" fg:x="180" fg:w="1"/><text x="14.6615%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4115%" y="453" width="0.0801%" height="15" fill="rgb(224,8,20)" fg:x="180" fg:w="1"/><text x="14.6615%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.4115%" y="437" width="0.0801%" height="15" fill="rgb(214,12,52)" fg:x="180" fg:w="1"/><text x="14.6615%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.4115%" y="421" width="0.0801%" height="15" fill="rgb(211,220,47)" fg:x="180" fg:w="1"/><text x="14.6615%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.4115%" y="405" width="0.0801%" height="15" fill="rgb(250,173,5)" fg:x="180" fg:w="1"/><text x="14.6615%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.4115%" y="389" width="0.0801%" height="15" fill="rgb(250,125,52)" fg:x="180" fg:w="1"/><text x="14.6615%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.4115%" y="373" width="0.0801%" height="15" fill="rgb(209,133,18)" fg:x="180" fg:w="1"/><text x="14.6615%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="14.4115%" y="533" width="0.1601%" height="15" fill="rgb(216,173,22)" fg:x="180" fg:w="2"/><text x="14.6615%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="14.4115%" y="517" width="0.1601%" height="15" fill="rgb(205,3,22)" fg:x="180" fg:w="2"/><text x="14.6615%" y="527.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="14.4115%" y="501" width="0.1601%" height="15" fill="rgb(248,22,20)" fg:x="180" fg:w="2"/><text x="14.6615%" y="511.50"></text></g><g><title>plugins_core::build::Build::leads_to (1 samples, 0.08%)</title><rect x="14.4916%" y="485" width="0.0801%" height="15" fill="rgb(233,6,29)" fg:x="181" fg:w="1"/><text x="14.7416%" y="495.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="14.4916%" y="469" width="0.0801%" height="15" fill="rgb(240,22,54)" fg:x="181" fg:w="1"/><text x="14.7416%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="14.4916%" y="453" width="0.0801%" height="15" fill="rgb(231,133,32)" fg:x="181" fg:w="1"/><text x="14.7416%" y="463.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="14.4916%" y="437" width="0.0801%" height="15" fill="rgb(248,193,4)" fg:x="181" fg:w="1"/><text x="14.7416%" y="447.50"></text></g><g><title>sqlite3DbStrNDup (1 samples, 0.08%)</title><rect x="14.5717%" y="437" width="0.0801%" height="15" fill="rgb(211,178,46)" fg:x="182" fg:w="1"/><text x="14.8217%" y="447.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="14.5717%" y="421" width="0.0801%" height="15" fill="rgb(224,5,42)" fg:x="182" fg:w="1"/><text x="14.8217%" y="431.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="14.5717%" y="405" width="0.0801%" height="15" fill="rgb(239,176,25)" fg:x="182" fg:w="1"/><text x="14.8217%" y="415.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (2 samples, 0.16%)</title><rect x="14.5717%" y="469" width="0.1601%" height="15" fill="rgb(245,187,50)" fg:x="182" fg:w="2"/><text x="14.8217%" y="479.50"></text></g><g><title>sqlite3_prepare_v2 (2 samples, 0.16%)</title><rect x="14.5717%" y="453" width="0.1601%" height="15" fill="rgb(248,24,15)" fg:x="182" fg:w="2"/><text x="14.8217%" y="463.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.08%)</title><rect x="14.6517%" y="437" width="0.0801%" height="15" fill="rgb(205,166,13)" fg:x="183" fg:w="1"/><text x="14.9017%" y="447.50"></text></g><g><title>sqlite3Parser (1 samples, 0.08%)</title><rect x="14.6517%" y="421" width="0.0801%" height="15" fill="rgb(208,114,23)" fg:x="183" fg:w="1"/><text x="14.9017%" y="431.50"></text></g><g><title>sqlite3FinishCoding (1 samples, 0.08%)</title><rect x="14.6517%" y="405" width="0.0801%" height="15" fill="rgb(239,127,18)" fg:x="183" fg:w="1"/><text x="14.9017%" y="415.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="14.5717%" y="501" width="0.2402%" height="15" fill="rgb(219,154,28)" fg:x="182" fg:w="3"/><text x="14.8217%" y="511.50"></text></g><g><title>rusqlite::Connection::execute (3 samples, 0.24%)</title><rect x="14.5717%" y="485" width="0.2402%" height="15" fill="rgb(225,157,23)" fg:x="182" fg:w="3"/><text x="14.8217%" y="495.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (1 samples, 0.08%)</title><rect x="14.7318%" y="469" width="0.0801%" height="15" fill="rgb(219,8,6)" fg:x="184" fg:w="1"/><text x="14.9818%" y="479.50"></text></g><g><title>sqlite3_step (1 samples, 0.08%)</title><rect x="14.7318%" y="453" width="0.0801%" height="15" fill="rgb(212,47,6)" fg:x="184" fg:w="1"/><text x="14.9818%" y="463.50"></text></g><g><title>&lt;(A,B,C,D) as rusqlite::params::Params&gt;::__bind_in (1 samples, 0.08%)</title><rect x="14.8118%" y="453" width="0.0801%" height="15" fill="rgb(224,190,4)" fg:x="185" fg:w="1"/><text x="15.0618%" y="463.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameter (1 samples, 0.08%)</title><rect x="14.8118%" y="437" width="0.0801%" height="15" fill="rgb(239,183,29)" fg:x="185" fg:w="1"/><text x="15.0618%" y="447.50"></text></g><g><title>sqlite3VdbeMemSetStr (1 samples, 0.08%)</title><rect x="14.8118%" y="421" width="0.0801%" height="15" fill="rgb(213,57,7)" fg:x="185" fg:w="1"/><text x="15.0618%" y="431.50"></text></g><g><title>sqlite3VdbeMemGrow (1 samples, 0.08%)</title><rect x="14.8118%" y="405" width="0.0801%" height="15" fill="rgb(216,148,1)" fg:x="185" fg:w="1"/><text x="15.0618%" y="415.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="14.8118%" y="389" width="0.0801%" height="15" fill="rgb(236,182,29)" fg:x="185" fg:w="1"/><text x="15.0618%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (1 samples, 0.08%)</title><rect x="14.8919%" y="453" width="0.0801%" height="15" fill="rgb(244,120,48)" fg:x="186" fg:w="1"/><text x="15.1419%" y="463.50"></text></g><g><title>sqlite3_finalize (1 samples, 0.08%)</title><rect x="14.8919%" y="437" width="0.0801%" height="15" fill="rgb(206,71,34)" fg:x="186" fg:w="1"/><text x="15.1419%" y="447.50"></text></g><g><title>sqlite3VdbeFinalize (1 samples, 0.08%)</title><rect x="14.8919%" y="421" width="0.0801%" height="15" fill="rgb(242,32,6)" fg:x="186" fg:w="1"/><text x="15.1419%" y="431.50"></text></g><g><title>sqlite3VdbeDelete (1 samples, 0.08%)</title><rect x="14.8919%" y="405" width="0.0801%" height="15" fill="rgb(241,35,3)" fg:x="186" fg:w="1"/><text x="15.1419%" y="415.50"></text></g><g><title>sqlite3VdbeClearObject (1 samples, 0.08%)</title><rect x="14.8919%" y="389" width="0.0801%" height="15" fill="rgb(222,62,19)" fg:x="186" fg:w="1"/><text x="15.1419%" y="399.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="14.8919%" y="373" width="0.0801%" height="15" fill="rgb(223,110,41)" fg:x="186" fg:w="1"/><text x="15.1419%" y="383.50"></text></g><g><title>sqlite3GetToken (1 samples, 0.08%)</title><rect x="15.0520%" y="405" width="0.0801%" height="15" fill="rgb(208,224,4)" fg:x="188" fg:w="1"/><text x="15.3020%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.2922%" y="341" width="0.0801%" height="15" fill="rgb(241,137,19)" fg:x="191" fg:w="1"/><text x="15.5422%" y="351.50"></text></g><g><title>sqlite3ExprAssignVarNumber (2 samples, 0.16%)</title><rect x="15.2922%" y="389" width="0.1601%" height="15" fill="rgb(244,24,17)" fg:x="191" fg:w="2"/><text x="15.5422%" y="399.50"></text></g><g><title>sqlite3VListAdd (2 samples, 0.16%)</title><rect x="15.2922%" y="373" width="0.1601%" height="15" fill="rgb(245,178,49)" fg:x="191" fg:w="2"/><text x="15.5422%" y="383.50"></text></g><g><title>sqlite3Realloc (2 samples, 0.16%)</title><rect x="15.2922%" y="357" width="0.1601%" height="15" fill="rgb(219,160,38)" fg:x="191" fg:w="2"/><text x="15.5422%" y="367.50"></text></g><g><title>sqlite3StatusUp (1 samples, 0.08%)</title><rect x="15.3723%" y="341" width="0.0801%" height="15" fill="rgb(228,137,14)" fg:x="192" fg:w="1"/><text x="15.6223%" y="351.50"></text></g><g><title>sqlite3IdListAppend (1 samples, 0.08%)</title><rect x="15.4524%" y="389" width="0.0801%" height="15" fill="rgb(237,134,11)" fg:x="193" fg:w="1"/><text x="15.7024%" y="399.50"></text></g><g><title>sqlite3DbMallocZero (1 samples, 0.08%)</title><rect x="15.4524%" y="373" width="0.0801%" height="15" fill="rgb(211,126,44)" fg:x="193" fg:w="1"/><text x="15.7024%" y="383.50"></text></g><g><title>sqlite3BeginWriteOperation (1 samples, 0.08%)</title><rect x="15.5324%" y="373" width="0.0801%" height="15" fill="rgb(226,171,33)" fg:x="194" fg:w="1"/><text x="15.7824%" y="383.50"></text></g><g><title>sqlite3CompleteInsertion (1 samples, 0.08%)</title><rect x="15.6125%" y="373" width="0.0801%" height="15" fill="rgb(253,99,13)" fg:x="195" fg:w="1"/><text x="15.8625%" y="383.50"></text></g><g><title>sqlite3IdListDelete (1 samples, 0.08%)</title><rect x="15.6926%" y="373" width="0.0801%" height="15" fill="rgb(244,48,7)" fg:x="196" fg:w="1"/><text x="15.9426%" y="383.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="15.6926%" y="357" width="0.0801%" height="15" fill="rgb(244,217,54)" fg:x="196" fg:w="1"/><text x="15.9426%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.6926%" y="341" width="0.0801%" height="15" fill="rgb(224,15,18)" fg:x="196" fg:w="1"/><text x="15.9426%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.7726%" y="357" width="0.0801%" height="15" fill="rgb(244,99,12)" fg:x="197" fg:w="1"/><text x="16.0226%" y="367.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="15.8527%" y="357" width="0.0801%" height="15" fill="rgb(233,226,8)" fg:x="198" fg:w="1"/><text x="16.1027%" y="367.50"></text></g><g><title>sqlite3Parser (11 samples, 0.88%)</title><rect x="15.1321%" y="405" width="0.8807%" height="15" fill="rgb(229,211,3)" fg:x="189" fg:w="11"/><text x="15.3821%" y="415.50"></text></g><g><title>sqlite3Insert (6 samples, 0.48%)</title><rect x="15.5324%" y="389" width="0.4804%" height="15" fill="rgb(216,140,21)" fg:x="194" fg:w="6"/><text x="15.7824%" y="399.50"></text></g><g><title>sqlite3_free (3 samples, 0.24%)</title><rect x="15.7726%" y="373" width="0.2402%" height="15" fill="rgb(234,122,30)" fg:x="197" fg:w="3"/><text x="16.0226%" y="383.50"></text></g><g><title>sqlite3StatusDown (1 samples, 0.08%)</title><rect x="15.9327%" y="357" width="0.0801%" height="15" fill="rgb(236,25,46)" fg:x="199" fg:w="1"/><text x="16.1827%" y="367.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (14 samples, 1.12%)</title><rect x="14.9720%" y="453" width="1.1209%" height="15" fill="rgb(217,52,54)" fg:x="187" fg:w="14"/><text x="15.2220%" y="463.50"></text></g><g><title>sqlite3_prepare_v2 (14 samples, 1.12%)</title><rect x="14.9720%" y="437" width="1.1209%" height="15" fill="rgb(222,29,26)" fg:x="187" fg:w="14"/><text x="15.2220%" y="447.50"></text></g><g><title>sqlite3RunParser (14 samples, 1.12%)</title><rect x="14.9720%" y="421" width="1.1209%" height="15" fill="rgb(216,177,29)" fg:x="187" fg:w="14"/><text x="15.2220%" y="431.50"></text></g><g><title>sqlite3ParserAlloc (1 samples, 0.08%)</title><rect x="16.0128%" y="405" width="0.0801%" height="15" fill="rgb(247,136,51)" fg:x="200" fg:w="1"/><text x="16.2628%" y="415.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="16.0128%" y="389" width="0.0801%" height="15" fill="rgb(231,47,47)" fg:x="200" fg:w="1"/><text x="16.2628%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0128%" y="373" width="0.0801%" height="15" fill="rgb(211,192,36)" fg:x="200" fg:w="1"/><text x="16.2628%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (18 samples, 1.44%)</title><rect x="14.8118%" y="501" width="1.4412%" height="15" fill="rgb(229,156,32)" fg:x="185" fg:w="18"/><text x="15.0618%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 1.44%)</title><rect x="14.8118%" y="485" width="1.4412%" height="15" fill="rgb(248,213,20)" fg:x="185" fg:w="18"/><text x="15.0618%" y="495.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::save (18 samples, 1.44%)</title><rect x="14.8118%" y="469" width="1.4412%" height="15" fill="rgb(217,64,7)" fg:x="185" fg:w="18"/><text x="15.0618%" y="479.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (2 samples, 0.16%)</title><rect x="16.0929%" y="453" width="0.1601%" height="15" fill="rgb(232,142,8)" fg:x="201" fg:w="2"/><text x="16.3429%" y="463.50"></text></g><g><title>sqlite3_step (2 samples, 0.16%)</title><rect x="16.0929%" y="437" width="0.1601%" height="15" fill="rgb(224,92,44)" fg:x="201" fg:w="2"/><text x="16.3429%" y="447.50"></text></g><g><title>sqlite3VdbeExec (2 samples, 0.16%)</title><rect x="16.0929%" y="421" width="0.1601%" height="15" fill="rgb(214,169,17)" fg:x="201" fg:w="2"/><text x="16.3429%" y="431.50"></text></g><g><title>sqlite3BtreeInsert (1 samples, 0.08%)</title><rect x="16.1729%" y="405" width="0.0801%" height="15" fill="rgb(210,59,37)" fg:x="202" fg:w="1"/><text x="16.4229%" y="415.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="16.1729%" y="389" width="0.0801%" height="15" fill="rgb(214,116,48)" fg:x="202" fg:w="1"/><text x="16.4229%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1729%" y="373" width="0.0801%" height="15" fill="rgb(244,191,6)" fg:x="202" fg:w="1"/><text x="16.4229%" y="383.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="16.2530%" y="501" width="0.0801%" height="15" fill="rgb(241,50,52)" fg:x="203" fg:w="1"/><text x="16.5030%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="16.3331%" y="453" width="0.0801%" height="15" fill="rgb(236,75,39)" fg:x="204" fg:w="1"/><text x="16.5831%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.3331%" y="437" width="0.0801%" height="15" fill="rgb(236,99,0)" fg:x="204" fg:w="1"/><text x="16.5831%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.3331%" y="421" width="0.0801%" height="15" fill="rgb(207,202,15)" fg:x="204" fg:w="1"/><text x="16.5831%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.3331%" y="405" width="0.0801%" height="15" fill="rgb(233,207,14)" fg:x="204" fg:w="1"/><text x="16.5831%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.3331%" y="389" width="0.0801%" height="15" fill="rgb(226,27,51)" fg:x="204" fg:w="1"/><text x="16.5831%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.3331%" y="373" width="0.0801%" height="15" fill="rgb(206,104,42)" fg:x="204" fg:w="1"/><text x="16.5831%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.3331%" y="357" width="0.0801%" height="15" fill="rgb(212,225,4)" fg:x="204" fg:w="1"/><text x="16.5831%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.3331%" y="341" width="0.0801%" height="15" fill="rgb(233,96,42)" fg:x="204" fg:w="1"/><text x="16.5831%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="16.4131%" y="437" width="0.1601%" height="15" fill="rgb(229,21,32)" fg:x="205" fg:w="2"/><text x="16.6631%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.5733%" y="437" width="0.0801%" height="15" fill="rgb(226,216,24)" fg:x="207" fg:w="1"/><text x="16.8233%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.6533%" y="389" width="0.0801%" height="15" fill="rgb(221,163,17)" fg:x="208" fg:w="1"/><text x="16.9033%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.6533%" y="373" width="0.0801%" height="15" fill="rgb(216,216,42)" fg:x="208" fg:w="1"/><text x="16.9033%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="16.7334%" y="389" width="0.0801%" height="15" fill="rgb(240,118,7)" fg:x="209" fg:w="1"/><text x="16.9834%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="16.6533%" y="421" width="0.2402%" height="15" fill="rgb(221,67,37)" fg:x="208" fg:w="3"/><text x="16.9033%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="16.6533%" y="405" width="0.2402%" height="15" fill="rgb(241,32,44)" fg:x="208" fg:w="3"/><text x="16.9033%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.8135%" y="389" width="0.0801%" height="15" fill="rgb(235,204,43)" fg:x="210" fg:w="1"/><text x="17.0635%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.8135%" y="373" width="0.0801%" height="15" fill="rgb(213,116,10)" fg:x="210" fg:w="1"/><text x="17.0635%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.8935%" y="421" width="0.0801%" height="15" fill="rgb(239,15,48)" fg:x="211" fg:w="1"/><text x="17.1435%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.8935%" y="405" width="0.0801%" height="15" fill="rgb(207,123,36)" fg:x="211" fg:w="1"/><text x="17.1435%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.8935%" y="389" width="0.0801%" height="15" fill="rgb(209,103,30)" fg:x="211" fg:w="1"/><text x="17.1435%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.8935%" y="373" width="0.0801%" height="15" fill="rgb(238,100,19)" fg:x="211" fg:w="1"/><text x="17.1435%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="17.0536%" y="405" width="0.0801%" height="15" fill="rgb(244,30,14)" fg:x="213" fg:w="1"/><text x="17.3036%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="16.9736%" y="421" width="0.3203%" height="15" fill="rgb(249,174,6)" fg:x="212" fg:w="4"/><text x="17.2236%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="17.1337%" y="405" width="0.1601%" height="15" fill="rgb(235,213,41)" fg:x="214" fg:w="2"/><text x="17.3837%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.2138%" y="389" width="0.0801%" height="15" fill="rgb(213,118,6)" fg:x="215" fg:w="1"/><text x="17.4638%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.2138%" y="373" width="0.0801%" height="15" fill="rgb(235,44,51)" fg:x="215" fg:w="1"/><text x="17.4638%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.2138%" y="357" width="0.0801%" height="15" fill="rgb(217,9,53)" fg:x="215" fg:w="1"/><text x="17.4638%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.2138%" y="341" width="0.0801%" height="15" fill="rgb(237,172,34)" fg:x="215" fg:w="1"/><text x="17.4638%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.12%)</title><rect x="16.3331%" y="469" width="1.1209%" height="15" fill="rgb(206,206,11)" fg:x="204" fg:w="14"/><text x="16.5831%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="16.4131%" y="453" width="1.0408%" height="15" fill="rgb(214,149,29)" fg:x="205" fg:w="13"/><text x="16.6631%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="16.6533%" y="437" width="0.8006%" height="15" fill="rgb(208,123,3)" fg:x="208" fg:w="10"/><text x="16.9033%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.2938%" y="421" width="0.1601%" height="15" fill="rgb(229,126,4)" fg:x="216" fg:w="2"/><text x="17.5438%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.3739%" y="405" width="0.0801%" height="15" fill="rgb(222,92,36)" fg:x="217" fg:w="1"/><text x="17.6239%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="17.3739%" y="389" width="0.0801%" height="15" fill="rgb(216,39,41)" fg:x="217" fg:w="1"/><text x="17.6239%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.4540%" y="469" width="0.0801%" height="15" fill="rgb(253,127,28)" fg:x="218" fg:w="1"/><text x="17.7040%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.4540%" y="453" width="0.0801%" height="15" fill="rgb(249,152,51)" fg:x="218" fg:w="1"/><text x="17.7040%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.4540%" y="437" width="0.0801%" height="15" fill="rgb(209,123,42)" fg:x="218" fg:w="1"/><text x="17.7040%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.4540%" y="421" width="0.0801%" height="15" fill="rgb(241,118,22)" fg:x="218" fg:w="1"/><text x="17.7040%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.5340%" y="421" width="0.0801%" height="15" fill="rgb(208,25,7)" fg:x="219" fg:w="1"/><text x="17.7840%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.5340%" y="405" width="0.0801%" height="15" fill="rgb(243,144,39)" fg:x="219" fg:w="1"/><text x="17.7840%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="17.5340%" y="389" width="0.0801%" height="15" fill="rgb(250,50,5)" fg:x="219" fg:w="1"/><text x="17.7840%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6141%" y="389" width="0.0801%" height="15" fill="rgb(207,67,11)" fg:x="220" fg:w="1"/><text x="17.8641%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="17.6141%" y="421" width="0.2402%" height="15" fill="rgb(245,204,40)" fg:x="220" fg:w="3"/><text x="17.8641%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="17.6141%" y="405" width="0.2402%" height="15" fill="rgb(238,228,24)" fg:x="220" fg:w="3"/><text x="17.8641%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.6942%" y="389" width="0.1601%" height="15" fill="rgb(217,116,22)" fg:x="221" fg:w="2"/><text x="17.9442%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.7742%" y="373" width="0.0801%" height="15" fill="rgb(234,98,12)" fg:x="222" fg:w="1"/><text x="18.0242%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.7742%" y="357" width="0.0801%" height="15" fill="rgb(242,170,50)" fg:x="222" fg:w="1"/><text x="18.0242%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.8543%" y="341" width="0.1601%" height="15" fill="rgb(235,7,5)" fg:x="223" fg:w="2"/><text x="18.1043%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.8543%" y="325" width="0.1601%" height="15" fill="rgb(241,114,28)" fg:x="223" fg:w="2"/><text x="18.1043%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="17.8543%" y="309" width="0.1601%" height="15" fill="rgb(246,112,42)" fg:x="223" fg:w="2"/><text x="18.1043%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="17.8543%" y="357" width="0.2402%" height="15" fill="rgb(248,228,14)" fg:x="223" fg:w="3"/><text x="18.1043%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="18.0144%" y="341" width="0.0801%" height="15" fill="rgb(208,133,18)" fg:x="225" fg:w="1"/><text x="18.2644%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.0144%" y="325" width="0.0801%" height="15" fill="rgb(207,35,49)" fg:x="225" fg:w="1"/><text x="18.2644%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.0144%" y="309" width="0.0801%" height="15" fill="rgb(205,68,36)" fg:x="225" fg:w="1"/><text x="18.2644%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="17.8543%" y="421" width="0.3203%" height="15" fill="rgb(245,62,40)" fg:x="223" fg:w="4"/><text x="18.1043%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="17.8543%" y="405" width="0.3203%" height="15" fill="rgb(228,27,24)" fg:x="223" fg:w="4"/><text x="18.1043%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="17.8543%" y="389" width="0.3203%" height="15" fill="rgb(253,19,12)" fg:x="223" fg:w="4"/><text x="18.1043%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (4 samples, 0.32%)</title><rect x="17.8543%" y="373" width="0.3203%" height="15" fill="rgb(232,28,20)" fg:x="223" fg:w="4"/><text x="18.1043%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.0945%" y="357" width="0.0801%" height="15" fill="rgb(218,35,51)" fg:x="226" fg:w="1"/><text x="18.3445%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.1745%" y="373" width="0.0801%" height="15" fill="rgb(212,90,40)" fg:x="227" fg:w="1"/><text x="18.4245%" y="383.50"></text></g><g><title>engine::session::Session::flush (48 samples, 3.84%)</title><rect x="14.5717%" y="533" width="3.8431%" height="15" fill="rgb(220,172,12)" fg:x="182" fg:w="48"/><text x="14.8217%" y="543.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (48 samples, 3.84%)</title><rect x="14.5717%" y="517" width="3.8431%" height="15" fill="rgb(226,159,20)" fg:x="182" fg:w="48"/><text x="14.8217%" y="527.50">engi..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (26 samples, 2.08%)</title><rect x="16.3331%" y="501" width="2.0817%" height="15" fill="rgb(234,205,16)" fg:x="204" fg:w="26"/><text x="16.5831%" y="511.50">e..</text></g><g><title>engine::session::Session::check_for_changes (26 samples, 2.08%)</title><rect x="16.3331%" y="485" width="2.0817%" height="15" fill="rgb(207,9,39)" fg:x="204" fg:w="26"/><text x="16.5831%" y="495.50">e..</text></g><g><title>kernel::compare::any_entity_changes (11 samples, 0.88%)</title><rect x="17.5340%" y="469" width="0.8807%" height="15" fill="rgb(249,143,15)" fg:x="219" fg:w="11"/><text x="17.7840%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="17.5340%" y="453" width="0.8807%" height="15" fill="rgb(253,133,29)" fg:x="219" fg:w="11"/><text x="17.7840%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="17.5340%" y="437" width="0.8807%" height="15" fill="rgb(221,187,0)" fg:x="219" fg:w="11"/><text x="17.7840%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="18.1745%" y="421" width="0.2402%" height="15" fill="rgb(205,204,26)" fg:x="227" fg:w="3"/><text x="18.4245%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.24%)</title><rect x="18.1745%" y="405" width="0.2402%" height="15" fill="rgb(224,68,54)" fg:x="227" fg:w="3"/><text x="18.4245%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="18.1745%" y="389" width="0.2402%" height="15" fill="rgb(209,67,4)" fg:x="227" fg:w="3"/><text x="18.4245%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="18.2546%" y="373" width="0.1601%" height="15" fill="rgb(228,229,18)" fg:x="228" fg:w="2"/><text x="18.5046%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="18.3347%" y="357" width="0.0801%" height="15" fill="rgb(231,89,13)" fg:x="229" fg:w="1"/><text x="18.5847%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.3347%" y="341" width="0.0801%" height="15" fill="rgb(210,182,18)" fg:x="229" fg:w="1"/><text x="18.5847%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.3347%" y="325" width="0.0801%" height="15" fill="rgb(240,105,2)" fg:x="229" fg:w="1"/><text x="18.5847%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.3347%" y="309" width="0.0801%" height="15" fill="rgb(207,170,50)" fg:x="229" fg:w="1"/><text x="18.5847%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="18.4147%" y="501" width="0.0801%" height="15" fill="rgb(232,133,24)" fg:x="230" fg:w="1"/><text x="18.6647%" y="511.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="18.4147%" y="485" width="0.0801%" height="15" fill="rgb(235,166,27)" fg:x="230" fg:w="1"/><text x="18.6647%" y="495.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="18.4147%" y="469" width="0.0801%" height="15" fill="rgb(209,19,13)" fg:x="230" fg:w="1"/><text x="18.6647%" y="479.50"></text></g><g><title>plugins_core::build::Build::occupying (2 samples, 0.16%)</title><rect x="18.4147%" y="533" width="0.1601%" height="15" fill="rgb(226,79,39)" fg:x="230" fg:w="2"/><text x="18.6647%" y="543.50"></text></g><g><title>plugins_core::tools::set_occupying (2 samples, 0.16%)</title><rect x="18.4147%" y="517" width="0.1601%" height="15" fill="rgb(222,163,10)" fg:x="230" fg:w="2"/><text x="18.6647%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="18.4948%" y="501" width="0.0801%" height="15" fill="rgb(214,44,19)" fg:x="231" fg:w="1"/><text x="18.7448%" y="511.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="18.4948%" y="485" width="0.0801%" height="15" fill="rgb(210,217,13)" fg:x="231" fg:w="1"/><text x="18.7448%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="18.4948%" y="469" width="0.0801%" height="15" fill="rgb(237,61,54)" fg:x="231" fg:w="1"/><text x="18.7448%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.4948%" y="453" width="0.0801%" height="15" fill="rgb(226,184,24)" fg:x="231" fg:w="1"/><text x="18.7448%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (53 samples, 4.24%)</title><rect x="14.4115%" y="549" width="4.2434%" height="15" fill="rgb(223,226,4)" fg:x="180" fg:w="53"/><text x="14.6615%" y="559.50">plugi..</text></g><g><title>plugins_core::build::Build::with_username (1 samples, 0.08%)</title><rect x="18.5749%" y="533" width="0.0801%" height="15" fill="rgb(210,26,41)" fg:x="232" fg:w="1"/><text x="18.8249%" y="543.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="18.5749%" y="517" width="0.0801%" height="15" fill="rgb(220,221,6)" fg:x="232" fg:w="1"/><text x="18.8249%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="18.5749%" y="501" width="0.0801%" height="15" fill="rgb(225,89,49)" fg:x="232" fg:w="1"/><text x="18.8249%" y="511.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="18.5749%" y="485" width="0.0801%" height="15" fill="rgb(218,70,45)" fg:x="232" fg:w="1"/><text x="18.8249%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.5749%" y="469" width="0.0801%" height="15" fill="rgb(238,166,21)" fg:x="232" fg:w="1"/><text x="18.8249%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.5749%" y="453" width="0.0801%" height="15" fill="rgb(224,141,44)" fg:x="232" fg:w="1"/><text x="18.8249%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="18.5749%" y="437" width="0.0801%" height="15" fill="rgb(230,12,49)" fg:x="232" fg:w="1"/><text x="18.8249%" y="447.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (113 samples, 9.05%)</title><rect x="9.6878%" y="565" width="9.0472%" height="15" fill="rgb(212,174,12)" fg:x="121" fg:w="113"/><text x="9.9378%" y="575.50">&lt;tests::Holdi..</text></g><g><title>plugins_core::build::BuildSurroundings::make (1 samples, 0.08%)</title><rect x="18.6549%" y="549" width="0.0801%" height="15" fill="rgb(246,67,9)" fg:x="233" fg:w="1"/><text x="18.9049%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="18.6549%" y="533" width="0.0801%" height="15" fill="rgb(239,35,23)" fg:x="233" fg:w="1"/><text x="18.9049%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="18.6549%" y="517" width="0.0801%" height="15" fill="rgb(211,167,0)" fg:x="233" fg:w="1"/><text x="18.9049%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="18.6549%" y="501" width="0.0801%" height="15" fill="rgb(225,119,45)" fg:x="233" fg:w="1"/><text x="18.9049%" y="511.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="18.6549%" y="485" width="0.0801%" height="15" fill="rgb(210,162,6)" fg:x="233" fg:w="1"/><text x="18.9049%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.6549%" y="469" width="0.0801%" height="15" fill="rgb(208,118,35)" fg:x="233" fg:w="1"/><text x="18.9049%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.6549%" y="453" width="0.0801%" height="15" fill="rgb(239,4,53)" fg:x="233" fg:w="1"/><text x="18.9049%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="18.7350%" y="565" width="0.0801%" height="15" fill="rgb(213,130,21)" fg:x="234" fg:w="1"/><text x="18.9850%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="18.7350%" y="549" width="0.0801%" height="15" fill="rgb(235,148,0)" fg:x="234" fg:w="1"/><text x="18.9850%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlite::Factory&gt; (1 samples, 0.08%)</title><rect x="18.7350%" y="533" width="0.0801%" height="15" fill="rgb(244,224,18)" fg:x="234" fg:w="1"/><text x="18.9850%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;rusqlite::inner_connection::InnerConnection&gt;&gt; (1 samples, 0.08%)</title><rect x="18.7350%" y="517" width="0.0801%" height="15" fill="rgb(211,214,4)" fg:x="234" fg:w="1"/><text x="18.9850%" y="527.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::close (1 samples, 0.08%)</title><rect x="18.7350%" y="501" width="0.0801%" height="15" fill="rgb(206,119,25)" fg:x="234" fg:w="1"/><text x="18.9850%" y="511.50"></text></g><g><title>sqlite3LeaveMutexAndCloseZombie (1 samples, 0.08%)</title><rect x="18.7350%" y="485" width="0.0801%" height="15" fill="rgb(243,93,47)" fg:x="234" fg:w="1"/><text x="18.9850%" y="495.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="18.7350%" y="469" width="0.0801%" height="15" fill="rgb(224,194,6)" fg:x="234" fg:w="1"/><text x="18.9850%" y="479.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="18.7350%" y="453" width="0.0801%" height="15" fill="rgb(243,229,6)" fg:x="234" fg:w="1"/><text x="18.9850%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (1 samples, 0.08%)</title><rect x="18.8151%" y="565" width="0.0801%" height="15" fill="rgb(207,23,50)" fg:x="235" fg:w="1"/><text x="19.0651%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="18.8151%" y="549" width="0.0801%" height="15" fill="rgb(253,192,32)" fg:x="235" fg:w="1"/><text x="19.0651%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.8151%" y="533" width="0.0801%" height="15" fill="rgb(213,21,6)" fg:x="235" fg:w="1"/><text x="19.0651%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.8951%" y="549" width="0.0801%" height="15" fill="rgb(243,151,13)" fg:x="236" fg:w="1"/><text x="19.1451%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.8951%" y="533" width="0.0801%" height="15" fill="rgb(233,165,41)" fg:x="236" fg:w="1"/><text x="19.1451%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.8951%" y="517" width="0.0801%" height="15" fill="rgb(246,176,45)" fg:x="236" fg:w="1"/><text x="19.1451%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.8951%" y="501" width="0.0801%" height="15" fill="rgb(217,170,52)" fg:x="236" fg:w="1"/><text x="19.1451%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.8951%" y="485" width="0.0801%" height="15" fill="rgb(214,203,54)" fg:x="236" fg:w="1"/><text x="19.1451%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="18.8951%" y="469" width="0.0801%" height="15" fill="rgb(248,215,49)" fg:x="236" fg:w="1"/><text x="19.1451%" y="479.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="18.8951%" y="453" width="0.0801%" height="15" fill="rgb(208,46,10)" fg:x="236" fg:w="1"/><text x="19.1451%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.8951%" y="437" width="0.0801%" height="15" fill="rgb(254,5,31)" fg:x="236" fg:w="1"/><text x="19.1451%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.8951%" y="421" width="0.0801%" height="15" fill="rgb(222,104,33)" fg:x="236" fg:w="1"/><text x="19.1451%" y="431.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="18.8951%" y="405" width="0.0801%" height="15" fill="rgb(248,49,16)" fg:x="236" fg:w="1"/><text x="19.1451%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (1 samples, 0.08%)</title><rect x="18.9752%" y="501" width="0.0801%" height="15" fill="rgb(232,198,41)" fg:x="237" fg:w="1"/><text x="19.2252%" y="511.50"></text></g><g><title>sqlite3_finalize (1 samples, 0.08%)</title><rect x="18.9752%" y="485" width="0.0801%" height="15" fill="rgb(214,125,3)" fg:x="237" fg:w="1"/><text x="19.2252%" y="495.50"></text></g><g><title>sqlite3VdbeFinalize (1 samples, 0.08%)</title><rect x="18.9752%" y="469" width="0.0801%" height="15" fill="rgb(229,220,28)" fg:x="237" fg:w="1"/><text x="19.2252%" y="479.50"></text></g><g><title>sqlite3VdbeReset (1 samples, 0.08%)</title><rect x="18.9752%" y="453" width="0.0801%" height="15" fill="rgb(222,64,37)" fg:x="237" fg:w="1"/><text x="19.2252%" y="463.50"></text></g><g><title>sqlite3VdbeHalt (1 samples, 0.08%)</title><rect x="18.9752%" y="437" width="0.0801%" height="15" fill="rgb(249,184,13)" fg:x="237" fg:w="1"/><text x="19.2252%" y="447.50"></text></g><g><title>sqlite3GetToken (1 samples, 0.08%)</title><rect x="19.1353%" y="453" width="0.0801%" height="15" fill="rgb(252,176,6)" fg:x="239" fg:w="1"/><text x="19.3853%" y="463.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::rollback (5 samples, 0.40%)</title><rect x="18.9752%" y="533" width="0.4003%" height="15" fill="rgb(228,153,7)" fg:x="237" fg:w="5"/><text x="19.2252%" y="543.50"></text></g><g><title>rusqlite::Connection::execute (5 samples, 0.40%)</title><rect x="18.9752%" y="517" width="0.4003%" height="15" fill="rgb(242,193,5)" fg:x="237" fg:w="5"/><text x="19.2252%" y="527.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (4 samples, 0.32%)</title><rect x="19.0552%" y="501" width="0.3203%" height="15" fill="rgb(232,140,9)" fg:x="238" fg:w="4"/><text x="19.3052%" y="511.50"></text></g><g><title>sqlite3_prepare_v2 (3 samples, 0.24%)</title><rect x="19.1353%" y="485" width="0.2402%" height="15" fill="rgb(213,222,16)" fg:x="239" fg:w="3"/><text x="19.3853%" y="495.50"></text></g><g><title>sqlite3RunParser (3 samples, 0.24%)</title><rect x="19.1353%" y="469" width="0.2402%" height="15" fill="rgb(222,75,50)" fg:x="239" fg:w="3"/><text x="19.3853%" y="479.50"></text></g><g><title>sqlite3ParserAlloc (2 samples, 0.16%)</title><rect x="19.2154%" y="453" width="0.1601%" height="15" fill="rgb(205,180,2)" fg:x="240" fg:w="2"/><text x="19.4654%" y="463.50"></text></g><g><title>sqlite3Malloc (2 samples, 0.16%)</title><rect x="19.2154%" y="437" width="0.1601%" height="15" fill="rgb(216,34,7)" fg:x="240" fg:w="2"/><text x="19.4654%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.2154%" y="421" width="0.1601%" height="15" fill="rgb(253,16,32)" fg:x="240" fg:w="2"/><text x="19.4654%" y="431.50"></text></g><g><title>&lt;(A,B,C,D,E) as rusqlite::params::Params&gt;::__bind_in (1 samples, 0.08%)</title><rect x="19.3755%" y="485" width="0.0801%" height="15" fill="rgb(208,97,28)" fg:x="242" fg:w="1"/><text x="19.6255%" y="495.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameter (1 samples, 0.08%)</title><rect x="19.3755%" y="469" width="0.0801%" height="15" fill="rgb(225,92,11)" fg:x="242" fg:w="1"/><text x="19.6255%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (1 samples, 0.08%)</title><rect x="19.4556%" y="485" width="0.0801%" height="15" fill="rgb(243,38,12)" fg:x="243" fg:w="1"/><text x="19.7056%" y="495.50"></text></g><g><title>sqlite3_finalize (1 samples, 0.08%)</title><rect x="19.4556%" y="469" width="0.0801%" height="15" fill="rgb(208,139,16)" fg:x="243" fg:w="1"/><text x="19.7056%" y="479.50"></text></g><g><title>sqlite3VdbeFinalize (1 samples, 0.08%)</title><rect x="19.4556%" y="453" width="0.0801%" height="15" fill="rgb(227,24,9)" fg:x="243" fg:w="1"/><text x="19.7056%" y="463.50"></text></g><g><title>sqlite3VdbeDelete (1 samples, 0.08%)</title><rect x="19.4556%" y="437" width="0.0801%" height="15" fill="rgb(206,62,11)" fg:x="243" fg:w="1"/><text x="19.7056%" y="447.50"></text></g><g><title>sqlite3VdbeClearObject (1 samples, 0.08%)</title><rect x="19.4556%" y="421" width="0.0801%" height="15" fill="rgb(228,134,27)" fg:x="243" fg:w="1"/><text x="19.7056%" y="431.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="19.4556%" y="405" width="0.0801%" height="15" fill="rgb(205,55,33)" fg:x="243" fg:w="1"/><text x="19.7056%" y="415.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="19.4556%" y="389" width="0.0801%" height="15" fill="rgb(243,75,43)" fg:x="243" fg:w="1"/><text x="19.7056%" y="399.50"></text></g><g><title>sqlite3GetToken (2 samples, 0.16%)</title><rect x="19.6958%" y="437" width="0.1601%" height="15" fill="rgb(223,27,42)" fg:x="246" fg:w="2"/><text x="19.9458%" y="447.50"></text></g><g><title>sqlite3ExprAssignVarNumber (2 samples, 0.16%)</title><rect x="19.8559%" y="421" width="0.1601%" height="15" fill="rgb(232,189,33)" fg:x="248" fg:w="2"/><text x="20.1059%" y="431.50"></text></g><g><title>sqlite3VListAdd (2 samples, 0.16%)</title><rect x="19.8559%" y="405" width="0.1601%" height="15" fill="rgb(210,9,39)" fg:x="248" fg:w="2"/><text x="20.1059%" y="415.50"></text></g><g><title>sqlite3Realloc (2 samples, 0.16%)</title><rect x="19.8559%" y="389" width="0.1601%" height="15" fill="rgb(242,85,26)" fg:x="248" fg:w="2"/><text x="20.1059%" y="399.50"></text></g><g><title>sqlite3Malloc (2 samples, 0.16%)</title><rect x="20.0160%" y="421" width="0.1601%" height="15" fill="rgb(248,44,4)" fg:x="250" fg:w="2"/><text x="20.2660%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.0961%" y="405" width="0.0801%" height="15" fill="rgb(250,96,46)" fg:x="251" fg:w="1"/><text x="20.3461%" y="415.50"></text></g><g><title>sqlite3PExpr (1 samples, 0.08%)</title><rect x="20.1761%" y="421" width="0.0801%" height="15" fill="rgb(229,116,26)" fg:x="252" fg:w="1"/><text x="20.4261%" y="431.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="20.1761%" y="405" width="0.0801%" height="15" fill="rgb(246,94,34)" fg:x="252" fg:w="1"/><text x="20.4261%" y="415.50"></text></g><g><title>sqlite3GenerateConstraintChecks (2 samples, 0.16%)</title><rect x="20.2562%" y="405" width="0.1601%" height="15" fill="rgb(251,73,21)" fg:x="253" fg:w="2"/><text x="20.5062%" y="415.50"></text></g><g><title>sqlite3MPrintf (1 samples, 0.08%)</title><rect x="20.3363%" y="389" width="0.0801%" height="15" fill="rgb(254,121,25)" fg:x="254" fg:w="1"/><text x="20.5863%" y="399.50"></text></g><g><title>sqlite3VMPrintf (1 samples, 0.08%)</title><rect x="20.3363%" y="373" width="0.0801%" height="15" fill="rgb(215,161,49)" fg:x="254" fg:w="1"/><text x="20.5863%" y="383.50"></text></g><g><title>sqlite3GenerateRowIndexDelete (1 samples, 0.08%)</title><rect x="20.4163%" y="405" width="0.0801%" height="15" fill="rgb(221,43,13)" fg:x="255" fg:w="1"/><text x="20.6663%" y="415.50"></text></g><g><title>sqlite3GenerateIndexKey (1 samples, 0.08%)</title><rect x="20.4163%" y="389" width="0.0801%" height="15" fill="rgb(249,5,37)" fg:x="255" fg:w="1"/><text x="20.6663%" y="399.50"></text></g><g><title>sqlite3ResolveExprNames (1 samples, 0.08%)</title><rect x="20.4964%" y="405" width="0.0801%" height="15" fill="rgb(226,25,44)" fg:x="256" fg:w="1"/><text x="20.7464%" y="415.50"></text></g><g><title>sqlite3StrICmp (1 samples, 0.08%)</title><rect x="20.5765%" y="405" width="0.0801%" height="15" fill="rgb(238,189,16)" fg:x="257" fg:w="1"/><text x="20.8265%" y="415.50"></text></g><g><title>sqlite3Malloc (2 samples, 0.16%)</title><rect x="20.7366%" y="389" width="0.1601%" height="15" fill="rgb(251,186,8)" fg:x="259" fg:w="2"/><text x="20.9866%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.8167%" y="373" width="0.0801%" height="15" fill="rgb(254,34,31)" fg:x="260" fg:w="1"/><text x="21.0667%" y="383.50"></text></g><g><title>sqlite3OpenTable (1 samples, 0.08%)</title><rect x="20.8967%" y="389" width="0.0801%" height="15" fill="rgb(225,215,27)" fg:x="261" fg:w="1"/><text x="21.1467%" y="399.50"></text></g><g><title>sqlite3DbReallocOrFree (1 samples, 0.08%)</title><rect x="20.8967%" y="373" width="0.0801%" height="15" fill="rgb(221,192,48)" fg:x="261" fg:w="1"/><text x="21.1467%" y="383.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="20.8967%" y="357" width="0.0801%" height="15" fill="rgb(219,137,20)" fg:x="261" fg:w="1"/><text x="21.1467%" y="367.50"></text></g><g><title>sqlite3ExprIfFalse (1 samples, 0.08%)</title><rect x="20.9768%" y="373" width="0.0801%" height="15" fill="rgb(219,84,11)" fg:x="262" fg:w="1"/><text x="21.2268%" y="383.50"></text></g><g><title>sqlite3WhereCodeOneLoopStart (2 samples, 0.16%)</title><rect x="20.9768%" y="389" width="0.1601%" height="15" fill="rgb(224,10,23)" fg:x="262" fg:w="2"/><text x="21.2268%" y="399.50"></text></g><g><title>sqlite3VdbeAddOp4 (1 samples, 0.08%)</title><rect x="21.0568%" y="373" width="0.0801%" height="15" fill="rgb(248,22,39)" fg:x="263" fg:w="1"/><text x="21.3068%" y="383.50"></text></g><g><title>sqlite3DbStrNDup (1 samples, 0.08%)</title><rect x="21.0568%" y="357" width="0.0801%" height="15" fill="rgb(212,154,20)" fg:x="263" fg:w="1"/><text x="21.3068%" y="367.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="21.0568%" y="341" width="0.0801%" height="15" fill="rgb(236,199,50)" fg:x="263" fg:w="1"/><text x="21.3068%" y="351.50"></text></g><g><title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="21.0568%" y="325" width="0.0801%" height="15" fill="rgb(211,9,17)" fg:x="263" fg:w="1"/><text x="21.3068%" y="335.50"></text></g><g><title>sqlite3WhereBegin (7 samples, 0.56%)</title><rect x="20.6565%" y="405" width="0.5604%" height="15" fill="rgb(243,216,36)" fg:x="258" fg:w="7"/><text x="20.9065%" y="415.50"></text></g><g><title>sqlite3WhereExprAnalyze (1 samples, 0.08%)</title><rect x="21.1369%" y="389" width="0.0801%" height="15" fill="rgb(250,2,10)" fg:x="264" fg:w="1"/><text x="21.3869%" y="399.50"></text></g><g><title>sqlite3WhereGetMask (1 samples, 0.08%)</title><rect x="21.1369%" y="373" width="0.0801%" height="15" fill="rgb(226,50,48)" fg:x="264" fg:w="1"/><text x="21.3869%" y="383.50"></text></g><g><title>sqlite3Parser (18 samples, 1.44%)</title><rect x="19.8559%" y="437" width="1.4412%" height="15" fill="rgb(243,81,16)" fg:x="248" fg:w="18"/><text x="20.1059%" y="447.50"></text></g><g><title>sqlite3Update (13 samples, 1.04%)</title><rect x="20.2562%" y="421" width="1.0408%" height="15" fill="rgb(250,14,2)" fg:x="253" fg:w="13"/><text x="20.5062%" y="431.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="21.2170%" y="405" width="0.0801%" height="15" fill="rgb(233,135,29)" fg:x="265" fg:w="1"/><text x="21.4670%" y="415.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (23 samples, 1.84%)</title><rect x="19.5356%" y="485" width="1.8415%" height="15" fill="rgb(224,64,43)" fg:x="244" fg:w="23"/><text x="19.7856%" y="495.50">r..</text></g><g><title>sqlite3_prepare_v2 (23 samples, 1.84%)</title><rect x="19.5356%" y="469" width="1.8415%" height="15" fill="rgb(238,84,13)" fg:x="244" fg:w="23"/><text x="19.7856%" y="479.50">s..</text></g><g><title>sqlite3RunParser (22 samples, 1.76%)</title><rect x="19.6157%" y="453" width="1.7614%" height="15" fill="rgb(253,48,26)" fg:x="245" fg:w="22"/><text x="19.8657%" y="463.50"></text></g><g><title>sqlite3ParserAlloc (1 samples, 0.08%)</title><rect x="21.2970%" y="437" width="0.0801%" height="15" fill="rgb(205,223,31)" fg:x="266" fg:w="1"/><text x="21.5470%" y="447.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="21.2970%" y="421" width="0.0801%" height="15" fill="rgb(221,41,32)" fg:x="266" fg:w="1"/><text x="21.5470%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.2970%" y="405" width="0.0801%" height="15" fill="rgb(213,158,31)" fg:x="266" fg:w="1"/><text x="21.5470%" y="415.50"></text></g><g><title>sqlite3BtreeBeginTrans (2 samples, 0.16%)</title><rect x="21.4572%" y="437" width="0.1601%" height="15" fill="rgb(245,126,43)" fg:x="268" fg:w="2"/><text x="21.7072%" y="447.50"></text></g><g><title>sqlite3BtreeDelete (1 samples, 0.08%)</title><rect x="21.6173%" y="437" width="0.0801%" height="15" fill="rgb(227,7,22)" fg:x="270" fg:w="1"/><text x="21.8673%" y="447.50"></text></g><g><title>sqlite3BtreeIndexMoveto (1 samples, 0.08%)</title><rect x="21.6974%" y="437" width="0.0801%" height="15" fill="rgb(252,90,44)" fg:x="271" fg:w="1"/><text x="21.9474%" y="447.50"></text></g><g><title>sqlite3BtreeInsert (1 samples, 0.08%)</title><rect x="21.7774%" y="437" width="0.0801%" height="15" fill="rgb(253,91,0)" fg:x="272" fg:w="1"/><text x="22.0274%" y="447.50"></text></g><g><title>sqlite3VdbeHalt (3 samples, 0.24%)</title><rect x="21.8575%" y="437" width="0.2402%" height="15" fill="rgb(252,175,49)" fg:x="273" fg:w="3"/><text x="22.1075%" y="447.50"></text></g><g><title>sqlite3_mutex_leave (1 samples, 0.08%)</title><rect x="22.0176%" y="421" width="0.0801%" height="15" fill="rgb(246,150,1)" fg:x="275" fg:w="1"/><text x="22.2676%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (35 samples, 2.80%)</title><rect x="19.3755%" y="533" width="2.8022%" height="15" fill="rgb(241,192,25)" fg:x="242" fg:w="35"/><text x="19.6255%" y="543.50">al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 2.80%)</title><rect x="19.3755%" y="517" width="2.8022%" height="15" fill="rgb(239,187,11)" fg:x="242" fg:w="35"/><text x="19.6255%" y="527.50">&lt;c..</text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::save (35 samples, 2.80%)</title><rect x="19.3755%" y="501" width="2.8022%" height="15" fill="rgb(218,202,51)" fg:x="242" fg:w="35"/><text x="19.6255%" y="511.50">&lt;s..</text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (10 samples, 0.80%)</title><rect x="21.3771%" y="485" width="0.8006%" height="15" fill="rgb(225,176,8)" fg:x="267" fg:w="10"/><text x="21.6271%" y="495.50"></text></g><g><title>sqlite3_step (10 samples, 0.80%)</title><rect x="21.3771%" y="469" width="0.8006%" height="15" fill="rgb(219,122,41)" fg:x="267" fg:w="10"/><text x="21.6271%" y="479.50"></text></g><g><title>sqlite3VdbeExec (10 samples, 0.80%)</title><rect x="21.3771%" y="453" width="0.8006%" height="15" fill="rgb(248,140,20)" fg:x="267" fg:w="10"/><text x="21.6271%" y="463.50"></text></g><g><title>sqlite3VdbeMemGrow (1 samples, 0.08%)</title><rect x="22.0977%" y="437" width="0.0801%" height="15" fill="rgb(245,41,37)" fg:x="276" fg:w="1"/><text x="22.3477%" y="447.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="22.0977%" y="421" width="0.0801%" height="15" fill="rgb(235,82,39)" fg:x="276" fg:w="1"/><text x="22.3477%" y="431.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="22.1777%" y="533" width="0.0801%" height="15" fill="rgb(230,108,42)" fg:x="277" fg:w="1"/><text x="22.4277%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="22.1777%" y="517" width="0.0801%" height="15" fill="rgb(215,150,50)" fg:x="277" fg:w="1"/><text x="22.4277%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="22.1777%" y="501" width="0.0801%" height="15" fill="rgb(233,212,5)" fg:x="277" fg:w="1"/><text x="22.4277%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="22.2578%" y="485" width="0.1601%" height="15" fill="rgb(245,80,22)" fg:x="278" fg:w="2"/><text x="22.5078%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.2578%" y="469" width="0.1601%" height="15" fill="rgb(238,129,16)" fg:x="278" fg:w="2"/><text x="22.5078%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.3379%" y="453" width="0.0801%" height="15" fill="rgb(240,19,0)" fg:x="279" fg:w="1"/><text x="22.5879%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.3379%" y="437" width="0.0801%" height="15" fill="rgb(232,42,35)" fg:x="279" fg:w="1"/><text x="22.5879%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="22.4980%" y="453" width="0.0801%" height="15" fill="rgb(223,130,24)" fg:x="281" fg:w="1"/><text x="22.7480%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="22.4980%" y="437" width="0.0801%" height="15" fill="rgb(237,16,22)" fg:x="281" fg:w="1"/><text x="22.7480%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.4980%" y="421" width="0.0801%" height="15" fill="rgb(248,192,20)" fg:x="281" fg:w="1"/><text x="22.7480%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="22.5781%" y="437" width="0.0801%" height="15" fill="rgb(233,167,2)" fg:x="282" fg:w="1"/><text x="22.8281%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="22.6581%" y="437" width="0.1601%" height="15" fill="rgb(252,71,44)" fg:x="283" fg:w="2"/><text x="22.9081%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.6581%" y="421" width="0.1601%" height="15" fill="rgb(238,37,47)" fg:x="283" fg:w="2"/><text x="22.9081%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="22.6581%" y="405" width="0.1601%" height="15" fill="rgb(214,202,54)" fg:x="283" fg:w="2"/><text x="22.9081%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.7382%" y="389" width="0.0801%" height="15" fill="rgb(254,165,40)" fg:x="284" fg:w="1"/><text x="22.9882%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="22.4179%" y="469" width="0.4804%" height="15" fill="rgb(246,173,38)" fg:x="280" fg:w="6"/><text x="22.6679%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="22.5781%" y="453" width="0.3203%" height="15" fill="rgb(215,3,27)" fg:x="282" fg:w="4"/><text x="22.8281%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8183%" y="437" width="0.0801%" height="15" fill="rgb(239,169,51)" fg:x="285" fg:w="1"/><text x="23.0683%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="22.8183%" y="421" width="0.0801%" height="15" fill="rgb(212,5,25)" fg:x="285" fg:w="1"/><text x="23.0683%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.8183%" y="405" width="0.0801%" height="15" fill="rgb(243,45,17)" fg:x="285" fg:w="1"/><text x="23.0683%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.80%)</title><rect x="22.2578%" y="501" width="0.8006%" height="15" fill="rgb(242,97,9)" fg:x="278" fg:w="10"/><text x="22.5078%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="22.4179%" y="485" width="0.6405%" height="15" fill="rgb(228,71,31)" fg:x="280" fg:w="8"/><text x="22.6679%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.8983%" y="469" width="0.1601%" height="15" fill="rgb(252,184,16)" fg:x="286" fg:w="2"/><text x="23.1483%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="22.8983%" y="453" width="0.1601%" height="15" fill="rgb(236,169,46)" fg:x="286" fg:w="2"/><text x="23.1483%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.9784%" y="437" width="0.0801%" height="15" fill="rgb(207,17,47)" fg:x="287" fg:w="1"/><text x="23.2284%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.9784%" y="421" width="0.0801%" height="15" fill="rgb(206,201,28)" fg:x="287" fg:w="1"/><text x="23.2284%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.0584%" y="501" width="0.0801%" height="15" fill="rgb(224,184,23)" fg:x="288" fg:w="1"/><text x="23.3084%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.0584%" y="485" width="0.0801%" height="15" fill="rgb(208,139,48)" fg:x="288" fg:w="1"/><text x="23.3084%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.0584%" y="469" width="0.0801%" height="15" fill="rgb(208,130,10)" fg:x="288" fg:w="1"/><text x="23.3084%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.1385%" y="437" width="0.0801%" height="15" fill="rgb(211,213,45)" fg:x="289" fg:w="1"/><text x="23.3885%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="23.1385%" y="485" width="0.2402%" height="15" fill="rgb(235,100,30)" fg:x="289" fg:w="3"/><text x="23.3885%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="23.1385%" y="469" width="0.2402%" height="15" fill="rgb(206,144,31)" fg:x="289" fg:w="3"/><text x="23.3885%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="23.1385%" y="453" width="0.2402%" height="15" fill="rgb(224,200,26)" fg:x="289" fg:w="3"/><text x="23.3885%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.2186%" y="437" width="0.1601%" height="15" fill="rgb(247,104,53)" fg:x="290" fg:w="2"/><text x="23.4686%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.2186%" y="421" width="0.1601%" height="15" fill="rgb(220,14,17)" fg:x="290" fg:w="2"/><text x="23.4686%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.2986%" y="405" width="0.0801%" height="15" fill="rgb(230,140,40)" fg:x="291" fg:w="1"/><text x="23.5486%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.2986%" y="389" width="0.0801%" height="15" fill="rgb(229,2,41)" fg:x="291" fg:w="1"/><text x="23.5486%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="23.4588%" y="453" width="0.2402%" height="15" fill="rgb(232,89,16)" fg:x="293" fg:w="3"/><text x="23.7088%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.6189%" y="437" width="0.0801%" height="15" fill="rgb(247,59,52)" fg:x="295" fg:w="1"/><text x="23.8689%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.6990%" y="453" width="0.0801%" height="15" fill="rgb(226,110,21)" fg:x="296" fg:w="1"/><text x="23.9490%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.6990%" y="437" width="0.0801%" height="15" fill="rgb(224,176,43)" fg:x="296" fg:w="1"/><text x="23.9490%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.6990%" y="421" width="0.0801%" height="15" fill="rgb(221,73,6)" fg:x="296" fg:w="1"/><text x="23.9490%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="23.6990%" y="405" width="0.0801%" height="15" fill="rgb(232,78,19)" fg:x="296" fg:w="1"/><text x="23.9490%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="23.7790%" y="453" width="0.1601%" height="15" fill="rgb(233,112,48)" fg:x="297" fg:w="2"/><text x="24.0290%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.8591%" y="437" width="0.0801%" height="15" fill="rgb(243,131,47)" fg:x="298" fg:w="1"/><text x="24.1091%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="23.9392%" y="453" width="0.0801%" height="15" fill="rgb(226,51,1)" fg:x="299" fg:w="1"/><text x="24.1892%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.9392%" y="437" width="0.0801%" height="15" fill="rgb(247,58,7)" fg:x="299" fg:w="1"/><text x="24.1892%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.9392%" y="421" width="0.0801%" height="15" fill="rgb(209,7,32)" fg:x="299" fg:w="1"/><text x="24.1892%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0192%" y="373" width="0.0801%" height="15" fill="rgb(209,39,41)" fg:x="300" fg:w="1"/><text x="24.2692%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.2594%" y="341" width="0.0801%" height="15" fill="rgb(226,182,46)" fg:x="303" fg:w="1"/><text x="24.5094%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (6 samples, 0.48%)</title><rect x="24.0192%" y="453" width="0.4804%" height="15" fill="rgb(230,219,10)" fg:x="300" fg:w="6"/><text x="24.2692%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="24.0192%" y="437" width="0.4804%" height="15" fill="rgb(227,175,30)" fg:x="300" fg:w="6"/><text x="24.2692%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="24.0192%" y="421" width="0.4804%" height="15" fill="rgb(217,2,50)" fg:x="300" fg:w="6"/><text x="24.2692%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (6 samples, 0.48%)</title><rect x="24.0192%" y="405" width="0.4804%" height="15" fill="rgb(229,160,0)" fg:x="300" fg:w="6"/><text x="24.2692%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="24.0192%" y="389" width="0.4804%" height="15" fill="rgb(207,78,37)" fg:x="300" fg:w="6"/><text x="24.2692%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (5 samples, 0.40%)</title><rect x="24.0993%" y="373" width="0.4003%" height="15" fill="rgb(225,57,0)" fg:x="301" fg:w="5"/><text x="24.3493%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="24.1793%" y="357" width="0.3203%" height="15" fill="rgb(232,154,2)" fg:x="302" fg:w="4"/><text x="24.4293%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="24.3395%" y="341" width="0.1601%" height="15" fill="rgb(241,212,25)" fg:x="304" fg:w="2"/><text x="24.5895%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="24.4996%" y="421" width="0.0801%" height="15" fill="rgb(226,69,20)" fg:x="306" fg:w="1"/><text x="24.7496%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.5797%" y="405" width="0.0801%" height="15" fill="rgb(247,184,54)" fg:x="307" fg:w="1"/><text x="24.8297%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.5797%" y="389" width="0.0801%" height="15" fill="rgb(210,145,0)" fg:x="307" fg:w="1"/><text x="24.8297%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5797%" y="373" width="0.0801%" height="15" fill="rgb(253,82,12)" fg:x="307" fg:w="1"/><text x="24.8297%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="24.6597%" y="389" width="0.0801%" height="15" fill="rgb(245,42,11)" fg:x="308" fg:w="1"/><text x="24.9097%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (18 samples, 1.44%)</title><rect x="23.3787%" y="485" width="1.4412%" height="15" fill="rgb(219,147,32)" fg:x="292" fg:w="18"/><text x="23.6287%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.44%)</title><rect x="23.3787%" y="469" width="1.4412%" height="15" fill="rgb(246,12,7)" fg:x="292" fg:w="18"/><text x="23.6287%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="24.4996%" y="453" width="0.3203%" height="15" fill="rgb(243,50,9)" fg:x="306" fg:w="4"/><text x="24.7496%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (4 samples, 0.32%)</title><rect x="24.4996%" y="437" width="0.3203%" height="15" fill="rgb(219,149,6)" fg:x="306" fg:w="4"/><text x="24.7496%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="24.5797%" y="421" width="0.2402%" height="15" fill="rgb(241,51,42)" fg:x="307" fg:w="3"/><text x="24.8297%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="24.6597%" y="405" width="0.1601%" height="15" fill="rgb(226,128,27)" fg:x="308" fg:w="2"/><text x="24.9097%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="24.7398%" y="389" width="0.0801%" height="15" fill="rgb(244,144,4)" fg:x="309" fg:w="1"/><text x="24.9898%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="24.8199%" y="341" width="0.0801%" height="15" fill="rgb(221,4,13)" fg:x="310" fg:w="1"/><text x="25.0699%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="24.8199%" y="325" width="0.0801%" height="15" fill="rgb(208,170,28)" fg:x="310" fg:w="1"/><text x="25.0699%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="24.8199%" y="309" width="0.0801%" height="15" fill="rgb(226,131,13)" fg:x="310" fg:w="1"/><text x="25.0699%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="24.8999%" y="325" width="0.0801%" height="15" fill="rgb(215,72,41)" fg:x="311" fg:w="1"/><text x="25.1499%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="24.8999%" y="309" width="0.0801%" height="15" fill="rgb(243,108,20)" fg:x="311" fg:w="1"/><text x="25.1499%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="24.9800%" y="325" width="0.1601%" height="15" fill="rgb(230,189,17)" fg:x="312" fg:w="2"/><text x="25.2300%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="24.8199%" y="357" width="0.4003%" height="15" fill="rgb(220,50,17)" fg:x="310" fg:w="5"/><text x="25.0699%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="24.8999%" y="341" width="0.3203%" height="15" fill="rgb(248,152,48)" fg:x="311" fg:w="4"/><text x="25.1499%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.1401%" y="325" width="0.0801%" height="15" fill="rgb(244,91,11)" fg:x="314" fg:w="1"/><text x="25.3901%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.1401%" y="309" width="0.0801%" height="15" fill="rgb(220,157,5)" fg:x="314" fg:w="1"/><text x="25.3901%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1401%" y="293" width="0.0801%" height="15" fill="rgb(253,137,8)" fg:x="314" fg:w="1"/><text x="25.3901%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="24.8199%" y="389" width="0.6405%" height="15" fill="rgb(217,137,51)" fg:x="310" fg:w="8"/><text x="25.0699%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="24.8199%" y="373" width="0.6405%" height="15" fill="rgb(218,209,53)" fg:x="310" fg:w="8"/><text x="25.0699%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="25.2202%" y="357" width="0.2402%" height="15" fill="rgb(249,137,25)" fg:x="315" fg:w="3"/><text x="25.4702%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.3002%" y="341" width="0.1601%" height="15" fill="rgb(239,155,26)" fg:x="316" fg:w="2"/><text x="25.5502%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.3002%" y="325" width="0.1601%" height="15" fill="rgb(227,85,46)" fg:x="316" fg:w="2"/><text x="25.5502%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="24.8199%" y="421" width="0.8006%" height="15" fill="rgb(251,107,43)" fg:x="310" fg:w="10"/><text x="25.0699%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="24.8199%" y="405" width="0.8006%" height="15" fill="rgb(234,170,33)" fg:x="310" fg:w="10"/><text x="25.0699%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.4604%" y="389" width="0.1601%" height="15" fill="rgb(206,29,35)" fg:x="318" fg:w="2"/><text x="25.7104%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.4604%" y="373" width="0.1601%" height="15" fill="rgb(227,138,25)" fg:x="318" fg:w="2"/><text x="25.7104%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.4604%" y="357" width="0.1601%" height="15" fill="rgb(249,131,35)" fg:x="318" fg:w="2"/><text x="25.7104%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.88%)</title><rect x="24.8199%" y="485" width="0.8807%" height="15" fill="rgb(239,6,40)" fg:x="310" fg:w="11"/><text x="25.0699%" y="495.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="24.8199%" y="469" width="0.8807%" height="15" fill="rgb(246,136,47)" fg:x="310" fg:w="11"/><text x="25.0699%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="24.8199%" y="453" width="0.8807%" height="15" fill="rgb(253,58,26)" fg:x="310" fg:w="11"/><text x="25.0699%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="24.8199%" y="437" width="0.8807%" height="15" fill="rgb(237,141,10)" fg:x="310" fg:w="11"/><text x="25.0699%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="25.6205%" y="421" width="0.0801%" height="15" fill="rgb(234,156,12)" fg:x="320" fg:w="1"/><text x="25.8705%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="25.6205%" y="405" width="0.0801%" height="15" fill="rgb(243,224,36)" fg:x="320" fg:w="1"/><text x="25.8705%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="25.7006%" y="453" width="0.0801%" height="15" fill="rgb(205,229,51)" fg:x="321" fg:w="1"/><text x="25.9506%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="25.7006%" y="437" width="0.0801%" height="15" fill="rgb(223,189,4)" fg:x="321" fg:w="1"/><text x="25.9506%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="25.7006%" y="421" width="0.0801%" height="15" fill="rgb(249,167,54)" fg:x="321" fg:w="1"/><text x="25.9506%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="25.7006%" y="405" width="0.0801%" height="15" fill="rgb(218,34,28)" fg:x="321" fg:w="1"/><text x="25.9506%" y="415.50"></text></g><g><title>engine::session::Session::close (87 samples, 6.97%)</title><rect x="18.8951%" y="565" width="6.9656%" height="15" fill="rgb(232,109,42)" fg:x="236" fg:w="87"/><text x="19.1451%" y="575.50">engine::s..</text></g><g><title>engine::session::Session::save_entity_changes (86 samples, 6.89%)</title><rect x="18.9752%" y="549" width="6.8855%" height="15" fill="rgb(248,214,46)" fg:x="237" fg:w="86"/><text x="19.2252%" y="559.50">engine::s..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (45 samples, 3.60%)</title><rect x="22.2578%" y="533" width="3.6029%" height="15" fill="rgb(244,216,40)" fg:x="278" fg:w="45"/><text x="22.5078%" y="543.50">engi..</text></g><g><title>engine::session::Session::check_for_changes (45 samples, 3.60%)</title><rect x="22.2578%" y="517" width="3.6029%" height="15" fill="rgb(231,226,31)" fg:x="278" fg:w="45"/><text x="22.5078%" y="527.50">engi..</text></g><g><title>kernel::compare::any_entity_changes (34 samples, 2.72%)</title><rect x="23.1385%" y="501" width="2.7222%" height="15" fill="rgb(238,38,43)" fg:x="289" fg:w="34"/><text x="23.3885%" y="511.50">ke..</text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="25.7006%" y="485" width="0.1601%" height="15" fill="rgb(208,88,43)" fg:x="321" fg:w="2"/><text x="25.9506%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="25.7006%" y="469" width="0.1601%" height="15" fill="rgb(205,136,37)" fg:x="321" fg:w="2"/><text x="25.9506%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.7806%" y="453" width="0.0801%" height="15" fill="rgb(237,34,14)" fg:x="322" fg:w="1"/><text x="26.0306%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="26.1009%" y="485" width="0.0801%" height="15" fill="rgb(236,193,44)" fg:x="326" fg:w="1"/><text x="26.3509%" y="495.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="26.1009%" y="469" width="0.0801%" height="15" fill="rgb(231,48,10)" fg:x="326" fg:w="1"/><text x="26.3509%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="26.1809%" y="485" width="0.0801%" height="15" fill="rgb(213,141,34)" fg:x="327" fg:w="1"/><text x="26.4309%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="26.1809%" y="469" width="0.0801%" height="15" fill="rgb(249,130,34)" fg:x="327" fg:w="1"/><text x="26.4309%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="26.1809%" y="453" width="0.0801%" height="15" fill="rgb(219,42,41)" fg:x="327" fg:w="1"/><text x="26.4309%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="26.1809%" y="437" width="0.0801%" height="15" fill="rgb(224,100,54)" fg:x="327" fg:w="1"/><text x="26.4309%" y="447.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="26.1809%" y="421" width="0.0801%" height="15" fill="rgb(229,200,27)" fg:x="327" fg:w="1"/><text x="26.4309%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.1809%" y="405" width="0.0801%" height="15" fill="rgb(217,118,10)" fg:x="327" fg:w="1"/><text x="26.4309%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.1809%" y="389" width="0.0801%" height="15" fill="rgb(206,22,3)" fg:x="327" fg:w="1"/><text x="26.4309%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.1809%" y="373" width="0.0801%" height="15" fill="rgb(232,163,46)" fg:x="327" fg:w="1"/><text x="26.4309%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.1809%" y="357" width="0.0801%" height="15" fill="rgb(206,95,13)" fg:x="327" fg:w="1"/><text x="26.4309%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="26.1809%" y="341" width="0.0801%" height="15" fill="rgb(253,154,18)" fg:x="327" fg:w="1"/><text x="26.4309%" y="351.50"></text></g><g><title>&lt;u64 as core::fmt::num::DisplayInt&gt;::to_u64 (1 samples, 0.08%)</title><rect x="26.1809%" y="325" width="0.0801%" height="15" fill="rgb(219,32,23)" fg:x="327" fg:w="1"/><text x="26.4309%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2610%" y="437" width="0.0801%" height="15" fill="rgb(230,191,45)" fg:x="328" fg:w="1"/><text x="26.5110%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.3411%" y="421" width="0.0801%" height="15" fill="rgb(229,64,36)" fg:x="329" fg:w="1"/><text x="26.5911%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="26.4211%" y="405" width="0.1601%" height="15" fill="rgb(205,129,25)" fg:x="330" fg:w="2"/><text x="26.6711%" y="415.50"></text></g><g><title>&lt;regex_automata::meta::regex::Split as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="26.4211%" y="389" width="0.1601%" height="15" fill="rgb(254,112,7)" fg:x="330" fg:w="2"/><text x="26.6711%" y="399.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search (2 samples, 0.16%)</title><rect x="26.4211%" y="373" width="0.1601%" height="15" fill="rgb(226,53,48)" fg:x="330" fg:w="2"/><text x="26.6711%" y="383.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::try_search (1 samples, 0.08%)</title><rect x="26.5012%" y="357" width="0.0801%" height="15" fill="rgb(214,153,38)" fg:x="331" fg:w="1"/><text x="26.7512%" y="367.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd (1 samples, 0.08%)</title><rect x="26.5012%" y="341" width="0.0801%" height="15" fill="rgb(243,101,7)" fg:x="331" fg:w="1"/><text x="26.7512%" y="351.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::cache_start_group (1 samples, 0.08%)</title><rect x="26.5012%" y="325" width="0.0801%" height="15" fill="rgb(240,140,22)" fg:x="331" fg:w="1"/><text x="26.7512%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.08%)</title><rect x="26.5012%" y="309" width="0.0801%" height="15" fill="rgb(235,114,2)" fg:x="331" fg:w="1"/><text x="26.7512%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.7414%" y="357" width="0.0801%" height="15" fill="rgb(242,59,12)" fg:x="334" fg:w="1"/><text x="26.9914%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="26.8215%" y="357" width="0.0801%" height="15" fill="rgb(252,134,9)" fg:x="335" fg:w="1"/><text x="27.0715%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.8215%" y="341" width="0.0801%" height="15" fill="rgb(236,4,44)" fg:x="335" fg:w="1"/><text x="27.0715%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Class&gt; (1 samples, 0.08%)</title><rect x="26.9015%" y="357" width="0.0801%" height="15" fill="rgb(254,172,41)" fg:x="336" fg:w="1"/><text x="27.1515%" y="367.50"></text></g><g><title>&lt;regex_syntax::ast::ClassSet as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="26.9015%" y="341" width="0.0801%" height="15" fill="rgb(244,63,20)" fg:x="336" fg:w="1"/><text x="27.1515%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (1 samples, 0.08%)</title><rect x="26.9015%" y="325" width="0.0801%" height="15" fill="rgb(250,73,31)" fg:x="336" fg:w="1"/><text x="27.1515%" y="335.50"></text></g><g><title>&lt;regex_syntax::ast::ClassSet as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="26.9015%" y="309" width="0.0801%" height="15" fill="rgb(241,38,36)" fg:x="336" fg:w="1"/><text x="27.1515%" y="319.50"></text></g><g><title>regex_automata::meta::regex::RegexInfo::new (1 samples, 0.08%)</title><rect x="26.9816%" y="357" width="0.0801%" height="15" fill="rgb(245,211,2)" fg:x="337" fg:w="1"/><text x="27.2316%" y="367.50"></text></g><g><title>regex_syntax::hir::Properties::union (1 samples, 0.08%)</title><rect x="26.9816%" y="341" width="0.0801%" height="15" fill="rgb(206,120,28)" fg:x="337" fg:w="1"/><text x="27.2316%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.2218%" y="325" width="0.0801%" height="15" fill="rgb(211,59,34)" fg:x="340" fg:w="1"/><text x="27.4718%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (24 samples, 1.92%)</title><rect x="27.2218%" y="341" width="1.9215%" height="15" fill="rgb(233,168,5)" fg:x="340" fg:w="24"/><text x="27.4718%" y="351.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (23 samples, 1.84%)</title><rect x="27.3018%" y="325" width="1.8415%" height="15" fill="rgb(234,33,13)" fg:x="341" fg:w="23"/><text x="27.5518%" y="335.50">c..</text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="28.8231%" y="309" width="0.3203%" height="15" fill="rgb(231,150,26)" fg:x="360" fg:w="4"/><text x="29.0731%" y="319.50"></text></g><g><title>regex_automata::meta::reverse_inner::extract (1 samples, 0.08%)</title><rect x="29.1433%" y="341" width="0.0801%" height="15" fill="rgb(217,191,4)" fg:x="364" fg:w="1"/><text x="29.3933%" y="351.50"></text></g><g><title>regex_automata::meta::wrappers::BoundedBacktracker::new (1 samples, 0.08%)</title><rect x="29.2234%" y="341" width="0.0801%" height="15" fill="rgb(246,198,38)" fg:x="365" fg:w="1"/><text x="29.4734%" y="351.50"></text></g><g><title>regex_automata::meta::wrappers::Hybrid::new (7 samples, 0.56%)</title><rect x="29.3034%" y="341" width="0.5604%" height="15" fill="rgb(245,64,37)" fg:x="366" fg:w="7"/><text x="29.5534%" y="351.50"></text></g><g><title>regex_automata::hybrid::dfa::Builder::build_from_nfa (5 samples, 0.40%)</title><rect x="29.4636%" y="325" width="0.4003%" height="15" fill="rgb(250,30,36)" fg:x="368" fg:w="5"/><text x="29.7136%" y="335.50"></text></g><g><title>&lt;regex_syntax::hir::ClassUnicodeIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="30.4243%" y="277" width="0.0801%" height="15" fill="rgb(217,86,53)" fg:x="380" fg:w="1"/><text x="30.6743%" y="287.50"></text></g><g><title>&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="30.5044%" y="277" width="0.2402%" height="15" fill="rgb(228,157,16)" fg:x="381" fg:w="3"/><text x="30.7544%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.7446%" y="277" width="0.0801%" height="15" fill="rgb(217,59,31)" fg:x="384" fg:w="1"/><text x="30.9946%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (4 samples, 0.32%)</title><rect x="30.8247%" y="277" width="0.3203%" height="15" fill="rgb(237,138,41)" fg:x="385" fg:w="4"/><text x="31.0747%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="30.9848%" y="261" width="0.1601%" height="15" fill="rgb(227,91,49)" fg:x="387" fg:w="2"/><text x="31.2348%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="30.9848%" y="245" width="0.1601%" height="15" fill="rgb(247,21,44)" fg:x="387" fg:w="2"/><text x="31.2348%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.0649%" y="229" width="0.0801%" height="15" fill="rgb(219,210,51)" fg:x="388" fg:w="1"/><text x="31.3149%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="31.2250%" y="245" width="0.0801%" height="15" fill="rgb(209,140,6)" fg:x="390" fg:w="1"/><text x="31.4750%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.2250%" y="229" width="0.0801%" height="15" fill="rgb(221,188,24)" fg:x="390" fg:w="1"/><text x="31.4750%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2250%" y="213" width="0.0801%" height="15" fill="rgb(232,154,20)" fg:x="390" fg:w="1"/><text x="31.4750%" y="223.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::add (5 samples, 0.40%)</title><rect x="31.1449%" y="277" width="0.4003%" height="15" fill="rgb(244,137,50)" fg:x="389" fg:w="5"/><text x="31.3949%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (5 samples, 0.40%)</title><rect x="31.1449%" y="261" width="0.4003%" height="15" fill="rgb(225,185,43)" fg:x="389" fg:w="5"/><text x="31.3949%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile (3 samples, 0.24%)</title><rect x="31.3050%" y="245" width="0.2402%" height="15" fill="rgb(213,205,38)" fg:x="391" fg:w="3"/><text x="31.5550%" y="255.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (3 samples, 0.24%)</title><rect x="31.3050%" y="229" width="0.2402%" height="15" fill="rgb(236,73,12)" fg:x="391" fg:w="3"/><text x="31.5550%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="31.3851%" y="213" width="0.1601%" height="15" fill="rgb(235,219,13)" fg:x="392" fg:w="2"/><text x="31.6351%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.4652%" y="197" width="0.0801%" height="15" fill="rgb(218,59,36)" fg:x="393" fg:w="1"/><text x="31.7152%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.4652%" y="181" width="0.0801%" height="15" fill="rgb(205,110,39)" fg:x="393" fg:w="1"/><text x="31.7152%" y="191.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.08%)</title><rect x="31.5452%" y="261" width="0.0801%" height="15" fill="rgb(218,206,42)" fg:x="394" fg:w="1"/><text x="31.7952%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="31.5452%" y="245" width="0.0801%" height="15" fill="rgb(248,125,24)" fg:x="394" fg:w="1"/><text x="31.7952%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.5452%" y="229" width="0.0801%" height="15" fill="rgb(242,28,27)" fg:x="394" fg:w="1"/><text x="31.7952%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.5452%" y="213" width="0.0801%" height="15" fill="rgb(216,228,15)" fg:x="394" fg:w="1"/><text x="31.7952%" y="223.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (75 samples, 6.00%)</title><rect x="31.5452%" y="277" width="6.0048%" height="15" fill="rgb(235,116,46)" fg:x="394" fg:w="75"/><text x="31.7952%" y="287.50">regex_au..</text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (74 samples, 5.92%)</title><rect x="31.6253%" y="261" width="5.9247%" height="15" fill="rgb(224,18,32)" fg:x="395" fg:w="74"/><text x="31.8753%" y="271.50">regex_au..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (74 samples, 5.92%)</title><rect x="31.6253%" y="245" width="5.9247%" height="15" fill="rgb(252,5,12)" fg:x="395" fg:w="74"/><text x="31.8753%" y="255.50">alloc::v..</text></g><g><title>regex_automata::nfa::thompson::map::Utf8SuffixMap::clear (4 samples, 0.32%)</title><rect x="37.5500%" y="277" width="0.3203%" height="15" fill="rgb(251,36,5)" fg:x="469" fg:w="4"/><text x="37.8000%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (101 samples, 8.09%)</title><rect x="29.9440%" y="325" width="8.0865%" height="15" fill="rgb(217,53,14)" fg:x="374" fg:w="101"/><text x="30.1940%" y="335.50">&lt;core::iter..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (101 samples, 8.09%)</title><rect x="29.9440%" y="309" width="8.0865%" height="15" fill="rgb(215,86,45)" fg:x="374" fg:w="101"/><text x="30.1940%" y="319.50">regex_autom..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (101 samples, 8.09%)</title><rect x="29.9440%" y="293" width="8.0865%" height="15" fill="rgb(242,169,11)" fg:x="374" fg:w="101"/><text x="30.1940%" y="303.50">regex_autom..</text></g><g><title>regex_syntax::utf8::Utf8Sequences::new (2 samples, 0.16%)</title><rect x="37.8703%" y="277" width="0.1601%" height="15" fill="rgb(211,213,45)" fg:x="473" fg:w="2"/><text x="38.1203%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="37.8703%" y="261" width="0.1601%" height="15" fill="rgb(205,88,11)" fg:x="473" fg:w="2"/><text x="38.1203%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.9504%" y="245" width="0.0801%" height="15" fill="rgb(252,69,26)" fg:x="474" fg:w="1"/><text x="38.2004%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9504%" y="229" width="0.0801%" height="15" fill="rgb(246,123,37)" fg:x="474" fg:w="1"/><text x="38.2004%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="38.1906%" y="309" width="0.0801%" height="15" fill="rgb(212,205,5)" fg:x="477" fg:w="1"/><text x="38.4406%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="38.1906%" y="293" width="0.0801%" height="15" fill="rgb(253,148,0)" fg:x="477" fg:w="1"/><text x="38.4406%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.1906%" y="277" width="0.0801%" height="15" fill="rgb(239,22,4)" fg:x="477" fg:w="1"/><text x="38.4406%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (5 samples, 0.40%)</title><rect x="38.2706%" y="309" width="0.4003%" height="15" fill="rgb(226,26,53)" fg:x="478" fg:w="5"/><text x="38.5206%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.24%)</title><rect x="38.4307%" y="293" width="0.2402%" height="15" fill="rgb(225,229,45)" fg:x="480" fg:w="3"/><text x="38.6807%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="38.4307%" y="277" width="0.2402%" height="15" fill="rgb(220,60,37)" fg:x="480" fg:w="3"/><text x="38.6807%" y="287.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="38.4307%" y="261" width="0.2402%" height="15" fill="rgb(217,180,35)" fg:x="480" fg:w="3"/><text x="38.6807%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (12 samples, 0.96%)</title><rect x="38.0304%" y="325" width="0.9608%" height="15" fill="rgb(229,7,53)" fg:x="475" fg:w="12"/><text x="38.2804%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::into_nfa (4 samples, 0.32%)</title><rect x="38.6709%" y="309" width="0.3203%" height="15" fill="rgb(254,137,3)" fg:x="483" fg:w="4"/><text x="38.9209%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.08%)</title><rect x="38.9912%" y="325" width="0.0801%" height="15" fill="rgb(215,140,41)" fg:x="487" fg:w="1"/><text x="39.2412%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::patch (1 samples, 0.08%)</title><rect x="38.9912%" y="309" width="0.0801%" height="15" fill="rgb(250,80,15)" fg:x="487" fg:w="1"/><text x="39.2412%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="38.9912%" y="293" width="0.0801%" height="15" fill="rgb(252,191,6)" fg:x="487" fg:w="1"/><text x="39.2412%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="38.9912%" y="277" width="0.0801%" height="15" fill="rgb(246,217,18)" fg:x="487" fg:w="1"/><text x="39.2412%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.9912%" y="261" width="0.0801%" height="15" fill="rgb(223,93,7)" fg:x="487" fg:w="1"/><text x="39.2412%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (116 samples, 9.29%)</title><rect x="29.8639%" y="341" width="9.2874%" height="15" fill="rgb(225,55,52)" fg:x="373" fg:w="116"/><text x="30.1139%" y="351.50">regex_automat..</text></g><g><title>regex_syntax::hir::Hir::dot (1 samples, 0.08%)</title><rect x="39.0713%" y="325" width="0.0801%" height="15" fill="rgb(240,31,24)" fg:x="488" fg:w="1"/><text x="39.3213%" y="335.50"></text></g><g><title>regex_syntax::hir::Properties::class (1 samples, 0.08%)</title><rect x="39.0713%" y="309" width="0.0801%" height="15" fill="rgb(205,56,52)" fg:x="488" fg:w="1"/><text x="39.3213%" y="319.50"></text></g><g><title>regex_automata::meta::strategy::new (152 samples, 12.17%)</title><rect x="27.0616%" y="357" width="12.1697%" height="15" fill="rgb(246,146,12)" fg:x="338" fg:w="152"/><text x="27.3116%" y="367.50">regex_automata::me..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::new (1 samples, 0.08%)</title><rect x="39.1513%" y="341" width="0.0801%" height="15" fill="rgb(239,84,36)" fg:x="489" fg:w="1"/><text x="39.4013%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::range_trie::RangeTrie::new (1 samples, 0.08%)</title><rect x="39.1513%" y="325" width="0.0801%" height="15" fill="rgb(207,41,40)" fg:x="489" fg:w="1"/><text x="39.4013%" y="335.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char_at (1 samples, 0.08%)</title><rect x="39.3114%" y="309" width="0.0801%" height="15" fill="rgb(241,179,25)" fg:x="491" fg:w="1"/><text x="39.5614%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_range (1 samples, 0.08%)</title><rect x="39.3915%" y="309" width="0.0801%" height="15" fill="rgb(210,0,34)" fg:x="492" fg:w="1"/><text x="39.6415%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::peek (1 samples, 0.08%)</title><rect x="39.3915%" y="293" width="0.0801%" height="15" fill="rgb(225,217,29)" fg:x="492" fg:w="1"/><text x="39.6415%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (1 samples, 0.08%)</title><rect x="39.4716%" y="293" width="0.0801%" height="15" fill="rgb(216,191,38)" fg:x="493" fg:w="1"/><text x="39.7216%" y="303.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (5 samples, 0.40%)</title><rect x="39.2314%" y="357" width="0.4003%" height="15" fill="rgb(232,140,52)" fg:x="490" fg:w="5"/><text x="39.4814%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (5 samples, 0.40%)</title><rect x="39.2314%" y="341" width="0.4003%" height="15" fill="rgb(223,158,51)" fg:x="490" fg:w="5"/><text x="39.4814%" y="351.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (5 samples, 0.40%)</title><rect x="39.2314%" y="325" width="0.4003%" height="15" fill="rgb(235,29,51)" fg:x="490" fg:w="5"/><text x="39.4814%" y="335.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_class (2 samples, 0.16%)</title><rect x="39.4716%" y="309" width="0.1601%" height="15" fill="rgb(215,181,18)" fg:x="493" fg:w="2"/><text x="39.7216%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_class_op (1 samples, 0.08%)</title><rect x="39.5516%" y="293" width="0.0801%" height="15" fill="rgb(227,125,34)" fg:x="494" fg:w="1"/><text x="39.8016%" y="303.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (2 samples, 0.16%)</title><rect x="39.6317%" y="309" width="0.1601%" height="15" fill="rgb(230,197,49)" fg:x="495" fg:w="2"/><text x="39.8817%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="39.7118%" y="293" width="0.0801%" height="15" fill="rgb(239,141,16)" fg:x="496" fg:w="1"/><text x="39.9618%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.7118%" y="277" width="0.0801%" height="15" fill="rgb(225,105,43)" fg:x="496" fg:w="1"/><text x="39.9618%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.7118%" y="261" width="0.0801%" height="15" fill="rgb(214,131,14)" fg:x="496" fg:w="1"/><text x="39.9618%" y="271.50"></text></g><g><title>&lt;regex::regex::string::Regex as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (166 samples, 13.29%)</title><rect x="26.5813%" y="405" width="13.2906%" height="15" fill="rgb(229,177,11)" fg:x="332" fg:w="166"/><text x="26.8313%" y="415.50">&lt;regex::regex::strin..</text></g><g><title>regex::builders::Builder::build_one_string (166 samples, 13.29%)</title><rect x="26.5813%" y="389" width="13.2906%" height="15" fill="rgb(231,180,14)" fg:x="332" fg:w="166"/><text x="26.8313%" y="399.50">regex::builders::Bui..</text></g><g><title>regex_automata::meta::regex::Builder::build (164 samples, 13.13%)</title><rect x="26.7414%" y="373" width="13.1305%" height="15" fill="rgb(232,88,2)" fg:x="334" fg:w="164"/><text x="26.9914%" y="383.50">regex_automata::meta..</text></g><g><title>regex_syntax::hir::translate::Translator::translate (3 samples, 0.24%)</title><rect x="39.6317%" y="357" width="0.2402%" height="15" fill="rgb(205,220,8)" fg:x="495" fg:w="3"/><text x="39.8817%" y="367.50"></text></g><g><title>regex_syntax::ast::visitor::visit (3 samples, 0.24%)</title><rect x="39.6317%" y="341" width="0.2402%" height="15" fill="rgb(225,23,53)" fg:x="495" fg:w="3"/><text x="39.8817%" y="351.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (3 samples, 0.24%)</title><rect x="39.6317%" y="325" width="0.2402%" height="15" fill="rgb(213,62,29)" fg:x="495" fg:w="3"/><text x="39.8817%" y="335.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::hir_perl_unicode_class (1 samples, 0.08%)</title><rect x="39.7918%" y="309" width="0.0801%" height="15" fill="rgb(227,75,7)" fg:x="497" fg:w="1"/><text x="40.0418%" y="319.50"></text></g><g><title>regex_syntax::unicode::perl_space (1 samples, 0.08%)</title><rect x="39.7918%" y="293" width="0.0801%" height="15" fill="rgb(207,105,14)" fg:x="497" fg:w="1"/><text x="40.0418%" y="303.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (1 samples, 0.08%)</title><rect x="39.7918%" y="277" width="0.0801%" height="15" fill="rgb(245,62,29)" fg:x="497" fg:w="1"/><text x="40.0418%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="39.8719%" y="373" width="0.0801%" height="15" fill="rgb(236,202,4)" fg:x="498" fg:w="1"/><text x="40.1219%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::meta::strategy::Core&gt; (1 samples, 0.08%)</title><rect x="39.8719%" y="357" width="0.0801%" height="15" fill="rgb(250,67,1)" fg:x="498" fg:w="1"/><text x="40.1219%" y="367.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="39.8719%" y="341" width="0.0801%" height="15" fill="rgb(253,115,44)" fg:x="498" fg:w="1"/><text x="40.1219%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::hybrid::dfa::Cache&gt; (1 samples, 0.08%)</title><rect x="39.9520%" y="357" width="0.0801%" height="15" fill="rgb(251,139,18)" fg:x="499" fg:w="1"/><text x="40.2020%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.9520%" y="341" width="0.0801%" height="15" fill="rgb(218,22,32)" fg:x="499" fg:w="1"/><text x="40.2020%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::regex::string::Regex&gt; (4 samples, 0.32%)</title><rect x="39.8719%" y="405" width="0.3203%" height="15" fill="rgb(243,53,5)" fg:x="498" fg:w="4"/><text x="40.1219%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::pool::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::marker::Send+core::panic::unwind_safe::RefUnwindSafe+core::panic::unwind_safe::UnwindSafe+core::marker::Sync&gt;&gt;&gt; (4 samples, 0.32%)</title><rect x="39.8719%" y="389" width="0.3203%" height="15" fill="rgb(227,56,16)" fg:x="498" fg:w="4"/><text x="40.1219%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::meta::regex::Cache&gt; (3 samples, 0.24%)</title><rect x="39.9520%" y="373" width="0.2402%" height="15" fill="rgb(245,53,0)" fg:x="499" fg:w="3"/><text x="40.2020%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::meta::wrappers::PikeVMCache&gt; (2 samples, 0.16%)</title><rect x="40.0320%" y="357" width="0.1601%" height="15" fill="rgb(216,170,35)" fg:x="500" fg:w="2"/><text x="40.2820%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.0320%" y="341" width="0.1601%" height="15" fill="rgb(211,200,8)" fg:x="500" fg:w="2"/><text x="40.2820%" y="351.50"></text></g><g><title>regex_automata::util::iter::Searcher::new (1 samples, 0.08%)</title><rect x="40.1922%" y="405" width="0.0801%" height="15" fill="rgb(228,204,44)" fg:x="502" fg:w="1"/><text x="40.4422%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="40.7526%" y="325" width="0.1601%" height="15" fill="rgb(214,121,17)" fg:x="509" fg:w="2"/><text x="41.0026%" y="335.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::init_cache (11 samples, 0.88%)</title><rect x="40.2722%" y="341" width="0.8807%" height="15" fill="rgb(233,64,38)" fg:x="503" fg:w="11"/><text x="40.5222%" y="351.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::set_transition (3 samples, 0.24%)</title><rect x="40.9127%" y="325" width="0.2402%" height="15" fill="rgb(253,54,19)" fg:x="511" fg:w="3"/><text x="41.1627%" y="335.50"></text></g><g><title>indefinite::helper::Helper::get_first_word (185 samples, 14.81%)</title><rect x="26.4211%" y="421" width="14.8118%" height="15" fill="rgb(253,94,18)" fg:x="330" fg:w="185"/><text x="26.6711%" y="431.50">indefinite::helper::Hel..</text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get_slow (12 samples, 0.96%)</title><rect x="40.2722%" y="405" width="0.9608%" height="15" fill="rgb(227,57,52)" fg:x="503" fg:w="12"/><text x="40.5222%" y="415.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir::{{closure}} (12 samples, 0.96%)</title><rect x="40.2722%" y="389" width="0.9608%" height="15" fill="rgb(230,228,50)" fg:x="503" fg:w="12"/><text x="40.5222%" y="399.50"></text></g><g><title>&lt;regex_automata::meta::strategy::ReverseAnchored as regex_automata::meta::strategy::Strategy&gt;::create_cache (12 samples, 0.96%)</title><rect x="40.2722%" y="373" width="0.9608%" height="15" fill="rgb(217,205,27)" fg:x="503" fg:w="12"/><text x="40.5222%" y="383.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::new (12 samples, 0.96%)</title><rect x="40.2722%" y="357" width="0.9608%" height="15" fill="rgb(252,71,50)" fg:x="503" fg:w="12"/><text x="40.5222%" y="367.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSets::new (1 samples, 0.08%)</title><rect x="41.1529%" y="341" width="0.0801%" height="15" fill="rgb(209,86,4)" fg:x="514" fg:w="1"/><text x="41.4029%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.1529%" y="325" width="0.0801%" height="15" fill="rgb(229,94,0)" fg:x="514" fg:w="1"/><text x="41.4029%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.1529%" y="309" width="0.0801%" height="15" fill="rgb(252,223,21)" fg:x="514" fg:w="1"/><text x="41.4029%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.1529%" y="293" width="0.0801%" height="15" fill="rgb(230,210,4)" fg:x="514" fg:w="1"/><text x="41.4029%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.2330%" y="389" width="0.0801%" height="15" fill="rgb(240,149,38)" fg:x="515" fg:w="1"/><text x="41.4830%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="41.2330%" y="373" width="0.0801%" height="15" fill="rgb(254,105,20)" fg:x="515" fg:w="1"/><text x="41.4830%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.3931%" y="325" width="0.0801%" height="15" fill="rgb(253,87,46)" fg:x="517" fg:w="1"/><text x="41.6431%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="41.3931%" y="357" width="0.1601%" height="15" fill="rgb(253,116,33)" fg:x="517" fg:w="2"/><text x="41.6431%" y="367.50"></text></g><g><title>&lt;regex_syntax::hir::Hir as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="41.3931%" y="341" width="0.1601%" height="15" fill="rgb(229,198,5)" fg:x="517" fg:w="2"/><text x="41.6431%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::hir::Hir&gt;&gt; (1 samples, 0.08%)</title><rect x="41.4732%" y="325" width="0.0801%" height="15" fill="rgb(242,38,37)" fg:x="518" fg:w="1"/><text x="41.7232%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4732%" y="309" width="0.0801%" height="15" fill="rgb(242,69,53)" fg:x="518" fg:w="1"/><text x="41.7232%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.5532%" y="325" width="0.0801%" height="15" fill="rgb(249,80,16)" fg:x="519" fg:w="1"/><text x="41.8032%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.5532%" y="309" width="0.0801%" height="15" fill="rgb(206,128,11)" fg:x="519" fg:w="1"/><text x="41.8032%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.5532%" y="293" width="0.0801%" height="15" fill="rgb(212,35,20)" fg:x="519" fg:w="1"/><text x="41.8032%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="41.5532%" y="277" width="0.0801%" height="15" fill="rgb(236,79,13)" fg:x="519" fg:w="1"/><text x="41.8032%" y="287.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.6333%" y="309" width="0.0801%" height="15" fill="rgb(233,123,3)" fg:x="520" fg:w="1"/><text x="41.8833%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (3 samples, 0.24%)</title><rect x="41.5532%" y="357" width="0.2402%" height="15" fill="rgb(214,93,52)" fg:x="519" fg:w="3"/><text x="41.8032%" y="367.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="41.5532%" y="341" width="0.2402%" height="15" fill="rgb(251,37,40)" fg:x="519" fg:w="3"/><text x="41.8032%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (2 samples, 0.16%)</title><rect x="41.6333%" y="325" width="0.1601%" height="15" fill="rgb(227,80,54)" fg:x="520" fg:w="2"/><text x="41.8833%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (1 samples, 0.08%)</title><rect x="41.7134%" y="309" width="0.0801%" height="15" fill="rgb(254,48,11)" fg:x="521" fg:w="1"/><text x="41.9634%" y="319.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.7134%" y="293" width="0.0801%" height="15" fill="rgb(235,193,26)" fg:x="521" fg:w="1"/><text x="41.9634%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::parse::Parser&gt; (1 samples, 0.08%)</title><rect x="41.7934%" y="357" width="0.0801%" height="15" fill="rgb(229,99,21)" fg:x="522" fg:w="1"/><text x="42.0434%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.7934%" y="341" width="0.0801%" height="15" fill="rgb(211,140,41)" fg:x="522" fg:w="1"/><text x="42.0434%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.9536%" y="341" width="0.0801%" height="15" fill="rgb(240,227,30)" fg:x="524" fg:w="1"/><text x="42.2036%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.0336%" y="325" width="0.1601%" height="15" fill="rgb(215,224,45)" fg:x="525" fg:w="2"/><text x="42.2836%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (19 samples, 1.52%)</title><rect x="42.0336%" y="341" width="1.5212%" height="15" fill="rgb(206,123,31)" fg:x="525" fg:w="19"/><text x="42.2836%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (17 samples, 1.36%)</title><rect x="42.1938%" y="325" width="1.3611%" height="15" fill="rgb(210,138,16)" fg:x="527" fg:w="17"/><text x="42.4438%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.3947%" y="309" width="0.1601%" height="15" fill="rgb(228,57,28)" fg:x="542" fg:w="2"/><text x="43.6447%" y="319.50"></text></g><g><title>regex_automata::hybrid::dfa::Builder::build_from_nfa (8 samples, 0.64%)</title><rect x="43.7150%" y="325" width="0.6405%" height="15" fill="rgb(242,170,10)" fg:x="546" fg:w="8"/><text x="43.9650%" y="335.50"></text></g><g><title>regex_automata::util::determinize::state::State::dead (2 samples, 0.16%)</title><rect x="44.1954%" y="309" width="0.1601%" height="15" fill="rgb(228,214,39)" fg:x="552" fg:w="2"/><text x="44.4454%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="44.1954%" y="293" width="0.1601%" height="15" fill="rgb(218,179,33)" fg:x="552" fg:w="2"/><text x="44.4454%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.2754%" y="277" width="0.0801%" height="15" fill="rgb(235,193,39)" fg:x="553" fg:w="1"/><text x="44.5254%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.2754%" y="261" width="0.0801%" height="15" fill="rgb(219,221,36)" fg:x="553" fg:w="1"/><text x="44.5254%" y="271.50"></text></g><g><title>regex_automata::meta::wrappers::Hybrid::new (11 samples, 0.88%)</title><rect x="43.5548%" y="341" width="0.8807%" height="15" fill="rgb(248,218,19)" fg:x="544" fg:w="11"/><text x="43.8048%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::new (1 samples, 0.08%)</title><rect x="44.3555%" y="325" width="0.0801%" height="15" fill="rgb(205,50,9)" fg:x="554" fg:w="1"/><text x="44.6055%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::range_trie::RangeTrie::new (1 samples, 0.08%)</title><rect x="44.3555%" y="309" width="0.0801%" height="15" fill="rgb(238,81,28)" fg:x="554" fg:w="1"/><text x="44.6055%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="44.3555%" y="293" width="0.0801%" height="15" fill="rgb(235,110,19)" fg:x="554" fg:w="1"/><text x="44.6055%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (1 samples, 0.08%)</title><rect x="44.4355%" y="325" width="0.0801%" height="15" fill="rgb(214,7,14)" fg:x="555" fg:w="1"/><text x="44.6855%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::range_trie::RangeTrie&gt;&gt; (1 samples, 0.08%)</title><rect x="44.4355%" y="309" width="0.0801%" height="15" fill="rgb(211,77,3)" fg:x="555" fg:w="1"/><text x="44.6855%" y="319.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (4 samples, 0.32%)</title><rect x="45.2362%" y="309" width="0.3203%" height="15" fill="rgb(229,5,9)" fg:x="565" fg:w="4"/><text x="45.4862%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="45.3163%" y="293" width="0.2402%" height="15" fill="rgb(225,90,11)" fg:x="566" fg:w="3"/><text x="45.5663%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="45.3163%" y="277" width="0.2402%" height="15" fill="rgb(242,56,8)" fg:x="566" fg:w="3"/><text x="45.5663%" y="287.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="45.3963%" y="261" width="0.1601%" height="15" fill="rgb(249,212,39)" fg:x="567" fg:w="2"/><text x="45.6463%" y="271.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::compile_transition (15 samples, 1.20%)</title><rect x="45.5564%" y="309" width="1.2010%" height="15" fill="rgb(236,90,9)" fg:x="569" fg:w="15"/><text x="45.8064%" y="319.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (12 samples, 0.96%)</title><rect x="45.7966%" y="293" width="0.9608%" height="15" fill="rgb(206,88,35)" fg:x="572" fg:w="12"/><text x="46.0466%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.72%)</title><rect x="46.0368%" y="277" width="0.7206%" height="15" fill="rgb(205,126,30)" fg:x="575" fg:w="9"/><text x="46.2868%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.72%)</title><rect x="46.0368%" y="261" width="0.7206%" height="15" fill="rgb(230,176,12)" fg:x="575" fg:w="9"/><text x="46.2868%" y="271.50"></text></g><g><title>realloc (9 samples, 0.72%)</title><rect x="46.0368%" y="245" width="0.7206%" height="15" fill="rgb(243,19,9)" fg:x="575" fg:w="9"/><text x="46.2868%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.8375%" y="293" width="0.0801%" height="15" fill="rgb(245,171,17)" fg:x="585" fg:w="1"/><text x="47.0875%" y="303.50"></text></g><g><title>regex_automata::dfa::remapper::Remapper::remap (12 samples, 0.96%)</title><rect x="46.9175%" y="293" width="0.9608%" height="15" fill="rgb(227,52,21)" fg:x="586" fg:w="12"/><text x="47.1675%" y="303.50"></text></g><g><title>regex_automata::dfa::remapper::onepass::&lt;impl regex_automata::dfa::remapper::Remappable for regex_automata::dfa::onepass::DFA&gt;::remap (11 samples, 0.88%)</title><rect x="46.9976%" y="277" width="0.8807%" height="15" fill="rgb(238,69,14)" fg:x="587" fg:w="11"/><text x="47.2476%" y="287.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::shuffle_states (15 samples, 1.20%)</title><rect x="46.7574%" y="309" width="1.2010%" height="15" fill="rgb(241,156,39)" fg:x="584" fg:w="15"/><text x="47.0074%" y="319.50"></text></g><g><title>regex_automata::dfa::remapper::Remapper::swap (1 samples, 0.08%)</title><rect x="47.8783%" y="293" width="0.0801%" height="15" fill="rgb(212,227,28)" fg:x="598" fg:w="1"/><text x="48.1283%" y="303.50"></text></g><g><title>regex_automata::meta::wrappers::OnePass::new (45 samples, 3.60%)</title><rect x="44.4355%" y="341" width="3.6029%" height="15" fill="rgb(209,118,27)" fg:x="555" fg:w="45"/><text x="44.6855%" y="351.50">rege..</text></g><g><title>regex_automata::dfa::onepass::Builder::build_from_nfa (44 samples, 3.52%)</title><rect x="44.5156%" y="325" width="3.5228%" height="15" fill="rgb(226,102,5)" fg:x="556" fg:w="44"/><text x="44.7656%" y="335.50">reg..</text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::stack_push (1 samples, 0.08%)</title><rect x="47.9584%" y="309" width="0.0801%" height="15" fill="rgb(223,34,3)" fg:x="599" fg:w="1"/><text x="48.2084%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.08%)</title><rect x="48.0384%" y="309" width="0.0801%" height="15" fill="rgb(221,81,38)" fg:x="600" fg:w="1"/><text x="48.2884%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_capture_start (1 samples, 0.08%)</title><rect x="48.1185%" y="293" width="0.0801%" height="15" fill="rgb(236,219,28)" fg:x="601" fg:w="1"/><text x="48.3685%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="48.1185%" y="277" width="0.0801%" height="15" fill="rgb(213,200,14)" fg:x="601" fg:w="1"/><text x="48.3685%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.1185%" y="261" width="0.0801%" height="15" fill="rgb(240,33,19)" fg:x="601" fg:w="1"/><text x="48.3685%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.1185%" y="245" width="0.0801%" height="15" fill="rgb(233,113,27)" fg:x="601" fg:w="1"/><text x="48.3685%" y="255.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.08%)</title><rect x="48.3587%" y="261" width="0.0801%" height="15" fill="rgb(220,221,18)" fg:x="604" fg:w="1"/><text x="48.6087%" y="271.50"></text></g><g><title>&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="49.5596%" y="229" width="0.4003%" height="15" fill="rgb(238,92,8)" fg:x="619" fg:w="5"/><text x="49.8096%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.9600%" y="229" width="0.0801%" height="15" fill="rgb(222,164,16)" fg:x="624" fg:w="1"/><text x="50.2100%" y="239.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (6 samples, 0.48%)</title><rect x="50.0400%" y="229" width="0.4804%" height="15" fill="rgb(241,119,3)" fg:x="625" fg:w="6"/><text x="50.2900%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="50.3603%" y="213" width="0.1601%" height="15" fill="rgb(241,44,8)" fg:x="629" fg:w="2"/><text x="50.6103%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="50.3603%" y="197" width="0.1601%" height="15" fill="rgb(230,36,40)" fg:x="629" fg:w="2"/><text x="50.6103%" y="207.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="50.3603%" y="181" width="0.1601%" height="15" fill="rgb(243,16,36)" fg:x="629" fg:w="2"/><text x="50.6103%" y="191.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::patch (4 samples, 0.32%)</title><rect x="50.5204%" y="229" width="0.3203%" height="15" fill="rgb(231,4,26)" fg:x="631" fg:w="4"/><text x="50.7704%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="50.7606%" y="213" width="0.0801%" height="15" fill="rgb(240,9,31)" fg:x="634" fg:w="1"/><text x="51.0106%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="50.7606%" y="197" width="0.0801%" height="15" fill="rgb(207,173,15)" fg:x="634" fg:w="1"/><text x="51.0106%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="50.7606%" y="181" width="0.0801%" height="15" fill="rgb(224,192,53)" fg:x="634" fg:w="1"/><text x="51.0106%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.1609%" y="165" width="0.1601%" height="15" fill="rgb(223,67,28)" fg:x="639" fg:w="2"/><text x="51.4109%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.48%)</title><rect x="50.9207%" y="197" width="0.4804%" height="15" fill="rgb(211,20,47)" fg:x="636" fg:w="6"/><text x="51.1707%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="51.0008%" y="181" width="0.4003%" height="15" fill="rgb(240,228,2)" fg:x="637" fg:w="5"/><text x="51.2508%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="51.3211%" y="165" width="0.0801%" height="15" fill="rgb(248,151,12)" fg:x="641" fg:w="1"/><text x="51.5711%" y="175.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::add (17 samples, 1.36%)</title><rect x="50.8407%" y="229" width="1.3611%" height="15" fill="rgb(244,8,39)" fg:x="635" fg:w="17"/><text x="51.0907%" y="239.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (17 samples, 1.36%)</title><rect x="50.8407%" y="213" width="1.3611%" height="15" fill="rgb(222,26,8)" fg:x="635" fg:w="17"/><text x="51.0907%" y="223.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile (10 samples, 0.80%)</title><rect x="51.4011%" y="197" width="0.8006%" height="15" fill="rgb(213,106,44)" fg:x="642" fg:w="10"/><text x="51.6511%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.1217%" y="181" width="0.0801%" height="15" fill="rgb(214,129,20)" fg:x="651" fg:w="1"/><text x="52.3717%" y="191.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::finish (2 samples, 0.16%)</title><rect x="52.2018%" y="229" width="0.1601%" height="15" fill="rgb(212,32,13)" fg:x="652" fg:w="2"/><text x="52.4518%" y="239.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (2 samples, 0.16%)</title><rect x="52.2018%" y="213" width="0.1601%" height="15" fill="rgb(208,168,33)" fg:x="652" fg:w="2"/><text x="52.4518%" y="223.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile (1 samples, 0.08%)</title><rect x="52.2818%" y="197" width="0.0801%" height="15" fill="rgb(231,207,8)" fg:x="653" fg:w="1"/><text x="52.5318%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="52.3619%" y="213" width="0.0801%" height="15" fill="rgb(235,219,23)" fg:x="654" fg:w="1"/><text x="52.6119%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.3619%" y="197" width="0.0801%" height="15" fill="rgb(226,216,26)" fg:x="654" fg:w="1"/><text x="52.6119%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4420%" y="197" width="0.0801%" height="15" fill="rgb(239,137,16)" fg:x="655" fg:w="1"/><text x="52.6920%" y="207.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (88 samples, 7.05%)</title><rect x="52.3619%" y="229" width="7.0456%" height="15" fill="rgb(207,12,36)" fg:x="654" fg:w="88"/><text x="52.6119%" y="239.50">regex_aut..</text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (87 samples, 6.97%)</title><rect x="52.4420%" y="213" width="6.9656%" height="15" fill="rgb(210,214,24)" fg:x="655" fg:w="87"/><text x="52.6920%" y="223.50">regex_aut..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (86 samples, 6.89%)</title><rect x="52.5220%" y="197" width="6.8855%" height="15" fill="rgb(206,56,30)" fg:x="656" fg:w="86"/><text x="52.7720%" y="207.50">alloc::ve..</text></g><g><title>regex_automata::nfa::thompson::map::Utf8SuffixMap::clear (3 samples, 0.24%)</title><rect x="59.4075%" y="229" width="0.2402%" height="15" fill="rgb(228,143,26)" fg:x="742" fg:w="3"/><text x="59.6575%" y="239.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequence::as_slice (1 samples, 0.08%)</title><rect x="59.6477%" y="229" width="0.0801%" height="15" fill="rgb(216,218,46)" fg:x="745" fg:w="1"/><text x="59.8977%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 12.33%)</title><rect x="48.0384%" y="325" width="12.3299%" height="15" fill="rgb(206,6,19)" fg:x="600" fg:w="154"/><text x="48.2884%" y="335.50">&lt;core::iter::adapt..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (153 samples, 12.25%)</title><rect x="48.1185%" y="309" width="12.2498%" height="15" fill="rgb(239,177,51)" fg:x="601" fg:w="153"/><text x="48.3685%" y="319.50">regex_automata::nf..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (152 samples, 12.17%)</title><rect x="48.1986%" y="293" width="12.1697%" height="15" fill="rgb(216,55,25)" fg:x="602" fg:w="152"/><text x="48.4486%" y="303.50">regex_automata::nf..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (150 samples, 12.01%)</title><rect x="48.3587%" y="277" width="12.0096%" height="15" fill="rgb(231,163,29)" fg:x="604" fg:w="150"/><text x="48.6087%" y="287.50">regex_automata::nf..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (149 samples, 11.93%)</title><rect x="48.4388%" y="261" width="11.9295%" height="15" fill="rgb(232,149,50)" fg:x="605" fg:w="149"/><text x="48.6888%" y="271.50">regex_automata::nf..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (149 samples, 11.93%)</title><rect x="48.4388%" y="245" width="11.9295%" height="15" fill="rgb(223,142,48)" fg:x="605" fg:w="149"/><text x="48.6888%" y="255.50">regex_automata::nf..</text></g><g><title>regex_syntax::utf8::Utf8Sequences::new (8 samples, 0.64%)</title><rect x="59.7278%" y="229" width="0.6405%" height="15" fill="rgb(245,83,23)" fg:x="746" fg:w="8"/><text x="59.9778%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.32%)</title><rect x="60.0480%" y="213" width="0.3203%" height="15" fill="rgb(224,63,2)" fg:x="750" fg:w="4"/><text x="60.2980%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="60.1281%" y="197" width="0.2402%" height="15" fill="rgb(218,65,53)" fg:x="751" fg:w="3"/><text x="60.3781%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.2082%" y="181" width="0.1601%" height="15" fill="rgb(221,84,29)" fg:x="752" fg:w="2"/><text x="60.4582%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.6085%" y="309" width="0.1601%" height="15" fill="rgb(234,0,32)" fg:x="757" fg:w="2"/><text x="60.8585%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (14 samples, 1.12%)</title><rect x="60.7686%" y="309" width="1.1209%" height="15" fill="rgb(206,20,16)" fg:x="759" fg:w="14"/><text x="61.0186%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.40%)</title><rect x="61.4892%" y="293" width="0.4003%" height="15" fill="rgb(244,172,18)" fg:x="768" fg:w="5"/><text x="61.7392%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="61.5693%" y="277" width="0.3203%" height="15" fill="rgb(254,133,1)" fg:x="769" fg:w="4"/><text x="61.8193%" y="287.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="61.7294%" y="261" width="0.1601%" height="15" fill="rgb(222,206,41)" fg:x="771" fg:w="2"/><text x="61.9794%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::into_nfa (12 samples, 0.96%)</title><rect x="61.8895%" y="309" width="0.9608%" height="15" fill="rgb(212,3,42)" fg:x="773" fg:w="12"/><text x="62.1395%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="62.7702%" y="293" width="0.0801%" height="15" fill="rgb(241,11,4)" fg:x="784" fg:w="1"/><text x="63.0202%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.7702%" y="277" width="0.0801%" height="15" fill="rgb(205,19,26)" fg:x="784" fg:w="1"/><text x="63.0202%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7702%" y="261" width="0.0801%" height="15" fill="rgb(210,179,32)" fg:x="784" fg:w="1"/><text x="63.0202%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::remap (3 samples, 0.24%)</title><rect x="62.8503%" y="309" width="0.2402%" height="15" fill="rgb(227,116,49)" fg:x="785" fg:w="3"/><text x="63.1003%" y="319.50"></text></g><g><title>regex_automata::meta::strategy::new (267 samples, 21.38%)</title><rect x="41.8735%" y="357" width="21.3771%" height="15" fill="rgb(211,146,6)" fg:x="523" fg:w="267"/><text x="42.1235%" y="367.50">regex_automata::meta::strategy::new</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (190 samples, 15.21%)</title><rect x="48.0384%" y="341" width="15.2122%" height="15" fill="rgb(219,44,39)" fg:x="600" fg:w="190"/><text x="48.2884%" y="351.50">regex_automata::nfa::th..</text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (36 samples, 2.88%)</title><rect x="60.3683%" y="325" width="2.8823%" height="15" fill="rgb(234,128,11)" fg:x="754" fg:w="36"/><text x="60.6183%" y="335.50">re..</text></g><g><title>regex_automata::util::captures::GroupInfo::new (2 samples, 0.16%)</title><rect x="63.0905%" y="309" width="0.1601%" height="15" fill="rgb(220,183,53)" fg:x="788" fg:w="2"/><text x="63.3405%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="63.0905%" y="293" width="0.1601%" height="15" fill="rgb(213,219,32)" fg:x="788" fg:w="2"/><text x="63.3405%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="63.0905%" y="277" width="0.1601%" height="15" fill="rgb(232,156,16)" fg:x="788" fg:w="2"/><text x="63.3405%" y="287.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="63.0905%" y="261" width="0.1601%" height="15" fill="rgb(246,135,34)" fg:x="788" fg:w="2"/><text x="63.3405%" y="271.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_class (2 samples, 0.16%)</title><rect x="63.4908%" y="309" width="0.1601%" height="15" fill="rgb(241,99,0)" fg:x="793" fg:w="2"/><text x="63.7408%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (1 samples, 0.08%)</title><rect x="63.5709%" y="293" width="0.0801%" height="15" fill="rgb(222,103,45)" fg:x="794" fg:w="1"/><text x="63.8209%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.24%)</title><rect x="63.6509%" y="293" width="0.2402%" height="15" fill="rgb(212,57,4)" fg:x="795" fg:w="3"/><text x="63.9009%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="63.6509%" y="277" width="0.2402%" height="15" fill="rgb(215,68,47)" fg:x="795" fg:w="3"/><text x="63.9009%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="63.6509%" y="261" width="0.2402%" height="15" fill="rgb(230,84,2)" fg:x="795" fg:w="3"/><text x="63.9009%" y="271.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (7 samples, 0.56%)</title><rect x="63.4107%" y="325" width="0.5604%" height="15" fill="rgb(220,102,14)" fg:x="792" fg:w="7"/><text x="63.6607%" y="335.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_class_open (4 samples, 0.32%)</title><rect x="63.6509%" y="309" width="0.3203%" height="15" fill="rgb(240,10,32)" fg:x="795" fg:w="4"/><text x="63.9009%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_open (1 samples, 0.08%)</title><rect x="63.8911%" y="293" width="0.0801%" height="15" fill="rgb(215,47,27)" fg:x="798" fg:w="1"/><text x="64.1411%" y="303.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (10 samples, 0.80%)</title><rect x="63.2506%" y="357" width="0.8006%" height="15" fill="rgb(233,188,43)" fg:x="790" fg:w="10"/><text x="63.5006%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (10 samples, 0.80%)</title><rect x="63.2506%" y="341" width="0.8006%" height="15" fill="rgb(253,190,1)" fg:x="790" fg:w="10"/><text x="63.5006%" y="351.50"></text></g><g><title>regex_syntax::ast::visitor::visit (1 samples, 0.08%)</title><rect x="63.9712%" y="325" width="0.0801%" height="15" fill="rgb(206,114,52)" fg:x="799" fg:w="1"/><text x="64.2212%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="64.1313%" y="309" width="0.0801%" height="15" fill="rgb(233,120,37)" fg:x="801" fg:w="1"/><text x="64.3813%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="64.4516%" y="293" width="0.1601%" height="15" fill="rgb(214,52,39)" fg:x="805" fg:w="2"/><text x="64.7016%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="64.5316%" y="277" width="0.0801%" height="15" fill="rgb(223,80,29)" fg:x="806" fg:w="1"/><text x="64.7816%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="64.5316%" y="261" width="0.0801%" height="15" fill="rgb(230,101,40)" fg:x="806" fg:w="1"/><text x="64.7816%" y="271.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (6 samples, 0.48%)</title><rect x="64.2114%" y="309" width="0.4804%" height="15" fill="rgb(219,211,8)" fg:x="802" fg:w="6"/><text x="64.4614%" y="319.50"></text></g><g><title>core::slice::sort::merge_sort (1 samples, 0.08%)</title><rect x="64.6117%" y="293" width="0.0801%" height="15" fill="rgb(252,126,28)" fg:x="807" fg:w="1"/><text x="64.8617%" y="303.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::union (2 samples, 0.16%)</title><rect x="64.6918%" y="309" width="0.1601%" height="15" fill="rgb(215,56,38)" fg:x="808" fg:w="2"/><text x="64.9418%" y="319.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (2 samples, 0.16%)</title><rect x="64.6918%" y="293" width="0.1601%" height="15" fill="rgb(249,55,44)" fg:x="808" fg:w="2"/><text x="64.9418%" y="303.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (11 samples, 0.88%)</title><rect x="64.1313%" y="325" width="0.8807%" height="15" fill="rgb(220,221,32)" fg:x="801" fg:w="11"/><text x="64.3813%" y="335.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::hir_perl_unicode_class (2 samples, 0.16%)</title><rect x="64.8519%" y="309" width="0.1601%" height="15" fill="rgb(212,216,41)" fg:x="810" fg:w="2"/><text x="65.1019%" y="319.50"></text></g><g><title>regex_syntax::unicode::perl_digit (2 samples, 0.16%)</title><rect x="64.8519%" y="293" width="0.1601%" height="15" fill="rgb(228,213,43)" fg:x="810" fg:w="2"/><text x="65.1019%" y="303.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (2 samples, 0.16%)</title><rect x="64.8519%" y="277" width="0.1601%" height="15" fill="rgb(211,31,26)" fg:x="810" fg:w="2"/><text x="65.1019%" y="287.50"></text></g><g><title>&lt;regex::regex::string::Regex as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (299 samples, 23.94%)</title><rect x="41.2330%" y="405" width="23.9392%" height="15" fill="rgb(229,202,19)" fg:x="515" fg:w="299"/><text x="41.4830%" y="415.50">&lt;regex::regex::string::Regex as core::..</text></g><g><title>regex::builders::Builder::build_one_string (298 samples, 23.86%)</title><rect x="41.3131%" y="389" width="23.8591%" height="15" fill="rgb(229,105,46)" fg:x="516" fg:w="298"/><text x="41.5631%" y="399.50">regex::builders::Builder::build_one_st..</text></g><g><title>regex_automata::meta::regex::Builder::build (298 samples, 23.86%)</title><rect x="41.3131%" y="373" width="23.8591%" height="15" fill="rgb(235,108,1)" fg:x="516" fg:w="298"/><text x="41.5631%" y="383.50">regex_automata::meta::regex::Builder::..</text></g><g><title>regex_syntax::hir::translate::Translator::translate (14 samples, 1.12%)</title><rect x="64.0512%" y="357" width="1.1209%" height="15" fill="rgb(245,111,35)" fg:x="800" fg:w="14"/><text x="64.3012%" y="367.50"></text></g><g><title>regex_syntax::ast::visitor::visit (14 samples, 1.12%)</title><rect x="64.0512%" y="341" width="1.1209%" height="15" fill="rgb(219,185,31)" fg:x="800" fg:w="14"/><text x="64.3012%" y="351.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (2 samples, 0.16%)</title><rect x="65.0120%" y="325" width="0.1601%" height="15" fill="rgb(214,4,43)" fg:x="812" fg:w="2"/><text x="65.2620%" y="335.50"></text></g><g><title>regex_syntax::hir::Hir::concat (2 samples, 0.16%)</title><rect x="65.0120%" y="309" width="0.1601%" height="15" fill="rgb(235,227,40)" fg:x="812" fg:w="2"/><text x="65.2620%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.1721%" y="373" width="0.1601%" height="15" fill="rgb(230,88,30)" fg:x="814" fg:w="2"/><text x="65.4221%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="65.3323%" y="373" width="0.0801%" height="15" fill="rgb(216,217,1)" fg:x="816" fg:w="1"/><text x="65.5823%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::meta::wrappers::Hybrid&gt; (1 samples, 0.08%)</title><rect x="65.3323%" y="357" width="0.0801%" height="15" fill="rgb(248,139,50)" fg:x="816" fg:w="1"/><text x="65.5823%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.3323%" y="341" width="0.0801%" height="15" fill="rgb(233,1,21)" fg:x="816" fg:w="1"/><text x="65.5823%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="65.4123%" y="357" width="0.0801%" height="15" fill="rgb(215,183,12)" fg:x="817" fg:w="1"/><text x="65.6623%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::hybrid::dfa::Cache&gt; (3 samples, 0.24%)</title><rect x="65.4924%" y="357" width="0.2402%" height="15" fill="rgb(229,104,42)" fg:x="818" fg:w="3"/><text x="65.7424%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.5725%" y="341" width="0.1601%" height="15" fill="rgb(243,34,48)" fg:x="819" fg:w="2"/><text x="65.8225%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::regex::string::Regex&gt; (8 samples, 0.64%)</title><rect x="65.1721%" y="405" width="0.6405%" height="15" fill="rgb(239,11,44)" fg:x="814" fg:w="8"/><text x="65.4221%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::pool::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::marker::Send+core::panic::unwind_safe::RefUnwindSafe+core::panic::unwind_safe::UnwindSafe+core::marker::Sync&gt;&gt;&gt; (8 samples, 0.64%)</title><rect x="65.1721%" y="389" width="0.6405%" height="15" fill="rgb(231,98,35)" fg:x="814" fg:w="8"/><text x="65.4221%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::meta::regex::Cache&gt; (5 samples, 0.40%)</title><rect x="65.4123%" y="373" width="0.4003%" height="15" fill="rgb(233,28,25)" fg:x="817" fg:w="5"/><text x="65.6623%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::meta::wrappers::PikeVMCache&gt; (1 samples, 0.08%)</title><rect x="65.7326%" y="357" width="0.0801%" height="15" fill="rgb(234,123,11)" fg:x="821" fg:w="1"/><text x="65.9826%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.7326%" y="341" width="0.0801%" height="15" fill="rgb(220,69,3)" fg:x="821" fg:w="1"/><text x="65.9826%" y="351.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::cache_next_state (1 samples, 0.08%)</title><rect x="65.8127%" y="357" width="0.0801%" height="15" fill="rgb(214,64,36)" fg:x="822" fg:w="1"/><text x="66.0627%" y="367.50"></text></g><g><title>regex_automata::util::determinize::next (1 samples, 0.08%)</title><rect x="65.8127%" y="341" width="0.0801%" height="15" fill="rgb(211,138,32)" fg:x="822" fg:w="1"/><text x="66.0627%" y="351.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_half (2 samples, 0.16%)</title><rect x="65.8127%" y="389" width="0.1601%" height="15" fill="rgb(213,118,47)" fg:x="822" fg:w="2"/><text x="66.0627%" y="399.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd (2 samples, 0.16%)</title><rect x="65.8127%" y="373" width="0.1601%" height="15" fill="rgb(243,124,49)" fg:x="822" fg:w="2"/><text x="66.0627%" y="383.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::cache_start_group (1 samples, 0.08%)</title><rect x="65.8927%" y="357" width="0.0801%" height="15" fill="rgb(221,30,28)" fg:x="823" fg:w="1"/><text x="66.1427%" y="367.50"></text></g><g><title>regex_automata::util::determinize::epsilon_closure (1 samples, 0.08%)</title><rect x="65.8927%" y="341" width="0.0801%" height="15" fill="rgb(246,37,13)" fg:x="823" fg:w="1"/><text x="66.1427%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.5332%" y="309" width="0.0801%" height="15" fill="rgb(249,66,14)" fg:x="831" fg:w="1"/><text x="66.7832%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.5332%" y="293" width="0.0801%" height="15" fill="rgb(213,166,5)" fg:x="831" fg:w="1"/><text x="66.7832%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.5332%" y="277" width="0.0801%" height="15" fill="rgb(221,66,24)" fg:x="831" fg:w="1"/><text x="66.7832%" y="287.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::new (20 samples, 1.60%)</title><rect x="65.9728%" y="341" width="1.6013%" height="15" fill="rgb(210,132,17)" fg:x="824" fg:w="20"/><text x="66.2228%" y="351.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::init_cache (20 samples, 1.60%)</title><rect x="65.9728%" y="325" width="1.6013%" height="15" fill="rgb(243,202,5)" fg:x="824" fg:w="20"/><text x="66.2228%" y="335.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::set_transition (12 samples, 0.96%)</title><rect x="66.6133%" y="309" width="0.9608%" height="15" fill="rgb(233,70,48)" fg:x="832" fg:w="12"/><text x="66.8633%" y="319.50"></text></g><g><title>indefinite::rules::number::Number::check (331 samples, 26.50%)</title><rect x="41.2330%" y="421" width="26.5012%" height="15" fill="rgb(238,41,26)" fg:x="515" fg:w="331"/><text x="41.4830%" y="431.50">indefinite::rules::number::Number::check</text></g><g><title>regex::regex::string::Regex::is_match_at (24 samples, 1.92%)</title><rect x="65.8127%" y="405" width="1.9215%" height="15" fill="rgb(241,19,31)" fg:x="822" fg:w="24"/><text x="66.0627%" y="415.50">r..</text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get_slow (22 samples, 1.76%)</title><rect x="65.9728%" y="389" width="1.7614%" height="15" fill="rgb(214,76,10)" fg:x="824" fg:w="22"/><text x="66.2228%" y="399.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir::{{closure}} (22 samples, 1.76%)</title><rect x="65.9728%" y="373" width="1.7614%" height="15" fill="rgb(254,202,22)" fg:x="824" fg:w="22"/><text x="66.2228%" y="383.50"></text></g><g><title>&lt;regex_automata::meta::strategy::ReverseAnchored as regex_automata::meta::strategy::Strategy&gt;::create_cache (22 samples, 1.76%)</title><rect x="65.9728%" y="357" width="1.7614%" height="15" fill="rgb(214,72,24)" fg:x="824" fg:w="22"/><text x="66.2228%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::PikeVM::create_cache (2 samples, 0.16%)</title><rect x="67.5741%" y="341" width="0.1601%" height="15" fill="rgb(221,92,46)" fg:x="844" fg:w="2"/><text x="67.8241%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::reset (2 samples, 0.16%)</title><rect x="67.5741%" y="325" width="0.1601%" height="15" fill="rgb(246,13,50)" fg:x="844" fg:w="2"/><text x="67.8241%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="67.5741%" y="309" width="0.1601%" height="15" fill="rgb(240,165,38)" fg:x="844" fg:w="2"/><text x="67.8241%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="67.5741%" y="293" width="0.1601%" height="15" fill="rgb(241,24,51)" fg:x="844" fg:w="2"/><text x="67.8241%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="67.5741%" y="277" width="0.1601%" height="15" fill="rgb(227,51,44)" fg:x="844" fg:w="2"/><text x="67.8241%" y="287.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="67.7342%" y="405" width="0.0801%" height="15" fill="rgb(231,121,3)" fg:x="846" fg:w="1"/><text x="67.9842%" y="415.50"></text></g><g><title>alloc::str::convert_while_ascii (1 samples, 0.08%)</title><rect x="67.7342%" y="389" width="0.0801%" height="15" fill="rgb(245,3,41)" fg:x="846" fg:w="1"/><text x="67.9842%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="67.7342%" y="373" width="0.0801%" height="15" fill="rgb(214,13,26)" fg:x="846" fg:w="1"/><text x="67.9842%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.7342%" y="357" width="0.0801%" height="15" fill="rgb(252,75,11)" fg:x="846" fg:w="1"/><text x="67.9842%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.7342%" y="341" width="0.0801%" height="15" fill="rgb(218,226,17)" fg:x="846" fg:w="1"/><text x="67.9842%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.7342%" y="325" width="0.0801%" height="15" fill="rgb(248,89,38)" fg:x="846" fg:w="1"/><text x="67.9842%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.7342%" y="309" width="0.0801%" height="15" fill="rgb(237,73,46)" fg:x="846" fg:w="1"/><text x="67.9842%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.7342%" y="293" width="0.0801%" height="15" fill="rgb(242,78,33)" fg:x="846" fg:w="1"/><text x="67.9842%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.7342%" y="277" width="0.0801%" height="15" fill="rgb(235,60,3)" fg:x="846" fg:w="1"/><text x="67.9842%" y="287.50"></text></g><g><title>&lt;regex::builders::Builder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="67.8143%" y="373" width="0.0801%" height="15" fill="rgb(216,172,19)" fg:x="847" fg:w="1"/><text x="68.0643%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.8943%" y="341" width="0.0801%" height="15" fill="rgb(227,6,42)" fg:x="848" fg:w="1"/><text x="68.1443%" y="351.50"></text></g><g><title>&lt;regex_syntax::hir::Hir as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.8943%" y="325" width="0.0801%" height="15" fill="rgb(223,207,42)" fg:x="848" fg:w="1"/><text x="68.1443%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="67.8943%" y="309" width="0.0801%" height="15" fill="rgb(246,138,30)" fg:x="848" fg:w="1"/><text x="68.1443%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.8943%" y="293" width="0.0801%" height="15" fill="rgb(251,199,47)" fg:x="848" fg:w="1"/><text x="68.1443%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="67.8943%" y="277" width="0.0801%" height="15" fill="rgb(228,218,44)" fg:x="848" fg:w="1"/><text x="68.1443%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="67.8943%" y="261" width="0.0801%" height="15" fill="rgb(220,68,6)" fg:x="848" fg:w="1"/><text x="68.1443%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (3 samples, 0.24%)</title><rect x="67.9744%" y="341" width="0.2402%" height="15" fill="rgb(240,60,26)" fg:x="849" fg:w="3"/><text x="68.2244%" y="351.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="67.9744%" y="325" width="0.2402%" height="15" fill="rgb(211,200,19)" fg:x="849" fg:w="3"/><text x="68.2244%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (2 samples, 0.16%)</title><rect x="68.0544%" y="309" width="0.1601%" height="15" fill="rgb(242,145,30)" fg:x="850" fg:w="2"/><text x="68.3044%" y="319.50"></text></g><g><title>&lt;regex_syntax::ast::ClassSet as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="68.0544%" y="293" width="0.1601%" height="15" fill="rgb(225,64,13)" fg:x="850" fg:w="2"/><text x="68.3044%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="68.1345%" y="277" width="0.0801%" height="15" fill="rgb(218,103,35)" fg:x="851" fg:w="1"/><text x="68.3845%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3747%" y="325" width="0.0801%" height="15" fill="rgb(216,93,46)" fg:x="854" fg:w="1"/><text x="68.6247%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (1 samples, 0.08%)</title><rect x="68.4548%" y="325" width="0.0801%" height="15" fill="rgb(225,159,27)" fg:x="855" fg:w="1"/><text x="68.7048%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.4548%" y="309" width="0.0801%" height="15" fill="rgb(225,204,11)" fg:x="855" fg:w="1"/><text x="68.7048%" y="319.50"></text></g><g><title>regex_automata::meta::wrappers::BoundedBacktracker::new (1 samples, 0.08%)</title><rect x="68.5348%" y="325" width="0.0801%" height="15" fill="rgb(205,56,4)" fg:x="856" fg:w="1"/><text x="68.7848%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::new (1 samples, 0.08%)</title><rect x="68.5348%" y="309" width="0.0801%" height="15" fill="rgb(206,6,35)" fg:x="856" fg:w="1"/><text x="68.7848%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::range_trie::RangeTrie::new (1 samples, 0.08%)</title><rect x="68.5348%" y="293" width="0.0801%" height="15" fill="rgb(247,73,52)" fg:x="856" fg:w="1"/><text x="68.7848%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::range_trie::RangeTrie::add_empty (1 samples, 0.08%)</title><rect x="68.5348%" y="277" width="0.0801%" height="15" fill="rgb(246,97,4)" fg:x="856" fg:w="1"/><text x="68.7848%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="68.5348%" y="261" width="0.0801%" height="15" fill="rgb(212,37,15)" fg:x="856" fg:w="1"/><text x="68.7848%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.5348%" y="245" width="0.0801%" height="15" fill="rgb(208,130,40)" fg:x="856" fg:w="1"/><text x="68.7848%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.5348%" y="229" width="0.0801%" height="15" fill="rgb(236,55,29)" fg:x="856" fg:w="1"/><text x="68.7848%" y="239.50"></text></g><g><title>regex_automata::meta::wrappers::Hybrid::new (7 samples, 0.56%)</title><rect x="68.6149%" y="325" width="0.5604%" height="15" fill="rgb(209,156,45)" fg:x="857" fg:w="7"/><text x="68.8649%" y="335.50"></text></g><g><title>regex_automata::hybrid::dfa::Builder::build_from_nfa (6 samples, 0.48%)</title><rect x="68.6950%" y="309" width="0.4804%" height="15" fill="rgb(249,107,4)" fg:x="858" fg:w="6"/><text x="68.9450%" y="319.50"></text></g><g><title>regex_automata::util::determinize::state::State::dead (1 samples, 0.08%)</title><rect x="69.0953%" y="293" width="0.0801%" height="15" fill="rgb(227,7,13)" fg:x="863" fg:w="1"/><text x="69.3453%" y="303.50"></text></g><g><title>regex_automata::util::determinize::state::StateBuilderMatches::into_nfa (1 samples, 0.08%)</title><rect x="69.0953%" y="277" width="0.0801%" height="15" fill="rgb(250,129,14)" fg:x="863" fg:w="1"/><text x="69.3453%" y="287.50"></text></g><g><title>regex_automata::meta::wrappers::PikeVM::new (2 samples, 0.16%)</title><rect x="69.1753%" y="325" width="0.1601%" height="15" fill="rgb(229,92,13)" fg:x="864" fg:w="2"/><text x="69.4253%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::new (1 samples, 0.08%)</title><rect x="69.2554%" y="309" width="0.0801%" height="15" fill="rgb(245,98,39)" fg:x="865" fg:w="1"/><text x="69.5054%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::range_trie::RangeTrie::new (1 samples, 0.08%)</title><rect x="69.2554%" y="293" width="0.0801%" height="15" fill="rgb(234,135,48)" fg:x="865" fg:w="1"/><text x="69.5054%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::range_trie::RangeTrie::add_empty (1 samples, 0.08%)</title><rect x="69.2554%" y="277" width="0.0801%" height="15" fill="rgb(230,98,28)" fg:x="865" fg:w="1"/><text x="69.5054%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="69.2554%" y="261" width="0.0801%" height="15" fill="rgb(223,121,0)" fg:x="865" fg:w="1"/><text x="69.5054%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.2554%" y="245" width="0.0801%" height="15" fill="rgb(234,173,33)" fg:x="865" fg:w="1"/><text x="69.5054%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="69.4155%" y="309" width="0.1601%" height="15" fill="rgb(245,47,8)" fg:x="867" fg:w="2"/><text x="69.6655%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.08%)</title><rect x="69.4956%" y="293" width="0.0801%" height="15" fill="rgb(205,17,20)" fg:x="868" fg:w="1"/><text x="69.7456%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.08%)</title><rect x="69.4956%" y="277" width="0.0801%" height="15" fill="rgb(232,151,16)" fg:x="868" fg:w="1"/><text x="69.7456%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.08%)</title><rect x="69.4956%" y="261" width="0.0801%" height="15" fill="rgb(208,30,32)" fg:x="868" fg:w="1"/><text x="69.7456%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::into_nfa (6 samples, 0.48%)</title><rect x="69.7358%" y="293" width="0.4804%" height="15" fill="rgb(254,26,3)" fg:x="871" fg:w="6"/><text x="69.9858%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.1361%" y="277" width="0.0801%" height="15" fill="rgb(240,177,30)" fg:x="876" fg:w="1"/><text x="70.3861%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::remap (1 samples, 0.08%)</title><rect x="70.2162%" y="293" width="0.0801%" height="15" fill="rgb(248,76,44)" fg:x="877" fg:w="1"/><text x="70.4662%" y="303.50"></text></g><g><title>regex_automata::meta::strategy::new (28 samples, 2.24%)</title><rect x="68.2146%" y="341" width="2.2418%" height="15" fill="rgb(241,186,54)" fg:x="852" fg:w="28"/><text x="68.4646%" y="351.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (14 samples, 1.12%)</title><rect x="69.3355%" y="325" width="1.1209%" height="15" fill="rgb(249,171,29)" fg:x="866" fg:w="14"/><text x="69.5855%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (11 samples, 0.88%)</title><rect x="69.5757%" y="309" width="0.8807%" height="15" fill="rgb(237,151,44)" fg:x="869" fg:w="11"/><text x="69.8257%" y="319.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::new (2 samples, 0.16%)</title><rect x="70.2962%" y="293" width="0.1601%" height="15" fill="rgb(228,174,30)" fg:x="878" fg:w="2"/><text x="70.5462%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.3763%" y="277" width="0.0801%" height="15" fill="rgb(252,14,37)" fg:x="879" fg:w="1"/><text x="70.6263%" y="287.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_range (1 samples, 0.08%)</title><rect x="70.5364%" y="293" width="0.0801%" height="15" fill="rgb(207,111,40)" fg:x="881" fg:w="1"/><text x="70.7864%" y="303.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump_space (1 samples, 0.08%)</title><rect x="70.5364%" y="277" width="0.0801%" height="15" fill="rgb(248,171,54)" fg:x="881" fg:w="1"/><text x="70.7864%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="70.6165%" y="277" width="0.1601%" height="15" fill="rgb(211,127,2)" fg:x="882" fg:w="2"/><text x="70.8665%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="70.6165%" y="261" width="0.1601%" height="15" fill="rgb(236,87,47)" fg:x="882" fg:w="2"/><text x="70.8665%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.6165%" y="245" width="0.1601%" height="15" fill="rgb(223,190,45)" fg:x="882" fg:w="2"/><text x="70.8665%" y="255.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (4 samples, 0.32%)</title><rect x="70.5364%" y="309" width="0.3203%" height="15" fill="rgb(215,5,16)" fg:x="881" fg:w="4"/><text x="70.7864%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_class_open (3 samples, 0.24%)</title><rect x="70.6165%" y="293" width="0.2402%" height="15" fill="rgb(252,82,33)" fg:x="882" fg:w="3"/><text x="70.8665%" y="303.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_open (1 samples, 0.08%)</title><rect x="70.7766%" y="277" width="0.0801%" height="15" fill="rgb(247,213,44)" fg:x="884" fg:w="1"/><text x="71.0266%" y="287.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (1 samples, 0.08%)</title><rect x="70.7766%" y="261" width="0.0801%" height="15" fill="rgb(205,196,44)" fg:x="884" fg:w="1"/><text x="71.0266%" y="271.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (6 samples, 0.48%)</title><rect x="70.4564%" y="341" width="0.4804%" height="15" fill="rgb(237,96,54)" fg:x="880" fg:w="6"/><text x="70.7064%" y="351.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (6 samples, 0.48%)</title><rect x="70.4564%" y="325" width="0.4804%" height="15" fill="rgb(230,113,34)" fg:x="880" fg:w="6"/><text x="70.7064%" y="335.50"></text></g><g><title>regex_syntax::ast::visitor::visit (1 samples, 0.08%)</title><rect x="70.8567%" y="309" width="0.0801%" height="15" fill="rgb(221,224,12)" fg:x="885" fg:w="1"/><text x="71.1067%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="70.8567%" y="293" width="0.0801%" height="15" fill="rgb(219,112,44)" fg:x="885" fg:w="1"/><text x="71.1067%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.8567%" y="277" width="0.0801%" height="15" fill="rgb(210,31,13)" fg:x="885" fg:w="1"/><text x="71.1067%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8567%" y="261" width="0.0801%" height="15" fill="rgb(230,25,16)" fg:x="885" fg:w="1"/><text x="71.1067%" y="271.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (4 samples, 0.32%)</title><rect x="70.9367%" y="309" width="0.3203%" height="15" fill="rgb(246,108,53)" fg:x="886" fg:w="4"/><text x="71.1867%" y="319.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (3 samples, 0.24%)</title><rect x="71.0168%" y="293" width="0.2402%" height="15" fill="rgb(241,172,50)" fg:x="887" fg:w="3"/><text x="71.2668%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.24%)</title><rect x="71.0168%" y="277" width="0.2402%" height="15" fill="rgb(235,141,10)" fg:x="887" fg:w="3"/><text x="71.2668%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="71.0168%" y="261" width="0.2402%" height="15" fill="rgb(220,174,43)" fg:x="887" fg:w="3"/><text x="71.2668%" y="271.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="71.0168%" y="245" width="0.2402%" height="15" fill="rgb(215,181,40)" fg:x="887" fg:w="3"/><text x="71.2668%" y="255.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (2 samples, 0.16%)</title><rect x="71.2570%" y="309" width="0.1601%" height="15" fill="rgb(230,97,2)" fg:x="890" fg:w="2"/><text x="71.5070%" y="319.50"></text></g><g><title>regex_syntax::hir::Hir::concat (2 samples, 0.16%)</title><rect x="71.2570%" y="293" width="0.1601%" height="15" fill="rgb(211,25,27)" fg:x="890" fg:w="2"/><text x="71.5070%" y="303.50"></text></g><g><title>regex_syntax::hir::Hir::into_parts (1 samples, 0.08%)</title><rect x="71.3371%" y="277" width="0.0801%" height="15" fill="rgb(230,87,26)" fg:x="891" fg:w="1"/><text x="71.5871%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3371%" y="261" width="0.0801%" height="15" fill="rgb(227,160,17)" fg:x="891" fg:w="1"/><text x="71.5871%" y="271.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (45 samples, 3.60%)</title><rect x="67.8943%" y="357" width="3.6029%" height="15" fill="rgb(244,85,34)" fg:x="848" fg:w="45"/><text x="68.1443%" y="367.50">rege..</text></g><g><title>regex_syntax::hir::translate::Translator::translate (7 samples, 0.56%)</title><rect x="70.9367%" y="341" width="0.5604%" height="15" fill="rgb(207,70,0)" fg:x="886" fg:w="7"/><text x="71.1867%" y="351.50"></text></g><g><title>regex_syntax::ast::visitor::visit (7 samples, 0.56%)</title><rect x="70.9367%" y="325" width="0.5604%" height="15" fill="rgb(223,129,7)" fg:x="886" fg:w="7"/><text x="71.1867%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4171%" y="309" width="0.0801%" height="15" fill="rgb(246,105,7)" fg:x="892" fg:w="1"/><text x="71.6671%" y="319.50"></text></g><g><title>&lt;regex::regex::string::Regex as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (47 samples, 3.76%)</title><rect x="67.8143%" y="389" width="3.7630%" height="15" fill="rgb(215,154,42)" fg:x="847" fg:w="47"/><text x="68.0643%" y="399.50">&lt;reg..</text></g><g><title>regex::builders::Builder::build_one_string (46 samples, 3.68%)</title><rect x="67.8943%" y="373" width="3.6829%" height="15" fill="rgb(220,215,30)" fg:x="848" fg:w="46"/><text x="68.1443%" y="383.50">rege..</text></g><g><title>regex_automata::meta::regex::Builder::syntax (1 samples, 0.08%)</title><rect x="71.4972%" y="357" width="0.0801%" height="15" fill="rgb(228,81,51)" fg:x="893" fg:w="1"/><text x="71.7472%" y="367.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_half (1 samples, 0.08%)</title><rect x="71.5773%" y="389" width="0.0801%" height="15" fill="rgb(247,71,54)" fg:x="894" fg:w="1"/><text x="71.8273%" y="399.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd (1 samples, 0.08%)</title><rect x="71.5773%" y="373" width="0.0801%" height="15" fill="rgb(234,176,34)" fg:x="894" fg:w="1"/><text x="71.8273%" y="383.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::cache_next_state (1 samples, 0.08%)</title><rect x="71.5773%" y="357" width="0.0801%" height="15" fill="rgb(241,103,54)" fg:x="894" fg:w="1"/><text x="71.8273%" y="367.50"></text></g><g><title>regex_automata::util::determinize::next (1 samples, 0.08%)</title><rect x="71.5773%" y="341" width="0.0801%" height="15" fill="rgb(228,22,34)" fg:x="894" fg:w="1"/><text x="71.8273%" y="351.50"></text></g><g><title>regex_automata::util::determinize::state::StateBuilderMatches::into_nfa (1 samples, 0.08%)</title><rect x="71.5773%" y="325" width="0.0801%" height="15" fill="rgb(241,179,48)" fg:x="894" fg:w="1"/><text x="71.8273%" y="335.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="71.6573%" y="357" width="0.0801%" height="15" fill="rgb(235,167,37)" fg:x="895" fg:w="1"/><text x="71.9073%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::meta::wrappers::Hybrid&gt; (1 samples, 0.08%)</title><rect x="71.6573%" y="341" width="0.0801%" height="15" fill="rgb(213,109,30)" fg:x="895" fg:w="1"/><text x="71.9073%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="71.6573%" y="325" width="0.0801%" height="15" fill="rgb(222,172,16)" fg:x="895" fg:w="1"/><text x="71.9073%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.6573%" y="309" width="0.0801%" height="15" fill="rgb(233,192,5)" fg:x="895" fg:w="1"/><text x="71.9073%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="71.7374%" y="325" width="0.1601%" height="15" fill="rgb(247,189,41)" fg:x="896" fg:w="2"/><text x="71.9874%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.8175%" y="309" width="0.0801%" height="15" fill="rgb(218,134,47)" fg:x="897" fg:w="1"/><text x="72.0675%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::hybrid::dfa::Cache&gt; (4 samples, 0.32%)</title><rect x="71.7374%" y="341" width="0.3203%" height="15" fill="rgb(216,29,3)" fg:x="896" fg:w="4"/><text x="71.9874%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="71.8975%" y="325" width="0.1601%" height="15" fill="rgb(246,140,12)" fg:x="898" fg:w="2"/><text x="72.1475%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::regex::string::Regex&gt; (6 samples, 0.48%)</title><rect x="71.6573%" y="389" width="0.4804%" height="15" fill="rgb(230,136,11)" fg:x="895" fg:w="6"/><text x="71.9073%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::pool::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::marker::Send+core::panic::unwind_safe::RefUnwindSafe+core::panic::unwind_safe::UnwindSafe+core::marker::Sync&gt;&gt;&gt; (6 samples, 0.48%)</title><rect x="71.6573%" y="373" width="0.4804%" height="15" fill="rgb(247,22,47)" fg:x="895" fg:w="6"/><text x="71.9073%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::meta::regex::Cache&gt; (5 samples, 0.40%)</title><rect x="71.7374%" y="357" width="0.4003%" height="15" fill="rgb(218,84,22)" fg:x="896" fg:w="5"/><text x="71.9874%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::meta::wrappers::PikeVMCache&gt; (1 samples, 0.08%)</title><rect x="72.0576%" y="341" width="0.0801%" height="15" fill="rgb(216,87,39)" fg:x="900" fg:w="1"/><text x="72.3076%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0576%" y="325" width="0.0801%" height="15" fill="rgb(221,178,8)" fg:x="900" fg:w="1"/><text x="72.3076%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="72.5380%" y="309" width="0.1601%" height="15" fill="rgb(230,42,11)" fg:x="906" fg:w="2"/><text x="72.7880%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="72.5380%" y="293" width="0.1601%" height="15" fill="rgb(237,229,4)" fg:x="906" fg:w="2"/><text x="72.7880%" y="303.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="72.5380%" y="277" width="0.1601%" height="15" fill="rgb(222,31,33)" fg:x="906" fg:w="2"/><text x="72.7880%" y="287.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::init_cache (8 samples, 0.64%)</title><rect x="72.2178%" y="325" width="0.6405%" height="15" fill="rgb(210,17,39)" fg:x="902" fg:w="8"/><text x="72.4678%" y="335.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::set_transition (2 samples, 0.16%)</title><rect x="72.6982%" y="309" width="0.1601%" height="15" fill="rgb(244,93,20)" fg:x="908" fg:w="2"/><text x="72.9482%" y="319.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::new (10 samples, 0.80%)</title><rect x="72.1377%" y="341" width="0.8006%" height="15" fill="rgb(210,40,47)" fg:x="901" fg:w="10"/><text x="72.3877%" y="351.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSets::new (1 samples, 0.08%)</title><rect x="72.8583%" y="325" width="0.0801%" height="15" fill="rgb(239,211,47)" fg:x="910" fg:w="1"/><text x="73.1083%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.8583%" y="309" width="0.0801%" height="15" fill="rgb(251,223,49)" fg:x="910" fg:w="1"/><text x="73.1083%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.8583%" y="293" width="0.0801%" height="15" fill="rgb(221,149,5)" fg:x="910" fg:w="1"/><text x="73.1083%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8583%" y="277" width="0.0801%" height="15" fill="rgb(219,224,51)" fg:x="910" fg:w="1"/><text x="73.1083%" y="287.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (588 samples, 47.08%)</title><rect x="26.0208%" y="501" width="47.0777%" height="15" fill="rgb(223,7,8)" fg:x="325" fg:w="588"/><text x="26.2708%" y="511.50">&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replie..</text></g><g><title>plugins_core::looking::model::qualify_name (585 samples, 46.84%)</title><rect x="26.2610%" y="485" width="46.8375%" height="15" fill="rgb(241,217,22)" fg:x="328" fg:w="585"/><text x="26.5110%" y="495.50">plugins_core::looking::model::qualify_name</text></g><g><title>indefinite::indefinite (585 samples, 46.84%)</title><rect x="26.2610%" y="469" width="46.8375%" height="15" fill="rgb(248,209,0)" fg:x="328" fg:w="585"/><text x="26.5110%" y="479.50">indefinite::indefinite</text></g><g><title>indefinite::methods::indefinite (585 samples, 46.84%)</title><rect x="26.2610%" y="453" width="46.8375%" height="15" fill="rgb(217,205,4)" fg:x="328" fg:w="585"/><text x="26.5110%" y="463.50">indefinite::methods::indefinite</text></g><g><title>indefinite::methods::apply_rules (584 samples, 46.76%)</title><rect x="26.3411%" y="437" width="46.7574%" height="15" fill="rgb(228,124,39)" fg:x="329" fg:w="584"/><text x="26.5911%" y="447.50">indefinite::methods::apply_rules</text></g><g><title>indefinite::rules::other::Other::run (67 samples, 5.36%)</title><rect x="67.7342%" y="421" width="5.3643%" height="15" fill="rgb(250,116,42)" fg:x="846" fg:w="67"/><text x="67.9842%" y="431.50">indefin..</text></g><g><title>indefinite::helper::Helper::starts_with_vowel (66 samples, 5.28%)</title><rect x="67.8143%" y="405" width="5.2842%" height="15" fill="rgb(223,202,9)" fg:x="847" fg:w="66"/><text x="68.0643%" y="415.50">indefi..</text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get_slow (12 samples, 0.96%)</title><rect x="72.1377%" y="389" width="0.9608%" height="15" fill="rgb(242,222,40)" fg:x="901" fg:w="12"/><text x="72.3877%" y="399.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir::{{closure}} (12 samples, 0.96%)</title><rect x="72.1377%" y="373" width="0.9608%" height="15" fill="rgb(229,99,46)" fg:x="901" fg:w="12"/><text x="72.3877%" y="383.50"></text></g><g><title>&lt;regex_automata::meta::strategy::ReverseAnchored as regex_automata::meta::strategy::Strategy&gt;::create_cache (12 samples, 0.96%)</title><rect x="72.1377%" y="357" width="0.9608%" height="15" fill="rgb(225,56,46)" fg:x="901" fg:w="12"/><text x="72.3877%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::PikeVM::create_cache (2 samples, 0.16%)</title><rect x="72.9384%" y="341" width="0.1601%" height="15" fill="rgb(227,94,5)" fg:x="911" fg:w="2"/><text x="73.1884%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::reset (2 samples, 0.16%)</title><rect x="72.9384%" y="325" width="0.1601%" height="15" fill="rgb(205,112,38)" fg:x="911" fg:w="2"/><text x="73.1884%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="72.9384%" y="309" width="0.1601%" height="15" fill="rgb(231,133,46)" fg:x="911" fg:w="2"/><text x="73.1884%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.0184%" y="293" width="0.0801%" height="15" fill="rgb(217,16,9)" fg:x="912" fg:w="1"/><text x="73.2684%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0184%" y="277" width="0.0801%" height="15" fill="rgb(249,173,9)" fg:x="912" fg:w="1"/><text x="73.2684%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="73.0985%" y="501" width="0.0801%" height="15" fill="rgb(205,163,53)" fg:x="913" fg:w="1"/><text x="73.3485%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.0985%" y="485" width="0.0801%" height="15" fill="rgb(217,54,41)" fg:x="913" fg:w="1"/><text x="73.3485%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0985%" y="469" width="0.0801%" height="15" fill="rgb(228,216,12)" fg:x="913" fg:w="1"/><text x="73.3485%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="73.1785%" y="501" width="0.0801%" height="15" fill="rgb(244,228,15)" fg:x="914" fg:w="1"/><text x="73.4285%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="73.1785%" y="485" width="0.0801%" height="15" fill="rgb(221,176,53)" fg:x="914" fg:w="1"/><text x="73.4285%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="73.2586%" y="469" width="0.0801%" height="15" fill="rgb(205,94,34)" fg:x="915" fg:w="1"/><text x="73.5086%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.3387%" y="341" width="0.0801%" height="15" fill="rgb(213,110,48)" fg:x="916" fg:w="1"/><text x="73.5887%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.3387%" y="325" width="0.0801%" height="15" fill="rgb(236,142,28)" fg:x="916" fg:w="1"/><text x="73.5887%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="73.3387%" y="309" width="0.0801%" height="15" fill="rgb(225,135,29)" fg:x="916" fg:w="1"/><text x="73.5887%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="73.3387%" y="293" width="0.0801%" height="15" fill="rgb(252,45,31)" fg:x="916" fg:w="1"/><text x="73.5887%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="73.3387%" y="277" width="0.0801%" height="15" fill="rgb(211,187,50)" fg:x="916" fg:w="1"/><text x="73.5887%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="73.3387%" y="261" width="0.0801%" height="15" fill="rgb(229,109,7)" fg:x="916" fg:w="1"/><text x="73.5887%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="73.3387%" y="245" width="0.0801%" height="15" fill="rgb(251,131,51)" fg:x="916" fg:w="1"/><text x="73.5887%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="73.3387%" y="229" width="0.0801%" height="15" fill="rgb(251,180,35)" fg:x="916" fg:w="1"/><text x="73.5887%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.3387%" y="213" width="0.0801%" height="15" fill="rgb(211,46,32)" fg:x="916" fg:w="1"/><text x="73.5887%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="73.3387%" y="197" width="0.0801%" height="15" fill="rgb(248,123,17)" fg:x="916" fg:w="1"/><text x="73.5887%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="73.3387%" y="181" width="0.0801%" height="15" fill="rgb(227,141,18)" fg:x="916" fg:w="1"/><text x="73.5887%" y="191.50"></text></g><g><title>kernel::model::EntityRef::into_entry (3 samples, 0.24%)</title><rect x="73.2586%" y="501" width="0.2402%" height="15" fill="rgb(216,102,9)" fg:x="915" fg:w="3"/><text x="73.5086%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="73.2586%" y="485" width="0.2402%" height="15" fill="rgb(253,47,13)" fg:x="915" fg:w="3"/><text x="73.5086%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="73.3387%" y="469" width="0.1601%" height="15" fill="rgb(226,93,23)" fg:x="916" fg:w="2"/><text x="73.5887%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="73.3387%" y="453" width="0.1601%" height="15" fill="rgb(247,104,17)" fg:x="916" fg:w="2"/><text x="73.5887%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="73.3387%" y="437" width="0.1601%" height="15" fill="rgb(233,203,26)" fg:x="916" fg:w="2"/><text x="73.5887%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="73.3387%" y="421" width="0.1601%" height="15" fill="rgb(244,98,49)" fg:x="916" fg:w="2"/><text x="73.5887%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="73.3387%" y="405" width="0.1601%" height="15" fill="rgb(235,134,22)" fg:x="916" fg:w="2"/><text x="73.5887%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="73.3387%" y="389" width="0.1601%" height="15" fill="rgb(221,70,32)" fg:x="916" fg:w="2"/><text x="73.5887%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="73.3387%" y="373" width="0.1601%" height="15" fill="rgb(238,15,50)" fg:x="916" fg:w="2"/><text x="73.5887%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="73.3387%" y="357" width="0.1601%" height="15" fill="rgb(215,221,48)" fg:x="916" fg:w="2"/><text x="73.5887%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.4187%" y="341" width="0.0801%" height="15" fill="rgb(236,73,3)" fg:x="917" fg:w="1"/><text x="73.6687%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="73.4187%" y="325" width="0.0801%" height="15" fill="rgb(250,107,11)" fg:x="917" fg:w="1"/><text x="73.6687%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="73.4187%" y="309" width="0.0801%" height="15" fill="rgb(242,39,14)" fg:x="917" fg:w="1"/><text x="73.6687%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.4187%" y="293" width="0.0801%" height="15" fill="rgb(248,164,37)" fg:x="917" fg:w="1"/><text x="73.6687%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.4187%" y="277" width="0.0801%" height="15" fill="rgb(217,60,12)" fg:x="917" fg:w="1"/><text x="73.6687%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.4187%" y="261" width="0.0801%" height="15" fill="rgb(240,125,29)" fg:x="917" fg:w="1"/><text x="73.6687%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.4187%" y="245" width="0.0801%" height="15" fill="rgb(208,207,28)" fg:x="917" fg:w="1"/><text x="73.6687%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="73.4187%" y="229" width="0.0801%" height="15" fill="rgb(209,159,27)" fg:x="917" fg:w="1"/><text x="73.6687%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="73.4187%" y="213" width="0.0801%" height="15" fill="rgb(251,176,53)" fg:x="917" fg:w="1"/><text x="73.6687%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="73.4187%" y="197" width="0.0801%" height="15" fill="rgb(211,85,7)" fg:x="917" fg:w="1"/><text x="73.6687%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="73.4187%" y="181" width="0.0801%" height="15" fill="rgb(216,64,54)" fg:x="917" fg:w="1"/><text x="73.6687%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="73.4187%" y="165" width="0.0801%" height="15" fill="rgb(217,54,24)" fg:x="917" fg:w="1"/><text x="73.6687%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="73.4187%" y="149" width="0.0801%" height="15" fill="rgb(208,206,53)" fg:x="917" fg:w="1"/><text x="73.6687%" y="159.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="73.5789%" y="357" width="0.2402%" height="15" fill="rgb(251,74,39)" fg:x="919" fg:w="3"/><text x="73.8289%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="73.5789%" y="341" width="0.2402%" height="15" fill="rgb(226,47,5)" fg:x="919" fg:w="3"/><text x="73.8289%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="73.5789%" y="325" width="0.2402%" height="15" fill="rgb(234,111,33)" fg:x="919" fg:w="3"/><text x="73.8289%" y="335.50"></text></g><g><title>rusqlite::row::Rows::next (3 samples, 0.24%)</title><rect x="73.5789%" y="309" width="0.2402%" height="15" fill="rgb(251,14,10)" fg:x="919" fg:w="3"/><text x="73.8289%" y="319.50"></text></g><g><title>sqlite3_step (2 samples, 0.16%)</title><rect x="73.6589%" y="293" width="0.1601%" height="15" fill="rgb(232,43,0)" fg:x="920" fg:w="2"/><text x="73.9089%" y="303.50"></text></g><g><title>sqlite3VdbeExec (2 samples, 0.16%)</title><rect x="73.6589%" y="277" width="0.1601%" height="15" fill="rgb(222,68,43)" fg:x="920" fg:w="2"/><text x="73.9089%" y="287.50"></text></g><g><title>sqlite3BtreeIndexMoveto (1 samples, 0.08%)</title><rect x="73.7390%" y="261" width="0.0801%" height="15" fill="rgb(217,24,23)" fg:x="921" fg:w="1"/><text x="73.9890%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8191%" y="261" width="0.0801%" height="15" fill="rgb(229,209,14)" fg:x="922" fg:w="1"/><text x="74.0691%" y="271.50"></text></g><g><title>sqlite3VdbeDelete (2 samples, 0.16%)</title><rect x="73.8191%" y="309" width="0.1601%" height="15" fill="rgb(250,149,48)" fg:x="922" fg:w="2"/><text x="74.0691%" y="319.50"></text></g><g><title>sqlite3VdbeClearObject (2 samples, 0.16%)</title><rect x="73.8191%" y="293" width="0.1601%" height="15" fill="rgb(210,120,37)" fg:x="922" fg:w="2"/><text x="74.0691%" y="303.50"></text></g><g><title>sqlite3_free (2 samples, 0.16%)</title><rect x="73.8191%" y="277" width="0.1601%" height="15" fill="rgb(210,21,8)" fg:x="922" fg:w="2"/><text x="74.0691%" y="287.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="73.8991%" y="261" width="0.0801%" height="15" fill="rgb(243,145,7)" fg:x="923" fg:w="1"/><text x="74.1491%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (3 samples, 0.24%)</title><rect x="73.8191%" y="357" width="0.2402%" height="15" fill="rgb(238,178,32)" fg:x="922" fg:w="3"/><text x="74.0691%" y="367.50"></text></g><g><title>sqlite3_finalize (3 samples, 0.24%)</title><rect x="73.8191%" y="341" width="0.2402%" height="15" fill="rgb(222,4,10)" fg:x="922" fg:w="3"/><text x="74.0691%" y="351.50"></text></g><g><title>sqlite3VdbeFinalize (3 samples, 0.24%)</title><rect x="73.8191%" y="325" width="0.2402%" height="15" fill="rgb(239,7,37)" fg:x="922" fg:w="3"/><text x="74.0691%" y="335.50"></text></g><g><title>sqlite3VdbeReset (1 samples, 0.08%)</title><rect x="73.9792%" y="309" width="0.0801%" height="15" fill="rgb(215,31,37)" fg:x="924" fg:w="1"/><text x="74.2292%" y="319.50"></text></g><g><title>sqlite3VdbeHalt (1 samples, 0.08%)</title><rect x="73.9792%" y="293" width="0.0801%" height="15" fill="rgb(224,83,33)" fg:x="924" fg:w="1"/><text x="74.2292%" y="303.50"></text></g><g><title>sqlite3GetToken (1 samples, 0.08%)</title><rect x="74.0592%" y="309" width="0.0801%" height="15" fill="rgb(239,55,3)" fg:x="925" fg:w="1"/><text x="74.3092%" y="319.50"></text></g><g><title>sqlite3ExprCodeExprList (1 samples, 0.08%)</title><rect x="74.1393%" y="277" width="0.0801%" height="15" fill="rgb(247,92,11)" fg:x="926" fg:w="1"/><text x="74.3893%" y="287.50"></text></g><g><title>sqlite3ExprCodeTarget (1 samples, 0.08%)</title><rect x="74.1393%" y="261" width="0.0801%" height="15" fill="rgb(239,200,7)" fg:x="926" fg:w="1"/><text x="74.3893%" y="271.50"></text></g><g><title>sqlite3ExprCodeGetColumn (1 samples, 0.08%)</title><rect x="74.1393%" y="245" width="0.0801%" height="15" fill="rgb(227,115,8)" fg:x="926" fg:w="1"/><text x="74.3893%" y="255.50"></text></g><g><title>sqlite3ColumnDefault (1 samples, 0.08%)</title><rect x="74.1393%" y="229" width="0.0801%" height="15" fill="rgb(215,189,27)" fg:x="926" fg:w="1"/><text x="74.3893%" y="239.50"></text></g><g><title>sqlite3VdbeMemSetStr (2 samples, 0.16%)</title><rect x="74.2994%" y="261" width="0.1601%" height="15" fill="rgb(251,216,39)" fg:x="928" fg:w="2"/><text x="74.5494%" y="271.50"></text></g><g><title>sqlite3VdbeMemGrow (2 samples, 0.16%)</title><rect x="74.2994%" y="245" width="0.1601%" height="15" fill="rgb(207,29,47)" fg:x="928" fg:w="2"/><text x="74.5494%" y="255.50"></text></g><g><title>sqlite3Malloc (2 samples, 0.16%)</title><rect x="74.2994%" y="229" width="0.1601%" height="15" fill="rgb(210,71,34)" fg:x="928" fg:w="2"/><text x="74.5494%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.2994%" y="213" width="0.1601%" height="15" fill="rgb(253,217,51)" fg:x="928" fg:w="2"/><text x="74.5494%" y="223.50"></text></g><g><title>sqlite3GenerateColumnNames (4 samples, 0.32%)</title><rect x="74.2194%" y="277" width="0.3203%" height="15" fill="rgb(222,117,46)" fg:x="927" fg:w="4"/><text x="74.4694%" y="287.50"></text></g><g><title>sqlite3VdbeSetNumCols (1 samples, 0.08%)</title><rect x="74.4596%" y="261" width="0.0801%" height="15" fill="rgb(226,132,6)" fg:x="930" fg:w="1"/><text x="74.7096%" y="271.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="74.4596%" y="245" width="0.0801%" height="15" fill="rgb(254,145,51)" fg:x="930" fg:w="1"/><text x="74.7096%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4596%" y="229" width="0.0801%" height="15" fill="rgb(231,199,27)" fg:x="930" fg:w="1"/><text x="74.7096%" y="239.50"></text></g><g><title>sqlite3SelectPrep (1 samples, 0.08%)</title><rect x="74.5396%" y="277" width="0.0801%" height="15" fill="rgb(245,158,14)" fg:x="931" fg:w="1"/><text x="74.7896%" y="287.50"></text></g><g><title>sqlite3WalkSelect (1 samples, 0.08%)</title><rect x="74.5396%" y="261" width="0.0801%" height="15" fill="rgb(240,113,14)" fg:x="931" fg:w="1"/><text x="74.7896%" y="271.50"></text></g><g><title>sqlite3LocateTable (1 samples, 0.08%)</title><rect x="74.5396%" y="245" width="0.0801%" height="15" fill="rgb(210,20,13)" fg:x="931" fg:w="1"/><text x="74.7896%" y="255.50"></text></g><g><title>sqlite3FindTable (1 samples, 0.08%)</title><rect x="74.5396%" y="229" width="0.0801%" height="15" fill="rgb(241,144,13)" fg:x="931" fg:w="1"/><text x="74.7896%" y="239.50"></text></g><g><title>sqlite3HashFind (1 samples, 0.08%)</title><rect x="74.5396%" y="213" width="0.0801%" height="15" fill="rgb(235,43,34)" fg:x="931" fg:w="1"/><text x="74.7896%" y="223.50"></text></g><g><title>sqlite3StrICmp (1 samples, 0.08%)</title><rect x="74.5396%" y="197" width="0.0801%" height="15" fill="rgb(208,36,20)" fg:x="931" fg:w="1"/><text x="74.7896%" y="207.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::load (16 samples, 1.28%)</title><rect x="73.5789%" y="373" width="1.2810%" height="15" fill="rgb(239,204,10)" fg:x="919" fg:w="16"/><text x="73.8289%" y="383.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (10 samples, 0.80%)</title><rect x="74.0592%" y="357" width="0.8006%" height="15" fill="rgb(217,84,43)" fg:x="925" fg:w="10"/><text x="74.3092%" y="367.50"></text></g><g><title>sqlite3_prepare_v2 (10 samples, 0.80%)</title><rect x="74.0592%" y="341" width="0.8006%" height="15" fill="rgb(241,170,50)" fg:x="925" fg:w="10"/><text x="74.3092%" y="351.50"></text></g><g><title>sqlite3RunParser (10 samples, 0.80%)</title><rect x="74.0592%" y="325" width="0.8006%" height="15" fill="rgb(226,205,29)" fg:x="925" fg:w="10"/><text x="74.3092%" y="335.50"></text></g><g><title>sqlite3Parser (9 samples, 0.72%)</title><rect x="74.1393%" y="309" width="0.7206%" height="15" fill="rgb(233,113,1)" fg:x="926" fg:w="9"/><text x="74.3893%" y="319.50"></text></g><g><title>sqlite3Select (9 samples, 0.72%)</title><rect x="74.1393%" y="293" width="0.7206%" height="15" fill="rgb(253,98,13)" fg:x="926" fg:w="9"/><text x="74.3893%" y="303.50"></text></g><g><title>sqlite3WhereBegin (3 samples, 0.24%)</title><rect x="74.6197%" y="277" width="0.2402%" height="15" fill="rgb(211,115,12)" fg:x="932" fg:w="3"/><text x="74.8697%" y="287.50"></text></g><g><title>sqlite3WhereCodeOneLoopStart (1 samples, 0.08%)</title><rect x="74.7798%" y="261" width="0.0801%" height="15" fill="rgb(208,12,16)" fg:x="934" fg:w="1"/><text x="75.0298%" y="271.50"></text></g><g><title>sqlite3VdbeAddOp4 (1 samples, 0.08%)</title><rect x="74.7798%" y="245" width="0.0801%" height="15" fill="rgb(237,193,54)" fg:x="934" fg:w="1"/><text x="75.0298%" y="255.50"></text></g><g><title>sqlite3DbStrNDup (1 samples, 0.08%)</title><rect x="74.7798%" y="229" width="0.0801%" height="15" fill="rgb(243,22,42)" fg:x="934" fg:w="1"/><text x="75.0298%" y="239.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="74.7798%" y="213" width="0.0801%" height="15" fill="rgb(233,151,36)" fg:x="934" fg:w="1"/><text x="75.0298%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7798%" y="197" width="0.0801%" height="15" fill="rgb(237,57,45)" fg:x="934" fg:w="1"/><text x="75.0298%" y="207.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="74.8599%" y="373" width="0.0801%" height="15" fill="rgb(221,88,17)" fg:x="935" fg:w="1"/><text x="75.1099%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.8599%" y="357" width="0.0801%" height="15" fill="rgb(230,79,15)" fg:x="935" fg:w="1"/><text x="75.1099%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.8599%" y="341" width="0.0801%" height="15" fill="rgb(213,57,13)" fg:x="935" fg:w="1"/><text x="75.1099%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="74.9400%" y="357" width="0.0801%" height="15" fill="rgb(222,116,39)" fg:x="936" fg:w="1"/><text x="75.1900%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="74.9400%" y="341" width="0.0801%" height="15" fill="rgb(245,107,2)" fg:x="936" fg:w="1"/><text x="75.1900%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.9400%" y="325" width="0.0801%" height="15" fill="rgb(238,1,10)" fg:x="936" fg:w="1"/><text x="75.1900%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.9400%" y="309" width="0.0801%" height="15" fill="rgb(249,4,48)" fg:x="936" fg:w="1"/><text x="75.1900%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.9400%" y="293" width="0.0801%" height="15" fill="rgb(223,151,18)" fg:x="936" fg:w="1"/><text x="75.1900%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.9400%" y="277" width="0.0801%" height="15" fill="rgb(227,65,43)" fg:x="936" fg:w="1"/><text x="75.1900%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.9400%" y="261" width="0.0801%" height="15" fill="rgb(218,40,45)" fg:x="936" fg:w="1"/><text x="75.1900%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.0200%" y="277" width="0.0801%" height="15" fill="rgb(252,121,31)" fg:x="937" fg:w="1"/><text x="75.2700%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1801%" y="213" width="0.0801%" height="15" fill="rgb(219,158,43)" fg:x="939" fg:w="1"/><text x="75.4301%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (22 samples, 1.76%)</title><rect x="73.5789%" y="469" width="1.7614%" height="15" fill="rgb(231,162,42)" fg:x="919" fg:w="22"/><text x="73.8289%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (22 samples, 1.76%)</title><rect x="73.5789%" y="453" width="1.7614%" height="15" fill="rgb(217,179,25)" fg:x="919" fg:w="22"/><text x="73.8289%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 1.76%)</title><rect x="73.5789%" y="437" width="1.7614%" height="15" fill="rgb(206,212,31)" fg:x="919" fg:w="22"/><text x="73.8289%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 1.76%)</title><rect x="73.5789%" y="421" width="1.7614%" height="15" fill="rgb(235,144,12)" fg:x="919" fg:w="22"/><text x="73.8289%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (22 samples, 1.76%)</title><rect x="73.5789%" y="405" width="1.7614%" height="15" fill="rgb(213,51,10)" fg:x="919" fg:w="22"/><text x="73.8289%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (22 samples, 1.76%)</title><rect x="73.5789%" y="389" width="1.7614%" height="15" fill="rgb(231,145,14)" fg:x="919" fg:w="22"/><text x="73.8289%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity (5 samples, 0.40%)</title><rect x="74.9400%" y="373" width="0.4003%" height="15" fill="rgb(235,15,28)" fg:x="936" fg:w="5"/><text x="75.1900%" y="383.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="75.0200%" y="357" width="0.3203%" height="15" fill="rgb(237,206,10)" fg:x="937" fg:w="4"/><text x="75.2700%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="75.0200%" y="341" width="0.3203%" height="15" fill="rgb(236,227,27)" fg:x="937" fg:w="4"/><text x="75.2700%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="75.0200%" y="325" width="0.3203%" height="15" fill="rgb(246,83,35)" fg:x="937" fg:w="4"/><text x="75.2700%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="75.0200%" y="309" width="0.3203%" height="15" fill="rgb(220,136,24)" fg:x="937" fg:w="4"/><text x="75.2700%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="75.0200%" y="293" width="0.3203%" height="15" fill="rgb(217,3,25)" fg:x="937" fg:w="4"/><text x="75.2700%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.1001%" y="277" width="0.2402%" height="15" fill="rgb(239,24,14)" fg:x="938" fg:w="3"/><text x="75.3501%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.1001%" y="261" width="0.2402%" height="15" fill="rgb(244,16,53)" fg:x="938" fg:w="3"/><text x="75.3501%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.1001%" y="245" width="0.2402%" height="15" fill="rgb(208,175,44)" fg:x="938" fg:w="3"/><text x="75.3501%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.1001%" y="229" width="0.2402%" height="15" fill="rgb(252,18,48)" fg:x="938" fg:w="3"/><text x="75.3501%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.2602%" y="213" width="0.0801%" height="15" fill="rgb(234,199,32)" fg:x="940" fg:w="1"/><text x="75.5102%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.2602%" y="197" width="0.0801%" height="15" fill="rgb(225,77,54)" fg:x="940" fg:w="1"/><text x="75.5102%" y="207.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="75.3403%" y="469" width="0.0801%" height="15" fill="rgb(225,42,25)" fg:x="941" fg:w="1"/><text x="75.5903%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="75.3403%" y="453" width="0.0801%" height="15" fill="rgb(242,227,46)" fg:x="941" fg:w="1"/><text x="75.5903%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.3403%" y="437" width="0.0801%" height="15" fill="rgb(246,197,35)" fg:x="941" fg:w="1"/><text x="75.5903%" y="447.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::scopes::Action&gt;::perform (619 samples, 49.56%)</title><rect x="25.9408%" y="533" width="49.5596%" height="15" fill="rgb(215,159,26)" fg:x="324" fg:w="619"/><text x="26.1908%" y="543.50">&lt;plugins_core::looking::actions::LookAction as kernel::scopes::Action&gt;::perform</text></g><g><title>plugins_core::looking::model::new_area_observation (619 samples, 49.56%)</title><rect x="25.9408%" y="517" width="49.5596%" height="15" fill="rgb(212,194,50)" fg:x="324" fg:w="619"/><text x="26.1908%" y="527.50">plugins_core::looking::model::new_area_observation</text></g><g><title>kernel::model::entry::Entry::scope (25 samples, 2.00%)</title><rect x="73.4988%" y="501" width="2.0016%" height="15" fill="rgb(246,132,1)" fg:x="918" fg:w="25"/><text x="73.7488%" y="511.50">k..</text></g><g><title>kernel::model::Entity::load_scope (25 samples, 2.00%)</title><rect x="73.4988%" y="485" width="2.0016%" height="15" fill="rgb(217,71,7)" fg:x="918" fg:w="25"/><text x="73.7488%" y="495.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.4203%" y="469" width="0.0801%" height="15" fill="rgb(252,59,32)" fg:x="942" fg:w="1"/><text x="75.6703%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4203%" y="453" width="0.0801%" height="15" fill="rgb(253,204,25)" fg:x="942" fg:w="1"/><text x="75.6703%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.4203%" y="437" width="0.0801%" height="15" fill="rgb(232,21,16)" fg:x="942" fg:w="1"/><text x="75.6703%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.4203%" y="421" width="0.0801%" height="15" fill="rgb(248,90,29)" fg:x="942" fg:w="1"/><text x="75.6703%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.4203%" y="405" width="0.0801%" height="15" fill="rgb(249,223,7)" fg:x="942" fg:w="1"/><text x="75.6703%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="75.5004%" y="533" width="0.1601%" height="15" fill="rgb(231,119,42)" fg:x="943" fg:w="2"/><text x="75.7504%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="75.5004%" y="517" width="0.1601%" height="15" fill="rgb(215,41,35)" fg:x="943" fg:w="2"/><text x="75.7504%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="75.5004%" y="501" width="0.1601%" height="15" fill="rgb(220,44,45)" fg:x="943" fg:w="2"/><text x="75.7504%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="75.5004%" y="485" width="0.1601%" height="15" fill="rgb(253,197,36)" fg:x="943" fg:w="2"/><text x="75.7504%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="75.5004%" y="469" width="0.1601%" height="15" fill="rgb(245,225,54)" fg:x="943" fg:w="2"/><text x="75.7504%" y="479.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="75.5004%" y="453" width="0.1601%" height="15" fill="rgb(239,94,37)" fg:x="943" fg:w="2"/><text x="75.7504%" y="463.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="75.5805%" y="437" width="0.0801%" height="15" fill="rgb(242,217,10)" fg:x="944" fg:w="1"/><text x="75.8305%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.5805%" y="421" width="0.0801%" height="15" fill="rgb(250,193,7)" fg:x="944" fg:w="1"/><text x="75.8305%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.5805%" y="405" width="0.0801%" height="15" fill="rgb(230,104,19)" fg:x="944" fg:w="1"/><text x="75.8305%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="75.5805%" y="389" width="0.0801%" height="15" fill="rgb(230,181,4)" fg:x="944" fg:w="1"/><text x="75.8305%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="75.5805%" y="373" width="0.0801%" height="15" fill="rgb(216,219,49)" fg:x="944" fg:w="1"/><text x="75.8305%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.5805%" y="357" width="0.0801%" height="15" fill="rgb(254,144,0)" fg:x="944" fg:w="1"/><text x="75.8305%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.5805%" y="341" width="0.0801%" height="15" fill="rgb(205,209,38)" fg:x="944" fg:w="1"/><text x="75.8305%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="75.5805%" y="325" width="0.0801%" height="15" fill="rgb(240,21,42)" fg:x="944" fg:w="1"/><text x="75.8305%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="75.5805%" y="309" width="0.0801%" height="15" fill="rgb(241,132,3)" fg:x="944" fg:w="1"/><text x="75.8305%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="75.5805%" y="293" width="0.0801%" height="15" fill="rgb(225,14,2)" fg:x="944" fg:w="1"/><text x="75.8305%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="75.5805%" y="277" width="0.0801%" height="15" fill="rgb(210,141,35)" fg:x="944" fg:w="1"/><text x="75.8305%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="75.5805%" y="261" width="0.0801%" height="15" fill="rgb(251,14,44)" fg:x="944" fg:w="1"/><text x="75.8305%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="75.5805%" y="245" width="0.0801%" height="15" fill="rgb(247,48,18)" fg:x="944" fg:w="1"/><text x="75.8305%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.5805%" y="229" width="0.0801%" height="15" fill="rgb(225,0,40)" fg:x="944" fg:w="1"/><text x="75.8305%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="75.5805%" y="213" width="0.0801%" height="15" fill="rgb(221,31,33)" fg:x="944" fg:w="1"/><text x="75.8305%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.5805%" y="197" width="0.0801%" height="15" fill="rgb(237,42,40)" fg:x="944" fg:w="1"/><text x="75.8305%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5805%" y="181" width="0.0801%" height="15" fill="rgb(233,51,29)" fg:x="944" fg:w="1"/><text x="75.8305%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="75.6605%" y="533" width="0.0801%" height="15" fill="rgb(226,58,20)" fg:x="945" fg:w="1"/><text x="75.9105%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="75.6605%" y="517" width="0.0801%" height="15" fill="rgb(208,98,7)" fg:x="945" fg:w="1"/><text x="75.9105%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.6605%" y="501" width="0.0801%" height="15" fill="rgb(228,143,44)" fg:x="945" fg:w="1"/><text x="75.9105%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="75.7406%" y="469" width="0.0801%" height="15" fill="rgb(246,55,38)" fg:x="946" fg:w="1"/><text x="75.9906%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.7406%" y="453" width="0.0801%" height="15" fill="rgb(247,87,16)" fg:x="946" fg:w="1"/><text x="75.9906%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="75.7406%" y="437" width="0.0801%" height="15" fill="rgb(234,129,42)" fg:x="946" fg:w="1"/><text x="75.9906%" y="447.50"></text></g><g><title>rusqlite::row::Rows::next (1 samples, 0.08%)</title><rect x="75.7406%" y="421" width="0.0801%" height="15" fill="rgb(220,82,16)" fg:x="946" fg:w="1"/><text x="75.9906%" y="431.50"></text></g><g><title>sqlite3_step (1 samples, 0.08%)</title><rect x="75.7406%" y="405" width="0.0801%" height="15" fill="rgb(211,88,4)" fg:x="946" fg:w="1"/><text x="75.9906%" y="415.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.08%)</title><rect x="75.7406%" y="389" width="0.0801%" height="15" fill="rgb(248,151,21)" fg:x="946" fg:w="1"/><text x="75.9906%" y="399.50"></text></g><g><title>sqlite3DbMallocRawNN (1 samples, 0.08%)</title><rect x="75.7406%" y="373" width="0.0801%" height="15" fill="rgb(238,163,6)" fg:x="946" fg:w="1"/><text x="75.9906%" y="383.50"></text></g><g><title>pthread_mutex_timedlock (1 samples, 0.08%)</title><rect x="75.8207%" y="437" width="0.0801%" height="15" fill="rgb(209,183,11)" fg:x="947" fg:w="1"/><text x="76.0707%" y="447.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="75.9007%" y="405" width="0.0801%" height="15" fill="rgb(219,37,20)" fg:x="948" fg:w="1"/><text x="76.1507%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9007%" y="389" width="0.0801%" height="15" fill="rgb(210,158,4)" fg:x="948" fg:w="1"/><text x="76.1507%" y="399.50"></text></g><g><title>sqlite3VdbeMemSetStr (1 samples, 0.08%)</title><rect x="75.9808%" y="373" width="0.0801%" height="15" fill="rgb(221,167,53)" fg:x="949" fg:w="1"/><text x="76.2308%" y="383.50"></text></g><g><title>sqlite3GenerateColumnNames (2 samples, 0.16%)</title><rect x="75.9808%" y="389" width="0.1601%" height="15" fill="rgb(237,151,45)" fg:x="949" fg:w="2"/><text x="76.2308%" y="399.50"></text></g><g><title>sqlite3VdbeSetNumCols (1 samples, 0.08%)</title><rect x="76.0608%" y="373" width="0.0801%" height="15" fill="rgb(231,39,3)" fg:x="950" fg:w="1"/><text x="76.3108%" y="383.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="76.0608%" y="357" width="0.0801%" height="15" fill="rgb(212,167,28)" fg:x="950" fg:w="1"/><text x="76.3108%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.0608%" y="341" width="0.0801%" height="15" fill="rgb(232,178,8)" fg:x="950" fg:w="1"/><text x="76.3108%" y="351.50"></text></g><g><title>sqlite3WhereCodeOneLoopStart (1 samples, 0.08%)</title><rect x="76.1409%" y="373" width="0.0801%" height="15" fill="rgb(225,151,20)" fg:x="951" fg:w="1"/><text x="76.3909%" y="383.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="76.1409%" y="357" width="0.0801%" height="15" fill="rgb(238,3,37)" fg:x="951" fg:w="1"/><text x="76.3909%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1409%" y="341" width="0.0801%" height="15" fill="rgb(251,147,42)" fg:x="951" fg:w="1"/><text x="76.3909%" y="351.50"></text></g><g><title>sqlite3WhereBegin (2 samples, 0.16%)</title><rect x="76.1409%" y="389" width="0.1601%" height="15" fill="rgb(208,173,10)" fg:x="951" fg:w="2"/><text x="76.3909%" y="399.50"></text></g><g><title>sqlite3WhereExprAnalyze (1 samples, 0.08%)</title><rect x="76.2210%" y="373" width="0.0801%" height="15" fill="rgb(246,225,4)" fg:x="952" fg:w="1"/><text x="76.4710%" y="383.50"></text></g><g><title>sqlite3WhereExprUsageNN (1 samples, 0.08%)</title><rect x="76.2210%" y="357" width="0.0801%" height="15" fill="rgb(248,102,6)" fg:x="952" fg:w="1"/><text x="76.4710%" y="367.50"></text></g><g><title>sqlite3WhereExprUsageNN (1 samples, 0.08%)</title><rect x="76.2210%" y="341" width="0.0801%" height="15" fill="rgb(232,6,21)" fg:x="952" fg:w="1"/><text x="76.4710%" y="351.50"></text></g><g><title>sqlite3Select (5 samples, 0.40%)</title><rect x="75.9808%" y="405" width="0.4003%" height="15" fill="rgb(221,179,22)" fg:x="949" fg:w="5"/><text x="76.2308%" y="415.50"></text></g><g><title>sqlite3WhereEnd (1 samples, 0.08%)</title><rect x="76.3010%" y="389" width="0.0801%" height="15" fill="rgb(252,50,20)" fg:x="953" fg:w="1"/><text x="76.5510%" y="399.50"></text></g><g><title>sqlite3Parser (7 samples, 0.56%)</title><rect x="75.9007%" y="421" width="0.5604%" height="15" fill="rgb(222,56,38)" fg:x="948" fg:w="7"/><text x="76.1507%" y="431.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="76.3811%" y="405" width="0.0801%" height="15" fill="rgb(206,193,29)" fg:x="954" fg:w="1"/><text x="76.6311%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.3811%" y="389" width="0.0801%" height="15" fill="rgb(239,192,45)" fg:x="954" fg:w="1"/><text x="76.6311%" y="399.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::load (10 samples, 0.80%)</title><rect x="75.7406%" y="485" width="0.8006%" height="15" fill="rgb(254,18,36)" fg:x="946" fg:w="10"/><text x="75.9906%" y="495.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (9 samples, 0.72%)</title><rect x="75.8207%" y="469" width="0.7206%" height="15" fill="rgb(221,127,11)" fg:x="947" fg:w="9"/><text x="76.0707%" y="479.50"></text></g><g><title>sqlite3_prepare_v2 (9 samples, 0.72%)</title><rect x="75.8207%" y="453" width="0.7206%" height="15" fill="rgb(234,146,35)" fg:x="947" fg:w="9"/><text x="76.0707%" y="463.50"></text></g><g><title>sqlite3RunParser (8 samples, 0.64%)</title><rect x="75.9007%" y="437" width="0.6405%" height="15" fill="rgb(254,201,37)" fg:x="948" fg:w="8"/><text x="76.1507%" y="447.50"></text></g><g><title>sqlite3ParserAlloc (1 samples, 0.08%)</title><rect x="76.4612%" y="421" width="0.0801%" height="15" fill="rgb(211,202,23)" fg:x="955" fg:w="1"/><text x="76.7112%" y="431.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="76.4612%" y="405" width="0.0801%" height="15" fill="rgb(237,91,2)" fg:x="955" fg:w="1"/><text x="76.7112%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4612%" y="389" width="0.0801%" height="15" fill="rgb(226,228,36)" fg:x="955" fg:w="1"/><text x="76.7112%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (11 samples, 0.88%)</title><rect x="75.7406%" y="517" width="0.8807%" height="15" fill="rgb(213,63,50)" fg:x="946" fg:w="11"/><text x="75.9906%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (11 samples, 0.88%)</title><rect x="75.7406%" y="501" width="0.8807%" height="15" fill="rgb(235,194,19)" fg:x="946" fg:w="11"/><text x="75.9906%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity (1 samples, 0.08%)</title><rect x="76.5412%" y="485" width="0.0801%" height="15" fill="rgb(207,204,18)" fg:x="956" fg:w="1"/><text x="76.7912%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="76.5412%" y="469" width="0.0801%" height="15" fill="rgb(248,8,7)" fg:x="956" fg:w="1"/><text x="76.7912%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="76.5412%" y="453" width="0.0801%" height="15" fill="rgb(223,145,47)" fg:x="956" fg:w="1"/><text x="76.7912%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.5412%" y="437" width="0.0801%" height="15" fill="rgb(228,84,11)" fg:x="956" fg:w="1"/><text x="76.7912%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5412%" y="421" width="0.0801%" height="15" fill="rgb(218,76,45)" fg:x="956" fg:w="1"/><text x="76.7912%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.5412%" y="405" width="0.0801%" height="15" fill="rgb(223,80,15)" fg:x="956" fg:w="1"/><text x="76.7912%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5412%" y="389" width="0.0801%" height="15" fill="rgb(219,218,33)" fg:x="956" fg:w="1"/><text x="76.7912%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.5412%" y="373" width="0.0801%" height="15" fill="rgb(208,51,11)" fg:x="956" fg:w="1"/><text x="76.7912%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5412%" y="357" width="0.0801%" height="15" fill="rgb(229,165,39)" fg:x="956" fg:w="1"/><text x="76.7912%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.5412%" y="341" width="0.0801%" height="15" fill="rgb(241,100,24)" fg:x="956" fg:w="1"/><text x="76.7912%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5412%" y="325" width="0.0801%" height="15" fill="rgb(228,14,23)" fg:x="956" fg:w="1"/><text x="76.7912%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.5412%" y="309" width="0.0801%" height="15" fill="rgb(247,116,52)" fg:x="956" fg:w="1"/><text x="76.7912%" y="319.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="76.6213%" y="485" width="0.0801%" height="15" fill="rgb(216,149,33)" fg:x="957" fg:w="1"/><text x="76.8713%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="76.6213%" y="469" width="0.0801%" height="15" fill="rgb(238,142,29)" fg:x="957" fg:w="1"/><text x="76.8713%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="76.6213%" y="453" width="0.0801%" height="15" fill="rgb(224,83,40)" fg:x="957" fg:w="1"/><text x="76.8713%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="76.6213%" y="437" width="0.0801%" height="15" fill="rgb(234,165,11)" fg:x="957" fg:w="1"/><text x="76.8713%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="76.6213%" y="421" width="0.0801%" height="15" fill="rgb(215,96,23)" fg:x="957" fg:w="1"/><text x="76.8713%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.6213%" y="405" width="0.0801%" height="15" fill="rgb(233,179,26)" fg:x="957" fg:w="1"/><text x="76.8713%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.6213%" y="389" width="0.0801%" height="15" fill="rgb(225,129,33)" fg:x="957" fg:w="1"/><text x="76.8713%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="76.6213%" y="373" width="0.0801%" height="15" fill="rgb(237,49,13)" fg:x="957" fg:w="1"/><text x="76.8713%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="76.6213%" y="357" width="0.0801%" height="15" fill="rgb(211,3,31)" fg:x="957" fg:w="1"/><text x="76.8713%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.6213%" y="341" width="0.0801%" height="15" fill="rgb(216,152,19)" fg:x="957" fg:w="1"/><text x="76.8713%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.6213%" y="325" width="0.0801%" height="15" fill="rgb(251,121,35)" fg:x="957" fg:w="1"/><text x="76.8713%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.6213%" y="309" width="0.0801%" height="15" fill="rgb(210,217,47)" fg:x="957" fg:w="1"/><text x="76.8713%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="76.6213%" y="293" width="0.0801%" height="15" fill="rgb(244,116,22)" fg:x="957" fg:w="1"/><text x="76.8713%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="76.6213%" y="277" width="0.0801%" height="15" fill="rgb(228,17,21)" fg:x="957" fg:w="1"/><text x="76.8713%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="76.6213%" y="261" width="0.0801%" height="15" fill="rgb(240,149,34)" fg:x="957" fg:w="1"/><text x="76.8713%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="76.6213%" y="245" width="0.0801%" height="15" fill="rgb(208,125,47)" fg:x="957" fg:w="1"/><text x="76.8713%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.6213%" y="229" width="0.0801%" height="15" fill="rgb(249,186,39)" fg:x="957" fg:w="1"/><text x="76.8713%" y="239.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="76.7014%" y="341" width="0.0801%" height="15" fill="rgb(240,220,33)" fg:x="958" fg:w="1"/><text x="76.9514%" y="351.50"></text></g><g><title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="76.7014%" y="325" width="0.0801%" height="15" fill="rgb(243,110,23)" fg:x="958" fg:w="1"/><text x="76.9514%" y="335.50"></text></g><g><title>sqlite3Select (1 samples, 0.08%)</title><rect x="76.7814%" y="341" width="0.0801%" height="15" fill="rgb(219,163,46)" fg:x="959" fg:w="1"/><text x="77.0314%" y="351.50"></text></g><g><title>sqlite3WhereBegin (1 samples, 0.08%)</title><rect x="76.7814%" y="325" width="0.0801%" height="15" fill="rgb(216,126,30)" fg:x="959" fg:w="1"/><text x="77.0314%" y="335.50"></text></g><g><title>sqlite3WhereExprAnalyze (1 samples, 0.08%)</title><rect x="76.7814%" y="309" width="0.0801%" height="15" fill="rgb(208,139,11)" fg:x="959" fg:w="1"/><text x="77.0314%" y="319.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::load (3 samples, 0.24%)</title><rect x="76.7014%" y="421" width="0.2402%" height="15" fill="rgb(213,118,36)" fg:x="958" fg:w="3"/><text x="76.9514%" y="431.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (3 samples, 0.24%)</title><rect x="76.7014%" y="405" width="0.2402%" height="15" fill="rgb(226,43,17)" fg:x="958" fg:w="3"/><text x="76.9514%" y="415.50"></text></g><g><title>sqlite3_prepare_v2 (3 samples, 0.24%)</title><rect x="76.7014%" y="389" width="0.2402%" height="15" fill="rgb(254,217,4)" fg:x="958" fg:w="3"/><text x="76.9514%" y="399.50"></text></g><g><title>sqlite3RunParser (3 samples, 0.24%)</title><rect x="76.7014%" y="373" width="0.2402%" height="15" fill="rgb(210,134,47)" fg:x="958" fg:w="3"/><text x="76.9514%" y="383.50"></text></g><g><title>sqlite3Parser (3 samples, 0.24%)</title><rect x="76.7014%" y="357" width="0.2402%" height="15" fill="rgb(237,24,49)" fg:x="958" fg:w="3"/><text x="76.9514%" y="367.50"></text></g><g><title>sqlite3SrcListDelete (1 samples, 0.08%)</title><rect x="76.8615%" y="341" width="0.0801%" height="15" fill="rgb(251,39,46)" fg:x="960" fg:w="1"/><text x="77.1115%" y="351.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="76.8615%" y="325" width="0.0801%" height="15" fill="rgb(251,220,3)" fg:x="960" fg:w="1"/><text x="77.1115%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="76.9416%" y="389" width="0.1601%" height="15" fill="rgb(228,105,12)" fg:x="961" fg:w="2"/><text x="77.1916%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.0216%" y="373" width="0.0801%" height="15" fill="rgb(215,196,1)" fg:x="962" fg:w="1"/><text x="77.2716%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0216%" y="357" width="0.0801%" height="15" fill="rgb(214,33,39)" fg:x="962" fg:w="1"/><text x="77.2716%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.0216%" y="341" width="0.0801%" height="15" fill="rgb(220,19,52)" fg:x="962" fg:w="1"/><text x="77.2716%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0216%" y="325" width="0.0801%" height="15" fill="rgb(221,78,38)" fg:x="962" fg:w="1"/><text x="77.2716%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.0216%" y="309" width="0.0801%" height="15" fill="rgb(253,30,16)" fg:x="962" fg:w="1"/><text x="77.2716%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="77.0216%" y="293" width="0.0801%" height="15" fill="rgb(242,65,0)" fg:x="962" fg:w="1"/><text x="77.2716%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.0216%" y="277" width="0.0801%" height="15" fill="rgb(235,201,12)" fg:x="962" fg:w="1"/><text x="77.2716%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="77.0216%" y="261" width="0.0801%" height="15" fill="rgb(233,161,9)" fg:x="962" fg:w="1"/><text x="77.2716%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="77.0216%" y="245" width="0.0801%" height="15" fill="rgb(241,207,41)" fg:x="962" fg:w="1"/><text x="77.2716%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.0216%" y="229" width="0.0801%" height="15" fill="rgb(212,69,46)" fg:x="962" fg:w="1"/><text x="77.2716%" y="239.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="76.9416%" y="405" width="0.2402%" height="15" fill="rgb(239,69,45)" fg:x="961" fg:w="3"/><text x="77.1916%" y="415.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="77.1017%" y="389" width="0.0801%" height="15" fill="rgb(242,117,48)" fg:x="963" fg:w="1"/><text x="77.3517%" y="399.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (10 samples, 0.80%)</title><rect x="76.6213%" y="501" width="0.8006%" height="15" fill="rgb(228,41,36)" fg:x="957" fg:w="10"/><text x="76.8713%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.72%)</title><rect x="76.7014%" y="485" width="0.7206%" height="15" fill="rgb(212,3,32)" fg:x="958" fg:w="9"/><text x="76.9514%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (9 samples, 0.72%)</title><rect x="76.7014%" y="469" width="0.7206%" height="15" fill="rgb(233,41,49)" fg:x="958" fg:w="9"/><text x="76.9514%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (9 samples, 0.72%)</title><rect x="76.7014%" y="453" width="0.7206%" height="15" fill="rgb(252,170,49)" fg:x="958" fg:w="9"/><text x="76.9514%" y="463.50"></text></g><g><title>engine::internal::Entities::prepare_entity (9 samples, 0.72%)</title><rect x="76.7014%" y="437" width="0.7206%" height="15" fill="rgb(229,53,26)" fg:x="958" fg:w="9"/><text x="76.9514%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="76.9416%" y="421" width="0.4804%" height="15" fill="rgb(217,157,12)" fg:x="961" fg:w="6"/><text x="77.1916%" y="431.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="77.1817%" y="405" width="0.2402%" height="15" fill="rgb(227,17,9)" fg:x="964" fg:w="3"/><text x="77.4317%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="77.1817%" y="389" width="0.2402%" height="15" fill="rgb(218,84,12)" fg:x="964" fg:w="3"/><text x="77.4317%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.1817%" y="373" width="0.2402%" height="15" fill="rgb(212,79,24)" fg:x="964" fg:w="3"/><text x="77.4317%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="77.1817%" y="357" width="0.2402%" height="15" fill="rgb(217,222,37)" fg:x="964" fg:w="3"/><text x="77.4317%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.1817%" y="341" width="0.2402%" height="15" fill="rgb(246,208,8)" fg:x="964" fg:w="3"/><text x="77.4317%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="77.1817%" y="325" width="0.2402%" height="15" fill="rgb(244,133,10)" fg:x="964" fg:w="3"/><text x="77.4317%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.2618%" y="309" width="0.1601%" height="15" fill="rgb(209,219,41)" fg:x="965" fg:w="2"/><text x="77.5118%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="77.2618%" y="293" width="0.1601%" height="15" fill="rgb(253,175,45)" fg:x="965" fg:w="2"/><text x="77.5118%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.3419%" y="277" width="0.0801%" height="15" fill="rgb(235,100,37)" fg:x="966" fg:w="1"/><text x="77.5919%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.3419%" y="261" width="0.0801%" height="15" fill="rgb(225,87,19)" fg:x="966" fg:w="1"/><text x="77.5919%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.3419%" y="245" width="0.0801%" height="15" fill="rgb(217,152,17)" fg:x="966" fg:w="1"/><text x="77.5919%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.4219%" y="341" width="0.0801%" height="15" fill="rgb(235,72,13)" fg:x="967" fg:w="1"/><text x="77.6719%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.4219%" y="325" width="0.0801%" height="15" fill="rgb(233,140,18)" fg:x="967" fg:w="1"/><text x="77.6719%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.4219%" y="309" width="0.0801%" height="15" fill="rgb(207,212,28)" fg:x="967" fg:w="1"/><text x="77.6719%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.4219%" y="293" width="0.0801%" height="15" fill="rgb(220,130,25)" fg:x="967" fg:w="1"/><text x="77.6719%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.4219%" y="277" width="0.0801%" height="15" fill="rgb(205,55,34)" fg:x="967" fg:w="1"/><text x="77.6719%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.4219%" y="261" width="0.0801%" height="15" fill="rgb(237,54,35)" fg:x="967" fg:w="1"/><text x="77.6719%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.4219%" y="245" width="0.0801%" height="15" fill="rgb(208,67,23)" fg:x="967" fg:w="1"/><text x="77.6719%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.4219%" y="229" width="0.0801%" height="15" fill="rgb(206,207,50)" fg:x="967" fg:w="1"/><text x="77.6719%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.4219%" y="213" width="0.0801%" height="15" fill="rgb(213,211,42)" fg:x="967" fg:w="1"/><text x="77.6719%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="77.4219%" y="197" width="0.0801%" height="15" fill="rgb(252,197,50)" fg:x="967" fg:w="1"/><text x="77.6719%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.4219%" y="181" width="0.0801%" height="15" fill="rgb(251,211,41)" fg:x="967" fg:w="1"/><text x="77.6719%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.4219%" y="165" width="0.0801%" height="15" fill="rgb(229,211,5)" fg:x="967" fg:w="1"/><text x="77.6719%" y="175.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (12 samples, 0.96%)</title><rect x="76.6213%" y="517" width="0.9608%" height="15" fill="rgb(239,36,31)" fg:x="957" fg:w="12"/><text x="76.8713%" y="527.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="77.4219%" y="501" width="0.1601%" height="15" fill="rgb(248,67,31)" fg:x="967" fg:w="2"/><text x="77.6719%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="77.4219%" y="485" width="0.1601%" height="15" fill="rgb(249,55,44)" fg:x="967" fg:w="2"/><text x="77.6719%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="77.4219%" y="469" width="0.1601%" height="15" fill="rgb(216,82,12)" fg:x="967" fg:w="2"/><text x="77.6719%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="77.4219%" y="453" width="0.1601%" height="15" fill="rgb(242,174,1)" fg:x="967" fg:w="2"/><text x="77.6719%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="77.4219%" y="437" width="0.1601%" height="15" fill="rgb(208,120,29)" fg:x="967" fg:w="2"/><text x="77.6719%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.4219%" y="421" width="0.1601%" height="15" fill="rgb(221,105,43)" fg:x="967" fg:w="2"/><text x="77.6719%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="77.4219%" y="405" width="0.1601%" height="15" fill="rgb(234,124,22)" fg:x="967" fg:w="2"/><text x="77.6719%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="77.4219%" y="389" width="0.1601%" height="15" fill="rgb(212,23,30)" fg:x="967" fg:w="2"/><text x="77.6719%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="77.4219%" y="373" width="0.1601%" height="15" fill="rgb(219,122,53)" fg:x="967" fg:w="2"/><text x="77.6719%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.4219%" y="357" width="0.1601%" height="15" fill="rgb(248,84,24)" fg:x="967" fg:w="2"/><text x="77.6719%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.5020%" y="341" width="0.0801%" height="15" fill="rgb(245,115,18)" fg:x="968" fg:w="1"/><text x="77.7520%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="77.5020%" y="325" width="0.0801%" height="15" fill="rgb(227,176,51)" fg:x="968" fg:w="1"/><text x="77.7520%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.5020%" y="309" width="0.0801%" height="15" fill="rgb(229,63,42)" fg:x="968" fg:w="1"/><text x="77.7520%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.5020%" y="293" width="0.0801%" height="15" fill="rgb(247,202,24)" fg:x="968" fg:w="1"/><text x="77.7520%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.5020%" y="277" width="0.0801%" height="15" fill="rgb(244,173,20)" fg:x="968" fg:w="1"/><text x="77.7520%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.5020%" y="261" width="0.0801%" height="15" fill="rgb(242,81,47)" fg:x="968" fg:w="1"/><text x="77.7520%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.5020%" y="245" width="0.0801%" height="15" fill="rgb(231,185,54)" fg:x="968" fg:w="1"/><text x="77.7520%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.5020%" y="229" width="0.0801%" height="15" fill="rgb(243,55,32)" fg:x="968" fg:w="1"/><text x="77.7520%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.5020%" y="213" width="0.0801%" height="15" fill="rgb(208,167,19)" fg:x="968" fg:w="1"/><text x="77.7520%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.5020%" y="197" width="0.0801%" height="15" fill="rgb(231,72,35)" fg:x="968" fg:w="1"/><text x="77.7520%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.5020%" y="181" width="0.0801%" height="15" fill="rgb(250,173,51)" fg:x="968" fg:w="1"/><text x="77.7520%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.5020%" y="165" width="0.0801%" height="15" fill="rgb(209,5,22)" fg:x="968" fg:w="1"/><text x="77.7520%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.5020%" y="149" width="0.0801%" height="15" fill="rgb(250,174,19)" fg:x="968" fg:w="1"/><text x="77.7520%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.5020%" y="133" width="0.0801%" height="15" fill="rgb(217,3,49)" fg:x="968" fg:w="1"/><text x="77.7520%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="77.5020%" y="117" width="0.0801%" height="15" fill="rgb(218,225,5)" fg:x="968" fg:w="1"/><text x="77.7520%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.5020%" y="101" width="0.0801%" height="15" fill="rgb(236,89,11)" fg:x="968" fg:w="1"/><text x="77.7520%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="77.5020%" y="85" width="0.0801%" height="15" fill="rgb(206,33,28)" fg:x="968" fg:w="1"/><text x="77.7520%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="77.5020%" y="69" width="0.0801%" height="15" fill="rgb(241,56,42)" fg:x="968" fg:w="1"/><text x="77.7520%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="77.5020%" y="53" width="0.0801%" height="15" fill="rgb(222,44,11)" fg:x="968" fg:w="1"/><text x="77.7520%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.5020%" y="37" width="0.0801%" height="15" fill="rgb(234,111,20)" fg:x="968" fg:w="1"/><text x="77.7520%" y="47.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_name (24 samples, 1.92%)</title><rect x="75.7406%" y="533" width="1.9215%" height="15" fill="rgb(237,77,6)" fg:x="946" fg:w="24"/><text x="75.9906%" y="543.50">e..</text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="77.5821%" y="517" width="0.0801%" height="15" fill="rgb(235,111,23)" fg:x="969" fg:w="1"/><text x="77.8321%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="77.5821%" y="501" width="0.0801%" height="15" fill="rgb(251,135,29)" fg:x="969" fg:w="1"/><text x="77.8321%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="77.5821%" y="485" width="0.0801%" height="15" fill="rgb(217,57,1)" fg:x="969" fg:w="1"/><text x="77.8321%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.5821%" y="469" width="0.0801%" height="15" fill="rgb(249,119,31)" fg:x="969" fg:w="1"/><text x="77.8321%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.5821%" y="453" width="0.0801%" height="15" fill="rgb(233,164,33)" fg:x="969" fg:w="1"/><text x="77.8321%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.5821%" y="437" width="0.0801%" height="15" fill="rgb(250,217,43)" fg:x="969" fg:w="1"/><text x="77.8321%" y="447.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (649 samples, 51.96%)</title><rect x="25.8607%" y="565" width="51.9616%" height="15" fill="rgb(232,154,50)" fg:x="323" fg:w="649"/><text x="26.1107%" y="575.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (649 samples, 51.96%)</title><rect x="25.8607%" y="549" width="51.9616%" height="15" fill="rgb(227,190,8)" fg:x="323" fg:w="649"/><text x="26.1107%" y="559.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>kernel::plugins::SessionPlugins::evaluate (2 samples, 0.16%)</title><rect x="77.6621%" y="533" width="0.1601%" height="15" fill="rgb(209,217,32)" fg:x="970" fg:w="2"/><text x="77.9121%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="77.6621%" y="517" width="0.1601%" height="15" fill="rgb(243,203,50)" fg:x="970" fg:w="2"/><text x="77.9121%" y="527.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.7422%" y="501" width="0.0801%" height="15" fill="rgb(232,152,27)" fg:x="971" fg:w="1"/><text x="77.9922%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="77.7422%" y="485" width="0.0801%" height="15" fill="rgb(240,34,29)" fg:x="971" fg:w="1"/><text x="77.9922%" y="495.50"></text></g><g><title>nanoid::format (1 samples, 0.08%)</title><rect x="77.8223%" y="533" width="0.0801%" height="15" fill="rgb(215,185,52)" fg:x="972" fg:w="1"/><text x="78.0723%" y="543.50"></text></g><g><title>nanoid::rngs::default (1 samples, 0.08%)</title><rect x="77.8223%" y="517" width="0.0801%" height="15" fill="rgb(240,89,49)" fg:x="972" fg:w="1"/><text x="78.0723%" y="527.50"></text></g><g><title>getrandom::imp::getrandom_inner (1 samples, 0.08%)</title><rect x="77.8223%" y="501" width="0.0801%" height="15" fill="rgb(225,12,52)" fg:x="972" fg:w="1"/><text x="78.0723%" y="511.50"></text></g><g><title>syscall (1 samples, 0.08%)</title><rect x="77.8223%" y="485" width="0.0801%" height="15" fill="rgb(239,128,45)" fg:x="972" fg:w="1"/><text x="78.0723%" y="495.50"></text></g><g><title>sqlite3BtreeOpen (2 samples, 0.16%)</title><rect x="77.9023%" y="517" width="0.1601%" height="15" fill="rgb(211,78,47)" fg:x="973" fg:w="2"/><text x="78.1523%" y="527.50"></text></g><g><title>sqlite3PagerOpen (2 samples, 0.16%)</title><rect x="77.9023%" y="501" width="0.1601%" height="15" fill="rgb(232,31,21)" fg:x="973" fg:w="2"/><text x="78.1523%" y="511.50"></text></g><g><title>sqlite3PagerSetPagesize (2 samples, 0.16%)</title><rect x="77.9023%" y="485" width="0.1601%" height="15" fill="rgb(222,168,14)" fg:x="973" fg:w="2"/><text x="78.1523%" y="495.50"></text></g><g><title>sqlite3Malloc (2 samples, 0.16%)</title><rect x="77.9023%" y="469" width="0.1601%" height="15" fill="rgb(209,128,24)" fg:x="973" fg:w="2"/><text x="78.1523%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="77.9023%" y="453" width="0.1601%" height="15" fill="rgb(249,35,13)" fg:x="973" fg:w="2"/><text x="78.1523%" y="463.50"></text></g><g><title>sqlite3Fts3InitHashTable (1 samples, 0.08%)</title><rect x="78.0624%" y="501" width="0.0801%" height="15" fill="rgb(218,7,2)" fg:x="975" fg:w="1"/><text x="78.3124%" y="511.50"></text></g><g><title>sqlite3_create_function (1 samples, 0.08%)</title><rect x="78.0624%" y="485" width="0.0801%" height="15" fill="rgb(238,107,27)" fg:x="975" fg:w="1"/><text x="78.3124%" y="495.50"></text></g><g><title>sqlite3CreateFunc (1 samples, 0.08%)</title><rect x="78.0624%" y="469" width="0.0801%" height="15" fill="rgb(217,88,38)" fg:x="975" fg:w="1"/><text x="78.3124%" y="479.50"></text></g><g><title>sqlite3FindFunction (1 samples, 0.08%)</title><rect x="78.0624%" y="453" width="0.0801%" height="15" fill="rgb(230,207,0)" fg:x="975" fg:w="1"/><text x="78.3124%" y="463.50"></text></g><g><title>sqlite3FunctionSearch (1 samples, 0.08%)</title><rect x="78.0624%" y="437" width="0.0801%" height="15" fill="rgb(249,64,54)" fg:x="975" fg:w="1"/><text x="78.3124%" y="447.50"></text></g><g><title>sqlite3CreateFunc (1 samples, 0.08%)</title><rect x="78.1425%" y="469" width="0.0801%" height="15" fill="rgb(231,7,11)" fg:x="976" fg:w="1"/><text x="78.3925%" y="479.50"></text></g><g><title>sqlite3FindFunction (1 samples, 0.08%)</title><rect x="78.1425%" y="453" width="0.0801%" height="15" fill="rgb(205,149,21)" fg:x="976" fg:w="1"/><text x="78.3925%" y="463.50"></text></g><g><title>sqlite3_create_function_v2 (2 samples, 0.16%)</title><rect x="78.1425%" y="485" width="0.1601%" height="15" fill="rgb(215,126,34)" fg:x="976" fg:w="2"/><text x="78.3925%" y="495.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="78.2226%" y="469" width="0.0801%" height="15" fill="rgb(241,132,45)" fg:x="977" fg:w="1"/><text x="78.4726%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.2226%" y="453" width="0.0801%" height="15" fill="rgb(252,69,32)" fg:x="977" fg:w="1"/><text x="78.4726%" y="463.50"></text></g><g><title>sqlite3Fts3Init (4 samples, 0.32%)</title><rect x="78.0624%" y="517" width="0.3203%" height="15" fill="rgb(232,204,19)" fg:x="975" fg:w="4"/><text x="78.3124%" y="527.50"></text></g><g><title>sqlite3_overload_function (3 samples, 0.24%)</title><rect x="78.1425%" y="501" width="0.2402%" height="15" fill="rgb(249,15,47)" fg:x="976" fg:w="3"/><text x="78.3925%" y="511.50"></text></g><g><title>sqlite3_mprintf (1 samples, 0.08%)</title><rect x="78.3026%" y="485" width="0.0801%" height="15" fill="rgb(209,227,23)" fg:x="978" fg:w="1"/><text x="78.5526%" y="495.50"></text></g><g><title>sqlite3_vmprintf (1 samples, 0.08%)</title><rect x="78.3026%" y="469" width="0.0801%" height="15" fill="rgb(248,92,24)" fg:x="978" fg:w="1"/><text x="78.5526%" y="479.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="78.3026%" y="453" width="0.0801%" height="15" fill="rgb(247,59,2)" fg:x="978" fg:w="1"/><text x="78.5526%" y="463.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="78.3827%" y="485" width="0.0801%" height="15" fill="rgb(221,30,5)" fg:x="979" fg:w="1"/><text x="78.6327%" y="495.50"></text></g><g><title>sqlite3FunctionSearch (1 samples, 0.08%)</title><rect x="78.4628%" y="453" width="0.0801%" height="15" fill="rgb(208,108,53)" fg:x="980" fg:w="1"/><text x="78.7128%" y="463.50"></text></g><g><title>sqlite3Json1Init (3 samples, 0.24%)</title><rect x="78.3827%" y="517" width="0.2402%" height="15" fill="rgb(211,183,26)" fg:x="979" fg:w="3"/><text x="78.6327%" y="527.50"></text></g><g><title>sqlite3_create_function (3 samples, 0.24%)</title><rect x="78.3827%" y="501" width="0.2402%" height="15" fill="rgb(232,132,4)" fg:x="979" fg:w="3"/><text x="78.6327%" y="511.50"></text></g><g><title>sqlite3CreateFunc (2 samples, 0.16%)</title><rect x="78.4628%" y="485" width="0.1601%" height="15" fill="rgb(253,128,37)" fg:x="980" fg:w="2"/><text x="78.7128%" y="495.50"></text></g><g><title>sqlite3FindFunction (2 samples, 0.16%)</title><rect x="78.4628%" y="469" width="0.1601%" height="15" fill="rgb(221,58,24)" fg:x="980" fg:w="2"/><text x="78.7128%" y="479.50"></text></g><g><title>sqlite3HashInsert (1 samples, 0.08%)</title><rect x="78.5428%" y="453" width="0.0801%" height="15" fill="rgb(230,54,45)" fg:x="981" fg:w="1"/><text x="78.7928%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (983 samples, 78.70%)</title><rect x="0.0000%" y="613" width="78.7030%" height="15" fill="rgb(254,21,18)" fg:x="0" fg:w="983"/><text x="0.2500%" y="623.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (983 samples, 78.70%)</title><rect x="0.0000%" y="597" width="78.7030%" height="15" fill="rgb(221,108,0)" fg:x="0" fg:w="983"/><text x="0.2500%" y="607.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (983 samples, 78.70%)</title><rect x="0.0000%" y="581" width="78.7030%" height="15" fill="rgb(206,95,1)" fg:x="0" fg:w="983"/><text x="0.2500%" y="591.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (11 samples, 0.88%)</title><rect x="77.8223%" y="565" width="0.8807%" height="15" fill="rgb(237,52,5)" fg:x="972" fg:w="11"/><text x="78.0723%" y="575.50"></text></g><g><title>sqlite::Factory::new (11 samples, 0.88%)</title><rect x="77.8223%" y="549" width="0.8807%" height="15" fill="rgb(218,150,34)" fg:x="972" fg:w="11"/><text x="78.0723%" y="559.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::open_with_flags (10 samples, 0.80%)</title><rect x="77.9023%" y="533" width="0.8006%" height="15" fill="rgb(235,194,28)" fg:x="973" fg:w="10"/><text x="78.1523%" y="543.50"></text></g><g><title>sqlite3MallocZero (1 samples, 0.08%)</title><rect x="78.6229%" y="517" width="0.0801%" height="15" fill="rgb(245,92,18)" fg:x="982" fg:w="1"/><text x="78.8729%" y="527.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="78.6229%" y="501" width="0.0801%" height="15" fill="rgb(253,203,53)" fg:x="982" fg:w="1"/><text x="78.8729%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.7030%" y="565" width="0.0801%" height="15" fill="rgb(249,185,47)" fg:x="983" fg:w="1"/><text x="78.9530%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (1 samples, 0.08%)</title><rect x="78.7030%" y="549" width="0.0801%" height="15" fill="rgb(252,194,52)" fg:x="983" fg:w="1"/><text x="78.9530%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::Connection&gt; (1 samples, 0.08%)</title><rect x="78.7030%" y="533" width="0.0801%" height="15" fill="rgb(210,53,36)" fg:x="983" fg:w="1"/><text x="78.9530%" y="543.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::close (1 samples, 0.08%)</title><rect x="78.7030%" y="517" width="0.0801%" height="15" fill="rgb(237,37,25)" fg:x="983" fg:w="1"/><text x="78.9530%" y="527.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::open_with_flags (1 samples, 0.08%)</title><rect x="78.7830%" y="517" width="0.0801%" height="15" fill="rgb(242,116,27)" fg:x="984" fg:w="1"/><text x="79.0330%" y="527.50"></text></g><g><title>sqlite3Fts5Init (1 samples, 0.08%)</title><rect x="78.7830%" y="501" width="0.0801%" height="15" fill="rgb(213,185,26)" fg:x="984" fg:w="1"/><text x="79.0330%" y="511.50"></text></g><g><title>sqlite3_create_function (1 samples, 0.08%)</title><rect x="78.7830%" y="485" width="0.0801%" height="15" fill="rgb(225,204,8)" fg:x="984" fg:w="1"/><text x="79.0330%" y="495.50"></text></g><g><title>sqlite3CreateFunc (1 samples, 0.08%)</title><rect x="78.7830%" y="469" width="0.0801%" height="15" fill="rgb(254,111,37)" fg:x="984" fg:w="1"/><text x="79.0330%" y="479.50"></text></g><g><title>sqlite3FindFunction (1 samples, 0.08%)</title><rect x="78.7830%" y="453" width="0.0801%" height="15" fill="rgb(242,35,9)" fg:x="984" fg:w="1"/><text x="79.0330%" y="463.50"></text></g><g><title>sqlite3FunctionSearch (1 samples, 0.08%)</title><rect x="78.7830%" y="437" width="0.0801%" height="15" fill="rgb(232,138,49)" fg:x="984" fg:w="1"/><text x="79.0330%" y="447.50"></text></g><g><title>sqlite3FindIndex (1 samples, 0.08%)</title><rect x="79.0232%" y="421" width="0.0801%" height="15" fill="rgb(247,56,4)" fg:x="987" fg:w="1"/><text x="79.2732%" y="431.50"></text></g><g><title>sqlite3DbIsNamed (1 samples, 0.08%)</title><rect x="79.0232%" y="405" width="0.0801%" height="15" fill="rgb(226,179,17)" fg:x="987" fg:w="1"/><text x="79.2732%" y="415.50"></text></g><g><title>sqlite3CreateIndex (2 samples, 0.16%)</title><rect x="79.0232%" y="437" width="0.1601%" height="15" fill="rgb(216,163,45)" fg:x="987" fg:w="2"/><text x="79.2732%" y="447.50"></text></g><g><title>sqlite3NestedParse (1 samples, 0.08%)</title><rect x="79.1033%" y="421" width="0.0801%" height="15" fill="rgb(211,157,3)" fg:x="988" fg:w="1"/><text x="79.3533%" y="431.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.08%)</title><rect x="79.1033%" y="405" width="0.0801%" height="15" fill="rgb(234,44,20)" fg:x="988" fg:w="1"/><text x="79.3533%" y="415.50"></text></g><g><title>sqlite3Parser (1 samples, 0.08%)</title><rect x="79.1033%" y="389" width="0.0801%" height="15" fill="rgb(254,138,23)" fg:x="988" fg:w="1"/><text x="79.3533%" y="399.50"></text></g><g><title>sqlite3EndTable (1 samples, 0.08%)</title><rect x="79.1833%" y="437" width="0.0801%" height="15" fill="rgb(206,119,39)" fg:x="989" fg:w="1"/><text x="79.4333%" y="447.50"></text></g><g><title>sqlite3NestedParse (1 samples, 0.08%)</title><rect x="79.1833%" y="421" width="0.0801%" height="15" fill="rgb(231,105,52)" fg:x="989" fg:w="1"/><text x="79.4333%" y="431.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.08%)</title><rect x="79.1833%" y="405" width="0.0801%" height="15" fill="rgb(250,20,5)" fg:x="989" fg:w="1"/><text x="79.4333%" y="415.50"></text></g><g><title>sqlite3Parser (1 samples, 0.08%)</title><rect x="79.1833%" y="389" width="0.0801%" height="15" fill="rgb(215,198,30)" fg:x="989" fg:w="1"/><text x="79.4333%" y="399.50"></text></g><g><title>sqlite3GetInt32 (1 samples, 0.08%)</title><rect x="79.1833%" y="373" width="0.0801%" height="15" fill="rgb(246,142,8)" fg:x="989" fg:w="1"/><text x="79.4333%" y="383.50"></text></g><g><title>sqlite3FinishCoding (1 samples, 0.08%)</title><rect x="79.2634%" y="437" width="0.0801%" height="15" fill="rgb(243,26,38)" fg:x="990" fg:w="1"/><text x="79.5134%" y="447.50"></text></g><g><title>sqlite3Parser (5 samples, 0.40%)</title><rect x="79.0232%" y="453" width="0.4003%" height="15" fill="rgb(205,133,28)" fg:x="987" fg:w="5"/><text x="79.2732%" y="463.50"></text></g><g><title>sqlite3Pragma (1 samples, 0.08%)</title><rect x="79.3435%" y="437" width="0.0801%" height="15" fill="rgb(212,34,0)" fg:x="991" fg:w="1"/><text x="79.5935%" y="447.50"></text></g><g><title>sqlite3ReadSchema (1 samples, 0.08%)</title><rect x="79.3435%" y="421" width="0.0801%" height="15" fill="rgb(251,226,22)" fg:x="991" fg:w="1"/><text x="79.5935%" y="431.50"></text></g><g><title>sqlite3Init (1 samples, 0.08%)</title><rect x="79.3435%" y="405" width="0.0801%" height="15" fill="rgb(252,119,9)" fg:x="991" fg:w="1"/><text x="79.5935%" y="415.50"></text></g><g><title>sqlite3InitOne (1 samples, 0.08%)</title><rect x="79.3435%" y="389" width="0.0801%" height="15" fill="rgb(213,150,50)" fg:x="991" fg:w="1"/><text x="79.5935%" y="399.50"></text></g><g><title>sqlite3InitCallback (1 samples, 0.08%)</title><rect x="79.3435%" y="373" width="0.0801%" height="15" fill="rgb(212,24,39)" fg:x="991" fg:w="1"/><text x="79.5935%" y="383.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.08%)</title><rect x="79.3435%" y="357" width="0.0801%" height="15" fill="rgb(213,46,39)" fg:x="991" fg:w="1"/><text x="79.5935%" y="367.50"></text></g><g><title>sqlite3Parser (1 samples, 0.08%)</title><rect x="79.3435%" y="341" width="0.0801%" height="15" fill="rgb(239,106,12)" fg:x="991" fg:w="1"/><text x="79.5935%" y="351.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (9 samples, 0.72%)</title><rect x="78.8631%" y="501" width="0.7206%" height="15" fill="rgb(249,229,21)" fg:x="985" fg:w="9"/><text x="79.1131%" y="511.50"></text></g><g><title>sqlite3_prepare_v2 (8 samples, 0.64%)</title><rect x="78.9432%" y="485" width="0.6405%" height="15" fill="rgb(212,158,3)" fg:x="986" fg:w="8"/><text x="79.1932%" y="495.50"></text></g><g><title>sqlite3RunParser (8 samples, 0.64%)</title><rect x="78.9432%" y="469" width="0.6405%" height="15" fill="rgb(253,26,48)" fg:x="986" fg:w="8"/><text x="79.1932%" y="479.50"></text></g><g><title>sqlite3ParserAlloc (2 samples, 0.16%)</title><rect x="79.4235%" y="453" width="0.1601%" height="15" fill="rgb(238,178,20)" fg:x="992" fg:w="2"/><text x="79.6735%" y="463.50"></text></g><g><title>sqlite3Malloc (2 samples, 0.16%)</title><rect x="79.4235%" y="437" width="0.1601%" height="15" fill="rgb(208,86,15)" fg:x="992" fg:w="2"/><text x="79.6735%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="79.4235%" y="421" width="0.1601%" height="15" fill="rgb(239,42,53)" fg:x="992" fg:w="2"/><text x="79.6735%" y="431.50"></text></g><g><title>sqlite3BtreeBeginTrans (1 samples, 0.08%)</title><rect x="79.5837%" y="453" width="0.0801%" height="15" fill="rgb(245,226,8)" fg:x="994" fg:w="1"/><text x="79.8337%" y="463.50"></text></g><g><title>sqlite3Get4byte (1 samples, 0.08%)</title><rect x="79.5837%" y="437" width="0.0801%" height="15" fill="rgb(216,176,32)" fg:x="994" fg:w="1"/><text x="79.8337%" y="447.50"></text></g><g><title>sqlite3BtreeCreateTable (2 samples, 0.16%)</title><rect x="79.6637%" y="453" width="0.1601%" height="15" fill="rgb(231,186,21)" fg:x="995" fg:w="2"/><text x="79.9137%" y="463.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="79.8239%" y="453" width="0.0801%" height="15" fill="rgb(205,95,49)" fg:x="997" fg:w="1"/><text x="80.0739%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8239%" y="437" width="0.0801%" height="15" fill="rgb(217,145,8)" fg:x="997" fg:w="1"/><text x="80.0739%" y="447.50"></text></g><g><title>sqlite3BtreeCommitPhaseTwo (1 samples, 0.08%)</title><rect x="79.9840%" y="437" width="0.0801%" height="15" fill="rgb(239,144,48)" fg:x="999" fg:w="1"/><text x="80.2340%" y="447.50"></text></g><g><title>sqlite3PagerCommitPhaseTwo (1 samples, 0.08%)</title><rect x="79.9840%" y="421" width="0.0801%" height="15" fill="rgb(214,189,23)" fg:x="999" fg:w="1"/><text x="80.2340%" y="431.50"></text></g><g><title>sqlite3OsClose (1 samples, 0.08%)</title><rect x="79.9840%" y="405" width="0.0801%" height="15" fill="rgb(229,157,17)" fg:x="999" fg:w="1"/><text x="80.2340%" y="415.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="79.9840%" y="389" width="0.0801%" height="15" fill="rgb(230,5,48)" fg:x="999" fg:w="1"/><text x="80.2340%" y="399.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="79.9840%" y="373" width="0.0801%" height="15" fill="rgb(224,156,48)" fg:x="999" fg:w="1"/><text x="80.2340%" y="383.50"></text></g><g><title>sqlite3VdbeHalt (3 samples, 0.24%)</title><rect x="79.9039%" y="453" width="0.2402%" height="15" fill="rgb(223,14,29)" fg:x="998" fg:w="3"/><text x="80.1539%" y="463.50"></text></g><g><title>sqlite3Strlen30 (1 samples, 0.08%)</title><rect x="80.0641%" y="437" width="0.0801%" height="15" fill="rgb(229,96,36)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="447.50"></text></g><g><title>sqlite3InitCallback (1 samples, 0.08%)</title><rect x="80.1441%" y="437" width="0.0801%" height="15" fill="rgb(231,102,53)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="447.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.08%)</title><rect x="80.1441%" y="421" width="0.0801%" height="15" fill="rgb(210,77,38)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="431.50"></text></g><g><title>sqlite3Parser (1 samples, 0.08%)</title><rect x="80.1441%" y="405" width="0.0801%" height="15" fill="rgb(235,131,6)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="415.50"></text></g><g><title>sqlite3GenerateColumnNames (1 samples, 0.08%)</title><rect x="80.2242%" y="373" width="0.0801%" height="15" fill="rgb(252,55,38)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="383.50"></text></g><g><title>sqlite3VdbeMemSetStr (1 samples, 0.08%)</title><rect x="80.2242%" y="357" width="0.0801%" height="15" fill="rgb(246,38,14)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="367.50"></text></g><g><title>sqlite3VdbeMemGrow (1 samples, 0.08%)</title><rect x="80.2242%" y="341" width="0.0801%" height="15" fill="rgb(242,27,5)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="351.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="80.2242%" y="325" width="0.0801%" height="15" fill="rgb(228,65,35)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.2242%" y="309" width="0.0801%" height="15" fill="rgb(245,93,11)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="319.50"></text></g><g><title>sqlite3_prepare_v2 (2 samples, 0.16%)</title><rect x="80.2242%" y="437" width="0.1601%" height="15" fill="rgb(213,1,31)" fg:x="1002" fg:w="2"/><text x="80.4742%" y="447.50"></text></g><g><title>sqlite3RunParser (2 samples, 0.16%)</title><rect x="80.2242%" y="421" width="0.1601%" height="15" fill="rgb(237,205,14)" fg:x="1002" fg:w="2"/><text x="80.4742%" y="431.50"></text></g><g><title>sqlite3Parser (2 samples, 0.16%)</title><rect x="80.2242%" y="405" width="0.1601%" height="15" fill="rgb(232,118,45)" fg:x="1002" fg:w="2"/><text x="80.4742%" y="415.50"></text></g><g><title>sqlite3Select (2 samples, 0.16%)</title><rect x="80.2242%" y="389" width="0.1601%" height="15" fill="rgb(218,5,6)" fg:x="1002" fg:w="2"/><text x="80.4742%" y="399.50"></text></g><g><title>sqlite3SelectPrep (1 samples, 0.08%)</title><rect x="80.3042%" y="373" width="0.0801%" height="15" fill="rgb(251,87,51)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="383.50"></text></g><g><title>sqlite3WalkSelect (1 samples, 0.08%)</title><rect x="80.3042%" y="357" width="0.0801%" height="15" fill="rgb(207,225,20)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="367.50"></text></g><g><title>sqlite3WalkSelectExpr (1 samples, 0.08%)</title><rect x="80.3042%" y="341" width="0.0801%" height="15" fill="rgb(222,78,54)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="351.50"></text></g><g><title>sqlite3BtreeLeave (1 samples, 0.08%)</title><rect x="80.3843%" y="421" width="0.0801%" height="15" fill="rgb(232,85,16)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="431.50"></text></g><g><title>&lt;sqlite::Factory as engine::storage::EntityStorageFactory&gt;::create_storage (22 samples, 1.76%)</title><rect x="78.7830%" y="549" width="1.7614%" height="15" fill="rgb(244,25,33)" fg:x="984" fg:w="22"/><text x="79.0330%" y="559.50"></text></g><g><title>sqlite::SqliteStorage::new (22 samples, 1.76%)</title><rect x="78.7830%" y="533" width="1.7614%" height="15" fill="rgb(233,24,36)" fg:x="984" fg:w="22"/><text x="79.0330%" y="543.50"></text></g><g><title>sqlite::SqliteStorage::new::{{closure}} (21 samples, 1.68%)</title><rect x="78.8631%" y="517" width="1.6813%" height="15" fill="rgb(253,49,54)" fg:x="985" fg:w="21"/><text x="79.1131%" y="527.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (12 samples, 0.96%)</title><rect x="79.5837%" y="501" width="0.9608%" height="15" fill="rgb(245,12,22)" fg:x="994" fg:w="12"/><text x="79.8337%" y="511.50"></text></g><g><title>sqlite3_step (12 samples, 0.96%)</title><rect x="79.5837%" y="485" width="0.9608%" height="15" fill="rgb(253,141,28)" fg:x="994" fg:w="12"/><text x="79.8337%" y="495.50"></text></g><g><title>sqlite3VdbeExec (12 samples, 0.96%)</title><rect x="79.5837%" y="469" width="0.9608%" height="15" fill="rgb(225,207,27)" fg:x="994" fg:w="12"/><text x="79.8337%" y="479.50"></text></g><g><title>sqlite3_exec (5 samples, 0.40%)</title><rect x="80.1441%" y="453" width="0.4003%" height="15" fill="rgb(220,84,2)" fg:x="1001" fg:w="5"/><text x="80.3941%" y="463.50"></text></g><g><title>sqlite3_step (2 samples, 0.16%)</title><rect x="80.3843%" y="437" width="0.1601%" height="15" fill="rgb(224,37,37)" fg:x="1004" fg:w="2"/><text x="80.6343%" y="447.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.08%)</title><rect x="80.4644%" y="421" width="0.0801%" height="15" fill="rgb(220,143,18)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="431.50"></text></g><g><title>sqlite3VdbeHalt (1 samples, 0.08%)</title><rect x="80.4644%" y="405" width="0.0801%" height="15" fill="rgb(210,88,33)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="415.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="80.6245%" y="501" width="0.1601%" height="15" fill="rgb(219,87,51)" fg:x="1007" fg:w="2"/><text x="80.8745%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="80.6245%" y="485" width="0.1601%" height="15" fill="rgb(211,7,35)" fg:x="1007" fg:w="2"/><text x="80.8745%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="80.6245%" y="469" width="0.1601%" height="15" fill="rgb(232,77,2)" fg:x="1007" fg:w="2"/><text x="80.8745%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="80.6245%" y="453" width="0.1601%" height="15" fill="rgb(249,94,25)" fg:x="1007" fg:w="2"/><text x="80.8745%" y="463.50"></text></g><g><title>rusqlite::row::Rows::next (2 samples, 0.16%)</title><rect x="80.6245%" y="437" width="0.1601%" height="15" fill="rgb(215,112,2)" fg:x="1007" fg:w="2"/><text x="80.8745%" y="447.50"></text></g><g><title>sqlite3_step (2 samples, 0.16%)</title><rect x="80.6245%" y="421" width="0.1601%" height="15" fill="rgb(226,115,48)" fg:x="1007" fg:w="2"/><text x="80.8745%" y="431.50"></text></g><g><title>sqlite3VdbeExec (2 samples, 0.16%)</title><rect x="80.6245%" y="405" width="0.1601%" height="15" fill="rgb(249,196,10)" fg:x="1007" fg:w="2"/><text x="80.8745%" y="415.50"></text></g><g><title>sqlite3BtreeLockTable (1 samples, 0.08%)</title><rect x="80.7046%" y="389" width="0.0801%" height="15" fill="rgb(237,109,14)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="399.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="80.7846%" y="501" width="0.0801%" height="15" fill="rgb(217,103,53)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="511.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="80.7846%" y="485" width="0.0801%" height="15" fill="rgb(244,137,9)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.40%)</title><rect x="80.5444%" y="533" width="0.4003%" height="15" fill="rgb(227,201,3)" fg:x="1006" fg:w="5"/><text x="80.7944%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (5 samples, 0.40%)</title><rect x="80.5444%" y="517" width="0.4003%" height="15" fill="rgb(243,94,6)" fg:x="1006" fg:w="5"/><text x="80.7944%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity (1 samples, 0.08%)</title><rect x="80.8647%" y="501" width="0.0801%" height="15" fill="rgb(235,118,5)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="511.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="80.8647%" y="485" width="0.0801%" height="15" fill="rgb(247,10,30)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.8647%" y="469" width="0.0801%" height="15" fill="rgb(205,26,28)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.8647%" y="453" width="0.0801%" height="15" fill="rgb(206,99,35)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.8647%" y="437" width="0.0801%" height="15" fill="rgb(238,130,40)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.8647%" y="421" width="0.0801%" height="15" fill="rgb(224,126,31)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.8647%" y="405" width="0.0801%" height="15" fill="rgb(254,105,17)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.8647%" y="389" width="0.0801%" height="15" fill="rgb(216,87,36)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.8647%" y="373" width="0.0801%" height="15" fill="rgb(240,21,12)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.8647%" y="357" width="0.0801%" height="15" fill="rgb(245,192,34)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.8647%" y="341" width="0.0801%" height="15" fill="rgb(226,100,49)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.8647%" y="325" width="0.0801%" height="15" fill="rgb(245,188,27)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.8647%" y="309" width="0.0801%" height="15" fill="rgb(212,170,8)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.8647%" y="293" width="0.0801%" height="15" fill="rgb(217,113,29)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.8647%" y="277" width="0.0801%" height="15" fill="rgb(237,30,3)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="287.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (29 samples, 2.32%)</title><rect x="78.7830%" y="565" width="2.3219%" height="15" fill="rgb(227,19,28)" fg:x="984" fg:w="29"/><text x="79.0330%" y="575.50">&lt;..</text></g><g><title>engine::session::Session::new (7 samples, 0.56%)</title><rect x="80.5444%" y="549" width="0.5604%" height="15" fill="rgb(239,172,45)" fg:x="1006" fg:w="7"/><text x="80.7944%" y="559.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::begin (2 samples, 0.16%)</title><rect x="80.9448%" y="533" width="0.1601%" height="15" fill="rgb(254,55,39)" fg:x="1011" fg:w="2"/><text x="81.1948%" y="543.50"></text></g><g><title>rusqlite::Connection::execute (2 samples, 0.16%)</title><rect x="80.9448%" y="517" width="0.1601%" height="15" fill="rgb(249,208,12)" fg:x="1011" fg:w="2"/><text x="81.1948%" y="527.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (2 samples, 0.16%)</title><rect x="80.9448%" y="501" width="0.1601%" height="15" fill="rgb(240,52,13)" fg:x="1011" fg:w="2"/><text x="81.1948%" y="511.50"></text></g><g><title>sqlite3_prepare_v2 (2 samples, 0.16%)</title><rect x="80.9448%" y="485" width="0.1601%" height="15" fill="rgb(252,149,13)" fg:x="1011" fg:w="2"/><text x="81.1948%" y="495.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.08%)</title><rect x="81.0248%" y="469" width="0.0801%" height="15" fill="rgb(232,81,48)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="479.50"></text></g><g><title>sqlite3ParserAlloc (1 samples, 0.08%)</title><rect x="81.0248%" y="453" width="0.0801%" height="15" fill="rgb(222,144,2)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="463.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="81.0248%" y="437" width="0.0801%" height="15" fill="rgb(216,81,32)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.0248%" y="421" width="0.0801%" height="15" fill="rgb(244,78,51)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="431.50"></text></g><g><title>sqlite3FinishCoding (1 samples, 0.08%)</title><rect x="81.1049%" y="405" width="0.0801%" height="15" fill="rgb(217,66,21)" fg:x="1013" fg:w="1"/><text x="81.3549%" y="415.50"></text></g><g><title>sqlite3GenerateConstraintChecks (1 samples, 0.08%)</title><rect x="81.2650%" y="389" width="0.0801%" height="15" fill="rgb(247,101,42)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="399.50"></text></g><g><title>sqlite3UniqueConstraint (1 samples, 0.08%)</title><rect x="81.2650%" y="373" width="0.0801%" height="15" fill="rgb(227,81,39)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="383.50"></text></g><g><title>sqlite3ResolveExprNames (1 samples, 0.08%)</title><rect x="81.3451%" y="389" width="0.0801%" height="15" fill="rgb(220,223,44)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="399.50"></text></g><g><title>sqlite3StrICmp (1 samples, 0.08%)</title><rect x="81.3451%" y="373" width="0.0801%" height="15" fill="rgb(205,218,2)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="383.50"></text></g><g><title>sqlite3VdbeCreate (1 samples, 0.08%)</title><rect x="81.4251%" y="389" width="0.0801%" height="15" fill="rgb(212,207,28)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="399.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="81.4251%" y="373" width="0.0801%" height="15" fill="rgb(224,12,41)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4251%" y="357" width="0.0801%" height="15" fill="rgb(216,118,12)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="367.50"></text></g><g><title>sqlite3WhereBegin (1 samples, 0.08%)</title><rect x="81.5052%" y="389" width="0.0801%" height="15" fill="rgb(252,97,46)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="399.50"></text></g><g><title>sqlite3WhereSplit (1 samples, 0.08%)</title><rect x="81.5052%" y="373" width="0.0801%" height="15" fill="rgb(244,206,19)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="383.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (7 samples, 0.56%)</title><rect x="81.1049%" y="469" width="0.5604%" height="15" fill="rgb(231,84,31)" fg:x="1013" fg:w="7"/><text x="81.3549%" y="479.50"></text></g><g><title>sqlite3_prepare_v2 (7 samples, 0.56%)</title><rect x="81.1049%" y="453" width="0.5604%" height="15" fill="rgb(244,133,0)" fg:x="1013" fg:w="7"/><text x="81.3549%" y="463.50"></text></g><g><title>sqlite3RunParser (7 samples, 0.56%)</title><rect x="81.1049%" y="437" width="0.5604%" height="15" fill="rgb(223,15,50)" fg:x="1013" fg:w="7"/><text x="81.3549%" y="447.50"></text></g><g><title>sqlite3Parser (7 samples, 0.56%)</title><rect x="81.1049%" y="421" width="0.5604%" height="15" fill="rgb(250,118,49)" fg:x="1013" fg:w="7"/><text x="81.3549%" y="431.50"></text></g><g><title>sqlite3Update (6 samples, 0.48%)</title><rect x="81.1849%" y="405" width="0.4804%" height="15" fill="rgb(248,25,38)" fg:x="1014" fg:w="6"/><text x="81.4349%" y="415.50"></text></g><g><title>sqlite3WhereEnd (1 samples, 0.08%)</title><rect x="81.5853%" y="389" width="0.0801%" height="15" fill="rgb(215,70,14)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="399.50"></text></g><g><title>sqlite3VdbeResolveLabel (1 samples, 0.08%)</title><rect x="81.5853%" y="373" width="0.0801%" height="15" fill="rgb(215,28,15)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="81.1049%" y="517" width="0.6405%" height="15" fill="rgb(243,6,28)" fg:x="1013" fg:w="8"/><text x="81.3549%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.64%)</title><rect x="81.1049%" y="501" width="0.6405%" height="15" fill="rgb(222,130,1)" fg:x="1013" fg:w="8"/><text x="81.3549%" y="511.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::save (8 samples, 0.64%)</title><rect x="81.1049%" y="485" width="0.6405%" height="15" fill="rgb(236,166,44)" fg:x="1013" fg:w="8"/><text x="81.3549%" y="495.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (1 samples, 0.08%)</title><rect x="81.6653%" y="469" width="0.0801%" height="15" fill="rgb(221,108,14)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="479.50"></text></g><g><title>sqlite3_step (1 samples, 0.08%)</title><rect x="81.6653%" y="453" width="0.0801%" height="15" fill="rgb(252,3,45)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="463.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.08%)</title><rect x="81.6653%" y="437" width="0.0801%" height="15" fill="rgb(237,68,30)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="447.50"></text></g><g><title>sqlite3BtreeInsert (1 samples, 0.08%)</title><rect x="81.6653%" y="421" width="0.0801%" height="15" fill="rgb(211,79,22)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.7454%" y="453" width="0.0801%" height="15" fill="rgb(252,185,21)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.7454%" y="437" width="0.0801%" height="15" fill="rgb(225,189,26)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.7454%" y="421" width="0.0801%" height="15" fill="rgb(241,30,40)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.7454%" y="405" width="0.0801%" height="15" fill="rgb(235,215,44)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.7454%" y="389" width="0.0801%" height="15" fill="rgb(205,8,29)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.7454%" y="373" width="0.0801%" height="15" fill="rgb(241,137,42)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.7454%" y="357" width="0.0801%" height="15" fill="rgb(237,155,2)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="81.7454%" y="485" width="0.1601%" height="15" fill="rgb(245,29,42)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.7454%" y="469" width="0.1601%" height="15" fill="rgb(234,101,35)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.8255%" y="453" width="0.0801%" height="15" fill="rgb(228,64,37)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.8255%" y="437" width="0.0801%" height="15" fill="rgb(217,214,36)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.8255%" y="421" width="0.0801%" height="15" fill="rgb(243,70,3)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.8255%" y="405" width="0.0801%" height="15" fill="rgb(253,158,52)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.8255%" y="389" width="0.0801%" height="15" fill="rgb(234,111,54)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="399.50"></text></g><g><title>engine::session::Session::flush (11 samples, 0.88%)</title><rect x="81.1049%" y="549" width="0.8807%" height="15" fill="rgb(217,70,32)" fg:x="1013" fg:w="11"/><text x="81.3549%" y="559.50"></text></g><g><title>engine::session::Session::save_entity_changes (11 samples, 0.88%)</title><rect x="81.1049%" y="533" width="0.8807%" height="15" fill="rgb(234,18,33)" fg:x="1013" fg:w="11"/><text x="81.3549%" y="543.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (3 samples, 0.24%)</title><rect x="81.7454%" y="517" width="0.2402%" height="15" fill="rgb(234,12,49)" fg:x="1021" fg:w="3"/><text x="81.9954%" y="527.50"></text></g><g><title>engine::session::Session::check_for_changes (3 samples, 0.24%)</title><rect x="81.7454%" y="501" width="0.2402%" height="15" fill="rgb(236,10,21)" fg:x="1021" fg:w="3"/><text x="81.9954%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.9055%" y="485" width="0.0801%" height="15" fill="rgb(248,182,45)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.9055%" y="469" width="0.0801%" height="15" fill="rgb(217,95,36)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.9055%" y="453" width="0.0801%" height="15" fill="rgb(212,110,31)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.9055%" y="437" width="0.0801%" height="15" fill="rgb(206,32,53)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.9055%" y="421" width="0.0801%" height="15" fill="rgb(246,141,37)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.9055%" y="405" width="0.0801%" height="15" fill="rgb(219,16,7)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="81.9856%" y="517" width="0.0801%" height="15" fill="rgb(230,205,45)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="81.9856%" y="501" width="0.0801%" height="15" fill="rgb(231,43,49)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (2 samples, 0.16%)</title><rect x="81.9856%" y="549" width="0.1601%" height="15" fill="rgb(212,106,34)" fg:x="1024" fg:w="2"/><text x="82.2356%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.16%)</title><rect x="81.9856%" y="533" width="0.1601%" height="15" fill="rgb(206,83,17)" fg:x="1024" fg:w="2"/><text x="82.2356%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="82.0657%" y="517" width="0.0801%" height="15" fill="rgb(244,154,49)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="527.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="82.0657%" y="501" width="0.0801%" height="15" fill="rgb(244,149,49)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="82.0657%" y="485" width="0.0801%" height="15" fill="rgb(227,134,18)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.0657%" y="469" width="0.0801%" height="15" fill="rgb(237,116,36)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="82.0657%" y="453" width="0.0801%" height="15" fill="rgb(205,129,40)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.0657%" y="437" width="0.0801%" height="15" fill="rgb(236,178,4)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.0657%" y="421" width="0.0801%" height="15" fill="rgb(251,76,53)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="431.50"></text></g><g><title>&lt;(A,B,C,D) as rusqlite::params::Params&gt;::__bind_in (1 samples, 0.08%)</title><rect x="82.2258%" y="453" width="0.0801%" height="15" fill="rgb(242,92,40)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="463.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameter (1 samples, 0.08%)</title><rect x="82.2258%" y="437" width="0.0801%" height="15" fill="rgb(209,45,30)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="447.50"></text></g><g><title>sqlite3VdbeMemSetStr (1 samples, 0.08%)</title><rect x="82.2258%" y="421" width="0.0801%" height="15" fill="rgb(218,157,36)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="431.50"></text></g><g><title>sqlite3ExprListAppendNew (1 samples, 0.08%)</title><rect x="82.3859%" y="389" width="0.0801%" height="15" fill="rgb(222,186,16)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="399.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="82.3859%" y="373" width="0.0801%" height="15" fill="rgb(254,72,35)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3859%" y="357" width="0.0801%" height="15" fill="rgb(224,25,35)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="367.50"></text></g><g><title>sqlite3IdListAppend (1 samples, 0.08%)</title><rect x="82.4660%" y="389" width="0.0801%" height="15" fill="rgb(206,135,52)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="399.50"></text></g><g><title>sqlite3NameFromToken (1 samples, 0.08%)</title><rect x="82.4660%" y="373" width="0.0801%" height="15" fill="rgb(229,174,47)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="383.50"></text></g><g><title>sqlite3DbStrNDup (1 samples, 0.08%)</title><rect x="82.4660%" y="357" width="0.0801%" height="15" fill="rgb(242,184,21)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="367.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="82.4660%" y="341" width="0.0801%" height="15" fill="rgb(213,22,45)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="351.50"></text></g><g><title>sqlite3GenerateConstraintChecks (1 samples, 0.08%)</title><rect x="82.5460%" y="373" width="0.0801%" height="15" fill="rgb(237,81,54)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="383.50"></text></g><g><title>sqlite3UniqueConstraint (1 samples, 0.08%)</title><rect x="82.5460%" y="357" width="0.0801%" height="15" fill="rgb(248,177,18)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="367.50"></text></g><g><title>sqlite3HaltConstraint (1 samples, 0.08%)</title><rect x="82.5460%" y="341" width="0.0801%" height="15" fill="rgb(254,31,16)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="351.50"></text></g><g><title>sqlite3VdbeAddOp4 (1 samples, 0.08%)</title><rect x="82.5460%" y="325" width="0.0801%" height="15" fill="rgb(235,20,31)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="335.50"></text></g><g><title>sqlite3Insert (2 samples, 0.16%)</title><rect x="82.5460%" y="389" width="0.1601%" height="15" fill="rgb(240,56,43)" fg:x="1031" fg:w="2"/><text x="82.7960%" y="399.50"></text></g><g><title>sqlite3ResolveExprListNames (1 samples, 0.08%)</title><rect x="82.6261%" y="373" width="0.0801%" height="15" fill="rgb(237,197,51)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="383.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (6 samples, 0.48%)</title><rect x="82.3058%" y="453" width="0.4804%" height="15" fill="rgb(241,162,44)" fg:x="1028" fg:w="6"/><text x="82.5558%" y="463.50"></text></g><g><title>sqlite3_prepare_v2 (6 samples, 0.48%)</title><rect x="82.3058%" y="437" width="0.4804%" height="15" fill="rgb(224,23,20)" fg:x="1028" fg:w="6"/><text x="82.5558%" y="447.50"></text></g><g><title>sqlite3RunParser (6 samples, 0.48%)</title><rect x="82.3058%" y="421" width="0.4804%" height="15" fill="rgb(250,109,34)" fg:x="1028" fg:w="6"/><text x="82.5558%" y="431.50"></text></g><g><title>sqlite3Parser (5 samples, 0.40%)</title><rect x="82.3859%" y="405" width="0.4003%" height="15" fill="rgb(214,175,50)" fg:x="1029" fg:w="5"/><text x="82.6359%" y="415.50"></text></g><g><title>sqlite3SrcListAppend (1 samples, 0.08%)</title><rect x="82.7062%" y="389" width="0.0801%" height="15" fill="rgb(213,182,5)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="82.2258%" y="501" width="0.6405%" height="15" fill="rgb(209,199,19)" fg:x="1027" fg:w="8"/><text x="82.4758%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.64%)</title><rect x="82.2258%" y="485" width="0.6405%" height="15" fill="rgb(236,224,42)" fg:x="1027" fg:w="8"/><text x="82.4758%" y="495.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::save (8 samples, 0.64%)</title><rect x="82.2258%" y="469" width="0.6405%" height="15" fill="rgb(246,226,29)" fg:x="1027" fg:w="8"/><text x="82.4758%" y="479.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (1 samples, 0.08%)</title><rect x="82.7862%" y="453" width="0.0801%" height="15" fill="rgb(227,223,11)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="463.50"></text></g><g><title>sqlite3_step (1 samples, 0.08%)</title><rect x="82.7862%" y="437" width="0.0801%" height="15" fill="rgb(219,7,51)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="447.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.08%)</title><rect x="82.7862%" y="421" width="0.0801%" height="15" fill="rgb(245,167,10)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="431.50"></text></g><g><title>sqlite3BtreeLockTable (1 samples, 0.08%)</title><rect x="82.7862%" y="405" width="0.0801%" height="15" fill="rgb(237,224,16)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="82.8663%" y="469" width="0.0801%" height="15" fill="rgb(226,132,13)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.8663%" y="453" width="0.0801%" height="15" fill="rgb(214,140,3)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.8663%" y="437" width="0.0801%" height="15" fill="rgb(221,177,4)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.8663%" y="421" width="0.0801%" height="15" fill="rgb(238,139,3)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9464%" y="469" width="0.0801%" height="15" fill="rgb(216,17,39)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.9464%" y="453" width="0.0801%" height="15" fill="rgb(238,120,9)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9464%" y="437" width="0.0801%" height="15" fill="rgb(244,92,53)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9464%" y="421" width="0.0801%" height="15" fill="rgb(224,148,33)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="83.0264%" y="421" width="0.0801%" height="15" fill="rgb(243,6,36)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.0264%" y="405" width="0.0801%" height="15" fill="rgb(230,102,11)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.0264%" y="389" width="0.0801%" height="15" fill="rgb(234,148,36)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0264%" y="373" width="0.0801%" height="15" fill="rgb(251,153,25)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0264%" y="357" width="0.0801%" height="15" fill="rgb(215,129,8)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="367.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (13 samples, 1.04%)</title><rect x="82.1457%" y="549" width="1.0408%" height="15" fill="rgb(224,128,35)" fg:x="1026" fg:w="13"/><text x="82.3957%" y="559.50"></text></g><g><title>engine::session::Session::flush (12 samples, 0.96%)</title><rect x="82.2258%" y="533" width="0.9608%" height="15" fill="rgb(237,56,52)" fg:x="1027" fg:w="12"/><text x="82.4758%" y="543.50"></text></g><g><title>engine::session::Session::save_entity_changes (12 samples, 0.96%)</title><rect x="82.2258%" y="517" width="0.9608%" height="15" fill="rgb(234,213,19)" fg:x="1027" fg:w="12"/><text x="82.4758%" y="527.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (4 samples, 0.32%)</title><rect x="82.8663%" y="501" width="0.3203%" height="15" fill="rgb(252,82,23)" fg:x="1035" fg:w="4"/><text x="83.1163%" y="511.50"></text></g><g><title>engine::session::Session::check_for_changes (4 samples, 0.32%)</title><rect x="82.8663%" y="485" width="0.3203%" height="15" fill="rgb(254,201,21)" fg:x="1035" fg:w="4"/><text x="83.1163%" y="495.50"></text></g><g><title>kernel::compare::any_entity_changes (2 samples, 0.16%)</title><rect x="83.0264%" y="469" width="0.1601%" height="15" fill="rgb(250,186,11)" fg:x="1037" fg:w="2"/><text x="83.2764%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="83.0264%" y="453" width="0.1601%" height="15" fill="rgb(211,174,5)" fg:x="1037" fg:w="2"/><text x="83.2764%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.0264%" y="437" width="0.1601%" height="15" fill="rgb(214,121,10)" fg:x="1037" fg:w="2"/><text x="83.2764%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.1065%" y="421" width="0.0801%" height="15" fill="rgb(241,66,2)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1065%" y="405" width="0.0801%" height="15" fill="rgb(220,167,19)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="415.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (27 samples, 2.16%)</title><rect x="81.1049%" y="565" width="2.1617%" height="15" fill="rgb(231,54,50)" fg:x="1013" fg:w="27"/><text x="81.3549%" y="575.50">&lt;..</text></g><g><title>plugins_core::build::BuildSurroundings::make (1 samples, 0.08%)</title><rect x="83.1865%" y="549" width="0.0801%" height="15" fill="rgb(239,217,53)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="83.1865%" y="533" width="0.0801%" height="15" fill="rgb(248,8,0)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="83.1865%" y="517" width="0.0801%" height="15" fill="rgb(229,118,37)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="527.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="83.1865%" y="501" width="0.0801%" height="15" fill="rgb(253,223,43)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1865%" y="485" width="0.0801%" height="15" fill="rgb(211,77,36)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (3 samples, 0.24%)</title><rect x="83.2666%" y="565" width="0.2402%" height="15" fill="rgb(219,3,53)" fg:x="1040" fg:w="3"/><text x="83.5166%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="83.2666%" y="549" width="0.2402%" height="15" fill="rgb(244,45,42)" fg:x="1040" fg:w="3"/><text x="83.5166%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlite::Factory&gt; (3 samples, 0.24%)</title><rect x="83.2666%" y="533" width="0.2402%" height="15" fill="rgb(225,95,27)" fg:x="1040" fg:w="3"/><text x="83.5166%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;rusqlite::inner_connection::InnerConnection&gt;&gt; (3 samples, 0.24%)</title><rect x="83.2666%" y="517" width="0.2402%" height="15" fill="rgb(207,74,8)" fg:x="1040" fg:w="3"/><text x="83.5166%" y="527.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::close (3 samples, 0.24%)</title><rect x="83.2666%" y="501" width="0.2402%" height="15" fill="rgb(243,63,36)" fg:x="1040" fg:w="3"/><text x="83.5166%" y="511.50"></text></g><g><title>sqlite3LeaveMutexAndCloseZombie (3 samples, 0.24%)</title><rect x="83.2666%" y="485" width="0.2402%" height="15" fill="rgb(211,180,12)" fg:x="1040" fg:w="3"/><text x="83.5166%" y="495.50"></text></g><g><title>sqlite3BtreeClose (1 samples, 0.08%)</title><rect x="83.4267%" y="469" width="0.0801%" height="15" fill="rgb(254,166,49)" fg:x="1042" fg:w="1"/><text x="83.6767%" y="479.50"></text></g><g><title>sqlite3PagerClose (1 samples, 0.08%)</title><rect x="83.4267%" y="453" width="0.0801%" height="15" fill="rgb(205,19,0)" fg:x="1042" fg:w="1"/><text x="83.6767%" y="463.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::rollback (1 samples, 0.08%)</title><rect x="83.5068%" y="533" width="0.0801%" height="15" fill="rgb(224,172,32)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="543.50"></text></g><g><title>rusqlite::Connection::execute (1 samples, 0.08%)</title><rect x="83.5068%" y="517" width="0.0801%" height="15" fill="rgb(254,136,30)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="527.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (1 samples, 0.08%)</title><rect x="83.5068%" y="501" width="0.0801%" height="15" fill="rgb(246,19,35)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="511.50"></text></g><g><title>sqlite3_step (1 samples, 0.08%)</title><rect x="83.5068%" y="485" width="0.0801%" height="15" fill="rgb(219,24,36)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="495.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.08%)</title><rect x="83.5068%" y="469" width="0.0801%" height="15" fill="rgb(251,55,1)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="479.50"></text></g><g><title>sqlite3VdbeHalt (1 samples, 0.08%)</title><rect x="83.5068%" y="453" width="0.0801%" height="15" fill="rgb(218,117,39)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="463.50"></text></g><g><title>&lt;(A,B,C,D,E) as rusqlite::params::Params&gt;::__bind_in (1 samples, 0.08%)</title><rect x="83.5869%" y="485" width="0.0801%" height="15" fill="rgb(248,169,11)" fg:x="1044" fg:w="1"/><text x="83.8369%" y="495.50"></text></g><g><title>rusqlite::statement::Statement::bind_parameter (1 samples, 0.08%)</title><rect x="83.5869%" y="469" width="0.0801%" height="15" fill="rgb(244,40,44)" fg:x="1044" fg:w="1"/><text x="83.8369%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (1 samples, 0.08%)</title><rect x="83.6669%" y="485" width="0.0801%" height="15" fill="rgb(234,62,37)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="495.50"></text></g><g><title>sqlite3_finalize (1 samples, 0.08%)</title><rect x="83.6669%" y="469" width="0.0801%" height="15" fill="rgb(207,117,42)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="479.50"></text></g><g><title>sqlite3VdbeFinalize (1 samples, 0.08%)</title><rect x="83.6669%" y="453" width="0.0801%" height="15" fill="rgb(213,43,2)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="463.50"></text></g><g><title>sqlite3VdbeDelete (1 samples, 0.08%)</title><rect x="83.6669%" y="437" width="0.0801%" height="15" fill="rgb(244,202,51)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="447.50"></text></g><g><title>sqlite3VdbeClearObject (1 samples, 0.08%)</title><rect x="83.6669%" y="421" width="0.0801%" height="15" fill="rgb(253,174,46)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="431.50"></text></g><g><title>sqlite3GetToken (1 samples, 0.08%)</title><rect x="83.8271%" y="437" width="0.0801%" height="15" fill="rgb(251,23,1)" fg:x="1047" fg:w="1"/><text x="84.0771%" y="447.50"></text></g><g><title>sqlite3ExprListSetName (1 samples, 0.08%)</title><rect x="83.9071%" y="421" width="0.0801%" height="15" fill="rgb(253,26,1)" fg:x="1048" fg:w="1"/><text x="84.1571%" y="431.50"></text></g><g><title>sqlite3FinishCoding (1 samples, 0.08%)</title><rect x="83.9872%" y="421" width="0.0801%" height="15" fill="rgb(216,89,31)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="431.50"></text></g><g><title>sqlite3VdbeMakeReady (1 samples, 0.08%)</title><rect x="83.9872%" y="405" width="0.0801%" height="15" fill="rgb(209,109,5)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="415.50"></text></g><g><title>sqlite3GenerateConstraintChecks (1 samples, 0.08%)</title><rect x="84.1473%" y="405" width="0.0801%" height="15" fill="rgb(229,63,13)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="415.50"></text></g><g><title>sqlite3VdbeAddOp3 (1 samples, 0.08%)</title><rect x="84.1473%" y="389" width="0.0801%" height="15" fill="rgb(238,137,54)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="399.50"></text></g><g><title>sqlite3WhereBegin (1 samples, 0.08%)</title><rect x="84.2274%" y="405" width="0.0801%" height="15" fill="rgb(228,1,9)" fg:x="1052" fg:w="1"/><text x="84.4774%" y="415.50"></text></g><g><title>sqlite3WhereCodeOneLoopStart (1 samples, 0.08%)</title><rect x="84.2274%" y="389" width="0.0801%" height="15" fill="rgb(249,120,48)" fg:x="1052" fg:w="1"/><text x="84.4774%" y="399.50"></text></g><g><title>sqlite3ExprIfFalse (1 samples, 0.08%)</title><rect x="84.2274%" y="373" width="0.0801%" height="15" fill="rgb(209,72,36)" fg:x="1052" fg:w="1"/><text x="84.4774%" y="383.50"></text></g><g><title>sqlite3ExprCodeRunJustOnce (1 samples, 0.08%)</title><rect x="84.2274%" y="357" width="0.0801%" height="15" fill="rgb(247,98,49)" fg:x="1052" fg:w="1"/><text x="84.4774%" y="367.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (8 samples, 0.64%)</title><rect x="83.7470%" y="485" width="0.6405%" height="15" fill="rgb(233,75,36)" fg:x="1046" fg:w="8"/><text x="83.9970%" y="495.50"></text></g><g><title>sqlite3_prepare_v2 (8 samples, 0.64%)</title><rect x="83.7470%" y="469" width="0.6405%" height="15" fill="rgb(225,14,24)" fg:x="1046" fg:w="8"/><text x="83.9970%" y="479.50"></text></g><g><title>sqlite3RunParser (7 samples, 0.56%)</title><rect x="83.8271%" y="453" width="0.5604%" height="15" fill="rgb(237,193,20)" fg:x="1047" fg:w="7"/><text x="84.0771%" y="463.50"></text></g><g><title>sqlite3Parser (6 samples, 0.48%)</title><rect x="83.9071%" y="437" width="0.4804%" height="15" fill="rgb(239,122,19)" fg:x="1048" fg:w="6"/><text x="84.1571%" y="447.50"></text></g><g><title>sqlite3Update (4 samples, 0.32%)</title><rect x="84.0673%" y="421" width="0.3203%" height="15" fill="rgb(231,220,10)" fg:x="1050" fg:w="4"/><text x="84.3173%" y="431.50"></text></g><g><title>sqlite3_free (1 samples, 0.08%)</title><rect x="84.3074%" y="405" width="0.0801%" height="15" fill="rgb(220,66,15)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="415.50"></text></g><g><title>sqlite3BtreeIndexMoveto (1 samples, 0.08%)</title><rect x="84.3875%" y="437" width="0.0801%" height="15" fill="rgb(215,171,52)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (12 samples, 0.96%)</title><rect x="83.5869%" y="533" width="0.9608%" height="15" fill="rgb(241,169,50)" fg:x="1044" fg:w="12"/><text x="83.8369%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.96%)</title><rect x="83.5869%" y="517" width="0.9608%" height="15" fill="rgb(236,189,0)" fg:x="1044" fg:w="12"/><text x="83.8369%" y="527.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::save (12 samples, 0.96%)</title><rect x="83.5869%" y="501" width="0.9608%" height="15" fill="rgb(217,147,20)" fg:x="1044" fg:w="12"/><text x="83.8369%" y="511.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (2 samples, 0.16%)</title><rect x="84.3875%" y="485" width="0.1601%" height="15" fill="rgb(206,188,39)" fg:x="1054" fg:w="2"/><text x="84.6375%" y="495.50"></text></g><g><title>sqlite3_step (2 samples, 0.16%)</title><rect x="84.3875%" y="469" width="0.1601%" height="15" fill="rgb(227,118,25)" fg:x="1054" fg:w="2"/><text x="84.6375%" y="479.50"></text></g><g><title>sqlite3VdbeExec (2 samples, 0.16%)</title><rect x="84.3875%" y="453" width="0.1601%" height="15" fill="rgb(248,171,40)" fg:x="1054" fg:w="2"/><text x="84.6375%" y="463.50"></text></g><g><title>sqlite3VdbeHalt (1 samples, 0.08%)</title><rect x="84.4676%" y="437" width="0.0801%" height="15" fill="rgb(251,90,54)" fg:x="1055" fg:w="1"/><text x="84.7176%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5476%" y="469" width="0.0801%" height="15" fill="rgb(234,11,46)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.5476%" y="501" width="0.1601%" height="15" fill="rgb(229,134,13)" fg:x="1056" fg:w="2"/><text x="84.7976%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="84.5476%" y="485" width="0.1601%" height="15" fill="rgb(223,129,3)" fg:x="1056" fg:w="2"/><text x="84.7976%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.6277%" y="469" width="0.0801%" height="15" fill="rgb(221,124,13)" fg:x="1057" fg:w="1"/><text x="84.8777%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.6277%" y="453" width="0.0801%" height="15" fill="rgb(234,3,18)" fg:x="1057" fg:w="1"/><text x="84.8777%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.6277%" y="437" width="0.0801%" height="15" fill="rgb(249,199,20)" fg:x="1057" fg:w="1"/><text x="84.8777%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6277%" y="421" width="0.0801%" height="15" fill="rgb(224,134,6)" fg:x="1057" fg:w="1"/><text x="84.8777%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.7078%" y="453" width="0.1601%" height="15" fill="rgb(254,83,26)" fg:x="1058" fg:w="2"/><text x="84.9578%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.7878%" y="437" width="0.0801%" height="15" fill="rgb(217,88,9)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.8679%" y="453" width="0.0801%" height="15" fill="rgb(225,73,2)" fg:x="1060" fg:w="1"/><text x="85.1179%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="84.8679%" y="437" width="0.0801%" height="15" fill="rgb(226,44,39)" fg:x="1060" fg:w="1"/><text x="85.1179%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9480%" y="421" width="0.0801%" height="15" fill="rgb(228,53,17)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="84.9480%" y="453" width="0.1601%" height="15" fill="rgb(212,27,27)" fg:x="1061" fg:w="2"/><text x="85.1980%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.9480%" y="437" width="0.1601%" height="15" fill="rgb(241,50,6)" fg:x="1061" fg:w="2"/><text x="85.1980%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.0280%" y="421" width="0.0801%" height="15" fill="rgb(225,28,51)" fg:x="1062" fg:w="1"/><text x="85.2780%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0280%" y="405" width="0.0801%" height="15" fill="rgb(215,33,16)" fg:x="1062" fg:w="1"/><text x="85.2780%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0280%" y="389" width="0.0801%" height="15" fill="rgb(243,40,39)" fg:x="1062" fg:w="1"/><text x="85.2780%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0280%" y="373" width="0.0801%" height="15" fill="rgb(225,11,42)" fg:x="1062" fg:w="1"/><text x="85.2780%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1081%" y="389" width="0.0801%" height="15" fill="rgb(241,220,38)" fg:x="1063" fg:w="1"/><text x="85.3581%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (7 samples, 0.56%)</title><rect x="84.7078%" y="485" width="0.5604%" height="15" fill="rgb(244,52,35)" fg:x="1058" fg:w="7"/><text x="84.9578%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="84.7078%" y="469" width="0.5604%" height="15" fill="rgb(246,42,46)" fg:x="1058" fg:w="7"/><text x="84.9578%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="85.1081%" y="453" width="0.1601%" height="15" fill="rgb(205,184,13)" fg:x="1063" fg:w="2"/><text x="85.3581%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (2 samples, 0.16%)</title><rect x="85.1081%" y="437" width="0.1601%" height="15" fill="rgb(209,48,36)" fg:x="1063" fg:w="2"/><text x="85.3581%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="85.1081%" y="421" width="0.1601%" height="15" fill="rgb(244,34,51)" fg:x="1063" fg:w="2"/><text x="85.3581%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="85.1081%" y="405" width="0.1601%" height="15" fill="rgb(221,107,33)" fg:x="1063" fg:w="2"/><text x="85.3581%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="85.1882%" y="389" width="0.0801%" height="15" fill="rgb(224,203,12)" fg:x="1064" fg:w="1"/><text x="85.4382%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="85.1882%" y="373" width="0.0801%" height="15" fill="rgb(230,215,18)" fg:x="1064" fg:w="1"/><text x="85.4382%" y="383.50"></text></g><g><title>engine::session::Session::close (23 samples, 1.84%)</title><rect x="83.5068%" y="565" width="1.8415%" height="15" fill="rgb(206,185,35)" fg:x="1043" fg:w="23"/><text x="83.7568%" y="575.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (23 samples, 1.84%)</title><rect x="83.5068%" y="549" width="1.8415%" height="15" fill="rgb(228,140,34)" fg:x="1043" fg:w="23"/><text x="83.7568%" y="559.50">e..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (10 samples, 0.80%)</title><rect x="84.5476%" y="533" width="0.8006%" height="15" fill="rgb(208,93,13)" fg:x="1056" fg:w="10"/><text x="84.7976%" y="543.50"></text></g><g><title>engine::session::Session::check_for_changes (10 samples, 0.80%)</title><rect x="84.5476%" y="517" width="0.8006%" height="15" fill="rgb(221,193,39)" fg:x="1056" fg:w="10"/><text x="84.7976%" y="527.50"></text></g><g><title>kernel::compare::any_entity_changes (8 samples, 0.64%)</title><rect x="84.7078%" y="501" width="0.6405%" height="15" fill="rgb(241,132,34)" fg:x="1058" fg:w="8"/><text x="84.9578%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="85.2682%" y="485" width="0.0801%" height="15" fill="rgb(221,141,10)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="495.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="85.2682%" y="469" width="0.0801%" height="15" fill="rgb(226,90,31)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.2682%" y="453" width="0.0801%" height="15" fill="rgb(243,75,5)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.2682%" y="437" width="0.0801%" height="15" fill="rgb(227,156,21)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.2682%" y="421" width="0.0801%" height="15" fill="rgb(250,195,8)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.2682%" y="405" width="0.0801%" height="15" fill="rgb(220,134,5)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.2682%" y="389" width="0.0801%" height="15" fill="rgb(246,106,34)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.2682%" y="373" width="0.0801%" height="15" fill="rgb(205,1,4)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.2682%" y="357" width="0.0801%" height="15" fill="rgb(224,151,29)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.2682%" y="341" width="0.0801%" height="15" fill="rgb(251,196,0)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.2682%" y="325" width="0.0801%" height="15" fill="rgb(212,127,0)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.2682%" y="309" width="0.0801%" height="15" fill="rgb(236,71,53)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="85.2682%" y="293" width="0.0801%" height="15" fill="rgb(227,99,0)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.4283%" y="485" width="0.0801%" height="15" fill="rgb(239,89,21)" fg:x="1067" fg:w="1"/><text x="85.6783%" y="495.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.08%)</title><rect x="85.5084%" y="421" width="0.0801%" height="15" fill="rgb(243,122,19)" fg:x="1068" fg:w="1"/><text x="85.7584%" y="431.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd (2 samples, 0.16%)</title><rect x="85.5885%" y="341" width="0.1601%" height="15" fill="rgb(229,192,45)" fg:x="1069" fg:w="2"/><text x="85.8385%" y="351.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::cache_next_state (2 samples, 0.16%)</title><rect x="85.5885%" y="325" width="0.1601%" height="15" fill="rgb(235,165,35)" fg:x="1069" fg:w="2"/><text x="85.8385%" y="335.50"></text></g><g><title>regex_automata::util::determinize::next (1 samples, 0.08%)</title><rect x="85.6685%" y="309" width="0.0801%" height="15" fill="rgb(253,202,0)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="85.5885%" y="405" width="0.2402%" height="15" fill="rgb(235,51,20)" fg:x="1069" fg:w="3"/><text x="85.8385%" y="415.50"></text></g><g><title>&lt;regex_automata::meta::regex::Split as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="85.5885%" y="389" width="0.2402%" height="15" fill="rgb(218,95,46)" fg:x="1069" fg:w="3"/><text x="85.8385%" y="399.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search (3 samples, 0.24%)</title><rect x="85.5885%" y="373" width="0.2402%" height="15" fill="rgb(212,81,10)" fg:x="1069" fg:w="3"/><text x="85.8385%" y="383.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::try_search (3 samples, 0.24%)</title><rect x="85.5885%" y="357" width="0.2402%" height="15" fill="rgb(240,59,0)" fg:x="1069" fg:w="3"/><text x="85.8385%" y="367.50"></text></g><g><title>regex_automata::hybrid::search::find_rev (1 samples, 0.08%)</title><rect x="85.7486%" y="341" width="0.0801%" height="15" fill="rgb(212,191,42)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="351.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::cache_next_state (1 samples, 0.08%)</title><rect x="85.7486%" y="325" width="0.0801%" height="15" fill="rgb(233,140,3)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.7486%" y="309" width="0.0801%" height="15" fill="rgb(215,69,23)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.7486%" y="293" width="0.0801%" height="15" fill="rgb(240,202,20)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.7486%" y="277" width="0.0801%" height="15" fill="rgb(209,146,50)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.8287%" y="325" width="0.0801%" height="15" fill="rgb(253,102,54)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (11 samples, 0.88%)</title><rect x="85.8287%" y="341" width="0.8807%" height="15" fill="rgb(250,173,47)" fg:x="1072" fg:w="11"/><text x="86.0787%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (10 samples, 0.80%)</title><rect x="85.9087%" y="325" width="0.8006%" height="15" fill="rgb(232,142,7)" fg:x="1073" fg:w="10"/><text x="86.1587%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.6293%" y="309" width="0.0801%" height="15" fill="rgb(230,157,47)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="319.50"></text></g><g><title>regex_automata::meta::wrappers::Hybrid::new (2 samples, 0.16%)</title><rect x="86.7094%" y="341" width="0.1601%" height="15" fill="rgb(214,177,35)" fg:x="1083" fg:w="2"/><text x="86.9594%" y="351.50"></text></g><g><title>regex_automata::meta::wrappers::PikeVM::new (1 samples, 0.08%)</title><rect x="86.8695%" y="341" width="0.0801%" height="15" fill="rgb(234,119,46)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::new (1 samples, 0.08%)</title><rect x="86.8695%" y="325" width="0.0801%" height="15" fill="rgb(241,180,50)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::range_trie::RangeTrie::new (1 samples, 0.08%)</title><rect x="86.8695%" y="309" width="0.0801%" height="15" fill="rgb(221,54,25)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0296%" y="277" width="0.0801%" height="15" fill="rgb(209,157,44)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.08%)</title><rect x="87.1097%" y="277" width="0.0801%" height="15" fill="rgb(246,115,41)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="87.1097%" y="261" width="0.0801%" height="15" fill="rgb(229,86,1)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.1097%" y="245" width="0.0801%" height="15" fill="rgb(240,108,53)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.1097%" y="229" width="0.0801%" height="15" fill="rgb(227,134,2)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="239.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::add (4 samples, 0.32%)</title><rect x="87.1898%" y="277" width="0.3203%" height="15" fill="rgb(213,129,25)" fg:x="1089" fg:w="4"/><text x="87.4398%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (2 samples, 0.16%)</title><rect x="87.3499%" y="261" width="0.1601%" height="15" fill="rgb(226,35,21)" fg:x="1091" fg:w="2"/><text x="87.5999%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="87.4299%" y="245" width="0.0801%" height="15" fill="rgb(208,129,26)" fg:x="1092" fg:w="1"/><text x="87.6799%" y="255.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.08%)</title><rect x="87.5100%" y="261" width="0.0801%" height="15" fill="rgb(224,83,6)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="87.5100%" y="245" width="0.0801%" height="15" fill="rgb(227,52,39)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.5100%" y="229" width="0.0801%" height="15" fill="rgb(241,30,17)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.5100%" y="213" width="0.0801%" height="15" fill="rgb(246,186,42)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="223.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (18 samples, 1.44%)</title><rect x="87.5100%" y="277" width="1.4412%" height="15" fill="rgb(221,169,15)" fg:x="1093" fg:w="18"/><text x="87.7600%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (17 samples, 1.36%)</title><rect x="87.5901%" y="261" width="1.3611%" height="15" fill="rgb(235,108,21)" fg:x="1094" fg:w="17"/><text x="87.8401%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (17 samples, 1.36%)</title><rect x="87.5901%" y="245" width="1.3611%" height="15" fill="rgb(219,148,30)" fg:x="1094" fg:w="17"/><text x="87.8401%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 2.08%)</title><rect x="86.9496%" y="325" width="2.0817%" height="15" fill="rgb(220,109,5)" fg:x="1086" fg:w="26"/><text x="87.1996%" y="335.50">&lt;..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (26 samples, 2.08%)</title><rect x="86.9496%" y="309" width="2.0817%" height="15" fill="rgb(213,203,48)" fg:x="1086" fg:w="26"/><text x="87.1996%" y="319.50">r..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (26 samples, 2.08%)</title><rect x="86.9496%" y="293" width="2.0817%" height="15" fill="rgb(244,71,33)" fg:x="1086" fg:w="26"/><text x="87.1996%" y="303.50">r..</text></g><g><title>regex_syntax::utf8::Utf8Sequences::new (1 samples, 0.08%)</title><rect x="88.9512%" y="277" width="0.0801%" height="15" fill="rgb(209,23,2)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="88.9512%" y="261" width="0.0801%" height="15" fill="rgb(219,97,7)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.9512%" y="245" width="0.0801%" height="15" fill="rgb(216,161,23)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="255.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (2 samples, 0.16%)</title><rect x="89.0312%" y="309" width="0.1601%" height="15" fill="rgb(207,45,42)" fg:x="1112" fg:w="2"/><text x="89.2812%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="89.0312%" y="293" width="0.1601%" height="15" fill="rgb(241,61,4)" fg:x="1112" fg:w="2"/><text x="89.2812%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.1113%" y="277" width="0.0801%" height="15" fill="rgb(236,170,1)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="89.1113%" y="261" width="0.0801%" height="15" fill="rgb(239,72,5)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::into_nfa (1 samples, 0.08%)</title><rect x="89.1914%" y="309" width="0.0801%" height="15" fill="rgb(214,13,50)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1914%" y="293" width="0.0801%" height="15" fill="rgb(224,88,9)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (4 samples, 0.32%)</title><rect x="89.0312%" y="325" width="0.3203%" height="15" fill="rgb(238,192,34)" fg:x="1112" fg:w="4"/><text x="89.2812%" y="335.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::new (1 samples, 0.08%)</title><rect x="89.2714%" y="309" width="0.0801%" height="15" fill="rgb(217,203,50)" fg:x="1115" fg:w="1"/><text x="89.5214%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (31 samples, 2.48%)</title><rect x="86.9496%" y="341" width="2.4820%" height="15" fill="rgb(241,123,32)" fg:x="1086" fg:w="31"/><text x="87.1996%" y="351.50">re..</text></g><g><title>regex_automata::nfa::thompson::builder::Builder::clear (1 samples, 0.08%)</title><rect x="89.3515%" y="325" width="0.0801%" height="15" fill="rgb(248,151,39)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="335.50"></text></g><g><title>regex_automata::meta::strategy::new (46 samples, 3.68%)</title><rect x="85.8287%" y="357" width="3.6829%" height="15" fill="rgb(208,89,6)" fg:x="1072" fg:w="46"/><text x="86.0787%" y="367.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::new (1 samples, 0.08%)</title><rect x="89.4315%" y="341" width="0.0801%" height="15" fill="rgb(254,43,26)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::range_trie::RangeTrie::new (1 samples, 0.08%)</title><rect x="89.4315%" y="325" width="0.0801%" height="15" fill="rgb(216,158,13)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::range_trie::RangeTrie::add_empty (1 samples, 0.08%)</title><rect x="89.4315%" y="309" width="0.0801%" height="15" fill="rgb(212,47,37)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="89.4315%" y="293" width="0.0801%" height="15" fill="rgb(254,16,10)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="303.50"></text></g><g><title>&lt;regex::regex::string::Regex as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (47 samples, 3.76%)</title><rect x="85.8287%" y="405" width="3.7630%" height="15" fill="rgb(223,228,16)" fg:x="1072" fg:w="47"/><text x="86.0787%" y="415.50">&lt;reg..</text></g><g><title>regex::builders::Builder::build_one_string (47 samples, 3.76%)</title><rect x="85.8287%" y="389" width="3.7630%" height="15" fill="rgb(249,108,50)" fg:x="1072" fg:w="47"/><text x="86.0787%" y="399.50">rege..</text></g><g><title>regex_automata::meta::regex::Builder::build (47 samples, 3.76%)</title><rect x="85.8287%" y="373" width="3.7630%" height="15" fill="rgb(208,220,5)" fg:x="1072" fg:w="47"/><text x="86.0787%" y="383.50">rege..</text></g><g><title>regex_syntax::hir::translate::Translator::translate (1 samples, 0.08%)</title><rect x="89.5116%" y="357" width="0.0801%" height="15" fill="rgb(217,89,48)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="367.50"></text></g><g><title>regex_syntax::ast::visitor::visit (1 samples, 0.08%)</title><rect x="89.5116%" y="341" width="0.0801%" height="15" fill="rgb(212,113,41)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="351.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (1 samples, 0.08%)</title><rect x="89.5116%" y="325" width="0.0801%" height="15" fill="rgb(231,127,5)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="89.5116%" y="309" width="0.0801%" height="15" fill="rgb(217,141,17)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.5116%" y="293" width="0.0801%" height="15" fill="rgb(245,125,54)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5917%" y="405" width="0.0801%" height="15" fill="rgb(248,125,3)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="89.6717%" y="373" width="0.0801%" height="15" fill="rgb(236,119,51)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="89.6717%" y="357" width="0.0801%" height="15" fill="rgb(239,99,8)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6717%" y="341" width="0.0801%" height="15" fill="rgb(224,228,4)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::regex::string::Regex&gt; (2 samples, 0.16%)</title><rect x="89.6717%" y="405" width="0.1601%" height="15" fill="rgb(220,131,45)" fg:x="1120" fg:w="2"/><text x="89.9217%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::pool::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::marker::Send+core::panic::unwind_safe::RefUnwindSafe+core::panic::unwind_safe::UnwindSafe+core::marker::Sync&gt;&gt;&gt; (2 samples, 0.16%)</title><rect x="89.6717%" y="389" width="0.1601%" height="15" fill="rgb(215,62,5)" fg:x="1120" fg:w="2"/><text x="89.9217%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::meta::regex::Cache&gt; (1 samples, 0.08%)</title><rect x="89.7518%" y="373" width="0.0801%" height="15" fill="rgb(253,12,24)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::hybrid::dfa::Cache&gt; (1 samples, 0.08%)</title><rect x="89.7518%" y="357" width="0.0801%" height="15" fill="rgb(248,120,50)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7518%" y="341" width="0.0801%" height="15" fill="rgb(245,194,10)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="351.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::new (2 samples, 0.16%)</title><rect x="89.8319%" y="357" width="0.1601%" height="15" fill="rgb(241,149,38)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="367.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::init_cache (2 samples, 0.16%)</title><rect x="89.8319%" y="341" width="0.1601%" height="15" fill="rgb(219,215,7)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="351.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::set_transition (1 samples, 0.08%)</title><rect x="89.9119%" y="325" width="0.0801%" height="15" fill="rgb(208,120,31)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="335.50"></text></g><g><title>indefinite::helper::Helper::get_first_word (56 samples, 4.48%)</title><rect x="85.5885%" y="421" width="4.4836%" height="15" fill="rgb(244,30,8)" fg:x="1069" fg:w="56"/><text x="85.8385%" y="431.50">indef..</text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get_slow (3 samples, 0.24%)</title><rect x="89.8319%" y="405" width="0.2402%" height="15" fill="rgb(238,35,44)" fg:x="1122" fg:w="3"/><text x="90.0819%" y="415.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir::{{closure}} (3 samples, 0.24%)</title><rect x="89.8319%" y="389" width="0.2402%" height="15" fill="rgb(243,218,37)" fg:x="1122" fg:w="3"/><text x="90.0819%" y="399.50"></text></g><g><title>&lt;regex_automata::meta::strategy::ReverseAnchored as regex_automata::meta::strategy::Strategy&gt;::create_cache (3 samples, 0.24%)</title><rect x="89.8319%" y="373" width="0.2402%" height="15" fill="rgb(218,169,10)" fg:x="1122" fg:w="3"/><text x="90.0819%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::PikeVM::create_cache (1 samples, 0.08%)</title><rect x="89.9920%" y="357" width="0.0801%" height="15" fill="rgb(221,144,10)" fg:x="1124" fg:w="1"/><text x="90.2420%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::pikevm::ActiveStates::reset (1 samples, 0.08%)</title><rect x="89.9920%" y="341" width="0.0801%" height="15" fill="rgb(226,41,38)" fg:x="1124" fg:w="1"/><text x="90.2420%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (1 samples, 0.08%)</title><rect x="90.0721%" y="357" width="0.0801%" height="15" fill="rgb(228,3,1)" fg:x="1125" fg:w="1"/><text x="90.3221%" y="367.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.0721%" y="341" width="0.0801%" height="15" fill="rgb(209,129,12)" fg:x="1125" fg:w="1"/><text x="90.3221%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (1 samples, 0.08%)</title><rect x="90.0721%" y="325" width="0.0801%" height="15" fill="rgb(213,136,33)" fg:x="1125" fg:w="1"/><text x="90.3221%" y="335.50"></text></g><g><title>&lt;regex_syntax::ast::ClassSet as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.0721%" y="309" width="0.0801%" height="15" fill="rgb(209,181,29)" fg:x="1125" fg:w="1"/><text x="90.3221%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (1 samples, 0.08%)</title><rect x="90.0721%" y="293" width="0.0801%" height="15" fill="rgb(234,173,18)" fg:x="1125" fg:w="1"/><text x="90.3221%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;alloc::sync::Arc&lt;str&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="90.2322%" y="325" width="0.0801%" height="15" fill="rgb(227,73,47)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (5 samples, 0.40%)</title><rect x="90.1521%" y="341" width="0.4003%" height="15" fill="rgb(234,9,34)" fg:x="1126" fg:w="5"/><text x="90.4021%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (3 samples, 0.24%)</title><rect x="90.3122%" y="325" width="0.2402%" height="15" fill="rgb(235,172,15)" fg:x="1128" fg:w="3"/><text x="90.5622%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="90.7926%" y="309" width="0.0801%" height="15" fill="rgb(245,61,2)" fg:x="1134" fg:w="1"/><text x="91.0426%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.7926%" y="293" width="0.0801%" height="15" fill="rgb(238,39,47)" fg:x="1134" fg:w="1"/><text x="91.0426%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7926%" y="277" width="0.0801%" height="15" fill="rgb(234,37,24)" fg:x="1134" fg:w="1"/><text x="91.0426%" y="287.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (1 samples, 0.08%)</title><rect x="90.8727%" y="309" width="0.0801%" height="15" fill="rgb(248,223,24)" fg:x="1135" fg:w="1"/><text x="91.1227%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="90.8727%" y="293" width="0.0801%" height="15" fill="rgb(223,12,15)" fg:x="1135" fg:w="1"/><text x="91.1227%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.8727%" y="277" width="0.0801%" height="15" fill="rgb(249,6,3)" fg:x="1135" fg:w="1"/><text x="91.1227%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="90.8727%" y="261" width="0.0801%" height="15" fill="rgb(237,105,33)" fg:x="1135" fg:w="1"/><text x="91.1227%" y="271.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::compile_transition (3 samples, 0.24%)</title><rect x="90.9528%" y="309" width="0.2402%" height="15" fill="rgb(252,208,35)" fg:x="1136" fg:w="3"/><text x="91.2028%" y="319.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (2 samples, 0.16%)</title><rect x="91.0328%" y="293" width="0.1601%" height="15" fill="rgb(215,181,35)" fg:x="1137" fg:w="2"/><text x="91.2828%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="91.1129%" y="277" width="0.0801%" height="15" fill="rgb(246,212,3)" fg:x="1138" fg:w="1"/><text x="91.3629%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="91.1129%" y="261" width="0.0801%" height="15" fill="rgb(247,156,24)" fg:x="1138" fg:w="1"/><text x="91.3629%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="91.1129%" y="245" width="0.0801%" height="15" fill="rgb(248,9,31)" fg:x="1138" fg:w="1"/><text x="91.3629%" y="255.50"></text></g><g><title>regex_automata::meta::wrappers::OnePass::new (11 samples, 0.88%)</title><rect x="90.5524%" y="341" width="0.8807%" height="15" fill="rgb(234,26,45)" fg:x="1131" fg:w="11"/><text x="90.8024%" y="351.50"></text></g><g><title>regex_automata::dfa::onepass::Builder::build_from_nfa (11 samples, 0.88%)</title><rect x="90.5524%" y="325" width="0.8807%" height="15" fill="rgb(249,11,32)" fg:x="1131" fg:w="11"/><text x="90.8024%" y="335.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::shuffle_states (3 samples, 0.24%)</title><rect x="91.1930%" y="309" width="0.2402%" height="15" fill="rgb(249,162,33)" fg:x="1139" fg:w="3"/><text x="91.4430%" y="319.50"></text></g><g><title>regex_automata::dfa::remapper::Remapper::remap (3 samples, 0.24%)</title><rect x="91.1930%" y="293" width="0.2402%" height="15" fill="rgb(232,4,32)" fg:x="1139" fg:w="3"/><text x="91.4430%" y="303.50"></text></g><g><title>regex_automata::dfa::remapper::onepass::&lt;impl regex_automata::dfa::remapper::Remappable for regex_automata::dfa::onepass::DFA&gt;::remap (3 samples, 0.24%)</title><rect x="91.1930%" y="277" width="0.2402%" height="15" fill="rgb(212,5,45)" fg:x="1139" fg:w="3"/><text x="91.4430%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (5 samples, 0.40%)</title><rect x="92.0737%" y="229" width="0.4003%" height="15" fill="rgb(227,95,13)" fg:x="1150" fg:w="5"/><text x="92.3237%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="92.3139%" y="213" width="0.1601%" height="15" fill="rgb(223,205,10)" fg:x="1153" fg:w="2"/><text x="92.5639%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="92.3139%" y="197" width="0.1601%" height="15" fill="rgb(222,178,8)" fg:x="1153" fg:w="2"/><text x="92.5639%" y="207.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="92.3139%" y="181" width="0.1601%" height="15" fill="rgb(216,13,22)" fg:x="1153" fg:w="2"/><text x="92.5639%" y="191.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::patch (1 samples, 0.08%)</title><rect x="92.4740%" y="229" width="0.0801%" height="15" fill="rgb(240,167,12)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="92.4740%" y="213" width="0.0801%" height="15" fill="rgb(235,68,35)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.4740%" y="197" width="0.0801%" height="15" fill="rgb(253,40,27)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="92.4740%" y="181" width="0.0801%" height="15" fill="rgb(214,19,28)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="191.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::add (6 samples, 0.48%)</title><rect x="92.5540%" y="229" width="0.4804%" height="15" fill="rgb(210,167,45)" fg:x="1156" fg:w="6"/><text x="92.8040%" y="239.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (5 samples, 0.40%)</title><rect x="92.6341%" y="213" width="0.4003%" height="15" fill="rgb(232,97,40)" fg:x="1157" fg:w="5"/><text x="92.8841%" y="223.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile (2 samples, 0.16%)</title><rect x="92.8743%" y="197" width="0.1601%" height="15" fill="rgb(250,35,23)" fg:x="1160" fg:w="2"/><text x="93.1243%" y="207.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.08%)</title><rect x="92.9544%" y="181" width="0.0801%" height="15" fill="rgb(248,47,53)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="92.9544%" y="165" width="0.0801%" height="15" fill="rgb(226,58,50)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.9544%" y="149" width="0.0801%" height="15" fill="rgb(217,105,26)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="92.9544%" y="133" width="0.0801%" height="15" fill="rgb(208,64,1)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="143.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::finish (1 samples, 0.08%)</title><rect x="93.0344%" y="229" width="0.0801%" height="15" fill="rgb(214,80,1)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="239.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile (1 samples, 0.08%)</title><rect x="93.0344%" y="213" width="0.0801%" height="15" fill="rgb(206,175,26)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="223.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (24 samples, 1.92%)</title><rect x="93.1145%" y="229" width="1.9215%" height="15" fill="rgb(235,156,37)" fg:x="1163" fg:w="24"/><text x="93.3645%" y="239.50">r..</text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (24 samples, 1.92%)</title><rect x="93.1145%" y="213" width="1.9215%" height="15" fill="rgb(213,100,9)" fg:x="1163" fg:w="24"/><text x="93.3645%" y="223.50">r..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (24 samples, 1.92%)</title><rect x="93.1145%" y="197" width="1.9215%" height="15" fill="rgb(241,15,13)" fg:x="1163" fg:w="24"/><text x="93.3645%" y="207.50">a..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (47 samples, 3.76%)</title><rect x="91.4331%" y="261" width="3.7630%" height="15" fill="rgb(205,97,43)" fg:x="1142" fg:w="47"/><text x="91.6831%" y="271.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (47 samples, 3.76%)</title><rect x="91.4331%" y="245" width="3.7630%" height="15" fill="rgb(216,106,32)" fg:x="1142" fg:w="47"/><text x="91.6831%" y="255.50">rege..</text></g><g><title>regex_automata::nfa::thompson::map::Utf8SuffixMap::clear (2 samples, 0.16%)</title><rect x="95.0360%" y="229" width="0.1601%" height="15" fill="rgb(226,200,8)" fg:x="1187" fg:w="2"/><text x="95.2860%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1161%" y="213" width="0.0801%" height="15" fill="rgb(244,54,29)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 3.84%)</title><rect x="91.4331%" y="325" width="3.8431%" height="15" fill="rgb(252,169,12)" fg:x="1142" fg:w="48"/><text x="91.6831%" y="335.50">&lt;cor..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (48 samples, 3.84%)</title><rect x="91.4331%" y="309" width="3.8431%" height="15" fill="rgb(231,199,11)" fg:x="1142" fg:w="48"/><text x="91.6831%" y="319.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (48 samples, 3.84%)</title><rect x="91.4331%" y="293" width="3.8431%" height="15" fill="rgb(233,191,18)" fg:x="1142" fg:w="48"/><text x="91.6831%" y="303.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (48 samples, 3.84%)</title><rect x="91.4331%" y="277" width="3.8431%" height="15" fill="rgb(215,83,47)" fg:x="1142" fg:w="48"/><text x="91.6831%" y="287.50">rege..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_bounded (1 samples, 0.08%)</title><rect x="95.1962%" y="261" width="0.0801%" height="15" fill="rgb(251,67,19)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (1 samples, 0.08%)</title><rect x="95.3563%" y="309" width="0.0801%" height="15" fill="rgb(240,7,20)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::into_nfa (1 samples, 0.08%)</title><rect x="95.4363%" y="309" width="0.0801%" height="15" fill="rgb(210,150,26)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4363%" y="293" width="0.0801%" height="15" fill="rgb(228,75,42)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="303.50"></text></g><g><title>regex_automata::meta::strategy::new (69 samples, 5.52%)</title><rect x="90.1521%" y="357" width="5.5244%" height="15" fill="rgb(237,134,48)" fg:x="1126" fg:w="69"/><text x="90.4021%" y="367.50">regex_a..</text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (53 samples, 4.24%)</title><rect x="91.4331%" y="341" width="4.2434%" height="15" fill="rgb(205,80,50)" fg:x="1142" fg:w="53"/><text x="91.6831%" y="351.50">regex..</text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (5 samples, 0.40%)</title><rect x="95.2762%" y="325" width="0.4003%" height="15" fill="rgb(217,74,48)" fg:x="1190" fg:w="5"/><text x="95.5262%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::remap (2 samples, 0.16%)</title><rect x="95.5164%" y="309" width="0.1601%" height="15" fill="rgb(205,82,50)" fg:x="1193" fg:w="2"/><text x="95.7664%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_range (1 samples, 0.08%)</title><rect x="95.6765%" y="309" width="0.0801%" height="15" fill="rgb(228,1,33)" fg:x="1195" fg:w="1"/><text x="95.9265%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_item (1 samples, 0.08%)</title><rect x="95.6765%" y="293" width="0.0801%" height="15" fill="rgb(214,50,23)" fg:x="1195" fg:w="1"/><text x="95.9265%" y="303.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_class (1 samples, 0.08%)</title><rect x="95.7566%" y="309" width="0.0801%" height="15" fill="rgb(210,62,9)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (1 samples, 0.08%)</title><rect x="95.7566%" y="293" width="0.0801%" height="15" fill="rgb(210,104,37)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="303.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (3 samples, 0.24%)</title><rect x="95.6765%" y="357" width="0.2402%" height="15" fill="rgb(232,104,43)" fg:x="1195" fg:w="3"/><text x="95.9265%" y="367.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (3 samples, 0.24%)</title><rect x="95.6765%" y="341" width="0.2402%" height="15" fill="rgb(244,52,6)" fg:x="1195" fg:w="3"/><text x="95.9265%" y="351.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (3 samples, 0.24%)</title><rect x="95.6765%" y="325" width="0.2402%" height="15" fill="rgb(211,174,52)" fg:x="1195" fg:w="3"/><text x="95.9265%" y="335.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_class_open (1 samples, 0.08%)</title><rect x="95.8367%" y="309" width="0.0801%" height="15" fill="rgb(229,48,4)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="95.8367%" y="293" width="0.0801%" height="15" fill="rgb(205,155,16)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.8367%" y="277" width="0.0801%" height="15" fill="rgb(211,141,53)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8367%" y="261" width="0.0801%" height="15" fill="rgb(240,148,11)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="95.9167%" y="309" width="0.0801%" height="15" fill="rgb(214,45,23)" fg:x="1198" fg:w="1"/><text x="96.1667%" y="319.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (2 samples, 0.16%)</title><rect x="95.9167%" y="325" width="0.1601%" height="15" fill="rgb(248,74,26)" fg:x="1198" fg:w="2"/><text x="96.1667%" y="335.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (1 samples, 0.08%)</title><rect x="95.9968%" y="309" width="0.0801%" height="15" fill="rgb(218,121,16)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="319.50"></text></g><g><title>&lt;regex::regex::string::Regex as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (77 samples, 6.16%)</title><rect x="90.0721%" y="405" width="6.1649%" height="15" fill="rgb(218,10,47)" fg:x="1125" fg:w="77"/><text x="90.3221%" y="415.50">&lt;regex::..</text></g><g><title>regex::builders::Builder::build_one_string (77 samples, 6.16%)</title><rect x="90.0721%" y="389" width="6.1649%" height="15" fill="rgb(227,99,14)" fg:x="1125" fg:w="77"/><text x="90.3221%" y="399.50">regex::b..</text></g><g><title>regex_automata::meta::regex::Builder::build (77 samples, 6.16%)</title><rect x="90.0721%" y="373" width="6.1649%" height="15" fill="rgb(229,83,46)" fg:x="1125" fg:w="77"/><text x="90.3221%" y="383.50">regex_au..</text></g><g><title>regex_syntax::hir::translate::Translator::translate (4 samples, 0.32%)</title><rect x="95.9167%" y="357" width="0.3203%" height="15" fill="rgb(228,25,1)" fg:x="1198" fg:w="4"/><text x="96.1667%" y="367.50"></text></g><g><title>regex_syntax::ast::visitor::visit (4 samples, 0.32%)</title><rect x="95.9167%" y="341" width="0.3203%" height="15" fill="rgb(252,190,15)" fg:x="1198" fg:w="4"/><text x="96.1667%" y="351.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_pre (2 samples, 0.16%)</title><rect x="96.0769%" y="325" width="0.1601%" height="15" fill="rgb(213,103,51)" fg:x="1200" fg:w="2"/><text x="96.3269%" y="335.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::push (1 samples, 0.08%)</title><rect x="96.1569%" y="309" width="0.0801%" height="15" fill="rgb(220,38,44)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::regex::string::Regex&gt; (1 samples, 0.08%)</title><rect x="96.2370%" y="405" width="0.0801%" height="15" fill="rgb(210,45,26)" fg:x="1202" fg:w="1"/><text x="96.4870%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::pool::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::marker::Send+core::panic::unwind_safe::RefUnwindSafe+core::panic::unwind_safe::UnwindSafe+core::marker::Sync&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="96.2370%" y="389" width="0.0801%" height="15" fill="rgb(205,95,48)" fg:x="1202" fg:w="1"/><text x="96.4870%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="96.2370%" y="373" width="0.0801%" height="15" fill="rgb(225,179,37)" fg:x="1202" fg:w="1"/><text x="96.4870%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2370%" y="357" width="0.0801%" height="15" fill="rgb(230,209,3)" fg:x="1202" fg:w="1"/><text x="96.4870%" y="367.50"></text></g><g><title>indefinite::rules::number::Number::check (83 samples, 6.65%)</title><rect x="90.0721%" y="421" width="6.6453%" height="15" fill="rgb(248,12,46)" fg:x="1125" fg:w="83"/><text x="90.3221%" y="431.50">indefinit..</text></g><g><title>regex::regex::string::Regex::is_match_at (5 samples, 0.40%)</title><rect x="96.3171%" y="405" width="0.4003%" height="15" fill="rgb(234,18,0)" fg:x="1203" fg:w="5"/><text x="96.5671%" y="415.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get_slow (5 samples, 0.40%)</title><rect x="96.3171%" y="389" width="0.4003%" height="15" fill="rgb(238,197,14)" fg:x="1203" fg:w="5"/><text x="96.5671%" y="399.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir::{{closure}} (5 samples, 0.40%)</title><rect x="96.3171%" y="373" width="0.4003%" height="15" fill="rgb(251,162,48)" fg:x="1203" fg:w="5"/><text x="96.5671%" y="383.50"></text></g><g><title>&lt;regex_automata::meta::strategy::ReverseAnchored as regex_automata::meta::strategy::Strategy&gt;::create_cache (5 samples, 0.40%)</title><rect x="96.3171%" y="357" width="0.4003%" height="15" fill="rgb(237,73,42)" fg:x="1203" fg:w="5"/><text x="96.5671%" y="367.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::new (4 samples, 0.32%)</title><rect x="96.3971%" y="341" width="0.3203%" height="15" fill="rgb(211,108,8)" fg:x="1204" fg:w="4"/><text x="96.6471%" y="351.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::init_cache (4 samples, 0.32%)</title><rect x="96.3971%" y="325" width="0.3203%" height="15" fill="rgb(213,45,22)" fg:x="1204" fg:w="4"/><text x="96.6471%" y="335.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::set_transition (3 samples, 0.24%)</title><rect x="96.4772%" y="309" width="0.2402%" height="15" fill="rgb(252,154,5)" fg:x="1205" fg:w="3"/><text x="96.7272%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.7174%" y="341" width="0.0801%" height="15" fill="rgb(221,79,52)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.7174%" y="325" width="0.0801%" height="15" fill="rgb(229,220,36)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (3 samples, 0.24%)</title><rect x="96.7974%" y="341" width="0.2402%" height="15" fill="rgb(211,17,16)" fg:x="1209" fg:w="3"/><text x="97.0474%" y="351.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="96.7974%" y="325" width="0.2402%" height="15" fill="rgb(222,55,31)" fg:x="1209" fg:w="3"/><text x="97.0474%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (3 samples, 0.24%)</title><rect x="96.7974%" y="309" width="0.2402%" height="15" fill="rgb(221,221,31)" fg:x="1209" fg:w="3"/><text x="97.0474%" y="319.50"></text></g><g><title>&lt;regex_syntax::ast::ClassSet as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="96.7974%" y="293" width="0.2402%" height="15" fill="rgb(227,168,26)" fg:x="1209" fg:w="3"/><text x="97.0474%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.9576%" y="277" width="0.0801%" height="15" fill="rgb(224,139,9)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (1 samples, 0.08%)</title><rect x="97.0376%" y="325" width="0.0801%" height="15" fill="rgb(254,172,0)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.0376%" y="309" width="0.0801%" height="15" fill="rgb(235,203,1)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="319.50"></text></g><g><title>regex_automata::meta::wrappers::BoundedBacktracker::new (1 samples, 0.08%)</title><rect x="97.1177%" y="325" width="0.0801%" height="15" fill="rgb(216,205,24)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::new (1 samples, 0.08%)</title><rect x="97.1177%" y="309" width="0.0801%" height="15" fill="rgb(233,24,6)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="319.50"></text></g><g><title>regex_automata::meta::wrappers::Hybrid::new (1 samples, 0.08%)</title><rect x="97.1978%" y="325" width="0.0801%" height="15" fill="rgb(244,110,9)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="335.50"></text></g><g><title>regex_automata::hybrid::dfa::Builder::build_from_nfa (1 samples, 0.08%)</title><rect x="97.1978%" y="309" width="0.0801%" height="15" fill="rgb(239,222,42)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (1 samples, 0.08%)</title><rect x="97.2778%" y="293" width="0.0801%" height="15" fill="rgb(218,145,13)" fg:x="1215" fg:w="1"/><text x="97.5278%" y="303.50"></text></g><g><title>regex_automata::meta::strategy::new (6 samples, 0.48%)</title><rect x="97.0376%" y="341" width="0.4804%" height="15" fill="rgb(207,69,11)" fg:x="1212" fg:w="6"/><text x="97.2876%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (3 samples, 0.24%)</title><rect x="97.2778%" y="325" width="0.2402%" height="15" fill="rgb(220,223,22)" fg:x="1215" fg:w="3"/><text x="97.5278%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (3 samples, 0.24%)</title><rect x="97.2778%" y="309" width="0.2402%" height="15" fill="rgb(245,102,5)" fg:x="1215" fg:w="3"/><text x="97.5278%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::into_nfa (2 samples, 0.16%)</title><rect x="97.3579%" y="293" width="0.1601%" height="15" fill="rgb(211,148,2)" fg:x="1216" fg:w="2"/><text x="97.6079%" y="303.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_range (1 samples, 0.08%)</title><rect x="97.6781%" y="293" width="0.0801%" height="15" fill="rgb(241,13,44)" fg:x="1220" fg:w="1"/><text x="97.9281%" y="303.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (4 samples, 0.32%)</title><rect x="97.5180%" y="341" width="0.3203%" height="15" fill="rgb(219,137,21)" fg:x="1218" fg:w="4"/><text x="97.7680%" y="351.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (4 samples, 0.32%)</title><rect x="97.5180%" y="325" width="0.3203%" height="15" fill="rgb(242,206,5)" fg:x="1218" fg:w="4"/><text x="97.7680%" y="335.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (4 samples, 0.32%)</title><rect x="97.5180%" y="309" width="0.3203%" height="15" fill="rgb(217,114,22)" fg:x="1218" fg:w="4"/><text x="97.7680%" y="319.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_class_open (1 samples, 0.08%)</title><rect x="97.7582%" y="293" width="0.0801%" height="15" fill="rgb(253,206,42)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="97.8383%" y="293" width="0.0801%" height="15" fill="rgb(236,102,18)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="97.8383%" y="277" width="0.0801%" height="15" fill="rgb(208,59,49)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="97.8383%" y="261" width="0.0801%" height="15" fill="rgb(215,194,28)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="97.9183%" y="277" width="0.0801%" height="15" fill="rgb(243,207,11)" fg:x="1223" fg:w="1"/><text x="98.1683%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="97.9183%" y="261" width="0.0801%" height="15" fill="rgb(254,179,35)" fg:x="1223" fg:w="1"/><text x="98.1683%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="97.9183%" y="245" width="0.0801%" height="15" fill="rgb(235,97,3)" fg:x="1223" fg:w="1"/><text x="98.1683%" y="255.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (3 samples, 0.24%)</title><rect x="97.8383%" y="309" width="0.2402%" height="15" fill="rgb(215,155,33)" fg:x="1222" fg:w="3"/><text x="98.0883%" y="319.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (2 samples, 0.16%)</title><rect x="97.9183%" y="293" width="0.1601%" height="15" fill="rgb(223,128,12)" fg:x="1223" fg:w="2"/><text x="98.1683%" y="303.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.08%)</title><rect x="97.9984%" y="277" width="0.0801%" height="15" fill="rgb(208,157,18)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="287.50"></text></g><g><title>&lt;regex::regex::string::Regex as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (18 samples, 1.44%)</title><rect x="96.7174%" y="389" width="1.4412%" height="15" fill="rgb(249,70,54)" fg:x="1208" fg:w="18"/><text x="96.9674%" y="399.50"></text></g><g><title>regex::builders::Builder::build_one_string (18 samples, 1.44%)</title><rect x="96.7174%" y="373" width="1.4412%" height="15" fill="rgb(244,118,24)" fg:x="1208" fg:w="18"/><text x="96.9674%" y="383.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (18 samples, 1.44%)</title><rect x="96.7174%" y="357" width="1.4412%" height="15" fill="rgb(211,54,0)" fg:x="1208" fg:w="18"/><text x="96.9674%" y="367.50"></text></g><g><title>regex_syntax::hir::translate::Translator::translate (4 samples, 0.32%)</title><rect x="97.8383%" y="341" width="0.3203%" height="15" fill="rgb(245,137,45)" fg:x="1222" fg:w="4"/><text x="98.0883%" y="351.50"></text></g><g><title>regex_syntax::ast::visitor::visit (4 samples, 0.32%)</title><rect x="97.8383%" y="325" width="0.3203%" height="15" fill="rgb(232,154,31)" fg:x="1222" fg:w="4"/><text x="98.0883%" y="335.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (1 samples, 0.08%)</title><rect x="98.0785%" y="309" width="0.0801%" height="15" fill="rgb(253,6,39)" fg:x="1225" fg:w="1"/><text x="98.3285%" y="319.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::init_cache (2 samples, 0.16%)</title><rect x="98.1585%" y="325" width="0.1601%" height="15" fill="rgb(234,183,24)" fg:x="1226" fg:w="2"/><text x="98.4085%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="98.2386%" y="309" width="0.0801%" height="15" fill="rgb(252,84,40)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="98.2386%" y="293" width="0.0801%" height="15" fill="rgb(224,65,2)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="98.2386%" y="277" width="0.0801%" height="15" fill="rgb(229,38,24)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="287.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (162 samples, 12.97%)</title><rect x="85.4283%" y="501" width="12.9704%" height="15" fill="rgb(218,131,50)" fg:x="1067" fg:w="162"/><text x="85.6783%" y="511.50">&lt;&amp;kernel::model::en..</text></g><g><title>plugins_core::looking::model::qualify_name (161 samples, 12.89%)</title><rect x="85.5084%" y="485" width="12.8903%" height="15" fill="rgb(233,106,18)" fg:x="1068" fg:w="161"/><text x="85.7584%" y="495.50">plugins_core::looki..</text></g><g><title>indefinite::indefinite (161 samples, 12.89%)</title><rect x="85.5084%" y="469" width="12.8903%" height="15" fill="rgb(220,216,11)" fg:x="1068" fg:w="161"/><text x="85.7584%" y="479.50">indefinite::indefin..</text></g><g><title>indefinite::methods::indefinite (161 samples, 12.89%)</title><rect x="85.5084%" y="453" width="12.8903%" height="15" fill="rgb(251,100,45)" fg:x="1068" fg:w="161"/><text x="85.7584%" y="463.50">indefinite::methods..</text></g><g><title>indefinite::methods::apply_rules (161 samples, 12.89%)</title><rect x="85.5084%" y="437" width="12.8903%" height="15" fill="rgb(235,143,32)" fg:x="1068" fg:w="161"/><text x="85.7584%" y="447.50">indefinite::methods..</text></g><g><title>indefinite::rules::other::Other::run (21 samples, 1.68%)</title><rect x="96.7174%" y="421" width="1.6813%" height="15" fill="rgb(248,124,34)" fg:x="1208" fg:w="21"/><text x="96.9674%" y="431.50"></text></g><g><title>indefinite::helper::Helper::starts_with_vowel (21 samples, 1.68%)</title><rect x="96.7174%" y="405" width="1.6813%" height="15" fill="rgb(225,221,4)" fg:x="1208" fg:w="21"/><text x="96.9674%" y="415.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get_slow (3 samples, 0.24%)</title><rect x="98.1585%" y="389" width="0.2402%" height="15" fill="rgb(242,27,43)" fg:x="1226" fg:w="3"/><text x="98.4085%" y="399.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir::{{closure}} (3 samples, 0.24%)</title><rect x="98.1585%" y="373" width="0.2402%" height="15" fill="rgb(227,54,8)" fg:x="1226" fg:w="3"/><text x="98.4085%" y="383.50"></text></g><g><title>&lt;regex_automata::meta::strategy::ReverseAnchored as regex_automata::meta::strategy::Strategy&gt;::create_cache (3 samples, 0.24%)</title><rect x="98.1585%" y="357" width="0.2402%" height="15" fill="rgb(253,139,49)" fg:x="1226" fg:w="3"/><text x="98.4085%" y="367.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::new (3 samples, 0.24%)</title><rect x="98.1585%" y="341" width="0.2402%" height="15" fill="rgb(231,26,43)" fg:x="1226" fg:w="3"/><text x="98.4085%" y="351.50"></text></g><g><title>regex_automata::util::sparse_set::SparseSets::new (1 samples, 0.08%)</title><rect x="98.3187%" y="325" width="0.0801%" height="15" fill="rgb(207,121,39)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="98.3187%" y="309" width="0.0801%" height="15" fill="rgb(223,101,35)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="98.3187%" y="293" width="0.0801%" height="15" fill="rgb(232,87,23)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3187%" y="277" width="0.0801%" height="15" fill="rgb(225,180,29)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="287.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="98.3987%" y="501" width="0.0801%" height="15" fill="rgb(225,25,17)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="98.3987%" y="485" width="0.0801%" height="15" fill="rgb(223,8,52)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="98.3987%" y="469" width="0.0801%" height="15" fill="rgb(246,42,21)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="98.3987%" y="453" width="0.0801%" height="15" fill="rgb(205,64,43)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="98.3987%" y="437" width="0.0801%" height="15" fill="rgb(221,160,13)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.3987%" y="421" width="0.0801%" height="15" fill="rgb(239,58,35)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.3987%" y="405" width="0.0801%" height="15" fill="rgb(251,26,40)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="98.3987%" y="389" width="0.0801%" height="15" fill="rgb(247,0,4)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="98.3987%" y="373" width="0.0801%" height="15" fill="rgb(218,130,10)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.3987%" y="357" width="0.0801%" height="15" fill="rgb(239,32,7)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4788%" y="469" width="0.0801%" height="15" fill="rgb(210,192,24)" fg:x="1230" fg:w="1"/><text x="98.7288%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4788%" y="453" width="0.0801%" height="15" fill="rgb(226,212,17)" fg:x="1230" fg:w="1"/><text x="98.7288%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="98.5588%" y="357" width="0.1601%" height="15" fill="rgb(219,201,28)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="98.5588%" y="341" width="0.1601%" height="15" fill="rgb(235,207,41)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="98.5588%" y="325" width="0.1601%" height="15" fill="rgb(241,95,54)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="335.50"></text></g><g><title>rusqlite::row::Rows::next (2 samples, 0.16%)</title><rect x="98.5588%" y="309" width="0.1601%" height="15" fill="rgb(248,12,23)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="319.50"></text></g><g><title>sqlite3_step (2 samples, 0.16%)</title><rect x="98.5588%" y="293" width="0.1601%" height="15" fill="rgb(228,173,4)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="303.50"></text></g><g><title>sqlite3VdbeExec (2 samples, 0.16%)</title><rect x="98.5588%" y="277" width="0.1601%" height="15" fill="rgb(254,99,5)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="287.50"></text></g><g><title>sqlite3VdbeEnter (1 samples, 0.08%)</title><rect x="98.6389%" y="261" width="0.0801%" height="15" fill="rgb(212,184,17)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="271.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::load (4 samples, 0.32%)</title><rect x="98.5588%" y="373" width="0.3203%" height="15" fill="rgb(252,174,1)" fg:x="1231" fg:w="4"/><text x="98.8088%" y="383.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (2 samples, 0.16%)</title><rect x="98.7190%" y="357" width="0.1601%" height="15" fill="rgb(241,118,51)" fg:x="1233" fg:w="2"/><text x="98.9690%" y="367.50"></text></g><g><title>sqlite3_prepare_v2 (2 samples, 0.16%)</title><rect x="98.7190%" y="341" width="0.1601%" height="15" fill="rgb(227,94,47)" fg:x="1233" fg:w="2"/><text x="98.9690%" y="351.50"></text></g><g><title>sqlite3RunParser (2 samples, 0.16%)</title><rect x="98.7190%" y="325" width="0.1601%" height="15" fill="rgb(229,104,2)" fg:x="1233" fg:w="2"/><text x="98.9690%" y="335.50"></text></g><g><title>sqlite3Parser (1 samples, 0.08%)</title><rect x="98.7990%" y="309" width="0.0801%" height="15" fill="rgb(219,28,31)" fg:x="1234" fg:w="1"/><text x="99.0490%" y="319.50"></text></g><g><title>sqlite3ExprListSetSpan (1 samples, 0.08%)</title><rect x="98.7990%" y="293" width="0.0801%" height="15" fill="rgb(233,109,36)" fg:x="1234" fg:w="1"/><text x="99.0490%" y="303.50"></text></g><g><title>sqlite3DbStrNDup (1 samples, 0.08%)</title><rect x="98.7990%" y="277" width="0.0801%" height="15" fill="rgb(246,88,11)" fg:x="1234" fg:w="1"/><text x="99.0490%" y="287.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="98.7990%" y="261" width="0.0801%" height="15" fill="rgb(209,212,17)" fg:x="1234" fg:w="1"/><text x="99.0490%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7990%" y="245" width="0.0801%" height="15" fill="rgb(243,59,29)" fg:x="1234" fg:w="1"/><text x="99.0490%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8791%" y="245" width="0.0801%" height="15" fill="rgb(244,205,48)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (6 samples, 0.48%)</title><rect x="98.5588%" y="469" width="0.4804%" height="15" fill="rgb(227,30,6)" fg:x="1231" fg:w="6"/><text x="98.8088%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="98.5588%" y="453" width="0.4804%" height="15" fill="rgb(220,205,48)" fg:x="1231" fg:w="6"/><text x="98.8088%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="98.5588%" y="437" width="0.4804%" height="15" fill="rgb(250,94,14)" fg:x="1231" fg:w="6"/><text x="98.8088%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.48%)</title><rect x="98.5588%" y="421" width="0.4804%" height="15" fill="rgb(216,119,42)" fg:x="1231" fg:w="6"/><text x="98.8088%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.48%)</title><rect x="98.5588%" y="405" width="0.4804%" height="15" fill="rgb(232,155,0)" fg:x="1231" fg:w="6"/><text x="98.8088%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.48%)</title><rect x="98.5588%" y="389" width="0.4804%" height="15" fill="rgb(212,24,32)" fg:x="1231" fg:w="6"/><text x="98.8088%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity (2 samples, 0.16%)</title><rect x="98.8791%" y="373" width="0.1601%" height="15" fill="rgb(216,69,20)" fg:x="1235" fg:w="2"/><text x="99.1291%" y="383.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.8791%" y="357" width="0.1601%" height="15" fill="rgb(229,73,31)" fg:x="1235" fg:w="2"/><text x="99.1291%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.8791%" y="341" width="0.1601%" height="15" fill="rgb(224,219,20)" fg:x="1235" fg:w="2"/><text x="99.1291%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8791%" y="325" width="0.1601%" height="15" fill="rgb(215,146,41)" fg:x="1235" fg:w="2"/><text x="99.1291%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.8791%" y="309" width="0.1601%" height="15" fill="rgb(244,71,31)" fg:x="1235" fg:w="2"/><text x="99.1291%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8791%" y="293" width="0.1601%" height="15" fill="rgb(224,24,11)" fg:x="1235" fg:w="2"/><text x="99.1291%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.8791%" y="277" width="0.1601%" height="15" fill="rgb(229,76,15)" fg:x="1235" fg:w="2"/><text x="99.1291%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8791%" y="261" width="0.1601%" height="15" fill="rgb(209,93,2)" fg:x="1235" fg:w="2"/><text x="99.1291%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9592%" y="245" width="0.0801%" height="15" fill="rgb(216,200,50)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9592%" y="229" width="0.0801%" height="15" fill="rgb(211,67,34)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9592%" y="213" width="0.0801%" height="15" fill="rgb(225,87,47)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9592%" y="197" width="0.0801%" height="15" fill="rgb(217,185,16)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="207.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::scopes::Action&gt;::perform (172 samples, 13.77%)</title><rect x="85.4283%" y="533" width="13.7710%" height="15" fill="rgb(205,0,0)" fg:x="1067" fg:w="172"/><text x="85.6783%" y="543.50">&lt;plugins_core::lookin..</text></g><g><title>plugins_core::looking::model::new_area_observation (172 samples, 13.77%)</title><rect x="85.4283%" y="517" width="13.7710%" height="15" fill="rgb(207,116,45)" fg:x="1067" fg:w="172"/><text x="85.6783%" y="527.50">plugins_core::looking..</text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.72%)</title><rect x="98.4788%" y="501" width="0.7206%" height="15" fill="rgb(221,156,26)" fg:x="1230" fg:w="9"/><text x="98.7288%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (9 samples, 0.72%)</title><rect x="98.4788%" y="485" width="0.7206%" height="15" fill="rgb(213,140,4)" fg:x="1230" fg:w="9"/><text x="98.7288%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.0392%" y="469" width="0.1601%" height="15" fill="rgb(231,224,15)" fg:x="1237" fg:w="2"/><text x="99.2892%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.0392%" y="453" width="0.1601%" height="15" fill="rgb(244,76,20)" fg:x="1237" fg:w="2"/><text x="99.2892%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="99.0392%" y="437" width="0.1601%" height="15" fill="rgb(238,117,7)" fg:x="1237" fg:w="2"/><text x="99.2892%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="99.0392%" y="421" width="0.1601%" height="15" fill="rgb(235,1,10)" fg:x="1237" fg:w="2"/><text x="99.2892%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="99.0392%" y="405" width="0.1601%" height="15" fill="rgb(216,165,6)" fg:x="1237" fg:w="2"/><text x="99.2892%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.0392%" y="389" width="0.1601%" height="15" fill="rgb(246,91,35)" fg:x="1237" fg:w="2"/><text x="99.2892%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.0392%" y="373" width="0.1601%" height="15" fill="rgb(228,96,24)" fg:x="1237" fg:w="2"/><text x="99.2892%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.1193%" y="357" width="0.0801%" height="15" fill="rgb(254,217,53)" fg:x="1238" fg:w="1"/><text x="99.3693%" y="367.50"></text></g><g><title>&lt;sqlite::SqliteStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="99.1994%" y="485" width="0.0801%" height="15" fill="rgb(209,60,0)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="99.1994%" y="469" width="0.0801%" height="15" fill="rgb(250,93,26)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="99.1994%" y="453" width="0.0801%" height="15" fill="rgb(211,9,40)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.1994%" y="437" width="0.0801%" height="15" fill="rgb(242,57,20)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="447.50"></text></g><g><title>rusqlite::row::Rows::next (1 samples, 0.08%)</title><rect x="99.1994%" y="421" width="0.0801%" height="15" fill="rgb(248,85,48)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="431.50"></text></g><g><title>sqlite3_step (1 samples, 0.08%)</title><rect x="99.1994%" y="405" width="0.0801%" height="15" fill="rgb(212,117,2)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="415.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.08%)</title><rect x="99.1994%" y="389" width="0.0801%" height="15" fill="rgb(243,19,3)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="99.1994%" y="517" width="0.1601%" height="15" fill="rgb(232,217,24)" fg:x="1239" fg:w="2"/><text x="99.4494%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="99.1994%" y="501" width="0.1601%" height="15" fill="rgb(224,175,40)" fg:x="1239" fg:w="2"/><text x="99.4494%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity (1 samples, 0.08%)</title><rect x="99.2794%" y="485" width="0.0801%" height="15" fill="rgb(212,162,32)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="495.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.2794%" y="469" width="0.0801%" height="15" fill="rgb(215,9,4)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2794%" y="453" width="0.0801%" height="15" fill="rgb(242,42,7)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2794%" y="437" width="0.0801%" height="15" fill="rgb(242,184,45)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2794%" y="421" width="0.0801%" height="15" fill="rgb(228,111,51)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2794%" y="405" width="0.0801%" height="15" fill="rgb(236,147,17)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2794%" y="389" width="0.0801%" height="15" fill="rgb(210,75,22)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2794%" y="373" width="0.0801%" height="15" fill="rgb(217,159,45)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2794%" y="357" width="0.0801%" height="15" fill="rgb(245,165,53)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2794%" y="341" width="0.0801%" height="15" fill="rgb(251,190,50)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.2794%" y="325" width="0.0801%" height="15" fill="rgb(208,203,29)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.2794%" y="309" width="0.0801%" height="15" fill="rgb(207,209,35)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="319.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (177 samples, 14.17%)</title><rect x="85.3483%" y="565" width="14.1713%" height="15" fill="rgb(230,144,49)" fg:x="1066" fg:w="177"/><text x="85.5983%" y="575.50">engine::session::Sessi..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (176 samples, 14.09%)</title><rect x="85.4283%" y="549" width="14.0913%" height="15" fill="rgb(229,31,6)" fg:x="1067" fg:w="176"/><text x="85.6783%" y="559.50">engine::perform::Stan..</text></g><g><title>engine::perform::StandardPerformer::evaluate_name (4 samples, 0.32%)</title><rect x="99.1994%" y="533" width="0.3203%" height="15" fill="rgb(251,129,24)" fg:x="1239" fg:w="4"/><text x="99.4494%" y="543.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (2 samples, 0.16%)</title><rect x="99.3595%" y="517" width="0.1601%" height="15" fill="rgb(235,105,15)" fg:x="1241" fg:w="2"/><text x="99.6095%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (2 samples, 0.16%)</title><rect x="99.3595%" y="501" width="0.1601%" height="15" fill="rgb(216,52,43)" fg:x="1241" fg:w="2"/><text x="99.6095%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="99.3595%" y="485" width="0.1601%" height="15" fill="rgb(238,144,41)" fg:x="1241" fg:w="2"/><text x="99.6095%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="99.3595%" y="469" width="0.1601%" height="15" fill="rgb(243,63,9)" fg:x="1241" fg:w="2"/><text x="99.6095%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="99.3595%" y="453" width="0.1601%" height="15" fill="rgb(246,208,1)" fg:x="1241" fg:w="2"/><text x="99.6095%" y="463.50"></text></g><g><title>sqlite3BtreeOpen (1 samples, 0.08%)</title><rect x="99.5196%" y="517" width="0.0801%" height="15" fill="rgb(233,182,18)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="527.50"></text></g><g><title>sqlite3PagerOpen (1 samples, 0.08%)</title><rect x="99.5196%" y="501" width="0.0801%" height="15" fill="rgb(242,224,8)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="511.50"></text></g><g><title>sqlite3PagerSetPagesize (1 samples, 0.08%)</title><rect x="99.5196%" y="485" width="0.0801%" height="15" fill="rgb(243,54,37)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="495.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="99.5196%" y="469" width="0.0801%" height="15" fill="rgb(233,192,12)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5196%" y="453" width="0.0801%" height="15" fill="rgb(251,192,53)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="463.50"></text></g><g><title>sqlite3Fts3Init (1 samples, 0.08%)</title><rect x="99.5997%" y="517" width="0.0801%" height="15" fill="rgb(246,141,26)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="527.50"></text></g><g><title>sqlite3_overload_function (1 samples, 0.08%)</title><rect x="99.5997%" y="501" width="0.0801%" height="15" fill="rgb(239,195,19)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="511.50"></text></g><g><title>sqlite3_create_function_v2 (1 samples, 0.08%)</title><rect x="99.5997%" y="485" width="0.0801%" height="15" fill="rgb(241,16,39)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="495.50"></text></g><g><title>sqlite3CreateFunc (1 samples, 0.08%)</title><rect x="99.5997%" y="469" width="0.0801%" height="15" fill="rgb(223,13,53)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="479.50"></text></g><g><title>sqlite3FindFunction (1 samples, 0.08%)</title><rect x="99.5997%" y="453" width="0.0801%" height="15" fill="rgb(214,227,0)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="463.50"></text></g><g><title>sqlite3DbMallocZero (1 samples, 0.08%)</title><rect x="99.5997%" y="437" width="0.0801%" height="15" fill="rgb(228,103,26)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="447.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="99.5997%" y="421" width="0.0801%" height="15" fill="rgb(254,177,53)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="431.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="99.5997%" y="405" width="0.0801%" height="15" fill="rgb(208,201,34)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="415.50"></text></g><g><title>sqlite3Fts5Init (2 samples, 0.16%)</title><rect x="99.6797%" y="517" width="0.1601%" height="15" fill="rgb(212,39,5)" fg:x="1245" fg:w="2"/><text x="99.9297%" y="527.50"></text></g><g><title>sqlite3_overload_function (1 samples, 0.08%)</title><rect x="99.7598%" y="501" width="0.0801%" height="15" fill="rgb(246,117,3)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="511.50"></text></g><g><title>sqlite3_create_function_v2 (1 samples, 0.08%)</title><rect x="99.7598%" y="485" width="0.0801%" height="15" fill="rgb(244,118,39)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="495.50"></text></g><g><title>sqlite3CreateFunc (1 samples, 0.08%)</title><rect x="99.7598%" y="469" width="0.0801%" height="15" fill="rgb(241,64,10)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="479.50"></text></g><g><title>sqlite3FindFunction (1 samples, 0.08%)</title><rect x="99.7598%" y="453" width="0.0801%" height="15" fill="rgb(229,39,44)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="463.50"></text></g><g><title>sqlite3FunctionSearch (1 samples, 0.08%)</title><rect x="99.8399%" y="453" width="0.0801%" height="15" fill="rgb(230,226,3)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="463.50"></text></g><g><title>all (1,249 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(222,13,42)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="927.50"></text></g><g><title>look-3bbec105c7 (1,249 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(247,180,54)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="911.50">look-3bbec105c7</text></g><g><title>_start (1,249 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(205,96,16)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="895.50">_start</text></g><g><title>__libc_start_main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(205,100,21)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="879.50">__libc_start_main</text></g><g><title>main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(248,51,4)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (1,249 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(217,197,30)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="847.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(240,179,40)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(212,185,35)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(251,222,31)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="799.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(208,140,36)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="783.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(220,148,1)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(254,4,28)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(222,185,44)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="735.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,249 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(215,74,39)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="719.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(247,86,4)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="703.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,249 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(231,105,32)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="687.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>look::main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(222,65,35)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="671.50">look::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,249 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(218,145,35)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="655.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,249 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(208,7,15)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="639.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (266 samples, 21.30%)</title><rect x="78.7030%" y="613" width="21.2970%" height="15" fill="rgb(209,83,13)" fg:x="983" fg:w="266"/><text x="78.9530%" y="623.50">&lt;criterion::routine::Function&lt;M,F,..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (266 samples, 21.30%)</title><rect x="78.7030%" y="597" width="21.2970%" height="15" fill="rgb(218,3,10)" fg:x="983" fg:w="266"/><text x="78.9530%" y="607.50">criterion::bencher::Bencher&lt;M&gt;::it..</text></g><g><title>tests::evaluate_text_in_new_domain (266 samples, 21.30%)</title><rect x="78.7030%" y="581" width="21.2970%" height="15" fill="rgb(211,219,4)" fg:x="983" fg:w="266"/><text x="78.9530%" y="591.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (6 samples, 0.48%)</title><rect x="99.5196%" y="565" width="0.4804%" height="15" fill="rgb(228,194,12)" fg:x="1243" fg:w="6"/><text x="99.7696%" y="575.50"></text></g><g><title>sqlite::Factory::new (6 samples, 0.48%)</title><rect x="99.5196%" y="549" width="0.4804%" height="15" fill="rgb(210,175,7)" fg:x="1243" fg:w="6"/><text x="99.7696%" y="559.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::open_with_flags (6 samples, 0.48%)</title><rect x="99.5196%" y="533" width="0.4804%" height="15" fill="rgb(243,132,6)" fg:x="1243" fg:w="6"/><text x="99.7696%" y="543.50"></text></g><g><title>sqlite3Json1Init (2 samples, 0.16%)</title><rect x="99.8399%" y="517" width="0.1601%" height="15" fill="rgb(207,72,18)" fg:x="1247" fg:w="2"/><text x="100.0899%" y="527.50"></text></g><g><title>sqlite3_create_function (2 samples, 0.16%)</title><rect x="99.8399%" y="501" width="0.1601%" height="15" fill="rgb(236,1,18)" fg:x="1247" fg:w="2"/><text x="100.0899%" y="511.50"></text></g><g><title>sqlite3CreateFunc (2 samples, 0.16%)</title><rect x="99.8399%" y="485" width="0.1601%" height="15" fill="rgb(227,0,18)" fg:x="1247" fg:w="2"/><text x="100.0899%" y="495.50"></text></g><g><title>sqlite3FindFunction (2 samples, 0.16%)</title><rect x="99.8399%" y="469" width="0.1601%" height="15" fill="rgb(247,37,5)" fg:x="1247" fg:w="2"/><text x="100.0899%" y="479.50"></text></g><g><title>sqlite3HashInsert (1 samples, 0.08%)</title><rect x="99.9199%" y="453" width="0.0801%" height="15" fill="rgb(237,179,24)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="463.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.08%)</title><rect x="99.9199%" y="437" width="0.0801%" height="15" fill="rgb(226,53,20)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="447.50"></text></g></svg></svg>