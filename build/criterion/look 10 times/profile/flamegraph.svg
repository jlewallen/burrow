<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1205.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="1281"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.2342%" y="805" width="0.0781%" height="15" fill="rgb(240,52,13)" fg:x="3" fg:w="1"/><text x="0.4842%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.2342%" y="789" width="0.0781%" height="15" fill="rgb(252,149,13)" fg:x="3" fg:w="1"/><text x="0.4842%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.2342%" y="773" width="0.0781%" height="15" fill="rgb(232,81,48)" fg:x="3" fg:w="1"/><text x="0.4842%" y="783.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="0.5464%" y="709" width="0.2342%" height="15" fill="rgb(222,144,2)" fg:x="7" fg:w="3"/><text x="0.7964%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.7806%" y="709" width="0.0781%" height="15" fill="rgb(216,81,32)" fg:x="10" fg:w="1"/><text x="1.0306%" y="719.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="0.9368%" y="661" width="0.2342%" height="15" fill="rgb(244,78,51)" fg:x="12" fg:w="3"/><text x="1.1868%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.31%)</title><rect x="0.9368%" y="693" width="0.3123%" height="15" fill="rgb(217,66,21)" fg:x="12" fg:w="4"/><text x="1.1868%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.31%)</title><rect x="0.9368%" y="677" width="0.3123%" height="15" fill="rgb(247,101,42)" fg:x="12" fg:w="4"/><text x="1.1868%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.1710%" y="661" width="0.0781%" height="15" fill="rgb(227,81,39)" fg:x="15" fg:w="1"/><text x="1.4210%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1710%" y="645" width="0.0781%" height="15" fill="rgb(220,223,44)" fg:x="15" fg:w="1"/><text x="1.4210%" y="655.50"></text></g><g><title>__libc_free (4 samples, 0.31%)</title><rect x="1.2490%" y="693" width="0.3123%" height="15" fill="rgb(205,218,2)" fg:x="16" fg:w="4"/><text x="1.4990%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.5613%" y="693" width="0.0781%" height="15" fill="rgb(212,207,28)" fg:x="20" fg:w="1"/><text x="1.8113%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6393%" y="677" width="0.0781%" height="15" fill="rgb(224,12,41)" fg:x="21" fg:w="1"/><text x="1.8893%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.7174%" y="677" width="0.1561%" height="15" fill="rgb(216,118,12)" fg:x="22" fg:w="2"/><text x="1.9674%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.7174%" y="661" width="0.1561%" height="15" fill="rgb(252,97,46)" fg:x="22" fg:w="2"/><text x="1.9674%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.0297%" y="661" width="0.1561%" height="15" fill="rgb(244,206,19)" fg:x="26" fg:w="2"/><text x="2.2797%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="2.1858%" y="661" width="0.2342%" height="15" fill="rgb(231,84,31)" fg:x="28" fg:w="3"/><text x="2.4358%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 2.50%)</title><rect x="0.3903%" y="725" width="2.4980%" height="15" fill="rgb(244,133,0)" fg:x="5" fg:w="32"/><text x="0.6403%" y="735.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (26 samples, 2.03%)</title><rect x="0.8587%" y="709" width="2.0297%" height="15" fill="rgb(223,15,50)" fg:x="11" fg:w="26"/><text x="1.1087%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.25%)</title><rect x="1.6393%" y="693" width="1.2490%" height="15" fill="rgb(250,118,49)" fg:x="21" fg:w="16"/><text x="1.8893%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.01%)</title><rect x="1.8735%" y="677" width="1.0148%" height="15" fill="rgb(248,25,38)" fg:x="24" fg:w="13"/><text x="2.1235%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="2.4200%" y="661" width="0.4684%" height="15" fill="rgb(215,70,14)" fg:x="31" fg:w="6"/><text x="2.6700%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.47%)</title><rect x="2.4200%" y="645" width="0.4684%" height="15" fill="rgb(215,28,15)" fg:x="31" fg:w="6"/><text x="2.6700%" y="655.50"></text></g><g><title>__libc_free (4 samples, 0.31%)</title><rect x="2.5761%" y="629" width="0.3123%" height="15" fill="rgb(243,6,28)" fg:x="33" fg:w="4"/><text x="2.8261%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 2.65%)</title><rect x="0.3903%" y="741" width="2.6542%" height="15" fill="rgb(222,130,1)" fg:x="5" fg:w="34"/><text x="0.6403%" y="751.50">&lt;h..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.8884%" y="725" width="0.1561%" height="15" fill="rgb(236,166,44)" fg:x="37" fg:w="2"/><text x="3.1384%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 2.81%)</title><rect x="0.3123%" y="757" width="2.8103%" height="15" fill="rgb(221,108,14)" fg:x="4" fg:w="36"/><text x="0.5623%" y="767.50">&lt;a..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.0445%" y="741" width="0.0781%" height="15" fill="rgb(252,3,45)" fg:x="39" fg:w="1"/><text x="3.2945%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.1226%" y="757" width="0.1561%" height="15" fill="rgb(237,68,30)" fg:x="40" fg:w="2"/><text x="3.3726%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 3.20%)</title><rect x="0.1561%" y="821" width="3.2006%" height="15" fill="rgb(211,79,22)" fg:x="2" fg:w="41"/><text x="0.4061%" y="831.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (39 samples, 3.04%)</title><rect x="0.3123%" y="805" width="3.0445%" height="15" fill="rgb(252,185,21)" fg:x="4" fg:w="39"/><text x="0.5623%" y="815.50">cor..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 3.04%)</title><rect x="0.3123%" y="789" width="3.0445%" height="15" fill="rgb(225,189,26)" fg:x="4" fg:w="39"/><text x="0.5623%" y="799.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (39 samples, 3.04%)</title><rect x="0.3123%" y="773" width="3.0445%" height="15" fill="rgb(241,30,40)" fg:x="4" fg:w="39"/><text x="0.5623%" y="783.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="3.2787%" y="757" width="0.0781%" height="15" fill="rgb(235,215,44)" fg:x="42" fg:w="1"/><text x="3.5287%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.2787%" y="741" width="0.0781%" height="15" fill="rgb(205,8,29)" fg:x="42" fg:w="1"/><text x="3.5287%" y="751.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="3.4348%" y="773" width="0.0781%" height="15" fill="rgb(241,137,42)" fg:x="44" fg:w="1"/><text x="3.6848%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.4348%" y="757" width="0.0781%" height="15" fill="rgb(237,155,2)" fg:x="44" fg:w="1"/><text x="3.6848%" y="767.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="3.8251%" y="709" width="0.0781%" height="15" fill="rgb(245,29,42)" fg:x="49" fg:w="1"/><text x="4.0751%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="3.8251%" y="693" width="0.0781%" height="15" fill="rgb(234,101,35)" fg:x="49" fg:w="1"/><text x="4.0751%" y="703.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="3.8251%" y="677" width="0.0781%" height="15" fill="rgb(228,64,37)" fg:x="49" fg:w="1"/><text x="4.0751%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="3.8251%" y="661" width="0.0781%" height="15" fill="rgb(217,214,36)" fg:x="49" fg:w="1"/><text x="4.0751%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="3.8251%" y="645" width="0.0781%" height="15" fill="rgb(243,70,3)" fg:x="49" fg:w="1"/><text x="4.0751%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="3.8251%" y="725" width="0.1561%" height="15" fill="rgb(253,158,52)" fg:x="49" fg:w="2"/><text x="4.0751%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="3.9032%" y="709" width="0.0781%" height="15" fill="rgb(234,111,54)" fg:x="50" fg:w="1"/><text x="4.1532%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="3.9032%" y="693" width="0.0781%" height="15" fill="rgb(217,70,32)" fg:x="50" fg:w="1"/><text x="4.1532%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="3.9032%" y="677" width="0.0781%" height="15" fill="rgb(234,18,33)" fg:x="50" fg:w="1"/><text x="4.1532%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.9032%" y="661" width="0.0781%" height="15" fill="rgb(234,12,49)" fg:x="50" fg:w="1"/><text x="4.1532%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.9032%" y="645" width="0.0781%" height="15" fill="rgb(236,10,21)" fg:x="50" fg:w="1"/><text x="4.1532%" y="655.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="3.9032%" y="629" width="0.0781%" height="15" fill="rgb(248,182,45)" fg:x="50" fg:w="1"/><text x="4.1532%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="3.9032%" y="613" width="0.0781%" height="15" fill="rgb(217,95,36)" fg:x="50" fg:w="1"/><text x="4.1532%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="3.9032%" y="597" width="0.0781%" height="15" fill="rgb(212,110,31)" fg:x="50" fg:w="1"/><text x="4.1532%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="3.9032%" y="581" width="0.0781%" height="15" fill="rgb(206,32,53)" fg:x="50" fg:w="1"/><text x="4.1532%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="3.9032%" y="565" width="0.0781%" height="15" fill="rgb(246,141,37)" fg:x="50" fg:w="1"/><text x="4.1532%" y="575.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="3.9813%" y="725" width="0.0781%" height="15" fill="rgb(219,16,7)" fg:x="51" fg:w="1"/><text x="4.2313%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.1374%" y="709" width="0.0781%" height="15" fill="rgb(230,205,45)" fg:x="53" fg:w="1"/><text x="4.3874%" y="719.50"></text></g><g><title>dlerror (6 samples, 0.47%)</title><rect x="4.2155%" y="709" width="0.4684%" height="15" fill="rgb(231,43,49)" fg:x="54" fg:w="6"/><text x="4.4655%" y="719.50"></text></g><g><title>__asprintf (5 samples, 0.39%)</title><rect x="4.2935%" y="693" width="0.3903%" height="15" fill="rgb(212,106,34)" fg:x="55" fg:w="5"/><text x="4.5435%" y="703.50"></text></g><g><title>_IO_default_xsputn (2 samples, 0.16%)</title><rect x="4.5277%" y="677" width="0.1561%" height="15" fill="rgb(206,83,17)" fg:x="58" fg:w="2"/><text x="4.7777%" y="687.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="4.7619%" y="645" width="0.0781%" height="15" fill="rgb(244,154,49)" fg:x="61" fg:w="1"/><text x="5.0119%" y="655.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (31 samples, 2.42%)</title><rect x="3.5909%" y="757" width="2.4200%" height="15" fill="rgb(244,149,49)" fg:x="46" fg:w="31"/><text x="3.8409%" y="767.50">ke..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (29 samples, 2.26%)</title><rect x="3.7471%" y="741" width="2.2639%" height="15" fill="rgb(227,134,18)" fg:x="48" fg:w="29"/><text x="3.9971%" y="751.50">&lt;..</text></g><g><title>libloading::safe::Library::new (25 samples, 1.95%)</title><rect x="4.0593%" y="725" width="1.9516%" height="15" fill="rgb(237,116,36)" fg:x="52" fg:w="25"/><text x="4.3093%" y="735.50">l..</text></g><g><title>dlopen (17 samples, 1.33%)</title><rect x="4.6838%" y="709" width="1.3271%" height="15" fill="rgb(205,129,40)" fg:x="60" fg:w="17"/><text x="4.9338%" y="719.50"></text></g><g><title>_dl_catch_error (17 samples, 1.33%)</title><rect x="4.6838%" y="693" width="1.3271%" height="15" fill="rgb(236,178,4)" fg:x="60" fg:w="17"/><text x="4.9338%" y="703.50"></text></g><g><title>_dl_catch_exception (17 samples, 1.33%)</title><rect x="4.6838%" y="677" width="1.3271%" height="15" fill="rgb(251,76,53)" fg:x="60" fg:w="17"/><text x="4.9338%" y="687.50"></text></g><g><title>_dl_catch_exception (16 samples, 1.25%)</title><rect x="4.7619%" y="661" width="1.2490%" height="15" fill="rgb(242,92,40)" fg:x="61" fg:w="16"/><text x="5.0119%" y="671.50"></text></g><g><title>_dl_catch_exception (15 samples, 1.17%)</title><rect x="4.8400%" y="645" width="1.1710%" height="15" fill="rgb(209,45,30)" fg:x="62" fg:w="15"/><text x="5.0900%" y="655.50"></text></g><g><title>engine::session::Session::initialize (34 samples, 2.65%)</title><rect x="3.5129%" y="773" width="2.6542%" height="15" fill="rgb(218,157,36)" fg:x="45" fg:w="34"/><text x="3.7629%" y="783.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="6.0109%" y="757" width="0.1561%" height="15" fill="rgb(222,186,16)" fg:x="77" fg:w="2"/><text x="6.2609%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="6.0109%" y="741" width="0.1561%" height="15" fill="rgb(254,72,35)" fg:x="77" fg:w="2"/><text x="6.2609%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.0890%" y="725" width="0.0781%" height="15" fill="rgb(224,25,35)" fg:x="78" fg:w="1"/><text x="6.3390%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.0890%" y="709" width="0.0781%" height="15" fill="rgb(206,135,52)" fg:x="78" fg:w="1"/><text x="6.3390%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.0890%" y="693" width="0.0781%" height="15" fill="rgb(229,174,47)" fg:x="78" fg:w="1"/><text x="6.3390%" y="703.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.23%)</title><rect x="6.1671%" y="773" width="0.2342%" height="15" fill="rgb(242,184,21)" fg:x="79" fg:w="3"/><text x="6.4171%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="6.1671%" y="757" width="0.2342%" height="15" fill="rgb(213,22,45)" fg:x="79" fg:w="3"/><text x="6.4171%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.3232%" y="741" width="0.0781%" height="15" fill="rgb(237,81,54)" fg:x="81" fg:w="1"/><text x="6.5732%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.3232%" y="725" width="0.0781%" height="15" fill="rgb(248,177,18)" fg:x="81" fg:w="1"/><text x="6.5732%" y="735.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (40 samples, 3.12%)</title><rect x="3.3568%" y="821" width="3.1226%" height="15" fill="rgb(254,31,16)" fg:x="43" fg:w="40"/><text x="3.6068%" y="831.50">&lt;en..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (40 samples, 3.12%)</title><rect x="3.3568%" y="805" width="3.1226%" height="15" fill="rgb(235,20,31)" fg:x="43" fg:w="40"/><text x="3.6068%" y="815.50">eng..</text></g><g><title>engine::session::Session::new (40 samples, 3.12%)</title><rect x="3.3568%" y="789" width="3.1226%" height="15" fill="rgb(240,56,43)" fg:x="43" fg:w="40"/><text x="3.6068%" y="799.50">eng..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="6.4012%" y="773" width="0.0781%" height="15" fill="rgb(237,197,51)" fg:x="82" fg:w="1"/><text x="6.6512%" y="783.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="6.4012%" y="757" width="0.0781%" height="15" fill="rgb(241,162,44)" fg:x="82" fg:w="1"/><text x="6.6512%" y="767.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.4793%" y="805" width="0.0781%" height="15" fill="rgb(224,23,20)" fg:x="83" fg:w="1"/><text x="6.7293%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.5574%" y="789" width="0.0781%" height="15" fill="rgb(250,109,34)" fg:x="84" fg:w="1"/><text x="6.8074%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (2 samples, 0.16%)</title><rect x="6.5574%" y="805" width="0.1561%" height="15" fill="rgb(214,175,50)" fg:x="84" fg:w="2"/><text x="6.8074%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="6.6354%" y="789" width="0.0781%" height="15" fill="rgb(213,182,5)" fg:x="85" fg:w="1"/><text x="6.8854%" y="799.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="6.7135%" y="789" width="0.0781%" height="15" fill="rgb(209,199,19)" fg:x="86" fg:w="1"/><text x="6.9635%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.7135%" y="773" width="0.0781%" height="15" fill="rgb(236,224,42)" fg:x="86" fg:w="1"/><text x="6.9635%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.7135%" y="757" width="0.0781%" height="15" fill="rgb(246,226,29)" fg:x="86" fg:w="1"/><text x="6.9635%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.7135%" y="741" width="0.0781%" height="15" fill="rgb(227,223,11)" fg:x="86" fg:w="1"/><text x="6.9635%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.7135%" y="725" width="0.0781%" height="15" fill="rgb(219,7,51)" fg:x="86" fg:w="1"/><text x="6.9635%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.7135%" y="709" width="0.0781%" height="15" fill="rgb(245,167,10)" fg:x="86" fg:w="1"/><text x="6.9635%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.7135%" y="693" width="0.0781%" height="15" fill="rgb(237,224,16)" fg:x="86" fg:w="1"/><text x="6.9635%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.7135%" y="677" width="0.0781%" height="15" fill="rgb(226,132,13)" fg:x="86" fg:w="1"/><text x="6.9635%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="6.7135%" y="661" width="0.0781%" height="15" fill="rgb(214,140,3)" fg:x="86" fg:w="1"/><text x="6.9635%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="6.7135%" y="645" width="0.0781%" height="15" fill="rgb(221,177,4)" fg:x="86" fg:w="1"/><text x="6.9635%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="6.7135%" y="629" width="0.0781%" height="15" fill="rgb(238,139,3)" fg:x="86" fg:w="1"/><text x="6.9635%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="6.7135%" y="613" width="0.0781%" height="15" fill="rgb(216,17,39)" fg:x="86" fg:w="1"/><text x="6.9635%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.7135%" y="597" width="0.0781%" height="15" fill="rgb(238,120,9)" fg:x="86" fg:w="1"/><text x="6.9635%" y="607.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="6.7916%" y="789" width="0.0781%" height="15" fill="rgb(244,92,53)" fg:x="87" fg:w="1"/><text x="7.0416%" y="799.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="6.7916%" y="773" width="0.0781%" height="15" fill="rgb(224,148,33)" fg:x="87" fg:w="1"/><text x="7.0416%" y="783.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="6.7916%" y="757" width="0.0781%" height="15" fill="rgb(243,6,36)" fg:x="87" fg:w="1"/><text x="7.0416%" y="767.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="6.7916%" y="741" width="0.0781%" height="15" fill="rgb(230,102,11)" fg:x="87" fg:w="1"/><text x="7.0416%" y="751.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="6.7916%" y="725" width="0.0781%" height="15" fill="rgb(234,148,36)" fg:x="87" fg:w="1"/><text x="7.0416%" y="735.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="6.7916%" y="709" width="0.0781%" height="15" fill="rgb(251,153,25)" fg:x="87" fg:w="1"/><text x="7.0416%" y="719.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="6.7916%" y="693" width="0.0781%" height="15" fill="rgb(215,129,8)" fg:x="87" fg:w="1"/><text x="7.0416%" y="703.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="6.7916%" y="677" width="0.0781%" height="15" fill="rgb(224,128,35)" fg:x="87" fg:w="1"/><text x="7.0416%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="6.8696%" y="757" width="0.1561%" height="15" fill="rgb(237,56,52)" fg:x="88" fg:w="2"/><text x="7.1196%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="6.9477%" y="741" width="0.0781%" height="15" fill="rgb(234,213,19)" fg:x="89" fg:w="1"/><text x="7.1977%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.9477%" y="725" width="0.0781%" height="15" fill="rgb(252,82,23)" fg:x="89" fg:w="1"/><text x="7.1977%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="7.0258%" y="757" width="0.2342%" height="15" fill="rgb(254,201,21)" fg:x="90" fg:w="3"/><text x="7.2758%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="7.0258%" y="741" width="0.2342%" height="15" fill="rgb(250,186,11)" fg:x="90" fg:w="3"/><text x="7.2758%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.23%)</title><rect x="7.0258%" y="725" width="0.2342%" height="15" fill="rgb(211,174,5)" fg:x="90" fg:w="3"/><text x="7.2758%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.1819%" y="709" width="0.0781%" height="15" fill="rgb(214,121,10)" fg:x="92" fg:w="1"/><text x="7.4319%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.1819%" y="693" width="0.0781%" height="15" fill="rgb(241,66,2)" fg:x="92" fg:w="1"/><text x="7.4319%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.1819%" y="677" width="0.0781%" height="15" fill="rgb(220,167,19)" fg:x="92" fg:w="1"/><text x="7.4319%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.1819%" y="661" width="0.0781%" height="15" fill="rgb(231,54,50)" fg:x="92" fg:w="1"/><text x="7.4319%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.1819%" y="645" width="0.0781%" height="15" fill="rgb(239,217,53)" fg:x="92" fg:w="1"/><text x="7.4319%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.1819%" y="629" width="0.0781%" height="15" fill="rgb(248,8,0)" fg:x="92" fg:w="1"/><text x="7.4319%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.1819%" y="613" width="0.0781%" height="15" fill="rgb(229,118,37)" fg:x="92" fg:w="1"/><text x="7.4319%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="7.1819%" y="597" width="0.0781%" height="15" fill="rgb(253,223,43)" fg:x="92" fg:w="1"/><text x="7.4319%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="7.1819%" y="581" width="0.0781%" height="15" fill="rgb(211,77,36)" fg:x="92" fg:w="1"/><text x="7.4319%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="7.1819%" y="565" width="0.0781%" height="15" fill="rgb(219,3,53)" fg:x="92" fg:w="1"/><text x="7.4319%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="7.1819%" y="549" width="0.0781%" height="15" fill="rgb(244,45,42)" fg:x="92" fg:w="1"/><text x="7.4319%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.1819%" y="533" width="0.0781%" height="15" fill="rgb(225,95,27)" fg:x="92" fg:w="1"/><text x="7.4319%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.4161%" y="725" width="0.0781%" height="15" fill="rgb(207,74,8)" fg:x="95" fg:w="1"/><text x="7.6661%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.4161%" y="709" width="0.0781%" height="15" fill="rgb(243,63,36)" fg:x="95" fg:w="1"/><text x="7.6661%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.4161%" y="693" width="0.0781%" height="15" fill="rgb(211,180,12)" fg:x="95" fg:w="1"/><text x="7.6661%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.4161%" y="677" width="0.0781%" height="15" fill="rgb(254,166,49)" fg:x="95" fg:w="1"/><text x="7.6661%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.4161%" y="661" width="0.0781%" height="15" fill="rgb(205,19,0)" fg:x="95" fg:w="1"/><text x="7.6661%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="7.4161%" y="645" width="0.0781%" height="15" fill="rgb(224,172,32)" fg:x="95" fg:w="1"/><text x="7.6661%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="7.4161%" y="629" width="0.0781%" height="15" fill="rgb(254,136,30)" fg:x="95" fg:w="1"/><text x="7.6661%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="7.4941%" y="709" width="0.1561%" height="15" fill="rgb(246,19,35)" fg:x="96" fg:w="2"/><text x="7.7441%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="7.6503%" y="693" width="0.1561%" height="15" fill="rgb(219,24,36)" fg:x="98" fg:w="2"/><text x="7.9003%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.7283%" y="677" width="0.0781%" height="15" fill="rgb(251,55,1)" fg:x="99" fg:w="1"/><text x="7.9783%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.7283%" y="661" width="0.0781%" height="15" fill="rgb(218,117,39)" fg:x="99" fg:w="1"/><text x="7.9783%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.23%)</title><rect x="7.6503%" y="709" width="0.2342%" height="15" fill="rgb(248,169,11)" fg:x="98" fg:w="3"/><text x="7.9003%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.8064%" y="693" width="0.0781%" height="15" fill="rgb(244,40,44)" fg:x="100" fg:w="1"/><text x="8.0564%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.8064%" y="677" width="0.0781%" height="15" fill="rgb(234,62,37)" fg:x="100" fg:w="1"/><text x="8.0564%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.0406%" y="693" width="0.0781%" height="15" fill="rgb(207,117,42)" fg:x="103" fg:w="1"/><text x="8.2906%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="8.1187%" y="693" width="0.2342%" height="15" fill="rgb(213,43,2)" fg:x="104" fg:w="3"/><text x="8.3687%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.1967%" y="677" width="0.1561%" height="15" fill="rgb(244,202,51)" fg:x="105" fg:w="2"/><text x="8.4467%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.5090%" y="645" width="0.1561%" height="15" fill="rgb(253,174,46)" fg:x="109" fg:w="2"/><text x="8.7590%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.5090%" y="629" width="0.1561%" height="15" fill="rgb(251,23,1)" fg:x="109" fg:w="2"/><text x="8.7590%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.5870%" y="613" width="0.0781%" height="15" fill="rgb(253,26,1)" fg:x="110" fg:w="1"/><text x="8.8370%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.31%)</title><rect x="8.5090%" y="677" width="0.3123%" height="15" fill="rgb(216,89,31)" fg:x="109" fg:w="4"/><text x="8.7590%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="8.5090%" y="661" width="0.3123%" height="15" fill="rgb(209,109,5)" fg:x="109" fg:w="4"/><text x="8.7590%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="8.6651%" y="645" width="0.1561%" height="15" fill="rgb(229,63,13)" fg:x="111" fg:w="2"/><text x="8.9151%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.7432%" y="629" width="0.0781%" height="15" fill="rgb(238,137,54)" fg:x="112" fg:w="1"/><text x="8.9932%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.8212%" y="677" width="0.1561%" height="15" fill="rgb(228,1,9)" fg:x="113" fg:w="2"/><text x="9.0712%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.8993%" y="661" width="0.0781%" height="15" fill="rgb(249,120,48)" fg:x="114" fg:w="1"/><text x="9.1493%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.8993%" y="645" width="0.0781%" height="15" fill="rgb(209,72,36)" fg:x="114" fg:w="1"/><text x="9.1493%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.8993%" y="629" width="0.0781%" height="15" fill="rgb(247,98,49)" fg:x="114" fg:w="1"/><text x="9.1493%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.8993%" y="613" width="0.0781%" height="15" fill="rgb(233,75,36)" fg:x="114" fg:w="1"/><text x="9.1493%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.8993%" y="597" width="0.0781%" height="15" fill="rgb(225,14,24)" fg:x="114" fg:w="1"/><text x="9.1493%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.8993%" y="581" width="0.0781%" height="15" fill="rgb(237,193,20)" fg:x="114" fg:w="1"/><text x="9.1493%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.0554%" y="661" width="0.0781%" height="15" fill="rgb(239,122,19)" fg:x="116" fg:w="1"/><text x="9.3054%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.0554%" y="645" width="0.0781%" height="15" fill="rgb(231,220,10)" fg:x="116" fg:w="1"/><text x="9.3054%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.0554%" y="629" width="0.0781%" height="15" fill="rgb(220,66,15)" fg:x="116" fg:w="1"/><text x="9.3054%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.0554%" y="613" width="0.0781%" height="15" fill="rgb(215,171,52)" fg:x="116" fg:w="1"/><text x="9.3054%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.1335%" y="645" width="0.0781%" height="15" fill="rgb(241,169,50)" fg:x="117" fg:w="1"/><text x="9.3835%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.2116%" y="645" width="0.0781%" height="15" fill="rgb(236,189,0)" fg:x="118" fg:w="1"/><text x="9.4616%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.3677%" y="629" width="0.0781%" height="15" fill="rgb(217,147,20)" fg:x="120" fg:w="1"/><text x="9.6177%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="9.4457%" y="629" width="0.2342%" height="15" fill="rgb(206,188,39)" fg:x="121" fg:w="3"/><text x="9.6957%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.5238%" y="613" width="0.1561%" height="15" fill="rgb(227,118,25)" fg:x="122" fg:w="2"/><text x="9.7738%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.6019%" y="597" width="0.0781%" height="15" fill="rgb(248,171,40)" fg:x="123" fg:w="1"/><text x="9.8519%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.6019%" y="581" width="0.0781%" height="15" fill="rgb(251,90,54)" fg:x="123" fg:w="1"/><text x="9.8519%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.47%)</title><rect x="9.6799%" y="613" width="0.4684%" height="15" fill="rgb(234,11,46)" fg:x="124" fg:w="6"/><text x="9.9299%" y="623.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.47%)</title><rect x="9.6799%" y="597" width="0.4684%" height="15" fill="rgb(229,134,13)" fg:x="124" fg:w="6"/><text x="9.9299%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.47%)</title><rect x="9.6799%" y="581" width="0.4684%" height="15" fill="rgb(223,129,3)" fg:x="124" fg:w="6"/><text x="9.9299%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.47%)</title><rect x="9.6799%" y="565" width="0.4684%" height="15" fill="rgb(221,124,13)" fg:x="124" fg:w="6"/><text x="9.9299%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.31%)</title><rect x="9.8361%" y="549" width="0.3123%" height="15" fill="rgb(234,3,18)" fg:x="126" fg:w="4"/><text x="10.0861%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.31%)</title><rect x="9.8361%" y="533" width="0.3123%" height="15" fill="rgb(249,199,20)" fg:x="126" fg:w="4"/><text x="10.0861%" y="543.50"></text></g><g><title>realloc (4 samples, 0.31%)</title><rect x="9.8361%" y="517" width="0.3123%" height="15" fill="rgb(224,134,6)" fg:x="126" fg:w="4"/><text x="10.0861%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="10.1483%" y="613" width="0.0781%" height="15" fill="rgb(254,83,26)" fg:x="130" fg:w="1"/><text x="10.3983%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.70%)</title><rect x="9.6799%" y="629" width="0.7026%" height="15" fill="rgb(217,88,9)" fg:x="124" fg:w="9"/><text x="9.9299%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.2264%" y="613" width="0.1561%" height="15" fill="rgb(225,73,2)" fg:x="131" fg:w="2"/><text x="10.4764%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.2264%" y="597" width="0.1561%" height="15" fill="rgb(226,44,39)" fg:x="131" fg:w="2"/><text x="10.4764%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.3044%" y="581" width="0.0781%" height="15" fill="rgb(228,53,17)" fg:x="132" fg:w="1"/><text x="10.5544%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.33%)</title><rect x="9.1335%" y="661" width="1.3271%" height="15" fill="rgb(212,27,27)" fg:x="117" fg:w="17"/><text x="9.3835%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.17%)</title><rect x="9.2896%" y="645" width="1.1710%" height="15" fill="rgb(241,50,6)" fg:x="119" fg:w="15"/><text x="9.5396%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.3825%" y="629" width="0.0781%" height="15" fill="rgb(225,28,51)" fg:x="133" fg:w="1"/><text x="10.6325%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.3825%" y="613" width="0.0781%" height="15" fill="rgb(215,33,16)" fg:x="133" fg:w="1"/><text x="10.6325%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.34%)</title><rect x="8.3528%" y="693" width="2.3419%" height="15" fill="rgb(243,40,39)" fg:x="107" fg:w="30"/><text x="8.6028%" y="703.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.72%)</title><rect x="8.9774%" y="677" width="1.7174%" height="15" fill="rgb(225,11,42)" fg:x="115" fg:w="22"/><text x="9.2274%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="10.4606%" y="661" width="0.2342%" height="15" fill="rgb(241,220,38)" fg:x="134" fg:w="3"/><text x="10.7106%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.5386%" y="645" width="0.1561%" height="15" fill="rgb(244,52,35)" fg:x="135" fg:w="2"/><text x="10.7886%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (50 samples, 3.90%)</title><rect x="7.4941%" y="725" width="3.9032%" height="15" fill="rgb(246,42,46)" fg:x="96" fg:w="50"/><text x="7.7441%" y="735.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (45 samples, 3.51%)</title><rect x="7.8845%" y="709" width="3.5129%" height="15" fill="rgb(205,184,13)" fg:x="101" fg:w="45"/><text x="8.1345%" y="719.50">ser..</text></g><g><title>std::io::Write::write_all (9 samples, 0.70%)</title><rect x="10.6948%" y="693" width="0.7026%" height="15" fill="rgb(209,48,36)" fg:x="137" fg:w="9"/><text x="10.9448%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.55%)</title><rect x="10.8509%" y="677" width="0.5464%" height="15" fill="rgb(244,34,51)" fg:x="139" fg:w="7"/><text x="11.1009%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.47%)</title><rect x="10.9290%" y="661" width="0.4684%" height="15" fill="rgb(221,107,33)" fg:x="140" fg:w="6"/><text x="11.1790%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.39%)</title><rect x="11.0070%" y="645" width="0.3903%" height="15" fill="rgb(224,203,12)" fg:x="141" fg:w="5"/><text x="11.2570%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.39%)</title><rect x="11.0070%" y="629" width="0.3903%" height="15" fill="rgb(230,215,18)" fg:x="141" fg:w="5"/><text x="11.2570%" y="639.50"></text></g><g><title>realloc (3 samples, 0.23%)</title><rect x="11.1632%" y="613" width="0.2342%" height="15" fill="rgb(206,185,35)" fg:x="143" fg:w="3"/><text x="11.4132%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.3973%" y="693" width="0.0781%" height="15" fill="rgb(228,140,34)" fg:x="146" fg:w="1"/><text x="11.6473%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.5535%" y="677" width="0.0781%" height="15" fill="rgb(208,93,13)" fg:x="148" fg:w="1"/><text x="11.8035%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="11.6315%" y="677" width="0.1561%" height="15" fill="rgb(221,193,39)" fg:x="149" fg:w="2"/><text x="11.8815%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.7096%" y="661" width="0.0781%" height="15" fill="rgb(241,132,34)" fg:x="150" fg:w="1"/><text x="11.9596%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.7877%" y="661" width="0.0781%" height="15" fill="rgb(221,141,10)" fg:x="151" fg:w="1"/><text x="12.0377%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.9438%" y="645" width="0.0781%" height="15" fill="rgb(226,90,31)" fg:x="153" fg:w="1"/><text x="12.1938%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.9438%" y="629" width="0.0781%" height="15" fill="rgb(243,75,5)" fg:x="153" fg:w="1"/><text x="12.1938%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="12.0219%" y="645" width="0.0781%" height="15" fill="rgb(227,156,21)" fg:x="154" fg:w="1"/><text x="12.2719%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="11.3973%" y="725" width="0.8587%" height="15" fill="rgb(250,195,8)" fg:x="146" fg:w="11"/><text x="11.6473%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.86%)</title><rect x="11.3973%" y="709" width="0.8587%" height="15" fill="rgb(220,134,5)" fg:x="146" fg:w="11"/><text x="11.6473%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.78%)</title><rect x="11.4754%" y="693" width="0.7806%" height="15" fill="rgb(246,106,34)" fg:x="147" fg:w="10"/><text x="11.7254%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="11.7877%" y="677" width="0.4684%" height="15" fill="rgb(205,1,4)" fg:x="151" fg:w="6"/><text x="12.0377%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="11.8657%" y="661" width="0.3903%" height="15" fill="rgb(224,151,29)" fg:x="152" fg:w="5"/><text x="12.1157%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="12.0999%" y="645" width="0.1561%" height="15" fill="rgb(251,196,0)" fg:x="155" fg:w="2"/><text x="12.3499%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="12.0999%" y="629" width="0.1561%" height="15" fill="rgb(212,127,0)" fg:x="155" fg:w="2"/><text x="12.3499%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="12.0999%" y="613" width="0.1561%" height="15" fill="rgb(236,71,53)" fg:x="155" fg:w="2"/><text x="12.3499%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="12.0999%" y="597" width="0.1561%" height="15" fill="rgb(227,99,0)" fg:x="155" fg:w="2"/><text x="12.3499%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.47%)</title><rect x="12.3341%" y="677" width="0.4684%" height="15" fill="rgb(239,89,21)" fg:x="158" fg:w="6"/><text x="12.5841%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="12.5683%" y="661" width="0.2342%" height="15" fill="rgb(243,122,19)" fg:x="161" fg:w="3"/><text x="12.8183%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="12.6464%" y="645" width="0.1561%" height="15" fill="rgb(229,192,45)" fg:x="162" fg:w="2"/><text x="12.8964%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="12.8025%" y="677" width="0.0781%" height="15" fill="rgb(235,165,35)" fg:x="164" fg:w="1"/><text x="13.0525%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.8025%" y="661" width="0.0781%" height="15" fill="rgb(253,202,0)" fg:x="164" fg:w="1"/><text x="13.0525%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8025%" y="645" width="0.0781%" height="15" fill="rgb(235,51,20)" fg:x="164" fg:w="1"/><text x="13.0525%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="12.8806%" y="661" width="0.0781%" height="15" fill="rgb(218,95,46)" fg:x="165" fg:w="1"/><text x="13.1306%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="12.8806%" y="677" width="0.1561%" height="15" fill="rgb(212,81,10)" fg:x="165" fg:w="2"/><text x="13.1306%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.9586%" y="661" width="0.0781%" height="15" fill="rgb(240,59,0)" fg:x="166" fg:w="1"/><text x="13.2086%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="13.0367%" y="645" width="0.1561%" height="15" fill="rgb(212,191,42)" fg:x="167" fg:w="2"/><text x="13.2867%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="13.1928%" y="645" width="0.0781%" height="15" fill="rgb(233,140,3)" fg:x="169" fg:w="1"/><text x="13.4428%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.3489%" y="629" width="0.0781%" height="15" fill="rgb(215,69,23)" fg:x="171" fg:w="1"/><text x="13.5989%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.3489%" y="613" width="0.0781%" height="15" fill="rgb(240,202,20)" fg:x="171" fg:w="1"/><text x="13.5989%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.3489%" y="597" width="0.0781%" height="15" fill="rgb(209,146,50)" fg:x="171" fg:w="1"/><text x="13.5989%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="13.4270%" y="629" width="0.1561%" height="15" fill="rgb(253,102,54)" fg:x="172" fg:w="2"/><text x="13.6770%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="13.4270%" y="613" width="0.1561%" height="15" fill="rgb(250,173,47)" fg:x="172" fg:w="2"/><text x="13.6770%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="13.4270%" y="597" width="0.1561%" height="15" fill="rgb(232,142,7)" fg:x="172" fg:w="2"/><text x="13.6770%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.4270%" y="581" width="0.1561%" height="15" fill="rgb(230,157,47)" fg:x="172" fg:w="2"/><text x="13.6770%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="13.5831%" y="613" width="0.0781%" height="15" fill="rgb(214,177,35)" fg:x="174" fg:w="1"/><text x="13.8331%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6612%" y="597" width="0.0781%" height="15" fill="rgb(234,119,46)" fg:x="175" fg:w="1"/><text x="13.9112%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6612%" y="581" width="0.0781%" height="15" fill="rgb(241,180,50)" fg:x="175" fg:w="1"/><text x="13.9112%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6612%" y="565" width="0.0781%" height="15" fill="rgb(221,54,25)" fg:x="175" fg:w="1"/><text x="13.9112%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.0515%" y="501" width="0.0781%" height="15" fill="rgb(209,157,44)" fg:x="180" fg:w="1"/><text x="14.3015%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.0515%" y="485" width="0.0781%" height="15" fill="rgb(246,115,41)" fg:x="180" fg:w="1"/><text x="14.3015%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0515%" y="469" width="0.0781%" height="15" fill="rgb(229,86,1)" fg:x="180" fg:w="1"/><text x="14.3015%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="14.1296%" y="485" width="0.0781%" height="15" fill="rgb(240,108,53)" fg:x="181" fg:w="1"/><text x="14.3796%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="14.0515%" y="517" width="0.2342%" height="15" fill="rgb(227,134,2)" fg:x="180" fg:w="3"/><text x="14.3015%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="14.1296%" y="501" width="0.1561%" height="15" fill="rgb(213,129,25)" fg:x="181" fg:w="2"/><text x="14.3796%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="14.2077%" y="485" width="0.0781%" height="15" fill="rgb(226,35,21)" fg:x="182" fg:w="1"/><text x="14.4577%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="13.8173%" y="581" width="0.5464%" height="15" fill="rgb(208,129,26)" fg:x="177" fg:w="7"/><text x="14.0673%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="13.8173%" y="565" width="0.5464%" height="15" fill="rgb(224,83,6)" fg:x="177" fg:w="7"/><text x="14.0673%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.47%)</title><rect x="13.8954%" y="549" width="0.4684%" height="15" fill="rgb(227,52,39)" fg:x="178" fg:w="6"/><text x="14.1454%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="13.9735%" y="533" width="0.3903%" height="15" fill="rgb(241,30,17)" fg:x="179" fg:w="5"/><text x="14.2235%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.2857%" y="517" width="0.0781%" height="15" fill="rgb(246,186,42)" fg:x="183" fg:w="1"/><text x="14.5357%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.01%)</title><rect x="13.6612%" y="613" width="1.0148%" height="15" fill="rgb(221,169,15)" fg:x="175" fg:w="13"/><text x="13.9112%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.94%)</title><rect x="13.7393%" y="597" width="0.9368%" height="15" fill="rgb(235,108,21)" fg:x="176" fg:w="12"/><text x="13.9893%" y="607.50"></text></g><g><title>__libc_malloc (4 samples, 0.31%)</title><rect x="14.3638%" y="581" width="0.3123%" height="15" fill="rgb(219,148,30)" fg:x="184" fg:w="4"/><text x="14.6138%" y="591.50"></text></g><g><title>engine::session::Session::flush (104 samples, 8.12%)</title><rect x="6.7135%" y="805" width="8.1187%" height="15" fill="rgb(220,109,5)" fg:x="86" fg:w="104"/><text x="6.9635%" y="815.50">engine::ses..</text></g><g><title>engine::session::state::State::close (102 samples, 7.96%)</title><rect x="6.8696%" y="789" width="7.9625%" height="15" fill="rgb(213,203,48)" fg:x="88" fg:w="102"/><text x="7.1196%" y="799.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_entities (102 samples, 7.96%)</title><rect x="6.8696%" y="773" width="7.9625%" height="15" fill="rgb(244,71,33)" fg:x="88" fg:w="102"/><text x="7.1196%" y="783.50">engine::ses..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (97 samples, 7.57%)</title><rect x="7.2600%" y="757" width="7.5722%" height="15" fill="rgb(209,23,2)" fg:x="93" fg:w="97"/><text x="7.5100%" y="767.50">engine::se..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (96 samples, 7.49%)</title><rect x="7.3380%" y="741" width="7.4941%" height="15" fill="rgb(219,97,7)" fg:x="94" fg:w="96"/><text x="7.5880%" y="751.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (33 samples, 2.58%)</title><rect x="12.2560%" y="725" width="2.5761%" height="15" fill="rgb(216,161,23)" fg:x="157" fg:w="33"/><text x="12.5060%" y="735.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (33 samples, 2.58%)</title><rect x="12.2560%" y="709" width="2.5761%" height="15" fill="rgb(207,45,42)" fg:x="157" fg:w="33"/><text x="12.5060%" y="719.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 2.58%)</title><rect x="12.2560%" y="693" width="2.5761%" height="15" fill="rgb(241,61,4)" fg:x="157" fg:w="33"/><text x="12.5060%" y="703.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (23 samples, 1.80%)</title><rect x="13.0367%" y="677" width="1.7955%" height="15" fill="rgb(236,170,1)" fg:x="167" fg:w="23"/><text x="13.2867%" y="687.50">s..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (23 samples, 1.80%)</title><rect x="13.0367%" y="661" width="1.7955%" height="15" fill="rgb(239,72,5)" fg:x="167" fg:w="23"/><text x="13.2867%" y="671.50">&lt;..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.56%)</title><rect x="13.2709%" y="645" width="1.5613%" height="15" fill="rgb(214,13,50)" fg:x="170" fg:w="20"/><text x="13.5209%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.25%)</title><rect x="13.5831%" y="629" width="1.2490%" height="15" fill="rgb(224,88,9)" fg:x="174" fg:w="16"/><text x="13.8331%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.6760%" y="613" width="0.1561%" height="15" fill="rgb(238,192,34)" fg:x="188" fg:w="2"/><text x="14.9260%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="14.8322%" y="773" width="0.0781%" height="15" fill="rgb(217,203,50)" fg:x="190" fg:w="1"/><text x="15.0822%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="14.8322%" y="757" width="0.0781%" height="15" fill="rgb(241,123,32)" fg:x="190" fg:w="1"/><text x="15.0822%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.8322%" y="741" width="0.0781%" height="15" fill="rgb(248,151,39)" fg:x="190" fg:w="1"/><text x="15.0822%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.8322%" y="725" width="0.0781%" height="15" fill="rgb(208,89,6)" fg:x="190" fg:w="1"/><text x="15.0822%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.8322%" y="709" width="0.0781%" height="15" fill="rgb(254,43,26)" fg:x="190" fg:w="1"/><text x="15.0822%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.8322%" y="693" width="0.0781%" height="15" fill="rgb(216,158,13)" fg:x="190" fg:w="1"/><text x="15.0822%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="14.8322%" y="677" width="0.0781%" height="15" fill="rgb(212,47,37)" fg:x="190" fg:w="1"/><text x="15.0822%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.8322%" y="661" width="0.0781%" height="15" fill="rgb(254,16,10)" fg:x="190" fg:w="1"/><text x="15.0822%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.8322%" y="645" width="0.0781%" height="15" fill="rgb(223,228,16)" fg:x="190" fg:w="1"/><text x="15.0822%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.8322%" y="629" width="0.0781%" height="15" fill="rgb(249,108,50)" fg:x="190" fg:w="1"/><text x="15.0822%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="14.8322%" y="613" width="0.0781%" height="15" fill="rgb(208,220,5)" fg:x="190" fg:w="1"/><text x="15.0822%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.8322%" y="597" width="0.0781%" height="15" fill="rgb(217,89,48)" fg:x="190" fg:w="1"/><text x="15.0822%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.8322%" y="581" width="0.0781%" height="15" fill="rgb(212,113,41)" fg:x="190" fg:w="1"/><text x="15.0822%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.8322%" y="565" width="0.0781%" height="15" fill="rgb(231,127,5)" fg:x="190" fg:w="1"/><text x="15.0822%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.8322%" y="549" width="0.0781%" height="15" fill="rgb(217,141,17)" fg:x="190" fg:w="1"/><text x="15.0822%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.8322%" y="533" width="0.0781%" height="15" fill="rgb(245,125,54)" fg:x="190" fg:w="1"/><text x="15.0822%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="14.8322%" y="517" width="0.0781%" height="15" fill="rgb(248,125,3)" fg:x="190" fg:w="1"/><text x="15.0822%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="14.8322%" y="501" width="0.0781%" height="15" fill="rgb(236,119,51)" fg:x="190" fg:w="1"/><text x="15.0822%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="14.8322%" y="485" width="0.0781%" height="15" fill="rgb(239,99,8)" fg:x="190" fg:w="1"/><text x="15.0822%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="14.8322%" y="469" width="0.0781%" height="15" fill="rgb(224,228,4)" fg:x="190" fg:w="1"/><text x="15.0822%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.8322%" y="453" width="0.0781%" height="15" fill="rgb(220,131,45)" fg:x="190" fg:w="1"/><text x="15.0822%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.8322%" y="437" width="0.0781%" height="15" fill="rgb(215,62,5)" fg:x="190" fg:w="1"/><text x="15.0822%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.8322%" y="421" width="0.0781%" height="15" fill="rgb(253,12,24)" fg:x="190" fg:w="1"/><text x="15.0822%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="14.8322%" y="405" width="0.0781%" height="15" fill="rgb(248,120,50)" fg:x="190" fg:w="1"/><text x="15.0822%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.8322%" y="389" width="0.0781%" height="15" fill="rgb(245,194,10)" fg:x="190" fg:w="1"/><text x="15.0822%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="14.8322%" y="373" width="0.0781%" height="15" fill="rgb(241,149,38)" fg:x="190" fg:w="1"/><text x="15.0822%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="14.8322%" y="357" width="0.0781%" height="15" fill="rgb(219,215,7)" fg:x="190" fg:w="1"/><text x="15.0822%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="14.8322%" y="341" width="0.0781%" height="15" fill="rgb(208,120,31)" fg:x="190" fg:w="1"/><text x="15.0822%" y="351.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="14.8322%" y="325" width="0.0781%" height="15" fill="rgb(244,30,8)" fg:x="190" fg:w="1"/><text x="15.0822%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="14.8322%" y="309" width="0.0781%" height="15" fill="rgb(238,35,44)" fg:x="190" fg:w="1"/><text x="15.0822%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9102%" y="725" width="0.0781%" height="15" fill="rgb(243,218,37)" fg:x="191" fg:w="1"/><text x="15.1602%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9102%" y="709" width="0.0781%" height="15" fill="rgb(218,169,10)" fg:x="191" fg:w="1"/><text x="15.1602%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9102%" y="693" width="0.0781%" height="15" fill="rgb(221,144,10)" fg:x="191" fg:w="1"/><text x="15.1602%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9102%" y="677" width="0.0781%" height="15" fill="rgb(226,41,38)" fg:x="191" fg:w="1"/><text x="15.1602%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.9102%" y="661" width="0.0781%" height="15" fill="rgb(228,3,1)" fg:x="191" fg:w="1"/><text x="15.1602%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.9102%" y="645" width="0.0781%" height="15" fill="rgb(209,129,12)" fg:x="191" fg:w="1"/><text x="15.1602%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.9102%" y="629" width="0.0781%" height="15" fill="rgb(213,136,33)" fg:x="191" fg:w="1"/><text x="15.1602%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.9102%" y="613" width="0.0781%" height="15" fill="rgb(209,181,29)" fg:x="191" fg:w="1"/><text x="15.1602%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.9102%" y="597" width="0.0781%" height="15" fill="rgb(234,173,18)" fg:x="191" fg:w="1"/><text x="15.1602%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.9102%" y="581" width="0.0781%" height="15" fill="rgb(227,73,47)" fg:x="191" fg:w="1"/><text x="15.1602%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.9102%" y="565" width="0.0781%" height="15" fill="rgb(234,9,34)" fg:x="191" fg:w="1"/><text x="15.1602%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.9102%" y="549" width="0.0781%" height="15" fill="rgb(235,172,15)" fg:x="191" fg:w="1"/><text x="15.1602%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.9102%" y="533" width="0.0781%" height="15" fill="rgb(245,61,2)" fg:x="191" fg:w="1"/><text x="15.1602%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.9102%" y="517" width="0.0781%" height="15" fill="rgb(238,39,47)" fg:x="191" fg:w="1"/><text x="15.1602%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.9102%" y="501" width="0.0781%" height="15" fill="rgb(234,37,24)" fg:x="191" fg:w="1"/><text x="15.1602%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.9102%" y="485" width="0.0781%" height="15" fill="rgb(248,223,24)" fg:x="191" fg:w="1"/><text x="15.1602%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.9883%" y="725" width="0.0781%" height="15" fill="rgb(223,12,15)" fg:x="192" fg:w="1"/><text x="15.2383%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.9883%" y="709" width="0.0781%" height="15" fill="rgb(249,6,3)" fg:x="192" fg:w="1"/><text x="15.2383%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.9883%" y="693" width="0.0781%" height="15" fill="rgb(237,105,33)" fg:x="192" fg:w="1"/><text x="15.2383%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.9883%" y="677" width="0.0781%" height="15" fill="rgb(252,208,35)" fg:x="192" fg:w="1"/><text x="15.2383%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.0664%" y="629" width="0.0781%" height="15" fill="rgb(215,181,35)" fg:x="193" fg:w="1"/><text x="15.3164%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.0664%" y="613" width="0.0781%" height="15" fill="rgb(246,212,3)" fg:x="193" fg:w="1"/><text x="15.3164%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.0664%" y="597" width="0.0781%" height="15" fill="rgb(247,156,24)" fg:x="193" fg:w="1"/><text x="15.3164%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.0664%" y="581" width="0.0781%" height="15" fill="rgb(248,9,31)" fg:x="193" fg:w="1"/><text x="15.3164%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="14.9102%" y="773" width="0.3123%" height="15" fill="rgb(234,26,45)" fg:x="191" fg:w="4"/><text x="15.1602%" y="783.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="14.9102%" y="757" width="0.3123%" height="15" fill="rgb(249,11,32)" fg:x="191" fg:w="4"/><text x="15.1602%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="14.9102%" y="741" width="0.3123%" height="15" fill="rgb(249,162,33)" fg:x="191" fg:w="4"/><text x="15.1602%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.0664%" y="725" width="0.1561%" height="15" fill="rgb(232,4,32)" fg:x="193" fg:w="2"/><text x="15.3164%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.0664%" y="709" width="0.1561%" height="15" fill="rgb(212,5,45)" fg:x="193" fg:w="2"/><text x="15.3164%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.0664%" y="693" width="0.1561%" height="15" fill="rgb(227,95,13)" fg:x="193" fg:w="2"/><text x="15.3164%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.0664%" y="677" width="0.1561%" height="15" fill="rgb(223,205,10)" fg:x="193" fg:w="2"/><text x="15.3164%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="15.0664%" y="661" width="0.1561%" height="15" fill="rgb(222,178,8)" fg:x="193" fg:w="2"/><text x="15.3164%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.0664%" y="645" width="0.1561%" height="15" fill="rgb(216,13,22)" fg:x="193" fg:w="2"/><text x="15.3164%" y="655.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="15.1444%" y="629" width="0.0781%" height="15" fill="rgb(240,167,12)" fg:x="194" fg:w="1"/><text x="15.3944%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.2225%" y="757" width="0.0781%" height="15" fill="rgb(235,68,35)" fg:x="195" fg:w="1"/><text x="15.4725%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.2225%" y="741" width="0.0781%" height="15" fill="rgb(253,40,27)" fg:x="195" fg:w="1"/><text x="15.4725%" y="751.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2225%" y="725" width="0.0781%" height="15" fill="rgb(214,19,28)" fg:x="195" fg:w="1"/><text x="15.4725%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="15.2225%" y="709" width="0.0781%" height="15" fill="rgb(210,167,45)" fg:x="195" fg:w="1"/><text x="15.4725%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.39%)</title><rect x="15.2225%" y="773" width="0.3903%" height="15" fill="rgb(232,97,40)" fg:x="195" fg:w="5"/><text x="15.4725%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.31%)</title><rect x="15.3005%" y="757" width="0.3123%" height="15" fill="rgb(250,35,23)" fg:x="196" fg:w="4"/><text x="15.5505%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="15.4567%" y="741" width="0.1561%" height="15" fill="rgb(248,47,53)" fg:x="198" fg:w="2"/><text x="15.7067%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="15.4567%" y="725" width="0.1561%" height="15" fill="rgb(226,58,50)" fg:x="198" fg:w="2"/><text x="15.7067%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5347%" y="709" width="0.0781%" height="15" fill="rgb(217,105,26)" fg:x="199" fg:w="1"/><text x="15.7847%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="15.6128%" y="757" width="0.0781%" height="15" fill="rgb(208,64,1)" fg:x="200" fg:w="1"/><text x="15.8628%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="15.6128%" y="741" width="0.0781%" height="15" fill="rgb(214,80,1)" fg:x="200" fg:w="1"/><text x="15.8628%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="15.6128%" y="725" width="0.0781%" height="15" fill="rgb(206,175,26)" fg:x="200" fg:w="1"/><text x="15.8628%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.6128%" y="709" width="0.0781%" height="15" fill="rgb(235,156,37)" fg:x="200" fg:w="1"/><text x="15.8628%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.6128%" y="693" width="0.0781%" height="15" fill="rgb(213,100,9)" fg:x="200" fg:w="1"/><text x="15.8628%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6128%" y="677" width="0.0781%" height="15" fill="rgb(241,15,13)" fg:x="200" fg:w="1"/><text x="15.8628%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.25%)</title><rect x="14.8322%" y="789" width="1.2490%" height="15" fill="rgb(205,97,43)" fg:x="190" fg:w="16"/><text x="15.0822%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.47%)</title><rect x="15.6128%" y="773" width="0.4684%" height="15" fill="rgb(216,106,32)" fg:x="200" fg:w="6"/><text x="15.8628%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (5 samples, 0.39%)</title><rect x="15.6909%" y="757" width="0.3903%" height="15" fill="rgb(226,200,8)" fg:x="201" fg:w="5"/><text x="15.9409%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.39%)</title><rect x="15.6909%" y="741" width="0.3903%" height="15" fill="rgb(244,54,29)" fg:x="201" fg:w="5"/><text x="15.9409%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.39%)</title><rect x="15.6909%" y="725" width="0.3903%" height="15" fill="rgb(252,169,12)" fg:x="201" fg:w="5"/><text x="15.9409%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.39%)</title><rect x="15.6909%" y="709" width="0.3903%" height="15" fill="rgb(231,199,11)" fg:x="201" fg:w="5"/><text x="15.9409%" y="719.50"></text></g><g><title>__libc_malloc (5 samples, 0.39%)</title><rect x="15.6909%" y="693" width="0.3903%" height="15" fill="rgb(233,191,18)" fg:x="201" fg:w="5"/><text x="15.9409%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0812%" y="677" width="0.0781%" height="15" fill="rgb(215,83,47)" fg:x="206" fg:w="1"/><text x="16.3312%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0812%" y="661" width="0.0781%" height="15" fill="rgb(251,67,19)" fg:x="206" fg:w="1"/><text x="16.3312%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0812%" y="645" width="0.0781%" height="15" fill="rgb(240,7,20)" fg:x="206" fg:w="1"/><text x="16.3312%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="16.0812%" y="741" width="0.1561%" height="15" fill="rgb(210,150,26)" fg:x="206" fg:w="2"/><text x="16.3312%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="16.0812%" y="725" width="0.1561%" height="15" fill="rgb(228,75,42)" fg:x="206" fg:w="2"/><text x="16.3312%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.0812%" y="709" width="0.1561%" height="15" fill="rgb(237,134,48)" fg:x="206" fg:w="2"/><text x="16.3312%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.0812%" y="693" width="0.1561%" height="15" fill="rgb(205,80,50)" fg:x="206" fg:w="2"/><text x="16.3312%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1593%" y="677" width="0.0781%" height="15" fill="rgb(217,74,48)" fg:x="207" fg:w="1"/><text x="16.4093%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3154%" y="629" width="0.0781%" height="15" fill="rgb(205,82,50)" fg:x="209" fg:w="1"/><text x="16.5654%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3154%" y="613" width="0.0781%" height="15" fill="rgb(228,1,33)" fg:x="209" fg:w="1"/><text x="16.5654%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.3154%" y="597" width="0.0781%" height="15" fill="rgb(214,50,23)" fg:x="209" fg:w="1"/><text x="16.5654%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.3154%" y="581" width="0.0781%" height="15" fill="rgb(210,62,9)" fg:x="209" fg:w="1"/><text x="16.5654%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.3154%" y="565" width="0.0781%" height="15" fill="rgb(210,104,37)" fg:x="209" fg:w="1"/><text x="16.5654%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="16.3154%" y="549" width="0.0781%" height="15" fill="rgb(232,104,43)" fg:x="209" fg:w="1"/><text x="16.5654%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="16.3154%" y="533" width="0.0781%" height="15" fill="rgb(244,52,6)" fg:x="209" fg:w="1"/><text x="16.5654%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.39%)</title><rect x="16.0812%" y="773" width="0.3903%" height="15" fill="rgb(211,174,52)" fg:x="206" fg:w="5"/><text x="16.3312%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.39%)</title><rect x="16.0812%" y="757" width="0.3903%" height="15" fill="rgb(229,48,4)" fg:x="206" fg:w="5"/><text x="16.3312%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="16.2373%" y="741" width="0.2342%" height="15" fill="rgb(205,155,16)" fg:x="208" fg:w="3"/><text x="16.4873%" y="751.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="16.2373%" y="725" width="0.2342%" height="15" fill="rgb(211,141,53)" fg:x="208" fg:w="3"/><text x="16.4873%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="16.2373%" y="709" width="0.2342%" height="15" fill="rgb(240,148,11)" fg:x="208" fg:w="3"/><text x="16.4873%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.3154%" y="693" width="0.1561%" height="15" fill="rgb(214,45,23)" fg:x="209" fg:w="2"/><text x="16.5654%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.3154%" y="677" width="0.1561%" height="15" fill="rgb(248,74,26)" fg:x="209" fg:w="2"/><text x="16.5654%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.3154%" y="661" width="0.1561%" height="15" fill="rgb(218,121,16)" fg:x="209" fg:w="2"/><text x="16.5654%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.3154%" y="645" width="0.1561%" height="15" fill="rgb(218,10,47)" fg:x="209" fg:w="2"/><text x="16.5654%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3934%" y="629" width="0.0781%" height="15" fill="rgb(227,99,14)" fg:x="210" fg:w="1"/><text x="16.6434%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="16.4715%" y="773" width="0.1561%" height="15" fill="rgb(229,83,46)" fg:x="211" fg:w="2"/><text x="16.7215%" y="783.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="16.4715%" y="757" width="0.1561%" height="15" fill="rgb(228,25,1)" fg:x="211" fg:w="2"/><text x="16.7215%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.4715%" y="741" width="0.1561%" height="15" fill="rgb(252,190,15)" fg:x="211" fg:w="2"/><text x="16.7215%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="16.4715%" y="725" width="0.1561%" height="15" fill="rgb(213,103,51)" fg:x="211" fg:w="2"/><text x="16.7215%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="16.4715%" y="709" width="0.1561%" height="15" fill="rgb(220,38,44)" fg:x="211" fg:w="2"/><text x="16.7215%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.5496%" y="693" width="0.0781%" height="15" fill="rgb(210,45,26)" fg:x="212" fg:w="1"/><text x="16.7996%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5496%" y="677" width="0.0781%" height="15" fill="rgb(205,95,48)" fg:x="212" fg:w="1"/><text x="16.7996%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.7057%" y="645" width="0.0781%" height="15" fill="rgb(225,179,37)" fg:x="214" fg:w="1"/><text x="16.9557%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.7057%" y="629" width="0.0781%" height="15" fill="rgb(230,209,3)" fg:x="214" fg:w="1"/><text x="16.9557%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7057%" y="613" width="0.0781%" height="15" fill="rgb(248,12,46)" fg:x="214" fg:w="1"/><text x="16.9557%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7057%" y="597" width="0.0781%" height="15" fill="rgb(234,18,0)" fg:x="214" fg:w="1"/><text x="16.9557%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.7057%" y="581" width="0.0781%" height="15" fill="rgb(238,197,14)" fg:x="214" fg:w="1"/><text x="16.9557%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.7057%" y="565" width="0.0781%" height="15" fill="rgb(251,162,48)" fg:x="214" fg:w="1"/><text x="16.9557%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.7057%" y="549" width="0.0781%" height="15" fill="rgb(237,73,42)" fg:x="214" fg:w="1"/><text x="16.9557%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.7057%" y="533" width="0.0781%" height="15" fill="rgb(211,108,8)" fg:x="214" fg:w="1"/><text x="16.9557%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.7057%" y="517" width="0.0781%" height="15" fill="rgb(213,45,22)" fg:x="214" fg:w="1"/><text x="16.9557%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.7057%" y="501" width="0.0781%" height="15" fill="rgb(252,154,5)" fg:x="214" fg:w="1"/><text x="16.9557%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="16.7057%" y="485" width="0.0781%" height="15" fill="rgb(221,79,52)" fg:x="214" fg:w="1"/><text x="16.9557%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="16.7057%" y="469" width="0.0781%" height="15" fill="rgb(229,220,36)" fg:x="214" fg:w="1"/><text x="16.9557%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.7057%" y="661" width="0.1561%" height="15" fill="rgb(211,17,16)" fg:x="214" fg:w="2"/><text x="16.9557%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7838%" y="645" width="0.0781%" height="15" fill="rgb(222,55,31)" fg:x="215" fg:w="1"/><text x="17.0338%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="16.7057%" y="677" width="0.3123%" height="15" fill="rgb(221,221,31)" fg:x="214" fg:w="4"/><text x="16.9557%" y="687.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="16.8618%" y="661" width="0.1561%" height="15" fill="rgb(227,168,26)" fg:x="216" fg:w="2"/><text x="17.1118%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.0180%" y="581" width="0.0781%" height="15" fill="rgb(224,139,9)" fg:x="218" fg:w="1"/><text x="17.2680%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.0180%" y="565" width="0.0781%" height="15" fill="rgb(254,172,0)" fg:x="218" fg:w="1"/><text x="17.2680%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.47%)</title><rect x="16.7057%" y="725" width="0.4684%" height="15" fill="rgb(235,203,1)" fg:x="214" fg:w="6"/><text x="16.9557%" y="735.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.47%)</title><rect x="16.7057%" y="709" width="0.4684%" height="15" fill="rgb(216,205,24)" fg:x="214" fg:w="6"/><text x="16.9557%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.47%)</title><rect x="16.7057%" y="693" width="0.4684%" height="15" fill="rgb(233,24,6)" fg:x="214" fg:w="6"/><text x="16.9557%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.0180%" y="677" width="0.1561%" height="15" fill="rgb(244,110,9)" fg:x="218" fg:w="2"/><text x="17.2680%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.0180%" y="661" width="0.1561%" height="15" fill="rgb(239,222,42)" fg:x="218" fg:w="2"/><text x="17.2680%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.0180%" y="645" width="0.1561%" height="15" fill="rgb(218,145,13)" fg:x="218" fg:w="2"/><text x="17.2680%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.0180%" y="629" width="0.1561%" height="15" fill="rgb(207,69,11)" fg:x="218" fg:w="2"/><text x="17.2680%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="17.0180%" y="613" width="0.1561%" height="15" fill="rgb(220,223,22)" fg:x="218" fg:w="2"/><text x="17.2680%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.0180%" y="597" width="0.1561%" height="15" fill="rgb(245,102,5)" fg:x="218" fg:w="2"/><text x="17.2680%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.0960%" y="581" width="0.0781%" height="15" fill="rgb(211,148,2)" fg:x="219" fg:w="1"/><text x="17.3460%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.0960%" y="565" width="0.0781%" height="15" fill="rgb(241,13,44)" fg:x="219" fg:w="1"/><text x="17.3460%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1741%" y="677" width="0.1561%" height="15" fill="rgb(219,137,21)" fg:x="220" fg:w="2"/><text x="17.4241%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1741%" y="661" width="0.1561%" height="15" fill="rgb(242,206,5)" fg:x="220" fg:w="2"/><text x="17.4241%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1741%" y="645" width="0.1561%" height="15" fill="rgb(217,114,22)" fg:x="220" fg:w="2"/><text x="17.4241%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1741%" y="629" width="0.1561%" height="15" fill="rgb(253,206,42)" fg:x="220" fg:w="2"/><text x="17.4241%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2521%" y="613" width="0.0781%" height="15" fill="rgb(236,102,18)" fg:x="221" fg:w="1"/><text x="17.5021%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.3302%" y="677" width="0.0781%" height="15" fill="rgb(208,59,49)" fg:x="222" fg:w="1"/><text x="17.5802%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.3302%" y="661" width="0.0781%" height="15" fill="rgb(215,194,28)" fg:x="222" fg:w="1"/><text x="17.5802%" y="671.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.86%)</title><rect x="16.6276%" y="773" width="0.8587%" height="15" fill="rgb(243,207,11)" fg:x="213" fg:w="11"/><text x="16.8776%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.86%)</title><rect x="16.6276%" y="757" width="0.8587%" height="15" fill="rgb(254,179,35)" fg:x="213" fg:w="11"/><text x="16.8776%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.78%)</title><rect x="16.7057%" y="741" width="0.7806%" height="15" fill="rgb(235,97,3)" fg:x="214" fg:w="10"/><text x="16.9557%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="17.1741%" y="725" width="0.3123%" height="15" fill="rgb(215,155,33)" fg:x="220" fg:w="4"/><text x="17.4241%" y="735.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="17.1741%" y="709" width="0.3123%" height="15" fill="rgb(223,128,12)" fg:x="220" fg:w="4"/><text x="17.4241%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="17.1741%" y="693" width="0.3123%" height="15" fill="rgb(208,157,18)" fg:x="220" fg:w="4"/><text x="17.4241%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.4083%" y="677" width="0.0781%" height="15" fill="rgb(249,70,54)" fg:x="223" fg:w="1"/><text x="17.6583%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.4083%" y="661" width="0.0781%" height="15" fill="rgb(244,118,24)" fg:x="223" fg:w="1"/><text x="17.6583%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.4083%" y="645" width="0.0781%" height="15" fill="rgb(211,54,0)" fg:x="223" fg:w="1"/><text x="17.6583%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.4083%" y="629" width="0.0781%" height="15" fill="rgb(245,137,45)" fg:x="223" fg:w="1"/><text x="17.6583%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.4083%" y="613" width="0.0781%" height="15" fill="rgb(232,154,31)" fg:x="223" fg:w="1"/><text x="17.6583%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.4083%" y="597" width="0.0781%" height="15" fill="rgb(253,6,39)" fg:x="223" fg:w="1"/><text x="17.6583%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.4083%" y="581" width="0.0781%" height="15" fill="rgb(234,183,24)" fg:x="223" fg:w="1"/><text x="17.6583%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.4083%" y="565" width="0.0781%" height="15" fill="rgb(252,84,40)" fg:x="223" fg:w="1"/><text x="17.6583%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="17.4083%" y="549" width="0.0781%" height="15" fill="rgb(224,65,2)" fg:x="223" fg:w="1"/><text x="17.6583%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="17.4863%" y="757" width="0.0781%" height="15" fill="rgb(229,38,24)" fg:x="224" fg:w="1"/><text x="17.7363%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="17.4863%" y="741" width="0.0781%" height="15" fill="rgb(218,131,50)" fg:x="224" fg:w="1"/><text x="17.7363%" y="751.50"></text></g><g><title>plugins_core::build::Build::holding (37 samples, 2.89%)</title><rect x="14.8322%" y="805" width="2.8884%" height="15" fill="rgb(233,106,18)" fg:x="190" fg:w="37"/><text x="15.0822%" y="815.50">pl..</text></g><g><title>plugins_core::tools::set_container (21 samples, 1.64%)</title><rect x="16.0812%" y="789" width="1.6393%" height="15" fill="rgb(220,216,11)" fg:x="206" fg:w="21"/><text x="16.3312%" y="799.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.23%)</title><rect x="17.4863%" y="773" width="0.2342%" height="15" fill="rgb(251,100,45)" fg:x="224" fg:w="3"/><text x="17.7363%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.5644%" y="757" width="0.1561%" height="15" fill="rgb(235,143,32)" fg:x="225" fg:w="2"/><text x="17.8144%" y="767.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="17.5644%" y="741" width="0.1561%" height="15" fill="rgb(248,124,34)" fg:x="225" fg:w="2"/><text x="17.8144%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.5644%" y="725" width="0.1561%" height="15" fill="rgb(225,221,4)" fg:x="225" fg:w="2"/><text x="17.8144%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="17.5644%" y="709" width="0.1561%" height="15" fill="rgb(242,27,43)" fg:x="225" fg:w="2"/><text x="17.8144%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.5644%" y="693" width="0.1561%" height="15" fill="rgb(227,54,8)" fg:x="225" fg:w="2"/><text x="17.8144%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6425%" y="677" width="0.0781%" height="15" fill="rgb(253,139,49)" fg:x="226" fg:w="1"/><text x="17.8925%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="17.7986%" y="773" width="0.0781%" height="15" fill="rgb(231,26,43)" fg:x="228" fg:w="1"/><text x="18.0486%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="17.7986%" y="757" width="0.0781%" height="15" fill="rgb(207,121,39)" fg:x="228" fg:w="1"/><text x="18.0486%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="17.7986%" y="741" width="0.0781%" height="15" fill="rgb(223,101,35)" fg:x="228" fg:w="1"/><text x="18.0486%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.7986%" y="725" width="0.0781%" height="15" fill="rgb(232,87,23)" fg:x="228" fg:w="1"/><text x="18.0486%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.7986%" y="709" width="0.0781%" height="15" fill="rgb(225,180,29)" fg:x="228" fg:w="1"/><text x="18.0486%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.7986%" y="693" width="0.0781%" height="15" fill="rgb(225,25,17)" fg:x="228" fg:w="1"/><text x="18.0486%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.7986%" y="677" width="0.0781%" height="15" fill="rgb(223,8,52)" fg:x="228" fg:w="1"/><text x="18.0486%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.7986%" y="661" width="0.0781%" height="15" fill="rgb(246,42,21)" fg:x="228" fg:w="1"/><text x="18.0486%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.7986%" y="645" width="0.0781%" height="15" fill="rgb(205,64,43)" fg:x="228" fg:w="1"/><text x="18.0486%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.7986%" y="629" width="0.0781%" height="15" fill="rgb(221,160,13)" fg:x="228" fg:w="1"/><text x="18.0486%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.7986%" y="613" width="0.0781%" height="15" fill="rgb(239,58,35)" fg:x="228" fg:w="1"/><text x="18.0486%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.7986%" y="597" width="0.0781%" height="15" fill="rgb(251,26,40)" fg:x="228" fg:w="1"/><text x="18.0486%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.7986%" y="581" width="0.0781%" height="15" fill="rgb(247,0,4)" fg:x="228" fg:w="1"/><text x="18.0486%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.7986%" y="565" width="0.0781%" height="15" fill="rgb(218,130,10)" fg:x="228" fg:w="1"/><text x="18.0486%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="17.7986%" y="549" width="0.0781%" height="15" fill="rgb(239,32,7)" fg:x="228" fg:w="1"/><text x="18.0486%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.7986%" y="533" width="0.0781%" height="15" fill="rgb(210,192,24)" fg:x="228" fg:w="1"/><text x="18.0486%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.7986%" y="517" width="0.0781%" height="15" fill="rgb(226,212,17)" fg:x="228" fg:w="1"/><text x="18.0486%" y="527.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="17.7986%" y="501" width="0.0781%" height="15" fill="rgb(219,201,28)" fg:x="228" fg:w="1"/><text x="18.0486%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8767%" y="757" width="0.0781%" height="15" fill="rgb(235,207,41)" fg:x="229" fg:w="1"/><text x="18.1267%" y="767.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="17.9547%" y="757" width="0.0781%" height="15" fill="rgb(241,95,54)" fg:x="230" fg:w="1"/><text x="18.2047%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.0328%" y="725" width="0.1561%" height="15" fill="rgb(248,12,23)" fg:x="231" fg:w="2"/><text x="18.2828%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.0328%" y="709" width="0.1561%" height="15" fill="rgb(228,173,4)" fg:x="231" fg:w="2"/><text x="18.2828%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.0328%" y="693" width="0.1561%" height="15" fill="rgb(254,99,5)" fg:x="231" fg:w="2"/><text x="18.2828%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.0328%" y="677" width="0.1561%" height="15" fill="rgb(212,184,17)" fg:x="231" fg:w="2"/><text x="18.2828%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.0328%" y="661" width="0.1561%" height="15" fill="rgb(252,174,1)" fg:x="231" fg:w="2"/><text x="18.2828%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.0328%" y="645" width="0.1561%" height="15" fill="rgb(241,118,51)" fg:x="231" fg:w="2"/><text x="18.2828%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.39%)</title><rect x="17.8767%" y="773" width="0.3903%" height="15" fill="rgb(227,94,47)" fg:x="229" fg:w="5"/><text x="18.1267%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="18.0328%" y="757" width="0.2342%" height="15" fill="rgb(229,104,2)" fg:x="231" fg:w="3"/><text x="18.2828%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="18.0328%" y="741" width="0.2342%" height="15" fill="rgb(219,28,31)" fg:x="231" fg:w="3"/><text x="18.2828%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.1889%" y="725" width="0.0781%" height="15" fill="rgb(233,109,36)" fg:x="233" fg:w="1"/><text x="18.4389%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1889%" y="709" width="0.0781%" height="15" fill="rgb(246,88,11)" fg:x="233" fg:w="1"/><text x="18.4389%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.1889%" y="693" width="0.0781%" height="15" fill="rgb(209,212,17)" fg:x="233" fg:w="1"/><text x="18.4389%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1889%" y="677" width="0.0781%" height="15" fill="rgb(243,59,29)" fg:x="233" fg:w="1"/><text x="18.4389%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.1889%" y="661" width="0.0781%" height="15" fill="rgb(244,205,48)" fg:x="233" fg:w="1"/><text x="18.4389%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1889%" y="645" width="0.0781%" height="15" fill="rgb(227,30,6)" fg:x="233" fg:w="1"/><text x="18.4389%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.1889%" y="629" width="0.0781%" height="15" fill="rgb(220,205,48)" fg:x="233" fg:w="1"/><text x="18.4389%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1889%" y="613" width="0.0781%" height="15" fill="rgb(250,94,14)" fg:x="233" fg:w="1"/><text x="18.4389%" y="623.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.2670%" y="725" width="0.0781%" height="15" fill="rgb(216,119,42)" fg:x="234" fg:w="1"/><text x="18.5170%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2670%" y="709" width="0.0781%" height="15" fill="rgb(232,155,0)" fg:x="234" fg:w="1"/><text x="18.5170%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="18.2670%" y="773" width="0.1561%" height="15" fill="rgb(212,24,32)" fg:x="234" fg:w="2"/><text x="18.5170%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="18.2670%" y="757" width="0.1561%" height="15" fill="rgb(216,69,20)" fg:x="234" fg:w="2"/><text x="18.5170%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.2670%" y="741" width="0.1561%" height="15" fill="rgb(229,73,31)" fg:x="234" fg:w="2"/><text x="18.5170%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.3450%" y="725" width="0.0781%" height="15" fill="rgb(224,219,20)" fg:x="235" fg:w="1"/><text x="18.5950%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3450%" y="709" width="0.0781%" height="15" fill="rgb(215,146,41)" fg:x="235" fg:w="1"/><text x="18.5950%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.3450%" y="693" width="0.0781%" height="15" fill="rgb(244,71,31)" fg:x="235" fg:w="1"/><text x="18.5950%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3450%" y="677" width="0.0781%" height="15" fill="rgb(224,24,11)" fg:x="235" fg:w="1"/><text x="18.5950%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.3450%" y="661" width="0.0781%" height="15" fill="rgb(229,76,15)" fg:x="235" fg:w="1"/><text x="18.5950%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.4231%" y="757" width="0.0781%" height="15" fill="rgb(209,93,2)" fg:x="236" fg:w="1"/><text x="18.6731%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.5012%" y="693" width="0.0781%" height="15" fill="rgb(216,200,50)" fg:x="237" fg:w="1"/><text x="18.7512%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.5012%" y="677" width="0.0781%" height="15" fill="rgb(211,67,34)" fg:x="237" fg:w="1"/><text x="18.7512%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.5012%" y="661" width="0.0781%" height="15" fill="rgb(225,87,47)" fg:x="237" fg:w="1"/><text x="18.7512%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.5012%" y="645" width="0.0781%" height="15" fill="rgb(217,185,16)" fg:x="237" fg:w="1"/><text x="18.7512%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.5012%" y="629" width="0.0781%" height="15" fill="rgb(205,0,0)" fg:x="237" fg:w="1"/><text x="18.7512%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5012%" y="613" width="0.0781%" height="15" fill="rgb(207,116,45)" fg:x="237" fg:w="1"/><text x="18.7512%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5012%" y="597" width="0.0781%" height="15" fill="rgb(221,156,26)" fg:x="237" fg:w="1"/><text x="18.7512%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.5012%" y="581" width="0.0781%" height="15" fill="rgb(213,140,4)" fg:x="237" fg:w="1"/><text x="18.7512%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.5012%" y="565" width="0.0781%" height="15" fill="rgb(231,224,15)" fg:x="237" fg:w="1"/><text x="18.7512%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.5012%" y="549" width="0.0781%" height="15" fill="rgb(244,76,20)" fg:x="237" fg:w="1"/><text x="18.7512%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.5012%" y="533" width="0.0781%" height="15" fill="rgb(238,117,7)" fg:x="237" fg:w="1"/><text x="18.7512%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.5012%" y="517" width="0.0781%" height="15" fill="rgb(235,1,10)" fg:x="237" fg:w="1"/><text x="18.7512%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.5012%" y="501" width="0.0781%" height="15" fill="rgb(216,165,6)" fg:x="237" fg:w="1"/><text x="18.7512%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.5012%" y="485" width="0.0781%" height="15" fill="rgb(246,91,35)" fg:x="237" fg:w="1"/><text x="18.7512%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.5012%" y="469" width="0.0781%" height="15" fill="rgb(228,96,24)" fg:x="237" fg:w="1"/><text x="18.7512%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.5012%" y="453" width="0.0781%" height="15" fill="rgb(254,217,53)" fg:x="237" fg:w="1"/><text x="18.7512%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.5012%" y="437" width="0.0781%" height="15" fill="rgb(209,60,0)" fg:x="237" fg:w="1"/><text x="18.7512%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="18.5012%" y="725" width="0.1561%" height="15" fill="rgb(250,93,26)" fg:x="237" fg:w="2"/><text x="18.7512%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.5012%" y="709" width="0.1561%" height="15" fill="rgb(211,9,40)" fg:x="237" fg:w="2"/><text x="18.7512%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.5792%" y="693" width="0.0781%" height="15" fill="rgb(242,57,20)" fg:x="238" fg:w="1"/><text x="18.8292%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5792%" y="677" width="0.0781%" height="15" fill="rgb(248,85,48)" fg:x="238" fg:w="1"/><text x="18.8292%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.5792%" y="661" width="0.0781%" height="15" fill="rgb(212,117,2)" fg:x="238" fg:w="1"/><text x="18.8292%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5792%" y="645" width="0.0781%" height="15" fill="rgb(243,19,3)" fg:x="238" fg:w="1"/><text x="18.8292%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.5792%" y="629" width="0.0781%" height="15" fill="rgb(232,217,24)" fg:x="238" fg:w="1"/><text x="18.8292%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5792%" y="613" width="0.0781%" height="15" fill="rgb(224,175,40)" fg:x="238" fg:w="1"/><text x="18.8292%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.5792%" y="597" width="0.0781%" height="15" fill="rgb(212,162,32)" fg:x="238" fg:w="1"/><text x="18.8292%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5792%" y="581" width="0.0781%" height="15" fill="rgb(215,9,4)" fg:x="238" fg:w="1"/><text x="18.8292%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.5792%" y="565" width="0.0781%" height="15" fill="rgb(242,42,7)" fg:x="238" fg:w="1"/><text x="18.8292%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5792%" y="549" width="0.0781%" height="15" fill="rgb(242,184,45)" fg:x="238" fg:w="1"/><text x="18.8292%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.5792%" y="533" width="0.0781%" height="15" fill="rgb(228,111,51)" fg:x="238" fg:w="1"/><text x="18.8292%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (13 samples, 1.01%)</title><rect x="17.7205%" y="805" width="1.0148%" height="15" fill="rgb(236,147,17)" fg:x="227" fg:w="13"/><text x="17.9705%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.01%)</title><rect x="17.7205%" y="789" width="1.0148%" height="15" fill="rgb(210,75,22)" fg:x="227" fg:w="13"/><text x="17.9705%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="18.4231%" y="773" width="0.3123%" height="15" fill="rgb(217,159,45)" fg:x="236" fg:w="4"/><text x="18.6731%" y="783.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.23%)</title><rect x="18.5012%" y="757" width="0.2342%" height="15" fill="rgb(245,165,53)" fg:x="237" fg:w="3"/><text x="18.7512%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.23%)</title><rect x="18.5012%" y="741" width="0.2342%" height="15" fill="rgb(251,190,50)" fg:x="237" fg:w="3"/><text x="18.7512%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="18.6573%" y="725" width="0.0781%" height="15" fill="rgb(208,203,29)" fg:x="239" fg:w="1"/><text x="18.9073%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.6573%" y="709" width="0.0781%" height="15" fill="rgb(207,209,35)" fg:x="239" fg:w="1"/><text x="18.9073%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="18.6573%" y="693" width="0.0781%" height="15" fill="rgb(230,144,49)" fg:x="239" fg:w="1"/><text x="18.9073%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.6573%" y="677" width="0.0781%" height="15" fill="rgb(229,31,6)" fg:x="239" fg:w="1"/><text x="18.9073%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="18.6573%" y="661" width="0.0781%" height="15" fill="rgb(251,129,24)" fg:x="239" fg:w="1"/><text x="18.9073%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.6573%" y="645" width="0.0781%" height="15" fill="rgb(235,105,15)" fg:x="239" fg:w="1"/><text x="18.9073%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="18.6573%" y="629" width="0.0781%" height="15" fill="rgb(216,52,43)" fg:x="239" fg:w="1"/><text x="18.9073%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="18.7354%" y="805" width="0.0781%" height="15" fill="rgb(238,144,41)" fg:x="240" fg:w="1"/><text x="18.9854%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="18.7354%" y="789" width="0.0781%" height="15" fill="rgb(243,63,9)" fg:x="240" fg:w="1"/><text x="18.9854%" y="799.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="18.7354%" y="773" width="0.0781%" height="15" fill="rgb(246,208,1)" fg:x="240" fg:w="1"/><text x="18.9854%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.7354%" y="757" width="0.0781%" height="15" fill="rgb(233,182,18)" fg:x="240" fg:w="1"/><text x="18.9854%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="18.7354%" y="741" width="0.0781%" height="15" fill="rgb(242,224,8)" fg:x="240" fg:w="1"/><text x="18.9854%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.7354%" y="725" width="0.0781%" height="15" fill="rgb(243,54,37)" fg:x="240" fg:w="1"/><text x="18.9854%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="18.7354%" y="709" width="0.0781%" height="15" fill="rgb(233,192,12)" fg:x="240" fg:w="1"/><text x="18.9854%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.7354%" y="693" width="0.0781%" height="15" fill="rgb(251,192,53)" fg:x="240" fg:w="1"/><text x="18.9854%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="18.7354%" y="677" width="0.0781%" height="15" fill="rgb(246,141,26)" fg:x="240" fg:w="1"/><text x="18.9854%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="18.7354%" y="661" width="0.0781%" height="15" fill="rgb(239,195,19)" fg:x="240" fg:w="1"/><text x="18.9854%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7354%" y="645" width="0.0781%" height="15" fill="rgb(241,16,39)" fg:x="240" fg:w="1"/><text x="18.9854%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="18.8134%" y="773" width="0.0781%" height="15" fill="rgb(223,13,53)" fg:x="241" fg:w="1"/><text x="19.0634%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="18.8134%" y="757" width="0.0781%" height="15" fill="rgb(214,227,0)" fg:x="241" fg:w="1"/><text x="19.0634%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.8134%" y="741" width="0.0781%" height="15" fill="rgb(228,103,26)" fg:x="241" fg:w="1"/><text x="19.0634%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.8134%" y="725" width="0.0781%" height="15" fill="rgb(254,177,53)" fg:x="241" fg:w="1"/><text x="19.0634%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.8134%" y="709" width="0.0781%" height="15" fill="rgb(208,201,34)" fg:x="241" fg:w="1"/><text x="19.0634%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.8134%" y="693" width="0.0781%" height="15" fill="rgb(212,39,5)" fg:x="241" fg:w="1"/><text x="19.0634%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.8134%" y="677" width="0.0781%" height="15" fill="rgb(246,117,3)" fg:x="241" fg:w="1"/><text x="19.0634%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.8134%" y="661" width="0.0781%" height="15" fill="rgb(244,118,39)" fg:x="241" fg:w="1"/><text x="19.0634%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.8134%" y="645" width="0.0781%" height="15" fill="rgb(241,64,10)" fg:x="241" fg:w="1"/><text x="19.0634%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.8134%" y="629" width="0.0781%" height="15" fill="rgb(229,39,44)" fg:x="241" fg:w="1"/><text x="19.0634%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.8134%" y="613" width="0.0781%" height="15" fill="rgb(230,226,3)" fg:x="241" fg:w="1"/><text x="19.0634%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.8134%" y="597" width="0.0781%" height="15" fill="rgb(222,13,42)" fg:x="241" fg:w="1"/><text x="19.0634%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.8134%" y="581" width="0.0781%" height="15" fill="rgb(247,180,54)" fg:x="241" fg:w="1"/><text x="19.0634%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.8134%" y="565" width="0.0781%" height="15" fill="rgb(205,96,16)" fg:x="241" fg:w="1"/><text x="19.0634%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.8134%" y="549" width="0.0781%" height="15" fill="rgb(205,100,21)" fg:x="241" fg:w="1"/><text x="19.0634%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="18.8134%" y="533" width="0.0781%" height="15" fill="rgb(248,51,4)" fg:x="241" fg:w="1"/><text x="19.0634%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="18.8134%" y="517" width="0.0781%" height="15" fill="rgb(217,197,30)" fg:x="241" fg:w="1"/><text x="19.0634%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="18.8134%" y="501" width="0.0781%" height="15" fill="rgb(240,179,40)" fg:x="241" fg:w="1"/><text x="19.0634%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="18.8134%" y="485" width="0.0781%" height="15" fill="rgb(212,185,35)" fg:x="241" fg:w="1"/><text x="19.0634%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.8134%" y="469" width="0.0781%" height="15" fill="rgb(251,222,31)" fg:x="241" fg:w="1"/><text x="19.0634%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.8134%" y="453" width="0.0781%" height="15" fill="rgb(208,140,36)" fg:x="241" fg:w="1"/><text x="19.0634%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.8134%" y="437" width="0.0781%" height="15" fill="rgb(220,148,1)" fg:x="241" fg:w="1"/><text x="19.0634%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="18.8134%" y="421" width="0.0781%" height="15" fill="rgb(254,4,28)" fg:x="241" fg:w="1"/><text x="19.0634%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.8134%" y="405" width="0.0781%" height="15" fill="rgb(222,185,44)" fg:x="241" fg:w="1"/><text x="19.0634%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8134%" y="389" width="0.0781%" height="15" fill="rgb(215,74,39)" fg:x="241" fg:w="1"/><text x="19.0634%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="18.8134%" y="789" width="0.1561%" height="15" fill="rgb(247,86,4)" fg:x="241" fg:w="2"/><text x="19.0634%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.8915%" y="773" width="0.0781%" height="15" fill="rgb(231,105,32)" fg:x="242" fg:w="1"/><text x="19.1415%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="18.8915%" y="757" width="0.0781%" height="15" fill="rgb(222,65,35)" fg:x="242" fg:w="1"/><text x="19.1415%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.8915%" y="741" width="0.0781%" height="15" fill="rgb(218,145,35)" fg:x="242" fg:w="1"/><text x="19.1415%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.8915%" y="725" width="0.0781%" height="15" fill="rgb(208,7,15)" fg:x="242" fg:w="1"/><text x="19.1415%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.8915%" y="709" width="0.0781%" height="15" fill="rgb(209,83,13)" fg:x="242" fg:w="1"/><text x="19.1415%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.8915%" y="693" width="0.0781%" height="15" fill="rgb(218,3,10)" fg:x="242" fg:w="1"/><text x="19.1415%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8915%" y="677" width="0.0781%" height="15" fill="rgb(211,219,4)" fg:x="242" fg:w="1"/><text x="19.1415%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.9696%" y="709" width="0.0781%" height="15" fill="rgb(228,194,12)" fg:x="243" fg:w="1"/><text x="19.2196%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="18.9696%" y="693" width="0.0781%" height="15" fill="rgb(210,175,7)" fg:x="243" fg:w="1"/><text x="19.2196%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.9696%" y="677" width="0.0781%" height="15" fill="rgb(243,132,6)" fg:x="243" fg:w="1"/><text x="19.2196%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.9696%" y="661" width="0.0781%" height="15" fill="rgb(207,72,18)" fg:x="243" fg:w="1"/><text x="19.2196%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9696%" y="645" width="0.0781%" height="15" fill="rgb(236,1,18)" fg:x="243" fg:w="1"/><text x="19.2196%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.9696%" y="629" width="0.0781%" height="15" fill="rgb(227,0,18)" fg:x="243" fg:w="1"/><text x="19.2196%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="18.9696%" y="741" width="0.1561%" height="15" fill="rgb(247,37,5)" fg:x="243" fg:w="2"/><text x="19.2196%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="18.9696%" y="725" width="0.1561%" height="15" fill="rgb(237,179,24)" fg:x="243" fg:w="2"/><text x="19.2196%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="19.0476%" y="709" width="0.0781%" height="15" fill="rgb(226,53,20)" fg:x="244" fg:w="1"/><text x="19.2976%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="19.0476%" y="693" width="0.0781%" height="15" fill="rgb(247,75,7)" fg:x="244" fg:w="1"/><text x="19.2976%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.0476%" y="677" width="0.0781%" height="15" fill="rgb(233,96,12)" fg:x="244" fg:w="1"/><text x="19.2976%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.0476%" y="661" width="0.0781%" height="15" fill="rgb(224,125,0)" fg:x="244" fg:w="1"/><text x="19.2976%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="19.1257%" y="709" width="0.0781%" height="15" fill="rgb(224,92,25)" fg:x="245" fg:w="1"/><text x="19.3757%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="19.1257%" y="693" width="0.0781%" height="15" fill="rgb(224,42,24)" fg:x="245" fg:w="1"/><text x="19.3757%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.2037%" y="661" width="0.1561%" height="15" fill="rgb(234,132,49)" fg:x="246" fg:w="2"/><text x="19.4537%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.2037%" y="645" width="0.1561%" height="15" fill="rgb(248,100,35)" fg:x="246" fg:w="2"/><text x="19.4537%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.2818%" y="629" width="0.0781%" height="15" fill="rgb(239,94,40)" fg:x="247" fg:w="1"/><text x="19.5318%" y="639.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.31%)</title><rect x="19.1257%" y="741" width="0.3123%" height="15" fill="rgb(235,139,28)" fg:x="245" fg:w="4"/><text x="19.3757%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.31%)</title><rect x="19.1257%" y="725" width="0.3123%" height="15" fill="rgb(217,144,7)" fg:x="245" fg:w="4"/><text x="19.3757%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="19.2037%" y="709" width="0.2342%" height="15" fill="rgb(227,55,4)" fg:x="246" fg:w="3"/><text x="19.4537%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="19.2037%" y="693" width="0.2342%" height="15" fill="rgb(252,82,54)" fg:x="246" fg:w="3"/><text x="19.4537%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="19.2037%" y="677" width="0.2342%" height="15" fill="rgb(245,172,4)" fg:x="246" fg:w="3"/><text x="19.4537%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.3599%" y="661" width="0.0781%" height="15" fill="rgb(207,26,27)" fg:x="248" fg:w="1"/><text x="19.6099%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.3599%" y="645" width="0.0781%" height="15" fill="rgb(252,98,18)" fg:x="248" fg:w="1"/><text x="19.6099%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.3599%" y="629" width="0.0781%" height="15" fill="rgb(244,8,26)" fg:x="248" fg:w="1"/><text x="19.6099%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.3599%" y="613" width="0.0781%" height="15" fill="rgb(237,173,45)" fg:x="248" fg:w="1"/><text x="19.6099%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.3599%" y="597" width="0.0781%" height="15" fill="rgb(208,213,49)" fg:x="248" fg:w="1"/><text x="19.6099%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.3599%" y="581" width="0.0781%" height="15" fill="rgb(212,122,37)" fg:x="248" fg:w="1"/><text x="19.6099%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.3599%" y="565" width="0.0781%" height="15" fill="rgb(213,80,17)" fg:x="248" fg:w="1"/><text x="19.6099%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.3599%" y="549" width="0.0781%" height="15" fill="rgb(206,210,43)" fg:x="248" fg:w="1"/><text x="19.6099%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5160%" y="661" width="0.0781%" height="15" fill="rgb(229,214,3)" fg:x="250" fg:w="1"/><text x="19.7660%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5160%" y="645" width="0.0781%" height="15" fill="rgb(235,213,29)" fg:x="250" fg:w="1"/><text x="19.7660%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5160%" y="629" width="0.0781%" height="15" fill="rgb(248,135,26)" fg:x="250" fg:w="1"/><text x="19.7660%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5160%" y="613" width="0.0781%" height="15" fill="rgb(242,188,12)" fg:x="250" fg:w="1"/><text x="19.7660%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5160%" y="597" width="0.0781%" height="15" fill="rgb(245,38,12)" fg:x="250" fg:w="1"/><text x="19.7660%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.5941%" y="629" width="0.0781%" height="15" fill="rgb(218,42,13)" fg:x="251" fg:w="1"/><text x="19.8441%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="19.5160%" y="709" width="0.2342%" height="15" fill="rgb(238,132,49)" fg:x="250" fg:w="3"/><text x="19.7660%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="19.5160%" y="693" width="0.2342%" height="15" fill="rgb(209,196,19)" fg:x="250" fg:w="3"/><text x="19.7660%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="19.5160%" y="677" width="0.2342%" height="15" fill="rgb(244,131,22)" fg:x="250" fg:w="3"/><text x="19.7660%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.5941%" y="661" width="0.1561%" height="15" fill="rgb(223,18,34)" fg:x="251" fg:w="2"/><text x="19.8441%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.5941%" y="645" width="0.1561%" height="15" fill="rgb(252,124,54)" fg:x="251" fg:w="2"/><text x="19.8441%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.6721%" y="629" width="0.0781%" height="15" fill="rgb(229,106,42)" fg:x="252" fg:w="1"/><text x="19.9221%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6721%" y="613" width="0.0781%" height="15" fill="rgb(221,129,1)" fg:x="252" fg:w="1"/><text x="19.9221%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.6721%" y="597" width="0.0781%" height="15" fill="rgb(229,74,15)" fg:x="252" fg:w="1"/><text x="19.9221%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6721%" y="581" width="0.0781%" height="15" fill="rgb(210,206,50)" fg:x="252" fg:w="1"/><text x="19.9221%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6721%" y="565" width="0.0781%" height="15" fill="rgb(251,114,31)" fg:x="252" fg:w="1"/><text x="19.9221%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6721%" y="549" width="0.0781%" height="15" fill="rgb(215,225,28)" fg:x="252" fg:w="1"/><text x="19.9221%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="19.7502%" y="693" width="0.0781%" height="15" fill="rgb(237,109,14)" fg:x="253" fg:w="1"/><text x="20.0002%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="19.7502%" y="677" width="0.0781%" height="15" fill="rgb(230,13,37)" fg:x="253" fg:w="1"/><text x="20.0002%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.7502%" y="661" width="0.0781%" height="15" fill="rgb(231,40,28)" fg:x="253" fg:w="1"/><text x="20.0002%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.8283%" y="661" width="0.0781%" height="15" fill="rgb(231,202,18)" fg:x="254" fg:w="1"/><text x="20.0783%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8283%" y="645" width="0.0781%" height="15" fill="rgb(225,33,18)" fg:x="254" fg:w="1"/><text x="20.0783%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="19.8283%" y="693" width="0.1561%" height="15" fill="rgb(223,64,47)" fg:x="254" fg:w="2"/><text x="20.0783%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.8283%" y="677" width="0.1561%" height="15" fill="rgb(234,114,13)" fg:x="254" fg:w="2"/><text x="20.0783%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="19.9063%" y="661" width="0.0781%" height="15" fill="rgb(248,56,40)" fg:x="255" fg:w="1"/><text x="20.1563%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.9063%" y="645" width="0.0781%" height="15" fill="rgb(221,194,21)" fg:x="255" fg:w="1"/><text x="20.1563%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9063%" y="629" width="0.0781%" height="15" fill="rgb(242,108,46)" fg:x="255" fg:w="1"/><text x="20.1563%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.31%)</title><rect x="19.7502%" y="709" width="0.3123%" height="15" fill="rgb(220,106,10)" fg:x="253" fg:w="4"/><text x="20.0002%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.9844%" y="693" width="0.0781%" height="15" fill="rgb(211,88,4)" fg:x="256" fg:w="1"/><text x="20.2344%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="19.9844%" y="677" width="0.0781%" height="15" fill="rgb(214,95,34)" fg:x="256" fg:w="1"/><text x="20.2344%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.9844%" y="661" width="0.0781%" height="15" fill="rgb(250,160,33)" fg:x="256" fg:w="1"/><text x="20.2344%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9844%" y="645" width="0.0781%" height="15" fill="rgb(225,29,10)" fg:x="256" fg:w="1"/><text x="20.2344%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="20.0625%" y="661" width="0.0781%" height="15" fill="rgb(224,28,30)" fg:x="257" fg:w="1"/><text x="20.3125%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.0625%" y="645" width="0.0781%" height="15" fill="rgb(231,77,4)" fg:x="257" fg:w="1"/><text x="20.3125%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.0625%" y="629" width="0.0781%" height="15" fill="rgb(209,63,21)" fg:x="257" fg:w="1"/><text x="20.3125%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.0625%" y="613" width="0.0781%" height="15" fill="rgb(226,22,11)" fg:x="257" fg:w="1"/><text x="20.3125%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.0625%" y="597" width="0.0781%" height="15" fill="rgb(216,82,30)" fg:x="257" fg:w="1"/><text x="20.3125%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.0625%" y="581" width="0.0781%" height="15" fill="rgb(246,227,38)" fg:x="257" fg:w="1"/><text x="20.3125%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.0625%" y="565" width="0.0781%" height="15" fill="rgb(251,203,53)" fg:x="257" fg:w="1"/><text x="20.3125%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.0625%" y="549" width="0.0781%" height="15" fill="rgb(254,101,1)" fg:x="257" fg:w="1"/><text x="20.3125%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.0625%" y="533" width="0.0781%" height="15" fill="rgb(241,180,5)" fg:x="257" fg:w="1"/><text x="20.3125%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.0625%" y="517" width="0.0781%" height="15" fill="rgb(218,168,4)" fg:x="257" fg:w="1"/><text x="20.3125%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.78%)</title><rect x="19.5160%" y="725" width="0.7806%" height="15" fill="rgb(224,223,32)" fg:x="250" fg:w="10"/><text x="19.7660%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.23%)</title><rect x="20.0625%" y="709" width="0.2342%" height="15" fill="rgb(236,106,22)" fg:x="257" fg:w="3"/><text x="20.3125%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.23%)</title><rect x="20.0625%" y="693" width="0.2342%" height="15" fill="rgb(206,121,5)" fg:x="257" fg:w="3"/><text x="20.3125%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.23%)</title><rect x="20.0625%" y="677" width="0.2342%" height="15" fill="rgb(233,87,28)" fg:x="257" fg:w="3"/><text x="20.3125%" y="687.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="20.1405%" y="661" width="0.1561%" height="15" fill="rgb(236,137,17)" fg:x="258" fg:w="2"/><text x="20.3905%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="20.1405%" y="645" width="0.1561%" height="15" fill="rgb(209,183,38)" fg:x="258" fg:w="2"/><text x="20.3905%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="20.2186%" y="629" width="0.0781%" height="15" fill="rgb(206,162,44)" fg:x="259" fg:w="1"/><text x="20.4686%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.2186%" y="613" width="0.0781%" height="15" fill="rgb(237,70,39)" fg:x="259" fg:w="1"/><text x="20.4686%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="20.2186%" y="597" width="0.0781%" height="15" fill="rgb(212,176,5)" fg:x="259" fg:w="1"/><text x="20.4686%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.2186%" y="581" width="0.0781%" height="15" fill="rgb(232,95,16)" fg:x="259" fg:w="1"/><text x="20.4686%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.2186%" y="565" width="0.0781%" height="15" fill="rgb(219,115,35)" fg:x="259" fg:w="1"/><text x="20.4686%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="20.2186%" y="549" width="0.0781%" height="15" fill="rgb(251,67,27)" fg:x="259" fg:w="1"/><text x="20.4686%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.2186%" y="533" width="0.0781%" height="15" fill="rgb(222,95,40)" fg:x="259" fg:w="1"/><text x="20.4686%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.2186%" y="517" width="0.0781%" height="15" fill="rgb(250,35,16)" fg:x="259" fg:w="1"/><text x="20.4686%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3747%" y="629" width="0.0781%" height="15" fill="rgb(224,86,44)" fg:x="261" fg:w="1"/><text x="20.6247%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3747%" y="613" width="0.0781%" height="15" fill="rgb(237,53,53)" fg:x="261" fg:w="1"/><text x="20.6247%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3747%" y="597" width="0.0781%" height="15" fill="rgb(208,171,33)" fg:x="261" fg:w="1"/><text x="20.6247%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3747%" y="581" width="0.0781%" height="15" fill="rgb(222,64,27)" fg:x="261" fg:w="1"/><text x="20.6247%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3747%" y="565" width="0.0781%" height="15" fill="rgb(221,121,35)" fg:x="261" fg:w="1"/><text x="20.6247%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.3747%" y="549" width="0.0781%" height="15" fill="rgb(228,137,42)" fg:x="261" fg:w="1"/><text x="20.6247%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.3747%" y="533" width="0.0781%" height="15" fill="rgb(227,54,21)" fg:x="261" fg:w="1"/><text x="20.6247%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.3747%" y="517" width="0.0781%" height="15" fill="rgb(240,168,33)" fg:x="261" fg:w="1"/><text x="20.6247%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.3747%" y="501" width="0.0781%" height="15" fill="rgb(243,159,6)" fg:x="261" fg:w="1"/><text x="20.6247%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.3747%" y="485" width="0.0781%" height="15" fill="rgb(205,211,41)" fg:x="261" fg:w="1"/><text x="20.6247%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="20.3747%" y="469" width="0.0781%" height="15" fill="rgb(253,30,1)" fg:x="261" fg:w="1"/><text x="20.6247%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="20.3747%" y="453" width="0.0781%" height="15" fill="rgb(226,80,18)" fg:x="261" fg:w="1"/><text x="20.6247%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="20.3747%" y="677" width="0.2342%" height="15" fill="rgb(253,156,46)" fg:x="261" fg:w="3"/><text x="20.6247%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="20.3747%" y="661" width="0.2342%" height="15" fill="rgb(248,87,27)" fg:x="261" fg:w="3"/><text x="20.6247%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="20.3747%" y="645" width="0.2342%" height="15" fill="rgb(227,122,2)" fg:x="261" fg:w="3"/><text x="20.6247%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.4528%" y="629" width="0.1561%" height="15" fill="rgb(229,94,39)" fg:x="262" fg:w="2"/><text x="20.7028%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.5308%" y="613" width="0.0781%" height="15" fill="rgb(225,173,31)" fg:x="263" fg:w="1"/><text x="20.7808%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6089%" y="629" width="0.0781%" height="15" fill="rgb(239,176,30)" fg:x="264" fg:w="1"/><text x="20.8589%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6089%" y="613" width="0.0781%" height="15" fill="rgb(212,104,21)" fg:x="264" fg:w="1"/><text x="20.8589%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6089%" y="597" width="0.0781%" height="15" fill="rgb(240,209,40)" fg:x="264" fg:w="1"/><text x="20.8589%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6089%" y="581" width="0.0781%" height="15" fill="rgb(234,195,5)" fg:x="264" fg:w="1"/><text x="20.8589%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6089%" y="565" width="0.0781%" height="15" fill="rgb(238,213,1)" fg:x="264" fg:w="1"/><text x="20.8589%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.39%)</title><rect x="20.3747%" y="709" width="0.3903%" height="15" fill="rgb(235,182,54)" fg:x="261" fg:w="5"/><text x="20.6247%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.39%)</title><rect x="20.3747%" y="693" width="0.3903%" height="15" fill="rgb(229,50,46)" fg:x="261" fg:w="5"/><text x="20.6247%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="20.6089%" y="677" width="0.1561%" height="15" fill="rgb(219,145,13)" fg:x="264" fg:w="2"/><text x="20.8589%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="20.6089%" y="661" width="0.1561%" height="15" fill="rgb(220,226,10)" fg:x="264" fg:w="2"/><text x="20.8589%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.6089%" y="645" width="0.1561%" height="15" fill="rgb(248,47,30)" fg:x="264" fg:w="2"/><text x="20.8589%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.6870%" y="629" width="0.0781%" height="15" fill="rgb(231,209,44)" fg:x="265" fg:w="1"/><text x="20.9370%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.6870%" y="613" width="0.0781%" height="15" fill="rgb(209,80,30)" fg:x="265" fg:w="1"/><text x="20.9370%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.6870%" y="597" width="0.0781%" height="15" fill="rgb(232,9,14)" fg:x="265" fg:w="1"/><text x="20.9370%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.6870%" y="581" width="0.0781%" height="15" fill="rgb(243,91,43)" fg:x="265" fg:w="1"/><text x="20.9370%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.6870%" y="565" width="0.0781%" height="15" fill="rgb(231,90,52)" fg:x="265" fg:w="1"/><text x="20.9370%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="20.7650%" y="709" width="0.1561%" height="15" fill="rgb(253,192,44)" fg:x="266" fg:w="2"/><text x="21.0150%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.8431%" y="693" width="0.0781%" height="15" fill="rgb(241,66,31)" fg:x="267" fg:w="1"/><text x="21.0931%" y="703.50"></text></g><g><title>plugins_core::build::Build::leads_to (21 samples, 1.64%)</title><rect x="19.4379%" y="741" width="1.6393%" height="15" fill="rgb(235,81,37)" fg:x="249" fg:w="21"/><text x="19.6879%" y="751.50"></text></g><g><title>plugins_core::tools::leads_to (10 samples, 0.78%)</title><rect x="20.2966%" y="725" width="0.7806%" height="15" fill="rgb(223,221,9)" fg:x="260" fg:w="10"/><text x="20.5466%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="20.9212%" y="709" width="0.1561%" height="15" fill="rgb(242,180,7)" fg:x="268" fg:w="2"/><text x="21.1712%" y="719.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.16%)</title><rect x="20.9212%" y="693" width="0.1561%" height="15" fill="rgb(243,78,19)" fg:x="268" fg:w="2"/><text x="21.1712%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.9212%" y="677" width="0.1561%" height="15" fill="rgb(233,23,17)" fg:x="268" fg:w="2"/><text x="21.1712%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="20.9992%" y="661" width="0.0781%" height="15" fill="rgb(252,122,45)" fg:x="269" fg:w="1"/><text x="21.2492%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.9992%" y="645" width="0.0781%" height="15" fill="rgb(247,108,20)" fg:x="269" fg:w="1"/><text x="21.2492%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.9992%" y="629" width="0.0781%" height="15" fill="rgb(235,84,21)" fg:x="269" fg:w="1"/><text x="21.2492%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.1553%" y="677" width="0.0781%" height="15" fill="rgb(247,129,10)" fg:x="271" fg:w="1"/><text x="21.4053%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.1553%" y="661" width="0.0781%" height="15" fill="rgb(208,173,14)" fg:x="271" fg:w="1"/><text x="21.4053%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.1553%" y="645" width="0.0781%" height="15" fill="rgb(236,31,38)" fg:x="271" fg:w="1"/><text x="21.4053%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.1553%" y="629" width="0.0781%" height="15" fill="rgb(232,65,17)" fg:x="271" fg:w="1"/><text x="21.4053%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.31%)</title><rect x="21.0773%" y="741" width="0.3123%" height="15" fill="rgb(224,45,49)" fg:x="270" fg:w="4"/><text x="21.3273%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.31%)</title><rect x="21.0773%" y="725" width="0.3123%" height="15" fill="rgb(225,2,53)" fg:x="270" fg:w="4"/><text x="21.3273%" y="735.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.31%)</title><rect x="21.0773%" y="709" width="0.3123%" height="15" fill="rgb(248,210,53)" fg:x="270" fg:w="4"/><text x="21.3273%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.31%)</title><rect x="21.0773%" y="693" width="0.3123%" height="15" fill="rgb(211,1,30)" fg:x="270" fg:w="4"/><text x="21.3273%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="21.2334%" y="677" width="0.1561%" height="15" fill="rgb(224,96,15)" fg:x="272" fg:w="2"/><text x="21.4834%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.2334%" y="661" width="0.1561%" height="15" fill="rgb(252,45,11)" fg:x="272" fg:w="2"/><text x="21.4834%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="21.2334%" y="645" width="0.1561%" height="15" fill="rgb(220,125,38)" fg:x="272" fg:w="2"/><text x="21.4834%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.2334%" y="629" width="0.1561%" height="15" fill="rgb(243,161,33)" fg:x="272" fg:w="2"/><text x="21.4834%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="21.2334%" y="613" width="0.1561%" height="15" fill="rgb(248,197,34)" fg:x="272" fg:w="2"/><text x="21.4834%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="21.2334%" y="597" width="0.1561%" height="15" fill="rgb(228,165,23)" fg:x="272" fg:w="2"/><text x="21.4834%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.2334%" y="581" width="0.1561%" height="15" fill="rgb(236,94,38)" fg:x="272" fg:w="2"/><text x="21.4834%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="21.3115%" y="565" width="0.0781%" height="15" fill="rgb(220,13,23)" fg:x="273" fg:w="1"/><text x="21.5615%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.3115%" y="549" width="0.0781%" height="15" fill="rgb(234,26,39)" fg:x="273" fg:w="1"/><text x="21.5615%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.3115%" y="533" width="0.0781%" height="15" fill="rgb(205,117,44)" fg:x="273" fg:w="1"/><text x="21.5615%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="21.3115%" y="517" width="0.0781%" height="15" fill="rgb(250,42,2)" fg:x="273" fg:w="1"/><text x="21.5615%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (32 samples, 2.50%)</title><rect x="18.9696%" y="789" width="2.4980%" height="15" fill="rgb(223,83,14)" fg:x="243" fg:w="32"/><text x="19.2196%" y="799.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 2.50%)</title><rect x="18.9696%" y="773" width="2.4980%" height="15" fill="rgb(241,147,50)" fg:x="243" fg:w="32"/><text x="19.2196%" y="783.50">&lt;a..</text></g><g><title>plugins_core::build::QuickThing::make (32 samples, 2.50%)</title><rect x="18.9696%" y="757" width="2.4980%" height="15" fill="rgb(218,90,6)" fg:x="243" fg:w="32"/><text x="19.2196%" y="767.50">pl..</text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="21.3895%" y="741" width="0.0781%" height="15" fill="rgb(210,191,5)" fg:x="274" fg:w="1"/><text x="21.6395%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.3895%" y="725" width="0.0781%" height="15" fill="rgb(225,139,19)" fg:x="274" fg:w="1"/><text x="21.6395%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="21.4676%" y="789" width="0.0781%" height="15" fill="rgb(210,1,33)" fg:x="275" fg:w="1"/><text x="21.7176%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.4676%" y="773" width="0.0781%" height="15" fill="rgb(213,50,3)" fg:x="275" fg:w="1"/><text x="21.7176%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.6237%" y="757" width="0.0781%" height="15" fill="rgb(234,227,4)" fg:x="277" fg:w="1"/><text x="21.8737%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.23%)</title><rect x="21.5457%" y="773" width="0.2342%" height="15" fill="rgb(246,63,5)" fg:x="276" fg:w="3"/><text x="21.7957%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.7018%" y="757" width="0.0781%" height="15" fill="rgb(245,136,27)" fg:x="278" fg:w="1"/><text x="21.9518%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.7018%" y="741" width="0.0781%" height="15" fill="rgb(247,199,27)" fg:x="278" fg:w="1"/><text x="21.9518%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="21.7018%" y="725" width="0.0781%" height="15" fill="rgb(252,158,49)" fg:x="278" fg:w="1"/><text x="21.9518%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7018%" y="709" width="0.0781%" height="15" fill="rgb(254,73,1)" fg:x="278" fg:w="1"/><text x="21.9518%" y="719.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="21.7799%" y="757" width="0.0781%" height="15" fill="rgb(248,93,19)" fg:x="279" fg:w="1"/><text x="22.0299%" y="767.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="21.7799%" y="741" width="0.0781%" height="15" fill="rgb(206,67,5)" fg:x="279" fg:w="1"/><text x="22.0299%" y="751.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="21.7799%" y="725" width="0.0781%" height="15" fill="rgb(209,210,4)" fg:x="279" fg:w="1"/><text x="22.0299%" y="735.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="21.7799%" y="709" width="0.0781%" height="15" fill="rgb(214,185,36)" fg:x="279" fg:w="1"/><text x="22.0299%" y="719.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="21.7799%" y="693" width="0.0781%" height="15" fill="rgb(233,191,26)" fg:x="279" fg:w="1"/><text x="22.0299%" y="703.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="21.7799%" y="677" width="0.0781%" height="15" fill="rgb(248,94,17)" fg:x="279" fg:w="1"/><text x="22.0299%" y="687.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="21.7799%" y="661" width="0.0781%" height="15" fill="rgb(250,64,4)" fg:x="279" fg:w="1"/><text x="22.0299%" y="671.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="21.7799%" y="645" width="0.0781%" height="15" fill="rgb(218,41,53)" fg:x="279" fg:w="1"/><text x="22.0299%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="21.8579%" y="725" width="0.0781%" height="15" fill="rgb(251,176,28)" fg:x="280" fg:w="1"/><text x="22.1079%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (4 samples, 0.31%)</title><rect x="21.9360%" y="693" width="0.3123%" height="15" fill="rgb(247,22,9)" fg:x="281" fg:w="4"/><text x="22.1860%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.0921%" y="677" width="0.1561%" height="15" fill="rgb(218,201,14)" fg:x="283" fg:w="2"/><text x="22.3421%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.0921%" y="661" width="0.1561%" height="15" fill="rgb(218,94,10)" fg:x="283" fg:w="2"/><text x="22.3421%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="22.0921%" y="645" width="0.1561%" height="15" fill="rgb(222,183,52)" fg:x="283" fg:w="2"/><text x="22.3421%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="22.0921%" y="629" width="0.1561%" height="15" fill="rgb(242,140,25)" fg:x="283" fg:w="2"/><text x="22.3421%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="22.0921%" y="613" width="0.1561%" height="15" fill="rgb(235,197,38)" fg:x="283" fg:w="2"/><text x="22.3421%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="22.0921%" y="597" width="0.1561%" height="15" fill="rgb(237,136,15)" fg:x="283" fg:w="2"/><text x="22.3421%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="22.0921%" y="581" width="0.1561%" height="15" fill="rgb(223,44,49)" fg:x="283" fg:w="2"/><text x="22.3421%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.39%)</title><rect x="21.9360%" y="725" width="0.3903%" height="15" fill="rgb(227,71,15)" fg:x="281" fg:w="5"/><text x="22.1860%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.39%)</title><rect x="21.9360%" y="709" width="0.3903%" height="15" fill="rgb(225,153,20)" fg:x="281" fg:w="5"/><text x="22.1860%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.2482%" y="693" width="0.0781%" height="15" fill="rgb(210,190,26)" fg:x="285" fg:w="1"/><text x="22.4982%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="22.3263%" y="709" width="0.0781%" height="15" fill="rgb(223,147,5)" fg:x="286" fg:w="1"/><text x="22.5763%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.3263%" y="693" width="0.0781%" height="15" fill="rgb(207,14,23)" fg:x="286" fg:w="1"/><text x="22.5763%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="22.3263%" y="677" width="0.0781%" height="15" fill="rgb(211,195,53)" fg:x="286" fg:w="1"/><text x="22.5763%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4044%" y="693" width="0.0781%" height="15" fill="rgb(237,75,46)" fg:x="287" fg:w="1"/><text x="22.6544%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4044%" y="677" width="0.0781%" height="15" fill="rgb(254,55,14)" fg:x="287" fg:w="1"/><text x="22.6544%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.4044%" y="661" width="0.0781%" height="15" fill="rgb(230,185,30)" fg:x="287" fg:w="1"/><text x="22.6544%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.4044%" y="645" width="0.0781%" height="15" fill="rgb(220,14,11)" fg:x="287" fg:w="1"/><text x="22.6544%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.4044%" y="629" width="0.0781%" height="15" fill="rgb(215,169,44)" fg:x="287" fg:w="1"/><text x="22.6544%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.4044%" y="613" width="0.0781%" height="15" fill="rgb(253,203,20)" fg:x="287" fg:w="1"/><text x="22.6544%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.4044%" y="597" width="0.0781%" height="15" fill="rgb(229,225,17)" fg:x="287" fg:w="1"/><text x="22.6544%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.4044%" y="581" width="0.0781%" height="15" fill="rgb(236,76,26)" fg:x="287" fg:w="1"/><text x="22.6544%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.4044%" y="565" width="0.0781%" height="15" fill="rgb(234,15,30)" fg:x="287" fg:w="1"/><text x="22.6544%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.4044%" y="549" width="0.0781%" height="15" fill="rgb(211,113,48)" fg:x="287" fg:w="1"/><text x="22.6544%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.4044%" y="533" width="0.0781%" height="15" fill="rgb(221,31,36)" fg:x="287" fg:w="1"/><text x="22.6544%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.4044%" y="517" width="0.0781%" height="15" fill="rgb(215,118,52)" fg:x="287" fg:w="1"/><text x="22.6544%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="22.4824%" y="693" width="0.1561%" height="15" fill="rgb(241,151,27)" fg:x="288" fg:w="2"/><text x="22.7324%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="22.4824%" y="677" width="0.1561%" height="15" fill="rgb(253,51,3)" fg:x="288" fg:w="2"/><text x="22.7324%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.5605%" y="661" width="0.0781%" height="15" fill="rgb(216,201,24)" fg:x="289" fg:w="1"/><text x="22.8105%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="22.7166%" y="677" width="0.0781%" height="15" fill="rgb(231,107,4)" fg:x="291" fg:w="1"/><text x="22.9666%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="22.8728%" y="661" width="0.2342%" height="15" fill="rgb(243,97,54)" fg:x="293" fg:w="3"/><text x="23.1228%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.9508%" y="645" width="0.1561%" height="15" fill="rgb(221,32,51)" fg:x="294" fg:w="2"/><text x="23.2008%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.0289%" y="629" width="0.0781%" height="15" fill="rgb(218,171,35)" fg:x="295" fg:w="1"/><text x="23.2789%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.0289%" y="613" width="0.0781%" height="15" fill="rgb(214,20,53)" fg:x="295" fg:w="1"/><text x="23.2789%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="23.1069%" y="613" width="0.0781%" height="15" fill="rgb(239,9,52)" fg:x="296" fg:w="1"/><text x="23.3569%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.1069%" y="597" width="0.0781%" height="15" fill="rgb(215,114,45)" fg:x="296" fg:w="1"/><text x="23.3569%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.1069%" y="581" width="0.0781%" height="15" fill="rgb(208,118,9)" fg:x="296" fg:w="1"/><text x="23.3569%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="23.1069%" y="645" width="0.2342%" height="15" fill="rgb(235,7,39)" fg:x="296" fg:w="3"/><text x="23.3569%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="23.1069%" y="629" width="0.2342%" height="15" fill="rgb(243,225,15)" fg:x="296" fg:w="3"/><text x="23.3569%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="23.1850%" y="613" width="0.1561%" height="15" fill="rgb(225,216,18)" fg:x="297" fg:w="2"/><text x="23.4350%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="23.1850%" y="597" width="0.1561%" height="15" fill="rgb(233,36,38)" fg:x="297" fg:w="2"/><text x="23.4350%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.2631%" y="581" width="0.0781%" height="15" fill="rgb(239,88,23)" fg:x="298" fg:w="1"/><text x="23.5131%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="23.3411%" y="645" width="0.0781%" height="15" fill="rgb(219,181,35)" fg:x="299" fg:w="1"/><text x="23.5911%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.3411%" y="629" width="0.0781%" height="15" fill="rgb(215,18,46)" fg:x="299" fg:w="1"/><text x="23.5911%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.3411%" y="613" width="0.0781%" height="15" fill="rgb(241,38,11)" fg:x="299" fg:w="1"/><text x="23.5911%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="23.6534%" y="613" width="0.0781%" height="15" fill="rgb(248,169,45)" fg:x="303" fg:w="1"/><text x="23.9034%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.6534%" y="597" width="0.0781%" height="15" fill="rgb(239,50,49)" fg:x="303" fg:w="1"/><text x="23.9034%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.6534%" y="581" width="0.0781%" height="15" fill="rgb(231,96,31)" fg:x="303" fg:w="1"/><text x="23.9034%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.6534%" y="565" width="0.0781%" height="15" fill="rgb(224,193,37)" fg:x="303" fg:w="1"/><text x="23.9034%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="23.8095%" y="597" width="0.1561%" height="15" fill="rgb(227,153,50)" fg:x="305" fg:w="2"/><text x="24.0595%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.9657%" y="581" width="0.0781%" height="15" fill="rgb(249,228,3)" fg:x="307" fg:w="1"/><text x="24.2157%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="24.0437%" y="581" width="0.3903%" height="15" fill="rgb(219,164,43)" fg:x="308" fg:w="5"/><text x="24.2937%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="24.1998%" y="565" width="0.2342%" height="15" fill="rgb(216,45,41)" fg:x="310" fg:w="3"/><text x="24.4498%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.3560%" y="549" width="0.0781%" height="15" fill="rgb(210,226,51)" fg:x="312" fg:w="1"/><text x="24.6060%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.3560%" y="533" width="0.0781%" height="15" fill="rgb(209,117,49)" fg:x="312" fg:w="1"/><text x="24.6060%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.3560%" y="517" width="0.0781%" height="15" fill="rgb(206,196,24)" fg:x="312" fg:w="1"/><text x="24.6060%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.3560%" y="501" width="0.0781%" height="15" fill="rgb(253,218,3)" fg:x="312" fg:w="1"/><text x="24.6060%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.3560%" y="485" width="0.0781%" height="15" fill="rgb(252,166,2)" fg:x="312" fg:w="1"/><text x="24.6060%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.62%)</title><rect x="23.9657%" y="597" width="0.6245%" height="15" fill="rgb(236,218,26)" fg:x="307" fg:w="8"/><text x="24.2157%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="24.4340%" y="581" width="0.1561%" height="15" fill="rgb(254,84,19)" fg:x="313" fg:w="2"/><text x="24.6840%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.5121%" y="565" width="0.0781%" height="15" fill="rgb(219,137,29)" fg:x="314" fg:w="1"/><text x="24.7621%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.5121%" y="549" width="0.0781%" height="15" fill="rgb(227,47,52)" fg:x="314" fg:w="1"/><text x="24.7621%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.01%)</title><rect x="23.7315%" y="613" width="1.0148%" height="15" fill="rgb(229,167,24)" fg:x="304" fg:w="13"/><text x="23.9815%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="24.5902%" y="597" width="0.1561%" height="15" fill="rgb(233,164,1)" fg:x="315" fg:w="2"/><text x="24.8402%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="24.5902%" y="581" width="0.1561%" height="15" fill="rgb(218,88,48)" fg:x="315" fg:w="2"/><text x="24.8402%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.6682%" y="565" width="0.0781%" height="15" fill="rgb(226,214,24)" fg:x="316" fg:w="1"/><text x="24.9182%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.6682%" y="549" width="0.0781%" height="15" fill="rgb(233,29,12)" fg:x="316" fg:w="1"/><text x="24.9182%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.6682%" y="533" width="0.0781%" height="15" fill="rgb(219,120,34)" fg:x="316" fg:w="1"/><text x="24.9182%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.6682%" y="517" width="0.0781%" height="15" fill="rgb(226,78,44)" fg:x="316" fg:w="1"/><text x="24.9182%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.41%)</title><rect x="23.4192%" y="645" width="1.4052%" height="15" fill="rgb(240,15,48)" fg:x="300" fg:w="18"/><text x="23.6692%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.17%)</title><rect x="23.6534%" y="629" width="1.1710%" height="15" fill="rgb(253,176,7)" fg:x="303" fg:w="15"/><text x="23.9034%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.7463%" y="613" width="0.0781%" height="15" fill="rgb(206,166,28)" fg:x="317" fg:w="1"/><text x="24.9963%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.7463%" y="597" width="0.0781%" height="15" fill="rgb(241,53,51)" fg:x="317" fg:w="1"/><text x="24.9963%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.7463%" y="581" width="0.0781%" height="15" fill="rgb(249,112,30)" fg:x="317" fg:w="1"/><text x="24.9963%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 1.95%)</title><rect x="23.1069%" y="661" width="1.9516%" height="15" fill="rgb(217,85,30)" fg:x="296" fg:w="25"/><text x="23.3569%" y="671.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="24.8244%" y="645" width="0.2342%" height="15" fill="rgb(233,49,7)" fg:x="318" fg:w="3"/><text x="25.0744%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="24.9024%" y="629" width="0.1561%" height="15" fill="rgb(234,109,9)" fg:x="319" fg:w="2"/><text x="25.1524%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="24.9805%" y="613" width="0.0781%" height="15" fill="rgb(253,95,22)" fg:x="320" fg:w="1"/><text x="25.2305%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.34%)</title><rect x="22.7947%" y="677" width="2.3419%" height="15" fill="rgb(233,176,25)" fg:x="292" fg:w="30"/><text x="23.0447%" y="687.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.0585%" y="661" width="0.0781%" height="15" fill="rgb(236,33,39)" fg:x="321" fg:w="1"/><text x="25.3085%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (33 samples, 2.58%)</title><rect x="22.6386%" y="693" width="2.5761%" height="15" fill="rgb(223,226,42)" fg:x="290" fg:w="33"/><text x="22.8886%" y="703.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.1366%" y="677" width="0.0781%" height="15" fill="rgb(216,99,33)" fg:x="322" fg:w="1"/><text x="25.3866%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.1366%" y="661" width="0.0781%" height="15" fill="rgb(235,84,23)" fg:x="322" fg:w="1"/><text x="25.3866%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.2147%" y="661" width="0.0781%" height="15" fill="rgb(232,2,27)" fg:x="323" fg:w="1"/><text x="25.4647%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.2927%" y="645" width="0.0781%" height="15" fill="rgb(241,23,22)" fg:x="324" fg:w="1"/><text x="25.5427%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.2927%" y="629" width="0.0781%" height="15" fill="rgb(211,73,27)" fg:x="324" fg:w="1"/><text x="25.5427%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="25.3708%" y="629" width="0.1561%" height="15" fill="rgb(235,109,49)" fg:x="325" fg:w="2"/><text x="25.6208%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.4489%" y="613" width="0.0781%" height="15" fill="rgb(230,99,29)" fg:x="326" fg:w="1"/><text x="25.6989%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.6050%" y="613" width="0.0781%" height="15" fill="rgb(245,199,7)" fg:x="328" fg:w="1"/><text x="25.8550%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="25.6831%" y="613" width="0.1561%" height="15" fill="rgb(217,179,10)" fg:x="329" fg:w="2"/><text x="25.9331%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="25.6831%" y="597" width="0.1561%" height="15" fill="rgb(254,99,47)" fg:x="329" fg:w="2"/><text x="25.9331%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="25.6831%" y="581" width="0.1561%" height="15" fill="rgb(251,121,7)" fg:x="329" fg:w="2"/><text x="25.9331%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8392%" y="581" width="0.0781%" height="15" fill="rgb(250,177,26)" fg:x="331" fg:w="1"/><text x="26.0892%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.9173%" y="565" width="0.0781%" height="15" fill="rgb(232,88,15)" fg:x="332" fg:w="1"/><text x="26.1673%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.94%)</title><rect x="25.2147%" y="693" width="0.9368%" height="15" fill="rgb(251,54,54)" fg:x="323" fg:w="12"/><text x="25.4647%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.94%)</title><rect x="25.2147%" y="677" width="0.9368%" height="15" fill="rgb(208,177,15)" fg:x="323" fg:w="12"/><text x="25.4647%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="25.2927%" y="661" width="0.8587%" height="15" fill="rgb(205,97,32)" fg:x="324" fg:w="11"/><text x="25.5427%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.78%)</title><rect x="25.3708%" y="645" width="0.7806%" height="15" fill="rgb(217,192,13)" fg:x="325" fg:w="10"/><text x="25.6208%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.62%)</title><rect x="25.5269%" y="629" width="0.6245%" height="15" fill="rgb(215,163,41)" fg:x="327" fg:w="8"/><text x="25.7769%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="25.8392%" y="613" width="0.3123%" height="15" fill="rgb(246,83,29)" fg:x="331" fg:w="4"/><text x="26.0892%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="25.8392%" y="597" width="0.3123%" height="15" fill="rgb(219,2,45)" fg:x="331" fg:w="4"/><text x="26.0892%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="25.9173%" y="581" width="0.2342%" height="15" fill="rgb(242,215,33)" fg:x="332" fg:w="3"/><text x="26.1673%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="25.9953%" y="565" width="0.1561%" height="15" fill="rgb(217,1,6)" fg:x="333" fg:w="2"/><text x="26.2453%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="25.9953%" y="549" width="0.1561%" height="15" fill="rgb(207,85,52)" fg:x="333" fg:w="2"/><text x="26.2453%" y="559.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="26.1514%" y="677" width="0.0781%" height="15" fill="rgb(231,171,19)" fg:x="335" fg:w="1"/><text x="26.4014%" y="687.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="26.1514%" y="661" width="0.0781%" height="15" fill="rgb(207,128,4)" fg:x="335" fg:w="1"/><text x="26.4014%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="26.2295%" y="677" width="0.0781%" height="15" fill="rgb(219,208,4)" fg:x="336" fg:w="1"/><text x="26.4795%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2295%" y="661" width="0.0781%" height="15" fill="rgb(235,161,42)" fg:x="336" fg:w="1"/><text x="26.4795%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.4637%" y="645" width="0.0781%" height="15" fill="rgb(247,218,18)" fg:x="339" fg:w="1"/><text x="26.7137%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.39%)</title><rect x="26.5418%" y="645" width="0.3903%" height="15" fill="rgb(232,114,51)" fg:x="340" fg:w="5"/><text x="26.7918%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="26.6979%" y="629" width="0.2342%" height="15" fill="rgb(222,95,3)" fg:x="342" fg:w="3"/><text x="26.9479%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="26.9321%" y="645" width="0.0781%" height="15" fill="rgb(240,65,29)" fg:x="345" fg:w="1"/><text x="27.1821%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="26.9321%" y="629" width="0.0781%" height="15" fill="rgb(249,209,20)" fg:x="345" fg:w="1"/><text x="27.1821%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0101%" y="613" width="0.0781%" height="15" fill="rgb(241,48,37)" fg:x="346" fg:w="1"/><text x="27.2601%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="27.0101%" y="645" width="0.1561%" height="15" fill="rgb(230,140,42)" fg:x="346" fg:w="2"/><text x="27.2601%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.0101%" y="629" width="0.1561%" height="15" fill="rgb(230,176,45)" fg:x="346" fg:w="2"/><text x="27.2601%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.0882%" y="613" width="0.0781%" height="15" fill="rgb(245,112,21)" fg:x="347" fg:w="1"/><text x="27.3382%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="27.2443%" y="613" width="0.1561%" height="15" fill="rgb(207,183,35)" fg:x="349" fg:w="2"/><text x="27.4943%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.4005%" y="597" width="0.0781%" height="15" fill="rgb(227,44,33)" fg:x="351" fg:w="1"/><text x="27.6505%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.4005%" y="581" width="0.0781%" height="15" fill="rgb(246,120,21)" fg:x="351" fg:w="1"/><text x="27.6505%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="27.4005%" y="565" width="0.0781%" height="15" fill="rgb(235,57,52)" fg:x="351" fg:w="1"/><text x="27.6505%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="27.4785%" y="597" width="0.0781%" height="15" fill="rgb(238,84,10)" fg:x="352" fg:w="1"/><text x="27.7285%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="27.4785%" y="581" width="0.0781%" height="15" fill="rgb(251,200,32)" fg:x="352" fg:w="1"/><text x="27.7285%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="27.5566%" y="565" width="0.2342%" height="15" fill="rgb(247,159,13)" fg:x="353" fg:w="3"/><text x="27.8066%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.7127%" y="549" width="0.0781%" height="15" fill="rgb(238,64,4)" fg:x="355" fg:w="1"/><text x="27.9627%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.7908%" y="533" width="0.0781%" height="15" fill="rgb(221,131,51)" fg:x="356" fg:w="1"/><text x="28.0408%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.7908%" y="517" width="0.0781%" height="15" fill="rgb(242,5,29)" fg:x="356" fg:w="1"/><text x="28.0408%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.0250%" y="501" width="0.0781%" height="15" fill="rgb(214,130,32)" fg:x="359" fg:w="1"/><text x="28.2750%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="27.8689%" y="517" width="0.3903%" height="15" fill="rgb(244,210,16)" fg:x="357" fg:w="5"/><text x="28.1189%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="28.1030%" y="501" width="0.1561%" height="15" fill="rgb(234,48,26)" fg:x="360" fg:w="2"/><text x="28.3530%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="28.1811%" y="485" width="0.0781%" height="15" fill="rgb(231,82,38)" fg:x="361" fg:w="1"/><text x="28.4311%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.94%)</title><rect x="27.4005%" y="613" width="0.9368%" height="15" fill="rgb(254,128,41)" fg:x="351" fg:w="12"/><text x="27.6505%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.78%)</title><rect x="27.5566%" y="597" width="0.7806%" height="15" fill="rgb(212,73,49)" fg:x="353" fg:w="10"/><text x="27.8066%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.78%)</title><rect x="27.5566%" y="581" width="0.7806%" height="15" fill="rgb(205,62,54)" fg:x="353" fg:w="10"/><text x="27.8066%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="27.7908%" y="565" width="0.5464%" height="15" fill="rgb(228,0,8)" fg:x="356" fg:w="7"/><text x="28.0408%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="27.7908%" y="549" width="0.5464%" height="15" fill="rgb(251,28,17)" fg:x="356" fg:w="7"/><text x="28.0408%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.47%)</title><rect x="27.8689%" y="533" width="0.4684%" height="15" fill="rgb(238,105,27)" fg:x="357" fg:w="6"/><text x="28.1189%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.2592%" y="517" width="0.0781%" height="15" fill="rgb(237,216,33)" fg:x="362" fg:w="1"/><text x="28.5092%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.25%)</title><rect x="27.2443%" y="629" width="1.2490%" height="15" fill="rgb(229,228,25)" fg:x="349" fg:w="16"/><text x="27.4943%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="28.3372%" y="613" width="0.1561%" height="15" fill="rgb(233,75,23)" fg:x="363" fg:w="2"/><text x="28.5872%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.3372%" y="597" width="0.1561%" height="15" fill="rgb(231,207,16)" fg:x="363" fg:w="2"/><text x="28.5872%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.4934%" y="629" width="0.1561%" height="15" fill="rgb(231,191,45)" fg:x="365" fg:w="2"/><text x="28.7434%" y="639.50"></text></g><g><title>engine::session::Session::flush (92 samples, 7.18%)</title><rect x="21.5457%" y="789" width="7.1819%" height="15" fill="rgb(224,133,17)" fg:x="276" fg:w="92"/><text x="21.7957%" y="799.50">engine::se..</text></g><g><title>engine::session::Session::save_changes (89 samples, 6.95%)</title><rect x="21.7799%" y="773" width="6.9477%" height="15" fill="rgb(209,178,27)" fg:x="279" fg:w="89"/><text x="22.0299%" y="783.50">engine::s..</text></g><g><title>engine::session::state::State::close (88 samples, 6.87%)</title><rect x="21.8579%" y="757" width="6.8696%" height="15" fill="rgb(218,37,11)" fg:x="280" fg:w="88"/><text x="22.1079%" y="767.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (88 samples, 6.87%)</title><rect x="21.8579%" y="741" width="6.8696%" height="15" fill="rgb(251,226,25)" fg:x="280" fg:w="88"/><text x="22.1079%" y="751.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (82 samples, 6.40%)</title><rect x="22.3263%" y="725" width="6.4012%" height="15" fill="rgb(209,222,27)" fg:x="286" fg:w="82"/><text x="22.5763%" y="735.50">engine::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (81 samples, 6.32%)</title><rect x="22.4044%" y="709" width="6.3232%" height="15" fill="rgb(238,22,21)" fg:x="287" fg:w="81"/><text x="22.6544%" y="719.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (33 samples, 2.58%)</title><rect x="26.1514%" y="693" width="2.5761%" height="15" fill="rgb(233,161,25)" fg:x="335" fg:w="33"/><text x="26.4014%" y="703.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (31 samples, 2.42%)</title><rect x="26.3076%" y="677" width="2.4200%" height="15" fill="rgb(226,122,53)" fg:x="337" fg:w="31"/><text x="26.5576%" y="687.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (31 samples, 2.42%)</title><rect x="26.3076%" y="661" width="2.4200%" height="15" fill="rgb(220,123,17)" fg:x="337" fg:w="31"/><text x="26.5576%" y="671.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 1.56%)</title><rect x="27.1663%" y="645" width="1.5613%" height="15" fill="rgb(230,224,35)" fg:x="348" fg:w="20"/><text x="27.4163%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.6495%" y="629" width="0.0781%" height="15" fill="rgb(246,83,8)" fg:x="367" fg:w="1"/><text x="28.8995%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.6495%" y="613" width="0.0781%" height="15" fill="rgb(230,214,17)" fg:x="367" fg:w="1"/><text x="28.8995%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="28.7276%" y="773" width="0.0781%" height="15" fill="rgb(222,97,18)" fg:x="368" fg:w="1"/><text x="28.9776%" y="783.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="28.7276%" y="757" width="0.0781%" height="15" fill="rgb(206,79,1)" fg:x="368" fg:w="1"/><text x="28.9776%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="28.7276%" y="741" width="0.0781%" height="15" fill="rgb(214,121,34)" fg:x="368" fg:w="1"/><text x="28.9776%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.7276%" y="725" width="0.0781%" height="15" fill="rgb(249,199,46)" fg:x="368" fg:w="1"/><text x="28.9776%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="28.7276%" y="709" width="0.0781%" height="15" fill="rgb(214,222,46)" fg:x="368" fg:w="1"/><text x="28.9776%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.7276%" y="693" width="0.0781%" height="15" fill="rgb(248,168,30)" fg:x="368" fg:w="1"/><text x="28.9776%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.8837%" y="677" width="0.0781%" height="15" fill="rgb(226,14,28)" fg:x="370" fg:w="1"/><text x="29.1337%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.9617%" y="677" width="0.0781%" height="15" fill="rgb(253,123,1)" fg:x="371" fg:w="1"/><text x="29.2117%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.9617%" y="661" width="0.0781%" height="15" fill="rgb(225,24,42)" fg:x="371" fg:w="1"/><text x="29.2117%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="28.9617%" y="645" width="0.0781%" height="15" fill="rgb(216,161,37)" fg:x="371" fg:w="1"/><text x="29.2117%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (5 samples, 0.39%)</title><rect x="28.7276%" y="789" width="0.3903%" height="15" fill="rgb(251,164,26)" fg:x="368" fg:w="5"/><text x="28.9776%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="28.8056%" y="773" width="0.3123%" height="15" fill="rgb(219,177,3)" fg:x="369" fg:w="4"/><text x="29.0556%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="28.8056%" y="757" width="0.3123%" height="15" fill="rgb(222,65,0)" fg:x="369" fg:w="4"/><text x="29.0556%" y="767.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="28.8056%" y="741" width="0.3123%" height="15" fill="rgb(223,69,54)" fg:x="369" fg:w="4"/><text x="29.0556%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="28.8056%" y="725" width="0.3123%" height="15" fill="rgb(235,30,27)" fg:x="369" fg:w="4"/><text x="29.0556%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="28.8056%" y="709" width="0.3123%" height="15" fill="rgb(220,183,50)" fg:x="369" fg:w="4"/><text x="29.0556%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="28.8056%" y="693" width="0.3123%" height="15" fill="rgb(248,198,15)" fg:x="369" fg:w="4"/><text x="29.0556%" y="703.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="29.0398%" y="677" width="0.0781%" height="15" fill="rgb(222,211,4)" fg:x="372" fg:w="1"/><text x="29.2898%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="29.1959%" y="757" width="0.0781%" height="15" fill="rgb(214,102,34)" fg:x="374" fg:w="1"/><text x="29.4459%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="29.1959%" y="741" width="0.0781%" height="15" fill="rgb(245,92,5)" fg:x="374" fg:w="1"/><text x="29.4459%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="29.1959%" y="725" width="0.0781%" height="15" fill="rgb(252,72,51)" fg:x="374" fg:w="1"/><text x="29.4459%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.1959%" y="709" width="0.0781%" height="15" fill="rgb(252,208,19)" fg:x="374" fg:w="1"/><text x="29.4459%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.1959%" y="693" width="0.0781%" height="15" fill="rgb(211,69,7)" fg:x="374" fg:w="1"/><text x="29.4459%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="29.1959%" y="677" width="0.0781%" height="15" fill="rgb(211,27,16)" fg:x="374" fg:w="1"/><text x="29.4459%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="29.1959%" y="661" width="0.0781%" height="15" fill="rgb(219,216,14)" fg:x="374" fg:w="1"/><text x="29.4459%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="29.1959%" y="645" width="0.0781%" height="15" fill="rgb(219,71,8)" fg:x="374" fg:w="1"/><text x="29.4459%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.1959%" y="629" width="0.0781%" height="15" fill="rgb(223,170,53)" fg:x="374" fg:w="1"/><text x="29.4459%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="29.1959%" y="613" width="0.0781%" height="15" fill="rgb(246,21,26)" fg:x="374" fg:w="1"/><text x="29.4459%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="29.1959%" y="597" width="0.0781%" height="15" fill="rgb(248,20,46)" fg:x="374" fg:w="1"/><text x="29.4459%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="29.1959%" y="581" width="0.0781%" height="15" fill="rgb(252,94,11)" fg:x="374" fg:w="1"/><text x="29.4459%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.2740%" y="725" width="0.0781%" height="15" fill="rgb(236,163,8)" fg:x="375" fg:w="1"/><text x="29.5240%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.2740%" y="709" width="0.0781%" height="15" fill="rgb(217,221,45)" fg:x="375" fg:w="1"/><text x="29.5240%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.2740%" y="693" width="0.0781%" height="15" fill="rgb(238,38,17)" fg:x="375" fg:w="1"/><text x="29.5240%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.2740%" y="677" width="0.0781%" height="15" fill="rgb(242,210,23)" fg:x="375" fg:w="1"/><text x="29.5240%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.2740%" y="661" width="0.0781%" height="15" fill="rgb(250,86,53)" fg:x="375" fg:w="1"/><text x="29.5240%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.2740%" y="645" width="0.0781%" height="15" fill="rgb(223,168,25)" fg:x="375" fg:w="1"/><text x="29.5240%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.2740%" y="629" width="0.0781%" height="15" fill="rgb(251,189,4)" fg:x="375" fg:w="1"/><text x="29.5240%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.2740%" y="613" width="0.0781%" height="15" fill="rgb(245,19,28)" fg:x="375" fg:w="1"/><text x="29.5240%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.2740%" y="597" width="0.0781%" height="15" fill="rgb(207,10,34)" fg:x="375" fg:w="1"/><text x="29.5240%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.2740%" y="581" width="0.0781%" height="15" fill="rgb(235,153,31)" fg:x="375" fg:w="1"/><text x="29.5240%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.2740%" y="565" width="0.0781%" height="15" fill="rgb(228,72,37)" fg:x="375" fg:w="1"/><text x="29.5240%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.2740%" y="549" width="0.0781%" height="15" fill="rgb(215,15,16)" fg:x="375" fg:w="1"/><text x="29.5240%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2740%" y="533" width="0.0781%" height="15" fill="rgb(250,119,29)" fg:x="375" fg:w="1"/><text x="29.5240%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="29.3521%" y="709" width="0.0781%" height="15" fill="rgb(214,59,1)" fg:x="376" fg:w="1"/><text x="29.6021%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.23%)</title><rect x="29.2740%" y="741" width="0.2342%" height="15" fill="rgb(223,109,25)" fg:x="375" fg:w="3"/><text x="29.5240%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.3521%" y="725" width="0.1561%" height="15" fill="rgb(230,198,22)" fg:x="376" fg:w="2"/><text x="29.6021%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.4301%" y="709" width="0.0781%" height="15" fill="rgb(245,184,46)" fg:x="377" fg:w="1"/><text x="29.6801%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.4301%" y="693" width="0.0781%" height="15" fill="rgb(253,73,16)" fg:x="377" fg:w="1"/><text x="29.6801%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.4301%" y="677" width="0.0781%" height="15" fill="rgb(206,94,45)" fg:x="377" fg:w="1"/><text x="29.6801%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.4301%" y="661" width="0.0781%" height="15" fill="rgb(236,83,27)" fg:x="377" fg:w="1"/><text x="29.6801%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.31%)</title><rect x="29.2740%" y="757" width="0.3123%" height="15" fill="rgb(220,196,8)" fg:x="375" fg:w="4"/><text x="29.5240%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.5082%" y="741" width="0.0781%" height="15" fill="rgb(254,185,14)" fg:x="378" fg:w="1"/><text x="29.7582%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="29.5082%" y="725" width="0.0781%" height="15" fill="rgb(226,50,22)" fg:x="378" fg:w="1"/><text x="29.7582%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.5082%" y="709" width="0.0781%" height="15" fill="rgb(253,147,0)" fg:x="378" fg:w="1"/><text x="29.7582%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.5082%" y="693" width="0.0781%" height="15" fill="rgb(252,46,33)" fg:x="378" fg:w="1"/><text x="29.7582%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="29.5863%" y="741" width="0.1561%" height="15" fill="rgb(242,22,54)" fg:x="379" fg:w="2"/><text x="29.8363%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="29.5863%" y="725" width="0.1561%" height="15" fill="rgb(223,178,32)" fg:x="379" fg:w="2"/><text x="29.8363%" y="735.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="29.5863%" y="709" width="0.1561%" height="15" fill="rgb(214,106,53)" fg:x="379" fg:w="2"/><text x="29.8363%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.6643%" y="693" width="0.0781%" height="15" fill="rgb(232,65,50)" fg:x="380" fg:w="1"/><text x="29.9143%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6643%" y="677" width="0.0781%" height="15" fill="rgb(231,110,28)" fg:x="380" fg:w="1"/><text x="29.9143%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6643%" y="661" width="0.0781%" height="15" fill="rgb(216,71,40)" fg:x="380" fg:w="1"/><text x="29.9143%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6643%" y="645" width="0.0781%" height="15" fill="rgb(229,89,53)" fg:x="380" fg:w="1"/><text x="29.9143%" y="655.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="29.6643%" y="629" width="0.0781%" height="15" fill="rgb(210,124,14)" fg:x="380" fg:w="1"/><text x="29.9143%" y="639.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.6643%" y="613" width="0.0781%" height="15" fill="rgb(236,213,6)" fg:x="380" fg:w="1"/><text x="29.9143%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.62%)</title><rect x="29.1959%" y="773" width="0.6245%" height="15" fill="rgb(228,41,5)" fg:x="374" fg:w="8"/><text x="29.4459%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.23%)</title><rect x="29.5863%" y="757" width="0.2342%" height="15" fill="rgb(221,167,25)" fg:x="379" fg:w="3"/><text x="29.8363%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="29.7424%" y="741" width="0.0781%" height="15" fill="rgb(228,144,37)" fg:x="381" fg:w="1"/><text x="29.9924%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.8205%" y="725" width="0.0781%" height="15" fill="rgb(227,189,38)" fg:x="382" fg:w="1"/><text x="30.0705%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.8205%" y="709" width="0.0781%" height="15" fill="rgb(218,8,2)" fg:x="382" fg:w="1"/><text x="30.0705%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.8205%" y="693" width="0.0781%" height="15" fill="rgb(209,61,28)" fg:x="382" fg:w="1"/><text x="30.0705%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.8205%" y="677" width="0.0781%" height="15" fill="rgb(233,140,39)" fg:x="382" fg:w="1"/><text x="30.0705%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.8205%" y="661" width="0.0781%" height="15" fill="rgb(251,66,48)" fg:x="382" fg:w="1"/><text x="30.0705%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="29.8205%" y="645" width="0.0781%" height="15" fill="rgb(210,44,45)" fg:x="382" fg:w="1"/><text x="30.0705%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="29.8205%" y="629" width="0.0781%" height="15" fill="rgb(214,136,46)" fg:x="382" fg:w="1"/><text x="30.0705%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.9766%" y="645" width="0.0781%" height="15" fill="rgb(207,130,50)" fg:x="384" fg:w="1"/><text x="30.2266%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.0546%" y="629" width="0.0781%" height="15" fill="rgb(228,102,49)" fg:x="385" fg:w="1"/><text x="30.3046%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.1327%" y="597" width="0.0781%" height="15" fill="rgb(253,55,1)" fg:x="386" fg:w="1"/><text x="30.3827%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.1327%" y="581" width="0.0781%" height="15" fill="rgb(238,222,9)" fg:x="386" fg:w="1"/><text x="30.3827%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="29.9766%" y="677" width="0.3123%" height="15" fill="rgb(246,99,6)" fg:x="384" fg:w="4"/><text x="30.2266%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.31%)</title><rect x="29.9766%" y="661" width="0.3123%" height="15" fill="rgb(219,110,26)" fg:x="384" fg:w="4"/><text x="30.2266%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="30.0546%" y="645" width="0.2342%" height="15" fill="rgb(239,160,33)" fg:x="385" fg:w="3"/><text x="30.3046%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="30.1327%" y="629" width="0.1561%" height="15" fill="rgb(220,202,23)" fg:x="386" fg:w="2"/><text x="30.3827%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="30.1327%" y="613" width="0.1561%" height="15" fill="rgb(208,80,26)" fg:x="386" fg:w="2"/><text x="30.3827%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.2108%" y="597" width="0.0781%" height="15" fill="rgb(243,85,7)" fg:x="387" fg:w="1"/><text x="30.4608%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.2108%" y="581" width="0.0781%" height="15" fill="rgb(228,77,47)" fg:x="387" fg:w="1"/><text x="30.4608%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.2108%" y="565" width="0.0781%" height="15" fill="rgb(212,226,8)" fg:x="387" fg:w="1"/><text x="30.4608%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.62%)</title><rect x="29.8985%" y="725" width="0.6245%" height="15" fill="rgb(241,120,54)" fg:x="383" fg:w="8"/><text x="30.1485%" y="735.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.62%)</title><rect x="29.8985%" y="709" width="0.6245%" height="15" fill="rgb(226,80,16)" fg:x="383" fg:w="8"/><text x="30.1485%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.62%)</title><rect x="29.8985%" y="693" width="0.6245%" height="15" fill="rgb(240,76,13)" fg:x="383" fg:w="8"/><text x="30.1485%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="30.2888%" y="677" width="0.2342%" height="15" fill="rgb(252,74,8)" fg:x="388" fg:w="3"/><text x="30.5388%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.3669%" y="661" width="0.1561%" height="15" fill="rgb(244,155,2)" fg:x="389" fg:w="2"/><text x="30.6169%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.3669%" y="645" width="0.1561%" height="15" fill="rgb(215,81,35)" fg:x="389" fg:w="2"/><text x="30.6169%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.3669%" y="629" width="0.1561%" height="15" fill="rgb(206,55,2)" fg:x="389" fg:w="2"/><text x="30.6169%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="30.3669%" y="613" width="0.1561%" height="15" fill="rgb(231,2,34)" fg:x="389" fg:w="2"/><text x="30.6169%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.3669%" y="597" width="0.1561%" height="15" fill="rgb(242,176,48)" fg:x="389" fg:w="2"/><text x="30.6169%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.3669%" y="581" width="0.1561%" height="15" fill="rgb(249,31,36)" fg:x="389" fg:w="2"/><text x="30.6169%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.3669%" y="565" width="0.1561%" height="15" fill="rgb(205,18,17)" fg:x="389" fg:w="2"/><text x="30.6169%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.4450%" y="549" width="0.0781%" height="15" fill="rgb(254,130,5)" fg:x="390" fg:w="1"/><text x="30.6950%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.4450%" y="533" width="0.0781%" height="15" fill="rgb(229,42,45)" fg:x="390" fg:w="1"/><text x="30.6950%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5230%" y="677" width="0.0781%" height="15" fill="rgb(245,95,25)" fg:x="391" fg:w="1"/><text x="30.7730%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5230%" y="661" width="0.0781%" height="15" fill="rgb(249,193,38)" fg:x="391" fg:w="1"/><text x="30.7730%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5230%" y="645" width="0.0781%" height="15" fill="rgb(241,140,43)" fg:x="391" fg:w="1"/><text x="30.7730%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5230%" y="629" width="0.0781%" height="15" fill="rgb(245,78,48)" fg:x="391" fg:w="1"/><text x="30.7730%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.5230%" y="613" width="0.0781%" height="15" fill="rgb(214,92,39)" fg:x="391" fg:w="1"/><text x="30.7730%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.5230%" y="597" width="0.0781%" height="15" fill="rgb(211,189,14)" fg:x="391" fg:w="1"/><text x="30.7730%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.5230%" y="581" width="0.0781%" height="15" fill="rgb(218,7,24)" fg:x="391" fg:w="1"/><text x="30.7730%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.5230%" y="565" width="0.0781%" height="15" fill="rgb(224,200,49)" fg:x="391" fg:w="1"/><text x="30.7730%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.5230%" y="549" width="0.0781%" height="15" fill="rgb(218,210,14)" fg:x="391" fg:w="1"/><text x="30.7730%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.5230%" y="533" width="0.0781%" height="15" fill="rgb(234,142,31)" fg:x="391" fg:w="1"/><text x="30.7730%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.5230%" y="517" width="0.0781%" height="15" fill="rgb(227,165,2)" fg:x="391" fg:w="1"/><text x="30.7730%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.5230%" y="501" width="0.0781%" height="15" fill="rgb(232,44,46)" fg:x="391" fg:w="1"/><text x="30.7730%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.5230%" y="485" width="0.0781%" height="15" fill="rgb(236,149,47)" fg:x="391" fg:w="1"/><text x="30.7730%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.5230%" y="469" width="0.0781%" height="15" fill="rgb(227,45,31)" fg:x="391" fg:w="1"/><text x="30.7730%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.5230%" y="453" width="0.0781%" height="15" fill="rgb(240,176,51)" fg:x="391" fg:w="1"/><text x="30.7730%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.5230%" y="437" width="0.0781%" height="15" fill="rgb(249,146,41)" fg:x="391" fg:w="1"/><text x="30.7730%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.6011%" y="677" width="0.0781%" height="15" fill="rgb(213,208,4)" fg:x="392" fg:w="1"/><text x="30.8511%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.6011%" y="661" width="0.0781%" height="15" fill="rgb(245,84,36)" fg:x="392" fg:w="1"/><text x="30.8511%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.6011%" y="645" width="0.0781%" height="15" fill="rgb(254,84,18)" fg:x="392" fg:w="1"/><text x="30.8511%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.6011%" y="629" width="0.0781%" height="15" fill="rgb(225,38,54)" fg:x="392" fg:w="1"/><text x="30.8511%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.6011%" y="613" width="0.0781%" height="15" fill="rgb(246,50,30)" fg:x="392" fg:w="1"/><text x="30.8511%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.6011%" y="597" width="0.0781%" height="15" fill="rgb(246,148,9)" fg:x="392" fg:w="1"/><text x="30.8511%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.6792%" y="581" width="0.0781%" height="15" fill="rgb(223,75,4)" fg:x="393" fg:w="1"/><text x="30.9292%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.6792%" y="565" width="0.0781%" height="15" fill="rgb(239,148,41)" fg:x="393" fg:w="1"/><text x="30.9292%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.09%)</title><rect x="29.8205%" y="757" width="1.0929%" height="15" fill="rgb(205,195,3)" fg:x="382" fg:w="14"/><text x="30.0705%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (14 samples, 1.09%)</title><rect x="29.8205%" y="741" width="1.0929%" height="15" fill="rgb(254,161,1)" fg:x="382" fg:w="14"/><text x="30.0705%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.39%)</title><rect x="30.5230%" y="725" width="0.3903%" height="15" fill="rgb(211,229,8)" fg:x="391" fg:w="5"/><text x="30.7730%" y="735.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.39%)</title><rect x="30.5230%" y="709" width="0.3903%" height="15" fill="rgb(220,97,9)" fg:x="391" fg:w="5"/><text x="30.7730%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.39%)</title><rect x="30.5230%" y="693" width="0.3903%" height="15" fill="rgb(240,218,8)" fg:x="391" fg:w="5"/><text x="30.7730%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="30.6792%" y="677" width="0.2342%" height="15" fill="rgb(250,44,0)" fg:x="393" fg:w="3"/><text x="30.9292%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="30.6792%" y="661" width="0.2342%" height="15" fill="rgb(236,41,53)" fg:x="393" fg:w="3"/><text x="30.9292%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="30.6792%" y="645" width="0.2342%" height="15" fill="rgb(218,227,13)" fg:x="393" fg:w="3"/><text x="30.9292%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="30.6792%" y="629" width="0.2342%" height="15" fill="rgb(217,94,32)" fg:x="393" fg:w="3"/><text x="30.9292%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.23%)</title><rect x="30.6792%" y="613" width="0.2342%" height="15" fill="rgb(213,217,12)" fg:x="393" fg:w="3"/><text x="30.9292%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="30.6792%" y="597" width="0.2342%" height="15" fill="rgb(229,13,46)" fg:x="393" fg:w="3"/><text x="30.9292%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.7572%" y="581" width="0.1561%" height="15" fill="rgb(243,139,5)" fg:x="394" fg:w="2"/><text x="31.0072%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.7572%" y="565" width="0.1561%" height="15" fill="rgb(249,38,45)" fg:x="394" fg:w="2"/><text x="31.0072%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.8353%" y="549" width="0.0781%" height="15" fill="rgb(216,70,11)" fg:x="395" fg:w="1"/><text x="31.0853%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.8353%" y="533" width="0.0781%" height="15" fill="rgb(253,101,25)" fg:x="395" fg:w="1"/><text x="31.0853%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="30.8353%" y="517" width="0.0781%" height="15" fill="rgb(207,197,30)" fg:x="395" fg:w="1"/><text x="31.0853%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="30.8353%" y="501" width="0.0781%" height="15" fill="rgb(238,87,13)" fg:x="395" fg:w="1"/><text x="31.0853%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="30.8353%" y="485" width="0.0781%" height="15" fill="rgb(215,155,8)" fg:x="395" fg:w="1"/><text x="31.0853%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="30.9133%" y="757" width="0.1561%" height="15" fill="rgb(239,166,38)" fg:x="396" fg:w="2"/><text x="31.1633%" y="767.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="30.9133%" y="741" width="0.1561%" height="15" fill="rgb(240,194,35)" fg:x="396" fg:w="2"/><text x="31.1633%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.9133%" y="725" width="0.1561%" height="15" fill="rgb(219,10,44)" fg:x="396" fg:w="2"/><text x="31.1633%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="30.9133%" y="709" width="0.1561%" height="15" fill="rgb(251,220,35)" fg:x="396" fg:w="2"/><text x="31.1633%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="30.9133%" y="693" width="0.1561%" height="15" fill="rgb(218,117,13)" fg:x="396" fg:w="2"/><text x="31.1633%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.9133%" y="677" width="0.1561%" height="15" fill="rgb(221,213,40)" fg:x="396" fg:w="2"/><text x="31.1633%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9914%" y="661" width="0.0781%" height="15" fill="rgb(251,224,35)" fg:x="397" fg:w="1"/><text x="31.2414%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1475%" y="741" width="0.0781%" height="15" fill="rgb(241,33,39)" fg:x="399" fg:w="1"/><text x="31.3975%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.2256%" y="629" width="0.0781%" height="15" fill="rgb(222,74,17)" fg:x="400" fg:w="1"/><text x="31.4756%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.2256%" y="613" width="0.0781%" height="15" fill="rgb(225,103,0)" fg:x="400" fg:w="1"/><text x="31.4756%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.2256%" y="597" width="0.0781%" height="15" fill="rgb(240,0,12)" fg:x="400" fg:w="1"/><text x="31.4756%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.2256%" y="581" width="0.0781%" height="15" fill="rgb(233,213,37)" fg:x="400" fg:w="1"/><text x="31.4756%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.2256%" y="565" width="0.0781%" height="15" fill="rgb(225,84,52)" fg:x="400" fg:w="1"/><text x="31.4756%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.2256%" y="549" width="0.0781%" height="15" fill="rgb(247,160,51)" fg:x="400" fg:w="1"/><text x="31.4756%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.2256%" y="533" width="0.0781%" height="15" fill="rgb(244,60,51)" fg:x="400" fg:w="1"/><text x="31.4756%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.2256%" y="517" width="0.0781%" height="15" fill="rgb(233,114,7)" fg:x="400" fg:w="1"/><text x="31.4756%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.2256%" y="501" width="0.0781%" height="15" fill="rgb(246,136,16)" fg:x="400" fg:w="1"/><text x="31.4756%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.2256%" y="485" width="0.0781%" height="15" fill="rgb(243,114,45)" fg:x="400" fg:w="1"/><text x="31.4756%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.2256%" y="469" width="0.0781%" height="15" fill="rgb(247,183,43)" fg:x="400" fg:w="1"/><text x="31.4756%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.2256%" y="453" width="0.0781%" height="15" fill="rgb(251,210,42)" fg:x="400" fg:w="1"/><text x="31.4756%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.2256%" y="437" width="0.0781%" height="15" fill="rgb(221,88,35)" fg:x="400" fg:w="1"/><text x="31.4756%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="31.2256%" y="421" width="0.0781%" height="15" fill="rgb(242,21,20)" fg:x="400" fg:w="1"/><text x="31.4756%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="31.2256%" y="405" width="0.0781%" height="15" fill="rgb(233,226,36)" fg:x="400" fg:w="1"/><text x="31.4756%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.2256%" y="645" width="0.1561%" height="15" fill="rgb(243,189,34)" fg:x="400" fg:w="2"/><text x="31.4756%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.3037%" y="629" width="0.0781%" height="15" fill="rgb(207,145,50)" fg:x="401" fg:w="1"/><text x="31.5537%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.3037%" y="613" width="0.0781%" height="15" fill="rgb(242,1,50)" fg:x="401" fg:w="1"/><text x="31.5537%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.3037%" y="597" width="0.0781%" height="15" fill="rgb(231,65,32)" fg:x="401" fg:w="1"/><text x="31.5537%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.3037%" y="581" width="0.0781%" height="15" fill="rgb(208,68,49)" fg:x="401" fg:w="1"/><text x="31.5537%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.3037%" y="565" width="0.0781%" height="15" fill="rgb(253,54,49)" fg:x="401" fg:w="1"/><text x="31.5537%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.3037%" y="549" width="0.0781%" height="15" fill="rgb(245,186,24)" fg:x="401" fg:w="1"/><text x="31.5537%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.3037%" y="533" width="0.0781%" height="15" fill="rgb(209,2,41)" fg:x="401" fg:w="1"/><text x="31.5537%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.3037%" y="517" width="0.0781%" height="15" fill="rgb(242,208,54)" fg:x="401" fg:w="1"/><text x="31.5537%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.3037%" y="501" width="0.0781%" height="15" fill="rgb(225,9,51)" fg:x="401" fg:w="1"/><text x="31.5537%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.3037%" y="485" width="0.0781%" height="15" fill="rgb(207,207,25)" fg:x="401" fg:w="1"/><text x="31.5537%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.3037%" y="469" width="0.0781%" height="15" fill="rgb(253,96,18)" fg:x="401" fg:w="1"/><text x="31.5537%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.3037%" y="453" width="0.0781%" height="15" fill="rgb(252,215,20)" fg:x="401" fg:w="1"/><text x="31.5537%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="31.2256%" y="661" width="0.2342%" height="15" fill="rgb(245,227,26)" fg:x="400" fg:w="3"/><text x="31.4756%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.3817%" y="645" width="0.0781%" height="15" fill="rgb(241,208,0)" fg:x="402" fg:w="1"/><text x="31.6317%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.4598%" y="661" width="0.0781%" height="15" fill="rgb(224,130,10)" fg:x="403" fg:w="1"/><text x="31.7098%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.4598%" y="645" width="0.0781%" height="15" fill="rgb(237,29,0)" fg:x="403" fg:w="1"/><text x="31.7098%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.4598%" y="629" width="0.0781%" height="15" fill="rgb(219,27,41)" fg:x="403" fg:w="1"/><text x="31.7098%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.4598%" y="613" width="0.0781%" height="15" fill="rgb(245,101,19)" fg:x="403" fg:w="1"/><text x="31.7098%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.4598%" y="597" width="0.0781%" height="15" fill="rgb(243,44,37)" fg:x="403" fg:w="1"/><text x="31.7098%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.5379%" y="597" width="0.0781%" height="15" fill="rgb(228,213,43)" fg:x="404" fg:w="1"/><text x="31.7879%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.47%)</title><rect x="31.2256%" y="709" width="0.4684%" height="15" fill="rgb(219,163,21)" fg:x="400" fg:w="6"/><text x="31.4756%" y="719.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.47%)</title><rect x="31.2256%" y="693" width="0.4684%" height="15" fill="rgb(234,86,24)" fg:x="400" fg:w="6"/><text x="31.4756%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.47%)</title><rect x="31.2256%" y="677" width="0.4684%" height="15" fill="rgb(225,10,24)" fg:x="400" fg:w="6"/><text x="31.4756%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.5379%" y="661" width="0.1561%" height="15" fill="rgb(218,109,7)" fg:x="404" fg:w="2"/><text x="31.7879%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.5379%" y="645" width="0.1561%" height="15" fill="rgb(210,20,26)" fg:x="404" fg:w="2"/><text x="31.7879%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.5379%" y="629" width="0.1561%" height="15" fill="rgb(216,18,1)" fg:x="404" fg:w="2"/><text x="31.7879%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.5379%" y="613" width="0.1561%" height="15" fill="rgb(206,163,23)" fg:x="404" fg:w="2"/><text x="31.7879%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.6159%" y="597" width="0.0781%" height="15" fill="rgb(229,150,31)" fg:x="405" fg:w="1"/><text x="31.8659%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.6159%" y="581" width="0.0781%" height="15" fill="rgb(231,10,5)" fg:x="405" fg:w="1"/><text x="31.8659%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.6159%" y="565" width="0.0781%" height="15" fill="rgb(250,40,50)" fg:x="405" fg:w="1"/><text x="31.8659%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.6159%" y="549" width="0.0781%" height="15" fill="rgb(217,119,7)" fg:x="405" fg:w="1"/><text x="31.8659%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.6159%" y="533" width="0.0781%" height="15" fill="rgb(245,214,40)" fg:x="405" fg:w="1"/><text x="31.8659%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.7721%" y="661" width="0.0781%" height="15" fill="rgb(216,187,1)" fg:x="407" fg:w="1"/><text x="32.0221%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.7721%" y="645" width="0.0781%" height="15" fill="rgb(237,146,21)" fg:x="407" fg:w="1"/><text x="32.0221%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.7721%" y="629" width="0.0781%" height="15" fill="rgb(210,174,47)" fg:x="407" fg:w="1"/><text x="32.0221%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.7721%" y="613" width="0.0781%" height="15" fill="rgb(218,111,39)" fg:x="407" fg:w="1"/><text x="32.0221%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.7721%" y="597" width="0.0781%" height="15" fill="rgb(224,95,19)" fg:x="407" fg:w="1"/><text x="32.0221%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.7721%" y="581" width="0.0781%" height="15" fill="rgb(234,15,38)" fg:x="407" fg:w="1"/><text x="32.0221%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.7721%" y="565" width="0.0781%" height="15" fill="rgb(246,56,12)" fg:x="407" fg:w="1"/><text x="32.0221%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.7721%" y="549" width="0.0781%" height="15" fill="rgb(247,16,17)" fg:x="407" fg:w="1"/><text x="32.0221%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.7721%" y="533" width="0.0781%" height="15" fill="rgb(215,151,11)" fg:x="407" fg:w="1"/><text x="32.0221%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.7721%" y="517" width="0.0781%" height="15" fill="rgb(225,16,24)" fg:x="407" fg:w="1"/><text x="32.0221%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.7721%" y="501" width="0.0781%" height="15" fill="rgb(217,117,5)" fg:x="407" fg:w="1"/><text x="32.0221%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.7721%" y="485" width="0.0781%" height="15" fill="rgb(246,187,53)" fg:x="407" fg:w="1"/><text x="32.0221%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.7721%" y="469" width="0.0781%" height="15" fill="rgb(241,71,40)" fg:x="407" fg:w="1"/><text x="32.0221%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.7721%" y="453" width="0.0781%" height="15" fill="rgb(231,67,39)" fg:x="407" fg:w="1"/><text x="32.0221%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.8501%" y="661" width="0.0781%" height="15" fill="rgb(222,120,24)" fg:x="408" fg:w="1"/><text x="32.1001%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.9282%" y="629" width="0.0781%" height="15" fill="rgb(248,3,3)" fg:x="409" fg:w="1"/><text x="32.1782%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="31.9282%" y="661" width="0.2342%" height="15" fill="rgb(228,218,5)" fg:x="409" fg:w="3"/><text x="32.1782%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="31.9282%" y="645" width="0.2342%" height="15" fill="rgb(212,202,43)" fg:x="409" fg:w="3"/><text x="32.1782%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="32.0062%" y="629" width="0.1561%" height="15" fill="rgb(235,183,2)" fg:x="410" fg:w="2"/><text x="32.2562%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="32.0062%" y="613" width="0.1561%" height="15" fill="rgb(230,165,10)" fg:x="410" fg:w="2"/><text x="32.2562%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="32.0062%" y="597" width="0.1561%" height="15" fill="rgb(219,54,40)" fg:x="410" fg:w="2"/><text x="32.2562%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="32.0062%" y="581" width="0.1561%" height="15" fill="rgb(244,73,9)" fg:x="410" fg:w="2"/><text x="32.2562%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.0843%" y="565" width="0.0781%" height="15" fill="rgb(212,32,45)" fg:x="411" fg:w="1"/><text x="32.3343%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (15 samples, 1.17%)</title><rect x="31.2256%" y="741" width="1.1710%" height="15" fill="rgb(205,58,31)" fg:x="400" fg:w="15"/><text x="31.4756%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (15 samples, 1.17%)</title><rect x="31.2256%" y="725" width="1.1710%" height="15" fill="rgb(250,120,43)" fg:x="400" fg:w="15"/><text x="31.4756%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.70%)</title><rect x="31.6940%" y="709" width="0.7026%" height="15" fill="rgb(235,13,10)" fg:x="406" fg:w="9"/><text x="31.9440%" y="719.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.70%)</title><rect x="31.6940%" y="693" width="0.7026%" height="15" fill="rgb(232,219,31)" fg:x="406" fg:w="9"/><text x="31.9440%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.70%)</title><rect x="31.6940%" y="677" width="0.7026%" height="15" fill="rgb(218,157,51)" fg:x="406" fg:w="9"/><text x="31.9440%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="32.1624%" y="661" width="0.2342%" height="15" fill="rgb(211,91,52)" fg:x="412" fg:w="3"/><text x="32.4124%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="32.1624%" y="645" width="0.2342%" height="15" fill="rgb(240,173,1)" fg:x="412" fg:w="3"/><text x="32.4124%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.2404%" y="629" width="0.1561%" height="15" fill="rgb(248,20,47)" fg:x="413" fg:w="2"/><text x="32.4904%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.2404%" y="613" width="0.1561%" height="15" fill="rgb(217,221,40)" fg:x="413" fg:w="2"/><text x="32.4904%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.2404%" y="597" width="0.1561%" height="15" fill="rgb(226,149,51)" fg:x="413" fg:w="2"/><text x="32.4904%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.2404%" y="581" width="0.1561%" height="15" fill="rgb(252,193,7)" fg:x="413" fg:w="2"/><text x="32.4904%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.2404%" y="565" width="0.1561%" height="15" fill="rgb(205,123,0)" fg:x="413" fg:w="2"/><text x="32.4904%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.2404%" y="549" width="0.1561%" height="15" fill="rgb(233,173,25)" fg:x="413" fg:w="2"/><text x="32.4904%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.2404%" y="533" width="0.1561%" height="15" fill="rgb(216,63,32)" fg:x="413" fg:w="2"/><text x="32.4904%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.3185%" y="517" width="0.0781%" height="15" fill="rgb(209,56,45)" fg:x="414" fg:w="1"/><text x="32.5685%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (18 samples, 1.41%)</title><rect x="31.0695%" y="757" width="1.4052%" height="15" fill="rgb(226,111,49)" fg:x="398" fg:w="18"/><text x="31.3195%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="32.3966%" y="741" width="0.0781%" height="15" fill="rgb(244,181,21)" fg:x="415" fg:w="1"/><text x="32.6466%" y="751.50"></text></g><g><title>plugins_core::build::Build::holding (46 samples, 3.59%)</title><rect x="29.1179%" y="789" width="3.5909%" height="15" fill="rgb(222,126,15)" fg:x="373" fg:w="46"/><text x="29.3679%" y="799.50">plug..</text></g><g><title>plugins_core::tools::set_container (37 samples, 2.89%)</title><rect x="29.8205%" y="773" width="2.8884%" height="15" fill="rgb(222,95,17)" fg:x="382" fg:w="37"/><text x="30.0705%" y="783.50">pl..</text></g><g><title>plugins_core::location::Location::set (3 samples, 0.23%)</title><rect x="32.4746%" y="757" width="0.2342%" height="15" fill="rgb(254,46,5)" fg:x="416" fg:w="3"/><text x="32.7246%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="32.5527%" y="741" width="0.1561%" height="15" fill="rgb(236,216,35)" fg:x="417" fg:w="2"/><text x="32.8027%" y="751.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="32.5527%" y="725" width="0.1561%" height="15" fill="rgb(217,187,26)" fg:x="417" fg:w="2"/><text x="32.8027%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="32.5527%" y="709" width="0.1561%" height="15" fill="rgb(207,192,25)" fg:x="417" fg:w="2"/><text x="32.8027%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="32.5527%" y="693" width="0.1561%" height="15" fill="rgb(253,135,27)" fg:x="417" fg:w="2"/><text x="32.8027%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="32.5527%" y="677" width="0.1561%" height="15" fill="rgb(211,122,29)" fg:x="417" fg:w="2"/><text x="32.8027%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.5527%" y="661" width="0.1561%" height="15" fill="rgb(233,162,40)" fg:x="417" fg:w="2"/><text x="32.8027%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.7088%" y="741" width="0.0781%" height="15" fill="rgb(222,184,47)" fg:x="419" fg:w="1"/><text x="32.9588%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.7869%" y="709" width="0.0781%" height="15" fill="rgb(249,99,23)" fg:x="420" fg:w="1"/><text x="33.0369%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.7869%" y="693" width="0.0781%" height="15" fill="rgb(214,60,12)" fg:x="420" fg:w="1"/><text x="33.0369%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.7869%" y="677" width="0.0781%" height="15" fill="rgb(250,229,36)" fg:x="420" fg:w="1"/><text x="33.0369%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.7869%" y="661" width="0.0781%" height="15" fill="rgb(232,195,10)" fg:x="420" fg:w="1"/><text x="33.0369%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.7869%" y="645" width="0.0781%" height="15" fill="rgb(205,213,31)" fg:x="420" fg:w="1"/><text x="33.0369%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.31%)</title><rect x="32.7088%" y="789" width="0.3123%" height="15" fill="rgb(237,43,8)" fg:x="419" fg:w="4"/><text x="32.9588%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.31%)</title><rect x="32.7088%" y="773" width="0.3123%" height="15" fill="rgb(216,208,3)" fg:x="419" fg:w="4"/><text x="32.9588%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="32.7088%" y="757" width="0.3123%" height="15" fill="rgb(228,179,44)" fg:x="419" fg:w="4"/><text x="32.9588%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="32.7869%" y="741" width="0.2342%" height="15" fill="rgb(230,192,27)" fg:x="420" fg:w="3"/><text x="33.0369%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="32.7869%" y="725" width="0.2342%" height="15" fill="rgb(251,30,38)" fg:x="420" fg:w="3"/><text x="33.0369%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.8649%" y="709" width="0.1561%" height="15" fill="rgb(246,55,52)" fg:x="421" fg:w="2"/><text x="33.1149%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8649%" y="693" width="0.1561%" height="15" fill="rgb(249,79,26)" fg:x="421" fg:w="2"/><text x="33.1149%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.8649%" y="677" width="0.1561%" height="15" fill="rgb(220,202,16)" fg:x="421" fg:w="2"/><text x="33.1149%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8649%" y="661" width="0.1561%" height="15" fill="rgb(250,170,23)" fg:x="421" fg:w="2"/><text x="33.1149%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.8649%" y="645" width="0.1561%" height="15" fill="rgb(230,7,37)" fg:x="421" fg:w="2"/><text x="33.1149%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8649%" y="629" width="0.1561%" height="15" fill="rgb(213,71,1)" fg:x="421" fg:w="2"/><text x="33.1149%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.8649%" y="613" width="0.1561%" height="15" fill="rgb(227,87,39)" fg:x="421" fg:w="2"/><text x="33.1149%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8649%" y="597" width="0.1561%" height="15" fill="rgb(210,41,29)" fg:x="421" fg:w="2"/><text x="33.1149%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.9430%" y="581" width="0.0781%" height="15" fill="rgb(206,191,31)" fg:x="422" fg:w="1"/><text x="33.1930%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="33.0211%" y="757" width="0.0781%" height="15" fill="rgb(247,75,54)" fg:x="423" fg:w="1"/><text x="33.2711%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.0211%" y="741" width="0.0781%" height="15" fill="rgb(208,54,50)" fg:x="423" fg:w="1"/><text x="33.2711%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0211%" y="725" width="0.0781%" height="15" fill="rgb(214,90,37)" fg:x="423" fg:w="1"/><text x="33.2711%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.0991%" y="725" width="0.0781%" height="15" fill="rgb(220,132,6)" fg:x="424" fg:w="1"/><text x="33.3491%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0991%" y="709" width="0.0781%" height="15" fill="rgb(213,167,7)" fg:x="424" fg:w="1"/><text x="33.3491%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.23%)</title><rect x="33.0211%" y="789" width="0.2342%" height="15" fill="rgb(243,36,27)" fg:x="423" fg:w="3"/><text x="33.2711%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.23%)</title><rect x="33.0211%" y="773" width="0.2342%" height="15" fill="rgb(235,147,12)" fg:x="423" fg:w="3"/><text x="33.2711%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="33.0991%" y="757" width="0.1561%" height="15" fill="rgb(212,198,44)" fg:x="424" fg:w="2"/><text x="33.3491%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="33.0991%" y="741" width="0.1561%" height="15" fill="rgb(218,68,50)" fg:x="424" fg:w="2"/><text x="33.3491%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="33.1772%" y="725" width="0.0781%" height="15" fill="rgb(224,79,48)" fg:x="425" fg:w="1"/><text x="33.4272%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="33.1772%" y="709" width="0.0781%" height="15" fill="rgb(213,191,50)" fg:x="425" fg:w="1"/><text x="33.4272%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="33.2553%" y="741" width="0.0781%" height="15" fill="rgb(254,146,10)" fg:x="426" fg:w="1"/><text x="33.5053%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="33.2553%" y="757" width="0.1561%" height="15" fill="rgb(215,175,11)" fg:x="426" fg:w="2"/><text x="33.5053%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="33.3333%" y="741" width="0.0781%" height="15" fill="rgb(207,49,7)" fg:x="427" fg:w="1"/><text x="33.5833%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="33.3333%" y="725" width="0.0781%" height="15" fill="rgb(234,144,29)" fg:x="427" fg:w="1"/><text x="33.5833%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="33.3333%" y="709" width="0.0781%" height="15" fill="rgb(213,222,48)" fg:x="427" fg:w="1"/><text x="33.5833%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.3333%" y="693" width="0.0781%" height="15" fill="rgb(222,8,6)" fg:x="427" fg:w="1"/><text x="33.5833%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="33.3333%" y="677" width="0.0781%" height="15" fill="rgb(221,114,49)" fg:x="427" fg:w="1"/><text x="33.5833%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="33.3333%" y="661" width="0.0781%" height="15" fill="rgb(250,140,42)" fg:x="427" fg:w="1"/><text x="33.5833%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="33.3333%" y="645" width="0.0781%" height="15" fill="rgb(250,150,27)" fg:x="427" fg:w="1"/><text x="33.5833%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.3333%" y="629" width="0.0781%" height="15" fill="rgb(252,159,3)" fg:x="427" fg:w="1"/><text x="33.5833%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="33.3333%" y="613" width="0.0781%" height="15" fill="rgb(241,182,3)" fg:x="427" fg:w="1"/><text x="33.5833%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="33.3333%" y="597" width="0.0781%" height="15" fill="rgb(236,3,9)" fg:x="427" fg:w="1"/><text x="33.5833%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4895%" y="645" width="0.0781%" height="15" fill="rgb(223,227,51)" fg:x="429" fg:w="1"/><text x="33.7395%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4895%" y="629" width="0.0781%" height="15" fill="rgb(232,133,30)" fg:x="429" fg:w="1"/><text x="33.7395%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4895%" y="613" width="0.0781%" height="15" fill="rgb(209,93,27)" fg:x="429" fg:w="1"/><text x="33.7395%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.4895%" y="597" width="0.0781%" height="15" fill="rgb(208,108,34)" fg:x="429" fg:w="1"/><text x="33.7395%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.4895%" y="581" width="0.0781%" height="15" fill="rgb(215,189,13)" fg:x="429" fg:w="1"/><text x="33.7395%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.4895%" y="565" width="0.0781%" height="15" fill="rgb(206,88,23)" fg:x="429" fg:w="1"/><text x="33.7395%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.4895%" y="549" width="0.0781%" height="15" fill="rgb(240,173,0)" fg:x="429" fg:w="1"/><text x="33.7395%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.4895%" y="533" width="0.0781%" height="15" fill="rgb(223,106,52)" fg:x="429" fg:w="1"/><text x="33.7395%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.4895%" y="517" width="0.0781%" height="15" fill="rgb(206,130,16)" fg:x="429" fg:w="1"/><text x="33.7395%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.4895%" y="501" width="0.0781%" height="15" fill="rgb(220,54,25)" fg:x="429" fg:w="1"/><text x="33.7395%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.4895%" y="485" width="0.0781%" height="15" fill="rgb(210,4,38)" fg:x="429" fg:w="1"/><text x="33.7395%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.4895%" y="469" width="0.0781%" height="15" fill="rgb(238,94,39)" fg:x="429" fg:w="1"/><text x="33.7395%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.4895%" y="453" width="0.0781%" height="15" fill="rgb(234,124,34)" fg:x="429" fg:w="1"/><text x="33.7395%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="33.4114%" y="757" width="0.2342%" height="15" fill="rgb(221,91,40)" fg:x="428" fg:w="3"/><text x="33.6614%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="33.4114%" y="741" width="0.2342%" height="15" fill="rgb(246,53,28)" fg:x="428" fg:w="3"/><text x="33.6614%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="33.4114%" y="725" width="0.2342%" height="15" fill="rgb(229,109,7)" fg:x="428" fg:w="3"/><text x="33.6614%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.4895%" y="709" width="0.1561%" height="15" fill="rgb(249,117,8)" fg:x="429" fg:w="2"/><text x="33.7395%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.4895%" y="693" width="0.1561%" height="15" fill="rgb(210,181,1)" fg:x="429" fg:w="2"/><text x="33.7395%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.4895%" y="677" width="0.1561%" height="15" fill="rgb(211,66,1)" fg:x="429" fg:w="2"/><text x="33.7395%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.4895%" y="661" width="0.1561%" height="15" fill="rgb(221,90,14)" fg:x="429" fg:w="2"/><text x="33.7395%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.5675%" y="645" width="0.0781%" height="15" fill="rgb(219,222,44)" fg:x="430" fg:w="1"/><text x="33.8175%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.5675%" y="629" width="0.0781%" height="15" fill="rgb(246,34,33)" fg:x="430" fg:w="1"/><text x="33.8175%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.5675%" y="613" width="0.0781%" height="15" fill="rgb(227,135,41)" fg:x="430" fg:w="1"/><text x="33.8175%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.5675%" y="597" width="0.0781%" height="15" fill="rgb(226,15,14)" fg:x="430" fg:w="1"/><text x="33.8175%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.5675%" y="581" width="0.0781%" height="15" fill="rgb(236,148,47)" fg:x="430" fg:w="1"/><text x="33.8175%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.5675%" y="565" width="0.0781%" height="15" fill="rgb(233,162,52)" fg:x="430" fg:w="1"/><text x="33.8175%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.5675%" y="549" width="0.0781%" height="15" fill="rgb(244,35,28)" fg:x="430" fg:w="1"/><text x="33.8175%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.5675%" y="533" width="0.0781%" height="15" fill="rgb(205,121,10)" fg:x="430" fg:w="1"/><text x="33.8175%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.5675%" y="517" width="0.0781%" height="15" fill="rgb(250,58,18)" fg:x="430" fg:w="1"/><text x="33.8175%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.5675%" y="501" width="0.0781%" height="15" fill="rgb(216,37,13)" fg:x="430" fg:w="1"/><text x="33.8175%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.5675%" y="485" width="0.0781%" height="15" fill="rgb(221,215,42)" fg:x="430" fg:w="1"/><text x="33.8175%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.5675%" y="469" width="0.0781%" height="15" fill="rgb(217,214,19)" fg:x="430" fg:w="1"/><text x="33.8175%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6456%" y="709" width="0.0781%" height="15" fill="rgb(233,139,13)" fg:x="431" fg:w="1"/><text x="33.8956%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6456%" y="693" width="0.0781%" height="15" fill="rgb(247,168,23)" fg:x="431" fg:w="1"/><text x="33.8956%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6456%" y="677" width="0.0781%" height="15" fill="rgb(207,202,1)" fg:x="431" fg:w="1"/><text x="33.8956%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6456%" y="661" width="0.0781%" height="15" fill="rgb(220,155,48)" fg:x="431" fg:w="1"/><text x="33.8956%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6456%" y="645" width="0.0781%" height="15" fill="rgb(250,43,26)" fg:x="431" fg:w="1"/><text x="33.8956%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.6456%" y="629" width="0.0781%" height="15" fill="rgb(212,190,23)" fg:x="431" fg:w="1"/><text x="33.8956%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.6456%" y="613" width="0.0781%" height="15" fill="rgb(216,39,24)" fg:x="431" fg:w="1"/><text x="33.8956%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.6456%" y="597" width="0.0781%" height="15" fill="rgb(252,113,16)" fg:x="431" fg:w="1"/><text x="33.8956%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6456%" y="581" width="0.0781%" height="15" fill="rgb(208,113,19)" fg:x="431" fg:w="1"/><text x="33.8956%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6456%" y="565" width="0.0781%" height="15" fill="rgb(234,107,25)" fg:x="431" fg:w="1"/><text x="33.8956%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.6456%" y="549" width="0.0781%" height="15" fill="rgb(234,217,51)" fg:x="431" fg:w="1"/><text x="33.8956%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.6456%" y="533" width="0.0781%" height="15" fill="rgb(251,29,42)" fg:x="431" fg:w="1"/><text x="33.8956%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.6456%" y="517" width="0.0781%" height="15" fill="rgb(221,62,51)" fg:x="431" fg:w="1"/><text x="33.8956%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.6456%" y="501" width="0.0781%" height="15" fill="rgb(240,192,43)" fg:x="431" fg:w="1"/><text x="33.8956%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6456%" y="485" width="0.0781%" height="15" fill="rgb(224,157,47)" fg:x="431" fg:w="1"/><text x="33.8956%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="33.6456%" y="741" width="0.1561%" height="15" fill="rgb(226,84,45)" fg:x="431" fg:w="2"/><text x="33.8956%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="33.6456%" y="725" width="0.1561%" height="15" fill="rgb(208,207,23)" fg:x="431" fg:w="2"/><text x="33.8956%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7237%" y="709" width="0.0781%" height="15" fill="rgb(253,34,51)" fg:x="432" fg:w="1"/><text x="33.9737%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7237%" y="693" width="0.0781%" height="15" fill="rgb(227,26,34)" fg:x="432" fg:w="1"/><text x="33.9737%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7237%" y="677" width="0.0781%" height="15" fill="rgb(245,75,19)" fg:x="432" fg:w="1"/><text x="33.9737%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.23%)</title><rect x="33.6456%" y="757" width="0.2342%" height="15" fill="rgb(250,191,31)" fg:x="431" fg:w="3"/><text x="33.8956%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="33.8017%" y="741" width="0.0781%" height="15" fill="rgb(224,11,50)" fg:x="433" fg:w="1"/><text x="34.0517%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="33.8017%" y="725" width="0.0781%" height="15" fill="rgb(231,171,7)" fg:x="433" fg:w="1"/><text x="34.0517%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.8017%" y="709" width="0.0781%" height="15" fill="rgb(252,214,10)" fg:x="433" fg:w="1"/><text x="34.0517%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.8017%" y="693" width="0.0781%" height="15" fill="rgb(249,45,46)" fg:x="433" fg:w="1"/><text x="34.0517%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.70%)</title><rect x="33.2553%" y="773" width="0.7026%" height="15" fill="rgb(240,173,7)" fg:x="426" fg:w="9"/><text x="33.5053%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="33.8798%" y="757" width="0.0781%" height="15" fill="rgb(235,214,13)" fg:x="434" fg:w="1"/><text x="34.1298%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="33.8798%" y="741" width="0.0781%" height="15" fill="rgb(245,156,8)" fg:x="434" fg:w="1"/><text x="34.1298%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="33.8798%" y="725" width="0.0781%" height="15" fill="rgb(235,46,12)" fg:x="434" fg:w="1"/><text x="34.1298%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="33.8798%" y="709" width="0.0781%" height="15" fill="rgb(221,81,14)" fg:x="434" fg:w="1"/><text x="34.1298%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="33.8798%" y="693" width="0.0781%" height="15" fill="rgb(238,207,9)" fg:x="434" fg:w="1"/><text x="34.1298%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.8798%" y="677" width="0.0781%" height="15" fill="rgb(224,129,35)" fg:x="434" fg:w="1"/><text x="34.1298%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.8798%" y="661" width="0.0781%" height="15" fill="rgb(243,218,34)" fg:x="434" fg:w="1"/><text x="34.1298%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.8798%" y="645" width="0.0781%" height="15" fill="rgb(220,166,13)" fg:x="434" fg:w="1"/><text x="34.1298%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.8798%" y="629" width="0.0781%" height="15" fill="rgb(227,167,49)" fg:x="434" fg:w="1"/><text x="34.1298%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.8798%" y="613" width="0.0781%" height="15" fill="rgb(234,142,12)" fg:x="434" fg:w="1"/><text x="34.1298%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="33.9578%" y="773" width="0.0781%" height="15" fill="rgb(207,100,48)" fg:x="435" fg:w="1"/><text x="34.2078%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.9578%" y="757" width="0.0781%" height="15" fill="rgb(210,25,14)" fg:x="435" fg:w="1"/><text x="34.2078%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.1140%" y="677" width="0.0781%" height="15" fill="rgb(246,116,27)" fg:x="437" fg:w="1"/><text x="34.3640%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.1140%" y="661" width="0.0781%" height="15" fill="rgb(214,193,42)" fg:x="437" fg:w="1"/><text x="34.3640%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.1140%" y="645" width="0.0781%" height="15" fill="rgb(214,122,8)" fg:x="437" fg:w="1"/><text x="34.3640%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.1140%" y="629" width="0.0781%" height="15" fill="rgb(244,173,18)" fg:x="437" fg:w="1"/><text x="34.3640%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.1140%" y="613" width="0.0781%" height="15" fill="rgb(232,68,19)" fg:x="437" fg:w="1"/><text x="34.3640%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.1140%" y="597" width="0.0781%" height="15" fill="rgb(236,224,1)" fg:x="437" fg:w="1"/><text x="34.3640%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.1140%" y="581" width="0.0781%" height="15" fill="rgb(240,11,8)" fg:x="437" fg:w="1"/><text x="34.3640%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.1140%" y="565" width="0.0781%" height="15" fill="rgb(244,159,20)" fg:x="437" fg:w="1"/><text x="34.3640%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.1140%" y="549" width="0.0781%" height="15" fill="rgb(240,223,54)" fg:x="437" fg:w="1"/><text x="34.3640%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.1140%" y="533" width="0.0781%" height="15" fill="rgb(237,146,5)" fg:x="437" fg:w="1"/><text x="34.3640%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.1140%" y="517" width="0.0781%" height="15" fill="rgb(218,221,32)" fg:x="437" fg:w="1"/><text x="34.3640%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.1140%" y="501" width="0.0781%" height="15" fill="rgb(244,96,26)" fg:x="437" fg:w="1"/><text x="34.3640%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="34.1140%" y="725" width="0.1561%" height="15" fill="rgb(245,184,37)" fg:x="437" fg:w="2"/><text x="34.3640%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="34.1140%" y="709" width="0.1561%" height="15" fill="rgb(248,91,47)" fg:x="437" fg:w="2"/><text x="34.3640%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="34.1140%" y="693" width="0.1561%" height="15" fill="rgb(243,199,8)" fg:x="437" fg:w="2"/><text x="34.3640%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.1920%" y="677" width="0.0781%" height="15" fill="rgb(249,12,15)" fg:x="438" fg:w="1"/><text x="34.4420%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.2701%" y="613" width="0.0781%" height="15" fill="rgb(245,97,12)" fg:x="439" fg:w="1"/><text x="34.5201%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.39%)</title><rect x="34.0359%" y="757" width="0.3903%" height="15" fill="rgb(244,61,1)" fg:x="436" fg:w="5"/><text x="34.2859%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.39%)</title><rect x="34.0359%" y="741" width="0.3903%" height="15" fill="rgb(222,194,10)" fg:x="436" fg:w="5"/><text x="34.2859%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="34.2701%" y="725" width="0.1561%" height="15" fill="rgb(226,178,8)" fg:x="439" fg:w="2"/><text x="34.5201%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="34.2701%" y="709" width="0.1561%" height="15" fill="rgb(241,32,34)" fg:x="439" fg:w="2"/><text x="34.5201%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="34.2701%" y="693" width="0.1561%" height="15" fill="rgb(254,26,6)" fg:x="439" fg:w="2"/><text x="34.5201%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.2701%" y="677" width="0.1561%" height="15" fill="rgb(249,71,11)" fg:x="439" fg:w="2"/><text x="34.5201%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.2701%" y="661" width="0.1561%" height="15" fill="rgb(232,170,27)" fg:x="439" fg:w="2"/><text x="34.5201%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.2701%" y="645" width="0.1561%" height="15" fill="rgb(214,223,17)" fg:x="439" fg:w="2"/><text x="34.5201%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.2701%" y="629" width="0.1561%" height="15" fill="rgb(250,18,15)" fg:x="439" fg:w="2"/><text x="34.5201%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.3482%" y="613" width="0.0781%" height="15" fill="rgb(212,153,51)" fg:x="440" fg:w="1"/><text x="34.5982%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.3482%" y="597" width="0.0781%" height="15" fill="rgb(219,194,12)" fg:x="440" fg:w="1"/><text x="34.5982%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.3482%" y="581" width="0.0781%" height="15" fill="rgb(212,58,17)" fg:x="440" fg:w="1"/><text x="34.5982%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.3482%" y="565" width="0.0781%" height="15" fill="rgb(254,5,10)" fg:x="440" fg:w="1"/><text x="34.5982%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4262%" y="709" width="0.0781%" height="15" fill="rgb(246,91,7)" fg:x="441" fg:w="1"/><text x="34.6762%" y="719.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="34.4262%" y="741" width="0.1561%" height="15" fill="rgb(218,108,49)" fg:x="441" fg:w="2"/><text x="34.6762%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.4262%" y="725" width="0.1561%" height="15" fill="rgb(238,123,20)" fg:x="441" fg:w="2"/><text x="34.6762%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="34.5043%" y="709" width="0.0781%" height="15" fill="rgb(231,69,23)" fg:x="442" fg:w="1"/><text x="34.7543%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="34.5043%" y="693" width="0.0781%" height="15" fill="rgb(230,209,3)" fg:x="442" fg:w="1"/><text x="34.7543%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.5043%" y="677" width="0.0781%" height="15" fill="rgb(231,19,0)" fg:x="442" fg:w="1"/><text x="34.7543%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5043%" y="661" width="0.0781%" height="15" fill="rgb(226,192,25)" fg:x="442" fg:w="1"/><text x="34.7543%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5824%" y="709" width="0.0781%" height="15" fill="rgb(223,175,53)" fg:x="443" fg:w="1"/><text x="34.8324%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.31%)</title><rect x="34.4262%" y="757" width="0.3123%" height="15" fill="rgb(248,35,51)" fg:x="441" fg:w="4"/><text x="34.6762%" y="767.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="34.5824%" y="741" width="0.1561%" height="15" fill="rgb(230,37,26)" fg:x="443" fg:w="2"/><text x="34.8324%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.5824%" y="725" width="0.1561%" height="15" fill="rgb(206,120,22)" fg:x="443" fg:w="2"/><text x="34.8324%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="34.6604%" y="709" width="0.0781%" height="15" fill="rgb(207,165,28)" fg:x="444" fg:w="1"/><text x="34.9104%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.8165%" y="661" width="0.0781%" height="15" fill="rgb(226,23,46)" fg:x="446" fg:w="1"/><text x="35.0665%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.8165%" y="645" width="0.0781%" height="15" fill="rgb(208,130,44)" fg:x="446" fg:w="1"/><text x="35.0665%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.8165%" y="629" width="0.0781%" height="15" fill="rgb(231,67,8)" fg:x="446" fg:w="1"/><text x="35.0665%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.8165%" y="613" width="0.0781%" height="15" fill="rgb(205,183,22)" fg:x="446" fg:w="1"/><text x="35.0665%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.8165%" y="597" width="0.0781%" height="15" fill="rgb(224,47,9)" fg:x="446" fg:w="1"/><text x="35.0665%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8165%" y="581" width="0.0781%" height="15" fill="rgb(250,183,49)" fg:x="446" fg:w="1"/><text x="35.0665%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8165%" y="565" width="0.0781%" height="15" fill="rgb(220,151,39)" fg:x="446" fg:w="1"/><text x="35.0665%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.8165%" y="549" width="0.0781%" height="15" fill="rgb(220,118,20)" fg:x="446" fg:w="1"/><text x="35.0665%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.8165%" y="533" width="0.0781%" height="15" fill="rgb(231,65,51)" fg:x="446" fg:w="1"/><text x="35.0665%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.8165%" y="517" width="0.0781%" height="15" fill="rgb(253,125,37)" fg:x="446" fg:w="1"/><text x="35.0665%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.8165%" y="501" width="0.0781%" height="15" fill="rgb(232,102,6)" fg:x="446" fg:w="1"/><text x="35.0665%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.8165%" y="485" width="0.0781%" height="15" fill="rgb(251,105,13)" fg:x="446" fg:w="1"/><text x="35.0665%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.8165%" y="469" width="0.0781%" height="15" fill="rgb(222,179,29)" fg:x="446" fg:w="1"/><text x="35.0665%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.8165%" y="453" width="0.0781%" height="15" fill="rgb(229,180,53)" fg:x="446" fg:w="1"/><text x="35.0665%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.8165%" y="437" width="0.0781%" height="15" fill="rgb(238,104,13)" fg:x="446" fg:w="1"/><text x="35.0665%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.8165%" y="421" width="0.0781%" height="15" fill="rgb(210,130,5)" fg:x="446" fg:w="1"/><text x="35.0665%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.8165%" y="405" width="0.0781%" height="15" fill="rgb(233,87,49)" fg:x="446" fg:w="1"/><text x="35.0665%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.8946%" y="597" width="0.0781%" height="15" fill="rgb(243,34,9)" fg:x="447" fg:w="1"/><text x="35.1446%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.8946%" y="581" width="0.0781%" height="15" fill="rgb(235,225,10)" fg:x="447" fg:w="1"/><text x="35.1446%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="34.8946%" y="565" width="0.0781%" height="15" fill="rgb(212,0,30)" fg:x="447" fg:w="1"/><text x="35.1446%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="34.7385%" y="709" width="0.3123%" height="15" fill="rgb(211,177,0)" fg:x="445" fg:w="4"/><text x="34.9885%" y="719.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="34.7385%" y="693" width="0.3123%" height="15" fill="rgb(225,220,11)" fg:x="445" fg:w="4"/><text x="34.9885%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="34.7385%" y="677" width="0.3123%" height="15" fill="rgb(215,10,13)" fg:x="445" fg:w="4"/><text x="34.9885%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.8946%" y="661" width="0.1561%" height="15" fill="rgb(240,177,14)" fg:x="447" fg:w="2"/><text x="35.1446%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.8946%" y="645" width="0.1561%" height="15" fill="rgb(243,7,39)" fg:x="447" fg:w="2"/><text x="35.1446%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.8946%" y="629" width="0.1561%" height="15" fill="rgb(212,99,0)" fg:x="447" fg:w="2"/><text x="35.1446%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.8946%" y="613" width="0.1561%" height="15" fill="rgb(225,162,48)" fg:x="447" fg:w="2"/><text x="35.1446%" y="623.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="34.9727%" y="597" width="0.0781%" height="15" fill="rgb(246,16,25)" fg:x="448" fg:w="1"/><text x="35.2227%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.1288%" y="693" width="0.0781%" height="15" fill="rgb(220,150,2)" fg:x="450" fg:w="1"/><text x="35.3788%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.2069%" y="661" width="0.0781%" height="15" fill="rgb(237,113,11)" fg:x="451" fg:w="1"/><text x="35.4569%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2069%" y="645" width="0.0781%" height="15" fill="rgb(236,70,20)" fg:x="451" fg:w="1"/><text x="35.4569%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.2849%" y="661" width="0.0781%" height="15" fill="rgb(234,94,7)" fg:x="452" fg:w="1"/><text x="35.5349%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.2849%" y="645" width="0.0781%" height="15" fill="rgb(250,221,0)" fg:x="452" fg:w="1"/><text x="35.5349%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.2849%" y="629" width="0.0781%" height="15" fill="rgb(245,149,46)" fg:x="452" fg:w="1"/><text x="35.5349%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.2849%" y="613" width="0.0781%" height="15" fill="rgb(215,37,27)" fg:x="452" fg:w="1"/><text x="35.5349%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.2849%" y="597" width="0.0781%" height="15" fill="rgb(232,65,3)" fg:x="452" fg:w="1"/><text x="35.5349%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (213 samples, 16.63%)</title><rect x="18.8134%" y="805" width="16.6276%" height="15" fill="rgb(214,2,16)" fg:x="241" fg:w="213"/><text x="19.0634%" y="815.50">plugins_core::build::Build..</text></g><g><title>plugins_core::build::Build::occupying (28 samples, 2.19%)</title><rect x="33.2553%" y="789" width="2.1858%" height="15" fill="rgb(227,131,50)" fg:x="426" fg:w="28"/><text x="33.5053%" y="799.50">p..</text></g><g><title>plugins_core::tools::set_occupying (18 samples, 1.41%)</title><rect x="34.0359%" y="773" width="1.4052%" height="15" fill="rgb(247,131,45)" fg:x="436" fg:w="18"/><text x="34.2859%" y="783.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (9 samples, 0.70%)</title><rect x="34.7385%" y="757" width="0.7026%" height="15" fill="rgb(215,97,47)" fg:x="445" fg:w="9"/><text x="34.9885%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.70%)</title><rect x="34.7385%" y="741" width="0.7026%" height="15" fill="rgb(233,143,12)" fg:x="445" fg:w="9"/><text x="34.9885%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.70%)</title><rect x="34.7385%" y="725" width="0.7026%" height="15" fill="rgb(222,57,17)" fg:x="445" fg:w="9"/><text x="34.9885%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.39%)</title><rect x="35.0507%" y="709" width="0.3903%" height="15" fill="rgb(214,119,38)" fg:x="449" fg:w="5"/><text x="35.3007%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="35.2069%" y="693" width="0.2342%" height="15" fill="rgb(217,28,47)" fg:x="451" fg:w="3"/><text x="35.4569%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="35.2069%" y="677" width="0.2342%" height="15" fill="rgb(231,14,52)" fg:x="451" fg:w="3"/><text x="35.4569%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.3630%" y="661" width="0.0781%" height="15" fill="rgb(220,158,18)" fg:x="453" fg:w="1"/><text x="35.6130%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.3630%" y="645" width="0.0781%" height="15" fill="rgb(222,143,46)" fg:x="453" fg:w="1"/><text x="35.6130%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.3630%" y="629" width="0.0781%" height="15" fill="rgb(227,165,5)" fg:x="453" fg:w="1"/><text x="35.6130%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.3630%" y="613" width="0.0781%" height="15" fill="rgb(216,222,49)" fg:x="453" fg:w="1"/><text x="35.6130%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.3630%" y="597" width="0.0781%" height="15" fill="rgb(238,73,39)" fg:x="453" fg:w="1"/><text x="35.6130%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.3630%" y="581" width="0.0781%" height="15" fill="rgb(252,115,9)" fg:x="453" fg:w="1"/><text x="35.6130%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.3630%" y="565" width="0.0781%" height="15" fill="rgb(238,202,4)" fg:x="453" fg:w="1"/><text x="35.6130%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.3630%" y="549" width="0.0781%" height="15" fill="rgb(252,153,44)" fg:x="453" fg:w="1"/><text x="35.6130%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="35.4411%" y="805" width="0.0781%" height="15" fill="rgb(235,128,27)" fg:x="454" fg:w="1"/><text x="35.6911%" y="815.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="35.4411%" y="789" width="0.0781%" height="15" fill="rgb(221,121,47)" fg:x="454" fg:w="1"/><text x="35.6911%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="35.4411%" y="773" width="0.0781%" height="15" fill="rgb(247,211,47)" fg:x="454" fg:w="1"/><text x="35.6911%" y="783.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="35.4411%" y="757" width="0.0781%" height="15" fill="rgb(252,47,49)" fg:x="454" fg:w="1"/><text x="35.6911%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="35.4411%" y="741" width="0.0781%" height="15" fill="rgb(219,119,53)" fg:x="454" fg:w="1"/><text x="35.6911%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.4411%" y="725" width="0.0781%" height="15" fill="rgb(243,165,53)" fg:x="454" fg:w="1"/><text x="35.6911%" y="735.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="35.5191%" y="805" width="0.0781%" height="15" fill="rgb(230,12,35)" fg:x="455" fg:w="1"/><text x="35.7691%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.5191%" y="789" width="0.0781%" height="15" fill="rgb(239,57,49)" fg:x="455" fg:w="1"/><text x="35.7691%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.5191%" y="773" width="0.0781%" height="15" fill="rgb(231,154,7)" fg:x="455" fg:w="1"/><text x="35.7691%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.5191%" y="757" width="0.0781%" height="15" fill="rgb(248,81,34)" fg:x="455" fg:w="1"/><text x="35.7691%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.5972%" y="581" width="0.0781%" height="15" fill="rgb(247,9,5)" fg:x="456" fg:w="1"/><text x="35.8472%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="35.5972%" y="757" width="0.1561%" height="15" fill="rgb(228,172,27)" fg:x="456" fg:w="2"/><text x="35.8472%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="35.5972%" y="741" width="0.1561%" height="15" fill="rgb(230,57,44)" fg:x="456" fg:w="2"/><text x="35.8472%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="35.5972%" y="725" width="0.1561%" height="15" fill="rgb(249,35,22)" fg:x="456" fg:w="2"/><text x="35.8472%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="35.5972%" y="709" width="0.1561%" height="15" fill="rgb(250,137,27)" fg:x="456" fg:w="2"/><text x="35.8472%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="35.5972%" y="693" width="0.1561%" height="15" fill="rgb(251,57,31)" fg:x="456" fg:w="2"/><text x="35.8472%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="35.5972%" y="677" width="0.1561%" height="15" fill="rgb(238,60,0)" fg:x="456" fg:w="2"/><text x="35.8472%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="35.5972%" y="661" width="0.1561%" height="15" fill="rgb(242,185,39)" fg:x="456" fg:w="2"/><text x="35.8472%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="35.5972%" y="645" width="0.1561%" height="15" fill="rgb(240,63,43)" fg:x="456" fg:w="2"/><text x="35.8472%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="35.5972%" y="629" width="0.1561%" height="15" fill="rgb(236,155,6)" fg:x="456" fg:w="2"/><text x="35.8472%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="35.5972%" y="613" width="0.1561%" height="15" fill="rgb(215,11,29)" fg:x="456" fg:w="2"/><text x="35.8472%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="35.5972%" y="597" width="0.1561%" height="15" fill="rgb(228,180,48)" fg:x="456" fg:w="2"/><text x="35.8472%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="35.6753%" y="581" width="0.0781%" height="15" fill="rgb(241,102,12)" fg:x="457" fg:w="1"/><text x="35.9253%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.6753%" y="565" width="0.0781%" height="15" fill="rgb(246,213,4)" fg:x="457" fg:w="1"/><text x="35.9253%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.6753%" y="549" width="0.0781%" height="15" fill="rgb(218,134,35)" fg:x="457" fg:w="1"/><text x="35.9253%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="35.6753%" y="533" width="0.0781%" height="15" fill="rgb(251,117,35)" fg:x="457" fg:w="1"/><text x="35.9253%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="35.7533%" y="757" width="0.1561%" height="15" fill="rgb(206,156,45)" fg:x="458" fg:w="2"/><text x="36.0033%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="35.7533%" y="741" width="0.1561%" height="15" fill="rgb(218,52,27)" fg:x="458" fg:w="2"/><text x="36.0033%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="35.7533%" y="725" width="0.1561%" height="15" fill="rgb(238,83,36)" fg:x="458" fg:w="2"/><text x="36.0033%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.7533%" y="709" width="0.1561%" height="15" fill="rgb(218,53,43)" fg:x="458" fg:w="2"/><text x="36.0033%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.7533%" y="693" width="0.1561%" height="15" fill="rgb(239,54,39)" fg:x="458" fg:w="2"/><text x="36.0033%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.7533%" y="677" width="0.1561%" height="15" fill="rgb(212,198,13)" fg:x="458" fg:w="2"/><text x="36.0033%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.7533%" y="661" width="0.1561%" height="15" fill="rgb(234,54,46)" fg:x="458" fg:w="2"/><text x="36.0033%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.8314%" y="645" width="0.0781%" height="15" fill="rgb(217,120,7)" fg:x="459" fg:w="1"/><text x="36.0814%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.8314%" y="629" width="0.0781%" height="15" fill="rgb(246,39,15)" fg:x="459" fg:w="1"/><text x="36.0814%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="35.8314%" y="613" width="0.0781%" height="15" fill="rgb(242,143,31)" fg:x="459" fg:w="1"/><text x="36.0814%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="35.9094%" y="757" width="0.0781%" height="15" fill="rgb(252,60,24)" fg:x="460" fg:w="1"/><text x="36.1594%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="35.9875%" y="741" width="0.0781%" height="15" fill="rgb(249,220,7)" fg:x="461" fg:w="1"/><text x="36.2375%" y="751.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0656%" y="725" width="0.0781%" height="15" fill="rgb(236,67,13)" fg:x="462" fg:w="1"/><text x="36.3156%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.0656%" y="709" width="0.0781%" height="15" fill="rgb(210,62,39)" fg:x="462" fg:w="1"/><text x="36.3156%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.0656%" y="693" width="0.0781%" height="15" fill="rgb(219,122,53)" fg:x="462" fg:w="1"/><text x="36.3156%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.0656%" y="677" width="0.0781%" height="15" fill="rgb(218,87,25)" fg:x="462" fg:w="1"/><text x="36.3156%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.0656%" y="661" width="0.0781%" height="15" fill="rgb(234,179,48)" fg:x="462" fg:w="1"/><text x="36.3156%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.23%)</title><rect x="35.9875%" y="757" width="0.2342%" height="15" fill="rgb(248,90,0)" fg:x="461" fg:w="3"/><text x="36.2375%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="36.0656%" y="741" width="0.1561%" height="15" fill="rgb(207,228,37)" fg:x="462" fg:w="2"/><text x="36.3156%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.1436%" y="725" width="0.0781%" height="15" fill="rgb(235,214,15)" fg:x="463" fg:w="1"/><text x="36.3936%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="36.2217%" y="709" width="0.0781%" height="15" fill="rgb(210,144,39)" fg:x="464" fg:w="1"/><text x="36.4717%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.2217%" y="693" width="0.0781%" height="15" fill="rgb(222,67,41)" fg:x="464" fg:w="1"/><text x="36.4717%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.2217%" y="677" width="0.0781%" height="15" fill="rgb(205,35,37)" fg:x="464" fg:w="1"/><text x="36.4717%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.2217%" y="661" width="0.0781%" height="15" fill="rgb(216,125,40)" fg:x="464" fg:w="1"/><text x="36.4717%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.4559%" y="677" width="0.0781%" height="15" fill="rgb(228,227,20)" fg:x="467" fg:w="1"/><text x="36.7059%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.4559%" y="661" width="0.0781%" height="15" fill="rgb(242,173,45)" fg:x="467" fg:w="1"/><text x="36.7059%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.4559%" y="645" width="0.0781%" height="15" fill="rgb(215,79,24)" fg:x="467" fg:w="1"/><text x="36.7059%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.4559%" y="629" width="0.0781%" height="15" fill="rgb(238,164,38)" fg:x="467" fg:w="1"/><text x="36.7059%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.4559%" y="613" width="0.0781%" height="15" fill="rgb(245,196,38)" fg:x="467" fg:w="1"/><text x="36.7059%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.4559%" y="597" width="0.0781%" height="15" fill="rgb(231,217,29)" fg:x="467" fg:w="1"/><text x="36.7059%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.01%)</title><rect x="35.5972%" y="773" width="1.0148%" height="15" fill="rgb(245,6,4)" fg:x="456" fg:w="13"/><text x="35.8472%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.39%)</title><rect x="36.2217%" y="757" width="0.3903%" height="15" fill="rgb(214,76,49)" fg:x="464" fg:w="5"/><text x="36.4717%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.39%)</title><rect x="36.2217%" y="741" width="0.3903%" height="15" fill="rgb(205,96,12)" fg:x="464" fg:w="5"/><text x="36.4717%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.39%)</title><rect x="36.2217%" y="725" width="0.3903%" height="15" fill="rgb(243,131,4)" fg:x="464" fg:w="5"/><text x="36.4717%" y="735.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.31%)</title><rect x="36.2998%" y="709" width="0.3123%" height="15" fill="rgb(214,114,4)" fg:x="465" fg:w="4"/><text x="36.5498%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.31%)</title><rect x="36.2998%" y="693" width="0.3123%" height="15" fill="rgb(234,215,15)" fg:x="465" fg:w="4"/><text x="36.5498%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="36.5340%" y="677" width="0.0781%" height="15" fill="rgb(250,216,45)" fg:x="468" fg:w="1"/><text x="36.7840%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.5340%" y="661" width="0.0781%" height="15" fill="rgb(236,128,4)" fg:x="468" fg:w="1"/><text x="36.7840%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="36.5340%" y="645" width="0.0781%" height="15" fill="rgb(234,50,33)" fg:x="468" fg:w="1"/><text x="36.7840%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.5340%" y="629" width="0.0781%" height="15" fill="rgb(253,131,37)" fg:x="468" fg:w="1"/><text x="36.7840%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="36.5340%" y="613" width="0.0781%" height="15" fill="rgb(218,55,27)" fg:x="468" fg:w="1"/><text x="36.7840%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="36.5340%" y="597" width="0.0781%" height="15" fill="rgb(241,220,28)" fg:x="468" fg:w="1"/><text x="36.7840%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="36.5340%" y="581" width="0.0781%" height="15" fill="rgb(241,90,48)" fg:x="468" fg:w="1"/><text x="36.7840%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="36.5340%" y="565" width="0.0781%" height="15" fill="rgb(216,43,37)" fg:x="468" fg:w="1"/><text x="36.7840%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5340%" y="549" width="0.0781%" height="15" fill="rgb(207,173,9)" fg:x="468" fg:w="1"/><text x="36.7840%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="36.6120%" y="773" width="0.1561%" height="15" fill="rgb(240,126,30)" fg:x="469" fg:w="2"/><text x="36.8620%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7681%" y="709" width="0.0781%" height="15" fill="rgb(228,178,53)" fg:x="471" fg:w="1"/><text x="37.0181%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.7681%" y="693" width="0.0781%" height="15" fill="rgb(217,33,4)" fg:x="471" fg:w="1"/><text x="37.0181%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (17 samples, 1.33%)</title><rect x="35.5972%" y="805" width="1.3271%" height="15" fill="rgb(206,124,34)" fg:x="456" fg:w="17"/><text x="35.8472%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (17 samples, 1.33%)</title><rect x="35.5972%" y="789" width="1.3271%" height="15" fill="rgb(208,122,53)" fg:x="456" fg:w="17"/><text x="35.8472%" y="799.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="36.7681%" y="773" width="0.1561%" height="15" fill="rgb(215,202,26)" fg:x="471" fg:w="2"/><text x="37.0181%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="36.7681%" y="757" width="0.1561%" height="15" fill="rgb(232,198,31)" fg:x="471" fg:w="2"/><text x="37.0181%" y="767.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="36.7681%" y="741" width="0.1561%" height="15" fill="rgb(222,23,35)" fg:x="471" fg:w="2"/><text x="37.0181%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="36.7681%" y="725" width="0.1561%" height="15" fill="rgb(242,27,53)" fg:x="471" fg:w="2"/><text x="37.0181%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="36.8462%" y="709" width="0.0781%" height="15" fill="rgb(210,216,42)" fg:x="472" fg:w="1"/><text x="37.0962%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.8462%" y="693" width="0.0781%" height="15" fill="rgb(234,39,38)" fg:x="472" fg:w="1"/><text x="37.0962%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="36.8462%" y="677" width="0.0781%" height="15" fill="rgb(235,126,54)" fg:x="472" fg:w="1"/><text x="37.0962%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="36.8462%" y="661" width="0.0781%" height="15" fill="rgb(235,150,33)" fg:x="472" fg:w="1"/><text x="37.0962%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="37.0023%" y="757" width="0.0781%" height="15" fill="rgb(249,49,53)" fg:x="474" fg:w="1"/><text x="37.2523%" y="767.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="37.0023%" y="741" width="0.0781%" height="15" fill="rgb(238,60,50)" fg:x="474" fg:w="1"/><text x="37.2523%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="37.0023%" y="773" width="0.1561%" height="15" fill="rgb(210,5,2)" fg:x="474" fg:w="2"/><text x="37.2523%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="37.0804%" y="757" width="0.0781%" height="15" fill="rgb(214,207,24)" fg:x="475" fg:w="1"/><text x="37.3304%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="37.0804%" y="741" width="0.0781%" height="15" fill="rgb(228,173,2)" fg:x="475" fg:w="1"/><text x="37.3304%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.0804%" y="725" width="0.0781%" height="15" fill="rgb(244,26,8)" fg:x="475" fg:w="1"/><text x="37.3304%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.0804%" y="709" width="0.0781%" height="15" fill="rgb(249,153,35)" fg:x="475" fg:w="1"/><text x="37.3304%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.0804%" y="693" width="0.0781%" height="15" fill="rgb(221,215,40)" fg:x="475" fg:w="1"/><text x="37.3304%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="37.0804%" y="677" width="0.0781%" height="15" fill="rgb(238,106,35)" fg:x="475" fg:w="1"/><text x="37.3304%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="37.0804%" y="661" width="0.0781%" height="15" fill="rgb(207,195,21)" fg:x="475" fg:w="1"/><text x="37.3304%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.0804%" y="645" width="0.0781%" height="15" fill="rgb(205,43,29)" fg:x="475" fg:w="1"/><text x="37.3304%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.0804%" y="629" width="0.0781%" height="15" fill="rgb(236,35,21)" fg:x="475" fg:w="1"/><text x="37.3304%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="37.0804%" y="613" width="0.0781%" height="15" fill="rgb(244,74,8)" fg:x="475" fg:w="1"/><text x="37.3304%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="37.0804%" y="597" width="0.0781%" height="15" fill="rgb(241,229,7)" fg:x="475" fg:w="1"/><text x="37.3304%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.0804%" y="581" width="0.0781%" height="15" fill="rgb(212,223,25)" fg:x="475" fg:w="1"/><text x="37.3304%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.0804%" y="565" width="0.0781%" height="15" fill="rgb(234,58,53)" fg:x="475" fg:w="1"/><text x="37.3304%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.0804%" y="549" width="0.0781%" height="15" fill="rgb(244,36,1)" fg:x="475" fg:w="1"/><text x="37.3304%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.0804%" y="533" width="0.0781%" height="15" fill="rgb(222,40,54)" fg:x="475" fg:w="1"/><text x="37.3304%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.0804%" y="517" width="0.0781%" height="15" fill="rgb(210,207,39)" fg:x="475" fg:w="1"/><text x="37.3304%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.0804%" y="501" width="0.0781%" height="15" fill="rgb(234,52,14)" fg:x="475" fg:w="1"/><text x="37.3304%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.0804%" y="485" width="0.0781%" height="15" fill="rgb(239,108,46)" fg:x="475" fg:w="1"/><text x="37.3304%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.0804%" y="469" width="0.0781%" height="15" fill="rgb(252,223,5)" fg:x="475" fg:w="1"/><text x="37.3304%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.0804%" y="453" width="0.0781%" height="15" fill="rgb(227,181,11)" fg:x="475" fg:w="1"/><text x="37.3304%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.0804%" y="437" width="0.0781%" height="15" fill="rgb(248,126,40)" fg:x="475" fg:w="1"/><text x="37.3304%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="37.0804%" y="421" width="0.0781%" height="15" fill="rgb(243,1,18)" fg:x="475" fg:w="1"/><text x="37.3304%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.0804%" y="405" width="0.0781%" height="15" fill="rgb(214,145,23)" fg:x="475" fg:w="1"/><text x="37.3304%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.0804%" y="389" width="0.0781%" height="15" fill="rgb(241,218,11)" fg:x="475" fg:w="1"/><text x="37.3304%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.1585%" y="725" width="0.0781%" height="15" fill="rgb(214,219,24)" fg:x="476" fg:w="1"/><text x="37.4085%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.1585%" y="709" width="0.0781%" height="15" fill="rgb(235,32,7)" fg:x="476" fg:w="1"/><text x="37.4085%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.1585%" y="693" width="0.0781%" height="15" fill="rgb(227,121,28)" fg:x="476" fg:w="1"/><text x="37.4085%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.1585%" y="677" width="0.0781%" height="15" fill="rgb(216,129,49)" fg:x="476" fg:w="1"/><text x="37.4085%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.1585%" y="661" width="0.0781%" height="15" fill="rgb(207,194,50)" fg:x="476" fg:w="1"/><text x="37.4085%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.1585%" y="645" width="0.0781%" height="15" fill="rgb(207,4,18)" fg:x="476" fg:w="1"/><text x="37.4085%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.1585%" y="629" width="0.0781%" height="15" fill="rgb(213,50,30)" fg:x="476" fg:w="1"/><text x="37.4085%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.1585%" y="613" width="0.0781%" height="15" fill="rgb(208,77,22)" fg:x="476" fg:w="1"/><text x="37.4085%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.1585%" y="597" width="0.0781%" height="15" fill="rgb(244,204,34)" fg:x="476" fg:w="1"/><text x="37.4085%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.1585%" y="581" width="0.0781%" height="15" fill="rgb(230,20,17)" fg:x="476" fg:w="1"/><text x="37.4085%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.1585%" y="565" width="0.0781%" height="15" fill="rgb(237,83,15)" fg:x="476" fg:w="1"/><text x="37.4085%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.1585%" y="549" width="0.0781%" height="15" fill="rgb(221,109,25)" fg:x="476" fg:w="1"/><text x="37.4085%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1585%" y="533" width="0.0781%" height="15" fill="rgb(205,194,52)" fg:x="476" fg:w="1"/><text x="37.4085%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="37.1585%" y="773" width="0.2342%" height="15" fill="rgb(244,173,54)" fg:x="476" fg:w="3"/><text x="37.4085%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="37.1585%" y="757" width="0.2342%" height="15" fill="rgb(227,181,18)" fg:x="476" fg:w="3"/><text x="37.4085%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="37.1585%" y="741" width="0.2342%" height="15" fill="rgb(238,36,30)" fg:x="476" fg:w="3"/><text x="37.4085%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.2365%" y="725" width="0.1561%" height="15" fill="rgb(254,85,0)" fg:x="477" fg:w="2"/><text x="37.4865%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.2365%" y="709" width="0.1561%" height="15" fill="rgb(247,63,33)" fg:x="477" fg:w="2"/><text x="37.4865%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.3146%" y="693" width="0.0781%" height="15" fill="rgb(220,7,54)" fg:x="478" fg:w="1"/><text x="37.5646%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.3146%" y="677" width="0.0781%" height="15" fill="rgb(238,227,21)" fg:x="478" fg:w="1"/><text x="37.5646%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.3146%" y="661" width="0.0781%" height="15" fill="rgb(237,29,31)" fg:x="478" fg:w="1"/><text x="37.5646%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.3146%" y="645" width="0.0781%" height="15" fill="rgb(211,21,50)" fg:x="478" fg:w="1"/><text x="37.5646%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.3146%" y="629" width="0.0781%" height="15" fill="rgb(239,119,2)" fg:x="478" fg:w="1"/><text x="37.5646%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.4707%" y="693" width="0.0781%" height="15" fill="rgb(250,2,39)" fg:x="480" fg:w="1"/><text x="37.7207%" y="703.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="37.3927%" y="725" width="0.2342%" height="15" fill="rgb(244,46,53)" fg:x="479" fg:w="3"/><text x="37.6427%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="37.4707%" y="709" width="0.1561%" height="15" fill="rgb(209,21,19)" fg:x="480" fg:w="2"/><text x="37.7207%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.5488%" y="693" width="0.0781%" height="15" fill="rgb(236,145,4)" fg:x="481" fg:w="1"/><text x="37.7988%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.5488%" y="677" width="0.0781%" height="15" fill="rgb(220,133,36)" fg:x="481" fg:w="1"/><text x="37.7988%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.5488%" y="661" width="0.0781%" height="15" fill="rgb(244,18,3)" fg:x="481" fg:w="1"/><text x="37.7988%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.5488%" y="645" width="0.0781%" height="15" fill="rgb(232,171,48)" fg:x="481" fg:w="1"/><text x="37.7988%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.5488%" y="629" width="0.0781%" height="15" fill="rgb(223,223,53)" fg:x="481" fg:w="1"/><text x="37.7988%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.6269%" y="693" width="0.0781%" height="15" fill="rgb(246,92,13)" fg:x="482" fg:w="1"/><text x="37.8769%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6269%" y="677" width="0.0781%" height="15" fill="rgb(229,171,10)" fg:x="482" fg:w="1"/><text x="37.8769%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.78%)</title><rect x="37.0023%" y="789" width="0.7806%" height="15" fill="rgb(213,131,26)" fg:x="474" fg:w="10"/><text x="37.2523%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.39%)</title><rect x="37.3927%" y="773" width="0.3903%" height="15" fill="rgb(242,87,54)" fg:x="479" fg:w="5"/><text x="37.6427%" y="783.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.39%)</title><rect x="37.3927%" y="757" width="0.3903%" height="15" fill="rgb(237,21,35)" fg:x="479" fg:w="5"/><text x="37.6427%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.39%)</title><rect x="37.3927%" y="741" width="0.3903%" height="15" fill="rgb(253,13,47)" fg:x="479" fg:w="5"/><text x="37.6427%" y="751.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="37.6269%" y="725" width="0.1561%" height="15" fill="rgb(215,122,49)" fg:x="482" fg:w="2"/><text x="37.8769%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="37.6269%" y="709" width="0.1561%" height="15" fill="rgb(209,179,30)" fg:x="482" fg:w="2"/><text x="37.8769%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="37.7049%" y="693" width="0.0781%" height="15" fill="rgb(235,100,24)" fg:x="483" fg:w="1"/><text x="37.9549%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.7049%" y="677" width="0.0781%" height="15" fill="rgb(209,67,24)" fg:x="483" fg:w="1"/><text x="37.9549%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="37.7049%" y="661" width="0.0781%" height="15" fill="rgb(206,74,32)" fg:x="483" fg:w="1"/><text x="37.9549%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.7049%" y="645" width="0.0781%" height="15" fill="rgb(212,45,25)" fg:x="483" fg:w="1"/><text x="37.9549%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="37.7049%" y="629" width="0.0781%" height="15" fill="rgb(239,26,3)" fg:x="483" fg:w="1"/><text x="37.9549%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7049%" y="613" width="0.0781%" height="15" fill="rgb(218,36,15)" fg:x="483" fg:w="1"/><text x="37.9549%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7049%" y="597" width="0.0781%" height="15" fill="rgb(206,108,24)" fg:x="483" fg:w="1"/><text x="37.9549%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.7049%" y="581" width="0.0781%" height="15" fill="rgb(234,204,42)" fg:x="483" fg:w="1"/><text x="37.9549%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.7830%" y="725" width="0.0781%" height="15" fill="rgb(229,2,11)" fg:x="484" fg:w="1"/><text x="38.0330%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.7830%" y="709" width="0.0781%" height="15" fill="rgb(221,20,48)" fg:x="484" fg:w="1"/><text x="38.0330%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.7830%" y="693" width="0.0781%" height="15" fill="rgb(244,164,10)" fg:x="484" fg:w="1"/><text x="38.0330%" y="703.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.23%)</title><rect x="37.7830%" y="757" width="0.2342%" height="15" fill="rgb(243,229,2)" fg:x="484" fg:w="3"/><text x="38.0330%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.23%)</title><rect x="37.7830%" y="741" width="0.2342%" height="15" fill="rgb(232,131,37)" fg:x="484" fg:w="3"/><text x="38.0330%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="37.8610%" y="725" width="0.1561%" height="15" fill="rgb(217,156,11)" fg:x="485" fg:w="2"/><text x="38.1110%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.9391%" y="709" width="0.0781%" height="15" fill="rgb(239,99,48)" fg:x="486" fg:w="1"/><text x="38.1891%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="37.9391%" y="693" width="0.0781%" height="15" fill="rgb(231,209,9)" fg:x="486" fg:w="1"/><text x="38.1891%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.9391%" y="677" width="0.0781%" height="15" fill="rgb(254,97,27)" fg:x="486" fg:w="1"/><text x="38.1891%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="37.9391%" y="661" width="0.0781%" height="15" fill="rgb(223,151,38)" fg:x="486" fg:w="1"/><text x="38.1891%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="37.9391%" y="645" width="0.0781%" height="15" fill="rgb(219,206,35)" fg:x="486" fg:w="1"/><text x="38.1891%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.9391%" y="629" width="0.0781%" height="15" fill="rgb(216,130,31)" fg:x="486" fg:w="1"/><text x="38.1891%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.31%)</title><rect x="37.7830%" y="789" width="0.3123%" height="15" fill="rgb(251,97,34)" fg:x="484" fg:w="4"/><text x="38.0330%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.31%)</title><rect x="37.7830%" y="773" width="0.3123%" height="15" fill="rgb(246,159,47)" fg:x="484" fg:w="4"/><text x="38.0330%" y="783.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="38.0172%" y="757" width="0.0781%" height="15" fill="rgb(232,87,10)" fg:x="487" fg:w="1"/><text x="38.2672%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="38.1733%" y="773" width="0.0781%" height="15" fill="rgb(249,1,37)" fg:x="489" fg:w="1"/><text x="38.4233%" y="783.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="38.1733%" y="757" width="0.0781%" height="15" fill="rgb(239,135,14)" fg:x="489" fg:w="1"/><text x="38.4233%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="38.1733%" y="741" width="0.0781%" height="15" fill="rgb(253,116,46)" fg:x="489" fg:w="1"/><text x="38.4233%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.1733%" y="725" width="0.0781%" height="15" fill="rgb(222,217,37)" fg:x="489" fg:w="1"/><text x="38.4233%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="38.1733%" y="709" width="0.0781%" height="15" fill="rgb(252,96,8)" fg:x="489" fg:w="1"/><text x="38.4233%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.1733%" y="693" width="0.0781%" height="15" fill="rgb(254,103,41)" fg:x="489" fg:w="1"/><text x="38.4233%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="38.3294%" y="741" width="0.0781%" height="15" fill="rgb(218,213,19)" fg:x="491" fg:w="1"/><text x="38.5794%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="38.3294%" y="725" width="0.0781%" height="15" fill="rgb(253,95,21)" fg:x="491" fg:w="1"/><text x="38.5794%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.3294%" y="709" width="0.0781%" height="15" fill="rgb(229,26,28)" fg:x="491" fg:w="1"/><text x="38.5794%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4856%" y="693" width="0.0781%" height="15" fill="rgb(230,129,16)" fg:x="493" fg:w="1"/><text x="38.7356%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4856%" y="677" width="0.0781%" height="15" fill="rgb(236,126,17)" fg:x="493" fg:w="1"/><text x="38.7356%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new (5 samples, 0.39%)</title><rect x="38.2514%" y="773" width="0.3903%" height="15" fill="rgb(209,33,33)" fg:x="490" fg:w="5"/><text x="38.5014%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.39%)</title><rect x="38.2514%" y="757" width="0.3903%" height="15" fill="rgb(227,85,29)" fg:x="490" fg:w="5"/><text x="38.5014%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="38.4075%" y="741" width="0.2342%" height="15" fill="rgb(241,53,46)" fg:x="492" fg:w="3"/><text x="38.6575%" y="751.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="38.4075%" y="725" width="0.2342%" height="15" fill="rgb(228,167,53)" fg:x="492" fg:w="3"/><text x="38.6575%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="38.4075%" y="709" width="0.2342%" height="15" fill="rgb(238,195,45)" fg:x="492" fg:w="3"/><text x="38.6575%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.5636%" y="693" width="0.0781%" height="15" fill="rgb(252,124,45)" fg:x="494" fg:w="1"/><text x="38.8136%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.5636%" y="677" width="0.0781%" height="15" fill="rgb(251,38,35)" fg:x="494" fg:w="1"/><text x="38.8136%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (23 samples, 1.80%)</title><rect x="36.9243%" y="805" width="1.7955%" height="15" fill="rgb(227,33,2)" fg:x="473" fg:w="23"/><text x="37.1743%" y="815.50">p..</text></g><g><title>plugins_core::build::Build::new_world (8 samples, 0.62%)</title><rect x="38.0952%" y="789" width="0.6245%" height="15" fill="rgb(223,157,46)" fg:x="488" fg:w="8"/><text x="38.3452%" y="799.50"></text></g><g><title>kernel::model::entity::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="38.6417%" y="773" width="0.0781%" height="15" fill="rgb(222,78,41)" fg:x="495" fg:w="1"/><text x="38.8917%" y="783.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (414 samples, 32.32%)</title><rect x="6.4793%" y="821" width="32.3185%" height="15" fill="rgb(248,176,11)" fg:x="83" fg:w="414"/><text x="6.7293%" y="831.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="38.7198%" y="805" width="0.0781%" height="15" fill="rgb(241,221,18)" fg:x="496" fg:w="1"/><text x="38.9698%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="38.7198%" y="789" width="0.0781%" height="15" fill="rgb(218,85,22)" fg:x="496" fg:w="1"/><text x="38.9698%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.7978%" y="821" width="0.0781%" height="15" fill="rgb(222,223,7)" fg:x="497" fg:w="1"/><text x="39.0478%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.9539%" y="789" width="0.0781%" height="15" fill="rgb(254,59,39)" fg:x="499" fg:w="1"/><text x="39.2039%" y="799.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.23%)</title><rect x="38.8759%" y="805" width="0.2342%" height="15" fill="rgb(247,100,27)" fg:x="498" fg:w="3"/><text x="39.1259%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.0320%" y="789" width="0.0781%" height="15" fill="rgb(237,207,10)" fg:x="500" fg:w="1"/><text x="39.2820%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.1101%" y="805" width="0.0781%" height="15" fill="rgb(220,121,28)" fg:x="501" fg:w="1"/><text x="39.3601%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.1101%" y="789" width="0.0781%" height="15" fill="rgb(213,223,20)" fg:x="501" fg:w="1"/><text x="39.3601%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.1101%" y="773" width="0.0781%" height="15" fill="rgb(205,121,27)" fg:x="501" fg:w="1"/><text x="39.3601%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.1101%" y="757" width="0.0781%" height="15" fill="rgb(253,24,53)" fg:x="501" fg:w="1"/><text x="39.3601%" y="767.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="39.1101%" y="741" width="0.0781%" height="15" fill="rgb(224,224,47)" fg:x="501" fg:w="1"/><text x="39.3601%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="39.1101%" y="725" width="0.0781%" height="15" fill="rgb(250,125,36)" fg:x="501" fg:w="1"/><text x="39.3601%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="39.1101%" y="709" width="0.0781%" height="15" fill="rgb(240,144,38)" fg:x="501" fg:w="1"/><text x="39.3601%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.1101%" y="693" width="0.0781%" height="15" fill="rgb(250,15,50)" fg:x="501" fg:w="1"/><text x="39.3601%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.1101%" y="677" width="0.0781%" height="15" fill="rgb(210,24,26)" fg:x="501" fg:w="1"/><text x="39.3601%" y="687.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="39.1101%" y="661" width="0.0781%" height="15" fill="rgb(234,53,53)" fg:x="501" fg:w="1"/><text x="39.3601%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.1101%" y="645" width="0.0781%" height="15" fill="rgb(208,108,28)" fg:x="501" fg:w="1"/><text x="39.3601%" y="655.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="39.1101%" y="629" width="0.0781%" height="15" fill="rgb(227,143,7)" fg:x="501" fg:w="1"/><text x="39.3601%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.08%)</title><rect x="39.1101%" y="613" width="0.0781%" height="15" fill="rgb(238,189,38)" fg:x="501" fg:w="1"/><text x="39.3601%" y="623.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="39.1881%" y="805" width="0.0781%" height="15" fill="rgb(222,69,15)" fg:x="502" fg:w="1"/><text x="39.4381%" y="815.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="39.2662%" y="805" width="0.1561%" height="15" fill="rgb(213,169,7)" fg:x="503" fg:w="2"/><text x="39.5162%" y="815.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="39.2662%" y="789" width="0.1561%" height="15" fill="rgb(251,219,4)" fg:x="503" fg:w="2"/><text x="39.5162%" y="799.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="39.2662%" y="773" width="0.1561%" height="15" fill="rgb(241,55,40)" fg:x="503" fg:w="2"/><text x="39.5162%" y="783.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="39.2662%" y="757" width="0.1561%" height="15" fill="rgb(243,57,30)" fg:x="503" fg:w="2"/><text x="39.5162%" y="767.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="39.2662%" y="741" width="0.1561%" height="15" fill="rgb(234,50,30)" fg:x="503" fg:w="2"/><text x="39.5162%" y="751.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="39.2662%" y="725" width="0.1561%" height="15" fill="rgb(239,23,42)" fg:x="503" fg:w="2"/><text x="39.5162%" y="735.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="39.2662%" y="709" width="0.1561%" height="15" fill="rgb(217,38,19)" fg:x="503" fg:w="2"/><text x="39.5162%" y="719.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="39.2662%" y="693" width="0.1561%" height="15" fill="rgb(215,179,16)" fg:x="503" fg:w="2"/><text x="39.5162%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="39.5004%" y="773" width="0.0781%" height="15" fill="rgb(254,21,37)" fg:x="506" fg:w="1"/><text x="39.7504%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::array::iter::IntoIter&lt;alloc::rc::Rc&lt;dyn kernel::plugins::mw::Middleware&gt;,1_usize&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="39.5004%" y="757" width="0.0781%" height="15" fill="rgb(219,207,48)" fg:x="506" fg:w="1"/><text x="39.7504%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="39.5785%" y="757" width="0.0781%" height="15" fill="rgb(227,225,41)" fg:x="507" fg:w="1"/><text x="39.8285%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.5785%" y="741" width="0.0781%" height="15" fill="rgb(223,130,1)" fg:x="507" fg:w="1"/><text x="39.8285%" y="751.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.5785%" y="725" width="0.0781%" height="15" fill="rgb(249,54,42)" fg:x="507" fg:w="1"/><text x="39.8285%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="39.7346%" y="709" width="0.3123%" height="15" fill="rgb(248,69,25)" fg:x="509" fg:w="4"/><text x="39.9846%" y="719.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="39.8126%" y="693" width="0.2342%" height="15" fill="rgb(234,21,32)" fg:x="510" fg:w="3"/><text x="40.0626%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.9688%" y="677" width="0.0781%" height="15" fill="rgb(252,136,6)" fg:x="512" fg:w="1"/><text x="40.2188%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.9688%" y="661" width="0.0781%" height="15" fill="rgb(245,87,12)" fg:x="512" fg:w="1"/><text x="40.2188%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.47%)</title><rect x="39.6565%" y="725" width="0.4684%" height="15" fill="rgb(208,12,15)" fg:x="508" fg:w="6"/><text x="39.9065%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.0468%" y="709" width="0.0781%" height="15" fill="rgb(250,98,2)" fg:x="513" fg:w="1"/><text x="40.2968%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.0468%" y="693" width="0.0781%" height="15" fill="rgb(205,213,15)" fg:x="513" fg:w="1"/><text x="40.2968%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.0468%" y="677" width="0.0781%" height="15" fill="rgb(248,192,44)" fg:x="513" fg:w="1"/><text x="40.2968%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.47%)</title><rect x="40.2030%" y="709" width="0.4684%" height="15" fill="rgb(221,89,17)" fg:x="515" fg:w="6"/><text x="40.4530%" y="719.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="40.2810%" y="693" width="0.3903%" height="15" fill="rgb(209,55,3)" fg:x="516" fg:w="5"/><text x="40.5310%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.31%)</title><rect x="40.3591%" y="677" width="0.3123%" height="15" fill="rgb(247,23,45)" fg:x="517" fg:w="4"/><text x="40.6091%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="40.4372%" y="661" width="0.2342%" height="15" fill="rgb(235,152,23)" fg:x="518" fg:w="3"/><text x="40.6872%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="40.5933%" y="645" width="0.0781%" height="15" fill="rgb(244,63,13)" fg:x="520" fg:w="1"/><text x="40.8433%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.5933%" y="629" width="0.0781%" height="15" fill="rgb(227,30,37)" fg:x="520" fg:w="1"/><text x="40.8433%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="40.5933%" y="613" width="0.0781%" height="15" fill="rgb(224,49,42)" fg:x="520" fg:w="1"/><text x="40.8433%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.6714%" y="661" width="0.0781%" height="15" fill="rgb(218,129,5)" fg:x="521" fg:w="1"/><text x="40.9214%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="40.7494%" y="661" width="0.0781%" height="15" fill="rgb(240,199,54)" fg:x="522" fg:w="1"/><text x="40.9994%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.7494%" y="645" width="0.0781%" height="15" fill="rgb(234,31,13)" fg:x="522" fg:w="1"/><text x="40.9994%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.7494%" y="629" width="0.0781%" height="15" fill="rgb(219,73,54)" fg:x="522" fg:w="1"/><text x="40.9994%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.7494%" y="613" width="0.0781%" height="15" fill="rgb(251,162,10)" fg:x="522" fg:w="1"/><text x="40.9994%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="40.7494%" y="597" width="0.0781%" height="15" fill="rgb(240,138,47)" fg:x="522" fg:w="1"/><text x="40.9994%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.7494%" y="581" width="0.0781%" height="15" fill="rgb(216,138,26)" fg:x="522" fg:w="1"/><text x="40.9994%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="40.7494%" y="565" width="0.0781%" height="15" fill="rgb(243,17,35)" fg:x="522" fg:w="1"/><text x="40.9994%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.31%)</title><rect x="40.6714%" y="693" width="0.3123%" height="15" fill="rgb(241,60,18)" fg:x="521" fg:w="4"/><text x="40.9214%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="40.6714%" y="677" width="0.3123%" height="15" fill="rgb(234,2,44)" fg:x="521" fg:w="4"/><text x="40.9214%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="40.8275%" y="661" width="0.1561%" height="15" fill="rgb(225,225,33)" fg:x="523" fg:w="2"/><text x="41.0775%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.9055%" y="645" width="0.0781%" height="15" fill="rgb(234,50,31)" fg:x="524" fg:w="1"/><text x="41.1555%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.9055%" y="629" width="0.0781%" height="15" fill="rgb(249,6,25)" fg:x="524" fg:w="1"/><text x="41.1555%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="40.9836%" y="693" width="0.0781%" height="15" fill="rgb(241,5,17)" fg:x="525" fg:w="1"/><text x="41.2336%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="41.1397%" y="661" width="0.0781%" height="15" fill="rgb(207,116,10)" fg:x="527" fg:w="1"/><text x="41.3897%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.1397%" y="645" width="0.0781%" height="15" fill="rgb(222,128,18)" fg:x="527" fg:w="1"/><text x="41.3897%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.2178%" y="645" width="0.0781%" height="15" fill="rgb(229,109,25)" fg:x="528" fg:w="1"/><text x="41.4678%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="41.2959%" y="629" width="0.0781%" height="15" fill="rgb(222,102,25)" fg:x="529" fg:w="1"/><text x="41.5459%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="41.3739%" y="629" width="0.3903%" height="15" fill="rgb(239,211,5)" fg:x="530" fg:w="5"/><text x="41.6239%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="41.4520%" y="613" width="0.3123%" height="15" fill="rgb(223,136,26)" fg:x="531" fg:w="4"/><text x="41.7020%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.31%)</title><rect x="41.4520%" y="597" width="0.3123%" height="15" fill="rgb(227,30,15)" fg:x="531" fg:w="4"/><text x="41.7020%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.31%)</title><rect x="41.4520%" y="581" width="0.3123%" height="15" fill="rgb(247,76,4)" fg:x="531" fg:w="4"/><text x="41.7020%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="41.6081%" y="565" width="0.1561%" height="15" fill="rgb(245,38,48)" fg:x="533" fg:w="2"/><text x="41.8581%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="41.6081%" y="549" width="0.1561%" height="15" fill="rgb(210,220,14)" fg:x="533" fg:w="2"/><text x="41.8581%" y="559.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="41.6081%" y="533" width="0.1561%" height="15" fill="rgb(224,60,51)" fg:x="533" fg:w="2"/><text x="41.8581%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="41.2959%" y="645" width="0.5464%" height="15" fill="rgb(212,133,49)" fg:x="529" fg:w="7"/><text x="41.5459%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.7642%" y="629" width="0.0781%" height="15" fill="rgb(231,39,22)" fg:x="535" fg:w="1"/><text x="42.0142%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.94%)</title><rect x="41.1397%" y="677" width="0.9368%" height="15" fill="rgb(236,173,22)" fg:x="527" fg:w="12"/><text x="41.3897%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.86%)</title><rect x="41.2178%" y="661" width="0.8587%" height="15" fill="rgb(210,70,0)" fg:x="528" fg:w="11"/><text x="41.4678%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="41.8423%" y="645" width="0.2342%" height="15" fill="rgb(215,170,11)" fg:x="536" fg:w="3"/><text x="42.0923%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="41.8423%" y="629" width="0.2342%" height="15" fill="rgb(220,154,28)" fg:x="536" fg:w="3"/><text x="42.0923%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.9984%" y="613" width="0.0781%" height="15" fill="rgb(240,160,41)" fg:x="538" fg:w="1"/><text x="42.2484%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.9984%" y="597" width="0.0781%" height="15" fill="rgb(243,215,41)" fg:x="538" fg:w="1"/><text x="42.2484%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.9984%" y="581" width="0.0781%" height="15" fill="rgb(214,208,31)" fg:x="538" fg:w="1"/><text x="42.2484%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="41.9984%" y="565" width="0.0781%" height="15" fill="rgb(247,57,22)" fg:x="538" fg:w="1"/><text x="42.2484%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.09%)</title><rect x="41.0617%" y="693" width="1.0929%" height="15" fill="rgb(228,73,52)" fg:x="526" fg:w="14"/><text x="41.3117%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="42.0765%" y="677" width="0.0781%" height="15" fill="rgb(252,60,9)" fg:x="539" fg:w="1"/><text x="42.3265%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.56%)</title><rect x="40.6714%" y="709" width="1.5613%" height="15" fill="rgb(233,9,51)" fg:x="521" fg:w="20"/><text x="40.9214%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="42.1546%" y="693" width="0.0781%" height="15" fill="rgb(223,67,14)" fg:x="540" fg:w="1"/><text x="42.4046%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="42.1546%" y="677" width="0.0781%" height="15" fill="rgb(222,86,2)" fg:x="540" fg:w="1"/><text x="42.4046%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.34%)</title><rect x="40.1249%" y="725" width="2.3419%" height="15" fill="rgb(243,58,54)" fg:x="514" fg:w="30"/><text x="40.3749%" y="735.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="42.2326%" y="709" width="0.2342%" height="15" fill="rgb(210,200,39)" fg:x="541" fg:w="3"/><text x="42.4826%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="42.2326%" y="693" width="0.2342%" height="15" fill="rgb(238,135,9)" fg:x="541" fg:w="3"/><text x="42.4826%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="42.3107%" y="677" width="0.1561%" height="15" fill="rgb(232,179,7)" fg:x="542" fg:w="2"/><text x="42.5607%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="42.3888%" y="661" width="0.0781%" height="15" fill="rgb(245,65,41)" fg:x="543" fg:w="1"/><text x="42.6388%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.3888%" y="645" width="0.0781%" height="15" fill="rgb(227,43,8)" fg:x="543" fg:w="1"/><text x="42.6388%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (38 samples, 2.97%)</title><rect x="39.6565%" y="741" width="2.9664%" height="15" fill="rgb(235,91,14)" fg:x="508" fg:w="38"/><text x="39.9065%" y="751.50">&lt;se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="42.4668%" y="725" width="0.1561%" height="15" fill="rgb(235,219,31)" fg:x="544" fg:w="2"/><text x="42.7168%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.7010%" y="677" width="0.0781%" height="15" fill="rgb(227,121,25)" fg:x="547" fg:w="1"/><text x="42.9510%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.7010%" y="661" width="0.0781%" height="15" fill="rgb(254,129,24)" fg:x="547" fg:w="1"/><text x="42.9510%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.7791%" y="661" width="0.0781%" height="15" fill="rgb(226,144,49)" fg:x="548" fg:w="1"/><text x="43.0291%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.7791%" y="645" width="0.0781%" height="15" fill="rgb(214,187,32)" fg:x="548" fg:w="1"/><text x="43.0291%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="42.8571%" y="661" width="0.0781%" height="15" fill="rgb(243,129,46)" fg:x="549" fg:w="1"/><text x="43.1071%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.8571%" y="645" width="0.0781%" height="15" fill="rgb(221,185,35)" fg:x="549" fg:w="1"/><text x="43.1071%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.8571%" y="629" width="0.0781%" height="15" fill="rgb(205,0,32)" fg:x="549" fg:w="1"/><text x="43.1071%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.8571%" y="613" width="0.0781%" height="15" fill="rgb(229,179,12)" fg:x="549" fg:w="1"/><text x="43.1071%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="42.6230%" y="741" width="0.3903%" height="15" fill="rgb(252,107,19)" fg:x="546" fg:w="5"/><text x="42.8730%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="42.6230%" y="725" width="0.3903%" height="15" fill="rgb(220,95,27)" fg:x="546" fg:w="5"/><text x="42.8730%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="42.6230%" y="709" width="0.3903%" height="15" fill="rgb(240,113,40)" fg:x="546" fg:w="5"/><text x="42.8730%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="42.6230%" y="693" width="0.3903%" height="15" fill="rgb(208,4,43)" fg:x="546" fg:w="5"/><text x="42.8730%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="42.7791%" y="677" width="0.2342%" height="15" fill="rgb(247,189,30)" fg:x="548" fg:w="3"/><text x="43.0291%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.9352%" y="661" width="0.0781%" height="15" fill="rgb(231,157,17)" fg:x="550" fg:w="1"/><text x="43.1852%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.9352%" y="645" width="0.0781%" height="15" fill="rgb(224,139,6)" fg:x="550" fg:w="1"/><text x="43.1852%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="43.0913%" y="709" width="0.1561%" height="15" fill="rgb(223,83,16)" fg:x="552" fg:w="2"/><text x="43.3413%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.1694%" y="693" width="0.0781%" height="15" fill="rgb(232,211,20)" fg:x="553" fg:w="1"/><text x="43.4194%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.4817%" y="677" width="0.1561%" height="15" fill="rgb(225,203,35)" fg:x="557" fg:w="2"/><text x="43.7317%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.6378%" y="677" width="0.0781%" height="15" fill="rgb(215,211,44)" fg:x="559" fg:w="1"/><text x="43.8878%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.7939%" y="661" width="0.1561%" height="15" fill="rgb(248,213,26)" fg:x="561" fg:w="2"/><text x="44.0439%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.39%)</title><rect x="43.9500%" y="661" width="0.3903%" height="15" fill="rgb(214,23,52)" fg:x="563" fg:w="5"/><text x="44.2000%" y="671.50"></text></g><g><title>__libc_free (4 samples, 0.31%)</title><rect x="44.0281%" y="645" width="0.3123%" height="15" fill="rgb(225,173,50)" fg:x="564" fg:w="4"/><text x="44.2781%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="44.4184%" y="645" width="0.2342%" height="15" fill="rgb(206,150,22)" fg:x="569" fg:w="3"/><text x="44.6684%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.4965%" y="629" width="0.1561%" height="15" fill="rgb(239,64,23)" fg:x="570" fg:w="2"/><text x="44.7465%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.7307%" y="629" width="0.0781%" height="15" fill="rgb(242,50,38)" fg:x="573" fg:w="1"/><text x="44.9807%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="44.8087%" y="629" width="0.2342%" height="15" fill="rgb(217,91,15)" fg:x="574" fg:w="3"/><text x="45.0587%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="44.8087%" y="613" width="0.2342%" height="15" fill="rgb(230,172,6)" fg:x="574" fg:w="3"/><text x="45.0587%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (24 samples, 1.87%)</title><rect x="43.2475%" y="709" width="1.8735%" height="15" fill="rgb(221,98,26)" fg:x="554" fg:w="24"/><text x="43.4975%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (24 samples, 1.87%)</title><rect x="43.2475%" y="693" width="1.8735%" height="15" fill="rgb(227,210,45)" fg:x="554" fg:w="24"/><text x="43.4975%" y="703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.41%)</title><rect x="43.7158%" y="677" width="1.4052%" height="15" fill="rgb(206,8,30)" fg:x="560" fg:w="18"/><text x="43.9658%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.78%)</title><rect x="44.3404%" y="661" width="0.7806%" height="15" fill="rgb(241,219,17)" fg:x="568" fg:w="10"/><text x="44.5904%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="44.6526%" y="645" width="0.4684%" height="15" fill="rgb(247,121,29)" fg:x="572" fg:w="6"/><text x="44.9026%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="45.0429%" y="629" width="0.0781%" height="15" fill="rgb(219,169,49)" fg:x="577" fg:w="1"/><text x="45.2929%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="45.0429%" y="613" width="0.0781%" height="15" fill="rgb(253,49,49)" fg:x="577" fg:w="1"/><text x="45.2929%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.0429%" y="597" width="0.0781%" height="15" fill="rgb(217,178,3)" fg:x="577" fg:w="1"/><text x="45.2929%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="45.5113%" y="645" width="0.0781%" height="15" fill="rgb(234,73,37)" fg:x="583" fg:w="1"/><text x="45.7613%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.5113%" y="629" width="0.0781%" height="15" fill="rgb(250,98,22)" fg:x="583" fg:w="1"/><text x="45.7613%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="45.4333%" y="661" width="0.2342%" height="15" fill="rgb(220,108,37)" fg:x="582" fg:w="3"/><text x="45.6833%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.5894%" y="645" width="0.0781%" height="15" fill="rgb(225,168,10)" fg:x="584" fg:w="1"/><text x="45.8394%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.5894%" y="629" width="0.0781%" height="15" fill="rgb(247,215,21)" fg:x="584" fg:w="1"/><text x="45.8394%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.5894%" y="613" width="0.0781%" height="15" fill="rgb(253,189,31)" fg:x="584" fg:w="1"/><text x="45.8394%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.47%)</title><rect x="45.2771%" y="677" width="0.4684%" height="15" fill="rgb(241,54,22)" fg:x="580" fg:w="6"/><text x="45.5271%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.6674%" y="661" width="0.0781%" height="15" fill="rgb(211,87,4)" fg:x="585" fg:w="1"/><text x="45.9174%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.86%)</title><rect x="45.1210%" y="693" width="0.8587%" height="15" fill="rgb(245,112,24)" fg:x="578" fg:w="11"/><text x="45.3710%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="45.7455%" y="677" width="0.2342%" height="15" fill="rgb(235,190,41)" fg:x="586" fg:w="3"/><text x="45.9955%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="45.9797%" y="693" width="0.0781%" height="15" fill="rgb(214,89,8)" fg:x="589" fg:w="1"/><text x="46.2297%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.9797%" y="677" width="0.0781%" height="15" fill="rgb(249,155,35)" fg:x="589" fg:w="1"/><text x="46.2297%" y="687.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="46.0578%" y="693" width="0.0781%" height="15" fill="rgb(249,88,26)" fg:x="590" fg:w="1"/><text x="46.3078%" y="703.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (42 samples, 3.28%)</title><rect x="43.0133%" y="725" width="3.2787%" height="15" fill="rgb(232,56,8)" fg:x="551" fg:w="42"/><text x="43.2633%" y="735.50">&lt;ke..</text></g><g><title>treediff::diff::diff (15 samples, 1.17%)</title><rect x="45.1210%" y="709" width="1.1710%" height="15" fill="rgb(240,95,3)" fg:x="578" fg:w="15"/><text x="45.3710%" y="719.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (2 samples, 0.16%)</title><rect x="46.1358%" y="693" width="0.1561%" height="15" fill="rgb(222,44,28)" fg:x="591" fg:w="2"/><text x="46.3858%" y="703.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.1358%" y="677" width="0.1561%" height="15" fill="rgb(234,16,30)" fg:x="591" fg:w="2"/><text x="46.3858%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6823%" y="693" width="0.0781%" height="15" fill="rgb(223,26,17)" fg:x="598" fg:w="1"/><text x="46.9323%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.39%)</title><rect x="46.7603%" y="693" width="0.3903%" height="15" fill="rgb(239,187,47)" fg:x="599" fg:w="5"/><text x="47.0103%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.9945%" y="677" width="0.1561%" height="15" fill="rgb(247,102,50)" fg:x="602" fg:w="2"/><text x="47.2445%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="47.0726%" y="661" width="0.0781%" height="15" fill="rgb(231,216,22)" fg:x="603" fg:w="1"/><text x="47.3226%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="47.1507%" y="693" width="0.0781%" height="15" fill="rgb(216,201,26)" fg:x="604" fg:w="1"/><text x="47.4007%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.1507%" y="677" width="0.0781%" height="15" fill="rgb(214,186,23)" fg:x="604" fg:w="1"/><text x="47.4007%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="47.2287%" y="693" width="0.1561%" height="15" fill="rgb(235,184,4)" fg:x="605" fg:w="2"/><text x="47.4787%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="47.2287%" y="677" width="0.1561%" height="15" fill="rgb(244,46,17)" fg:x="605" fg:w="2"/><text x="47.4787%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.3068%" y="661" width="0.0781%" height="15" fill="rgb(248,74,46)" fg:x="606" fg:w="1"/><text x="47.5568%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.3068%" y="645" width="0.0781%" height="15" fill="rgb(243,79,5)" fg:x="606" fg:w="1"/><text x="47.5568%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.3068%" y="629" width="0.0781%" height="15" fill="rgb(213,148,1)" fg:x="606" fg:w="1"/><text x="47.5568%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="47.3849%" y="693" width="0.0781%" height="15" fill="rgb(221,30,0)" fg:x="607" fg:w="1"/><text x="47.6349%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.3849%" y="677" width="0.0781%" height="15" fill="rgb(207,85,29)" fg:x="607" fg:w="1"/><text x="47.6349%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.3849%" y="661" width="0.0781%" height="15" fill="rgb(239,31,46)" fg:x="607" fg:w="1"/><text x="47.6349%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.6190%" y="661" width="0.0781%" height="15" fill="rgb(219,6,1)" fg:x="610" fg:w="1"/><text x="47.8690%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (3 samples, 0.23%)</title><rect x="47.6971%" y="661" width="0.2342%" height="15" fill="rgb(229,90,29)" fg:x="611" fg:w="3"/><text x="47.9471%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.0094%" y="645" width="0.1561%" height="15" fill="rgb(242,201,42)" fg:x="615" fg:w="2"/><text x="48.2594%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.0094%" y="629" width="0.1561%" height="15" fill="rgb(243,80,54)" fg:x="615" fg:w="2"/><text x="48.2594%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.0874%" y="613" width="0.0781%" height="15" fill="rgb(223,166,15)" fg:x="616" fg:w="1"/><text x="48.3374%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="48.2436%" y="613" width="0.0781%" height="15" fill="rgb(238,78,27)" fg:x="618" fg:w="1"/><text x="48.4936%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.2436%" y="597" width="0.0781%" height="15" fill="rgb(235,28,43)" fg:x="618" fg:w="1"/><text x="48.4936%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="48.1655%" y="645" width="0.2342%" height="15" fill="rgb(240,210,28)" fg:x="617" fg:w="3"/><text x="48.4155%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="48.1655%" y="629" width="0.2342%" height="15" fill="rgb(253,6,46)" fg:x="617" fg:w="3"/><text x="48.4155%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.3216%" y="613" width="0.0781%" height="15" fill="rgb(250,159,47)" fg:x="619" fg:w="1"/><text x="48.5716%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="48.7900%" y="613" width="0.2342%" height="15" fill="rgb(216,139,2)" fg:x="625" fg:w="3"/><text x="49.0400%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="48.7900%" y="597" width="0.2342%" height="15" fill="rgb(221,124,44)" fg:x="625" fg:w="3"/><text x="49.0400%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9461%" y="581" width="0.0781%" height="15" fill="rgb(205,37,22)" fg:x="627" fg:w="1"/><text x="49.1961%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="49.2584%" y="565" width="0.0781%" height="15" fill="rgb(250,55,8)" fg:x="631" fg:w="1"/><text x="49.5084%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.39%)</title><rect x="49.3365%" y="549" width="0.3903%" height="15" fill="rgb(215,83,48)" fg:x="632" fg:w="5"/><text x="49.5865%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="49.4926%" y="533" width="0.2342%" height="15" fill="rgb(253,2,32)" fg:x="634" fg:w="3"/><text x="49.7426%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.5706%" y="517" width="0.1561%" height="15" fill="rgb(236,67,28)" fg:x="635" fg:w="2"/><text x="49.8206%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="49.3365%" y="565" width="0.5464%" height="15" fill="rgb(252,55,15)" fg:x="632" fg:w="7"/><text x="49.5865%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="49.7268%" y="549" width="0.1561%" height="15" fill="rgb(243,173,17)" fg:x="637" fg:w="2"/><text x="49.9768%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="49.7268%" y="533" width="0.1561%" height="15" fill="rgb(215,212,13)" fg:x="637" fg:w="2"/><text x="49.9768%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.7268%" y="517" width="0.1561%" height="15" fill="rgb(253,176,6)" fg:x="637" fg:w="2"/><text x="49.9768%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.7268%" y="501" width="0.1561%" height="15" fill="rgb(236,105,26)" fg:x="637" fg:w="2"/><text x="49.9768%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.7268%" y="485" width="0.1561%" height="15" fill="rgb(239,226,32)" fg:x="637" fg:w="2"/><text x="49.9768%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.86%)</title><rect x="49.1023%" y="597" width="0.8587%" height="15" fill="rgb(236,104,51)" fg:x="629" fg:w="11"/><text x="49.3523%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.86%)</title><rect x="49.1023%" y="581" width="0.8587%" height="15" fill="rgb(220,172,33)" fg:x="629" fg:w="11"/><text x="49.3523%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.8829%" y="565" width="0.0781%" height="15" fill="rgb(224,182,25)" fg:x="639" fg:w="1"/><text x="50.1329%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.11%)</title><rect x="47.9313%" y="661" width="2.1077%" height="15" fill="rgb(236,184,24)" fg:x="614" fg:w="27"/><text x="48.1813%" y="671.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (21 samples, 1.64%)</title><rect x="48.3997%" y="645" width="1.6393%" height="15" fill="rgb(241,221,14)" fg:x="620" fg:w="21"/><text x="48.6497%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.41%)</title><rect x="48.6339%" y="629" width="1.4052%" height="15" fill="rgb(227,146,5)" fg:x="623" fg:w="18"/><text x="48.8839%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.01%)</title><rect x="49.0242%" y="613" width="1.0148%" height="15" fill="rgb(214,15,23)" fg:x="628" fg:w="13"/><text x="49.2742%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.9610%" y="597" width="0.0781%" height="15" fill="rgb(233,157,31)" fg:x="640" fg:w="1"/><text x="50.2110%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (33 samples, 2.58%)</title><rect x="47.6190%" y="677" width="2.5761%" height="15" fill="rgb(211,27,52)" fg:x="610" fg:w="33"/><text x="47.8690%" y="687.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="50.0390%" y="661" width="0.1561%" height="15" fill="rgb(212,223,15)" fg:x="641" fg:w="2"/><text x="50.2890%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.1171%" y="645" width="0.0781%" height="15" fill="rgb(254,211,0)" fg:x="642" fg:w="1"/><text x="50.3671%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (53 samples, 4.14%)</title><rect x="46.2920%" y="725" width="4.1374%" height="15" fill="rgb(205,43,38)" fg:x="593" fg:w="53"/><text x="46.5420%" y="735.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (53 samples, 4.14%)</title><rect x="46.2920%" y="709" width="4.1374%" height="15" fill="rgb(242,206,46)" fg:x="593" fg:w="53"/><text x="46.5420%" y="719.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (38 samples, 2.97%)</title><rect x="47.4629%" y="693" width="2.9664%" height="15" fill="rgb(220,221,12)" fg:x="608" fg:w="38"/><text x="47.7129%" y="703.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="50.1952%" y="677" width="0.2342%" height="15" fill="rgb(217,156,35)" fg:x="643" fg:w="3"/><text x="50.4452%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="50.1952%" y="661" width="0.2342%" height="15" fill="rgb(207,181,49)" fg:x="643" fg:w="3"/><text x="50.4452%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.2732%" y="645" width="0.1561%" height="15" fill="rgb(235,103,47)" fg:x="644" fg:w="2"/><text x="50.5232%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.8197%" y="581" width="0.0781%" height="15" fill="rgb(222,63,28)" fg:x="651" fg:w="1"/><text x="51.0697%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.8197%" y="565" width="0.0781%" height="15" fill="rgb(244,137,21)" fg:x="651" fg:w="1"/><text x="51.0697%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="50.8977%" y="549" width="0.1561%" height="15" fill="rgb(228,35,27)" fg:x="652" fg:w="2"/><text x="51.1477%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.1319%" y="501" width="0.0781%" height="15" fill="rgb(226,191,41)" fg:x="655" fg:w="1"/><text x="51.3819%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.1319%" y="485" width="0.0781%" height="15" fill="rgb(210,154,3)" fg:x="655" fg:w="1"/><text x="51.3819%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.1319%" y="469" width="0.0781%" height="15" fill="rgb(216,60,49)" fg:x="655" fg:w="1"/><text x="51.3819%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.1319%" y="453" width="0.0781%" height="15" fill="rgb(226,17,20)" fg:x="655" fg:w="1"/><text x="51.3819%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.1319%" y="437" width="0.0781%" height="15" fill="rgb(206,115,35)" fg:x="655" fg:w="1"/><text x="51.3819%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.2100%" y="501" width="0.0781%" height="15" fill="rgb(227,88,1)" fg:x="656" fg:w="1"/><text x="51.4600%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="51.0539%" y="533" width="0.3903%" height="15" fill="rgb(230,222,24)" fg:x="654" fg:w="5"/><text x="51.3039%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="51.0539%" y="517" width="0.3903%" height="15" fill="rgb(214,124,32)" fg:x="654" fg:w="5"/><text x="51.3039%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.2881%" y="501" width="0.1561%" height="15" fill="rgb(240,41,36)" fg:x="657" fg:w="2"/><text x="51.5381%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.2881%" y="485" width="0.1561%" height="15" fill="rgb(221,17,52)" fg:x="657" fg:w="2"/><text x="51.5381%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.2881%" y="469" width="0.1561%" height="15" fill="rgb(252,70,16)" fg:x="657" fg:w="2"/><text x="51.5381%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.78%)</title><rect x="50.7416%" y="597" width="0.7806%" height="15" fill="rgb(250,177,4)" fg:x="650" fg:w="10"/><text x="50.9916%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.62%)</title><rect x="50.8977%" y="581" width="0.6245%" height="15" fill="rgb(240,188,47)" fg:x="652" fg:w="8"/><text x="51.1477%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.62%)</title><rect x="50.8977%" y="565" width="0.6245%" height="15" fill="rgb(215,92,12)" fg:x="652" fg:w="8"/><text x="51.1477%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="51.0539%" y="549" width="0.4684%" height="15" fill="rgb(242,110,29)" fg:x="654" fg:w="6"/><text x="51.3039%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.4442%" y="533" width="0.0781%" height="15" fill="rgb(208,211,26)" fg:x="659" fg:w="1"/><text x="51.6942%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.5222%" y="597" width="0.0781%" height="15" fill="rgb(244,147,6)" fg:x="660" fg:w="1"/><text x="51.7722%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.5222%" y="581" width="0.0781%" height="15" fill="rgb(211,130,42)" fg:x="660" fg:w="1"/><text x="51.7722%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.6003%" y="565" width="0.0781%" height="15" fill="rgb(220,63,1)" fg:x="661" fg:w="1"/><text x="51.8503%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.09%)</title><rect x="50.6635%" y="629" width="1.0929%" height="15" fill="rgb(241,212,30)" fg:x="649" fg:w="14"/><text x="50.9135%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.01%)</title><rect x="50.7416%" y="613" width="1.0148%" height="15" fill="rgb(233,153,17)" fg:x="650" fg:w="13"/><text x="50.9916%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.6003%" y="597" width="0.1561%" height="15" fill="rgb(236,3,10)" fg:x="661" fg:w="2"/><text x="51.8503%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.6003%" y="581" width="0.1561%" height="15" fill="rgb(232,41,21)" fg:x="661" fg:w="2"/><text x="51.8503%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="51.6784%" y="565" width="0.0781%" height="15" fill="rgb(206,63,51)" fg:x="662" fg:w="1"/><text x="51.9284%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="51.7564%" y="613" width="0.0781%" height="15" fill="rgb(250,214,3)" fg:x="663" fg:w="1"/><text x="52.0064%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="51.7564%" y="629" width="0.1561%" height="15" fill="rgb(254,89,27)" fg:x="663" fg:w="2"/><text x="52.0064%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.8345%" y="613" width="0.0781%" height="15" fill="rgb(249,41,14)" fg:x="664" fg:w="1"/><text x="52.0845%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.9126%" y="597" width="0.0781%" height="15" fill="rgb(221,196,51)" fg:x="665" fg:w="1"/><text x="52.1626%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.48%)</title><rect x="50.5855%" y="661" width="1.4832%" height="15" fill="rgb(214,116,26)" fg:x="648" fg:w="19"/><text x="50.8355%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.48%)</title><rect x="50.5855%" y="645" width="1.4832%" height="15" fill="rgb(236,67,7)" fg:x="648" fg:w="19"/><text x="50.8355%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.9126%" y="629" width="0.1561%" height="15" fill="rgb(253,179,32)" fg:x="665" fg:w="2"/><text x="52.1626%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.9126%" y="613" width="0.1561%" height="15" fill="rgb(218,33,15)" fg:x="665" fg:w="2"/><text x="52.1626%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="51.9906%" y="597" width="0.0781%" height="15" fill="rgb(217,202,41)" fg:x="666" fg:w="1"/><text x="52.2406%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="52.3029%" y="645" width="0.1561%" height="15" fill="rgb(234,133,5)" fg:x="670" fg:w="2"/><text x="52.5529%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4590%" y="645" width="0.0781%" height="15" fill="rgb(240,47,40)" fg:x="672" fg:w="1"/><text x="52.7090%" y="655.50"></text></g><g><title>engine::session::state::State::close (169 samples, 13.19%)</title><rect x="39.4223%" y="805" width="13.1928%" height="15" fill="rgb(234,166,26)" fg:x="505" fg:w="169"/><text x="39.6723%" y="815.50">engine::session::sta..</text></g><g><title>engine::session::state::State::flush_entities (169 samples, 13.19%)</title><rect x="39.4223%" y="789" width="13.1928%" height="15" fill="rgb(244,125,51)" fg:x="505" fg:w="169"/><text x="39.6723%" y="799.50">engine::session::sta..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (167 samples, 13.04%)</title><rect x="39.5785%" y="773" width="13.0367%" height="15" fill="rgb(229,171,11)" fg:x="507" fg:w="167"/><text x="39.8285%" y="783.50">engine::session::int..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (166 samples, 12.96%)</title><rect x="39.6565%" y="757" width="12.9586%" height="15" fill="rgb(224,38,45)" fg:x="508" fg:w="166"/><text x="39.9065%" y="767.50">engine::session::st..</text></g><g><title>kernel::model::any_entity_changes (123 samples, 9.60%)</title><rect x="43.0133%" y="741" width="9.6019%" height="15" fill="rgb(237,27,7)" fg:x="551" fg:w="123"/><text x="43.2633%" y="751.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (28 samples, 2.19%)</title><rect x="50.4294%" y="725" width="2.1858%" height="15" fill="rgb(216,52,7)" fg:x="646" fg:w="28"/><text x="50.6794%" y="735.50">s..</text></g><g><title>serde_json::de::from_trait (28 samples, 2.19%)</title><rect x="50.4294%" y="709" width="2.1858%" height="15" fill="rgb(243,11,11)" fg:x="646" fg:w="28"/><text x="50.6794%" y="719.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28 samples, 2.19%)</title><rect x="50.4294%" y="693" width="2.1858%" height="15" fill="rgb(253,167,20)" fg:x="646" fg:w="28"/><text x="50.6794%" y="703.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28 samples, 2.19%)</title><rect x="50.4294%" y="677" width="2.1858%" height="15" fill="rgb(215,207,5)" fg:x="646" fg:w="28"/><text x="50.6794%" y="687.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (7 samples, 0.55%)</title><rect x="52.0687%" y="661" width="0.5464%" height="15" fill="rgb(252,127,31)" fg:x="667" fg:w="7"/><text x="52.3187%" y="671.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="52.5371%" y="645" width="0.0781%" height="15" fill="rgb(209,106,27)" fg:x="673" fg:w="1"/><text x="52.7871%" y="655.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="52.5371%" y="629" width="0.0781%" height="15" fill="rgb(214,220,18)" fg:x="673" fg:w="1"/><text x="52.7871%" y="639.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="52.6151%" y="741" width="0.0781%" height="15" fill="rgb(237,89,12)" fg:x="674" fg:w="1"/><text x="52.8651%" y="751.50"></text></g><g><title>engine::session::Session::close (178 samples, 13.90%)</title><rect x="38.8759%" y="821" width="13.8954%" height="15" fill="rgb(209,167,36)" fg:x="498" fg:w="178"/><text x="39.1259%" y="831.50">engine::session::Sess..</text></g><g><title>std::time::Instant::elapsed (2 samples, 0.16%)</title><rect x="52.6151%" y="805" width="0.1561%" height="15" fill="rgb(243,45,22)" fg:x="674" fg:w="2"/><text x="52.8651%" y="815.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.16%)</title><rect x="52.6151%" y="789" width="0.1561%" height="15" fill="rgb(239,2,46)" fg:x="674" fg:w="2"/><text x="52.8651%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.16%)</title><rect x="52.6151%" y="773" width="0.1561%" height="15" fill="rgb(241,101,0)" fg:x="674" fg:w="2"/><text x="52.8651%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="52.6151%" y="757" width="0.1561%" height="15" fill="rgb(244,34,31)" fg:x="674" fg:w="2"/><text x="52.8651%" y="767.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="52.6932%" y="741" width="0.0781%" height="15" fill="rgb(248,23,22)" fg:x="675" fg:w="1"/><text x="52.9432%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.0835%" y="501" width="0.0781%" height="15" fill="rgb(218,27,48)" fg:x="680" fg:w="1"/><text x="53.3335%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="53.1616%" y="453" width="0.1561%" height="15" fill="rgb(232,78,1)" fg:x="681" fg:w="2"/><text x="53.4116%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="53.1616%" y="437" width="0.1561%" height="15" fill="rgb(233,169,12)" fg:x="681" fg:w="2"/><text x="53.4116%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.2397%" y="421" width="0.0781%" height="15" fill="rgb(225,222,54)" fg:x="682" fg:w="1"/><text x="53.4897%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="53.2397%" y="405" width="0.0781%" height="15" fill="rgb(245,126,29)" fg:x="682" fg:w="1"/><text x="53.4897%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="53.2397%" y="389" width="0.0781%" height="15" fill="rgb(241,63,48)" fg:x="682" fg:w="1"/><text x="53.4897%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="53.2397%" y="373" width="0.0781%" height="15" fill="rgb(235,126,38)" fg:x="682" fg:w="1"/><text x="53.4897%" y="383.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="53.2397%" y="357" width="0.0781%" height="15" fill="rgb(232,96,49)" fg:x="682" fg:w="1"/><text x="53.4897%" y="367.50"></text></g><g><title>core::fmt::Formatter::sign_plus (1 samples, 0.08%)</title><rect x="53.2397%" y="341" width="0.0781%" height="15" fill="rgb(211,146,40)" fg:x="682" fg:w="1"/><text x="53.4897%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.31%)</title><rect x="53.0835%" y="677" width="0.3123%" height="15" fill="rgb(247,93,44)" fg:x="680" fg:w="4"/><text x="53.3335%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.31%)</title><rect x="53.0835%" y="661" width="0.3123%" height="15" fill="rgb(251,41,49)" fg:x="680" fg:w="4"/><text x="53.3335%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.31%)</title><rect x="53.0835%" y="645" width="0.3123%" height="15" fill="rgb(218,155,12)" fg:x="680" fg:w="4"/><text x="53.3335%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.31%)</title><rect x="53.0835%" y="629" width="0.3123%" height="15" fill="rgb(221,161,30)" fg:x="680" fg:w="4"/><text x="53.3335%" y="639.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="53.0835%" y="613" width="0.3123%" height="15" fill="rgb(221,179,11)" fg:x="680" fg:w="4"/><text x="53.3335%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.31%)</title><rect x="53.0835%" y="597" width="0.3123%" height="15" fill="rgb(224,170,48)" fg:x="680" fg:w="4"/><text x="53.3335%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.31%)</title><rect x="53.0835%" y="581" width="0.3123%" height="15" fill="rgb(223,117,5)" fg:x="680" fg:w="4"/><text x="53.3335%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.31%)</title><rect x="53.0835%" y="565" width="0.3123%" height="15" fill="rgb(209,52,20)" fg:x="680" fg:w="4"/><text x="53.3335%" y="575.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="53.0835%" y="549" width="0.3123%" height="15" fill="rgb(209,19,41)" fg:x="680" fg:w="4"/><text x="53.3335%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.31%)</title><rect x="53.0835%" y="533" width="0.3123%" height="15" fill="rgb(210,177,12)" fg:x="680" fg:w="4"/><text x="53.3335%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (4 samples, 0.31%)</title><rect x="53.0835%" y="517" width="0.3123%" height="15" fill="rgb(211,159,37)" fg:x="680" fg:w="4"/><text x="53.3335%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.23%)</title><rect x="53.1616%" y="501" width="0.2342%" height="15" fill="rgb(209,20,2)" fg:x="681" fg:w="3"/><text x="53.4116%" y="511.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="53.1616%" y="485" width="0.2342%" height="15" fill="rgb(244,3,46)" fg:x="681" fg:w="3"/><text x="53.4116%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="53.1616%" y="469" width="0.2342%" height="15" fill="rgb(220,94,38)" fg:x="681" fg:w="3"/><text x="53.4116%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.3177%" y="453" width="0.0781%" height="15" fill="rgb(253,14,31)" fg:x="683" fg:w="1"/><text x="53.5677%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.3177%" y="437" width="0.0781%" height="15" fill="rgb(234,176,13)" fg:x="683" fg:w="1"/><text x="53.5677%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="53.3177%" y="421" width="0.0781%" height="15" fill="rgb(218,62,25)" fg:x="683" fg:w="1"/><text x="53.5677%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="53.3177%" y="405" width="0.0781%" height="15" fill="rgb(216,124,40)" fg:x="683" fg:w="1"/><text x="53.5677%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="53.3177%" y="389" width="0.0781%" height="15" fill="rgb(228,170,12)" fg:x="683" fg:w="1"/><text x="53.5677%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="53.3177%" y="373" width="0.0781%" height="15" fill="rgb(231,226,5)" fg:x="683" fg:w="1"/><text x="53.5677%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.3177%" y="357" width="0.0781%" height="15" fill="rgb(237,122,22)" fg:x="683" fg:w="1"/><text x="53.5677%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.3177%" y="341" width="0.0781%" height="15" fill="rgb(209,185,25)" fg:x="683" fg:w="1"/><text x="53.5677%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="53.3177%" y="325" width="0.0781%" height="15" fill="rgb(228,200,32)" fg:x="683" fg:w="1"/><text x="53.5677%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="53.3177%" y="309" width="0.0781%" height="15" fill="rgb(217,140,10)" fg:x="683" fg:w="1"/><text x="53.5677%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.3177%" y="293" width="0.0781%" height="15" fill="rgb(253,17,24)" fg:x="683" fg:w="1"/><text x="53.5677%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="53.3177%" y="277" width="0.0781%" height="15" fill="rgb(212,61,6)" fg:x="683" fg:w="1"/><text x="53.5677%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="53.3177%" y="261" width="0.0781%" height="15" fill="rgb(205,14,25)" fg:x="683" fg:w="1"/><text x="53.5677%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="53.3177%" y="245" width="0.0781%" height="15" fill="rgb(232,69,41)" fg:x="683" fg:w="1"/><text x="53.5677%" y="255.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="53.3177%" y="229" width="0.0781%" height="15" fill="rgb(241,106,47)" fg:x="683" fg:w="1"/><text x="53.5677%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="53.3177%" y="213" width="0.0781%" height="15" fill="rgb(210,213,53)" fg:x="683" fg:w="1"/><text x="53.5677%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (5 samples, 0.39%)</title><rect x="53.0835%" y="693" width="0.3903%" height="15" fill="rgb(253,175,27)" fg:x="680" fg:w="5"/><text x="53.3335%" y="703.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="53.3958%" y="677" width="0.0781%" height="15" fill="rgb(211,171,24)" fg:x="684" fg:w="1"/><text x="53.6458%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.5519%" y="453" width="0.0781%" height="15" fill="rgb(229,80,7)" fg:x="686" fg:w="1"/><text x="53.8019%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.5519%" y="437" width="0.0781%" height="15" fill="rgb(212,46,39)" fg:x="686" fg:w="1"/><text x="53.8019%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.5519%" y="421" width="0.0781%" height="15" fill="rgb(240,80,45)" fg:x="686" fg:w="1"/><text x="53.8019%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.5519%" y="405" width="0.0781%" height="15" fill="rgb(253,177,40)" fg:x="686" fg:w="1"/><text x="53.8019%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.5519%" y="389" width="0.0781%" height="15" fill="rgb(249,200,15)" fg:x="686" fg:w="1"/><text x="53.8019%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.5519%" y="373" width="0.0781%" height="15" fill="rgb(217,78,26)" fg:x="686" fg:w="1"/><text x="53.8019%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.5519%" y="357" width="0.0781%" height="15" fill="rgb(254,151,32)" fg:x="686" fg:w="1"/><text x="53.8019%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.5519%" y="341" width="0.0781%" height="15" fill="rgb(226,165,27)" fg:x="686" fg:w="1"/><text x="53.8019%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.5519%" y="325" width="0.0781%" height="15" fill="rgb(250,206,4)" fg:x="686" fg:w="1"/><text x="53.8019%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.5519%" y="309" width="0.0781%" height="15" fill="rgb(231,229,27)" fg:x="686" fg:w="1"/><text x="53.8019%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.5519%" y="293" width="0.0781%" height="15" fill="rgb(239,217,8)" fg:x="686" fg:w="1"/><text x="53.8019%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.5519%" y="277" width="0.0781%" height="15" fill="rgb(225,204,27)" fg:x="686" fg:w="1"/><text x="53.8019%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.5519%" y="485" width="0.1561%" height="15" fill="rgb(230,56,32)" fg:x="686" fg:w="2"/><text x="53.8019%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.5519%" y="469" width="0.1561%" height="15" fill="rgb(222,56,27)" fg:x="686" fg:w="2"/><text x="53.8019%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="53.6300%" y="453" width="0.0781%" height="15" fill="rgb(253,108,27)" fg:x="687" fg:w="1"/><text x="53.8800%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="53.6300%" y="437" width="0.0781%" height="15" fill="rgb(212,87,36)" fg:x="687" fg:w="1"/><text x="53.8800%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.23%)</title><rect x="53.5519%" y="613" width="0.2342%" height="15" fill="rgb(247,82,36)" fg:x="686" fg:w="3"/><text x="53.8019%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.23%)</title><rect x="53.5519%" y="597" width="0.2342%" height="15" fill="rgb(222,143,9)" fg:x="686" fg:w="3"/><text x="53.8019%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="53.5519%" y="581" width="0.2342%" height="15" fill="rgb(238,162,48)" fg:x="686" fg:w="3"/><text x="53.8019%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="53.5519%" y="565" width="0.2342%" height="15" fill="rgb(221,59,43)" fg:x="686" fg:w="3"/><text x="53.8019%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="53.5519%" y="549" width="0.2342%" height="15" fill="rgb(205,166,41)" fg:x="686" fg:w="3"/><text x="53.8019%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="53.5519%" y="533" width="0.2342%" height="15" fill="rgb(241,186,40)" fg:x="686" fg:w="3"/><text x="53.8019%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="53.5519%" y="517" width="0.2342%" height="15" fill="rgb(216,119,35)" fg:x="686" fg:w="3"/><text x="53.8019%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="53.5519%" y="501" width="0.2342%" height="15" fill="rgb(208,68,38)" fg:x="686" fg:w="3"/><text x="53.8019%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7080%" y="485" width="0.0781%" height="15" fill="rgb(217,113,1)" fg:x="688" fg:w="1"/><text x="53.9580%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.8642%" y="549" width="0.0781%" height="15" fill="rgb(242,153,3)" fg:x="690" fg:w="1"/><text x="54.1142%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.8642%" y="533" width="0.0781%" height="15" fill="rgb(229,76,35)" fg:x="690" fg:w="1"/><text x="54.1142%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.9422%" y="517" width="0.0781%" height="15" fill="rgb(229,125,34)" fg:x="691" fg:w="1"/><text x="54.1922%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.9422%" y="501" width="0.0781%" height="15" fill="rgb(238,179,36)" fg:x="691" fg:w="1"/><text x="54.1922%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.0203%" y="517" width="0.0781%" height="15" fill="rgb(244,183,19)" fg:x="692" fg:w="1"/><text x="54.2703%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.0984%" y="469" width="0.0781%" height="15" fill="rgb(216,85,49)" fg:x="693" fg:w="1"/><text x="54.3484%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.0984%" y="485" width="0.1561%" height="15" fill="rgb(208,161,47)" fg:x="693" fg:w="2"/><text x="54.3484%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.1764%" y="469" width="0.0781%" height="15" fill="rgb(233,210,18)" fg:x="694" fg:w="1"/><text x="54.4264%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.2545%" y="469" width="0.0781%" height="15" fill="rgb(205,104,42)" fg:x="695" fg:w="1"/><text x="54.5045%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="54.2545%" y="453" width="0.0781%" height="15" fill="rgb(248,90,43)" fg:x="695" fg:w="1"/><text x="54.5045%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.2545%" y="437" width="0.0781%" height="15" fill="rgb(206,198,11)" fg:x="695" fg:w="1"/><text x="54.5045%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.2545%" y="421" width="0.0781%" height="15" fill="rgb(239,165,27)" fg:x="695" fg:w="1"/><text x="54.5045%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.2545%" y="405" width="0.0781%" height="15" fill="rgb(246,44,32)" fg:x="695" fg:w="1"/><text x="54.5045%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.2545%" y="389" width="0.0781%" height="15" fill="rgb(252,65,42)" fg:x="695" fg:w="1"/><text x="54.5045%" y="399.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.62%)</title><rect x="53.7861%" y="597" width="0.6245%" height="15" fill="rgb(246,197,18)" fg:x="689" fg:w="8"/><text x="54.0361%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.62%)</title><rect x="53.7861%" y="581" width="0.6245%" height="15" fill="rgb(216,192,4)" fg:x="689" fg:w="8"/><text x="54.0361%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.55%)</title><rect x="53.8642%" y="565" width="0.5464%" height="15" fill="rgb(208,117,10)" fg:x="690" fg:w="7"/><text x="54.1142%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="53.9422%" y="549" width="0.4684%" height="15" fill="rgb(240,61,47)" fg:x="691" fg:w="6"/><text x="54.1922%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="53.9422%" y="533" width="0.4684%" height="15" fill="rgb(228,178,21)" fg:x="691" fg:w="6"/><text x="54.1922%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="54.0984%" y="517" width="0.3123%" height="15" fill="rgb(219,96,54)" fg:x="693" fg:w="4"/><text x="54.3484%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="54.0984%" y="501" width="0.3123%" height="15" fill="rgb(250,177,24)" fg:x="693" fg:w="4"/><text x="54.3484%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="54.2545%" y="485" width="0.1561%" height="15" fill="rgb(242,154,46)" fg:x="695" fg:w="2"/><text x="54.5045%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="54.3326%" y="469" width="0.0781%" height="15" fill="rgb(226,176,29)" fg:x="696" fg:w="1"/><text x="54.5826%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.3326%" y="453" width="0.0781%" height="15" fill="rgb(226,29,2)" fg:x="696" fg:w="1"/><text x="54.5826%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.3326%" y="437" width="0.0781%" height="15" fill="rgb(237,104,14)" fg:x="696" fg:w="1"/><text x="54.5826%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.4887%" y="533" width="0.0781%" height="15" fill="rgb(245,207,31)" fg:x="698" fg:w="1"/><text x="54.7387%" y="543.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="54.5667%" y="421" width="0.0781%" height="15" fill="rgb(229,211,45)" fg:x="699" fg:w="1"/><text x="54.8167%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="54.5667%" y="405" width="0.0781%" height="15" fill="rgb(229,113,15)" fg:x="699" fg:w="1"/><text x="54.8167%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.5667%" y="389" width="0.0781%" height="15" fill="rgb(237,147,15)" fg:x="699" fg:w="1"/><text x="54.8167%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="54.5667%" y="517" width="0.2342%" height="15" fill="rgb(244,120,12)" fg:x="699" fg:w="3"/><text x="54.8167%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="54.5667%" y="501" width="0.2342%" height="15" fill="rgb(205,120,12)" fg:x="699" fg:w="3"/><text x="54.8167%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.23%)</title><rect x="54.5667%" y="485" width="0.2342%" height="15" fill="rgb(231,26,45)" fg:x="699" fg:w="3"/><text x="54.8167%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="54.5667%" y="469" width="0.2342%" height="15" fill="rgb(246,98,1)" fg:x="699" fg:w="3"/><text x="54.8167%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="54.5667%" y="453" width="0.2342%" height="15" fill="rgb(207,68,45)" fg:x="699" fg:w="3"/><text x="54.8167%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="54.5667%" y="437" width="0.2342%" height="15" fill="rgb(231,27,38)" fg:x="699" fg:w="3"/><text x="54.8167%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.6448%" y="421" width="0.1561%" height="15" fill="rgb(214,223,3)" fg:x="700" fg:w="2"/><text x="54.8948%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.6448%" y="405" width="0.1561%" height="15" fill="rgb(228,195,46)" fg:x="700" fg:w="2"/><text x="54.8948%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.7229%" y="389" width="0.0781%" height="15" fill="rgb(231,100,42)" fg:x="701" fg:w="1"/><text x="54.9729%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.8009%" y="485" width="0.0781%" height="15" fill="rgb(236,53,4)" fg:x="702" fg:w="1"/><text x="55.0509%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="54.8009%" y="517" width="0.1561%" height="15" fill="rgb(230,152,12)" fg:x="702" fg:w="2"/><text x="55.0509%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="54.8009%" y="501" width="0.1561%" height="15" fill="rgb(226,101,19)" fg:x="702" fg:w="2"/><text x="55.0509%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.8790%" y="485" width="0.0781%" height="15" fill="rgb(250,149,32)" fg:x="703" fg:w="1"/><text x="55.1290%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.8790%" y="469" width="0.0781%" height="15" fill="rgb(232,178,12)" fg:x="703" fg:w="1"/><text x="55.1290%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.8790%" y="453" width="0.0781%" height="15" fill="rgb(246,151,17)" fg:x="703" fg:w="1"/><text x="55.1290%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.8790%" y="437" width="0.0781%" height="15" fill="rgb(252,17,51)" fg:x="703" fg:w="1"/><text x="55.1290%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.0351%" y="485" width="0.0781%" height="15" fill="rgb(250,207,23)" fg:x="705" fg:w="1"/><text x="55.2851%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.0351%" y="469" width="0.0781%" height="15" fill="rgb(205,27,5)" fg:x="705" fg:w="1"/><text x="55.2851%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.0351%" y="453" width="0.0781%" height="15" fill="rgb(224,32,19)" fg:x="705" fg:w="1"/><text x="55.2851%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (18 samples, 1.41%)</title><rect x="53.7861%" y="613" width="1.4052%" height="15" fill="rgb(247,214,40)" fg:x="689" fg:w="18"/><text x="54.0361%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.78%)</title><rect x="54.4106%" y="597" width="0.7806%" height="15" fill="rgb(239,199,17)" fg:x="697" fg:w="10"/><text x="54.6606%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.78%)</title><rect x="54.4106%" y="581" width="0.7806%" height="15" fill="rgb(251,159,9)" fg:x="697" fg:w="10"/><text x="54.6606%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.70%)</title><rect x="54.4887%" y="565" width="0.7026%" height="15" fill="rgb(225,78,32)" fg:x="698" fg:w="9"/><text x="54.7387%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.70%)</title><rect x="54.4887%" y="549" width="0.7026%" height="15" fill="rgb(206,97,47)" fg:x="698" fg:w="9"/><text x="54.7387%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.62%)</title><rect x="54.5667%" y="533" width="0.6245%" height="15" fill="rgb(227,107,4)" fg:x="699" fg:w="8"/><text x="54.8167%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="54.9571%" y="517" width="0.2342%" height="15" fill="rgb(241,146,50)" fg:x="704" fg:w="3"/><text x="55.2071%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="54.9571%" y="501" width="0.2342%" height="15" fill="rgb(232,92,30)" fg:x="704" fg:w="3"/><text x="55.2071%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="55.1132%" y="485" width="0.0781%" height="15" fill="rgb(222,0,40)" fg:x="706" fg:w="1"/><text x="55.3632%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="55.1132%" y="469" width="0.0781%" height="15" fill="rgb(219,54,33)" fg:x="706" fg:w="1"/><text x="55.3632%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="55.1132%" y="453" width="0.0781%" height="15" fill="rgb(226,209,28)" fg:x="706" fg:w="1"/><text x="55.3632%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.1132%" y="437" width="0.0781%" height="15" fill="rgb(254,205,35)" fg:x="706" fg:w="1"/><text x="55.3632%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.1132%" y="421" width="0.0781%" height="15" fill="rgb(230,159,3)" fg:x="706" fg:w="1"/><text x="55.3632%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.1132%" y="405" width="0.0781%" height="15" fill="rgb(232,190,24)" fg:x="706" fg:w="1"/><text x="55.3632%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.1132%" y="389" width="0.0781%" height="15" fill="rgb(217,227,44)" fg:x="706" fg:w="1"/><text x="55.3632%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.1132%" y="373" width="0.0781%" height="15" fill="rgb(236,211,1)" fg:x="706" fg:w="1"/><text x="55.3632%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (24 samples, 1.87%)</title><rect x="53.4738%" y="661" width="1.8735%" height="15" fill="rgb(250,127,46)" fg:x="685" fg:w="24"/><text x="53.7238%" y="671.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (23 samples, 1.80%)</title><rect x="53.5519%" y="645" width="1.7955%" height="15" fill="rgb(229,213,6)" fg:x="686" fg:w="23"/><text x="53.8019%" y="655.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (23 samples, 1.80%)</title><rect x="53.5519%" y="629" width="1.7955%" height="15" fill="rgb(237,15,36)" fg:x="686" fg:w="23"/><text x="53.8019%" y="639.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="55.1913%" y="613" width="0.1561%" height="15" fill="rgb(213,131,41)" fg:x="707" fg:w="2"/><text x="55.4413%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="55.1913%" y="597" width="0.1561%" height="15" fill="rgb(225,82,44)" fg:x="707" fg:w="2"/><text x="55.4413%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="55.1913%" y="581" width="0.1561%" height="15" fill="rgb(249,42,11)" fg:x="707" fg:w="2"/><text x="55.4413%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.1913%" y="565" width="0.1561%" height="15" fill="rgb(253,11,29)" fg:x="707" fg:w="2"/><text x="55.4413%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.1913%" y="549" width="0.1561%" height="15" fill="rgb(206,8,54)" fg:x="707" fg:w="2"/><text x="55.4413%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.1913%" y="533" width="0.1561%" height="15" fill="rgb(222,186,2)" fg:x="707" fg:w="2"/><text x="55.4413%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.1913%" y="517" width="0.1561%" height="15" fill="rgb(221,206,53)" fg:x="707" fg:w="2"/><text x="55.4413%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.3474%" y="661" width="0.0781%" height="15" fill="rgb(230,150,21)" fg:x="709" fg:w="1"/><text x="55.5974%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.3474%" y="645" width="0.0781%" height="15" fill="rgb(253,202,10)" fg:x="709" fg:w="1"/><text x="55.5974%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.3474%" y="629" width="0.0781%" height="15" fill="rgb(238,109,40)" fg:x="709" fg:w="1"/><text x="55.5974%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.3474%" y="613" width="0.0781%" height="15" fill="rgb(247,120,22)" fg:x="709" fg:w="1"/><text x="55.5974%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.5816%" y="629" width="0.0781%" height="15" fill="rgb(207,43,30)" fg:x="712" fg:w="1"/><text x="55.8316%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.7377%" y="597" width="0.0781%" height="15" fill="rgb(213,211,24)" fg:x="714" fg:w="1"/><text x="55.9877%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (36 samples, 2.81%)</title><rect x="53.0835%" y="709" width="2.8103%" height="15" fill="rgb(239,73,39)" fg:x="680" fg:w="36"/><text x="53.3335%" y="719.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (31 samples, 2.42%)</title><rect x="53.4738%" y="693" width="2.4200%" height="15" fill="rgb(245,182,19)" fg:x="685" fg:w="31"/><text x="53.7238%" y="703.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (31 samples, 2.42%)</title><rect x="53.4738%" y="677" width="2.4200%" height="15" fill="rgb(247,143,26)" fg:x="685" fg:w="31"/><text x="53.7238%" y="687.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="55.4254%" y="661" width="0.4684%" height="15" fill="rgb(228,191,23)" fg:x="710" fg:w="6"/><text x="55.6754%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="55.5035%" y="645" width="0.3903%" height="15" fill="rgb(253,165,31)" fg:x="711" fg:w="5"/><text x="55.7535%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="55.6596%" y="629" width="0.2342%" height="15" fill="rgb(234,138,20)" fg:x="713" fg:w="3"/><text x="55.9096%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="55.6596%" y="613" width="0.2342%" height="15" fill="rgb(218,191,29)" fg:x="713" fg:w="3"/><text x="55.9096%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.8158%" y="597" width="0.0781%" height="15" fill="rgb(221,157,19)" fg:x="715" fg:w="1"/><text x="56.0658%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="55.8938%" y="629" width="0.1561%" height="15" fill="rgb(237,26,42)" fg:x="716" fg:w="2"/><text x="56.1438%" y="639.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (40 samples, 3.12%)</title><rect x="53.0055%" y="725" width="3.1226%" height="15" fill="rgb(220,163,24)" fg:x="679" fg:w="40"/><text x="53.2555%" y="735.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (3 samples, 0.23%)</title><rect x="55.8938%" y="709" width="0.2342%" height="15" fill="rgb(242,115,20)" fg:x="716" fg:w="3"/><text x="56.1438%" y="719.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.23%)</title><rect x="55.8938%" y="693" width="0.2342%" height="15" fill="rgb(210,206,9)" fg:x="716" fg:w="3"/><text x="56.1438%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.23%)</title><rect x="55.8938%" y="677" width="0.2342%" height="15" fill="rgb(208,71,17)" fg:x="716" fg:w="3"/><text x="56.1438%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.23%)</title><rect x="55.8938%" y="661" width="0.2342%" height="15" fill="rgb(233,7,5)" fg:x="716" fg:w="3"/><text x="56.1438%" y="671.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (3 samples, 0.23%)</title><rect x="55.8938%" y="645" width="0.2342%" height="15" fill="rgb(207,92,33)" fg:x="716" fg:w="3"/><text x="56.1438%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.0500%" y="629" width="0.0781%" height="15" fill="rgb(218,87,9)" fg:x="718" fg:w="1"/><text x="56.3000%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="56.1280%" y="709" width="0.0781%" height="15" fill="rgb(219,47,37)" fg:x="719" fg:w="1"/><text x="56.3780%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.4403%" y="581" width="0.0781%" height="15" fill="rgb(221,152,34)" fg:x="723" fg:w="1"/><text x="56.6903%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="56.5183%" y="581" width="0.0781%" height="15" fill="rgb(235,176,21)" fg:x="724" fg:w="1"/><text x="56.7683%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="56.7525%" y="549" width="0.0781%" height="15" fill="rgb(232,212,21)" fg:x="727" fg:w="1"/><text x="57.0025%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="56.8306%" y="549" width="0.0781%" height="15" fill="rgb(245,82,39)" fg:x="728" fg:w="1"/><text x="57.0806%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="56.8306%" y="533" width="0.0781%" height="15" fill="rgb(241,52,51)" fg:x="728" fg:w="1"/><text x="57.0806%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.8306%" y="517" width="0.0781%" height="15" fill="rgb(219,91,24)" fg:x="728" fg:w="1"/><text x="57.0806%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.8306%" y="501" width="0.0781%" height="15" fill="rgb(241,142,12)" fg:x="728" fg:w="1"/><text x="57.0806%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.8306%" y="485" width="0.0781%" height="15" fill="rgb(230,27,9)" fg:x="728" fg:w="1"/><text x="57.0806%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.9867%" y="437" width="0.1561%" height="15" fill="rgb(249,181,32)" fg:x="730" fg:w="2"/><text x="57.2367%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.9867%" y="421" width="0.1561%" height="15" fill="rgb(230,107,3)" fg:x="730" fg:w="2"/><text x="57.2367%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="56.9087%" y="501" width="0.3123%" height="15" fill="rgb(246,204,14)" fg:x="729" fg:w="4"/><text x="57.1587%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="56.9087%" y="485" width="0.3123%" height="15" fill="rgb(213,192,47)" fg:x="729" fg:w="4"/><text x="57.1587%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="56.9087%" y="469" width="0.3123%" height="15" fill="rgb(240,44,36)" fg:x="729" fg:w="4"/><text x="57.1587%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="56.9087%" y="453" width="0.3123%" height="15" fill="rgb(244,209,38)" fg:x="729" fg:w="4"/><text x="57.1587%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.1429%" y="437" width="0.0781%" height="15" fill="rgb(219,34,37)" fg:x="732" fg:w="1"/><text x="57.3929%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2209%" y="501" width="0.0781%" height="15" fill="rgb(210,28,6)" fg:x="733" fg:w="1"/><text x="57.4709%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="57.2990%" y="501" width="0.1561%" height="15" fill="rgb(244,110,52)" fg:x="734" fg:w="2"/><text x="57.5490%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="57.2990%" y="485" width="0.1561%" height="15" fill="rgb(254,124,47)" fg:x="734" fg:w="2"/><text x="57.5490%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="57.2990%" y="469" width="0.1561%" height="15" fill="rgb(254,110,13)" fg:x="734" fg:w="2"/><text x="57.5490%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="57.2990%" y="453" width="0.1561%" height="15" fill="rgb(252,57,21)" fg:x="734" fg:w="2"/><text x="57.5490%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="57.2990%" y="437" width="0.1561%" height="15" fill="rgb(242,60,45)" fg:x="734" fg:w="2"/><text x="57.5490%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.3770%" y="421" width="0.0781%" height="15" fill="rgb(234,49,30)" fg:x="735" fg:w="1"/><text x="57.6270%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.8454%" y="373" width="0.0781%" height="15" fill="rgb(218,98,6)" fg:x="741" fg:w="1"/><text x="58.0954%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (14 samples, 1.09%)</title><rect x="56.9087%" y="549" width="1.0929%" height="15" fill="rgb(220,174,29)" fg:x="729" fg:w="14"/><text x="57.1587%" y="559.50"></text></g><g><title>kernel::model::props::load_props (14 samples, 1.09%)</title><rect x="56.9087%" y="533" width="1.0929%" height="15" fill="rgb(236,163,23)" fg:x="729" fg:w="14"/><text x="57.1587%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.09%)</title><rect x="56.9087%" y="517" width="1.0929%" height="15" fill="rgb(242,114,45)" fg:x="729" fg:w="14"/><text x="57.1587%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="57.4551%" y="501" width="0.5464%" height="15" fill="rgb(232,10,53)" fg:x="736" fg:w="7"/><text x="57.7051%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="57.4551%" y="485" width="0.5464%" height="15" fill="rgb(245,108,29)" fg:x="736" fg:w="7"/><text x="57.7051%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="57.4551%" y="469" width="0.5464%" height="15" fill="rgb(240,89,53)" fg:x="736" fg:w="7"/><text x="57.7051%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="57.4551%" y="453" width="0.5464%" height="15" fill="rgb(226,60,45)" fg:x="736" fg:w="7"/><text x="57.7051%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.39%)</title><rect x="57.6112%" y="437" width="0.3903%" height="15" fill="rgb(230,41,44)" fg:x="738" fg:w="5"/><text x="57.8612%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="57.6112%" y="421" width="0.3903%" height="15" fill="rgb(230,26,20)" fg:x="738" fg:w="5"/><text x="57.8612%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.39%)</title><rect x="57.6112%" y="405" width="0.3903%" height="15" fill="rgb(237,170,32)" fg:x="738" fg:w="5"/><text x="57.8612%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="57.6112%" y="389" width="0.3903%" height="15" fill="rgb(212,35,42)" fg:x="738" fg:w="5"/><text x="57.8612%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.9235%" y="373" width="0.0781%" height="15" fill="rgb(227,31,34)" fg:x="742" fg:w="1"/><text x="58.1735%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.9235%" y="357" width="0.0781%" height="15" fill="rgb(216,19,18)" fg:x="742" fg:w="1"/><text x="58.1735%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.9235%" y="341" width="0.0781%" height="15" fill="rgb(211,133,42)" fg:x="742" fg:w="1"/><text x="58.1735%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="58.0016%" y="533" width="0.0781%" height="15" fill="rgb(244,66,13)" fg:x="743" fg:w="1"/><text x="58.2516%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.0016%" y="517" width="0.0781%" height="15" fill="rgb(218,185,50)" fg:x="743" fg:w="1"/><text x="58.2516%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.0796%" y="533" width="0.0781%" height="15" fill="rgb(219,149,13)" fg:x="744" fg:w="1"/><text x="58.3296%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.6261%" y="437" width="0.1561%" height="15" fill="rgb(221,125,0)" fg:x="751" fg:w="2"/><text x="58.8761%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="58.4699%" y="453" width="0.3903%" height="15" fill="rgb(247,126,27)" fg:x="749" fg:w="5"/><text x="58.7199%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.7822%" y="437" width="0.0781%" height="15" fill="rgb(250,138,30)" fg:x="753" fg:w="1"/><text x="59.0322%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.7822%" y="421" width="0.0781%" height="15" fill="rgb(230,151,9)" fg:x="753" fg:w="1"/><text x="59.0322%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.7822%" y="405" width="0.0781%" height="15" fill="rgb(233,80,38)" fg:x="753" fg:w="1"/><text x="59.0322%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.7822%" y="389" width="0.0781%" height="15" fill="rgb(232,68,43)" fg:x="753" fg:w="1"/><text x="59.0322%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.7822%" y="373" width="0.0781%" height="15" fill="rgb(254,5,50)" fg:x="753" fg:w="1"/><text x="59.0322%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="58.7822%" y="357" width="0.0781%" height="15" fill="rgb(225,45,5)" fg:x="753" fg:w="1"/><text x="59.0322%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="58.7822%" y="341" width="0.0781%" height="15" fill="rgb(239,22,3)" fg:x="753" fg:w="1"/><text x="59.0322%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.62%)</title><rect x="58.3138%" y="501" width="0.6245%" height="15" fill="rgb(243,129,0)" fg:x="747" fg:w="8"/><text x="58.5638%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.62%)</title><rect x="58.3138%" y="485" width="0.6245%" height="15" fill="rgb(223,164,0)" fg:x="747" fg:w="8"/><text x="58.5638%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.47%)</title><rect x="58.4699%" y="469" width="0.4684%" height="15" fill="rgb(221,46,29)" fg:x="749" fg:w="6"/><text x="58.7199%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.8603%" y="453" width="0.0781%" height="15" fill="rgb(205,97,47)" fg:x="754" fg:w="1"/><text x="59.1103%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.8603%" y="437" width="0.0781%" height="15" fill="rgb(249,14,8)" fg:x="754" fg:w="1"/><text x="59.1103%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.8603%" y="421" width="0.0781%" height="15" fill="rgb(216,77,3)" fg:x="754" fg:w="1"/><text x="59.1103%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.8603%" y="405" width="0.0781%" height="15" fill="rgb(206,168,54)" fg:x="754" fg:w="1"/><text x="59.1103%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.8603%" y="389" width="0.0781%" height="15" fill="rgb(236,3,41)" fg:x="754" fg:w="1"/><text x="59.1103%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.8603%" y="373" width="0.0781%" height="15" fill="rgb(231,132,24)" fg:x="754" fg:w="1"/><text x="59.1103%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.8603%" y="357" width="0.0781%" height="15" fill="rgb(227,221,40)" fg:x="754" fg:w="1"/><text x="59.1103%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.8603%" y="341" width="0.0781%" height="15" fill="rgb(233,151,11)" fg:x="754" fg:w="1"/><text x="59.1103%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.8603%" y="325" width="0.0781%" height="15" fill="rgb(247,81,35)" fg:x="754" fg:w="1"/><text x="59.1103%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.8603%" y="309" width="0.0781%" height="15" fill="rgb(243,128,48)" fg:x="754" fg:w="1"/><text x="59.1103%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.8603%" y="293" width="0.0781%" height="15" fill="rgb(253,16,10)" fg:x="754" fg:w="1"/><text x="59.1103%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.8603%" y="277" width="0.0781%" height="15" fill="rgb(228,67,27)" fg:x="754" fg:w="1"/><text x="59.1103%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.9383%" y="469" width="0.0781%" height="15" fill="rgb(231,105,25)" fg:x="755" fg:w="1"/><text x="59.1883%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="58.9383%" y="501" width="0.1561%" height="15" fill="rgb(213,166,47)" fg:x="755" fg:w="2"/><text x="59.1883%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="58.9383%" y="485" width="0.1561%" height="15" fill="rgb(209,27,10)" fg:x="755" fg:w="2"/><text x="59.1883%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.0164%" y="469" width="0.0781%" height="15" fill="rgb(241,44,30)" fg:x="756" fg:w="1"/><text x="59.2664%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.0164%" y="453" width="0.0781%" height="15" fill="rgb(223,216,15)" fg:x="756" fg:w="1"/><text x="59.2664%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.1725%" y="437" width="0.0781%" height="15" fill="rgb(227,14,7)" fg:x="758" fg:w="1"/><text x="59.4225%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.31%)</title><rect x="59.2506%" y="405" width="0.3123%" height="15" fill="rgb(237,14,5)" fg:x="759" fg:w="4"/><text x="59.5006%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.5628%" y="373" width="0.0781%" height="15" fill="rgb(232,14,36)" fg:x="763" fg:w="1"/><text x="59.8128%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.23%)</title><rect x="59.7190%" y="341" width="0.2342%" height="15" fill="rgb(234,0,38)" fg:x="765" fg:w="3"/><text x="59.9690%" y="351.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (42 samples, 3.28%)</title><rect x="56.7525%" y="565" width="3.2787%" height="15" fill="rgb(207,170,14)" fg:x="727" fg:w="42"/><text x="57.0025%" y="575.50">&lt;&amp;k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (26 samples, 2.03%)</title><rect x="58.0016%" y="549" width="2.0297%" height="15" fill="rgb(252,45,13)" fg:x="743" fg:w="26"/><text x="58.2516%" y="559.50">&lt;..</text></g><g><title>kernel::model::props::load_props (24 samples, 1.87%)</title><rect x="58.1577%" y="533" width="1.8735%" height="15" fill="rgb(213,142,7)" fg:x="745" fg:w="24"/><text x="58.4077%" y="543.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (24 samples, 1.87%)</title><rect x="58.1577%" y="517" width="1.8735%" height="15" fill="rgb(216,157,23)" fg:x="745" fg:w="24"/><text x="58.4077%" y="527.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.94%)</title><rect x="59.0945%" y="501" width="0.9368%" height="15" fill="rgb(212,145,33)" fg:x="757" fg:w="12"/><text x="59.3445%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.94%)</title><rect x="59.0945%" y="485" width="0.9368%" height="15" fill="rgb(233,26,13)" fg:x="757" fg:w="12"/><text x="59.3445%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.86%)</title><rect x="59.1725%" y="469" width="0.8587%" height="15" fill="rgb(219,196,19)" fg:x="758" fg:w="11"/><text x="59.4225%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.86%)</title><rect x="59.1725%" y="453" width="0.8587%" height="15" fill="rgb(246,56,21)" fg:x="758" fg:w="11"/><text x="59.4225%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.78%)</title><rect x="59.2506%" y="437" width="0.7806%" height="15" fill="rgb(222,28,53)" fg:x="759" fg:w="10"/><text x="59.5006%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.78%)</title><rect x="59.2506%" y="421" width="0.7806%" height="15" fill="rgb(224,5,27)" fg:x="759" fg:w="10"/><text x="59.5006%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="59.5628%" y="405" width="0.4684%" height="15" fill="rgb(220,153,33)" fg:x="763" fg:w="6"/><text x="59.8128%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="59.5628%" y="389" width="0.4684%" height="15" fill="rgb(226,58,19)" fg:x="763" fg:w="6"/><text x="59.8128%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.39%)</title><rect x="59.6409%" y="373" width="0.3903%" height="15" fill="rgb(239,112,23)" fg:x="764" fg:w="5"/><text x="59.8909%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="59.6409%" y="357" width="0.3903%" height="15" fill="rgb(251,213,20)" fg:x="764" fg:w="5"/><text x="59.8909%" y="367.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="59.9532%" y="341" width="0.0781%" height="15" fill="rgb(215,181,21)" fg:x="768" fg:w="1"/><text x="60.2032%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="60.1093%" y="533" width="0.0781%" height="15" fill="rgb(240,8,35)" fg:x="770" fg:w="1"/><text x="60.3593%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="60.1093%" y="517" width="0.0781%" height="15" fill="rgb(232,203,3)" fg:x="770" fg:w="1"/><text x="60.3593%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="60.3435%" y="245" width="0.0781%" height="15" fill="rgb(214,202,43)" fg:x="773" fg:w="1"/><text x="60.5935%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="60.3435%" y="229" width="0.0781%" height="15" fill="rgb(254,35,11)" fg:x="773" fg:w="1"/><text x="60.5935%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="60.3435%" y="213" width="0.0781%" height="15" fill="rgb(239,173,13)" fg:x="773" fg:w="1"/><text x="60.5935%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="60.3435%" y="197" width="0.0781%" height="15" fill="rgb(220,141,0)" fg:x="773" fg:w="1"/><text x="60.5935%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="60.3435%" y="181" width="0.0781%" height="15" fill="rgb(210,98,12)" fg:x="773" fg:w="1"/><text x="60.5935%" y="191.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="60.3435%" y="341" width="0.1561%" height="15" fill="rgb(254,153,22)" fg:x="773" fg:w="2"/><text x="60.5935%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="60.3435%" y="325" width="0.1561%" height="15" fill="rgb(247,223,17)" fg:x="773" fg:w="2"/><text x="60.5935%" y="335.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="60.3435%" y="309" width="0.1561%" height="15" fill="rgb(246,56,7)" fg:x="773" fg:w="2"/><text x="60.5935%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="60.3435%" y="293" width="0.1561%" height="15" fill="rgb(240,226,12)" fg:x="773" fg:w="2"/><text x="60.5935%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="60.3435%" y="277" width="0.1561%" height="15" fill="rgb(205,87,46)" fg:x="773" fg:w="2"/><text x="60.5935%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="60.3435%" y="261" width="0.1561%" height="15" fill="rgb(245,214,51)" fg:x="773" fg:w="2"/><text x="60.5935%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.4215%" y="245" width="0.0781%" height="15" fill="rgb(223,172,33)" fg:x="774" fg:w="1"/><text x="60.6715%" y="255.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="60.4996%" y="325" width="0.1561%" height="15" fill="rgb(227,203,34)" fg:x="775" fg:w="2"/><text x="60.7496%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="60.4996%" y="309" width="0.1561%" height="15" fill="rgb(248,143,44)" fg:x="775" fg:w="2"/><text x="60.7496%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="60.4996%" y="293" width="0.1561%" height="15" fill="rgb(226,162,5)" fg:x="775" fg:w="2"/><text x="60.7496%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="60.4996%" y="277" width="0.1561%" height="15" fill="rgb(211,143,1)" fg:x="775" fg:w="2"/><text x="60.7496%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="60.4996%" y="261" width="0.1561%" height="15" fill="rgb(224,96,15)" fg:x="775" fg:w="2"/><text x="60.7496%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="60.4996%" y="245" width="0.1561%" height="15" fill="rgb(222,4,38)" fg:x="775" fg:w="2"/><text x="60.7496%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="60.4996%" y="229" width="0.1561%" height="15" fill="rgb(253,228,15)" fg:x="775" fg:w="2"/><text x="60.7496%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="60.4996%" y="213" width="0.1561%" height="15" fill="rgb(242,194,12)" fg:x="775" fg:w="2"/><text x="60.7496%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="60.4996%" y="197" width="0.1561%" height="15" fill="rgb(214,177,31)" fg:x="775" fg:w="2"/><text x="60.7496%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="60.4996%" y="181" width="0.1561%" height="15" fill="rgb(226,58,51)" fg:x="775" fg:w="2"/><text x="60.7496%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="60.4996%" y="165" width="0.1561%" height="15" fill="rgb(250,119,16)" fg:x="775" fg:w="2"/><text x="60.7496%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="60.4996%" y="149" width="0.1561%" height="15" fill="rgb(223,128,53)" fg:x="775" fg:w="2"/><text x="60.7496%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="60.4996%" y="133" width="0.1561%" height="15" fill="rgb(251,199,15)" fg:x="775" fg:w="2"/><text x="60.7496%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="60.4996%" y="117" width="0.1561%" height="15" fill="rgb(235,168,42)" fg:x="775" fg:w="2"/><text x="60.7496%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="60.4996%" y="101" width="0.1561%" height="15" fill="rgb(250,210,17)" fg:x="775" fg:w="2"/><text x="60.7496%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="60.4996%" y="85" width="0.1561%" height="15" fill="rgb(226,36,41)" fg:x="775" fg:w="2"/><text x="60.7496%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="60.4996%" y="69" width="0.1561%" height="15" fill="rgb(225,87,10)" fg:x="775" fg:w="2"/><text x="60.7496%" y="79.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="60.4996%" y="53" width="0.1561%" height="15" fill="rgb(228,83,9)" fg:x="775" fg:w="2"/><text x="60.7496%" y="63.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="60.4996%" y="37" width="0.1561%" height="15" fill="rgb(225,16,36)" fg:x="775" fg:w="2"/><text x="60.7496%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (9 samples, 0.70%)</title><rect x="60.0312%" y="565" width="0.7026%" height="15" fill="rgb(242,198,13)" fg:x="769" fg:w="9"/><text x="60.2812%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (8 samples, 0.62%)</title><rect x="60.1093%" y="549" width="0.6245%" height="15" fill="rgb(239,25,51)" fg:x="770" fg:w="8"/><text x="60.3593%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.55%)</title><rect x="60.1874%" y="533" width="0.5464%" height="15" fill="rgb(239,28,37)" fg:x="771" fg:w="7"/><text x="60.4374%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.47%)</title><rect x="60.2654%" y="517" width="0.4684%" height="15" fill="rgb(234,70,17)" fg:x="772" fg:w="6"/><text x="60.5154%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.47%)</title><rect x="60.2654%" y="501" width="0.4684%" height="15" fill="rgb(231,215,53)" fg:x="772" fg:w="6"/><text x="60.5154%" y="511.50"></text></g><g><title>core::fmt::write (6 samples, 0.47%)</title><rect x="60.2654%" y="485" width="0.4684%" height="15" fill="rgb(218,140,42)" fg:x="772" fg:w="6"/><text x="60.5154%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.39%)</title><rect x="60.3435%" y="469" width="0.3903%" height="15" fill="rgb(233,227,45)" fg:x="773" fg:w="5"/><text x="60.5935%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (5 samples, 0.39%)</title><rect x="60.3435%" y="453" width="0.3903%" height="15" fill="rgb(225,189,21)" fg:x="773" fg:w="5"/><text x="60.5935%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.39%)</title><rect x="60.3435%" y="437" width="0.3903%" height="15" fill="rgb(237,176,54)" fg:x="773" fg:w="5"/><text x="60.5935%" y="447.50"></text></g><g><title>core::fmt::write (5 samples, 0.39%)</title><rect x="60.3435%" y="421" width="0.3903%" height="15" fill="rgb(215,131,46)" fg:x="773" fg:w="5"/><text x="60.5935%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.39%)</title><rect x="60.3435%" y="405" width="0.3903%" height="15" fill="rgb(218,95,20)" fg:x="773" fg:w="5"/><text x="60.5935%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (5 samples, 0.39%)</title><rect x="60.3435%" y="389" width="0.3903%" height="15" fill="rgb(208,198,12)" fg:x="773" fg:w="5"/><text x="60.5935%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.39%)</title><rect x="60.3435%" y="373" width="0.3903%" height="15" fill="rgb(239,107,50)" fg:x="773" fg:w="5"/><text x="60.5935%" y="383.50"></text></g><g><title>core::fmt::write (5 samples, 0.39%)</title><rect x="60.3435%" y="357" width="0.3903%" height="15" fill="rgb(240,217,37)" fg:x="773" fg:w="5"/><text x="60.5935%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="60.4996%" y="341" width="0.2342%" height="15" fill="rgb(242,197,49)" fg:x="775" fg:w="3"/><text x="60.7496%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.6557%" y="325" width="0.0781%" height="15" fill="rgb(219,171,17)" fg:x="777" fg:w="1"/><text x="60.9057%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.6557%" y="309" width="0.0781%" height="15" fill="rgb(209,81,40)" fg:x="777" fg:w="1"/><text x="60.9057%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="60.6557%" y="293" width="0.0781%" height="15" fill="rgb(237,156,30)" fg:x="777" fg:w="1"/><text x="60.9057%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="60.6557%" y="277" width="0.0781%" height="15" fill="rgb(212,127,16)" fg:x="777" fg:w="1"/><text x="60.9057%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="60.6557%" y="261" width="0.0781%" height="15" fill="rgb(226,66,32)" fg:x="777" fg:w="1"/><text x="60.9057%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="60.6557%" y="245" width="0.0781%" height="15" fill="rgb(245,22,46)" fg:x="777" fg:w="1"/><text x="60.9057%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="60.6557%" y="229" width="0.0781%" height="15" fill="rgb(210,112,21)" fg:x="777" fg:w="1"/><text x="60.9057%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="60.6557%" y="213" width="0.0781%" height="15" fill="rgb(207,118,39)" fg:x="777" fg:w="1"/><text x="60.9057%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="60.6557%" y="197" width="0.0781%" height="15" fill="rgb(205,206,35)" fg:x="777" fg:w="1"/><text x="60.9057%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="60.6557%" y="181" width="0.0781%" height="15" fill="rgb(222,120,2)" fg:x="777" fg:w="1"/><text x="60.9057%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="60.6557%" y="165" width="0.0781%" height="15" fill="rgb(205,38,18)" fg:x="777" fg:w="1"/><text x="60.9057%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="60.6557%" y="149" width="0.0781%" height="15" fill="rgb(226,61,2)" fg:x="777" fg:w="1"/><text x="60.9057%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="60.6557%" y="133" width="0.0781%" height="15" fill="rgb(242,161,23)" fg:x="777" fg:w="1"/><text x="60.9057%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="60.6557%" y="117" width="0.0781%" height="15" fill="rgb(213,13,52)" fg:x="777" fg:w="1"/><text x="60.9057%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="60.6557%" y="101" width="0.0781%" height="15" fill="rgb(246,209,47)" fg:x="777" fg:w="1"/><text x="60.9057%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.7338%" y="565" width="0.0781%" height="15" fill="rgb(214,41,3)" fg:x="778" fg:w="1"/><text x="60.9838%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="60.8119%" y="565" width="0.0781%" height="15" fill="rgb(236,119,38)" fg:x="779" fg:w="1"/><text x="61.0619%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="60.8119%" y="549" width="0.0781%" height="15" fill="rgb(218,50,11)" fg:x="779" fg:w="1"/><text x="61.0619%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="60.8899%" y="565" width="0.1561%" height="15" fill="rgb(228,38,11)" fg:x="780" fg:w="2"/><text x="61.1399%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="60.9680%" y="549" width="0.0781%" height="15" fill="rgb(212,13,9)" fg:x="781" fg:w="1"/><text x="61.2180%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4364%" y="501" width="0.0781%" height="15" fill="rgb(208,211,9)" fg:x="787" fg:w="1"/><text x="61.6864%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4364%" y="485" width="0.0781%" height="15" fill="rgb(239,39,32)" fg:x="787" fg:w="1"/><text x="61.6864%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.4364%" y="469" width="0.0781%" height="15" fill="rgb(254,179,26)" fg:x="787" fg:w="1"/><text x="61.6864%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.4364%" y="453" width="0.0781%" height="15" fill="rgb(249,165,28)" fg:x="787" fg:w="1"/><text x="61.6864%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.4364%" y="437" width="0.0781%" height="15" fill="rgb(225,59,50)" fg:x="787" fg:w="1"/><text x="61.6864%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4364%" y="421" width="0.0781%" height="15" fill="rgb(209,122,5)" fg:x="787" fg:w="1"/><text x="61.6864%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4364%" y="405" width="0.0781%" height="15" fill="rgb(214,65,34)" fg:x="787" fg:w="1"/><text x="61.6864%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.4364%" y="389" width="0.0781%" height="15" fill="rgb(249,183,32)" fg:x="787" fg:w="1"/><text x="61.6864%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.4364%" y="373" width="0.0781%" height="15" fill="rgb(218,122,24)" fg:x="787" fg:w="1"/><text x="61.6864%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.4364%" y="357" width="0.0781%" height="15" fill="rgb(224,109,18)" fg:x="787" fg:w="1"/><text x="61.6864%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.4364%" y="341" width="0.0781%" height="15" fill="rgb(210,68,50)" fg:x="787" fg:w="1"/><text x="61.6864%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4364%" y="325" width="0.0781%" height="15" fill="rgb(212,184,34)" fg:x="787" fg:w="1"/><text x="61.6864%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.5925%" y="389" width="0.0781%" height="15" fill="rgb(238,105,48)" fg:x="789" fg:w="1"/><text x="61.8425%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.5925%" y="373" width="0.0781%" height="15" fill="rgb(222,134,54)" fg:x="789" fg:w="1"/><text x="61.8425%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.5925%" y="357" width="0.0781%" height="15" fill="rgb(246,24,43)" fg:x="789" fg:w="1"/><text x="61.8425%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.5925%" y="341" width="0.0781%" height="15" fill="rgb(227,169,22)" fg:x="789" fg:w="1"/><text x="61.8425%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.5925%" y="325" width="0.0781%" height="15" fill="rgb(253,152,4)" fg:x="789" fg:w="1"/><text x="61.8425%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.5925%" y="309" width="0.0781%" height="15" fill="rgb(219,158,36)" fg:x="789" fg:w="1"/><text x="61.8425%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5925%" y="293" width="0.0781%" height="15" fill="rgb(251,128,40)" fg:x="789" fg:w="1"/><text x="61.8425%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.39%)</title><rect x="61.4364%" y="533" width="0.3903%" height="15" fill="rgb(254,101,39)" fg:x="787" fg:w="5"/><text x="61.6864%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="61.4364%" y="517" width="0.3903%" height="15" fill="rgb(221,168,40)" fg:x="787" fg:w="5"/><text x="61.6864%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="61.5144%" y="501" width="0.3123%" height="15" fill="rgb(221,14,27)" fg:x="788" fg:w="4"/><text x="61.7644%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="61.5144%" y="485" width="0.3123%" height="15" fill="rgb(207,36,43)" fg:x="788" fg:w="4"/><text x="61.7644%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="61.5144%" y="469" width="0.3123%" height="15" fill="rgb(240,172,53)" fg:x="788" fg:w="4"/><text x="61.7644%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="61.5925%" y="453" width="0.2342%" height="15" fill="rgb(241,138,43)" fg:x="789" fg:w="3"/><text x="61.8425%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.23%)</title><rect x="61.5925%" y="437" width="0.2342%" height="15" fill="rgb(227,78,19)" fg:x="789" fg:w="3"/><text x="61.8425%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.23%)</title><rect x="61.5925%" y="421" width="0.2342%" height="15" fill="rgb(215,127,44)" fg:x="789" fg:w="3"/><text x="61.8425%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.23%)</title><rect x="61.5925%" y="405" width="0.2342%" height="15" fill="rgb(227,13,10)" fg:x="789" fg:w="3"/><text x="61.8425%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="61.6706%" y="389" width="0.1561%" height="15" fill="rgb(249,177,6)" fg:x="790" fg:w="2"/><text x="61.9206%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="61.6706%" y="373" width="0.1561%" height="15" fill="rgb(215,154,26)" fg:x="790" fg:w="2"/><text x="61.9206%" y="383.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="61.9048%" y="437" width="0.1561%" height="15" fill="rgb(250,168,20)" fg:x="793" fg:w="2"/><text x="62.1548%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9828%" y="421" width="0.0781%" height="15" fill="rgb(222,53,38)" fg:x="794" fg:w="1"/><text x="62.2328%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9828%" y="405" width="0.0781%" height="15" fill="rgb(245,154,5)" fg:x="794" fg:w="1"/><text x="62.2328%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.9828%" y="389" width="0.0781%" height="15" fill="rgb(214,89,50)" fg:x="794" fg:w="1"/><text x="62.2328%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.9828%" y="373" width="0.0781%" height="15" fill="rgb(232,73,14)" fg:x="794" fg:w="1"/><text x="62.2328%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.9828%" y="357" width="0.0781%" height="15" fill="rgb(230,101,20)" fg:x="794" fg:w="1"/><text x="62.2328%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.9828%" y="341" width="0.0781%" height="15" fill="rgb(208,56,28)" fg:x="794" fg:w="1"/><text x="62.2328%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.9828%" y="325" width="0.0781%" height="15" fill="rgb(247,205,22)" fg:x="794" fg:w="1"/><text x="62.2328%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.0609%" y="341" width="0.0781%" height="15" fill="rgb(252,109,51)" fg:x="795" fg:w="1"/><text x="62.3109%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.0609%" y="325" width="0.0781%" height="15" fill="rgb(220,40,24)" fg:x="795" fg:w="1"/><text x="62.3109%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.0609%" y="309" width="0.0781%" height="15" fill="rgb(251,108,7)" fg:x="795" fg:w="1"/><text x="62.3109%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.0609%" y="293" width="0.0781%" height="15" fill="rgb(238,102,51)" fg:x="795" fg:w="1"/><text x="62.3109%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.0609%" y="277" width="0.0781%" height="15" fill="rgb(219,149,34)" fg:x="795" fg:w="1"/><text x="62.3109%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.1390%" y="245" width="0.0781%" height="15" fill="rgb(239,70,0)" fg:x="796" fg:w="1"/><text x="62.3890%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.1390%" y="229" width="0.0781%" height="15" fill="rgb(246,214,23)" fg:x="796" fg:w="1"/><text x="62.3890%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.1390%" y="213" width="0.0781%" height="15" fill="rgb(239,221,51)" fg:x="796" fg:w="1"/><text x="62.3890%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="62.0609%" y="389" width="0.2342%" height="15" fill="rgb(254,62,14)" fg:x="795" fg:w="3"/><text x="62.3109%" y="399.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="62.0609%" y="373" width="0.2342%" height="15" fill="rgb(253,57,33)" fg:x="795" fg:w="3"/><text x="62.3109%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="62.0609%" y="357" width="0.2342%" height="15" fill="rgb(229,34,6)" fg:x="795" fg:w="3"/><text x="62.3109%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.1390%" y="341" width="0.1561%" height="15" fill="rgb(235,191,23)" fg:x="796" fg:w="2"/><text x="62.3890%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.1390%" y="325" width="0.1561%" height="15" fill="rgb(217,207,27)" fg:x="796" fg:w="2"/><text x="62.3890%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.1390%" y="309" width="0.1561%" height="15" fill="rgb(232,41,44)" fg:x="796" fg:w="2"/><text x="62.3890%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.1390%" y="293" width="0.1561%" height="15" fill="rgb(221,188,19)" fg:x="796" fg:w="2"/><text x="62.3890%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="62.1390%" y="277" width="0.1561%" height="15" fill="rgb(245,180,45)" fg:x="796" fg:w="2"/><text x="62.3890%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.1390%" y="261" width="0.1561%" height="15" fill="rgb(250,220,42)" fg:x="796" fg:w="2"/><text x="62.3890%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2170%" y="245" width="0.0781%" height="15" fill="rgb(234,16,34)" fg:x="797" fg:w="1"/><text x="62.4670%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2170%" y="229" width="0.0781%" height="15" fill="rgb(233,217,23)" fg:x="797" fg:w="1"/><text x="62.4670%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2170%" y="213" width="0.0781%" height="15" fill="rgb(209,22,46)" fg:x="797" fg:w="1"/><text x="62.4670%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2170%" y="197" width="0.0781%" height="15" fill="rgb(213,101,18)" fg:x="797" fg:w="1"/><text x="62.4670%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="62.2170%" y="181" width="0.0781%" height="15" fill="rgb(215,179,52)" fg:x="797" fg:w="1"/><text x="62.4670%" y="191.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="62.2170%" y="165" width="0.0781%" height="15" fill="rgb(223,50,25)" fg:x="797" fg:w="1"/><text x="62.4670%" y="175.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="62.2951%" y="373" width="0.0781%" height="15" fill="rgb(224,51,44)" fg:x="798" fg:w="1"/><text x="62.5451%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3731%" y="277" width="0.0781%" height="15" fill="rgb(224,13,54)" fg:x="799" fg:w="1"/><text x="62.6231%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3731%" y="261" width="0.0781%" height="15" fill="rgb(219,58,47)" fg:x="799" fg:w="1"/><text x="62.6231%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3731%" y="245" width="0.0781%" height="15" fill="rgb(246,124,34)" fg:x="799" fg:w="1"/><text x="62.6231%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.3731%" y="229" width="0.0781%" height="15" fill="rgb(245,109,25)" fg:x="799" fg:w="1"/><text x="62.6231%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.3731%" y="213" width="0.0781%" height="15" fill="rgb(235,48,23)" fg:x="799" fg:w="1"/><text x="62.6231%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.3731%" y="197" width="0.0781%" height="15" fill="rgb(229,203,36)" fg:x="799" fg:w="1"/><text x="62.6231%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3731%" y="181" width="0.0781%" height="15" fill="rgb(234,180,9)" fg:x="799" fg:w="1"/><text x="62.6231%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3731%" y="165" width="0.0781%" height="15" fill="rgb(228,98,45)" fg:x="799" fg:w="1"/><text x="62.6231%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.3731%" y="149" width="0.0781%" height="15" fill="rgb(240,24,36)" fg:x="799" fg:w="1"/><text x="62.6231%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.3731%" y="133" width="0.0781%" height="15" fill="rgb(227,154,19)" fg:x="799" fg:w="1"/><text x="62.6231%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.3731%" y="117" width="0.0781%" height="15" fill="rgb(231,2,48)" fg:x="799" fg:w="1"/><text x="62.6231%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.3731%" y="101" width="0.0781%" height="15" fill="rgb(219,216,0)" fg:x="799" fg:w="1"/><text x="62.6231%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.3731%" y="341" width="0.1561%" height="15" fill="rgb(251,88,0)" fg:x="799" fg:w="2"/><text x="62.6231%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.3731%" y="325" width="0.1561%" height="15" fill="rgb(242,45,45)" fg:x="799" fg:w="2"/><text x="62.6231%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.3731%" y="309" width="0.1561%" height="15" fill="rgb(218,149,45)" fg:x="799" fg:w="2"/><text x="62.6231%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.3731%" y="293" width="0.1561%" height="15" fill="rgb(247,194,10)" fg:x="799" fg:w="2"/><text x="62.6231%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.4512%" y="277" width="0.0781%" height="15" fill="rgb(234,33,37)" fg:x="800" fg:w="1"/><text x="62.7012%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.4512%" y="261" width="0.0781%" height="15" fill="rgb(218,61,13)" fg:x="800" fg:w="1"/><text x="62.7012%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.4512%" y="245" width="0.0781%" height="15" fill="rgb(210,80,52)" fg:x="800" fg:w="1"/><text x="62.7012%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.4512%" y="229" width="0.0781%" height="15" fill="rgb(218,203,27)" fg:x="800" fg:w="1"/><text x="62.7012%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.4512%" y="213" width="0.0781%" height="15" fill="rgb(209,126,33)" fg:x="800" fg:w="1"/><text x="62.7012%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.4512%" y="197" width="0.0781%" height="15" fill="rgb(234,173,41)" fg:x="800" fg:w="1"/><text x="62.7012%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.4512%" y="181" width="0.0781%" height="15" fill="rgb(228,166,9)" fg:x="800" fg:w="1"/><text x="62.7012%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.4512%" y="165" width="0.0781%" height="15" fill="rgb(208,124,43)" fg:x="800" fg:w="1"/><text x="62.7012%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.4512%" y="149" width="0.0781%" height="15" fill="rgb(212,154,38)" fg:x="800" fg:w="1"/><text x="62.7012%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.4512%" y="133" width="0.0781%" height="15" fill="rgb(246,179,35)" fg:x="800" fg:w="1"/><text x="62.7012%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.4512%" y="117" width="0.0781%" height="15" fill="rgb(251,3,50)" fg:x="800" fg:w="1"/><text x="62.7012%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.4512%" y="101" width="0.0781%" height="15" fill="rgb(219,96,8)" fg:x="800" fg:w="1"/><text x="62.7012%" y="111.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.55%)</title><rect x="62.0609%" y="421" width="0.5464%" height="15" fill="rgb(251,216,33)" fg:x="795" fg:w="7"/><text x="62.3109%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.55%)</title><rect x="62.0609%" y="405" width="0.5464%" height="15" fill="rgb(243,145,29)" fg:x="795" fg:w="7"/><text x="62.3109%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="62.2951%" y="389" width="0.3123%" height="15" fill="rgb(210,75,20)" fg:x="798" fg:w="4"/><text x="62.5451%" y="399.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="62.3731%" y="373" width="0.2342%" height="15" fill="rgb(235,56,8)" fg:x="799" fg:w="3"/><text x="62.6231%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="62.3731%" y="357" width="0.2342%" height="15" fill="rgb(226,175,49)" fg:x="799" fg:w="3"/><text x="62.6231%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.5293%" y="341" width="0.0781%" height="15" fill="rgb(242,204,23)" fg:x="801" fg:w="1"/><text x="62.7793%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.5293%" y="325" width="0.0781%" height="15" fill="rgb(225,104,24)" fg:x="801" fg:w="1"/><text x="62.7793%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.5293%" y="309" width="0.0781%" height="15" fill="rgb(253,34,1)" fg:x="801" fg:w="1"/><text x="62.7793%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.5293%" y="293" width="0.0781%" height="15" fill="rgb(233,199,23)" fg:x="801" fg:w="1"/><text x="62.7793%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.5293%" y="277" width="0.0781%" height="15" fill="rgb(247,7,51)" fg:x="801" fg:w="1"/><text x="62.7793%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.5293%" y="261" width="0.0781%" height="15" fill="rgb(214,146,12)" fg:x="801" fg:w="1"/><text x="62.7793%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.5293%" y="245" width="0.0781%" height="15" fill="rgb(234,181,43)" fg:x="801" fg:w="1"/><text x="62.7793%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.5293%" y="229" width="0.0781%" height="15" fill="rgb(239,148,6)" fg:x="801" fg:w="1"/><text x="62.7793%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.5293%" y="213" width="0.0781%" height="15" fill="rgb(206,151,17)" fg:x="801" fg:w="1"/><text x="62.7793%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.5293%" y="197" width="0.0781%" height="15" fill="rgb(213,215,10)" fg:x="801" fg:w="1"/><text x="62.7793%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.5293%" y="181" width="0.0781%" height="15" fill="rgb(215,220,44)" fg:x="801" fg:w="1"/><text x="62.7793%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.5293%" y="165" width="0.0781%" height="15" fill="rgb(245,205,37)" fg:x="801" fg:w="1"/><text x="62.7793%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.6073%" y="357" width="0.0781%" height="15" fill="rgb(245,130,43)" fg:x="802" fg:w="1"/><text x="62.8573%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.6073%" y="341" width="0.0781%" height="15" fill="rgb(231,227,38)" fg:x="802" fg:w="1"/><text x="62.8573%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.6854%" y="325" width="0.0781%" height="15" fill="rgb(233,185,4)" fg:x="803" fg:w="1"/><text x="62.9354%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="62.6854%" y="309" width="0.0781%" height="15" fill="rgb(224,154,43)" fg:x="803" fg:w="1"/><text x="62.9354%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="62.8415%" y="277" width="0.2342%" height="15" fill="rgb(235,156,15)" fg:x="805" fg:w="3"/><text x="63.0915%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="62.8415%" y="261" width="0.2342%" height="15" fill="rgb(211,55,43)" fg:x="805" fg:w="3"/><text x="63.0915%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="62.8415%" y="245" width="0.2342%" height="15" fill="rgb(247,149,40)" fg:x="805" fg:w="3"/><text x="63.0915%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="62.8415%" y="229" width="0.2342%" height="15" fill="rgb(232,171,16)" fg:x="805" fg:w="3"/><text x="63.0915%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="62.8415%" y="213" width="0.2342%" height="15" fill="rgb(215,117,49)" fg:x="805" fg:w="3"/><text x="63.0915%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="62.9196%" y="197" width="0.1561%" height="15" fill="rgb(246,194,11)" fg:x="806" fg:w="2"/><text x="63.1696%" y="207.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.62%)</title><rect x="62.6073%" y="405" width="0.6245%" height="15" fill="rgb(242,101,44)" fg:x="802" fg:w="8"/><text x="62.8573%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.62%)</title><rect x="62.6073%" y="389" width="0.6245%" height="15" fill="rgb(226,174,6)" fg:x="802" fg:w="8"/><text x="62.8573%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.62%)</title><rect x="62.6073%" y="373" width="0.6245%" height="15" fill="rgb(213,150,20)" fg:x="802" fg:w="8"/><text x="62.8573%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.55%)</title><rect x="62.6854%" y="357" width="0.5464%" height="15" fill="rgb(222,124,42)" fg:x="803" fg:w="7"/><text x="62.9354%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.55%)</title><rect x="62.6854%" y="341" width="0.5464%" height="15" fill="rgb(250,19,47)" fg:x="803" fg:w="7"/><text x="62.9354%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="62.7635%" y="325" width="0.4684%" height="15" fill="rgb(241,217,19)" fg:x="804" fg:w="6"/><text x="63.0135%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="62.8415%" y="309" width="0.3903%" height="15" fill="rgb(207,210,34)" fg:x="805" fg:w="5"/><text x="63.0915%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.39%)</title><rect x="62.8415%" y="293" width="0.3903%" height="15" fill="rgb(244,45,4)" fg:x="805" fg:w="5"/><text x="63.0915%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="63.0757%" y="277" width="0.1561%" height="15" fill="rgb(252,134,50)" fg:x="808" fg:w="2"/><text x="63.3257%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.1538%" y="261" width="0.0781%" height="15" fill="rgb(238,74,2)" fg:x="809" fg:w="1"/><text x="63.4038%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.2319%" y="341" width="0.0781%" height="15" fill="rgb(226,58,46)" fg:x="810" fg:w="1"/><text x="63.4819%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.2319%" y="325" width="0.0781%" height="15" fill="rgb(232,83,35)" fg:x="810" fg:w="1"/><text x="63.4819%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.3099%" y="229" width="0.0781%" height="15" fill="rgb(212,148,47)" fg:x="811" fg:w="1"/><text x="63.5599%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.3099%" y="213" width="0.0781%" height="15" fill="rgb(235,29,1)" fg:x="811" fg:w="1"/><text x="63.5599%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="63.3099%" y="197" width="0.0781%" height="15" fill="rgb(247,55,37)" fg:x="811" fg:w="1"/><text x="63.5599%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="63.3099%" y="261" width="0.1561%" height="15" fill="rgb(222,48,3)" fg:x="811" fg:w="2"/><text x="63.5599%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.3099%" y="245" width="0.1561%" height="15" fill="rgb(234,21,33)" fg:x="811" fg:w="2"/><text x="63.5599%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.3880%" y="229" width="0.0781%" height="15" fill="rgb(247,178,53)" fg:x="812" fg:w="1"/><text x="63.6380%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.3880%" y="213" width="0.0781%" height="15" fill="rgb(225,75,7)" fg:x="812" fg:w="1"/><text x="63.6380%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.3880%" y="197" width="0.0781%" height="15" fill="rgb(219,199,7)" fg:x="812" fg:w="1"/><text x="63.6380%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.3880%" y="181" width="0.0781%" height="15" fill="rgb(209,93,42)" fg:x="812" fg:w="1"/><text x="63.6380%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.3880%" y="165" width="0.0781%" height="15" fill="rgb(240,175,17)" fg:x="812" fg:w="1"/><text x="63.6380%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.4660%" y="261" width="0.0781%" height="15" fill="rgb(232,106,7)" fg:x="813" fg:w="1"/><text x="63.7160%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.4660%" y="245" width="0.0781%" height="15" fill="rgb(242,106,43)" fg:x="813" fg:w="1"/><text x="63.7160%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.4660%" y="229" width="0.0781%" height="15" fill="rgb(242,61,37)" fg:x="813" fg:w="1"/><text x="63.7160%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="63.3099%" y="325" width="0.3123%" height="15" fill="rgb(205,72,10)" fg:x="811" fg:w="4"/><text x="63.5599%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="63.3099%" y="309" width="0.3123%" height="15" fill="rgb(214,184,36)" fg:x="811" fg:w="4"/><text x="63.5599%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="63.3099%" y="293" width="0.3123%" height="15" fill="rgb(206,107,18)" fg:x="811" fg:w="4"/><text x="63.5599%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="63.3099%" y="277" width="0.3123%" height="15" fill="rgb(210,75,5)" fg:x="811" fg:w="4"/><text x="63.5599%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.5441%" y="261" width="0.0781%" height="15" fill="rgb(205,3,19)" fg:x="814" fg:w="1"/><text x="63.7941%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.7002%" y="293" width="0.0781%" height="15" fill="rgb(207,181,42)" fg:x="816" fg:w="1"/><text x="63.9502%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.7002%" y="277" width="0.0781%" height="15" fill="rgb(229,179,43)" fg:x="816" fg:w="1"/><text x="63.9502%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.7002%" y="261" width="0.0781%" height="15" fill="rgb(246,95,30)" fg:x="816" fg:w="1"/><text x="63.9502%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (18 samples, 1.41%)</title><rect x="62.6073%" y="421" width="1.4052%" height="15" fill="rgb(234,144,45)" fg:x="802" fg:w="18"/><text x="62.8573%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.78%)</title><rect x="63.2319%" y="405" width="0.7806%" height="15" fill="rgb(250,54,25)" fg:x="810" fg:w="10"/><text x="63.4819%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.78%)</title><rect x="63.2319%" y="389" width="0.7806%" height="15" fill="rgb(215,195,40)" fg:x="810" fg:w="10"/><text x="63.4819%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.78%)</title><rect x="63.2319%" y="373" width="0.7806%" height="15" fill="rgb(233,188,42)" fg:x="810" fg:w="10"/><text x="63.4819%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.78%)</title><rect x="63.2319%" y="357" width="0.7806%" height="15" fill="rgb(247,227,35)" fg:x="810" fg:w="10"/><text x="63.4819%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.70%)</title><rect x="63.3099%" y="341" width="0.7026%" height="15" fill="rgb(249,124,27)" fg:x="811" fg:w="9"/><text x="63.5599%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="63.6222%" y="325" width="0.3903%" height="15" fill="rgb(219,207,25)" fg:x="815" fg:w="5"/><text x="63.8722%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="63.6222%" y="309" width="0.3903%" height="15" fill="rgb(241,216,47)" fg:x="815" fg:w="5"/><text x="63.8722%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.23%)</title><rect x="63.7783%" y="293" width="0.2342%" height="15" fill="rgb(233,82,50)" fg:x="817" fg:w="3"/><text x="64.0283%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="63.7783%" y="277" width="0.2342%" height="15" fill="rgb(232,63,2)" fg:x="817" fg:w="3"/><text x="64.0283%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="63.7783%" y="261" width="0.2342%" height="15" fill="rgb(236,184,28)" fg:x="817" fg:w="3"/><text x="64.0283%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="63.8564%" y="245" width="0.1561%" height="15" fill="rgb(254,63,27)" fg:x="818" fg:w="2"/><text x="64.1064%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.8564%" y="229" width="0.1561%" height="15" fill="rgb(253,106,28)" fg:x="818" fg:w="2"/><text x="64.1064%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.8564%" y="213" width="0.1561%" height="15" fill="rgb(225,141,39)" fg:x="818" fg:w="2"/><text x="64.1064%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.9344%" y="197" width="0.0781%" height="15" fill="rgb(222,157,20)" fg:x="819" fg:w="1"/><text x="64.1844%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9344%" y="181" width="0.0781%" height="15" fill="rgb(210,190,9)" fg:x="819" fg:w="1"/><text x="64.1844%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.9344%" y="165" width="0.0781%" height="15" fill="rgb(242,167,7)" fg:x="819" fg:w="1"/><text x="64.1844%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.9344%" y="149" width="0.0781%" height="15" fill="rgb(227,82,41)" fg:x="819" fg:w="1"/><text x="64.1844%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9344%" y="133" width="0.0781%" height="15" fill="rgb(222,131,13)" fg:x="819" fg:w="1"/><text x="64.1844%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="64.0125%" y="373" width="0.2342%" height="15" fill="rgb(221,98,26)" fg:x="820" fg:w="3"/><text x="64.2625%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.0906%" y="357" width="0.1561%" height="15" fill="rgb(251,63,52)" fg:x="821" fg:w="2"/><text x="64.3406%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.0906%" y="341" width="0.1561%" height="15" fill="rgb(246,25,43)" fg:x="821" fg:w="2"/><text x="64.3406%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.0906%" y="325" width="0.1561%" height="15" fill="rgb(247,167,15)" fg:x="821" fg:w="2"/><text x="64.3406%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.0906%" y="309" width="0.1561%" height="15" fill="rgb(240,104,42)" fg:x="821" fg:w="2"/><text x="64.3406%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.0906%" y="293" width="0.1561%" height="15" fill="rgb(224,54,6)" fg:x="821" fg:w="2"/><text x="64.3406%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="64.0125%" y="421" width="0.3123%" height="15" fill="rgb(244,108,35)" fg:x="820" fg:w="4"/><text x="64.2625%" y="431.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="64.0125%" y="405" width="0.3123%" height="15" fill="rgb(216,154,2)" fg:x="820" fg:w="4"/><text x="64.2625%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="64.0125%" y="389" width="0.3123%" height="15" fill="rgb(222,8,47)" fg:x="820" fg:w="4"/><text x="64.2625%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.2467%" y="373" width="0.0781%" height="15" fill="rgb(252,93,1)" fg:x="823" fg:w="1"/><text x="64.4967%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.2467%" y="357" width="0.0781%" height="15" fill="rgb(223,226,51)" fg:x="823" fg:w="1"/><text x="64.4967%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.2467%" y="341" width="0.0781%" height="15" fill="rgb(206,147,9)" fg:x="823" fg:w="1"/><text x="64.4967%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.2467%" y="325" width="0.0781%" height="15" fill="rgb(248,180,41)" fg:x="823" fg:w="1"/><text x="64.4967%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="64.2467%" y="309" width="0.0781%" height="15" fill="rgb(209,47,50)" fg:x="823" fg:w="1"/><text x="64.4967%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.2467%" y="293" width="0.0781%" height="15" fill="rgb(243,65,31)" fg:x="823" fg:w="1"/><text x="64.4967%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.2467%" y="277" width="0.0781%" height="15" fill="rgb(228,128,1)" fg:x="823" fg:w="1"/><text x="64.4967%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.2467%" y="261" width="0.0781%" height="15" fill="rgb(231,192,16)" fg:x="823" fg:w="1"/><text x="64.4967%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.3247%" y="421" width="0.0781%" height="15" fill="rgb(224,26,40)" fg:x="824" fg:w="1"/><text x="64.5747%" y="431.50"></text></g><g><title>__libc_malloc (4 samples, 0.31%)</title><rect x="64.4028%" y="357" width="0.3123%" height="15" fill="rgb(214,192,17)" fg:x="825" fg:w="4"/><text x="64.6528%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (36 samples, 2.81%)</title><rect x="62.0609%" y="437" width="2.8103%" height="15" fill="rgb(225,147,18)" fg:x="795" fg:w="36"/><text x="62.3109%" y="447.50">en..</text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.47%)</title><rect x="64.4028%" y="421" width="0.4684%" height="15" fill="rgb(205,35,11)" fg:x="825" fg:w="6"/><text x="64.6528%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.47%)</title><rect x="64.4028%" y="405" width="0.4684%" height="15" fill="rgb(242,40,42)" fg:x="825" fg:w="6"/><text x="64.6528%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.47%)</title><rect x="64.4028%" y="389" width="0.4684%" height="15" fill="rgb(250,170,13)" fg:x="825" fg:w="6"/><text x="64.6528%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.47%)</title><rect x="64.4028%" y="373" width="0.4684%" height="15" fill="rgb(240,161,28)" fg:x="825" fg:w="6"/><text x="64.6528%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="64.7151%" y="357" width="0.1561%" height="15" fill="rgb(245,179,12)" fg:x="829" fg:w="2"/><text x="64.9651%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.7931%" y="341" width="0.0781%" height="15" fill="rgb(250,92,32)" fg:x="830" fg:w="1"/><text x="65.0431%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (40 samples, 3.12%)</title><rect x="61.8267%" y="533" width="3.1226%" height="15" fill="rgb(233,10,40)" fg:x="792" fg:w="40"/><text x="62.0767%" y="543.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (40 samples, 3.12%)</title><rect x="61.8267%" y="517" width="3.1226%" height="15" fill="rgb(217,98,1)" fg:x="792" fg:w="40"/><text x="62.0767%" y="527.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (40 samples, 3.12%)</title><rect x="61.8267%" y="501" width="3.1226%" height="15" fill="rgb(238,202,7)" fg:x="792" fg:w="40"/><text x="62.0767%" y="511.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 3.12%)</title><rect x="61.8267%" y="485" width="3.1226%" height="15" fill="rgb(222,91,3)" fg:x="792" fg:w="40"/><text x="62.0767%" y="495.50">&lt;co..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (39 samples, 3.04%)</title><rect x="61.9048%" y="469" width="3.0445%" height="15" fill="rgb(211,170,49)" fg:x="793" fg:w="39"/><text x="62.1548%" y="479.50">&lt;en..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (39 samples, 3.04%)</title><rect x="61.9048%" y="453" width="3.0445%" height="15" fill="rgb(253,139,18)" fg:x="793" fg:w="39"/><text x="62.1548%" y="463.50">&lt;en..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="64.8712%" y="437" width="0.0781%" height="15" fill="rgb(222,4,43)" fg:x="831" fg:w="1"/><text x="65.1212%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8712%" y="421" width="0.0781%" height="15" fill="rgb(207,205,12)" fg:x="831" fg:w="1"/><text x="65.1212%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8712%" y="405" width="0.0781%" height="15" fill="rgb(216,159,46)" fg:x="831" fg:w="1"/><text x="65.1212%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8712%" y="389" width="0.0781%" height="15" fill="rgb(236,115,1)" fg:x="831" fg:w="1"/><text x="65.1212%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.8712%" y="373" width="0.0781%" height="15" fill="rgb(251,35,33)" fg:x="831" fg:w="1"/><text x="65.1212%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.8712%" y="357" width="0.0781%" height="15" fill="rgb(248,62,51)" fg:x="831" fg:w="1"/><text x="65.1212%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.8712%" y="341" width="0.0781%" height="15" fill="rgb(254,180,19)" fg:x="831" fg:w="1"/><text x="65.1212%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.8712%" y="325" width="0.0781%" height="15" fill="rgb(217,100,32)" fg:x="831" fg:w="1"/><text x="65.1212%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.8712%" y="309" width="0.0781%" height="15" fill="rgb(224,71,22)" fg:x="831" fg:w="1"/><text x="65.1212%" y="319.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="64.9493%" y="533" width="0.0781%" height="15" fill="rgb(251,185,33)" fg:x="832" fg:w="1"/><text x="65.1993%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="64.9493%" y="517" width="0.0781%" height="15" fill="rgb(209,75,48)" fg:x="832" fg:w="1"/><text x="65.1993%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="64.9493%" y="501" width="0.0781%" height="15" fill="rgb(253,190,16)" fg:x="832" fg:w="1"/><text x="65.1993%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="64.9493%" y="485" width="0.0781%" height="15" fill="rgb(226,140,1)" fg:x="832" fg:w="1"/><text x="65.1993%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="64.9493%" y="469" width="0.0781%" height="15" fill="rgb(206,75,30)" fg:x="832" fg:w="1"/><text x="65.1993%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="64.9493%" y="453" width="0.0781%" height="15" fill="rgb(231,208,37)" fg:x="832" fg:w="1"/><text x="65.1993%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.0273%" y="533" width="0.0781%" height="15" fill="rgb(238,136,40)" fg:x="833" fg:w="1"/><text x="65.2773%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.1054%" y="501" width="0.0781%" height="15" fill="rgb(247,137,17)" fg:x="834" fg:w="1"/><text x="65.3554%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (6 samples, 0.47%)</title><rect x="65.1054%" y="533" width="0.4684%" height="15" fill="rgb(240,60,40)" fg:x="834" fg:w="6"/><text x="65.3554%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="65.1054%" y="517" width="0.4684%" height="15" fill="rgb(236,68,50)" fg:x="834" fg:w="6"/><text x="65.3554%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.39%)</title><rect x="65.1835%" y="501" width="0.3903%" height="15" fill="rgb(230,42,12)" fg:x="835" fg:w="5"/><text x="65.4335%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (5 samples, 0.39%)</title><rect x="65.1835%" y="485" width="0.3903%" height="15" fill="rgb(219,16,16)" fg:x="835" fg:w="5"/><text x="65.4335%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.31%)</title><rect x="65.2615%" y="469" width="0.3123%" height="15" fill="rgb(220,38,35)" fg:x="836" fg:w="4"/><text x="65.5115%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.4176%" y="453" width="0.1561%" height="15" fill="rgb(228,33,1)" fg:x="838" fg:w="2"/><text x="65.6676%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.4176%" y="437" width="0.1561%" height="15" fill="rgb(241,46,31)" fg:x="838" fg:w="2"/><text x="65.6676%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.6518%" y="501" width="0.0781%" height="15" fill="rgb(232,58,20)" fg:x="841" fg:w="1"/><text x="65.9018%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.7299%" y="469" width="0.0781%" height="15" fill="rgb(206,228,53)" fg:x="842" fg:w="1"/><text x="65.9799%" y="479.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (121 samples, 9.45%)</title><rect x="56.4403%" y="597" width="9.4457%" height="15" fill="rgb(206,88,33)" fg:x="723" fg:w="121"/><text x="56.6903%" y="607.50">&lt;plugins_core:..</text></g><g><title>plugins_core::looking::model::new_area_observation (119 samples, 9.29%)</title><rect x="56.5964%" y="581" width="9.2896%" height="15" fill="rgb(238,69,7)" fg:x="725" fg:w="119"/><text x="56.8464%" y="591.50">plugins_core:..</text></g><g><title>kernel::model::entry::Entry::scope (62 samples, 4.84%)</title><rect x="61.0461%" y="565" width="4.8400%" height="15" fill="rgb(250,21,46)" fg:x="782" fg:w="62"/><text x="61.2961%" y="575.50">kernel..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (61 samples, 4.76%)</title><rect x="61.1241%" y="549" width="4.7619%" height="15" fill="rgb(215,212,21)" fg:x="783" fg:w="61"/><text x="61.3741%" y="559.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="65.5738%" y="533" width="0.3123%" height="15" fill="rgb(211,35,12)" fg:x="840" fg:w="4"/><text x="65.8238%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="65.5738%" y="517" width="0.3123%" height="15" fill="rgb(231,184,16)" fg:x="840" fg:w="4"/><text x="65.8238%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="65.7299%" y="501" width="0.1561%" height="15" fill="rgb(242,140,15)" fg:x="842" fg:w="2"/><text x="65.9799%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="65.7299%" y="485" width="0.1561%" height="15" fill="rgb(220,37,14)" fg:x="842" fg:w="2"/><text x="65.9799%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="65.8080%" y="469" width="0.0781%" height="15" fill="rgb(223,146,22)" fg:x="843" fg:w="1"/><text x="66.0580%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8080%" y="453" width="0.0781%" height="15" fill="rgb(216,132,15)" fg:x="843" fg:w="1"/><text x="66.0580%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8080%" y="437" width="0.0781%" height="15" fill="rgb(248,83,5)" fg:x="843" fg:w="1"/><text x="66.0580%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.8080%" y="421" width="0.0781%" height="15" fill="rgb(231,206,48)" fg:x="843" fg:w="1"/><text x="66.0580%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.8860%" y="597" width="0.0781%" height="15" fill="rgb(253,185,37)" fg:x="844" fg:w="1"/><text x="66.1360%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (169 samples, 13.19%)</title><rect x="52.8493%" y="789" width="13.1928%" height="15" fill="rgb(208,21,44)" fg:x="677" fg:w="169"/><text x="53.0993%" y="799.50">&lt;engine::session::Se..</text></g><g><title>kernel::plugins::mw::apply_middleware (168 samples, 13.11%)</title><rect x="52.9274%" y="773" width="13.1148%" height="15" fill="rgb(236,125,4)" fg:x="678" fg:w="168"/><text x="53.1774%" y="783.50">kernel::plugins::mw:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (168 samples, 13.11%)</title><rect x="52.9274%" y="757" width="13.1148%" height="15" fill="rgb(226,134,25)" fg:x="678" fg:w="168"/><text x="53.1774%" y="767.50">kernel::plugins::mw:..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (167 samples, 13.04%)</title><rect x="53.0055%" y="741" width="13.0367%" height="15" fill="rgb(250,201,12)" fg:x="679" fg:w="167"/><text x="53.2555%" y="751.50">&lt;engine::session::Ex..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (127 samples, 9.91%)</title><rect x="56.1280%" y="725" width="9.9141%" height="15" fill="rgb(225,92,18)" fg:x="719" fg:w="127"/><text x="56.3780%" y="735.50">kernel::plugin..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (126 samples, 9.84%)</title><rect x="56.2061%" y="709" width="9.8361%" height="15" fill="rgb(227,35,22)" fg:x="720" fg:w="126"/><text x="56.4561%" y="719.50">&lt;plugins_dynli..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (125 samples, 9.76%)</title><rect x="56.2842%" y="693" width="9.7580%" height="15" fill="rgb(214,180,52)" fg:x="721" fg:w="125"/><text x="56.5342%" y="703.50">kernel::plugin..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (125 samples, 9.76%)</title><rect x="56.2842%" y="677" width="9.7580%" height="15" fill="rgb(233,55,38)" fg:x="721" fg:w="125"/><text x="56.5342%" y="687.50">core::ops::fun..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (125 samples, 9.76%)</title><rect x="56.2842%" y="661" width="9.7580%" height="15" fill="rgb(249,171,43)" fg:x="721" fg:w="125"/><text x="56.5342%" y="671.50">kernel::plugin..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (125 samples, 9.76%)</title><rect x="56.2842%" y="645" width="9.7580%" height="15" fill="rgb(239,87,2)" fg:x="721" fg:w="125"/><text x="56.5342%" y="655.50">core::ops::fun..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (125 samples, 9.76%)</title><rect x="56.2842%" y="629" width="9.7580%" height="15" fill="rgb(248,141,5)" fg:x="721" fg:w="125"/><text x="56.5342%" y="639.50">&lt;alloc::boxed:..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (125 samples, 9.76%)</title><rect x="56.2842%" y="613" width="9.7580%" height="15" fill="rgb(238,33,42)" fg:x="721" fg:w="125"/><text x="56.5342%" y="623.50">&lt;engine::sessi..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="65.9641%" y="597" width="0.0781%" height="15" fill="rgb(231,57,19)" fg:x="845" fg:w="1"/><text x="66.2141%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.9641%" y="581" width="0.0781%" height="15" fill="rgb(214,78,53)" fg:x="845" fg:w="1"/><text x="66.2141%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.1202%" y="661" width="0.0781%" height="15" fill="rgb(206,132,29)" fg:x="847" fg:w="1"/><text x="66.3702%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="66.1202%" y="645" width="0.0781%" height="15" fill="rgb(248,174,31)" fg:x="847" fg:w="1"/><text x="66.3702%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.31%)</title><rect x="66.1202%" y="741" width="0.3123%" height="15" fill="rgb(221,87,13)" fg:x="847" fg:w="4"/><text x="66.3702%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="66.1202%" y="725" width="0.3123%" height="15" fill="rgb(223,197,17)" fg:x="847" fg:w="4"/><text x="66.3702%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="66.1202%" y="709" width="0.3123%" height="15" fill="rgb(220,144,50)" fg:x="847" fg:w="4"/><text x="66.3702%" y="719.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="66.1202%" y="693" width="0.3123%" height="15" fill="rgb(244,201,11)" fg:x="847" fg:w="4"/><text x="66.3702%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="66.1202%" y="677" width="0.3123%" height="15" fill="rgb(249,81,34)" fg:x="847" fg:w="4"/><text x="66.3702%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="66.1983%" y="661" width="0.2342%" height="15" fill="rgb(205,161,12)" fg:x="848" fg:w="3"/><text x="66.4483%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="66.1983%" y="645" width="0.2342%" height="15" fill="rgb(252,139,50)" fg:x="848" fg:w="3"/><text x="66.4483%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="66.1983%" y="629" width="0.2342%" height="15" fill="rgb(205,169,14)" fg:x="848" fg:w="3"/><text x="66.4483%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="66.1983%" y="613" width="0.2342%" height="15" fill="rgb(248,198,33)" fg:x="848" fg:w="3"/><text x="66.4483%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="66.2763%" y="597" width="0.1561%" height="15" fill="rgb(236,23,21)" fg:x="849" fg:w="2"/><text x="66.5263%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.2763%" y="581" width="0.1561%" height="15" fill="rgb(231,13,38)" fg:x="849" fg:w="2"/><text x="66.5263%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.3544%" y="565" width="0.0781%" height="15" fill="rgb(239,139,21)" fg:x="850" fg:w="1"/><text x="66.6044%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.3544%" y="549" width="0.0781%" height="15" fill="rgb(222,164,45)" fg:x="850" fg:w="1"/><text x="66.6044%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.4325%" y="677" width="0.0781%" height="15" fill="rgb(230,52,27)" fg:x="851" fg:w="1"/><text x="66.6825%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.5105%" y="677" width="0.0781%" height="15" fill="rgb(227,143,42)" fg:x="852" fg:w="1"/><text x="66.7605%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.7447%" y="581" width="0.0781%" height="15" fill="rgb(249,127,1)" fg:x="855" fg:w="1"/><text x="66.9947%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="66.7447%" y="613" width="0.3123%" height="15" fill="rgb(243,107,26)" fg:x="855" fg:w="4"/><text x="66.9947%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="66.7447%" y="597" width="0.3123%" height="15" fill="rgb(225,7,45)" fg:x="855" fg:w="4"/><text x="66.9947%" y="607.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="66.8228%" y="581" width="0.2342%" height="15" fill="rgb(241,88,38)" fg:x="856" fg:w="3"/><text x="67.0728%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.0570%" y="549" width="0.0781%" height="15" fill="rgb(226,121,9)" fg:x="859" fg:w="1"/><text x="67.3070%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.0570%" y="533" width="0.0781%" height="15" fill="rgb(253,60,29)" fg:x="859" fg:w="1"/><text x="67.3070%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.1351%" y="517" width="0.0781%" height="15" fill="rgb(244,181,39)" fg:x="860" fg:w="1"/><text x="67.3851%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1351%" y="501" width="0.0781%" height="15" fill="rgb(252,203,31)" fg:x="860" fg:w="1"/><text x="67.3851%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="67.0570%" y="597" width="0.3123%" height="15" fill="rgb(224,120,8)" fg:x="859" fg:w="4"/><text x="67.3070%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="67.0570%" y="581" width="0.3123%" height="15" fill="rgb(205,171,54)" fg:x="859" fg:w="4"/><text x="67.3070%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="67.0570%" y="565" width="0.3123%" height="15" fill="rgb(235,89,11)" fg:x="859" fg:w="4"/><text x="67.3070%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="67.1351%" y="549" width="0.2342%" height="15" fill="rgb(212,180,28)" fg:x="860" fg:w="3"/><text x="67.3851%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="67.1351%" y="533" width="0.2342%" height="15" fill="rgb(247,84,49)" fg:x="860" fg:w="3"/><text x="67.3851%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="67.2131%" y="517" width="0.1561%" height="15" fill="rgb(236,187,52)" fg:x="861" fg:w="2"/><text x="67.4631%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="67.2131%" y="501" width="0.1561%" height="15" fill="rgb(227,24,15)" fg:x="861" fg:w="2"/><text x="67.4631%" y="511.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.09%)</title><rect x="66.4325%" y="725" width="1.0929%" height="15" fill="rgb(227,211,13)" fg:x="851" fg:w="14"/><text x="66.6825%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.09%)</title><rect x="66.4325%" y="709" width="1.0929%" height="15" fill="rgb(245,52,14)" fg:x="851" fg:w="14"/><text x="66.6825%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.09%)</title><rect x="66.4325%" y="693" width="1.0929%" height="15" fill="rgb(225,185,13)" fg:x="851" fg:w="14"/><text x="66.6825%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.94%)</title><rect x="66.5886%" y="677" width="0.9368%" height="15" fill="rgb(217,160,29)" fg:x="853" fg:w="12"/><text x="66.8386%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.94%)</title><rect x="66.5886%" y="661" width="0.9368%" height="15" fill="rgb(216,115,53)" fg:x="853" fg:w="12"/><text x="66.8386%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.86%)</title><rect x="66.6667%" y="645" width="0.8587%" height="15" fill="rgb(236,99,5)" fg:x="854" fg:w="11"/><text x="66.9167%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.78%)</title><rect x="66.7447%" y="629" width="0.7806%" height="15" fill="rgb(222,60,38)" fg:x="855" fg:w="10"/><text x="66.9947%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="67.0570%" y="613" width="0.4684%" height="15" fill="rgb(212,82,22)" fg:x="859" fg:w="6"/><text x="67.3070%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="67.3692%" y="597" width="0.1561%" height="15" fill="rgb(214,48,28)" fg:x="863" fg:w="2"/><text x="67.6192%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.3692%" y="581" width="0.1561%" height="15" fill="rgb(245,196,50)" fg:x="863" fg:w="2"/><text x="67.6192%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.4473%" y="565" width="0.0781%" height="15" fill="rgb(225,159,46)" fg:x="864" fg:w="1"/><text x="67.6973%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.4473%" y="549" width="0.0781%" height="15" fill="rgb(207,195,48)" fg:x="864" fg:w="1"/><text x="67.6973%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.7596%" y="661" width="0.0781%" height="15" fill="rgb(240,73,3)" fg:x="868" fg:w="1"/><text x="68.0096%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.8376%" y="661" width="0.0781%" height="15" fill="rgb(245,57,23)" fg:x="869" fg:w="1"/><text x="68.0876%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.8376%" y="645" width="0.0781%" height="15" fill="rgb(240,75,18)" fg:x="869" fg:w="1"/><text x="68.0876%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="67.9157%" y="549" width="0.2342%" height="15" fill="rgb(238,168,12)" fg:x="870" fg:w="3"/><text x="68.1657%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="67.9157%" y="533" width="0.2342%" height="15" fill="rgb(226,20,40)" fg:x="870" fg:w="3"/><text x="68.1657%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.0718%" y="517" width="0.0781%" height="15" fill="rgb(224,130,35)" fg:x="872" fg:w="1"/><text x="68.3218%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.0718%" y="501" width="0.0781%" height="15" fill="rgb(225,63,41)" fg:x="872" fg:w="1"/><text x="68.3218%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="68.0718%" y="485" width="0.0781%" height="15" fill="rgb(219,3,3)" fg:x="872" fg:w="1"/><text x="68.3218%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.1499%" y="501" width="0.0781%" height="15" fill="rgb(218,157,4)" fg:x="873" fg:w="1"/><text x="68.3999%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.1499%" y="485" width="0.0781%" height="15" fill="rgb(232,76,36)" fg:x="873" fg:w="1"/><text x="68.3999%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="67.9157%" y="581" width="0.3903%" height="15" fill="rgb(247,36,0)" fg:x="870" fg:w="5"/><text x="68.1657%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="67.9157%" y="565" width="0.3903%" height="15" fill="rgb(205,2,34)" fg:x="870" fg:w="5"/><text x="68.1657%" y="575.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="68.1499%" y="549" width="0.1561%" height="15" fill="rgb(239,136,13)" fg:x="873" fg:w="2"/><text x="68.3999%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.1499%" y="533" width="0.1561%" height="15" fill="rgb(253,122,12)" fg:x="873" fg:w="2"/><text x="68.3999%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.1499%" y="517" width="0.1561%" height="15" fill="rgb(222,174,7)" fg:x="873" fg:w="2"/><text x="68.3999%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="68.2279%" y="501" width="0.0781%" height="15" fill="rgb(208,191,42)" fg:x="874" fg:w="1"/><text x="68.4779%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.47%)</title><rect x="67.9157%" y="613" width="0.4684%" height="15" fill="rgb(237,212,15)" fg:x="870" fg:w="6"/><text x="68.1657%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="67.9157%" y="597" width="0.4684%" height="15" fill="rgb(215,65,20)" fg:x="870" fg:w="6"/><text x="68.1657%" y="607.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="68.3060%" y="581" width="0.0781%" height="15" fill="rgb(232,103,11)" fg:x="875" fg:w="1"/><text x="68.5560%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.3060%" y="565" width="0.0781%" height="15" fill="rgb(235,148,18)" fg:x="875" fg:w="1"/><text x="68.5560%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3060%" y="549" width="0.0781%" height="15" fill="rgb(240,173,7)" fg:x="875" fg:w="1"/><text x="68.5560%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.62%)</title><rect x="67.9157%" y="645" width="0.6245%" height="15" fill="rgb(228,182,25)" fg:x="870" fg:w="8"/><text x="68.1657%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.62%)</title><rect x="67.9157%" y="629" width="0.6245%" height="15" fill="rgb(247,3,52)" fg:x="870" fg:w="8"/><text x="68.1657%" y="639.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="68.3841%" y="613" width="0.1561%" height="15" fill="rgb(226,155,8)" fg:x="876" fg:w="2"/><text x="68.6341%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.3841%" y="597" width="0.1561%" height="15" fill="rgb(243,195,38)" fg:x="876" fg:w="2"/><text x="68.6341%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.3841%" y="581" width="0.1561%" height="15" fill="rgb(254,181,33)" fg:x="876" fg:w="2"/><text x="68.6341%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.3841%" y="565" width="0.1561%" height="15" fill="rgb(232,98,23)" fg:x="876" fg:w="2"/><text x="68.6341%" y="575.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="68.3841%" y="549" width="0.1561%" height="15" fill="rgb(205,23,10)" fg:x="876" fg:w="2"/><text x="68.6341%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.6963%" y="597" width="0.0781%" height="15" fill="rgb(212,124,38)" fg:x="880" fg:w="1"/><text x="68.9463%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.31%)</title><rect x="68.5402%" y="645" width="0.3123%" height="15" fill="rgb(228,207,2)" fg:x="878" fg:w="4"/><text x="68.7902%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.31%)</title><rect x="68.5402%" y="629" width="0.3123%" height="15" fill="rgb(215,120,22)" fg:x="878" fg:w="4"/><text x="68.7902%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.31%)</title><rect x="68.5402%" y="613" width="0.3123%" height="15" fill="rgb(251,172,33)" fg:x="878" fg:w="4"/><text x="68.7902%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="68.7744%" y="597" width="0.0781%" height="15" fill="rgb(250,83,2)" fg:x="881" fg:w="1"/><text x="69.0244%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="68.7744%" y="581" width="0.0781%" height="15" fill="rgb(210,132,53)" fg:x="881" fg:w="1"/><text x="69.0244%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="68.7744%" y="565" width="0.0781%" height="15" fill="rgb(221,208,36)" fg:x="881" fg:w="1"/><text x="69.0244%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="68.7744%" y="549" width="0.0781%" height="15" fill="rgb(205,192,46)" fg:x="881" fg:w="1"/><text x="69.0244%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.8525%" y="613" width="0.0781%" height="15" fill="rgb(223,163,14)" fg:x="882" fg:w="1"/><text x="69.1025%" y="623.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="68.9305%" y="597" width="0.0781%" height="15" fill="rgb(218,41,28)" fg:x="883" fg:w="1"/><text x="69.1805%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="68.9305%" y="581" width="0.0781%" height="15" fill="rgb(235,104,10)" fg:x="883" fg:w="1"/><text x="69.1805%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.9305%" y="565" width="0.0781%" height="15" fill="rgb(246,17,4)" fg:x="883" fg:w="1"/><text x="69.1805%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.9305%" y="549" width="0.0781%" height="15" fill="rgb(240,7,16)" fg:x="883" fg:w="1"/><text x="69.1805%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.0086%" y="581" width="0.0781%" height="15" fill="rgb(213,160,23)" fg:x="884" fg:w="1"/><text x="69.2586%" y="591.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="69.0867%" y="549" width="0.0781%" height="15" fill="rgb(251,179,49)" fg:x="885" fg:w="1"/><text x="69.3367%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="69.0867%" y="533" width="0.0781%" height="15" fill="rgb(247,198,10)" fg:x="885" fg:w="1"/><text x="69.3367%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (20 samples, 1.56%)</title><rect x="67.6815%" y="693" width="1.5613%" height="15" fill="rgb(220,65,29)" fg:x="867" fg:w="20"/><text x="67.9315%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (20 samples, 1.56%)</title><rect x="67.6815%" y="677" width="1.5613%" height="15" fill="rgb(237,171,28)" fg:x="867" fg:w="20"/><text x="67.9315%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (17 samples, 1.33%)</title><rect x="67.9157%" y="661" width="1.3271%" height="15" fill="rgb(228,44,26)" fg:x="870" fg:w="17"/><text x="68.1657%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="68.8525%" y="645" width="0.3903%" height="15" fill="rgb(216,210,27)" fg:x="882" fg:w="5"/><text x="69.1025%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="68.8525%" y="629" width="0.3903%" height="15" fill="rgb(252,10,17)" fg:x="882" fg:w="5"/><text x="69.1025%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.31%)</title><rect x="68.9305%" y="613" width="0.3123%" height="15" fill="rgb(214,172,30)" fg:x="883" fg:w="4"/><text x="69.1805%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="69.0086%" y="597" width="0.2342%" height="15" fill="rgb(253,130,48)" fg:x="884" fg:w="3"/><text x="69.2586%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.0867%" y="581" width="0.1561%" height="15" fill="rgb(226,99,43)" fg:x="885" fg:w="2"/><text x="69.3367%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="69.0867%" y="565" width="0.1561%" height="15" fill="rgb(239,111,26)" fg:x="885" fg:w="2"/><text x="69.3367%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.1647%" y="549" width="0.0781%" height="15" fill="rgb(240,27,53)" fg:x="886" fg:w="1"/><text x="69.4147%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.1647%" y="533" width="0.0781%" height="15" fill="rgb(254,163,12)" fg:x="886" fg:w="1"/><text x="69.4147%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="69.1647%" y="517" width="0.0781%" height="15" fill="rgb(225,51,48)" fg:x="886" fg:w="1"/><text x="69.4147%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.1647%" y="501" width="0.0781%" height="15" fill="rgb(205,19,32)" fg:x="886" fg:w="1"/><text x="69.4147%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.1647%" y="485" width="0.0781%" height="15" fill="rgb(218,119,26)" fg:x="886" fg:w="1"/><text x="69.4147%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.1647%" y="469" width="0.0781%" height="15" fill="rgb(231,173,33)" fg:x="886" fg:w="1"/><text x="69.4147%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.3989%" y="661" width="0.0781%" height="15" fill="rgb(241,100,29)" fg:x="889" fg:w="1"/><text x="69.6489%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (40 samples, 3.12%)</title><rect x="66.4325%" y="741" width="3.1226%" height="15" fill="rgb(250,194,34)" fg:x="851" fg:w="40"/><text x="66.6825%" y="751.50">&lt;ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (26 samples, 2.03%)</title><rect x="67.5254%" y="725" width="2.0297%" height="15" fill="rgb(215,23,50)" fg:x="865" fg:w="26"/><text x="67.7754%" y="735.50">s..</text></g><g><title>serde_json::value::de::visit_object (26 samples, 2.03%)</title><rect x="67.5254%" y="709" width="2.0297%" height="15" fill="rgb(206,49,37)" fg:x="865" fg:w="26"/><text x="67.7754%" y="719.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="69.2428%" y="693" width="0.3123%" height="15" fill="rgb(247,39,21)" fg:x="887" fg:w="4"/><text x="69.4928%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="69.2428%" y="677" width="0.3123%" height="15" fill="rgb(209,220,15)" fg:x="887" fg:w="4"/><text x="69.4928%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="69.4770%" y="661" width="0.0781%" height="15" fill="rgb(206,41,33)" fg:x="890" fg:w="1"/><text x="69.7270%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.6331%" y="693" width="0.1561%" height="15" fill="rgb(221,225,45)" fg:x="892" fg:w="2"/><text x="69.8831%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.6331%" y="677" width="0.1561%" height="15" fill="rgb(216,27,18)" fg:x="892" fg:w="2"/><text x="69.8831%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.7112%" y="661" width="0.0781%" height="15" fill="rgb(250,193,34)" fg:x="893" fg:w="1"/><text x="69.9612%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.7892%" y="693" width="0.0781%" height="15" fill="rgb(227,215,20)" fg:x="894" fg:w="1"/><text x="70.0392%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="69.7892%" y="677" width="0.0781%" height="15" fill="rgb(242,211,27)" fg:x="894" fg:w="1"/><text x="70.0392%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.8673%" y="661" width="0.0781%" height="15" fill="rgb(229,190,30)" fg:x="895" fg:w="1"/><text x="70.1173%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.55%)</title><rect x="69.5550%" y="741" width="0.5464%" height="15" fill="rgb(253,31,29)" fg:x="891" fg:w="7"/><text x="69.8050%" y="751.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.47%)</title><rect x="69.6331%" y="725" width="0.4684%" height="15" fill="rgb(229,177,52)" fg:x="892" fg:w="6"/><text x="69.8831%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.47%)</title><rect x="69.6331%" y="709" width="0.4684%" height="15" fill="rgb(226,88,8)" fg:x="892" fg:w="6"/><text x="69.8831%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="69.8673%" y="693" width="0.2342%" height="15" fill="rgb(214,55,27)" fg:x="895" fg:w="3"/><text x="70.1173%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="69.8673%" y="677" width="0.2342%" height="15" fill="rgb(233,202,5)" fg:x="895" fg:w="3"/><text x="70.1173%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.9454%" y="661" width="0.1561%" height="15" fill="rgb(251,49,30)" fg:x="896" fg:w="2"/><text x="70.1954%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.9454%" y="645" width="0.1561%" height="15" fill="rgb(235,18,52)" fg:x="896" fg:w="2"/><text x="70.1954%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="69.9454%" y="629" width="0.1561%" height="15" fill="rgb(250,111,51)" fg:x="896" fg:w="2"/><text x="70.1954%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.9454%" y="613" width="0.1561%" height="15" fill="rgb(218,13,25)" fg:x="896" fg:w="2"/><text x="70.1954%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.9454%" y="597" width="0.1561%" height="15" fill="rgb(248,96,7)" fg:x="896" fg:w="2"/><text x="70.1954%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.9454%" y="581" width="0.1561%" height="15" fill="rgb(217,31,15)" fg:x="896" fg:w="2"/><text x="70.1954%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.0234%" y="565" width="0.0781%" height="15" fill="rgb(228,59,49)" fg:x="897" fg:w="1"/><text x="70.2734%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.0234%" y="549" width="0.0781%" height="15" fill="rgb(210,152,38)" fg:x="897" fg:w="1"/><text x="70.2734%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.0234%" y="533" width="0.0781%" height="15" fill="rgb(206,71,11)" fg:x="897" fg:w="1"/><text x="70.2734%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (52 samples, 4.06%)</title><rect x="66.1202%" y="773" width="4.0593%" height="15" fill="rgb(244,199,5)" fg:x="847" fg:w="52"/><text x="66.3702%" y="783.50">&lt;eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (52 samples, 4.06%)</title><rect x="66.1202%" y="757" width="4.0593%" height="15" fill="rgb(253,49,1)" fg:x="847" fg:w="52"/><text x="66.3702%" y="767.50">engi..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="70.1015%" y="741" width="0.0781%" height="15" fill="rgb(225,206,40)" fg:x="898" fg:w="1"/><text x="70.3515%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.1015%" y="725" width="0.0781%" height="15" fill="rgb(243,116,47)" fg:x="898" fg:w="1"/><text x="70.3515%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="70.1795%" y="773" width="0.0781%" height="15" fill="rgb(219,225,16)" fg:x="899" fg:w="1"/><text x="70.4295%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.1795%" y="757" width="0.0781%" height="15" fill="rgb(233,29,47)" fg:x="899" fg:w="1"/><text x="70.4295%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.1795%" y="741" width="0.0781%" height="15" fill="rgb(250,179,18)" fg:x="899" fg:w="1"/><text x="70.4295%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.1795%" y="725" width="0.0781%" height="15" fill="rgb(215,176,6)" fg:x="899" fg:w="1"/><text x="70.4295%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.1795%" y="709" width="0.0781%" height="15" fill="rgb(214,117,39)" fg:x="899" fg:w="1"/><text x="70.4295%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.1795%" y="693" width="0.0781%" height="15" fill="rgb(247,183,36)" fg:x="899" fg:w="1"/><text x="70.4295%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.1795%" y="677" width="0.0781%" height="15" fill="rgb(237,200,3)" fg:x="899" fg:w="1"/><text x="70.4295%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.1795%" y="661" width="0.0781%" height="15" fill="rgb(212,220,24)" fg:x="899" fg:w="1"/><text x="70.4295%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.1795%" y="645" width="0.0781%" height="15" fill="rgb(245,216,20)" fg:x="899" fg:w="1"/><text x="70.4295%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.1795%" y="629" width="0.0781%" height="15" fill="rgb(219,124,7)" fg:x="899" fg:w="1"/><text x="70.4295%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.1795%" y="613" width="0.0781%" height="15" fill="rgb(227,167,8)" fg:x="899" fg:w="1"/><text x="70.4295%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.1795%" y="597" width="0.0781%" height="15" fill="rgb(241,37,2)" fg:x="899" fg:w="1"/><text x="70.4295%" y="607.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="70.2576%" y="741" width="0.0781%" height="15" fill="rgb(238,134,33)" fg:x="900" fg:w="1"/><text x="70.5076%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="70.2576%" y="725" width="0.0781%" height="15" fill="rgb(248,48,27)" fg:x="900" fg:w="1"/><text x="70.5076%" y="735.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="70.2576%" y="709" width="0.0781%" height="15" fill="rgb(212,14,16)" fg:x="900" fg:w="1"/><text x="70.5076%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="70.2576%" y="693" width="0.0781%" height="15" fill="rgb(217,205,37)" fg:x="900" fg:w="1"/><text x="70.5076%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="70.2576%" y="677" width="0.0781%" height="15" fill="rgb(233,185,47)" fg:x="900" fg:w="1"/><text x="70.5076%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="70.2576%" y="661" width="0.0781%" height="15" fill="rgb(244,88,8)" fg:x="900" fg:w="1"/><text x="70.5076%" y="671.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="70.2576%" y="645" width="0.0781%" height="15" fill="rgb(213,0,20)" fg:x="900" fg:w="1"/><text x="70.5076%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.4918%" y="421" width="0.0781%" height="15" fill="rgb(238,159,36)" fg:x="903" fg:w="1"/><text x="70.7418%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.4918%" y="405" width="0.0781%" height="15" fill="rgb(253,173,17)" fg:x="903" fg:w="1"/><text x="70.7418%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (59 samples, 4.61%)</title><rect x="66.0422%" y="789" width="4.6058%" height="15" fill="rgb(221,23,28)" fg:x="846" fg:w="59"/><text x="66.2922%" y="799.50">&lt;engi..</text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.39%)</title><rect x="70.2576%" y="773" width="0.3903%" height="15" fill="rgb(218,113,15)" fg:x="900" fg:w="5"/><text x="70.5076%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.39%)</title><rect x="70.2576%" y="757" width="0.3903%" height="15" fill="rgb(233,58,3)" fg:x="900" fg:w="5"/><text x="70.5076%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.31%)</title><rect x="70.3357%" y="741" width="0.3123%" height="15" fill="rgb(250,46,35)" fg:x="901" fg:w="4"/><text x="70.5857%" y="751.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="70.4137%" y="725" width="0.2342%" height="15" fill="rgb(210,169,11)" fg:x="902" fg:w="3"/><text x="70.6637%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="70.4137%" y="709" width="0.2342%" height="15" fill="rgb(246,88,19)" fg:x="902" fg:w="3"/><text x="70.6637%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.23%)</title><rect x="70.4137%" y="693" width="0.2342%" height="15" fill="rgb(206,81,49)" fg:x="902" fg:w="3"/><text x="70.6637%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.23%)</title><rect x="70.4137%" y="677" width="0.2342%" height="15" fill="rgb(232,144,18)" fg:x="902" fg:w="3"/><text x="70.6637%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="70.4137%" y="661" width="0.2342%" height="15" fill="rgb(235,2,27)" fg:x="902" fg:w="3"/><text x="70.6637%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="70.4137%" y="645" width="0.2342%" height="15" fill="rgb(239,157,39)" fg:x="902" fg:w="3"/><text x="70.6637%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="70.4918%" y="629" width="0.1561%" height="15" fill="rgb(220,11,17)" fg:x="903" fg:w="2"/><text x="70.7418%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="70.4918%" y="613" width="0.1561%" height="15" fill="rgb(243,94,50)" fg:x="903" fg:w="2"/><text x="70.7418%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="70.4918%" y="597" width="0.1561%" height="15" fill="rgb(218,22,0)" fg:x="903" fg:w="2"/><text x="70.7418%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="70.4918%" y="581" width="0.1561%" height="15" fill="rgb(249,70,21)" fg:x="903" fg:w="2"/><text x="70.7418%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="70.4918%" y="565" width="0.1561%" height="15" fill="rgb(245,111,46)" fg:x="903" fg:w="2"/><text x="70.7418%" y="575.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="70.4918%" y="549" width="0.1561%" height="15" fill="rgb(244,183,12)" fg:x="903" fg:w="2"/><text x="70.7418%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="70.4918%" y="533" width="0.1561%" height="15" fill="rgb(207,117,0)" fg:x="903" fg:w="2"/><text x="70.7418%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="70.4918%" y="517" width="0.1561%" height="15" fill="rgb(206,20,43)" fg:x="903" fg:w="2"/><text x="70.7418%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="70.4918%" y="501" width="0.1561%" height="15" fill="rgb(221,104,11)" fg:x="903" fg:w="2"/><text x="70.7418%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="70.4918%" y="485" width="0.1561%" height="15" fill="rgb(254,36,50)" fg:x="903" fg:w="2"/><text x="70.7418%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="70.4918%" y="469" width="0.1561%" height="15" fill="rgb(252,17,15)" fg:x="903" fg:w="2"/><text x="70.7418%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="70.4918%" y="453" width="0.1561%" height="15" fill="rgb(219,129,43)" fg:x="903" fg:w="2"/><text x="70.7418%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="70.4918%" y="437" width="0.1561%" height="15" fill="rgb(205,34,45)" fg:x="903" fg:w="2"/><text x="70.7418%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="70.5699%" y="421" width="0.0781%" height="15" fill="rgb(251,201,32)" fg:x="904" fg:w="1"/><text x="70.8199%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="70.5699%" y="405" width="0.0781%" height="15" fill="rgb(205,56,0)" fg:x="904" fg:w="1"/><text x="70.8199%" y="415.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (3 samples, 0.23%)</title><rect x="70.6479%" y="789" width="0.2342%" height="15" fill="rgb(211,193,27)" fg:x="905" fg:w="3"/><text x="70.8979%" y="799.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.23%)</title><rect x="70.6479%" y="773" width="0.2342%" height="15" fill="rgb(231,100,42)" fg:x="905" fg:w="3"/><text x="70.8979%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="70.7260%" y="757" width="0.1561%" height="15" fill="rgb(245,85,27)" fg:x="906" fg:w="2"/><text x="70.9760%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.7260%" y="741" width="0.1561%" height="15" fill="rgb(241,76,24)" fg:x="906" fg:w="2"/><text x="70.9760%" y="751.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.7260%" y="725" width="0.1561%" height="15" fill="rgb(249,157,15)" fg:x="906" fg:w="2"/><text x="70.9760%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.7260%" y="709" width="0.1561%" height="15" fill="rgb(222,218,25)" fg:x="906" fg:w="2"/><text x="70.9760%" y="719.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="70.8821%" y="789" width="0.0781%" height="15" fill="rgb(252,156,52)" fg:x="908" fg:w="1"/><text x="71.1321%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="70.8821%" y="773" width="0.0781%" height="15" fill="rgb(211,185,7)" fg:x="908" fg:w="1"/><text x="71.1321%" y="783.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="70.8821%" y="757" width="0.0781%" height="15" fill="rgb(234,108,24)" fg:x="908" fg:w="1"/><text x="71.1321%" y="767.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="70.8821%" y="741" width="0.0781%" height="15" fill="rgb(227,218,2)" fg:x="908" fg:w="1"/><text x="71.1321%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="70.8821%" y="725" width="0.0781%" height="15" fill="rgb(224,0,36)" fg:x="908" fg:w="1"/><text x="71.1321%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (910 samples, 71.04%)</title><rect x="0.0000%" y="869" width="71.0383%" height="15" fill="rgb(233,201,10)" fg:x="0" fg:w="910"/><text x="0.2500%" y="879.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (910 samples, 71.04%)</title><rect x="0.0000%" y="853" width="71.0383%" height="15" fill="rgb(252,209,14)" fg:x="0" fg:w="910"/><text x="0.2500%" y="863.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (910 samples, 71.04%)</title><rect x="0.0000%" y="837" width="71.0383%" height="15" fill="rgb(205,93,49)" fg:x="0" fg:w="910"/><text x="0.2500%" y="847.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (234 samples, 18.27%)</title><rect x="52.7713%" y="821" width="18.2670%" height="15" fill="rgb(234,116,45)" fg:x="676" fg:w="234"/><text x="53.0213%" y="831.50">engine::session::Session::ev..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (234 samples, 18.27%)</title><rect x="52.7713%" y="805" width="18.2670%" height="15" fill="rgb(248,89,35)" fg:x="676" fg:w="234"/><text x="53.0213%" y="815.50">engine::session::Session::ev..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="70.9602%" y="789" width="0.0781%" height="15" fill="rgb(233,167,45)" fg:x="909" fg:w="1"/><text x="71.2102%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.1944%" y="693" width="0.0781%" height="15" fill="rgb(248,228,14)" fg:x="912" fg:w="1"/><text x="71.4444%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.2724%" y="677" width="0.0781%" height="15" fill="rgb(246,91,14)" fg:x="913" fg:w="1"/><text x="71.5224%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="71.3505%" y="677" width="0.1561%" height="15" fill="rgb(227,142,5)" fg:x="914" fg:w="2"/><text x="71.6005%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4286%" y="661" width="0.0781%" height="15" fill="rgb(221,63,33)" fg:x="915" fg:w="1"/><text x="71.6786%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.39%)</title><rect x="71.1944%" y="757" width="0.3903%" height="15" fill="rgb(233,49,0)" fg:x="912" fg:w="5"/><text x="71.4444%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.39%)</title><rect x="71.1944%" y="741" width="0.3903%" height="15" fill="rgb(251,115,38)" fg:x="912" fg:w="5"/><text x="71.4444%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.39%)</title><rect x="71.1944%" y="725" width="0.3903%" height="15" fill="rgb(231,214,32)" fg:x="912" fg:w="5"/><text x="71.4444%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="71.1944%" y="709" width="0.3903%" height="15" fill="rgb(248,73,46)" fg:x="912" fg:w="5"/><text x="71.4444%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="71.2724%" y="693" width="0.3123%" height="15" fill="rgb(237,156,4)" fg:x="913" fg:w="4"/><text x="71.5224%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.5066%" y="677" width="0.0781%" height="15" fill="rgb(227,132,2)" fg:x="916" fg:w="1"/><text x="71.7566%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.5066%" y="661" width="0.0781%" height="15" fill="rgb(248,161,9)" fg:x="916" fg:w="1"/><text x="71.7566%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.5066%" y="645" width="0.0781%" height="15" fill="rgb(238,77,38)" fg:x="916" fg:w="1"/><text x="71.7566%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (7 samples, 0.55%)</title><rect x="71.1163%" y="805" width="0.5464%" height="15" fill="rgb(222,166,40)" fg:x="911" fg:w="7"/><text x="71.3663%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.47%)</title><rect x="71.1944%" y="789" width="0.4684%" height="15" fill="rgb(214,168,45)" fg:x="912" fg:w="6"/><text x="71.4444%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (6 samples, 0.47%)</title><rect x="71.1944%" y="773" width="0.4684%" height="15" fill="rgb(226,64,37)" fg:x="912" fg:w="6"/><text x="71.4444%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="71.5847%" y="757" width="0.0781%" height="15" fill="rgb(232,210,43)" fg:x="917" fg:w="1"/><text x="71.8347%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.5847%" y="741" width="0.0781%" height="15" fill="rgb(214,76,33)" fg:x="917" fg:w="1"/><text x="71.8347%" y="751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.62%)</title><rect x="71.1163%" y="821" width="0.6245%" height="15" fill="rgb(210,78,5)" fg:x="911" fg:w="8"/><text x="71.3663%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="71.6628%" y="805" width="0.0781%" height="15" fill="rgb(211,107,37)" fg:x="918" fg:w="1"/><text x="71.9128%" y="815.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="71.7408%" y="789" width="0.0781%" height="15" fill="rgb(249,67,16)" fg:x="919" fg:w="1"/><text x="71.9908%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9750%" y="709" width="0.0781%" height="15" fill="rgb(222,114,31)" fg:x="922" fg:w="1"/><text x="72.2250%" y="719.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="72.0531%" y="709" width="0.0781%" height="15" fill="rgb(242,118,19)" fg:x="923" fg:w="1"/><text x="72.3031%" y="719.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="72.0531%" y="693" width="0.0781%" height="15" fill="rgb(223,115,1)" fg:x="923" fg:w="1"/><text x="72.3031%" y="703.50"></text></g><g><title>__strerror_r (1 samples, 0.08%)</title><rect x="72.0531%" y="677" width="0.0781%" height="15" fill="rgb(241,182,54)" fg:x="923" fg:w="1"/><text x="72.3031%" y="687.50"></text></g><g><title>dlopen (6 samples, 0.47%)</title><rect x="72.1311%" y="709" width="0.4684%" height="15" fill="rgb(244,166,36)" fg:x="924" fg:w="6"/><text x="72.3811%" y="719.50"></text></g><g><title>_dl_catch_error (5 samples, 0.39%)</title><rect x="72.2092%" y="693" width="0.3903%" height="15" fill="rgb(241,52,43)" fg:x="925" fg:w="5"/><text x="72.4592%" y="703.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.39%)</title><rect x="72.2092%" y="677" width="0.3903%" height="15" fill="rgb(236,82,9)" fg:x="925" fg:w="5"/><text x="72.4592%" y="687.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.39%)</title><rect x="72.2092%" y="661" width="0.3903%" height="15" fill="rgb(241,119,0)" fg:x="925" fg:w="5"/><text x="72.4592%" y="671.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.39%)</title><rect x="72.2092%" y="645" width="0.3903%" height="15" fill="rgb(221,19,22)" fg:x="925" fg:w="5"/><text x="72.4592%" y="655.50"></text></g><g><title>libloading::safe::Library::new (9 samples, 0.70%)</title><rect x="71.9750%" y="725" width="0.7026%" height="15" fill="rgb(254,144,35)" fg:x="922" fg:w="9"/><text x="72.2250%" y="735.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="72.5995%" y="709" width="0.0781%" height="15" fill="rgb(246,132,30)" fg:x="930" fg:w="1"/><text x="72.8495%" y="719.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="72.5995%" y="693" width="0.0781%" height="15" fill="rgb(234,69,28)" fg:x="930" fg:w="1"/><text x="72.8495%" y="703.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="72.5995%" y="677" width="0.0781%" height="15" fill="rgb(219,106,47)" fg:x="930" fg:w="1"/><text x="72.8495%" y="687.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.08%)</title><rect x="72.5995%" y="661" width="0.0781%" height="15" fill="rgb(218,79,24)" fg:x="930" fg:w="1"/><text x="72.8495%" y="671.50"></text></g><g><title>engine::session::Session::initialize (13 samples, 1.01%)</title><rect x="71.8189%" y="773" width="1.0148%" height="15" fill="rgb(225,26,21)" fg:x="920" fg:w="13"/><text x="72.0689%" y="783.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (13 samples, 1.01%)</title><rect x="71.8189%" y="757" width="1.0148%" height="15" fill="rgb(217,68,49)" fg:x="920" fg:w="13"/><text x="72.0689%" y="767.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (11 samples, 0.86%)</title><rect x="71.9750%" y="741" width="0.8587%" height="15" fill="rgb(220,204,28)" fg:x="922" fg:w="11"/><text x="72.2250%" y="751.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (2 samples, 0.16%)</title><rect x="72.6776%" y="725" width="0.1561%" height="15" fill="rgb(237,208,43)" fg:x="931" fg:w="2"/><text x="72.9276%" y="735.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.16%)</title><rect x="72.6776%" y="709" width="0.1561%" height="15" fill="rgb(213,97,42)" fg:x="931" fg:w="2"/><text x="72.9276%" y="719.50"></text></g><g><title>core::str::lossy::Utf8Chunks::new (1 samples, 0.08%)</title><rect x="72.7557%" y="693" width="0.0781%" height="15" fill="rgb(238,96,52)" fg:x="932" fg:w="1"/><text x="73.0057%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.9118%" y="741" width="0.0781%" height="15" fill="rgb(228,14,13)" fg:x="934" fg:w="1"/><text x="73.1618%" y="751.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (17 samples, 1.33%)</title><rect x="71.7408%" y="821" width="1.3271%" height="15" fill="rgb(219,123,13)" fg:x="919" fg:w="17"/><text x="71.9908%" y="831.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (17 samples, 1.33%)</title><rect x="71.7408%" y="805" width="1.3271%" height="15" fill="rgb(216,144,17)" fg:x="919" fg:w="17"/><text x="71.9908%" y="815.50"></text></g><g><title>engine::session::Session::new (16 samples, 1.25%)</title><rect x="71.8189%" y="789" width="1.2490%" height="15" fill="rgb(230,228,29)" fg:x="920" fg:w="16"/><text x="72.0689%" y="799.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.23%)</title><rect x="72.8337%" y="773" width="0.2342%" height="15" fill="rgb(233,18,5)" fg:x="933" fg:w="3"/><text x="73.0837%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="72.8337%" y="757" width="0.2342%" height="15" fill="rgb(233,197,12)" fg:x="933" fg:w="3"/><text x="73.0837%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.9899%" y="741" width="0.0781%" height="15" fill="rgb(234,140,29)" fg:x="935" fg:w="1"/><text x="73.2399%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.9899%" y="725" width="0.0781%" height="15" fill="rgb(233,113,19)" fg:x="935" fg:w="1"/><text x="73.2399%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.9899%" y="709" width="0.0781%" height="15" fill="rgb(246,209,13)" fg:x="935" fg:w="1"/><text x="73.2399%" y="719.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="73.1460%" y="789" width="0.0781%" height="15" fill="rgb(242,79,54)" fg:x="937" fg:w="1"/><text x="73.3960%" y="799.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="73.1460%" y="773" width="0.0781%" height="15" fill="rgb(219,73,16)" fg:x="937" fg:w="1"/><text x="73.3960%" y="783.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="73.1460%" y="757" width="0.0781%" height="15" fill="rgb(224,52,10)" fg:x="937" fg:w="1"/><text x="73.3960%" y="767.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="73.1460%" y="741" width="0.0781%" height="15" fill="rgb(237,179,5)" fg:x="937" fg:w="1"/><text x="73.3960%" y="751.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="73.1460%" y="725" width="0.0781%" height="15" fill="rgb(231,20,6)" fg:x="937" fg:w="1"/><text x="73.3960%" y="735.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="73.1460%" y="709" width="0.0781%" height="15" fill="rgb(253,171,45)" fg:x="937" fg:w="1"/><text x="73.3960%" y="719.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="73.1460%" y="693" width="0.0781%" height="15" fill="rgb(230,75,49)" fg:x="937" fg:w="1"/><text x="73.3960%" y="703.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="73.1460%" y="677" width="0.0781%" height="15" fill="rgb(216,83,46)" fg:x="937" fg:w="1"/><text x="73.3960%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="73.2240%" y="757" width="0.0781%" height="15" fill="rgb(236,56,9)" fg:x="938" fg:w="1"/><text x="73.4740%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.2240%" y="741" width="0.0781%" height="15" fill="rgb(215,28,34)" fg:x="938" fg:w="1"/><text x="73.4740%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.2240%" y="725" width="0.0781%" height="15" fill="rgb(230,222,20)" fg:x="938" fg:w="1"/><text x="73.4740%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.2240%" y="709" width="0.0781%" height="15" fill="rgb(235,209,51)" fg:x="938" fg:w="1"/><text x="73.4740%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.3021%" y="693" width="0.1561%" height="15" fill="rgb(235,167,1)" fg:x="939" fg:w="2"/><text x="73.5521%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.3021%" y="677" width="0.1561%" height="15" fill="rgb(248,220,0)" fg:x="939" fg:w="2"/><text x="73.5521%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.23%)</title><rect x="73.3021%" y="709" width="0.2342%" height="15" fill="rgb(239,0,18)" fg:x="939" fg:w="3"/><text x="73.5521%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.4582%" y="693" width="0.0781%" height="15" fill="rgb(229,179,11)" fg:x="941" fg:w="1"/><text x="73.7082%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.4582%" y="677" width="0.0781%" height="15" fill="rgb(226,116,53)" fg:x="941" fg:w="1"/><text x="73.7082%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.6144%" y="693" width="0.1561%" height="15" fill="rgb(218,1,49)" fg:x="943" fg:w="2"/><text x="73.8644%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.6144%" y="677" width="0.1561%" height="15" fill="rgb(208,184,47)" fg:x="943" fg:w="2"/><text x="73.8644%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="73.6144%" y="661" width="0.1561%" height="15" fill="rgb(238,174,3)" fg:x="943" fg:w="2"/><text x="73.8644%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="73.6144%" y="645" width="0.1561%" height="15" fill="rgb(247,188,6)" fg:x="943" fg:w="2"/><text x="73.8644%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.6924%" y="629" width="0.0781%" height="15" fill="rgb(211,165,46)" fg:x="944" fg:w="1"/><text x="73.9424%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.6924%" y="613" width="0.0781%" height="15" fill="rgb(222,190,10)" fg:x="944" fg:w="1"/><text x="73.9424%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.9266%" y="677" width="0.0781%" height="15" fill="rgb(206,185,3)" fg:x="947" fg:w="1"/><text x="74.1766%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.9266%" y="661" width="0.0781%" height="15" fill="rgb(244,125,37)" fg:x="947" fg:w="1"/><text x="74.1766%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.9266%" y="645" width="0.0781%" height="15" fill="rgb(211,43,7)" fg:x="947" fg:w="1"/><text x="74.1766%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.9266%" y="629" width="0.0781%" height="15" fill="rgb(250,41,42)" fg:x="947" fg:w="1"/><text x="74.1766%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.9266%" y="613" width="0.0781%" height="15" fill="rgb(254,54,42)" fg:x="947" fg:w="1"/><text x="74.1766%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.9266%" y="597" width="0.0781%" height="15" fill="rgb(213,71,43)" fg:x="947" fg:w="1"/><text x="74.1766%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.9266%" y="581" width="0.0781%" height="15" fill="rgb(249,3,44)" fg:x="947" fg:w="1"/><text x="74.1766%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.9266%" y="565" width="0.0781%" height="15" fill="rgb(229,80,41)" fg:x="947" fg:w="1"/><text x="74.1766%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.9266%" y="549" width="0.0781%" height="15" fill="rgb(231,25,28)" fg:x="947" fg:w="1"/><text x="74.1766%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.0047%" y="677" width="0.0781%" height="15" fill="rgb(208,79,48)" fg:x="948" fg:w="1"/><text x="74.2547%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.0047%" y="661" width="0.0781%" height="15" fill="rgb(207,196,38)" fg:x="948" fg:w="1"/><text x="74.2547%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.0827%" y="661" width="0.0781%" height="15" fill="rgb(228,105,49)" fg:x="949" fg:w="1"/><text x="74.3327%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.0827%" y="645" width="0.0781%" height="15" fill="rgb(237,99,15)" fg:x="949" fg:w="1"/><text x="74.3327%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.2389%" y="645" width="0.0781%" height="15" fill="rgb(224,207,46)" fg:x="951" fg:w="1"/><text x="74.4889%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.3169%" y="645" width="0.0781%" height="15" fill="rgb(249,117,50)" fg:x="952" fg:w="1"/><text x="74.5669%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.3169%" y="629" width="0.0781%" height="15" fill="rgb(248,17,13)" fg:x="952" fg:w="1"/><text x="74.5669%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.3169%" y="613" width="0.0781%" height="15" fill="rgb(228,187,36)" fg:x="952" fg:w="1"/><text x="74.5669%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.3169%" y="597" width="0.0781%" height="15" fill="rgb(234,132,20)" fg:x="952" fg:w="1"/><text x="74.5669%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.3950%" y="629" width="0.0781%" height="15" fill="rgb(209,170,46)" fg:x="953" fg:w="1"/><text x="74.6450%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.3950%" y="613" width="0.0781%" height="15" fill="rgb(237,23,19)" fg:x="953" fg:w="1"/><text x="74.6450%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="74.4731%" y="613" width="0.1561%" height="15" fill="rgb(227,21,26)" fg:x="954" fg:w="2"/><text x="74.7231%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.5511%" y="597" width="0.0781%" height="15" fill="rgb(222,220,48)" fg:x="955" fg:w="1"/><text x="74.8011%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.5511%" y="581" width="0.0781%" height="15" fill="rgb(214,9,16)" fg:x="955" fg:w="1"/><text x="74.8011%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.5511%" y="565" width="0.0781%" height="15" fill="rgb(209,73,30)" fg:x="955" fg:w="1"/><text x="74.8011%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.5511%" y="549" width="0.0781%" height="15" fill="rgb(207,20,33)" fg:x="955" fg:w="1"/><text x="74.8011%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.5511%" y="533" width="0.0781%" height="15" fill="rgb(219,153,12)" fg:x="955" fg:w="1"/><text x="74.8011%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.5511%" y="517" width="0.0781%" height="15" fill="rgb(235,97,25)" fg:x="955" fg:w="1"/><text x="74.8011%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="74.4731%" y="629" width="0.2342%" height="15" fill="rgb(244,30,34)" fg:x="954" fg:w="3"/><text x="74.7231%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="74.6292%" y="613" width="0.0781%" height="15" fill="rgb(214,106,45)" fg:x="956" fg:w="1"/><text x="74.8792%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.01%)</title><rect x="73.7705%" y="693" width="1.0148%" height="15" fill="rgb(226,41,9)" fg:x="945" fg:w="13"/><text x="74.0205%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.70%)</title><rect x="74.0827%" y="677" width="0.7026%" height="15" fill="rgb(253,139,29)" fg:x="949" fg:w="9"/><text x="74.3327%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.62%)</title><rect x="74.1608%" y="661" width="0.6245%" height="15" fill="rgb(213,205,39)" fg:x="950" fg:w="8"/><text x="74.4108%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="74.3950%" y="645" width="0.3903%" height="15" fill="rgb(209,27,10)" fg:x="953" fg:w="5"/><text x="74.6450%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.7073%" y="629" width="0.0781%" height="15" fill="rgb(249,142,16)" fg:x="957" fg:w="1"/><text x="74.9573%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.7073%" y="613" width="0.0781%" height="15" fill="rgb(242,65,12)" fg:x="957" fg:w="1"/><text x="74.9573%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.7073%" y="597" width="0.0781%" height="15" fill="rgb(232,48,10)" fg:x="957" fg:w="1"/><text x="74.9573%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (20 samples, 1.56%)</title><rect x="73.3021%" y="725" width="1.5613%" height="15" fill="rgb(253,67,19)" fg:x="939" fg:w="20"/><text x="73.5521%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.33%)</title><rect x="73.5363%" y="709" width="1.3271%" height="15" fill="rgb(227,93,29)" fg:x="942" fg:w="17"/><text x="73.7863%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.7853%" y="693" width="0.0781%" height="15" fill="rgb(226,189,53)" fg:x="958" fg:w="1"/><text x="75.0353%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.7853%" y="677" width="0.0781%" height="15" fill="rgb(223,224,1)" fg:x="958" fg:w="1"/><text x="75.0353%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.7853%" y="661" width="0.0781%" height="15" fill="rgb(221,84,32)" fg:x="958" fg:w="1"/><text x="75.0353%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.7853%" y="645" width="0.0781%" height="15" fill="rgb(214,189,28)" fg:x="958" fg:w="1"/><text x="75.0353%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.7853%" y="629" width="0.0781%" height="15" fill="rgb(234,7,52)" fg:x="958" fg:w="1"/><text x="75.0353%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.7853%" y="613" width="0.0781%" height="15" fill="rgb(249,73,31)" fg:x="958" fg:w="1"/><text x="75.0353%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.8634%" y="693" width="0.0781%" height="15" fill="rgb(253,153,41)" fg:x="959" fg:w="1"/><text x="75.1134%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.9415%" y="677" width="0.0781%" height="15" fill="rgb(249,52,34)" fg:x="960" fg:w="1"/><text x="75.1915%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.0195%" y="661" width="0.0781%" height="15" fill="rgb(236,177,47)" fg:x="961" fg:w="1"/><text x="75.2695%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="74.8634%" y="725" width="0.3123%" height="15" fill="rgb(252,185,45)" fg:x="959" fg:w="4"/><text x="75.1134%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.31%)</title><rect x="74.8634%" y="709" width="0.3123%" height="15" fill="rgb(251,15,30)" fg:x="959" fg:w="4"/><text x="75.1134%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="74.9415%" y="693" width="0.2342%" height="15" fill="rgb(233,31,4)" fg:x="960" fg:w="3"/><text x="75.1915%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.0195%" y="677" width="0.1561%" height="15" fill="rgb(254,44,24)" fg:x="961" fg:w="2"/><text x="75.2695%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.0976%" y="661" width="0.0781%" height="15" fill="rgb(218,54,1)" fg:x="962" fg:w="1"/><text x="75.3476%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="75.0976%" y="645" width="0.0781%" height="15" fill="rgb(243,209,39)" fg:x="962" fg:w="1"/><text x="75.3476%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.0976%" y="629" width="0.0781%" height="15" fill="rgb(206,75,33)" fg:x="962" fg:w="1"/><text x="75.3476%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.0976%" y="613" width="0.0781%" height="15" fill="rgb(223,108,18)" fg:x="962" fg:w="1"/><text x="75.3476%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2537%" y="677" width="0.0781%" height="15" fill="rgb(244,89,31)" fg:x="964" fg:w="1"/><text x="75.5037%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.3318%" y="677" width="0.1561%" height="15" fill="rgb(222,167,27)" fg:x="965" fg:w="2"/><text x="75.5818%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.3318%" y="661" width="0.1561%" height="15" fill="rgb(247,41,16)" fg:x="965" fg:w="2"/><text x="75.5818%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="75.4098%" y="645" width="0.0781%" height="15" fill="rgb(233,168,40)" fg:x="966" fg:w="1"/><text x="75.6598%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="75.4879%" y="677" width="0.0781%" height="15" fill="rgb(205,211,8)" fg:x="967" fg:w="1"/><text x="75.7379%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.4879%" y="661" width="0.0781%" height="15" fill="rgb(238,105,11)" fg:x="967" fg:w="1"/><text x="75.7379%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="75.4879%" y="645" width="0.0781%" height="15" fill="rgb(223,142,52)" fg:x="967" fg:w="1"/><text x="75.7379%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="75.5660%" y="677" width="0.0781%" height="15" fill="rgb(238,51,33)" fg:x="968" fg:w="1"/><text x="75.8160%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.5660%" y="661" width="0.0781%" height="15" fill="rgb(231,188,43)" fg:x="968" fg:w="1"/><text x="75.8160%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5660%" y="645" width="0.0781%" height="15" fill="rgb(216,92,17)" fg:x="968" fg:w="1"/><text x="75.8160%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="75.7221%" y="629" width="0.0781%" height="15" fill="rgb(228,2,40)" fg:x="970" fg:w="1"/><text x="75.9721%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.7221%" y="613" width="0.0781%" height="15" fill="rgb(226,73,15)" fg:x="970" fg:w="1"/><text x="75.9721%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7221%" y="597" width="0.0781%" height="15" fill="rgb(227,66,46)" fg:x="970" fg:w="1"/><text x="75.9721%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="75.8782%" y="613" width="0.1561%" height="15" fill="rgb(209,71,6)" fg:x="972" fg:w="2"/><text x="76.1282%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="75.8782%" y="597" width="0.1561%" height="15" fill="rgb(246,100,25)" fg:x="972" fg:w="2"/><text x="76.1282%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="75.8782%" y="581" width="0.1561%" height="15" fill="rgb(248,185,27)" fg:x="972" fg:w="2"/><text x="76.1282%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="75.8782%" y="565" width="0.1561%" height="15" fill="rgb(225,118,47)" fg:x="972" fg:w="2"/><text x="76.1282%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.9563%" y="549" width="0.0781%" height="15" fill="rgb(220,185,44)" fg:x="973" fg:w="1"/><text x="76.2063%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.9563%" y="533" width="0.0781%" height="15" fill="rgb(227,95,24)" fg:x="973" fg:w="1"/><text x="76.2063%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="75.9563%" y="517" width="0.0781%" height="15" fill="rgb(252,84,24)" fg:x="973" fg:w="1"/><text x="76.2063%" y="527.50"></text></g><g><title>engine::session::Session::flush (38 samples, 2.97%)</title><rect x="73.1460%" y="805" width="2.9664%" height="15" fill="rgb(240,34,44)" fg:x="937" fg:w="38"/><text x="73.3960%" y="815.50">eng..</text></g><g><title>engine::session::state::State::close (37 samples, 2.89%)</title><rect x="73.2240%" y="789" width="2.8884%" height="15" fill="rgb(209,72,54)" fg:x="938" fg:w="37"/><text x="73.4740%" y="799.50">en..</text></g><g><title>engine::session::state::State::flush_entities (37 samples, 2.89%)</title><rect x="73.2240%" y="773" width="2.8884%" height="15" fill="rgb(226,19,45)" fg:x="938" fg:w="37"/><text x="73.4740%" y="783.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (36 samples, 2.81%)</title><rect x="73.3021%" y="757" width="2.8103%" height="15" fill="rgb(246,7,45)" fg:x="939" fg:w="36"/><text x="73.5521%" y="767.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (36 samples, 2.81%)</title><rect x="73.3021%" y="741" width="2.8103%" height="15" fill="rgb(225,45,2)" fg:x="939" fg:w="36"/><text x="73.5521%" y="751.50">en..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.94%)</title><rect x="75.1756%" y="725" width="0.9368%" height="15" fill="rgb(221,80,29)" fg:x="963" fg:w="12"/><text x="75.4256%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.94%)</title><rect x="75.1756%" y="709" width="0.9368%" height="15" fill="rgb(228,11,19)" fg:x="963" fg:w="12"/><text x="75.4256%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.94%)</title><rect x="75.1756%" y="693" width="0.9368%" height="15" fill="rgb(243,17,21)" fg:x="963" fg:w="12"/><text x="75.4256%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.47%)</title><rect x="75.6440%" y="677" width="0.4684%" height="15" fill="rgb(243,88,8)" fg:x="969" fg:w="6"/><text x="75.8940%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.39%)</title><rect x="75.7221%" y="661" width="0.3903%" height="15" fill="rgb(214,17,9)" fg:x="970" fg:w="5"/><text x="75.9721%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="75.7221%" y="645" width="0.3903%" height="15" fill="rgb(232,169,15)" fg:x="970" fg:w="5"/><text x="75.9721%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="75.8002%" y="629" width="0.3123%" height="15" fill="rgb(232,86,53)" fg:x="971" fg:w="4"/><text x="76.0502%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.0343%" y="613" width="0.0781%" height="15" fill="rgb(222,100,4)" fg:x="974" fg:w="1"/><text x="76.2843%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="76.1124%" y="773" width="0.0781%" height="15" fill="rgb(253,151,38)" fg:x="975" fg:w="1"/><text x="76.3624%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="76.1124%" y="757" width="0.0781%" height="15" fill="rgb(238,215,29)" fg:x="975" fg:w="1"/><text x="76.3624%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.1905%" y="773" width="0.0781%" height="15" fill="rgb(205,128,53)" fg:x="976" fg:w="1"/><text x="76.4405%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="76.1905%" y="757" width="0.0781%" height="15" fill="rgb(248,183,14)" fg:x="976" fg:w="1"/><text x="76.4405%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.1905%" y="741" width="0.0781%" height="15" fill="rgb(244,172,35)" fg:x="976" fg:w="1"/><text x="76.4405%" y="751.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="76.2685%" y="773" width="0.0781%" height="15" fill="rgb(234,93,19)" fg:x="977" fg:w="1"/><text x="76.5185%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.2685%" y="757" width="0.0781%" height="15" fill="rgb(227,109,7)" fg:x="977" fg:w="1"/><text x="76.5185%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="76.2685%" y="741" width="0.0781%" height="15" fill="rgb(233,136,54)" fg:x="977" fg:w="1"/><text x="76.5185%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.2685%" y="725" width="0.0781%" height="15" fill="rgb(233,19,40)" fg:x="977" fg:w="1"/><text x="76.5185%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.2685%" y="709" width="0.0781%" height="15" fill="rgb(247,41,18)" fg:x="977" fg:w="1"/><text x="76.5185%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="76.3466%" y="757" width="0.0781%" height="15" fill="rgb(220,34,34)" fg:x="978" fg:w="1"/><text x="76.5966%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="76.3466%" y="741" width="0.0781%" height="15" fill="rgb(222,135,32)" fg:x="978" fg:w="1"/><text x="76.5966%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="76.3466%" y="725" width="0.0781%" height="15" fill="rgb(214,80,19)" fg:x="978" fg:w="1"/><text x="76.5966%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.3466%" y="709" width="0.0781%" height="15" fill="rgb(234,54,46)" fg:x="978" fg:w="1"/><text x="76.5966%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.3466%" y="693" width="0.0781%" height="15" fill="rgb(251,48,23)" fg:x="978" fg:w="1"/><text x="76.5966%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.3466%" y="677" width="0.0781%" height="15" fill="rgb(254,109,52)" fg:x="978" fg:w="1"/><text x="76.5966%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.3466%" y="661" width="0.0781%" height="15" fill="rgb(240,186,19)" fg:x="978" fg:w="1"/><text x="76.5966%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.3466%" y="645" width="0.0781%" height="15" fill="rgb(246,187,17)" fg:x="978" fg:w="1"/><text x="76.5966%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.3466%" y="629" width="0.0781%" height="15" fill="rgb(212,21,5)" fg:x="978" fg:w="1"/><text x="76.5966%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.3466%" y="613" width="0.0781%" height="15" fill="rgb(225,185,18)" fg:x="978" fg:w="1"/><text x="76.5966%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.55%)</title><rect x="76.1124%" y="789" width="0.5464%" height="15" fill="rgb(245,114,17)" fg:x="975" fg:w="7"/><text x="76.3624%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="76.3466%" y="773" width="0.3123%" height="15" fill="rgb(223,164,24)" fg:x="978" fg:w="4"/><text x="76.5966%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.23%)</title><rect x="76.4247%" y="757" width="0.2342%" height="15" fill="rgb(211,228,3)" fg:x="979" fg:w="3"/><text x="76.6747%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.23%)</title><rect x="76.4247%" y="741" width="0.2342%" height="15" fill="rgb(223,16,38)" fg:x="979" fg:w="3"/><text x="76.6747%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.23%)</title><rect x="76.4247%" y="725" width="0.2342%" height="15" fill="rgb(207,31,54)" fg:x="979" fg:w="3"/><text x="76.6747%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.23%)</title><rect x="76.4247%" y="709" width="0.2342%" height="15" fill="rgb(220,39,11)" fg:x="979" fg:w="3"/><text x="76.6747%" y="719.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="76.5027%" y="693" width="0.1561%" height="15" fill="rgb(235,185,0)" fg:x="980" fg:w="2"/><text x="76.7527%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.6589%" y="693" width="0.0781%" height="15" fill="rgb(249,39,18)" fg:x="982" fg:w="1"/><text x="76.9089%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.6589%" y="677" width="0.0781%" height="15" fill="rgb(240,110,33)" fg:x="982" fg:w="1"/><text x="76.9089%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.6589%" y="661" width="0.0781%" height="15" fill="rgb(210,92,42)" fg:x="982" fg:w="1"/><text x="76.9089%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.6589%" y="645" width="0.0781%" height="15" fill="rgb(218,215,28)" fg:x="982" fg:w="1"/><text x="76.9089%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.6589%" y="629" width="0.0781%" height="15" fill="rgb(238,215,36)" fg:x="982" fg:w="1"/><text x="76.9089%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.6589%" y="613" width="0.0781%" height="15" fill="rgb(220,31,10)" fg:x="982" fg:w="1"/><text x="76.9089%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6589%" y="597" width="0.0781%" height="15" fill="rgb(212,93,14)" fg:x="982" fg:w="1"/><text x="76.9089%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="76.6589%" y="773" width="0.1561%" height="15" fill="rgb(254,207,2)" fg:x="982" fg:w="2"/><text x="76.9089%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="76.6589%" y="757" width="0.1561%" height="15" fill="rgb(205,57,44)" fg:x="982" fg:w="2"/><text x="76.9089%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="76.6589%" y="741" width="0.1561%" height="15" fill="rgb(226,151,19)" fg:x="982" fg:w="2"/><text x="76.9089%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.6589%" y="725" width="0.1561%" height="15" fill="rgb(230,72,30)" fg:x="982" fg:w="2"/><text x="76.9089%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.6589%" y="709" width="0.1561%" height="15" fill="rgb(244,0,8)" fg:x="982" fg:w="2"/><text x="76.9089%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7369%" y="693" width="0.0781%" height="15" fill="rgb(230,192,6)" fg:x="983" fg:w="1"/><text x="76.9869%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7369%" y="677" width="0.0781%" height="15" fill="rgb(233,207,13)" fg:x="983" fg:w="1"/><text x="76.9869%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7369%" y="661" width="0.0781%" height="15" fill="rgb(206,227,7)" fg:x="983" fg:w="1"/><text x="76.9869%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7369%" y="645" width="0.0781%" height="15" fill="rgb(213,217,25)" fg:x="983" fg:w="1"/><text x="76.9869%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.7369%" y="629" width="0.0781%" height="15" fill="rgb(249,75,4)" fg:x="983" fg:w="1"/><text x="76.9869%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7369%" y="613" width="0.0781%" height="15" fill="rgb(225,114,18)" fg:x="983" fg:w="1"/><text x="76.9869%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7369%" y="597" width="0.0781%" height="15" fill="rgb(211,162,40)" fg:x="983" fg:w="1"/><text x="76.9869%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7369%" y="581" width="0.0781%" height="15" fill="rgb(206,49,29)" fg:x="983" fg:w="1"/><text x="76.9869%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8150%" y="757" width="0.0781%" height="15" fill="rgb(244,8,6)" fg:x="984" fg:w="1"/><text x="77.0650%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9711%" y="677" width="0.0781%" height="15" fill="rgb(231,194,28)" fg:x="986" fg:w="1"/><text x="77.2211%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9711%" y="661" width="0.0781%" height="15" fill="rgb(210,69,5)" fg:x="986" fg:w="1"/><text x="77.2211%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9711%" y="645" width="0.0781%" height="15" fill="rgb(216,186,12)" fg:x="986" fg:w="1"/><text x="77.2211%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9711%" y="629" width="0.0781%" height="15" fill="rgb(238,61,15)" fg:x="986" fg:w="1"/><text x="77.2211%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9711%" y="613" width="0.0781%" height="15" fill="rgb(226,104,1)" fg:x="986" fg:w="1"/><text x="77.2211%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9711%" y="597" width="0.0781%" height="15" fill="rgb(229,128,15)" fg:x="986" fg:w="1"/><text x="77.2211%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.9711%" y="581" width="0.0781%" height="15" fill="rgb(247,110,15)" fg:x="986" fg:w="1"/><text x="77.2211%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.9711%" y="565" width="0.0781%" height="15" fill="rgb(210,74,48)" fg:x="986" fg:w="1"/><text x="77.2211%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.9711%" y="549" width="0.0781%" height="15" fill="rgb(246,121,10)" fg:x="986" fg:w="1"/><text x="77.2211%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.9711%" y="533" width="0.0781%" height="15" fill="rgb(214,156,37)" fg:x="986" fg:w="1"/><text x="77.2211%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.9711%" y="517" width="0.0781%" height="15" fill="rgb(214,210,34)" fg:x="986" fg:w="1"/><text x="77.2211%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.9711%" y="501" width="0.0781%" height="15" fill="rgb(237,93,35)" fg:x="986" fg:w="1"/><text x="77.2211%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.9711%" y="485" width="0.0781%" height="15" fill="rgb(206,36,8)" fg:x="986" fg:w="1"/><text x="77.2211%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.9711%" y="469" width="0.0781%" height="15" fill="rgb(208,151,12)" fg:x="986" fg:w="1"/><text x="77.2211%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.9711%" y="453" width="0.0781%" height="15" fill="rgb(225,133,52)" fg:x="986" fg:w="1"/><text x="77.2211%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9711%" y="437" width="0.0781%" height="15" fill="rgb(231,71,53)" fg:x="986" fg:w="1"/><text x="77.2211%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="76.8931%" y="725" width="0.2342%" height="15" fill="rgb(243,76,21)" fg:x="985" fg:w="3"/><text x="77.1431%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="76.8931%" y="709" width="0.2342%" height="15" fill="rgb(252,144,3)" fg:x="985" fg:w="3"/><text x="77.1431%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="76.8931%" y="693" width="0.2342%" height="15" fill="rgb(231,199,10)" fg:x="985" fg:w="3"/><text x="77.1431%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.0492%" y="677" width="0.0781%" height="15" fill="rgb(215,18,11)" fg:x="987" fg:w="1"/><text x="77.2992%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0492%" y="661" width="0.0781%" height="15" fill="rgb(241,65,24)" fg:x="987" fg:w="1"/><text x="77.2992%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.0492%" y="645" width="0.0781%" height="15" fill="rgb(251,192,38)" fg:x="987" fg:w="1"/><text x="77.2992%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0492%" y="629" width="0.0781%" height="15" fill="rgb(205,9,35)" fg:x="987" fg:w="1"/><text x="77.2992%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.0492%" y="613" width="0.0781%" height="15" fill="rgb(229,225,49)" fg:x="987" fg:w="1"/><text x="77.2992%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0492%" y="597" width="0.0781%" height="15" fill="rgb(207,125,39)" fg:x="987" fg:w="1"/><text x="77.2992%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.0492%" y="581" width="0.0781%" height="15" fill="rgb(222,78,19)" fg:x="987" fg:w="1"/><text x="77.2992%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0492%" y="565" width="0.0781%" height="15" fill="rgb(248,207,20)" fg:x="987" fg:w="1"/><text x="77.2992%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.0492%" y="549" width="0.0781%" height="15" fill="rgb(205,103,49)" fg:x="987" fg:w="1"/><text x="77.2992%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.39%)</title><rect x="76.8150%" y="773" width="0.3903%" height="15" fill="rgb(216,42,28)" fg:x="984" fg:w="5"/><text x="77.0650%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="76.8931%" y="757" width="0.3123%" height="15" fill="rgb(213,205,53)" fg:x="985" fg:w="4"/><text x="77.1431%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="76.8931%" y="741" width="0.3123%" height="15" fill="rgb(239,140,53)" fg:x="985" fg:w="4"/><text x="77.1431%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.1272%" y="725" width="0.0781%" height="15" fill="rgb(248,95,9)" fg:x="988" fg:w="1"/><text x="77.3772%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.1272%" y="709" width="0.0781%" height="15" fill="rgb(254,58,47)" fg:x="988" fg:w="1"/><text x="77.3772%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.1272%" y="693" width="0.0781%" height="15" fill="rgb(234,227,14)" fg:x="988" fg:w="1"/><text x="77.3772%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1272%" y="677" width="0.0781%" height="15" fill="rgb(205,192,45)" fg:x="988" fg:w="1"/><text x="77.3772%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1272%" y="661" width="0.0781%" height="15" fill="rgb(253,187,31)" fg:x="988" fg:w="1"/><text x="77.3772%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1272%" y="645" width="0.0781%" height="15" fill="rgb(222,6,32)" fg:x="988" fg:w="1"/><text x="77.3772%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="77.2053%" y="757" width="0.0781%" height="15" fill="rgb(249,190,19)" fg:x="989" fg:w="1"/><text x="77.4553%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.2834%" y="741" width="0.0781%" height="15" fill="rgb(251,28,20)" fg:x="990" fg:w="1"/><text x="77.5334%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="77.2834%" y="725" width="0.0781%" height="15" fill="rgb(210,223,40)" fg:x="990" fg:w="1"/><text x="77.5334%" y="735.50"></text></g><g><title>plugins_core::build::Build::holding (18 samples, 1.41%)</title><rect x="76.1124%" y="805" width="1.4052%" height="15" fill="rgb(216,137,22)" fg:x="975" fg:w="18"/><text x="76.3624%" y="815.50"></text></g><g><title>plugins_core::tools::set_container (11 samples, 0.86%)</title><rect x="76.6589%" y="789" width="0.8587%" height="15" fill="rgb(247,39,34)" fg:x="982" fg:w="11"/><text x="76.9089%" y="799.50"></text></g><g><title>plugins_core::location::Location::set (4 samples, 0.31%)</title><rect x="77.2053%" y="773" width="0.3123%" height="15" fill="rgb(239,43,50)" fg:x="989" fg:w="4"/><text x="77.4553%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.23%)</title><rect x="77.2834%" y="757" width="0.2342%" height="15" fill="rgb(241,212,9)" fg:x="990" fg:w="3"/><text x="77.5334%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="77.3614%" y="741" width="0.1561%" height="15" fill="rgb(205,8,2)" fg:x="991" fg:w="2"/><text x="77.6114%" y="751.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="77.5176%" y="757" width="0.0781%" height="15" fill="rgb(217,173,54)" fg:x="993" fg:w="1"/><text x="77.7676%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.5956%" y="709" width="0.0781%" height="15" fill="rgb(208,149,52)" fg:x="994" fg:w="1"/><text x="77.8456%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.5956%" y="693" width="0.0781%" height="15" fill="rgb(239,99,40)" fg:x="994" fg:w="1"/><text x="77.8456%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.5956%" y="677" width="0.0781%" height="15" fill="rgb(233,214,26)" fg:x="994" fg:w="1"/><text x="77.8456%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.5956%" y="725" width="0.1561%" height="15" fill="rgb(231,225,37)" fg:x="994" fg:w="2"/><text x="77.8456%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.6737%" y="709" width="0.0781%" height="15" fill="rgb(252,55,35)" fg:x="995" fg:w="1"/><text x="77.9237%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.6737%" y="693" width="0.0781%" height="15" fill="rgb(239,43,18)" fg:x="995" fg:w="1"/><text x="77.9237%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.6737%" y="677" width="0.0781%" height="15" fill="rgb(251,125,49)" fg:x="995" fg:w="1"/><text x="77.9237%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.6737%" y="661" width="0.0781%" height="15" fill="rgb(212,83,54)" fg:x="995" fg:w="1"/><text x="77.9237%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.6737%" y="645" width="0.0781%" height="15" fill="rgb(250,75,6)" fg:x="995" fg:w="1"/><text x="77.9237%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.6737%" y="629" width="0.0781%" height="15" fill="rgb(252,36,40)" fg:x="995" fg:w="1"/><text x="77.9237%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.6737%" y="613" width="0.0781%" height="15" fill="rgb(230,91,51)" fg:x="995" fg:w="1"/><text x="77.9237%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.6737%" y="597" width="0.0781%" height="15" fill="rgb(212,92,28)" fg:x="995" fg:w="1"/><text x="77.9237%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.6737%" y="581" width="0.0781%" height="15" fill="rgb(227,13,22)" fg:x="995" fg:w="1"/><text x="77.9237%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.6737%" y="565" width="0.0781%" height="15" fill="rgb(239,204,32)" fg:x="995" fg:w="1"/><text x="77.9237%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.6737%" y="549" width="0.0781%" height="15" fill="rgb(228,49,41)" fg:x="995" fg:w="1"/><text x="77.9237%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.6737%" y="533" width="0.0781%" height="15" fill="rgb(206,95,6)" fg:x="995" fg:w="1"/><text x="77.9237%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="77.5176%" y="773" width="0.3123%" height="15" fill="rgb(251,20,14)" fg:x="993" fg:w="4"/><text x="77.7676%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="77.5956%" y="757" width="0.2342%" height="15" fill="rgb(214,99,28)" fg:x="994" fg:w="3"/><text x="77.8456%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="77.5956%" y="741" width="0.2342%" height="15" fill="rgb(239,122,54)" fg:x="994" fg:w="3"/><text x="77.8456%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7518%" y="725" width="0.0781%" height="15" fill="rgb(218,217,46)" fg:x="996" fg:w="1"/><text x="78.0018%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7518%" y="709" width="0.0781%" height="15" fill="rgb(249,106,28)" fg:x="996" fg:w="1"/><text x="78.0018%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7518%" y="693" width="0.0781%" height="15" fill="rgb(250,158,18)" fg:x="996" fg:w="1"/><text x="78.0018%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7518%" y="677" width="0.0781%" height="15" fill="rgb(226,137,29)" fg:x="996" fg:w="1"/><text x="78.0018%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.7518%" y="661" width="0.0781%" height="15" fill="rgb(210,188,1)" fg:x="996" fg:w="1"/><text x="78.0018%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7518%" y="645" width="0.0781%" height="15" fill="rgb(227,84,42)" fg:x="996" fg:w="1"/><text x="78.0018%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7518%" y="629" width="0.0781%" height="15" fill="rgb(222,147,48)" fg:x="996" fg:w="1"/><text x="78.0018%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7518%" y="613" width="0.0781%" height="15" fill="rgb(241,150,43)" fg:x="996" fg:w="1"/><text x="78.0018%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.23%)</title><rect x="77.8298%" y="773" width="0.2342%" height="15" fill="rgb(206,139,52)" fg:x="997" fg:w="3"/><text x="78.0798%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.23%)</title><rect x="77.8298%" y="757" width="0.2342%" height="15" fill="rgb(230,63,14)" fg:x="997" fg:w="3"/><text x="78.0798%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="77.8298%" y="741" width="0.2342%" height="15" fill="rgb(247,8,20)" fg:x="997" fg:w="3"/><text x="78.0798%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.9079%" y="725" width="0.1561%" height="15" fill="rgb(213,115,4)" fg:x="998" fg:w="2"/><text x="78.1579%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.9079%" y="709" width="0.1561%" height="15" fill="rgb(241,79,49)" fg:x="998" fg:w="2"/><text x="78.1579%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.9859%" y="693" width="0.0781%" height="15" fill="rgb(222,42,35)" fg:x="999" fg:w="1"/><text x="78.2359%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9859%" y="677" width="0.0781%" height="15" fill="rgb(247,59,23)" fg:x="999" fg:w="1"/><text x="78.2359%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="77.9859%" y="661" width="0.0781%" height="15" fill="rgb(247,93,18)" fg:x="999" fg:w="1"/><text x="78.2359%" y="671.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="77.9859%" y="645" width="0.0781%" height="15" fill="rgb(249,107,47)" fg:x="999" fg:w="1"/><text x="78.2359%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.9859%" y="629" width="0.0781%" height="15" fill="rgb(219,27,1)" fg:x="999" fg:w="1"/><text x="78.2359%" y="639.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.62%)</title><rect x="77.5176%" y="805" width="0.6245%" height="15" fill="rgb(217,82,32)" fg:x="993" fg:w="8"/><text x="77.7676%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.62%)</title><rect x="77.5176%" y="789" width="0.6245%" height="15" fill="rgb(250,129,47)" fg:x="993" fg:w="8"/><text x="77.7676%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="78.0640%" y="773" width="0.0781%" height="15" fill="rgb(253,88,35)" fg:x="1000" fg:w="1"/><text x="78.3140%" y="783.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="78.0640%" y="757" width="0.0781%" height="15" fill="rgb(245,221,14)" fg:x="1000" fg:w="1"/><text x="78.3140%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="78.0640%" y="741" width="0.0781%" height="15" fill="rgb(217,119,54)" fg:x="1000" fg:w="1"/><text x="78.3140%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.0640%" y="725" width="0.0781%" height="15" fill="rgb(247,128,31)" fg:x="1000" fg:w="1"/><text x="78.3140%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.0640%" y="709" width="0.0781%" height="15" fill="rgb(211,99,22)" fg:x="1000" fg:w="1"/><text x="78.3140%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0640%" y="693" width="0.0781%" height="15" fill="rgb(212,20,17)" fg:x="1000" fg:w="1"/><text x="78.3140%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0640%" y="677" width="0.0781%" height="15" fill="rgb(209,159,29)" fg:x="1000" fg:w="1"/><text x="78.3140%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0640%" y="661" width="0.0781%" height="15" fill="rgb(222,177,53)" fg:x="1000" fg:w="1"/><text x="78.3140%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0640%" y="645" width="0.0781%" height="15" fill="rgb(234,46,43)" fg:x="1000" fg:w="1"/><text x="78.3140%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="78.1421%" y="805" width="0.0781%" height="15" fill="rgb(208,108,14)" fg:x="1001" fg:w="1"/><text x="78.3921%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="78.1421%" y="789" width="0.0781%" height="15" fill="rgb(226,78,53)" fg:x="1001" fg:w="1"/><text x="78.3921%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.1421%" y="773" width="0.0781%" height="15" fill="rgb(230,20,41)" fg:x="1001" fg:w="1"/><text x="78.3921%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.1421%" y="757" width="0.0781%" height="15" fill="rgb(213,195,35)" fg:x="1001" fg:w="1"/><text x="78.3921%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.1421%" y="741" width="0.0781%" height="15" fill="rgb(242,62,36)" fg:x="1001" fg:w="1"/><text x="78.3921%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.1421%" y="725" width="0.0781%" height="15" fill="rgb(222,210,37)" fg:x="1001" fg:w="1"/><text x="78.3921%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2201%" y="757" width="0.0781%" height="15" fill="rgb(232,107,19)" fg:x="1002" fg:w="1"/><text x="78.4701%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="78.2201%" y="789" width="0.1561%" height="15" fill="rgb(235,85,17)" fg:x="1002" fg:w="2"/><text x="78.4701%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="78.2201%" y="773" width="0.1561%" height="15" fill="rgb(219,195,31)" fg:x="1002" fg:w="2"/><text x="78.4701%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.2982%" y="757" width="0.0781%" height="15" fill="rgb(231,183,30)" fg:x="1003" fg:w="1"/><text x="78.5482%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.2982%" y="741" width="0.0781%" height="15" fill="rgb(212,0,11)" fg:x="1003" fg:w="1"/><text x="78.5482%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2982%" y="725" width="0.0781%" height="15" fill="rgb(249,53,54)" fg:x="1003" fg:w="1"/><text x="78.5482%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2982%" y="709" width="0.0781%" height="15" fill="rgb(211,118,13)" fg:x="1003" fg:w="1"/><text x="78.5482%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2982%" y="693" width="0.0781%" height="15" fill="rgb(237,42,9)" fg:x="1003" fg:w="1"/><text x="78.5482%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2982%" y="677" width="0.0781%" height="15" fill="rgb(227,68,32)" fg:x="1003" fg:w="1"/><text x="78.5482%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.2982%" y="661" width="0.0781%" height="15" fill="rgb(238,10,7)" fg:x="1003" fg:w="1"/><text x="78.5482%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2982%" y="645" width="0.0781%" height="15" fill="rgb(224,42,12)" fg:x="1003" fg:w="1"/><text x="78.5482%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2982%" y="629" width="0.0781%" height="15" fill="rgb(252,190,5)" fg:x="1003" fg:w="1"/><text x="78.5482%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2982%" y="613" width="0.0781%" height="15" fill="rgb(220,214,39)" fg:x="1003" fg:w="1"/><text x="78.5482%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2982%" y="597" width="0.0781%" height="15" fill="rgb(247,98,4)" fg:x="1003" fg:w="1"/><text x="78.5482%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="78.3763%" y="789" width="0.0781%" height="15" fill="rgb(211,60,12)" fg:x="1004" fg:w="1"/><text x="78.6263%" y="799.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="78.3763%" y="773" width="0.0781%" height="15" fill="rgb(224,42,10)" fg:x="1004" fg:w="1"/><text x="78.6263%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.4543%" y="661" width="0.0781%" height="15" fill="rgb(217,167,4)" fg:x="1005" fg:w="1"/><text x="78.7043%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="78.4543%" y="645" width="0.0781%" height="15" fill="rgb(253,18,17)" fg:x="1005" fg:w="1"/><text x="78.7043%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="78.4543%" y="741" width="0.1561%" height="15" fill="rgb(249,186,44)" fg:x="1005" fg:w="2"/><text x="78.7043%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="78.4543%" y="725" width="0.1561%" height="15" fill="rgb(254,124,54)" fg:x="1005" fg:w="2"/><text x="78.7043%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="78.4543%" y="709" width="0.1561%" height="15" fill="rgb(220,124,39)" fg:x="1005" fg:w="2"/><text x="78.7043%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="78.4543%" y="693" width="0.1561%" height="15" fill="rgb(225,96,46)" fg:x="1005" fg:w="2"/><text x="78.7043%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.4543%" y="677" width="0.1561%" height="15" fill="rgb(221,106,12)" fg:x="1005" fg:w="2"/><text x="78.7043%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.5324%" y="661" width="0.0781%" height="15" fill="rgb(227,133,23)" fg:x="1006" fg:w="1"/><text x="78.7824%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.5324%" y="645" width="0.0781%" height="15" fill="rgb(216,44,52)" fg:x="1006" fg:w="1"/><text x="78.7824%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.5324%" y="629" width="0.0781%" height="15" fill="rgb(239,149,7)" fg:x="1006" fg:w="1"/><text x="78.7824%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.5324%" y="613" width="0.0781%" height="15" fill="rgb(211,157,31)" fg:x="1006" fg:w="1"/><text x="78.7824%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.5324%" y="597" width="0.0781%" height="15" fill="rgb(206,215,22)" fg:x="1006" fg:w="1"/><text x="78.7824%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.5324%" y="581" width="0.0781%" height="15" fill="rgb(208,113,15)" fg:x="1006" fg:w="1"/><text x="78.7824%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="78.6105%" y="741" width="0.0781%" height="15" fill="rgb(207,189,15)" fg:x="1007" fg:w="1"/><text x="78.8605%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="78.6105%" y="725" width="0.0781%" height="15" fill="rgb(231,115,4)" fg:x="1007" fg:w="1"/><text x="78.8605%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.6105%" y="709" width="0.0781%" height="15" fill="rgb(253,117,2)" fg:x="1007" fg:w="1"/><text x="78.8605%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.6105%" y="693" width="0.0781%" height="15" fill="rgb(248,48,24)" fg:x="1007" fg:w="1"/><text x="78.8605%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.6105%" y="677" width="0.0781%" height="15" fill="rgb(241,28,46)" fg:x="1007" fg:w="1"/><text x="78.8605%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="78.6885%" y="709" width="0.0781%" height="15" fill="rgb(216,165,52)" fg:x="1008" fg:w="1"/><text x="78.9385%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.6885%" y="693" width="0.0781%" height="15" fill="rgb(220,222,34)" fg:x="1008" fg:w="1"/><text x="78.9385%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.6885%" y="677" width="0.0781%" height="15" fill="rgb(247,222,49)" fg:x="1008" fg:w="1"/><text x="78.9385%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.6885%" y="661" width="0.0781%" height="15" fill="rgb(240,10,31)" fg:x="1008" fg:w="1"/><text x="78.9385%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.6885%" y="645" width="0.0781%" height="15" fill="rgb(221,199,35)" fg:x="1008" fg:w="1"/><text x="78.9385%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.6885%" y="629" width="0.0781%" height="15" fill="rgb(230,223,11)" fg:x="1008" fg:w="1"/><text x="78.9385%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.6885%" y="613" width="0.0781%" height="15" fill="rgb(218,82,45)" fg:x="1008" fg:w="1"/><text x="78.9385%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.6885%" y="597" width="0.0781%" height="15" fill="rgb(233,213,33)" fg:x="1008" fg:w="1"/><text x="78.9385%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.6885%" y="581" width="0.0781%" height="15" fill="rgb(210,143,52)" fg:x="1008" fg:w="1"/><text x="78.9385%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.6885%" y="565" width="0.0781%" height="15" fill="rgb(206,95,4)" fg:x="1008" fg:w="1"/><text x="78.9385%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.6885%" y="549" width="0.0781%" height="15" fill="rgb(246,164,46)" fg:x="1008" fg:w="1"/><text x="78.9385%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="78.7666%" y="709" width="0.0781%" height="15" fill="rgb(213,210,47)" fg:x="1009" fg:w="1"/><text x="79.0166%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="78.7666%" y="693" width="0.0781%" height="15" fill="rgb(210,12,38)" fg:x="1009" fg:w="1"/><text x="79.0166%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.7666%" y="677" width="0.0781%" height="15" fill="rgb(252,192,54)" fg:x="1009" fg:w="1"/><text x="79.0166%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="78.7666%" y="661" width="0.0781%" height="15" fill="rgb(242,92,6)" fg:x="1009" fg:w="1"/><text x="79.0166%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.7666%" y="645" width="0.0781%" height="15" fill="rgb(253,154,15)" fg:x="1009" fg:w="1"/><text x="79.0166%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7666%" y="629" width="0.0781%" height="15" fill="rgb(209,20,43)" fg:x="1009" fg:w="1"/><text x="79.0166%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.8447%" y="629" width="0.1561%" height="15" fill="rgb(232,28,49)" fg:x="1010" fg:w="2"/><text x="79.0947%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.8447%" y="613" width="0.1561%" height="15" fill="rgb(248,131,53)" fg:x="1010" fg:w="2"/><text x="79.0947%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.8447%" y="597" width="0.1561%" height="15" fill="rgb(214,16,30)" fg:x="1010" fg:w="2"/><text x="79.0947%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.9227%" y="581" width="0.0781%" height="15" fill="rgb(245,16,0)" fg:x="1011" fg:w="1"/><text x="79.1727%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.39%)</title><rect x="78.6885%" y="725" width="0.3903%" height="15" fill="rgb(245,17,35)" fg:x="1008" fg:w="5"/><text x="78.9385%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.23%)</title><rect x="78.8447%" y="709" width="0.2342%" height="15" fill="rgb(249,27,53)" fg:x="1010" fg:w="3"/><text x="79.0947%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.23%)</title><rect x="78.8447%" y="693" width="0.2342%" height="15" fill="rgb(214,73,24)" fg:x="1010" fg:w="3"/><text x="79.0947%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.23%)</title><rect x="78.8447%" y="677" width="0.2342%" height="15" fill="rgb(223,84,37)" fg:x="1010" fg:w="3"/><text x="79.0947%" y="687.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.23%)</title><rect x="78.8447%" y="661" width="0.2342%" height="15" fill="rgb(210,109,28)" fg:x="1010" fg:w="3"/><text x="79.0947%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.23%)</title><rect x="78.8447%" y="645" width="0.2342%" height="15" fill="rgb(208,186,6)" fg:x="1010" fg:w="3"/><text x="79.0947%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0008%" y="629" width="0.0781%" height="15" fill="rgb(235,201,30)" fg:x="1012" fg:w="1"/><text x="79.2508%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.0008%" y="613" width="0.0781%" height="15" fill="rgb(216,198,48)" fg:x="1012" fg:w="1"/><text x="79.2508%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0008%" y="597" width="0.0781%" height="15" fill="rgb(254,186,25)" fg:x="1012" fg:w="1"/><text x="79.2508%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.0008%" y="581" width="0.0781%" height="15" fill="rgb(227,87,5)" fg:x="1012" fg:w="1"/><text x="79.2508%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.0008%" y="565" width="0.0781%" height="15" fill="rgb(236,205,25)" fg:x="1012" fg:w="1"/><text x="79.2508%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0008%" y="549" width="0.0781%" height="15" fill="rgb(229,99,32)" fg:x="1012" fg:w="1"/><text x="79.2508%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.0008%" y="533" width="0.0781%" height="15" fill="rgb(231,177,31)" fg:x="1012" fg:w="1"/><text x="79.2508%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0008%" y="517" width="0.0781%" height="15" fill="rgb(246,15,2)" fg:x="1012" fg:w="1"/><text x="79.2508%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.1569%" y="677" width="0.0781%" height="15" fill="rgb(207,39,15)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.1569%" y="661" width="0.0781%" height="15" fill="rgb(207,44,9)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.1569%" y="645" width="0.0781%" height="15" fill="rgb(225,224,33)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.1569%" y="629" width="0.0781%" height="15" fill="rgb(252,151,3)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1569%" y="613" width="0.0781%" height="15" fill="rgb(211,140,13)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.1569%" y="597" width="0.0781%" height="15" fill="rgb(239,225,17)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1569%" y="581" width="0.0781%" height="15" fill="rgb(223,170,52)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.1569%" y="565" width="0.0781%" height="15" fill="rgb(212,64,21)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1569%" y="549" width="0.0781%" height="15" fill="rgb(236,126,48)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.1569%" y="533" width="0.0781%" height="15" fill="rgb(209,135,11)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1569%" y="517" width="0.0781%" height="15" fill="rgb(228,126,40)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.1569%" y="501" width="0.0781%" height="15" fill="rgb(205,196,36)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1569%" y="485" width="0.0781%" height="15" fill="rgb(243,160,33)" fg:x="1014" fg:w="1"/><text x="79.4069%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.86%)</title><rect x="78.4543%" y="789" width="0.8587%" height="15" fill="rgb(210,84,20)" fg:x="1005" fg:w="11"/><text x="78.7043%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.86%)</title><rect x="78.4543%" y="773" width="0.8587%" height="15" fill="rgb(228,213,30)" fg:x="1005" fg:w="11"/><text x="78.7043%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.86%)</title><rect x="78.4543%" y="757" width="0.8587%" height="15" fill="rgb(252,33,45)" fg:x="1005" fg:w="11"/><text x="78.7043%" y="767.50"></text></g><g><title>plugins_core::build::Build::leads_to (8 samples, 0.62%)</title><rect x="78.6885%" y="741" width="0.6245%" height="15" fill="rgb(254,227,20)" fg:x="1008" fg:w="8"/><text x="78.9385%" y="751.50"></text></g><g><title>plugins_core::tools::leads_to (3 samples, 0.23%)</title><rect x="79.0788%" y="725" width="0.2342%" height="15" fill="rgb(228,192,2)" fg:x="1013" fg:w="3"/><text x="79.3288%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.23%)</title><rect x="79.0788%" y="709" width="0.2342%" height="15" fill="rgb(233,32,8)" fg:x="1013" fg:w="3"/><text x="79.3288%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.23%)</title><rect x="79.0788%" y="693" width="0.2342%" height="15" fill="rgb(220,146,47)" fg:x="1013" fg:w="3"/><text x="79.3288%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.2350%" y="677" width="0.0781%" height="15" fill="rgb(246,194,1)" fg:x="1015" fg:w="1"/><text x="79.4850%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.2350%" y="661" width="0.0781%" height="15" fill="rgb(218,203,9)" fg:x="1015" fg:w="1"/><text x="79.4850%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.2350%" y="645" width="0.0781%" height="15" fill="rgb(237,97,14)" fg:x="1015" fg:w="1"/><text x="79.4850%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2350%" y="629" width="0.0781%" height="15" fill="rgb(239,76,15)" fg:x="1015" fg:w="1"/><text x="79.4850%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.2350%" y="613" width="0.0781%" height="15" fill="rgb(222,53,45)" fg:x="1015" fg:w="1"/><text x="79.4850%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2350%" y="597" width="0.0781%" height="15" fill="rgb(237,88,5)" fg:x="1015" fg:w="1"/><text x="79.4850%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2350%" y="581" width="0.0781%" height="15" fill="rgb(218,223,35)" fg:x="1015" fg:w="1"/><text x="79.4850%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2350%" y="565" width="0.0781%" height="15" fill="rgb(243,229,38)" fg:x="1015" fg:w="1"/><text x="79.4850%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.2350%" y="549" width="0.0781%" height="15" fill="rgb(240,75,41)" fg:x="1015" fg:w="1"/><text x="79.4850%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.2350%" y="533" width="0.0781%" height="15" fill="rgb(209,110,37)" fg:x="1015" fg:w="1"/><text x="79.4850%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.3130%" y="677" width="0.0781%" height="15" fill="rgb(221,130,46)" fg:x="1016" fg:w="1"/><text x="79.5630%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.3130%" y="661" width="0.0781%" height="15" fill="rgb(237,160,20)" fg:x="1016" fg:w="1"/><text x="79.5630%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.3130%" y="645" width="0.0781%" height="15" fill="rgb(234,126,24)" fg:x="1016" fg:w="1"/><text x="79.5630%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.3130%" y="629" width="0.0781%" height="15" fill="rgb(207,177,9)" fg:x="1016" fg:w="1"/><text x="79.5630%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.3130%" y="613" width="0.0781%" height="15" fill="rgb(231,191,33)" fg:x="1016" fg:w="1"/><text x="79.5630%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.3130%" y="597" width="0.0781%" height="15" fill="rgb(207,42,1)" fg:x="1016" fg:w="1"/><text x="79.5630%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="79.3130%" y="757" width="0.1561%" height="15" fill="rgb(218,34,50)" fg:x="1016" fg:w="2"/><text x="79.5630%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="79.3130%" y="741" width="0.1561%" height="15" fill="rgb(254,126,39)" fg:x="1016" fg:w="2"/><text x="79.5630%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="79.3130%" y="725" width="0.1561%" height="15" fill="rgb(251,17,26)" fg:x="1016" fg:w="2"/><text x="79.5630%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="79.3130%" y="709" width="0.1561%" height="15" fill="rgb(252,215,34)" fg:x="1016" fg:w="2"/><text x="79.5630%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="79.3130%" y="693" width="0.1561%" height="15" fill="rgb(217,120,44)" fg:x="1016" fg:w="2"/><text x="79.5630%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="79.3911%" y="677" width="0.0781%" height="15" fill="rgb(211,31,11)" fg:x="1017" fg:w="1"/><text x="79.6411%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="79.3911%" y="661" width="0.0781%" height="15" fill="rgb(222,69,51)" fg:x="1017" fg:w="1"/><text x="79.6411%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.23%)</title><rect x="79.3130%" y="773" width="0.2342%" height="15" fill="rgb(215,229,42)" fg:x="1016" fg:w="3"/><text x="79.5630%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.4692%" y="757" width="0.0781%" height="15" fill="rgb(212,102,15)" fg:x="1018" fg:w="1"/><text x="79.7192%" y="767.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.6253%" y="725" width="0.0781%" height="15" fill="rgb(205,179,41)" fg:x="1020" fg:w="1"/><text x="79.8753%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="79.6253%" y="709" width="0.0781%" height="15" fill="rgb(219,148,46)" fg:x="1020" fg:w="1"/><text x="79.8753%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="79.6253%" y="693" width="0.0781%" height="15" fill="rgb(243,40,19)" fg:x="1020" fg:w="1"/><text x="79.8753%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.7034%" y="693" width="0.0781%" height="15" fill="rgb(208,206,34)" fg:x="1021" fg:w="1"/><text x="79.9534%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.7034%" y="677" width="0.0781%" height="15" fill="rgb(244,184,38)" fg:x="1021" fg:w="1"/><text x="79.9534%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.7034%" y="661" width="0.0781%" height="15" fill="rgb(244,151,47)" fg:x="1021" fg:w="1"/><text x="79.9534%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.7034%" y="645" width="0.0781%" height="15" fill="rgb(236,134,42)" fg:x="1021" fg:w="1"/><text x="79.9534%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.7034%" y="629" width="0.0781%" height="15" fill="rgb(233,93,22)" fg:x="1021" fg:w="1"/><text x="79.9534%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="79.7034%" y="613" width="0.0781%" height="15" fill="rgb(211,202,10)" fg:x="1021" fg:w="1"/><text x="79.9534%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="79.7034%" y="597" width="0.0781%" height="15" fill="rgb(240,63,8)" fg:x="1021" fg:w="1"/><text x="79.9534%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="79.7814%" y="693" width="0.0781%" height="15" fill="rgb(214,9,4)" fg:x="1022" fg:w="1"/><text x="80.0314%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="79.7814%" y="677" width="0.0781%" height="15" fill="rgb(243,66,45)" fg:x="1022" fg:w="1"/><text x="80.0314%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.7814%" y="661" width="0.0781%" height="15" fill="rgb(220,50,42)" fg:x="1022" fg:w="1"/><text x="80.0314%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.7814%" y="645" width="0.0781%" height="15" fill="rgb(220,134,27)" fg:x="1022" fg:w="1"/><text x="80.0314%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.7814%" y="629" width="0.0781%" height="15" fill="rgb(246,151,50)" fg:x="1022" fg:w="1"/><text x="80.0314%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.7814%" y="613" width="0.0781%" height="15" fill="rgb(238,216,27)" fg:x="1022" fg:w="1"/><text x="80.0314%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="79.9375%" y="645" width="0.2342%" height="15" fill="rgb(250,92,11)" fg:x="1024" fg:w="3"/><text x="80.1875%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.0156%" y="629" width="0.1561%" height="15" fill="rgb(248,183,6)" fg:x="1025" fg:w="2"/><text x="80.2656%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.2498%" y="613" width="0.0781%" height="15" fill="rgb(211,204,50)" fg:x="1028" fg:w="1"/><text x="80.4998%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.3279%" y="613" width="0.1561%" height="15" fill="rgb(252,55,47)" fg:x="1029" fg:w="2"/><text x="80.5779%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.3279%" y="597" width="0.1561%" height="15" fill="rgb(240,198,32)" fg:x="1029" fg:w="2"/><text x="80.5779%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.4059%" y="581" width="0.0781%" height="15" fill="rgb(224,203,19)" fg:x="1030" fg:w="1"/><text x="80.6559%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4059%" y="565" width="0.0781%" height="15" fill="rgb(205,27,16)" fg:x="1030" fg:w="1"/><text x="80.6559%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.4059%" y="549" width="0.0781%" height="15" fill="rgb(224,226,17)" fg:x="1030" fg:w="1"/><text x="80.6559%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.4059%" y="533" width="0.0781%" height="15" fill="rgb(205,216,54)" fg:x="1030" fg:w="1"/><text x="80.6559%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.4059%" y="517" width="0.0781%" height="15" fill="rgb(248,168,46)" fg:x="1030" fg:w="1"/><text x="80.6559%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.4059%" y="501" width="0.0781%" height="15" fill="rgb(226,111,45)" fg:x="1030" fg:w="1"/><text x="80.6559%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.4059%" y="485" width="0.0781%" height="15" fill="rgb(231,15,9)" fg:x="1030" fg:w="1"/><text x="80.6559%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="80.1717%" y="645" width="0.3903%" height="15" fill="rgb(243,168,3)" fg:x="1027" fg:w="5"/><text x="80.4217%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="80.1717%" y="629" width="0.3903%" height="15" fill="rgb(221,220,54)" fg:x="1027" fg:w="5"/><text x="80.4217%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4840%" y="613" width="0.0781%" height="15" fill="rgb(232,174,38)" fg:x="1031" fg:w="1"/><text x="80.7340%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.86%)</title><rect x="79.8595%" y="661" width="0.8587%" height="15" fill="rgb(205,14,38)" fg:x="1023" fg:w="11"/><text x="80.1095%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.5621%" y="645" width="0.1561%" height="15" fill="rgb(234,89,19)" fg:x="1032" fg:w="2"/><text x="80.8121%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.5621%" y="629" width="0.1561%" height="15" fill="rgb(216,68,51)" fg:x="1032" fg:w="2"/><text x="80.8121%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.6401%" y="613" width="0.0781%" height="15" fill="rgb(213,49,2)" fg:x="1033" fg:w="1"/><text x="80.8901%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.94%)</title><rect x="79.8595%" y="693" width="0.9368%" height="15" fill="rgb(242,146,30)" fg:x="1023" fg:w="12"/><text x="80.1095%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.94%)</title><rect x="79.8595%" y="677" width="0.9368%" height="15" fill="rgb(224,188,11)" fg:x="1023" fg:w="12"/><text x="80.1095%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7182%" y="661" width="0.0781%" height="15" fill="rgb(213,159,11)" fg:x="1034" fg:w="1"/><text x="80.9682%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7182%" y="645" width="0.0781%" height="15" fill="rgb(229,13,31)" fg:x="1034" fg:w="1"/><text x="80.9682%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="80.7963%" y="645" width="0.1561%" height="15" fill="rgb(209,103,11)" fg:x="1035" fg:w="2"/><text x="81.0463%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.9524%" y="645" width="0.0781%" height="15" fill="rgb(206,3,4)" fg:x="1037" fg:w="1"/><text x="81.2024%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="80.7963%" y="693" width="0.3903%" height="15" fill="rgb(252,10,49)" fg:x="1035" fg:w="5"/><text x="81.0463%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="80.7963%" y="677" width="0.3903%" height="15" fill="rgb(217,160,32)" fg:x="1035" fg:w="5"/><text x="81.0463%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="80.7963%" y="661" width="0.3903%" height="15" fill="rgb(249,196,0)" fg:x="1035" fg:w="5"/><text x="81.0463%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.0304%" y="645" width="0.1561%" height="15" fill="rgb(213,17,48)" fg:x="1038" fg:w="2"/><text x="81.2804%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.0304%" y="629" width="0.1561%" height="15" fill="rgb(206,42,46)" fg:x="1038" fg:w="2"/><text x="81.2804%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.0304%" y="613" width="0.1561%" height="15" fill="rgb(212,105,24)" fg:x="1038" fg:w="2"/><text x="81.2804%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.0304%" y="597" width="0.1561%" height="15" fill="rgb(243,216,30)" fg:x="1038" fg:w="2"/><text x="81.2804%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="81.0304%" y="581" width="0.1561%" height="15" fill="rgb(207,121,3)" fg:x="1038" fg:w="2"/><text x="81.2804%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.1085%" y="565" width="0.0781%" height="15" fill="rgb(249,78,0)" fg:x="1039" fg:w="1"/><text x="81.3585%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="81.1866%" y="645" width="0.0781%" height="15" fill="rgb(244,151,32)" fg:x="1040" fg:w="1"/><text x="81.4366%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="81.1866%" y="629" width="0.0781%" height="15" fill="rgb(228,63,25)" fg:x="1040" fg:w="1"/><text x="81.4366%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.2646%" y="645" width="0.0781%" height="15" fill="rgb(231,158,23)" fg:x="1041" fg:w="1"/><text x="81.5146%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="81.3427%" y="645" width="0.1561%" height="15" fill="rgb(248,107,23)" fg:x="1042" fg:w="2"/><text x="81.5927%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="81.3427%" y="629" width="0.1561%" height="15" fill="rgb(215,168,21)" fg:x="1042" fg:w="2"/><text x="81.5927%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="81.4988%" y="645" width="0.0781%" height="15" fill="rgb(227,83,22)" fg:x="1044" fg:w="1"/><text x="81.7488%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.4988%" y="629" width="0.0781%" height="15" fill="rgb(217,118,43)" fg:x="1044" fg:w="1"/><text x="81.7488%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4988%" y="613" width="0.0781%" height="15" fill="rgb(229,220,41)" fg:x="1044" fg:w="1"/><text x="81.7488%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4988%" y="597" width="0.0781%" height="15" fill="rgb(254,146,46)" fg:x="1044" fg:w="1"/><text x="81.7488%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.4988%" y="581" width="0.0781%" height="15" fill="rgb(233,208,31)" fg:x="1044" fg:w="1"/><text x="81.7488%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="81.6550%" y="597" width="0.2342%" height="15" fill="rgb(222,162,7)" fg:x="1046" fg:w="3"/><text x="81.9050%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="81.6550%" y="581" width="0.2342%" height="15" fill="rgb(230,117,45)" fg:x="1046" fg:w="3"/><text x="81.9050%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.8111%" y="565" width="0.0781%" height="15" fill="rgb(239,163,6)" fg:x="1048" fg:w="1"/><text x="82.0611%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8111%" y="549" width="0.0781%" height="15" fill="rgb(246,130,17)" fg:x="1048" fg:w="1"/><text x="82.0611%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8111%" y="533" width="0.0781%" height="15" fill="rgb(216,84,5)" fg:x="1048" fg:w="1"/><text x="82.0611%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.0453%" y="549" width="0.0781%" height="15" fill="rgb(230,200,21)" fg:x="1051" fg:w="1"/><text x="82.2953%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1233%" y="533" width="0.0781%" height="15" fill="rgb(224,2,8)" fg:x="1052" fg:w="1"/><text x="82.3733%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1233%" y="517" width="0.0781%" height="15" fill="rgb(238,178,10)" fg:x="1052" fg:w="1"/><text x="82.3733%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.2795%" y="485" width="0.0781%" height="15" fill="rgb(242,153,24)" fg:x="1054" fg:w="1"/><text x="82.5295%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2795%" y="469" width="0.0781%" height="15" fill="rgb(242,32,48)" fg:x="1054" fg:w="1"/><text x="82.5295%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2795%" y="453" width="0.0781%" height="15" fill="rgb(227,36,0)" fg:x="1054" fg:w="1"/><text x="82.5295%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2795%" y="437" width="0.0781%" height="15" fill="rgb(251,33,35)" fg:x="1054" fg:w="1"/><text x="82.5295%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="82.1233%" y="549" width="0.3123%" height="15" fill="rgb(232,168,51)" fg:x="1052" fg:w="4"/><text x="82.3733%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="82.2014%" y="533" width="0.2342%" height="15" fill="rgb(228,56,10)" fg:x="1053" fg:w="3"/><text x="82.4514%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="82.2014%" y="517" width="0.2342%" height="15" fill="rgb(231,10,26)" fg:x="1053" fg:w="3"/><text x="82.4514%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.2795%" y="501" width="0.1561%" height="15" fill="rgb(226,202,12)" fg:x="1054" fg:w="2"/><text x="82.5295%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3575%" y="485" width="0.0781%" height="15" fill="rgb(251,49,21)" fg:x="1055" fg:w="1"/><text x="82.6075%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.86%)</title><rect x="81.6550%" y="613" width="0.8587%" height="15" fill="rgb(206,228,28)" fg:x="1046" fg:w="11"/><text x="81.9050%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.62%)</title><rect x="81.8891%" y="597" width="0.6245%" height="15" fill="rgb(205,198,31)" fg:x="1049" fg:w="8"/><text x="82.1391%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.62%)</title><rect x="81.8891%" y="581" width="0.6245%" height="15" fill="rgb(213,69,1)" fg:x="1049" fg:w="8"/><text x="82.1391%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="81.9672%" y="565" width="0.5464%" height="15" fill="rgb(209,177,9)" fg:x="1050" fg:w="7"/><text x="82.2172%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4356%" y="549" width="0.0781%" height="15" fill="rgb(227,119,30)" fg:x="1056" fg:w="1"/><text x="82.6856%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.01%)</title><rect x="81.6550%" y="629" width="1.0148%" height="15" fill="rgb(234,106,41)" fg:x="1046" fg:w="13"/><text x="81.9050%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="82.5137%" y="613" width="0.1561%" height="15" fill="rgb(244,103,47)" fg:x="1057" fg:w="2"/><text x="82.7637%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5917%" y="597" width="0.0781%" height="15" fill="rgb(212,211,25)" fg:x="1058" fg:w="1"/><text x="82.8417%" y="607.50"></text></g><g><title>engine::session::Session::flush (44 samples, 3.43%)</title><rect x="79.3130%" y="789" width="3.4348%" height="15" fill="rgb(208,63,53)" fg:x="1016" fg:w="44"/><text x="79.5630%" y="799.50">eng..</text></g><g><title>engine::session::Session::save_changes (41 samples, 3.20%)</title><rect x="79.5472%" y="773" width="3.2006%" height="15" fill="rgb(213,176,21)" fg:x="1019" fg:w="41"/><text x="79.7972%" y="783.50">eng..</text></g><g><title>engine::session::state::State::close (41 samples, 3.20%)</title><rect x="79.5472%" y="757" width="3.2006%" height="15" fill="rgb(243,124,12)" fg:x="1019" fg:w="41"/><text x="79.7972%" y="767.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (41 samples, 3.20%)</title><rect x="79.5472%" y="741" width="3.2006%" height="15" fill="rgb(239,2,35)" fg:x="1019" fg:w="41"/><text x="79.7972%" y="751.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (39 samples, 3.04%)</title><rect x="79.7034%" y="725" width="3.0445%" height="15" fill="rgb(253,169,22)" fg:x="1021" fg:w="39"/><text x="79.9534%" y="735.50">eng..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (39 samples, 3.04%)</title><rect x="79.7034%" y="709" width="3.0445%" height="15" fill="rgb(254,51,12)" fg:x="1021" fg:w="39"/><text x="79.9534%" y="719.50">eng..</text></g><g><title>kernel::model::any_entity_changes (20 samples, 1.56%)</title><rect x="81.1866%" y="693" width="1.5613%" height="15" fill="rgb(244,17,47)" fg:x="1040" fg:w="20"/><text x="81.4366%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.56%)</title><rect x="81.1866%" y="677" width="1.5613%" height="15" fill="rgb(251,45,46)" fg:x="1040" fg:w="20"/><text x="81.4366%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.56%)</title><rect x="81.1866%" y="661" width="1.5613%" height="15" fill="rgb(223,87,43)" fg:x="1040" fg:w="20"/><text x="81.4366%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.17%)</title><rect x="81.5769%" y="645" width="1.1710%" height="15" fill="rgb(230,132,31)" fg:x="1045" fg:w="15"/><text x="81.8269%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6698%" y="629" width="0.0781%" height="15" fill="rgb(206,99,1)" fg:x="1059" fg:w="1"/><text x="82.9198%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.7479%" y="757" width="0.0781%" height="15" fill="rgb(227,110,25)" fg:x="1060" fg:w="1"/><text x="82.9979%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.7479%" y="741" width="0.0781%" height="15" fill="rgb(217,182,7)" fg:x="1060" fg:w="1"/><text x="82.9979%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.7479%" y="725" width="0.0781%" height="15" fill="rgb(250,176,4)" fg:x="1060" fg:w="1"/><text x="82.9979%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.7479%" y="709" width="0.0781%" height="15" fill="rgb(244,98,30)" fg:x="1060" fg:w="1"/><text x="82.9979%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="82.7479%" y="789" width="0.1561%" height="15" fill="rgb(228,150,42)" fg:x="1060" fg:w="2"/><text x="82.9979%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="82.7479%" y="773" width="0.1561%" height="15" fill="rgb(231,91,46)" fg:x="1060" fg:w="2"/><text x="82.9979%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.8259%" y="757" width="0.0781%" height="15" fill="rgb(252,161,32)" fg:x="1061" fg:w="1"/><text x="83.0759%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.8259%" y="741" width="0.0781%" height="15" fill="rgb(236,69,41)" fg:x="1061" fg:w="1"/><text x="83.0759%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.8259%" y="725" width="0.0781%" height="15" fill="rgb(212,160,3)" fg:x="1061" fg:w="1"/><text x="83.0759%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.8259%" y="709" width="0.0781%" height="15" fill="rgb(216,5,50)" fg:x="1061" fg:w="1"/><text x="83.0759%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8259%" y="693" width="0.0781%" height="15" fill="rgb(241,138,25)" fg:x="1061" fg:w="1"/><text x="83.0759%" y="703.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="82.9040%" y="533" width="0.0781%" height="15" fill="rgb(239,42,18)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.9040%" y="517" width="0.0781%" height="15" fill="rgb(239,40,7)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.9040%" y="501" width="0.0781%" height="15" fill="rgb(239,11,31)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.9040%" y="485" width="0.0781%" height="15" fill="rgb(224,77,40)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.9040%" y="469" width="0.0781%" height="15" fill="rgb(226,15,5)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.9040%" y="453" width="0.0781%" height="15" fill="rgb(254,188,5)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="82.9040%" y="437" width="0.0781%" height="15" fill="rgb(241,148,52)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="82.9040%" y="421" width="0.0781%" height="15" fill="rgb(251,48,36)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="82.9040%" y="405" width="0.0781%" height="15" fill="rgb(243,83,13)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="82.9040%" y="389" width="0.0781%" height="15" fill="rgb(210,105,0)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.9040%" y="373" width="0.0781%" height="15" fill="rgb(239,60,36)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.9040%" y="357" width="0.0781%" height="15" fill="rgb(210,20,0)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.9040%" y="341" width="0.0781%" height="15" fill="rgb(244,26,53)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="82.9040%" y="325" width="0.0781%" height="15" fill="rgb(240,100,49)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="82.9040%" y="309" width="0.0781%" height="15" fill="rgb(250,46,45)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="82.9040%" y="293" width="0.0781%" height="15" fill="rgb(220,181,29)" fg:x="1062" fg:w="1"/><text x="83.1540%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="82.9040%" y="757" width="0.1561%" height="15" fill="rgb(213,137,33)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="82.9040%" y="741" width="0.1561%" height="15" fill="rgb(213,27,48)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="82.9040%" y="725" width="0.1561%" height="15" fill="rgb(245,180,39)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="82.9040%" y="709" width="0.1561%" height="15" fill="rgb(212,158,42)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="82.9040%" y="693" width="0.1561%" height="15" fill="rgb(228,193,18)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="82.9040%" y="677" width="0.1561%" height="15" fill="rgb(245,172,29)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="82.9040%" y="661" width="0.1561%" height="15" fill="rgb(207,98,24)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="82.9040%" y="645" width="0.1561%" height="15" fill="rgb(249,92,26)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="82.9040%" y="629" width="0.1561%" height="15" fill="rgb(217,176,26)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="82.9040%" y="613" width="0.1561%" height="15" fill="rgb(221,8,39)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="82.9040%" y="597" width="0.1561%" height="15" fill="rgb(208,90,18)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="82.9040%" y="581" width="0.1561%" height="15" fill="rgb(207,202,30)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="82.9040%" y="565" width="0.1561%" height="15" fill="rgb(231,124,22)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="82.9040%" y="549" width="0.1561%" height="15" fill="rgb(206,15,5)" fg:x="1062" fg:w="2"/><text x="83.1540%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.9820%" y="533" width="0.0781%" height="15" fill="rgb(239,16,52)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.9820%" y="517" width="0.0781%" height="15" fill="rgb(245,213,29)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="82.9820%" y="501" width="0.0781%" height="15" fill="rgb(213,203,36)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="82.9820%" y="485" width="0.0781%" height="15" fill="rgb(209,55,18)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="82.9820%" y="469" width="0.0781%" height="15" fill="rgb(207,133,49)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="82.9820%" y="453" width="0.0781%" height="15" fill="rgb(240,33,46)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.9820%" y="437" width="0.0781%" height="15" fill="rgb(212,35,2)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.9820%" y="421" width="0.0781%" height="15" fill="rgb(231,119,28)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.9820%" y="405" width="0.0781%" height="15" fill="rgb(252,178,7)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="82.9820%" y="389" width="0.0781%" height="15" fill="rgb(251,91,4)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.9820%" y="373" width="0.0781%" height="15" fill="rgb(233,122,19)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="82.9820%" y="357" width="0.0781%" height="15" fill="rgb(231,208,46)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="82.9820%" y="341" width="0.0781%" height="15" fill="rgb(243,15,41)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="82.9820%" y="325" width="0.0781%" height="15" fill="rgb(210,32,43)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.9820%" y="309" width="0.0781%" height="15" fill="rgb(222,177,15)" fg:x="1063" fg:w="1"/><text x="83.2320%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.0601%" y="757" width="0.1561%" height="15" fill="rgb(244,121,34)" fg:x="1064" fg:w="2"/><text x="83.3101%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.0601%" y="741" width="0.1561%" height="15" fill="rgb(234,138,4)" fg:x="1064" fg:w="2"/><text x="83.3101%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.0601%" y="725" width="0.1561%" height="15" fill="rgb(240,97,48)" fg:x="1064" fg:w="2"/><text x="83.3101%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.0601%" y="709" width="0.1561%" height="15" fill="rgb(237,65,54)" fg:x="1064" fg:w="2"/><text x="83.3101%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.0601%" y="693" width="0.1561%" height="15" fill="rgb(214,25,24)" fg:x="1064" fg:w="2"/><text x="83.3101%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.0601%" y="677" width="0.1561%" height="15" fill="rgb(213,5,3)" fg:x="1064" fg:w="2"/><text x="83.3101%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1382%" y="661" width="0.0781%" height="15" fill="rgb(219,81,29)" fg:x="1065" fg:w="1"/><text x="83.3882%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1382%" y="645" width="0.0781%" height="15" fill="rgb(220,43,48)" fg:x="1065" fg:w="1"/><text x="83.3882%" y="655.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="83.2162%" y="757" width="0.0781%" height="15" fill="rgb(239,157,2)" fg:x="1066" fg:w="1"/><text x="83.4662%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.2162%" y="741" width="0.0781%" height="15" fill="rgb(213,104,43)" fg:x="1066" fg:w="1"/><text x="83.4662%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="83.2162%" y="725" width="0.0781%" height="15" fill="rgb(237,84,9)" fg:x="1066" fg:w="1"/><text x="83.4662%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.2162%" y="709" width="0.0781%" height="15" fill="rgb(252,6,33)" fg:x="1066" fg:w="1"/><text x="83.4662%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.2162%" y="693" width="0.0781%" height="15" fill="rgb(251,172,22)" fg:x="1066" fg:w="1"/><text x="83.4662%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.2943%" y="709" width="0.1561%" height="15" fill="rgb(244,91,53)" fg:x="1067" fg:w="2"/><text x="83.5443%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.2943%" y="693" width="0.1561%" height="15" fill="rgb(219,29,30)" fg:x="1067" fg:w="2"/><text x="83.5443%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3724%" y="677" width="0.0781%" height="15" fill="rgb(213,3,15)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3724%" y="661" width="0.0781%" height="15" fill="rgb(208,25,28)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3724%" y="645" width="0.0781%" height="15" fill="rgb(252,144,25)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3724%" y="629" width="0.0781%" height="15" fill="rgb(226,220,25)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3724%" y="613" width="0.0781%" height="15" fill="rgb(212,131,28)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3724%" y="597" width="0.0781%" height="15" fill="rgb(219,143,52)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3724%" y="581" width="0.0781%" height="15" fill="rgb(215,56,7)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.3724%" y="565" width="0.0781%" height="15" fill="rgb(239,59,51)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.3724%" y="549" width="0.0781%" height="15" fill="rgb(209,215,4)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.3724%" y="533" width="0.0781%" height="15" fill="rgb(221,118,39)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3724%" y="517" width="0.0781%" height="15" fill="rgb(236,6,44)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3724%" y="501" width="0.0781%" height="15" fill="rgb(216,122,9)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.3724%" y="485" width="0.0781%" height="15" fill="rgb(244,134,42)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.3724%" y="469" width="0.0781%" height="15" fill="rgb(209,189,35)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.3724%" y="453" width="0.0781%" height="15" fill="rgb(250,47,36)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.3724%" y="437" width="0.0781%" height="15" fill="rgb(252,112,4)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3724%" y="421" width="0.0781%" height="15" fill="rgb(221,79,51)" fg:x="1068" fg:w="1"/><text x="83.6224%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.23%)</title><rect x="83.2943%" y="757" width="0.2342%" height="15" fill="rgb(232,65,53)" fg:x="1067" fg:w="3"/><text x="83.5443%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.23%)</title><rect x="83.2943%" y="741" width="0.2342%" height="15" fill="rgb(211,37,7)" fg:x="1067" fg:w="3"/><text x="83.5443%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.23%)</title><rect x="83.2943%" y="725" width="0.2342%" height="15" fill="rgb(234,221,18)" fg:x="1067" fg:w="3"/><text x="83.5443%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.4504%" y="709" width="0.0781%" height="15" fill="rgb(220,158,26)" fg:x="1069" fg:w="1"/><text x="83.7004%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.4504%" y="693" width="0.0781%" height="15" fill="rgb(220,70,6)" fg:x="1069" fg:w="1"/><text x="83.7004%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4504%" y="677" width="0.0781%" height="15" fill="rgb(250,39,48)" fg:x="1069" fg:w="1"/><text x="83.7004%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.4504%" y="661" width="0.0781%" height="15" fill="rgb(206,40,27)" fg:x="1069" fg:w="1"/><text x="83.7004%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.70%)</title><rect x="82.9040%" y="773" width="0.7026%" height="15" fill="rgb(247,80,36)" fg:x="1062" fg:w="9"/><text x="83.1540%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="83.5285%" y="757" width="0.0781%" height="15" fill="rgb(222,9,20)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5285%" y="741" width="0.0781%" height="15" fill="rgb(217,26,45)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5285%" y="725" width="0.0781%" height="15" fill="rgb(221,67,14)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.5285%" y="709" width="0.0781%" height="15" fill="rgb(248,100,24)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.5285%" y="693" width="0.0781%" height="15" fill="rgb(230,187,16)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.5285%" y="677" width="0.0781%" height="15" fill="rgb(205,108,13)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.5285%" y="661" width="0.0781%" height="15" fill="rgb(235,71,51)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.5285%" y="645" width="0.0781%" height="15" fill="rgb(251,172,48)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.5285%" y="629" width="0.0781%" height="15" fill="rgb(240,96,49)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.5285%" y="613" width="0.0781%" height="15" fill="rgb(235,46,36)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.5285%" y="597" width="0.0781%" height="15" fill="rgb(244,3,49)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.5285%" y="581" width="0.0781%" height="15" fill="rgb(206,78,54)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5285%" y="565" width="0.0781%" height="15" fill="rgb(208,85,42)" fg:x="1070" fg:w="1"/><text x="83.7785%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.6066%" y="725" width="0.0781%" height="15" fill="rgb(219,196,21)" fg:x="1071" fg:w="1"/><text x="83.8566%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.6066%" y="709" width="0.0781%" height="15" fill="rgb(238,19,9)" fg:x="1071" fg:w="1"/><text x="83.8566%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.6066%" y="693" width="0.0781%" height="15" fill="rgb(206,86,13)" fg:x="1071" fg:w="1"/><text x="83.8566%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.6066%" y="677" width="0.0781%" height="15" fill="rgb(214,123,40)" fg:x="1071" fg:w="1"/><text x="83.8566%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.6066%" y="661" width="0.0781%" height="15" fill="rgb(243,53,5)" fg:x="1071" fg:w="1"/><text x="83.8566%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.6066%" y="645" width="0.0781%" height="15" fill="rgb(254,186,31)" fg:x="1071" fg:w="1"/><text x="83.8566%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.6066%" y="629" width="0.0781%" height="15" fill="rgb(221,216,25)" fg:x="1071" fg:w="1"/><text x="83.8566%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.6846%" y="677" width="0.0781%" height="15" fill="rgb(248,107,42)" fg:x="1072" fg:w="1"/><text x="83.9346%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.6846%" y="661" width="0.0781%" height="15" fill="rgb(221,85,43)" fg:x="1072" fg:w="1"/><text x="83.9346%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.6846%" y="645" width="0.0781%" height="15" fill="rgb(225,34,24)" fg:x="1072" fg:w="1"/><text x="83.9346%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.6846%" y="629" width="0.0781%" height="15" fill="rgb(211,119,1)" fg:x="1072" fg:w="1"/><text x="83.9346%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.6846%" y="613" width="0.0781%" height="15" fill="rgb(254,216,46)" fg:x="1072" fg:w="1"/><text x="83.9346%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6846%" y="597" width="0.0781%" height="15" fill="rgb(238,11,38)" fg:x="1072" fg:w="1"/><text x="83.9346%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.23%)</title><rect x="83.6066%" y="757" width="0.2342%" height="15" fill="rgb(233,50,15)" fg:x="1071" fg:w="3"/><text x="83.8566%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.23%)</title><rect x="83.6066%" y="741" width="0.2342%" height="15" fill="rgb(217,181,29)" fg:x="1071" fg:w="3"/><text x="83.8566%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="83.6846%" y="725" width="0.1561%" height="15" fill="rgb(214,56,3)" fg:x="1072" fg:w="2"/><text x="83.9346%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.6846%" y="709" width="0.1561%" height="15" fill="rgb(230,69,45)" fg:x="1072" fg:w="2"/><text x="83.9346%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.6846%" y="693" width="0.1561%" height="15" fill="rgb(224,201,50)" fg:x="1072" fg:w="2"/><text x="83.9346%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.7627%" y="677" width="0.0781%" height="15" fill="rgb(217,228,18)" fg:x="1073" fg:w="1"/><text x="84.0127%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.7627%" y="661" width="0.0781%" height="15" fill="rgb(239,33,44)" fg:x="1073" fg:w="1"/><text x="84.0127%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.7627%" y="645" width="0.0781%" height="15" fill="rgb(248,210,23)" fg:x="1073" fg:w="1"/><text x="84.0127%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.7627%" y="629" width="0.0781%" height="15" fill="rgb(253,135,8)" fg:x="1073" fg:w="1"/><text x="84.0127%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.7627%" y="613" width="0.0781%" height="15" fill="rgb(217,98,21)" fg:x="1073" fg:w="1"/><text x="84.0127%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.7627%" y="597" width="0.0781%" height="15" fill="rgb(253,130,21)" fg:x="1073" fg:w="1"/><text x="84.0127%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.8407%" y="757" width="0.0781%" height="15" fill="rgb(207,81,54)" fg:x="1074" fg:w="1"/><text x="84.0907%" y="767.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="83.8407%" y="741" width="0.0781%" height="15" fill="rgb(232,48,33)" fg:x="1074" fg:w="1"/><text x="84.0907%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="83.8407%" y="725" width="0.0781%" height="15" fill="rgb(211,9,35)" fg:x="1074" fg:w="1"/><text x="84.0907%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="83.9188%" y="741" width="0.1561%" height="15" fill="rgb(205,152,21)" fg:x="1075" fg:w="2"/><text x="84.1688%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1530%" y="661" width="0.0781%" height="15" fill="rgb(249,21,27)" fg:x="1078" fg:w="1"/><text x="84.4030%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1530%" y="645" width="0.0781%" height="15" fill="rgb(252,29,24)" fg:x="1078" fg:w="1"/><text x="84.4030%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.2311%" y="661" width="0.0781%" height="15" fill="rgb(230,130,50)" fg:x="1079" fg:w="1"/><text x="84.4811%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="84.1530%" y="709" width="0.3123%" height="15" fill="rgb(239,144,14)" fg:x="1078" fg:w="4"/><text x="84.4030%" y="719.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="84.1530%" y="693" width="0.3123%" height="15" fill="rgb(227,111,50)" fg:x="1078" fg:w="4"/><text x="84.4030%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="84.1530%" y="677" width="0.3123%" height="15" fill="rgb(254,84,20)" fg:x="1078" fg:w="4"/><text x="84.4030%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.3091%" y="661" width="0.1561%" height="15" fill="rgb(232,90,48)" fg:x="1080" fg:w="2"/><text x="84.5591%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.3091%" y="645" width="0.1561%" height="15" fill="rgb(253,63,47)" fg:x="1080" fg:w="2"/><text x="84.5591%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.3091%" y="629" width="0.1561%" height="15" fill="rgb(251,146,35)" fg:x="1080" fg:w="2"/><text x="84.5591%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.3091%" y="613" width="0.1561%" height="15" fill="rgb(229,192,35)" fg:x="1080" fg:w="2"/><text x="84.5591%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="84.3091%" y="597" width="0.1561%" height="15" fill="rgb(225,68,9)" fg:x="1080" fg:w="2"/><text x="84.5591%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.3091%" y="581" width="0.1561%" height="15" fill="rgb(214,97,34)" fg:x="1080" fg:w="2"/><text x="84.5591%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.3091%" y="565" width="0.1561%" height="15" fill="rgb(253,31,26)" fg:x="1080" fg:w="2"/><text x="84.5591%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.3091%" y="549" width="0.1561%" height="15" fill="rgb(225,151,47)" fg:x="1080" fg:w="2"/><text x="84.5591%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.4653%" y="661" width="0.1561%" height="15" fill="rgb(206,185,9)" fg:x="1082" fg:w="2"/><text x="84.7153%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.4653%" y="645" width="0.1561%" height="15" fill="rgb(249,65,17)" fg:x="1082" fg:w="2"/><text x="84.7153%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.4653%" y="629" width="0.1561%" height="15" fill="rgb(220,110,10)" fg:x="1082" fg:w="2"/><text x="84.7153%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5433%" y="613" width="0.0781%" height="15" fill="rgb(222,198,49)" fg:x="1083" fg:w="1"/><text x="84.7933%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5433%" y="597" width="0.0781%" height="15" fill="rgb(239,81,13)" fg:x="1083" fg:w="1"/><text x="84.7933%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.6214%" y="661" width="0.0781%" height="15" fill="rgb(216,128,11)" fg:x="1084" fg:w="1"/><text x="84.8714%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.6214%" y="645" width="0.0781%" height="15" fill="rgb(247,156,8)" fg:x="1084" fg:w="1"/><text x="84.8714%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.6214%" y="629" width="0.0781%" height="15" fill="rgb(219,173,1)" fg:x="1084" fg:w="1"/><text x="84.8714%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.6214%" y="613" width="0.0781%" height="15" fill="rgb(227,42,24)" fg:x="1084" fg:w="1"/><text x="84.8714%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.6214%" y="597" width="0.0781%" height="15" fill="rgb(253,219,50)" fg:x="1084" fg:w="1"/><text x="84.8714%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6214%" y="581" width="0.0781%" height="15" fill="rgb(215,191,54)" fg:x="1084" fg:w="1"/><text x="84.8714%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.86%)</title><rect x="83.9188%" y="757" width="0.8587%" height="15" fill="rgb(238,83,12)" fg:x="1075" fg:w="11"/><text x="84.1688%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.70%)</title><rect x="84.0749%" y="741" width="0.7026%" height="15" fill="rgb(205,124,9)" fg:x="1077" fg:w="9"/><text x="84.3249%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.70%)</title><rect x="84.0749%" y="725" width="0.7026%" height="15" fill="rgb(253,174,7)" fg:x="1077" fg:w="9"/><text x="84.3249%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="84.4653%" y="709" width="0.3123%" height="15" fill="rgb(206,134,49)" fg:x="1082" fg:w="4"/><text x="84.7153%" y="719.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="84.4653%" y="693" width="0.3123%" height="15" fill="rgb(221,89,20)" fg:x="1082" fg:w="4"/><text x="84.7153%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="84.4653%" y="677" width="0.3123%" height="15" fill="rgb(240,205,13)" fg:x="1082" fg:w="4"/><text x="84.7153%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6995%" y="661" width="0.0781%" height="15" fill="rgb(237,174,32)" fg:x="1085" fg:w="1"/><text x="84.9495%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6995%" y="645" width="0.0781%" height="15" fill="rgb(226,12,15)" fg:x="1085" fg:w="1"/><text x="84.9495%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6995%" y="629" width="0.0781%" height="15" fill="rgb(245,160,52)" fg:x="1085" fg:w="1"/><text x="84.9495%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6995%" y="613" width="0.0781%" height="15" fill="rgb(253,80,21)" fg:x="1085" fg:w="1"/><text x="84.9495%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.6995%" y="597" width="0.0781%" height="15" fill="rgb(231,225,22)" fg:x="1085" fg:w="1"/><text x="84.9495%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6995%" y="581" width="0.0781%" height="15" fill="rgb(253,185,12)" fg:x="1085" fg:w="1"/><text x="84.9495%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6995%" y="565" width="0.0781%" height="15" fill="rgb(234,197,21)" fg:x="1085" fg:w="1"/><text x="84.9495%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6995%" y="549" width="0.0781%" height="15" fill="rgb(210,47,30)" fg:x="1085" fg:w="1"/><text x="84.9495%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.7775%" y="725" width="0.1561%" height="15" fill="rgb(246,139,27)" fg:x="1086" fg:w="2"/><text x="85.0275%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.8556%" y="709" width="0.0781%" height="15" fill="rgb(226,130,16)" fg:x="1087" fg:w="1"/><text x="85.1056%" y="719.50"></text></g><g><title>plugins_core::build::Build::holding (27 samples, 2.11%)</title><rect x="82.9040%" y="789" width="2.1077%" height="15" fill="rgb(237,208,20)" fg:x="1062" fg:w="27"/><text x="83.1540%" y="799.50">p..</text></g><g><title>plugins_core::tools::set_container (18 samples, 1.41%)</title><rect x="83.6066%" y="773" width="1.4052%" height="15" fill="rgb(245,186,28)" fg:x="1071" fg:w="18"/><text x="83.8566%" y="783.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.23%)</title><rect x="84.7775%" y="757" width="0.2342%" height="15" fill="rgb(238,105,39)" fg:x="1086" fg:w="3"/><text x="85.0275%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.23%)</title><rect x="84.7775%" y="741" width="0.2342%" height="15" fill="rgb(253,228,11)" fg:x="1086" fg:w="3"/><text x="85.0275%" y="751.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9336%" y="725" width="0.0781%" height="15" fill="rgb(224,136,38)" fg:x="1088" fg:w="1"/><text x="85.1836%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.9336%" y="709" width="0.0781%" height="15" fill="rgb(211,3,25)" fg:x="1088" fg:w="1"/><text x="85.1836%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9336%" y="693" width="0.0781%" height="15" fill="rgb(238,66,34)" fg:x="1088" fg:w="1"/><text x="85.1836%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.9336%" y="677" width="0.0781%" height="15" fill="rgb(223,188,11)" fg:x="1088" fg:w="1"/><text x="85.1836%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9336%" y="661" width="0.0781%" height="15" fill="rgb(221,10,35)" fg:x="1088" fg:w="1"/><text x="85.1836%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9336%" y="645" width="0.0781%" height="15" fill="rgb(223,18,44)" fg:x="1088" fg:w="1"/><text x="85.1836%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.9336%" y="629" width="0.0781%" height="15" fill="rgb(220,97,41)" fg:x="1088" fg:w="1"/><text x="85.1836%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="85.0117%" y="789" width="0.0781%" height="15" fill="rgb(206,95,45)" fg:x="1089" fg:w="1"/><text x="85.2617%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="85.0117%" y="773" width="0.0781%" height="15" fill="rgb(209,96,13)" fg:x="1089" fg:w="1"/><text x="85.2617%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.0117%" y="757" width="0.0781%" height="15" fill="rgb(237,39,34)" fg:x="1089" fg:w="1"/><text x="85.2617%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.0117%" y="741" width="0.0781%" height="15" fill="rgb(213,49,47)" fg:x="1089" fg:w="1"/><text x="85.2617%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="85.0898%" y="757" width="0.0781%" height="15" fill="rgb(205,107,27)" fg:x="1090" fg:w="1"/><text x="85.3398%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="85.0898%" y="741" width="0.0781%" height="15" fill="rgb(212,142,9)" fg:x="1090" fg:w="1"/><text x="85.3398%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.0898%" y="725" width="0.0781%" height="15" fill="rgb(226,182,0)" fg:x="1090" fg:w="1"/><text x="85.3398%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.0898%" y="709" width="0.0781%" height="15" fill="rgb(231,3,53)" fg:x="1090" fg:w="1"/><text x="85.3398%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.0898%" y="693" width="0.0781%" height="15" fill="rgb(246,111,28)" fg:x="1090" fg:w="1"/><text x="85.3398%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.0898%" y="677" width="0.0781%" height="15" fill="rgb(254,183,7)" fg:x="1090" fg:w="1"/><text x="85.3398%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="85.0898%" y="661" width="0.0781%" height="15" fill="rgb(247,177,28)" fg:x="1090" fg:w="1"/><text x="85.3398%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="85.0898%" y="645" width="0.0781%" height="15" fill="rgb(244,43,1)" fg:x="1090" fg:w="1"/><text x="85.3398%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.1678%" y="709" width="0.0781%" height="15" fill="rgb(207,2,35)" fg:x="1091" fg:w="1"/><text x="85.4178%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.1678%" y="693" width="0.0781%" height="15" fill="rgb(213,83,22)" fg:x="1091" fg:w="1"/><text x="85.4178%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1678%" y="677" width="0.0781%" height="15" fill="rgb(246,212,13)" fg:x="1091" fg:w="1"/><text x="85.4178%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1678%" y="661" width="0.0781%" height="15" fill="rgb(213,127,46)" fg:x="1091" fg:w="1"/><text x="85.4178%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1678%" y="645" width="0.0781%" height="15" fill="rgb(219,215,39)" fg:x="1091" fg:w="1"/><text x="85.4178%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1678%" y="629" width="0.0781%" height="15" fill="rgb(227,99,17)" fg:x="1091" fg:w="1"/><text x="85.4178%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.1678%" y="613" width="0.0781%" height="15" fill="rgb(208,155,18)" fg:x="1091" fg:w="1"/><text x="85.4178%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1678%" y="597" width="0.0781%" height="15" fill="rgb(223,204,38)" fg:x="1091" fg:w="1"/><text x="85.4178%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2459%" y="677" width="0.0781%" height="15" fill="rgb(212,114,21)" fg:x="1092" fg:w="1"/><text x="85.4959%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2459%" y="661" width="0.0781%" height="15" fill="rgb(250,74,13)" fg:x="1092" fg:w="1"/><text x="85.4959%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2459%" y="645" width="0.0781%" height="15" fill="rgb(234,7,1)" fg:x="1092" fg:w="1"/><text x="85.4959%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2459%" y="629" width="0.0781%" height="15" fill="rgb(207,138,31)" fg:x="1092" fg:w="1"/><text x="85.4959%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2459%" y="613" width="0.0781%" height="15" fill="rgb(215,186,42)" fg:x="1092" fg:w="1"/><text x="85.4959%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2459%" y="597" width="0.0781%" height="15" fill="rgb(229,205,49)" fg:x="1092" fg:w="1"/><text x="85.4959%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.3240%" y="581" width="0.0781%" height="15" fill="rgb(216,156,32)" fg:x="1093" fg:w="1"/><text x="85.5740%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3240%" y="565" width="0.0781%" height="15" fill="rgb(238,7,21)" fg:x="1093" fg:w="1"/><text x="85.5740%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.39%)</title><rect x="85.0898%" y="773" width="0.3903%" height="15" fill="rgb(249,190,22)" fg:x="1090" fg:w="5"/><text x="85.3398%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="85.1678%" y="757" width="0.3123%" height="15" fill="rgb(253,51,31)" fg:x="1091" fg:w="4"/><text x="85.4178%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.31%)</title><rect x="85.1678%" y="741" width="0.3123%" height="15" fill="rgb(237,90,54)" fg:x="1091" fg:w="4"/><text x="85.4178%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.31%)</title><rect x="85.1678%" y="725" width="0.3123%" height="15" fill="rgb(250,214,33)" fg:x="1091" fg:w="4"/><text x="85.4178%" y="735.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.23%)</title><rect x="85.2459%" y="709" width="0.2342%" height="15" fill="rgb(237,10,49)" fg:x="1092" fg:w="3"/><text x="85.4959%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.23%)</title><rect x="85.2459%" y="693" width="0.2342%" height="15" fill="rgb(241,56,36)" fg:x="1092" fg:w="3"/><text x="85.4959%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="85.3240%" y="677" width="0.1561%" height="15" fill="rgb(227,164,12)" fg:x="1093" fg:w="2"/><text x="85.5740%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.3240%" y="661" width="0.1561%" height="15" fill="rgb(249,149,35)" fg:x="1093" fg:w="2"/><text x="85.5740%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="85.3240%" y="645" width="0.1561%" height="15" fill="rgb(238,227,50)" fg:x="1093" fg:w="2"/><text x="85.5740%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.3240%" y="629" width="0.1561%" height="15" fill="rgb(235,102,45)" fg:x="1093" fg:w="2"/><text x="85.5740%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="85.3240%" y="613" width="0.1561%" height="15" fill="rgb(211,10,38)" fg:x="1093" fg:w="2"/><text x="85.5740%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="85.3240%" y="597" width="0.1561%" height="15" fill="rgb(219,77,48)" fg:x="1093" fg:w="2"/><text x="85.5740%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="85.4020%" y="581" width="0.0781%" height="15" fill="rgb(246,6,15)" fg:x="1094" fg:w="1"/><text x="85.6520%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.4801%" y="597" width="0.0781%" height="15" fill="rgb(207,220,2)" fg:x="1095" fg:w="1"/><text x="85.7301%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.4801%" y="677" width="0.1561%" height="15" fill="rgb(242,48,14)" fg:x="1095" fg:w="2"/><text x="85.7301%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="85.4801%" y="661" width="0.1561%" height="15" fill="rgb(218,19,27)" fg:x="1095" fg:w="2"/><text x="85.7301%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.4801%" y="645" width="0.1561%" height="15" fill="rgb(228,0,35)" fg:x="1095" fg:w="2"/><text x="85.7301%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.4801%" y="629" width="0.1561%" height="15" fill="rgb(244,142,54)" fg:x="1095" fg:w="2"/><text x="85.7301%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.4801%" y="613" width="0.1561%" height="15" fill="rgb(243,217,40)" fg:x="1095" fg:w="2"/><text x="85.7301%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5582%" y="597" width="0.0781%" height="15" fill="rgb(207,114,16)" fg:x="1096" fg:w="1"/><text x="85.8082%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="85.6362%" y="581" width="0.0781%" height="15" fill="rgb(224,33,25)" fg:x="1097" fg:w="1"/><text x="85.8862%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="85.4801%" y="725" width="0.3123%" height="15" fill="rgb(230,93,54)" fg:x="1095" fg:w="4"/><text x="85.7301%" y="735.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="85.4801%" y="709" width="0.3123%" height="15" fill="rgb(224,56,24)" fg:x="1095" fg:w="4"/><text x="85.7301%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="85.4801%" y="693" width="0.3123%" height="15" fill="rgb(235,189,50)" fg:x="1095" fg:w="4"/><text x="85.7301%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.6362%" y="677" width="0.1561%" height="15" fill="rgb(242,173,8)" fg:x="1097" fg:w="2"/><text x="85.8862%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.6362%" y="661" width="0.1561%" height="15" fill="rgb(209,206,10)" fg:x="1097" fg:w="2"/><text x="85.8862%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.6362%" y="645" width="0.1561%" height="15" fill="rgb(213,182,44)" fg:x="1097" fg:w="2"/><text x="85.8862%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.6362%" y="629" width="0.1561%" height="15" fill="rgb(243,51,15)" fg:x="1097" fg:w="2"/><text x="85.8862%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="85.6362%" y="613" width="0.1561%" height="15" fill="rgb(241,13,14)" fg:x="1097" fg:w="2"/><text x="85.8862%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.6362%" y="597" width="0.1561%" height="15" fill="rgb(239,147,24)" fg:x="1097" fg:w="2"/><text x="85.8862%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7143%" y="581" width="0.0781%" height="15" fill="rgb(223,129,16)" fg:x="1098" fg:w="1"/><text x="85.9643%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7143%" y="565" width="0.0781%" height="15" fill="rgb(209,169,13)" fg:x="1098" fg:w="1"/><text x="85.9643%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7143%" y="549" width="0.0781%" height="15" fill="rgb(235,159,41)" fg:x="1098" fg:w="1"/><text x="85.9643%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7143%" y="533" width="0.0781%" height="15" fill="rgb(223,219,48)" fg:x="1098" fg:w="1"/><text x="85.9643%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.7143%" y="517" width="0.0781%" height="15" fill="rgb(236,80,13)" fg:x="1098" fg:w="1"/><text x="85.9643%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.7143%" y="501" width="0.0781%" height="15" fill="rgb(213,5,6)" fg:x="1098" fg:w="1"/><text x="85.9643%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.39%)</title><rect x="85.4801%" y="757" width="0.3903%" height="15" fill="rgb(205,59,21)" fg:x="1095" fg:w="5"/><text x="85.7301%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.39%)</title><rect x="85.4801%" y="741" width="0.3903%" height="15" fill="rgb(247,137,35)" fg:x="1095" fg:w="5"/><text x="85.7301%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.7923%" y="725" width="0.0781%" height="15" fill="rgb(242,208,28)" fg:x="1099" fg:w="1"/><text x="86.0423%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.7923%" y="709" width="0.0781%" height="15" fill="rgb(245,62,25)" fg:x="1099" fg:w="1"/><text x="86.0423%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.7923%" y="693" width="0.0781%" height="15" fill="rgb(233,99,54)" fg:x="1099" fg:w="1"/><text x="86.0423%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7923%" y="677" width="0.0781%" height="15" fill="rgb(213,10,37)" fg:x="1099" fg:w="1"/><text x="86.0423%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7923%" y="661" width="0.0781%" height="15" fill="rgb(235,143,30)" fg:x="1099" fg:w="1"/><text x="86.0423%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7923%" y="645" width="0.0781%" height="15" fill="rgb(250,146,33)" fg:x="1099" fg:w="1"/><text x="86.0423%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7923%" y="629" width="0.0781%" height="15" fill="rgb(226,198,42)" fg:x="1099" fg:w="1"/><text x="86.0423%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.7923%" y="613" width="0.0781%" height="15" fill="rgb(222,55,6)" fg:x="1099" fg:w="1"/><text x="86.0423%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7923%" y="597" width="0.0781%" height="15" fill="rgb(213,224,31)" fg:x="1099" fg:w="1"/><text x="86.0423%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7923%" y="581" width="0.0781%" height="15" fill="rgb(226,103,35)" fg:x="1099" fg:w="1"/><text x="86.0423%" y="591.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="85.8704%" y="661" width="0.0781%" height="15" fill="rgb(205,66,45)" fg:x="1100" fg:w="1"/><text x="86.1204%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.8704%" y="709" width="0.1561%" height="15" fill="rgb(226,51,42)" fg:x="1100" fg:w="2"/><text x="86.1204%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.8704%" y="693" width="0.1561%" height="15" fill="rgb(206,69,1)" fg:x="1100" fg:w="2"/><text x="86.1204%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.8704%" y="677" width="0.1561%" height="15" fill="rgb(213,228,47)" fg:x="1100" fg:w="2"/><text x="86.1204%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.9485%" y="661" width="0.0781%" height="15" fill="rgb(224,204,18)" fg:x="1101" fg:w="1"/><text x="86.1985%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9485%" y="645" width="0.0781%" height="15" fill="rgb(253,187,47)" fg:x="1101" fg:w="1"/><text x="86.1985%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.9485%" y="629" width="0.0781%" height="15" fill="rgb(232,61,2)" fg:x="1101" fg:w="1"/><text x="86.1985%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9485%" y="613" width="0.0781%" height="15" fill="rgb(213,132,35)" fg:x="1101" fg:w="1"/><text x="86.1985%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.9485%" y="597" width="0.0781%" height="15" fill="rgb(247,33,21)" fg:x="1101" fg:w="1"/><text x="86.1985%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9485%" y="581" width="0.0781%" height="15" fill="rgb(233,71,46)" fg:x="1101" fg:w="1"/><text x="86.1985%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.9485%" y="565" width="0.0781%" height="15" fill="rgb(222,173,43)" fg:x="1101" fg:w="1"/><text x="86.1985%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9485%" y="549" width="0.0781%" height="15" fill="rgb(249,218,47)" fg:x="1101" fg:w="1"/><text x="86.1985%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.9485%" y="533" width="0.0781%" height="15" fill="rgb(254,185,48)" fg:x="1101" fg:w="1"/><text x="86.1985%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (101 samples, 7.88%)</title><rect x="78.2201%" y="805" width="7.8845%" height="15" fill="rgb(252,165,50)" fg:x="1002" fg:w="101"/><text x="78.4701%" y="815.50">plugins_cor..</text></g><g><title>plugins_core::build::Build::occupying (13 samples, 1.01%)</title><rect x="85.0898%" y="789" width="1.0148%" height="15" fill="rgb(206,219,6)" fg:x="1090" fg:w="13"/><text x="85.3398%" y="799.50"></text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.62%)</title><rect x="85.4801%" y="773" width="0.6245%" height="15" fill="rgb(212,212,45)" fg:x="1095" fg:w="8"/><text x="85.7301%" y="783.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.23%)</title><rect x="85.8704%" y="757" width="0.2342%" height="15" fill="rgb(221,31,9)" fg:x="1100" fg:w="3"/><text x="86.1204%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.23%)</title><rect x="85.8704%" y="741" width="0.2342%" height="15" fill="rgb(234,198,39)" fg:x="1100" fg:w="3"/><text x="86.1204%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.23%)</title><rect x="85.8704%" y="725" width="0.2342%" height="15" fill="rgb(252,145,46)" fg:x="1100" fg:w="3"/><text x="86.1204%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.0265%" y="709" width="0.0781%" height="15" fill="rgb(237,149,0)" fg:x="1102" fg:w="1"/><text x="86.2765%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="86.0265%" y="693" width="0.0781%" height="15" fill="rgb(229,65,5)" fg:x="1102" fg:w="1"/><text x="86.2765%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.0265%" y="677" width="0.0781%" height="15" fill="rgb(235,60,36)" fg:x="1102" fg:w="1"/><text x="86.2765%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="86.1046%" y="805" width="0.0781%" height="15" fill="rgb(222,47,18)" fg:x="1103" fg:w="1"/><text x="86.3546%" y="815.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="86.1046%" y="789" width="0.0781%" height="15" fill="rgb(235,114,22)" fg:x="1103" fg:w="1"/><text x="86.3546%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="86.1046%" y="773" width="0.0781%" height="15" fill="rgb(209,167,11)" fg:x="1103" fg:w="1"/><text x="86.3546%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.1046%" y="757" width="0.0781%" height="15" fill="rgb(251,73,18)" fg:x="1103" fg:w="1"/><text x="86.3546%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.1046%" y="741" width="0.0781%" height="15" fill="rgb(217,60,17)" fg:x="1103" fg:w="1"/><text x="86.3546%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.2607%" y="725" width="0.0781%" height="15" fill="rgb(224,36,37)" fg:x="1105" fg:w="1"/><text x="86.5107%" y="735.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="86.2607%" y="757" width="0.1561%" height="15" fill="rgb(211,21,32)" fg:x="1105" fg:w="2"/><text x="86.5107%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.2607%" y="741" width="0.1561%" height="15" fill="rgb(231,55,48)" fg:x="1105" fg:w="2"/><text x="86.5107%" y="751.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3388%" y="725" width="0.0781%" height="15" fill="rgb(227,42,18)" fg:x="1106" fg:w="1"/><text x="86.5888%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.3388%" y="709" width="0.0781%" height="15" fill="rgb(217,2,27)" fg:x="1106" fg:w="1"/><text x="86.5888%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.3388%" y="693" width="0.0781%" height="15" fill="rgb(251,138,23)" fg:x="1106" fg:w="1"/><text x="86.5888%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (4 samples, 0.31%)</title><rect x="86.1827%" y="805" width="0.3123%" height="15" fill="rgb(226,184,11)" fg:x="1104" fg:w="4"/><text x="86.4327%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.31%)</title><rect x="86.1827%" y="789" width="0.3123%" height="15" fill="rgb(242,142,12)" fg:x="1104" fg:w="4"/><text x="86.4327%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.31%)</title><rect x="86.1827%" y="773" width="0.3123%" height="15" fill="rgb(234,187,18)" fg:x="1104" fg:w="4"/><text x="86.4327%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="86.4169%" y="757" width="0.0781%" height="15" fill="rgb(237,44,42)" fg:x="1107" fg:w="1"/><text x="86.6669%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="86.4169%" y="741" width="0.0781%" height="15" fill="rgb(211,90,23)" fg:x="1107" fg:w="1"/><text x="86.6669%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.4169%" y="725" width="0.0781%" height="15" fill="rgb(207,81,18)" fg:x="1107" fg:w="1"/><text x="86.6669%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.4169%" y="709" width="0.0781%" height="15" fill="rgb(222,107,28)" fg:x="1107" fg:w="1"/><text x="86.6669%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="86.4169%" y="693" width="0.0781%" height="15" fill="rgb(237,83,52)" fg:x="1107" fg:w="1"/><text x="86.6669%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4169%" y="677" width="0.0781%" height="15" fill="rgb(208,67,11)" fg:x="1107" fg:w="1"/><text x="86.6669%" y="687.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="86.4949%" y="757" width="0.0781%" height="15" fill="rgb(249,157,49)" fg:x="1108" fg:w="1"/><text x="86.7449%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.4949%" y="741" width="0.0781%" height="15" fill="rgb(243,200,1)" fg:x="1108" fg:w="1"/><text x="86.7449%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.5730%" y="725" width="0.0781%" height="15" fill="rgb(225,162,37)" fg:x="1109" fg:w="1"/><text x="86.8230%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.6511%" y="629" width="0.0781%" height="15" fill="rgb(242,92,13)" fg:x="1110" fg:w="1"/><text x="86.9011%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.6511%" y="613" width="0.0781%" height="15" fill="rgb(220,43,36)" fg:x="1110" fg:w="1"/><text x="86.9011%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="86.4949%" y="773" width="0.3123%" height="15" fill="rgb(213,165,48)" fg:x="1108" fg:w="4"/><text x="86.7449%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="86.5730%" y="757" width="0.2342%" height="15" fill="rgb(227,200,9)" fg:x="1109" fg:w="3"/><text x="86.8230%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="86.5730%" y="741" width="0.2342%" height="15" fill="rgb(221,222,28)" fg:x="1109" fg:w="3"/><text x="86.8230%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.6511%" y="725" width="0.1561%" height="15" fill="rgb(223,142,26)" fg:x="1110" fg:w="2"/><text x="86.9011%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.6511%" y="709" width="0.1561%" height="15" fill="rgb(243,46,9)" fg:x="1110" fg:w="2"/><text x="86.9011%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.6511%" y="693" width="0.1561%" height="15" fill="rgb(250,56,11)" fg:x="1110" fg:w="2"/><text x="86.9011%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.6511%" y="677" width="0.1561%" height="15" fill="rgb(229,113,5)" fg:x="1110" fg:w="2"/><text x="86.9011%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="86.6511%" y="661" width="0.1561%" height="15" fill="rgb(244,108,28)" fg:x="1110" fg:w="2"/><text x="86.9011%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.6511%" y="645" width="0.1561%" height="15" fill="rgb(242,119,50)" fg:x="1110" fg:w="2"/><text x="86.9011%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.7291%" y="629" width="0.0781%" height="15" fill="rgb(224,164,23)" fg:x="1111" fg:w="1"/><text x="86.9791%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7291%" y="613" width="0.0781%" height="15" fill="rgb(214,227,44)" fg:x="1111" fg:w="1"/><text x="86.9791%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.7291%" y="597" width="0.0781%" height="15" fill="rgb(238,202,4)" fg:x="1111" fg:w="1"/><text x="86.9791%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7291%" y="581" width="0.0781%" height="15" fill="rgb(213,190,30)" fg:x="1111" fg:w="1"/><text x="86.9791%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.39%)</title><rect x="86.4949%" y="789" width="0.3903%" height="15" fill="rgb(239,15,2)" fg:x="1108" fg:w="5"/><text x="86.7449%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="86.8072%" y="773" width="0.0781%" height="15" fill="rgb(249,229,4)" fg:x="1112" fg:w="1"/><text x="87.0572%" y="783.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="86.8072%" y="757" width="0.0781%" height="15" fill="rgb(239,75,44)" fg:x="1112" fg:w="1"/><text x="87.0572%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.8072%" y="741" width="0.0781%" height="15" fill="rgb(251,206,23)" fg:x="1112" fg:w="1"/><text x="87.0572%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.8072%" y="725" width="0.0781%" height="15" fill="rgb(215,208,0)" fg:x="1112" fg:w="1"/><text x="87.0572%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.8072%" y="709" width="0.0781%" height="15" fill="rgb(230,75,50)" fg:x="1112" fg:w="1"/><text x="87.0572%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.8072%" y="693" width="0.0781%" height="15" fill="rgb(246,180,39)" fg:x="1112" fg:w="1"/><text x="87.0572%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.8072%" y="677" width="0.0781%" height="15" fill="rgb(249,175,24)" fg:x="1112" fg:w="1"/><text x="87.0572%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.8072%" y="661" width="0.0781%" height="15" fill="rgb(247,176,22)" fg:x="1112" fg:w="1"/><text x="87.0572%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="86.8852%" y="789" width="0.0781%" height="15" fill="rgb(241,100,24)" fg:x="1113" fg:w="1"/><text x="87.1352%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="86.8852%" y="773" width="0.0781%" height="15" fill="rgb(233,4,35)" fg:x="1113" fg:w="1"/><text x="87.1352%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.8852%" y="757" width="0.0781%" height="15" fill="rgb(211,164,46)" fg:x="1113" fg:w="1"/><text x="87.1352%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.8852%" y="741" width="0.0781%" height="15" fill="rgb(242,99,53)" fg:x="1113" fg:w="1"/><text x="87.1352%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.8852%" y="725" width="0.0781%" height="15" fill="rgb(243,45,33)" fg:x="1113" fg:w="1"/><text x="87.1352%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.8852%" y="709" width="0.0781%" height="15" fill="rgb(217,55,21)" fg:x="1113" fg:w="1"/><text x="87.1352%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.8852%" y="693" width="0.0781%" height="15" fill="rgb(245,145,46)" fg:x="1113" fg:w="1"/><text x="87.1352%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.8852%" y="677" width="0.0781%" height="15" fill="rgb(215,112,45)" fg:x="1113" fg:w="1"/><text x="87.1352%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.8852%" y="661" width="0.0781%" height="15" fill="rgb(228,104,16)" fg:x="1113" fg:w="1"/><text x="87.1352%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="86.9633%" y="757" width="0.0781%" height="15" fill="rgb(239,186,38)" fg:x="1114" fg:w="1"/><text x="87.2133%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="86.9633%" y="741" width="0.0781%" height="15" fill="rgb(228,38,35)" fg:x="1114" fg:w="1"/><text x="87.2133%" y="751.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (180 samples, 14.05%)</title><rect x="73.0679%" y="821" width="14.0515%" height="15" fill="rgb(251,42,40)" fg:x="936" fg:w="180"/><text x="73.3179%" y="831.50">&lt;tests::HoldingKeyInV..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (8 samples, 0.62%)</title><rect x="86.4949%" y="805" width="0.6245%" height="15" fill="rgb(210,51,19)" fg:x="1108" fg:w="8"/><text x="86.7449%" y="815.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="86.9633%" y="789" width="0.1561%" height="15" fill="rgb(236,94,42)" fg:x="1114" fg:w="2"/><text x="87.2133%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="86.9633%" y="773" width="0.1561%" height="15" fill="rgb(239,167,16)" fg:x="1114" fg:w="2"/><text x="87.2133%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0414%" y="757" width="0.0781%" height="15" fill="rgb(252,175,31)" fg:x="1115" fg:w="1"/><text x="87.2914%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.1194%" y="805" width="0.0781%" height="15" fill="rgb(206,166,30)" fg:x="1116" fg:w="1"/><text x="87.3694%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (2 samples, 0.16%)</title><rect x="87.1194%" y="821" width="0.1561%" height="15" fill="rgb(206,209,37)" fg:x="1116" fg:w="2"/><text x="87.3694%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="87.1975%" y="805" width="0.0781%" height="15" fill="rgb(226,91,4)" fg:x="1117" fg:w="1"/><text x="87.4475%" y="815.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.4317%" y="693" width="0.0781%" height="15" fill="rgb(222,167,0)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.4317%" y="677" width="0.0781%" height="15" fill="rgb(211,70,14)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="687.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="87.4317%" y="661" width="0.0781%" height="15" fill="rgb(214,84,42)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.4317%" y="645" width="0.0781%" height="15" fill="rgb(235,157,37)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="655.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="87.4317%" y="629" width="0.0781%" height="15" fill="rgb(225,13,6)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="639.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="87.4317%" y="613" width="0.0781%" height="15" fill="rgb(205,202,1)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="623.50"></text></g><g><title>core::str::count::count_chars (1 samples, 0.08%)</title><rect x="87.4317%" y="597" width="0.0781%" height="15" fill="rgb(232,195,26)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="607.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.08%)</title><rect x="87.4317%" y="581" width="0.0781%" height="15" fill="rgb(208,102,26)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="87.4317%" y="565" width="0.0781%" height="15" fill="rgb(215,41,39)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="87.4317%" y="549" width="0.0781%" height="15" fill="rgb(247,139,11)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="559.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="87.4317%" y="533" width="0.0781%" height="15" fill="rgb(243,99,6)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="87.4317%" y="517" width="0.0781%" height="15" fill="rgb(230,168,48)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="87.4317%" y="501" width="0.0781%" height="15" fill="rgb(238,227,13)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.4317%" y="485" width="0.0781%" height="15" fill="rgb(209,109,13)" fg:x="1120" fg:w="1"/><text x="87.6817%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.23%)</title><rect x="87.3536%" y="805" width="0.2342%" height="15" fill="rgb(228,195,1)" fg:x="1119" fg:w="3"/><text x="87.6036%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.23%)</title><rect x="87.3536%" y="789" width="0.2342%" height="15" fill="rgb(230,218,0)" fg:x="1119" fg:w="3"/><text x="87.6036%" y="799.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="87.3536%" y="773" width="0.2342%" height="15" fill="rgb(206,1,45)" fg:x="1119" fg:w="3"/><text x="87.6036%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="87.3536%" y="757" width="0.2342%" height="15" fill="rgb(209,124,26)" fg:x="1119" fg:w="3"/><text x="87.6036%" y="767.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.23%)</title><rect x="87.3536%" y="741" width="0.2342%" height="15" fill="rgb(220,59,8)" fg:x="1119" fg:w="3"/><text x="87.6036%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.23%)</title><rect x="87.3536%" y="725" width="0.2342%" height="15" fill="rgb(251,41,37)" fg:x="1119" fg:w="3"/><text x="87.6036%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (3 samples, 0.23%)</title><rect x="87.3536%" y="709" width="0.2342%" height="15" fill="rgb(239,152,21)" fg:x="1119" fg:w="3"/><text x="87.6036%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.5098%" y="693" width="0.0781%" height="15" fill="rgb(226,32,1)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.5098%" y="677" width="0.0781%" height="15" fill="rgb(230,154,36)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="87.5098%" y="661" width="0.0781%" height="15" fill="rgb(208,228,43)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="87.5098%" y="645" width="0.0781%" height="15" fill="rgb(214,203,3)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.5098%" y="629" width="0.0781%" height="15" fill="rgb(207,149,29)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.5098%" y="613" width="0.0781%" height="15" fill="rgb(250,105,7)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="87.5098%" y="597" width="0.0781%" height="15" fill="rgb(232,222,16)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="87.5098%" y="581" width="0.0781%" height="15" fill="rgb(209,32,24)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="87.5098%" y="565" width="0.0781%" height="15" fill="rgb(225,13,6)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="87.5098%" y="549" width="0.0781%" height="15" fill="rgb(245,226,26)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.5098%" y="533" width="0.0781%" height="15" fill="rgb(229,178,27)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.5098%" y="517" width="0.0781%" height="15" fill="rgb(205,227,28)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.5098%" y="501" width="0.0781%" height="15" fill="rgb(210,191,45)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="87.5098%" y="485" width="0.0781%" height="15" fill="rgb(206,124,16)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.5098%" y="469" width="0.0781%" height="15" fill="rgb(210,162,0)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="87.5098%" y="453" width="0.0781%" height="15" fill="rgb(211,54,38)" fg:x="1121" fg:w="1"/><text x="87.7598%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="87.5878%" y="757" width="0.1561%" height="15" fill="rgb(248,192,3)" fg:x="1122" fg:w="2"/><text x="87.8378%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="87.5878%" y="741" width="0.1561%" height="15" fill="rgb(233,187,18)" fg:x="1122" fg:w="2"/><text x="87.8378%" y="751.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="87.5878%" y="725" width="0.1561%" height="15" fill="rgb(237,208,14)" fg:x="1122" fg:w="2"/><text x="87.8378%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.7440%" y="741" width="0.0781%" height="15" fill="rgb(212,77,1)" fg:x="1124" fg:w="1"/><text x="87.9940%" y="751.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="87.8220%" y="725" width="0.0781%" height="15" fill="rgb(210,163,22)" fg:x="1125" fg:w="1"/><text x="88.0720%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.8220%" y="709" width="0.0781%" height="15" fill="rgb(250,58,28)" fg:x="1125" fg:w="1"/><text x="88.0720%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.9001%" y="709" width="0.0781%" height="15" fill="rgb(254,28,41)" fg:x="1126" fg:w="1"/><text x="88.1501%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.9781%" y="709" width="0.0781%" height="15" fill="rgb(237,162,36)" fg:x="1127" fg:w="1"/><text x="88.2281%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.9781%" y="693" width="0.0781%" height="15" fill="rgb(232,56,6)" fg:x="1127" fg:w="1"/><text x="88.2281%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.9781%" y="677" width="0.0781%" height="15" fill="rgb(216,127,42)" fg:x="1127" fg:w="1"/><text x="88.2281%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="87.9781%" y="661" width="0.0781%" height="15" fill="rgb(241,69,15)" fg:x="1127" fg:w="1"/><text x="88.2281%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.0562%" y="693" width="0.0781%" height="15" fill="rgb(227,180,19)" fg:x="1128" fg:w="1"/><text x="88.3062%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.0562%" y="677" width="0.0781%" height="15" fill="rgb(231,188,29)" fg:x="1128" fg:w="1"/><text x="88.3062%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.1343%" y="693" width="0.0781%" height="15" fill="rgb(224,176,27)" fg:x="1129" fg:w="1"/><text x="88.3843%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.1343%" y="677" width="0.0781%" height="15" fill="rgb(249,214,19)" fg:x="1129" fg:w="1"/><text x="88.3843%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="88.2123%" y="661" width="0.1561%" height="15" fill="rgb(240,0,4)" fg:x="1130" fg:w="2"/><text x="88.4623%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.2123%" y="645" width="0.1561%" height="15" fill="rgb(233,28,41)" fg:x="1130" fg:w="2"/><text x="88.4623%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.2904%" y="629" width="0.0781%" height="15" fill="rgb(220,90,51)" fg:x="1131" fg:w="1"/><text x="88.5404%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.3685%" y="645" width="0.0781%" height="15" fill="rgb(250,52,22)" fg:x="1132" fg:w="1"/><text x="88.6185%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.3685%" y="629" width="0.0781%" height="15" fill="rgb(231,152,36)" fg:x="1132" fg:w="1"/><text x="88.6185%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.3685%" y="613" width="0.0781%" height="15" fill="rgb(250,218,4)" fg:x="1132" fg:w="1"/><text x="88.6185%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.3685%" y="597" width="0.0781%" height="15" fill="rgb(210,38,21)" fg:x="1132" fg:w="1"/><text x="88.6185%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="88.3685%" y="661" width="0.3123%" height="15" fill="rgb(230,75,13)" fg:x="1132" fg:w="4"/><text x="88.6185%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="88.4465%" y="645" width="0.2342%" height="15" fill="rgb(250,68,53)" fg:x="1133" fg:w="3"/><text x="88.6965%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="88.4465%" y="629" width="0.2342%" height="15" fill="rgb(250,210,16)" fg:x="1133" fg:w="3"/><text x="88.6965%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="88.4465%" y="613" width="0.2342%" height="15" fill="rgb(240,132,5)" fg:x="1133" fg:w="3"/><text x="88.6965%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="88.4465%" y="597" width="0.2342%" height="15" fill="rgb(222,148,48)" fg:x="1133" fg:w="3"/><text x="88.6965%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="88.4465%" y="581" width="0.2342%" height="15" fill="rgb(247,181,24)" fg:x="1133" fg:w="3"/><text x="88.6965%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.23%)</title><rect x="88.4465%" y="565" width="0.2342%" height="15" fill="rgb(239,5,31)" fg:x="1133" fg:w="3"/><text x="88.6965%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.23%)</title><rect x="88.4465%" y="549" width="0.2342%" height="15" fill="rgb(241,152,38)" fg:x="1133" fg:w="3"/><text x="88.6965%" y="559.50"></text></g><g><title>realloc (3 samples, 0.23%)</title><rect x="88.4465%" y="533" width="0.2342%" height="15" fill="rgb(246,200,37)" fg:x="1133" fg:w="3"/><text x="88.6965%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="88.2123%" y="677" width="0.5464%" height="15" fill="rgb(243,210,26)" fg:x="1130" fg:w="7"/><text x="88.4623%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.6807%" y="661" width="0.0781%" height="15" fill="rgb(222,22,22)" fg:x="1136" fg:w="1"/><text x="88.9307%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.6807%" y="645" width="0.0781%" height="15" fill="rgb(208,129,28)" fg:x="1136" fg:w="1"/><text x="88.9307%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.6807%" y="629" width="0.0781%" height="15" fill="rgb(254,169,28)" fg:x="1136" fg:w="1"/><text x="88.9307%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.78%)</title><rect x="88.0562%" y="709" width="0.7806%" height="15" fill="rgb(225,45,17)" fg:x="1128" fg:w="10"/><text x="88.3062%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.62%)</title><rect x="88.2123%" y="693" width="0.6245%" height="15" fill="rgb(232,199,2)" fg:x="1130" fg:w="8"/><text x="88.4623%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.7588%" y="677" width="0.0781%" height="15" fill="rgb(235,33,40)" fg:x="1137" fg:w="1"/><text x="89.0088%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.7588%" y="661" width="0.0781%" height="15" fill="rgb(237,89,50)" fg:x="1137" fg:w="1"/><text x="89.0088%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.7588%" y="645" width="0.0781%" height="15" fill="rgb(238,126,5)" fg:x="1137" fg:w="1"/><text x="89.0088%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.01%)</title><rect x="87.9001%" y="725" width="1.0148%" height="15" fill="rgb(247,214,42)" fg:x="1126" fg:w="13"/><text x="88.1501%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.8368%" y="709" width="0.0781%" height="15" fill="rgb(238,60,45)" fg:x="1138" fg:w="1"/><text x="89.0868%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.8368%" y="693" width="0.0781%" height="15" fill="rgb(225,69,44)" fg:x="1138" fg:w="1"/><text x="89.0868%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.8368%" y="677" width="0.0781%" height="15" fill="rgb(241,13,44)" fg:x="1138" fg:w="1"/><text x="89.0868%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.8368%" y="661" width="0.0781%" height="15" fill="rgb(227,121,22)" fg:x="1138" fg:w="1"/><text x="89.0868%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.17%)</title><rect x="87.8220%" y="741" width="1.1710%" height="15" fill="rgb(231,160,23)" fg:x="1125" fg:w="15"/><text x="88.0720%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.9149%" y="725" width="0.0781%" height="15" fill="rgb(250,179,43)" fg:x="1139" fg:w="1"/><text x="89.1649%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.9149%" y="709" width="0.0781%" height="15" fill="rgb(233,54,46)" fg:x="1139" fg:w="1"/><text x="89.1649%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.0710%" y="629" width="0.0781%" height="15" fill="rgb(247,120,42)" fg:x="1141" fg:w="1"/><text x="89.3210%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="88.9930%" y="741" width="0.2342%" height="15" fill="rgb(221,219,12)" fg:x="1140" fg:w="3"/><text x="89.2430%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="88.9930%" y="725" width="0.2342%" height="15" fill="rgb(211,126,8)" fg:x="1140" fg:w="3"/><text x="89.2430%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="88.9930%" y="709" width="0.2342%" height="15" fill="rgb(218,154,33)" fg:x="1140" fg:w="3"/><text x="89.2430%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="88.9930%" y="693" width="0.2342%" height="15" fill="rgb(212,199,16)" fg:x="1140" fg:w="3"/><text x="89.2430%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="88.9930%" y="677" width="0.2342%" height="15" fill="rgb(236,215,46)" fg:x="1140" fg:w="3"/><text x="89.2430%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.0710%" y="661" width="0.1561%" height="15" fill="rgb(232,32,22)" fg:x="1141" fg:w="2"/><text x="89.3210%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.0710%" y="645" width="0.1561%" height="15" fill="rgb(234,79,15)" fg:x="1141" fg:w="2"/><text x="89.3210%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.1491%" y="629" width="0.0781%" height="15" fill="rgb(235,187,47)" fg:x="1142" fg:w="1"/><text x="89.3991%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.1491%" y="613" width="0.0781%" height="15" fill="rgb(244,69,37)" fg:x="1142" fg:w="1"/><text x="89.3991%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1491%" y="597" width="0.0781%" height="15" fill="rgb(249,140,25)" fg:x="1142" fg:w="1"/><text x="89.3991%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.2272%" y="661" width="0.0781%" height="15" fill="rgb(213,69,8)" fg:x="1143" fg:w="1"/><text x="89.4772%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="89.3052%" y="629" width="0.0781%" height="15" fill="rgb(220,136,2)" fg:x="1144" fg:w="1"/><text x="89.5552%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.3052%" y="613" width="0.0781%" height="15" fill="rgb(237,50,36)" fg:x="1144" fg:w="1"/><text x="89.5552%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="89.2272%" y="709" width="0.2342%" height="15" fill="rgb(226,18,11)" fg:x="1143" fg:w="3"/><text x="89.4772%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="89.2272%" y="693" width="0.2342%" height="15" fill="rgb(243,156,2)" fg:x="1143" fg:w="3"/><text x="89.4772%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="89.2272%" y="677" width="0.2342%" height="15" fill="rgb(218,8,34)" fg:x="1143" fg:w="3"/><text x="89.4772%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.3052%" y="661" width="0.1561%" height="15" fill="rgb(250,94,35)" fg:x="1144" fg:w="2"/><text x="89.5552%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.3052%" y="645" width="0.1561%" height="15" fill="rgb(229,127,21)" fg:x="1144" fg:w="2"/><text x="89.5552%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.3833%" y="629" width="0.0781%" height="15" fill="rgb(234,49,5)" fg:x="1145" fg:w="1"/><text x="89.6333%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.3833%" y="613" width="0.0781%" height="15" fill="rgb(248,12,16)" fg:x="1145" fg:w="1"/><text x="89.6333%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3833%" y="597" width="0.0781%" height="15" fill="rgb(208,220,31)" fg:x="1145" fg:w="1"/><text x="89.6333%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.6175%" y="677" width="0.0781%" height="15" fill="rgb(243,184,0)" fg:x="1148" fg:w="1"/><text x="89.8675%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.6175%" y="661" width="0.0781%" height="15" fill="rgb(217,38,21)" fg:x="1148" fg:w="1"/><text x="89.8675%" y="671.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="89.6175%" y="645" width="0.0781%" height="15" fill="rgb(239,120,45)" fg:x="1148" fg:w="1"/><text x="89.8675%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.6175%" y="629" width="0.0781%" height="15" fill="rgb(235,33,2)" fg:x="1148" fg:w="1"/><text x="89.8675%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (7 samples, 0.55%)</title><rect x="89.2272%" y="725" width="0.5464%" height="15" fill="rgb(249,161,5)" fg:x="1143" fg:w="7"/><text x="89.4772%" y="735.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.31%)</title><rect x="89.4614%" y="709" width="0.3123%" height="15" fill="rgb(250,165,48)" fg:x="1146" fg:w="4"/><text x="89.7114%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="89.5394%" y="693" width="0.2342%" height="15" fill="rgb(221,23,45)" fg:x="1147" fg:w="3"/><text x="89.7894%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.6956%" y="677" width="0.0781%" height="15" fill="rgb(217,108,46)" fg:x="1149" fg:w="1"/><text x="89.9456%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="89.7736%" y="725" width="0.0781%" height="15" fill="rgb(254,26,35)" fg:x="1150" fg:w="1"/><text x="90.0236%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7736%" y="709" width="0.0781%" height="15" fill="rgb(218,223,28)" fg:x="1150" fg:w="1"/><text x="90.0236%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="89.9297%" y="693" width="0.1561%" height="15" fill="rgb(242,27,47)" fg:x="1152" fg:w="2"/><text x="90.1797%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.9297%" y="677" width="0.1561%" height="15" fill="rgb(218,39,35)" fg:x="1152" fg:w="2"/><text x="90.1797%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.9297%" y="661" width="0.1561%" height="15" fill="rgb(232,127,16)" fg:x="1152" fg:w="2"/><text x="90.1797%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0078%" y="645" width="0.0781%" height="15" fill="rgb(231,219,51)" fg:x="1153" fg:w="1"/><text x="90.2578%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.0078%" y="629" width="0.0781%" height="15" fill="rgb(217,220,46)" fg:x="1153" fg:w="1"/><text x="90.2578%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0859%" y="645" width="0.0781%" height="15" fill="rgb(230,75,1)" fg:x="1154" fg:w="1"/><text x="90.3359%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0859%" y="629" width="0.0781%" height="15" fill="rgb(218,2,8)" fg:x="1154" fg:w="1"/><text x="90.3359%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.0859%" y="613" width="0.0781%" height="15" fill="rgb(206,111,30)" fg:x="1154" fg:w="1"/><text x="90.3359%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.1639%" y="645" width="0.0781%" height="15" fill="rgb(209,135,6)" fg:x="1155" fg:w="1"/><text x="90.4139%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.1639%" y="629" width="0.0781%" height="15" fill="rgb(205,169,10)" fg:x="1155" fg:w="1"/><text x="90.4139%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.1639%" y="613" width="0.0781%" height="15" fill="rgb(212,204,38)" fg:x="1155" fg:w="1"/><text x="90.4139%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="90.2420%" y="581" width="0.1561%" height="15" fill="rgb(205,199,14)" fg:x="1156" fg:w="2"/><text x="90.4920%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="90.2420%" y="613" width="0.2342%" height="15" fill="rgb(212,4,6)" fg:x="1156" fg:w="3"/><text x="90.4920%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="90.2420%" y="597" width="0.2342%" height="15" fill="rgb(250,15,10)" fg:x="1156" fg:w="3"/><text x="90.4920%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.3981%" y="581" width="0.0781%" height="15" fill="rgb(212,49,51)" fg:x="1158" fg:w="1"/><text x="90.6481%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4762%" y="581" width="0.0781%" height="15" fill="rgb(235,21,9)" fg:x="1159" fg:w="1"/><text x="90.7262%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4762%" y="565" width="0.0781%" height="15" fill="rgb(251,31,32)" fg:x="1159" fg:w="1"/><text x="90.7262%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4762%" y="549" width="0.0781%" height="15" fill="rgb(246,23,9)" fg:x="1159" fg:w="1"/><text x="90.7262%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="90.7104%" y="533" width="0.0781%" height="15" fill="rgb(225,216,14)" fg:x="1162" fg:w="1"/><text x="90.9604%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="90.4762%" y="597" width="0.3903%" height="15" fill="rgb(215,200,26)" fg:x="1159" fg:w="5"/><text x="90.7262%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="90.5543%" y="581" width="0.3123%" height="15" fill="rgb(237,130,47)" fg:x="1160" fg:w="4"/><text x="90.8043%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="90.5543%" y="565" width="0.3123%" height="15" fill="rgb(247,74,14)" fg:x="1160" fg:w="4"/><text x="90.8043%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="90.6323%" y="549" width="0.2342%" height="15" fill="rgb(254,97,46)" fg:x="1161" fg:w="3"/><text x="90.8823%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.7884%" y="533" width="0.0781%" height="15" fill="rgb(234,191,1)" fg:x="1163" fg:w="1"/><text x="91.0384%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7884%" y="517" width="0.0781%" height="15" fill="rgb(215,165,14)" fg:x="1163" fg:w="1"/><text x="91.0384%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7884%" y="501" width="0.0781%" height="15" fill="rgb(230,182,6)" fg:x="1163" fg:w="1"/><text x="91.0384%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7884%" y="485" width="0.0781%" height="15" fill="rgb(210,127,39)" fg:x="1163" fg:w="1"/><text x="91.0384%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.70%)</title><rect x="90.2420%" y="629" width="0.7026%" height="15" fill="rgb(223,212,51)" fg:x="1156" fg:w="9"/><text x="90.4920%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.47%)</title><rect x="90.4762%" y="613" width="0.4684%" height="15" fill="rgb(226,176,43)" fg:x="1159" fg:w="6"/><text x="90.7262%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8665%" y="597" width="0.0781%" height="15" fill="rgb(222,155,4)" fg:x="1164" fg:w="1"/><text x="91.1165%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.94%)</title><rect x="90.0859%" y="661" width="0.9368%" height="15" fill="rgb(215,149,7)" fg:x="1154" fg:w="12"/><text x="90.3359%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.78%)</title><rect x="90.2420%" y="645" width="0.7806%" height="15" fill="rgb(252,199,23)" fg:x="1156" fg:w="10"/><text x="90.4920%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9446%" y="629" width="0.0781%" height="15" fill="rgb(245,52,29)" fg:x="1165" fg:w="1"/><text x="91.1946%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.01%)</title><rect x="90.0859%" y="677" width="1.0148%" height="15" fill="rgb(221,228,19)" fg:x="1154" fg:w="13"/><text x="90.3359%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="91.0226%" y="661" width="0.0781%" height="15" fill="rgb(253,101,6)" fg:x="1166" fg:w="1"/><text x="91.2726%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1007%" y="677" width="0.0781%" height="15" fill="rgb(211,130,8)" fg:x="1167" fg:w="1"/><text x="91.3507%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.48%)</title><rect x="89.8517%" y="725" width="1.4832%" height="15" fill="rgb(238,37,53)" fg:x="1151" fg:w="19"/><text x="90.1017%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.48%)</title><rect x="89.8517%" y="709" width="1.4832%" height="15" fill="rgb(235,145,5)" fg:x="1151" fg:w="19"/><text x="90.1017%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.25%)</title><rect x="90.0859%" y="693" width="1.2490%" height="15" fill="rgb(244,12,43)" fg:x="1154" fg:w="16"/><text x="90.3359%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.1788%" y="677" width="0.1561%" height="15" fill="rgb(246,195,24)" fg:x="1168" fg:w="2"/><text x="91.4288%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.1788%" y="661" width="0.1561%" height="15" fill="rgb(235,163,6)" fg:x="1168" fg:w="2"/><text x="91.4288%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="91.1788%" y="645" width="0.1561%" height="15" fill="rgb(236,218,17)" fg:x="1168" fg:w="2"/><text x="91.4288%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.6472%" y="645" width="0.0781%" height="15" fill="rgb(235,12,38)" fg:x="1174" fg:w="1"/><text x="91.8972%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.8033%" y="549" width="0.0781%" height="15" fill="rgb(225,195,33)" fg:x="1176" fg:w="1"/><text x="92.0533%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="91.8033%" y="533" width="0.0781%" height="15" fill="rgb(238,54,35)" fg:x="1176" fg:w="1"/><text x="92.0533%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="91.8033%" y="581" width="0.1561%" height="15" fill="rgb(238,33,7)" fg:x="1176" fg:w="2"/><text x="92.0533%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.8033%" y="565" width="0.1561%" height="15" fill="rgb(245,5,14)" fg:x="1176" fg:w="2"/><text x="92.0533%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8813%" y="549" width="0.0781%" height="15" fill="rgb(251,95,31)" fg:x="1177" fg:w="1"/><text x="92.1313%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8813%" y="533" width="0.0781%" height="15" fill="rgb(222,15,46)" fg:x="1177" fg:w="1"/><text x="92.1313%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.9594%" y="469" width="0.0781%" height="15" fill="rgb(226,182,24)" fg:x="1178" fg:w="1"/><text x="92.2094%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9594%" y="453" width="0.0781%" height="15" fill="rgb(229,105,41)" fg:x="1178" fg:w="1"/><text x="92.2094%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="91.9594%" y="501" width="0.2342%" height="15" fill="rgb(216,99,53)" fg:x="1178" fg:w="3"/><text x="92.2094%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="91.9594%" y="485" width="0.2342%" height="15" fill="rgb(253,26,20)" fg:x="1178" fg:w="3"/><text x="92.2094%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.0375%" y="469" width="0.1561%" height="15" fill="rgb(249,155,28)" fg:x="1179" fg:w="2"/><text x="92.2875%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1155%" y="453" width="0.0781%" height="15" fill="rgb(241,221,2)" fg:x="1180" fg:w="1"/><text x="92.3655%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1155%" y="437" width="0.0781%" height="15" fill="rgb(219,124,6)" fg:x="1180" fg:w="1"/><text x="92.3655%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="91.9594%" y="565" width="0.3903%" height="15" fill="rgb(233,37,6)" fg:x="1178" fg:w="5"/><text x="92.2094%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="91.9594%" y="549" width="0.3903%" height="15" fill="rgb(238,20,14)" fg:x="1178" fg:w="5"/><text x="92.2094%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="91.9594%" y="533" width="0.3903%" height="15" fill="rgb(232,106,27)" fg:x="1178" fg:w="5"/><text x="92.2094%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="91.9594%" y="517" width="0.3903%" height="15" fill="rgb(246,157,24)" fg:x="1178" fg:w="5"/><text x="92.2094%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.1936%" y="501" width="0.1561%" height="15" fill="rgb(214,153,10)" fg:x="1181" fg:w="2"/><text x="92.4436%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.2717%" y="485" width="0.0781%" height="15" fill="rgb(212,94,6)" fg:x="1182" fg:w="1"/><text x="92.5217%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.2717%" y="469" width="0.0781%" height="15" fill="rgb(254,25,27)" fg:x="1182" fg:w="1"/><text x="92.5217%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.3497%" y="565" width="0.0781%" height="15" fill="rgb(250,43,52)" fg:x="1183" fg:w="1"/><text x="92.5997%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.3497%" y="549" width="0.0781%" height="15" fill="rgb(221,226,40)" fg:x="1183" fg:w="1"/><text x="92.5997%" y="559.50"></text></g><g><title>engine::session::Session::close (68 samples, 5.31%)</title><rect x="87.2756%" y="821" width="5.3084%" height="15" fill="rgb(235,162,34)" fg:x="1118" fg:w="68"/><text x="87.5256%" y="831.50">engine..</text></g><g><title>engine::session::state::State::close (64 samples, 5.00%)</title><rect x="87.5878%" y="805" width="4.9961%" height="15" fill="rgb(239,24,26)" fg:x="1122" fg:w="64"/><text x="87.8378%" y="815.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (64 samples, 5.00%)</title><rect x="87.5878%" y="789" width="4.9961%" height="15" fill="rgb(244,226,11)" fg:x="1122" fg:w="64"/><text x="87.8378%" y="799.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (64 samples, 5.00%)</title><rect x="87.5878%" y="773" width="4.9961%" height="15" fill="rgb(225,23,10)" fg:x="1122" fg:w="64"/><text x="87.8378%" y="783.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (62 samples, 4.84%)</title><rect x="87.7440%" y="757" width="4.8400%" height="15" fill="rgb(249,125,6)" fg:x="1124" fg:w="62"/><text x="87.9940%" y="767.50">engine..</text></g><g><title>kernel::model::any_entity_changes (43 samples, 3.36%)</title><rect x="89.2272%" y="741" width="3.3568%" height="15" fill="rgb(246,212,12)" fg:x="1143" fg:w="43"/><text x="89.4772%" y="751.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (16 samples, 1.25%)</title><rect x="91.3349%" y="725" width="1.2490%" height="15" fill="rgb(230,43,32)" fg:x="1170" fg:w="16"/><text x="91.5849%" y="735.50"></text></g><g><title>serde_json::de::from_trait (16 samples, 1.25%)</title><rect x="91.3349%" y="709" width="1.2490%" height="15" fill="rgb(210,95,23)" fg:x="1170" fg:w="16"/><text x="91.5849%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.25%)</title><rect x="91.3349%" y="693" width="1.2490%" height="15" fill="rgb(229,103,33)" fg:x="1170" fg:w="16"/><text x="91.5849%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.25%)</title><rect x="91.3349%" y="677" width="1.2490%" height="15" fill="rgb(222,104,27)" fg:x="1170" fg:w="16"/><text x="91.5849%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.17%)</title><rect x="91.4130%" y="661" width="1.1710%" height="15" fill="rgb(239,221,23)" fg:x="1171" fg:w="15"/><text x="91.6630%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.86%)</title><rect x="91.7252%" y="645" width="0.8587%" height="15" fill="rgb(222,98,21)" fg:x="1175" fg:w="11"/><text x="91.9752%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.86%)</title><rect x="91.7252%" y="629" width="0.8587%" height="15" fill="rgb(231,101,20)" fg:x="1175" fg:w="11"/><text x="91.9752%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.86%)</title><rect x="91.7252%" y="613" width="0.8587%" height="15" fill="rgb(215,150,22)" fg:x="1175" fg:w="11"/><text x="91.9752%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.86%)</title><rect x="91.7252%" y="597" width="0.8587%" height="15" fill="rgb(248,3,34)" fg:x="1175" fg:w="11"/><text x="91.9752%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.62%)</title><rect x="91.9594%" y="581" width="0.6245%" height="15" fill="rgb(220,141,21)" fg:x="1178" fg:w="8"/><text x="92.2094%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.4278%" y="565" width="0.1561%" height="15" fill="rgb(223,41,48)" fg:x="1184" fg:w="2"/><text x="92.6778%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5059%" y="549" width="0.0781%" height="15" fill="rgb(247,12,5)" fg:x="1185" fg:w="1"/><text x="92.7559%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="92.6620%" y="693" width="0.0781%" height="15" fill="rgb(206,173,10)" fg:x="1187" fg:w="1"/><text x="92.9120%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="92.6620%" y="677" width="0.0781%" height="15" fill="rgb(233,214,37)" fg:x="1187" fg:w="1"/><text x="92.9120%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="92.6620%" y="661" width="0.0781%" height="15" fill="rgb(238,86,43)" fg:x="1187" fg:w="1"/><text x="92.9120%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="92.6620%" y="645" width="0.0781%" height="15" fill="rgb(212,182,8)" fg:x="1187" fg:w="1"/><text x="92.9120%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="92.8181%" y="581" width="0.0781%" height="15" fill="rgb(240,91,47)" fg:x="1189" fg:w="1"/><text x="93.0681%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.8181%" y="565" width="0.0781%" height="15" fill="rgb(209,138,26)" fg:x="1189" fg:w="1"/><text x="93.0681%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="92.8181%" y="613" width="0.1561%" height="15" fill="rgb(231,163,20)" fg:x="1189" fg:w="2"/><text x="93.0681%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="92.8181%" y="597" width="0.1561%" height="15" fill="rgb(214,91,54)" fg:x="1189" fg:w="2"/><text x="93.0681%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="92.8962%" y="581" width="0.0781%" height="15" fill="rgb(230,32,17)" fg:x="1190" fg:w="1"/><text x="93.1462%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9742%" y="549" width="0.0781%" height="15" fill="rgb(231,34,34)" fg:x="1191" fg:w="1"/><text x="93.2242%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9742%" y="533" width="0.0781%" height="15" fill="rgb(224,228,27)" fg:x="1191" fg:w="1"/><text x="93.2242%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0523%" y="485" width="0.0781%" height="15" fill="rgb(219,35,40)" fg:x="1192" fg:w="1"/><text x="93.3023%" y="495.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.23%)</title><rect x="92.9742%" y="597" width="0.2342%" height="15" fill="rgb(234,42,8)" fg:x="1191" fg:w="3"/><text x="93.2242%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="92.9742%" y="581" width="0.2342%" height="15" fill="rgb(226,75,22)" fg:x="1191" fg:w="3"/><text x="93.2242%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="92.9742%" y="565" width="0.2342%" height="15" fill="rgb(242,203,28)" fg:x="1191" fg:w="3"/><text x="93.2242%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.0523%" y="549" width="0.1561%" height="15" fill="rgb(221,3,9)" fg:x="1192" fg:w="2"/><text x="93.3023%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.0523%" y="533" width="0.1561%" height="15" fill="rgb(214,34,31)" fg:x="1192" fg:w="2"/><text x="93.3023%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.0523%" y="517" width="0.1561%" height="15" fill="rgb(252,119,15)" fg:x="1192" fg:w="2"/><text x="93.3023%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.0523%" y="501" width="0.1561%" height="15" fill="rgb(244,224,31)" fg:x="1192" fg:w="2"/><text x="93.3023%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.1304%" y="485" width="0.0781%" height="15" fill="rgb(215,8,51)" fg:x="1193" fg:w="1"/><text x="93.3804%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.3646%" y="533" width="0.0781%" height="15" fill="rgb(207,24,1)" fg:x="1196" fg:w="1"/><text x="93.6146%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4426%" y="517" width="0.0781%" height="15" fill="rgb(245,90,0)" fg:x="1197" fg:w="1"/><text x="93.6926%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4426%" y="501" width="0.0781%" height="15" fill="rgb(246,43,48)" fg:x="1197" fg:w="1"/><text x="93.6926%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="93.4426%" y="485" width="0.0781%" height="15" fill="rgb(252,218,10)" fg:x="1197" fg:w="1"/><text x="93.6926%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4426%" y="469" width="0.0781%" height="15" fill="rgb(231,24,35)" fg:x="1197" fg:w="1"/><text x="93.6926%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4426%" y="453" width="0.0781%" height="15" fill="rgb(225,66,19)" fg:x="1197" fg:w="1"/><text x="93.6926%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4426%" y="437" width="0.0781%" height="15" fill="rgb(214,96,51)" fg:x="1197" fg:w="1"/><text x="93.6926%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4426%" y="421" width="0.0781%" height="15" fill="rgb(251,151,47)" fg:x="1197" fg:w="1"/><text x="93.6926%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.5207%" y="517" width="0.1561%" height="15" fill="rgb(236,79,14)" fg:x="1198" fg:w="2"/><text x="93.7707%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="93.5207%" y="501" width="0.1561%" height="15" fill="rgb(210,205,11)" fg:x="1198" fg:w="2"/><text x="93.7707%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.5207%" y="485" width="0.1561%" height="15" fill="rgb(233,142,53)" fg:x="1198" fg:w="2"/><text x="93.7707%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.5207%" y="469" width="0.1561%" height="15" fill="rgb(212,116,48)" fg:x="1198" fg:w="2"/><text x="93.7707%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.5207%" y="453" width="0.1561%" height="15" fill="rgb(234,55,33)" fg:x="1198" fg:w="2"/><text x="93.7707%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.5988%" y="437" width="0.0781%" height="15" fill="rgb(253,92,27)" fg:x="1199" fg:w="1"/><text x="93.8488%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (13 samples, 1.01%)</title><rect x="92.7400%" y="661" width="1.0148%" height="15" fill="rgb(220,7,35)" fg:x="1188" fg:w="13"/><text x="92.9900%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.01%)</title><rect x="92.7400%" y="645" width="1.0148%" height="15" fill="rgb(246,124,6)" fg:x="1188" fg:w="13"/><text x="92.9900%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.94%)</title><rect x="92.8181%" y="629" width="0.9368%" height="15" fill="rgb(212,111,51)" fg:x="1189" fg:w="12"/><text x="93.0681%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (10 samples, 0.78%)</title><rect x="92.9742%" y="613" width="0.7806%" height="15" fill="rgb(253,116,7)" fg:x="1191" fg:w="10"/><text x="93.2242%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="93.2084%" y="597" width="0.5464%" height="15" fill="rgb(213,145,18)" fg:x="1194" fg:w="7"/><text x="93.4584%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="93.2084%" y="581" width="0.5464%" height="15" fill="rgb(219,149,7)" fg:x="1194" fg:w="7"/><text x="93.4584%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.47%)</title><rect x="93.2865%" y="565" width="0.4684%" height="15" fill="rgb(225,156,20)" fg:x="1195" fg:w="6"/><text x="93.5365%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="93.2865%" y="549" width="0.4684%" height="15" fill="rgb(211,98,19)" fg:x="1195" fg:w="6"/><text x="93.5365%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.31%)</title><rect x="93.4426%" y="533" width="0.3123%" height="15" fill="rgb(231,192,31)" fg:x="1197" fg:w="4"/><text x="93.6926%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.6768%" y="517" width="0.0781%" height="15" fill="rgb(249,95,19)" fg:x="1200" fg:w="1"/><text x="93.9268%" y="527.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (16 samples, 1.25%)</title><rect x="92.5839%" y="725" width="1.2490%" height="15" fill="rgb(247,101,36)" fg:x="1186" fg:w="16"/><text x="92.8339%" y="735.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (16 samples, 1.25%)</title><rect x="92.5839%" y="709" width="1.2490%" height="15" fill="rgb(221,45,43)" fg:x="1186" fg:w="16"/><text x="92.8339%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.09%)</title><rect x="92.7400%" y="693" width="1.0929%" height="15" fill="rgb(220,42,1)" fg:x="1188" fg:w="14"/><text x="92.9900%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.09%)</title><rect x="92.7400%" y="677" width="1.0929%" height="15" fill="rgb(236,19,24)" fg:x="1188" fg:w="14"/><text x="92.9900%" y="687.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7549%" y="661" width="0.0781%" height="15" fill="rgb(225,192,6)" fg:x="1201" fg:w="1"/><text x="94.0049%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.7549%" y="645" width="0.0781%" height="15" fill="rgb(242,30,19)" fg:x="1201" fg:w="1"/><text x="94.0049%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.7549%" y="629" width="0.0781%" height="15" fill="rgb(240,36,6)" fg:x="1201" fg:w="1"/><text x="94.0049%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7549%" y="613" width="0.0781%" height="15" fill="rgb(246,40,28)" fg:x="1201" fg:w="1"/><text x="94.0049%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7549%" y="597" width="0.0781%" height="15" fill="rgb(225,155,33)" fg:x="1201" fg:w="1"/><text x="94.0049%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.7549%" y="581" width="0.0781%" height="15" fill="rgb(240,65,18)" fg:x="1201" fg:w="1"/><text x="94.0049%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.7549%" y="565" width="0.0781%" height="15" fill="rgb(217,0,48)" fg:x="1201" fg:w="1"/><text x="94.0049%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.7549%" y="549" width="0.0781%" height="15" fill="rgb(217,80,15)" fg:x="1201" fg:w="1"/><text x="94.0049%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="93.7549%" y="533" width="0.0781%" height="15" fill="rgb(253,43,51)" fg:x="1201" fg:w="1"/><text x="94.0049%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.7549%" y="517" width="0.0781%" height="15" fill="rgb(246,60,4)" fg:x="1201" fg:w="1"/><text x="94.0049%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.0671%" y="469" width="0.1561%" height="15" fill="rgb(230,40,54)" fg:x="1205" fg:w="2"/><text x="94.3171%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.0671%" y="453" width="0.1561%" height="15" fill="rgb(208,20,44)" fg:x="1205" fg:w="2"/><text x="94.3171%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.1452%" y="437" width="0.0781%" height="15" fill="rgb(230,22,22)" fg:x="1206" fg:w="1"/><text x="94.3952%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="94.0671%" y="501" width="0.2342%" height="15" fill="rgb(207,57,4)" fg:x="1205" fg:w="3"/><text x="94.3171%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="94.0671%" y="485" width="0.2342%" height="15" fill="rgb(242,130,33)" fg:x="1205" fg:w="3"/><text x="94.3171%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2233%" y="469" width="0.0781%" height="15" fill="rgb(218,66,43)" fg:x="1207" fg:w="1"/><text x="94.4733%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="94.3013%" y="501" width="0.1561%" height="15" fill="rgb(236,105,16)" fg:x="1208" fg:w="2"/><text x="94.5513%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (8 samples, 0.62%)</title><rect x="93.9891%" y="549" width="0.6245%" height="15" fill="rgb(230,46,15)" fg:x="1204" fg:w="8"/><text x="94.2391%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.55%)</title><rect x="94.0671%" y="533" width="0.5464%" height="15" fill="rgb(251,172,40)" fg:x="1205" fg:w="7"/><text x="94.3171%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.55%)</title><rect x="94.0671%" y="517" width="0.5464%" height="15" fill="rgb(225,217,32)" fg:x="1205" fg:w="7"/><text x="94.3171%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.4575%" y="501" width="0.1561%" height="15" fill="rgb(243,10,29)" fg:x="1210" fg:w="2"/><text x="94.7075%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.4575%" y="485" width="0.1561%" height="15" fill="rgb(207,102,10)" fg:x="1210" fg:w="2"/><text x="94.7075%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.4575%" y="469" width="0.1561%" height="15" fill="rgb(241,125,5)" fg:x="1210" fg:w="2"/><text x="94.7075%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.4575%" y="453" width="0.1561%" height="15" fill="rgb(230,125,29)" fg:x="1210" fg:w="2"/><text x="94.7075%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.4575%" y="437" width="0.1561%" height="15" fill="rgb(223,65,44)" fg:x="1210" fg:w="2"/><text x="94.7075%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.4575%" y="421" width="0.1561%" height="15" fill="rgb(224,188,28)" fg:x="1210" fg:w="2"/><text x="94.7075%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.5355%" y="405" width="0.0781%" height="15" fill="rgb(254,197,27)" fg:x="1211" fg:w="1"/><text x="94.7855%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.5355%" y="389" width="0.0781%" height="15" fill="rgb(220,200,25)" fg:x="1211" fg:w="1"/><text x="94.7855%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.5355%" y="373" width="0.0781%" height="15" fill="rgb(239,225,54)" fg:x="1211" fg:w="1"/><text x="94.7855%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.5355%" y="357" width="0.0781%" height="15" fill="rgb(211,59,40)" fg:x="1211" fg:w="1"/><text x="94.7855%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.5355%" y="341" width="0.0781%" height="15" fill="rgb(213,176,46)" fg:x="1211" fg:w="1"/><text x="94.7855%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.6136%" y="533" width="0.0781%" height="15" fill="rgb(226,99,4)" fg:x="1212" fg:w="1"/><text x="94.8636%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="94.6916%" y="533" width="0.0781%" height="15" fill="rgb(239,203,43)" fg:x="1213" fg:w="1"/><text x="94.9416%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.6916%" y="517" width="0.0781%" height="15" fill="rgb(246,1,45)" fg:x="1213" fg:w="1"/><text x="94.9416%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0820%" y="437" width="0.0781%" height="15" fill="rgb(231,42,52)" fg:x="1218" fg:w="1"/><text x="95.3320%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="95.0039%" y="501" width="0.2342%" height="15" fill="rgb(240,13,50)" fg:x="1217" fg:w="3"/><text x="95.2539%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.0820%" y="485" width="0.1561%" height="15" fill="rgb(225,81,14)" fg:x="1218" fg:w="2"/><text x="95.3320%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.0820%" y="469" width="0.1561%" height="15" fill="rgb(216,182,23)" fg:x="1218" fg:w="2"/><text x="95.3320%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.0820%" y="453" width="0.1561%" height="15" fill="rgb(233,137,19)" fg:x="1218" fg:w="2"/><text x="95.3320%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1600%" y="437" width="0.0781%" height="15" fill="rgb(242,61,46)" fg:x="1219" fg:w="1"/><text x="95.4100%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1600%" y="421" width="0.0781%" height="15" fill="rgb(221,168,51)" fg:x="1219" fg:w="1"/><text x="95.4100%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.1600%" y="405" width="0.0781%" height="15" fill="rgb(238,48,15)" fg:x="1219" fg:w="1"/><text x="95.4100%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.1600%" y="389" width="0.0781%" height="15" fill="rgb(216,13,16)" fg:x="1219" fg:w="1"/><text x="95.4100%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.1600%" y="373" width="0.0781%" height="15" fill="rgb(223,185,34)" fg:x="1219" fg:w="1"/><text x="95.4100%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1600%" y="357" width="0.0781%" height="15" fill="rgb(228,94,42)" fg:x="1219" fg:w="1"/><text x="95.4100%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1600%" y="341" width="0.0781%" height="15" fill="rgb(218,166,43)" fg:x="1219" fg:w="1"/><text x="95.4100%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.1600%" y="325" width="0.0781%" height="15" fill="rgb(232,30,50)" fg:x="1219" fg:w="1"/><text x="95.4100%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.1600%" y="309" width="0.0781%" height="15" fill="rgb(245,206,45)" fg:x="1219" fg:w="1"/><text x="95.4100%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.1600%" y="293" width="0.0781%" height="15" fill="rgb(220,56,22)" fg:x="1219" fg:w="1"/><text x="95.4100%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.1600%" y="277" width="0.0781%" height="15" fill="rgb(239,129,38)" fg:x="1219" fg:w="1"/><text x="95.4100%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.2381%" y="501" width="0.0781%" height="15" fill="rgb(207,68,41)" fg:x="1220" fg:w="1"/><text x="95.4881%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.2381%" y="485" width="0.0781%" height="15" fill="rgb(221,21,7)" fg:x="1220" fg:w="1"/><text x="95.4881%" y="495.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (21 samples, 1.64%)</title><rect x="93.9110%" y="565" width="1.6393%" height="15" fill="rgb(240,33,25)" fg:x="1203" fg:w="21"/><text x="94.1610%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (12 samples, 0.94%)</title><rect x="94.6136%" y="549" width="0.9368%" height="15" fill="rgb(242,119,10)" fg:x="1212" fg:w="12"/><text x="94.8636%" y="559.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.78%)</title><rect x="94.7697%" y="533" width="0.7806%" height="15" fill="rgb(214,149,40)" fg:x="1214" fg:w="10"/><text x="95.0197%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.78%)</title><rect x="94.7697%" y="517" width="0.7806%" height="15" fill="rgb(228,25,36)" fg:x="1214" fg:w="10"/><text x="95.0197%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="95.3162%" y="501" width="0.2342%" height="15" fill="rgb(222,59,15)" fg:x="1221" fg:w="3"/><text x="95.5662%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="95.3162%" y="485" width="0.2342%" height="15" fill="rgb(218,170,0)" fg:x="1221" fg:w="3"/><text x="95.5662%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="95.3162%" y="469" width="0.2342%" height="15" fill="rgb(232,173,23)" fg:x="1221" fg:w="3"/><text x="95.5662%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="95.3162%" y="453" width="0.2342%" height="15" fill="rgb(218,116,1)" fg:x="1221" fg:w="3"/><text x="95.5662%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="95.3942%" y="437" width="0.1561%" height="15" fill="rgb(207,34,4)" fg:x="1222" fg:w="2"/><text x="95.6442%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.3942%" y="421" width="0.1561%" height="15" fill="rgb(229,54,52)" fg:x="1222" fg:w="2"/><text x="95.6442%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.3942%" y="405" width="0.1561%" height="15" fill="rgb(211,86,23)" fg:x="1222" fg:w="2"/><text x="95.6442%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.3942%" y="389" width="0.1561%" height="15" fill="rgb(254,153,34)" fg:x="1222" fg:w="2"/><text x="95.6442%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.3942%" y="373" width="0.1561%" height="15" fill="rgb(219,220,14)" fg:x="1222" fg:w="2"/><text x="95.6442%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.3942%" y="357" width="0.1561%" height="15" fill="rgb(247,8,26)" fg:x="1222" fg:w="2"/><text x="95.6442%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.4723%" y="341" width="0.0781%" height="15" fill="rgb(213,129,42)" fg:x="1223" fg:w="1"/><text x="95.7223%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.5504%" y="565" width="0.0781%" height="15" fill="rgb(225,95,41)" fg:x="1224" fg:w="1"/><text x="95.8004%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.5504%" y="549" width="0.0781%" height="15" fill="rgb(215,134,24)" fg:x="1224" fg:w="1"/><text x="95.8004%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="95.6284%" y="565" width="0.0781%" height="15" fill="rgb(235,23,54)" fg:x="1225" fg:w="1"/><text x="95.8784%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="95.6284%" y="549" width="0.0781%" height="15" fill="rgb(229,96,31)" fg:x="1225" fg:w="1"/><text x="95.8784%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="95.6284%" y="533" width="0.0781%" height="15" fill="rgb(206,111,12)" fg:x="1225" fg:w="1"/><text x="95.8784%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.7845%" y="501" width="0.0781%" height="15" fill="rgb(222,177,8)" fg:x="1227" fg:w="1"/><text x="96.0345%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.8626%" y="501" width="0.0781%" height="15" fill="rgb(251,36,52)" fg:x="1228" fg:w="1"/><text x="96.1126%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="95.7845%" y="533" width="0.2342%" height="15" fill="rgb(216,182,29)" fg:x="1227" fg:w="3"/><text x="96.0345%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="95.7845%" y="517" width="0.2342%" height="15" fill="rgb(241,145,50)" fg:x="1227" fg:w="3"/><text x="96.0345%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9407%" y="501" width="0.0781%" height="15" fill="rgb(231,71,35)" fg:x="1229" fg:w="1"/><text x="96.1907%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9407%" y="485" width="0.0781%" height="15" fill="rgb(218,22,17)" fg:x="1229" fg:w="1"/><text x="96.1907%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9407%" y="469" width="0.0781%" height="15" fill="rgb(225,227,6)" fg:x="1229" fg:w="1"/><text x="96.1907%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.0187%" y="517" width="0.0781%" height="15" fill="rgb(224,204,17)" fg:x="1230" fg:w="1"/><text x="96.2687%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="96.0968%" y="421" width="0.0781%" height="15" fill="rgb(227,61,28)" fg:x="1231" fg:w="1"/><text x="96.3468%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="96.0968%" y="405" width="0.0781%" height="15" fill="rgb(242,148,23)" fg:x="1231" fg:w="1"/><text x="96.3468%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.0968%" y="389" width="0.0781%" height="15" fill="rgb(237,105,33)" fg:x="1231" fg:w="1"/><text x="96.3468%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.0968%" y="373" width="0.0781%" height="15" fill="rgb(238,218,40)" fg:x="1231" fg:w="1"/><text x="96.3468%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.0968%" y="357" width="0.0781%" height="15" fill="rgb(209,126,11)" fg:x="1231" fg:w="1"/><text x="96.3468%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.0968%" y="341" width="0.0781%" height="15" fill="rgb(245,90,11)" fg:x="1231" fg:w="1"/><text x="96.3468%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0968%" y="325" width="0.0781%" height="15" fill="rgb(211,195,10)" fg:x="1231" fg:w="1"/><text x="96.3468%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.0968%" y="309" width="0.0781%" height="15" fill="rgb(231,45,45)" fg:x="1231" fg:w="1"/><text x="96.3468%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0968%" y="293" width="0.0781%" height="15" fill="rgb(246,100,43)" fg:x="1231" fg:w="1"/><text x="96.3468%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.0968%" y="277" width="0.0781%" height="15" fill="rgb(241,193,8)" fg:x="1231" fg:w="1"/><text x="96.3468%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0968%" y="261" width="0.0781%" height="15" fill="rgb(208,76,19)" fg:x="1231" fg:w="1"/><text x="96.3468%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.2529%" y="357" width="0.0781%" height="15" fill="rgb(223,69,40)" fg:x="1233" fg:w="1"/><text x="96.5029%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.3310%" y="325" width="0.0781%" height="15" fill="rgb(207,120,39)" fg:x="1234" fg:w="1"/><text x="96.5810%" y="335.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.47%)</title><rect x="96.1749%" y="405" width="0.4684%" height="15" fill="rgb(212,209,28)" fg:x="1232" fg:w="6"/><text x="96.4249%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="96.1749%" y="389" width="0.4684%" height="15" fill="rgb(246,82,29)" fg:x="1232" fg:w="6"/><text x="96.4249%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="96.1749%" y="373" width="0.4684%" height="15" fill="rgb(239,6,40)" fg:x="1232" fg:w="6"/><text x="96.4249%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="96.3310%" y="357" width="0.3123%" height="15" fill="rgb(228,181,35)" fg:x="1234" fg:w="4"/><text x="96.5810%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="96.3310%" y="341" width="0.3123%" height="15" fill="rgb(238,151,2)" fg:x="1234" fg:w="4"/><text x="96.5810%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="96.4091%" y="325" width="0.2342%" height="15" fill="rgb(236,94,18)" fg:x="1235" fg:w="3"/><text x="96.6591%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="96.4091%" y="309" width="0.2342%" height="15" fill="rgb(208,38,14)" fg:x="1235" fg:w="3"/><text x="96.6591%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.4871%" y="293" width="0.1561%" height="15" fill="rgb(234,215,27)" fg:x="1236" fg:w="2"/><text x="96.7371%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.4871%" y="277" width="0.1561%" height="15" fill="rgb(254,211,53)" fg:x="1236" fg:w="2"/><text x="96.7371%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.5652%" y="261" width="0.0781%" height="15" fill="rgb(216,175,11)" fg:x="1237" fg:w="1"/><text x="96.8152%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.5652%" y="245" width="0.0781%" height="15" fill="rgb(246,179,26)" fg:x="1237" fg:w="1"/><text x="96.8152%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.5652%" y="229" width="0.0781%" height="15" fill="rgb(249,19,52)" fg:x="1237" fg:w="1"/><text x="96.8152%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.5652%" y="213" width="0.0781%" height="15" fill="rgb(230,42,52)" fg:x="1237" fg:w="1"/><text x="96.8152%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.5652%" y="197" width="0.0781%" height="15" fill="rgb(221,171,0)" fg:x="1237" fg:w="1"/><text x="96.8152%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.5652%" y="181" width="0.0781%" height="15" fill="rgb(222,177,40)" fg:x="1237" fg:w="1"/><text x="96.8152%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.7994%" y="261" width="0.1561%" height="15" fill="rgb(247,34,16)" fg:x="1240" fg:w="2"/><text x="97.0494%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.7994%" y="245" width="0.1561%" height="15" fill="rgb(213,217,37)" fg:x="1240" fg:w="2"/><text x="97.0494%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.8774%" y="229" width="0.0781%" height="15" fill="rgb(231,189,24)" fg:x="1241" fg:w="1"/><text x="97.1274%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8774%" y="213" width="0.0781%" height="15" fill="rgb(214,22,9)" fg:x="1241" fg:w="1"/><text x="97.1274%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8774%" y="197" width="0.0781%" height="15" fill="rgb(212,70,22)" fg:x="1241" fg:w="1"/><text x="97.1274%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="96.7213%" y="325" width="0.3123%" height="15" fill="rgb(249,64,51)" fg:x="1239" fg:w="4"/><text x="96.9713%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="96.7994%" y="309" width="0.2342%" height="15" fill="rgb(249,148,20)" fg:x="1240" fg:w="3"/><text x="97.0494%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="96.7994%" y="293" width="0.2342%" height="15" fill="rgb(246,46,48)" fg:x="1240" fg:w="3"/><text x="97.0494%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="96.7994%" y="277" width="0.2342%" height="15" fill="rgb(217,34,48)" fg:x="1240" fg:w="3"/><text x="97.0494%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.9555%" y="261" width="0.0781%" height="15" fill="rgb(222,45,26)" fg:x="1242" fg:w="1"/><text x="97.2055%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.9555%" y="245" width="0.0781%" height="15" fill="rgb(230,201,36)" fg:x="1242" fg:w="1"/><text x="97.2055%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.94%)</title><rect x="96.1749%" y="421" width="0.9368%" height="15" fill="rgb(217,30,43)" fg:x="1232" fg:w="12"/><text x="96.4249%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="96.6432%" y="405" width="0.4684%" height="15" fill="rgb(230,197,40)" fg:x="1238" fg:w="6"/><text x="96.8932%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="96.6432%" y="389" width="0.4684%" height="15" fill="rgb(239,181,18)" fg:x="1238" fg:w="6"/><text x="96.8932%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.47%)</title><rect x="96.6432%" y="373" width="0.4684%" height="15" fill="rgb(222,60,39)" fg:x="1238" fg:w="6"/><text x="96.8932%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="96.7213%" y="357" width="0.3903%" height="15" fill="rgb(210,60,22)" fg:x="1239" fg:w="5"/><text x="96.9713%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.39%)</title><rect x="96.7213%" y="341" width="0.3903%" height="15" fill="rgb(239,213,48)" fg:x="1239" fg:w="5"/><text x="96.9713%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0336%" y="325" width="0.0781%" height="15" fill="rgb(253,214,23)" fg:x="1243" fg:w="1"/><text x="97.2836%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.0336%" y="309" width="0.0781%" height="15" fill="rgb(211,98,45)" fg:x="1243" fg:w="1"/><text x="97.2836%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.0336%" y="293" width="0.0781%" height="15" fill="rgb(239,130,44)" fg:x="1243" fg:w="1"/><text x="97.2836%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0336%" y="277" width="0.0781%" height="15" fill="rgb(222,181,35)" fg:x="1243" fg:w="1"/><text x="97.2836%" y="287.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="97.0336%" y="261" width="0.0781%" height="15" fill="rgb(219,219,49)" fg:x="1243" fg:w="1"/><text x="97.2836%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.1116%" y="421" width="0.0781%" height="15" fill="rgb(227,161,51)" fg:x="1244" fg:w="1"/><text x="97.3616%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.1116%" y="405" width="0.0781%" height="15" fill="rgb(239,112,27)" fg:x="1244" fg:w="1"/><text x="97.3616%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.1116%" y="389" width="0.0781%" height="15" fill="rgb(248,122,18)" fg:x="1244" fg:w="1"/><text x="97.3616%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1116%" y="373" width="0.0781%" height="15" fill="rgb(245,130,23)" fg:x="1244" fg:w="1"/><text x="97.3616%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1116%" y="357" width="0.0781%" height="15" fill="rgb(211,225,28)" fg:x="1244" fg:w="1"/><text x="97.3616%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1116%" y="341" width="0.0781%" height="15" fill="rgb(242,105,44)" fg:x="1244" fg:w="1"/><text x="97.3616%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1897%" y="405" width="0.0781%" height="15" fill="rgb(216,183,46)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1897%" y="389" width="0.0781%" height="15" fill="rgb(227,112,9)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.1897%" y="373" width="0.0781%" height="15" fill="rgb(244,21,0)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.1897%" y="357" width="0.0781%" height="15" fill="rgb(236,185,14)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.1897%" y="341" width="0.0781%" height="15" fill="rgb(236,170,30)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1897%" y="325" width="0.0781%" height="15" fill="rgb(209,198,51)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1897%" y="309" width="0.0781%" height="15" fill="rgb(205,171,26)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.1897%" y="293" width="0.0781%" height="15" fill="rgb(246,41,49)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.1897%" y="277" width="0.0781%" height="15" fill="rgb(240,229,12)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.1897%" y="261" width="0.0781%" height="15" fill="rgb(212,8,54)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.1897%" y="245" width="0.0781%" height="15" fill="rgb(230,114,13)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="255.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="97.1897%" y="229" width="0.0781%" height="15" fill="rgb(229,130,28)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="239.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="97.1897%" y="213" width="0.0781%" height="15" fill="rgb(206,139,15)" fg:x="1245" fg:w="1"/><text x="97.4397%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (20 samples, 1.56%)</title><rect x="96.0187%" y="533" width="1.5613%" height="15" fill="rgb(241,188,35)" fg:x="1230" fg:w="20"/><text x="96.2687%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (19 samples, 1.48%)</title><rect x="96.0968%" y="517" width="1.4832%" height="15" fill="rgb(208,224,26)" fg:x="1231" fg:w="19"/><text x="96.3468%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 1.48%)</title><rect x="96.0968%" y="501" width="1.4832%" height="15" fill="rgb(251,131,28)" fg:x="1231" fg:w="19"/><text x="96.3468%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 1.48%)</title><rect x="96.0968%" y="485" width="1.4832%" height="15" fill="rgb(208,153,1)" fg:x="1231" fg:w="19"/><text x="96.3468%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (19 samples, 1.48%)</title><rect x="96.0968%" y="469" width="1.4832%" height="15" fill="rgb(234,33,36)" fg:x="1231" fg:w="19"/><text x="96.3468%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (19 samples, 1.48%)</title><rect x="96.0968%" y="453" width="1.4832%" height="15" fill="rgb(246,42,29)" fg:x="1231" fg:w="19"/><text x="96.3468%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (19 samples, 1.48%)</title><rect x="96.0968%" y="437" width="1.4832%" height="15" fill="rgb(251,114,16)" fg:x="1231" fg:w="19"/><text x="96.3468%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (5 samples, 0.39%)</title><rect x="97.1897%" y="421" width="0.3903%" height="15" fill="rgb(233,13,38)" fg:x="1245" fg:w="5"/><text x="97.4397%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.31%)</title><rect x="97.2678%" y="405" width="0.3123%" height="15" fill="rgb(247,120,19)" fg:x="1246" fg:w="4"/><text x="97.5178%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.31%)</title><rect x="97.2678%" y="389" width="0.3123%" height="15" fill="rgb(205,11,16)" fg:x="1246" fg:w="4"/><text x="97.5178%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.31%)</title><rect x="97.2678%" y="373" width="0.3123%" height="15" fill="rgb(228,185,19)" fg:x="1246" fg:w="4"/><text x="97.5178%" y="383.50"></text></g><g><title>__libc_malloc (4 samples, 0.31%)</title><rect x="97.2678%" y="357" width="0.3123%" height="15" fill="rgb(239,88,52)" fg:x="1246" fg:w="4"/><text x="97.5178%" y="367.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="97.5800%" y="533" width="0.0781%" height="15" fill="rgb(219,23,1)" fg:x="1250" fg:w="1"/><text x="97.8300%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.5800%" y="517" width="0.0781%" height="15" fill="rgb(253,177,16)" fg:x="1250" fg:w="1"/><text x="97.8300%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="97.5800%" y="501" width="0.0781%" height="15" fill="rgb(225,150,40)" fg:x="1250" fg:w="1"/><text x="97.8300%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="97.5800%" y="485" width="0.0781%" height="15" fill="rgb(208,108,30)" fg:x="1250" fg:w="1"/><text x="97.8300%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.5800%" y="469" width="0.0781%" height="15" fill="rgb(214,122,4)" fg:x="1250" fg:w="1"/><text x="97.8300%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.6581%" y="501" width="0.0781%" height="15" fill="rgb(229,74,37)" fg:x="1251" fg:w="1"/><text x="97.9081%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6581%" y="485" width="0.0781%" height="15" fill="rgb(233,61,41)" fg:x="1251" fg:w="1"/><text x="97.9081%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (3 samples, 0.23%)</title><rect x="97.6581%" y="533" width="0.2342%" height="15" fill="rgb(238,191,5)" fg:x="1251" fg:w="3"/><text x="97.9081%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="97.6581%" y="517" width="0.2342%" height="15" fill="rgb(233,78,24)" fg:x="1251" fg:w="3"/><text x="97.9081%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="97.7361%" y="501" width="0.1561%" height="15" fill="rgb(211,142,8)" fg:x="1252" fg:w="2"/><text x="97.9861%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="97.7361%" y="485" width="0.1561%" height="15" fill="rgb(253,38,53)" fg:x="1252" fg:w="2"/><text x="97.9861%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="97.7361%" y="469" width="0.1561%" height="15" fill="rgb(234,63,51)" fg:x="1252" fg:w="2"/><text x="97.9861%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8142%" y="453" width="0.0781%" height="15" fill="rgb(205,23,31)" fg:x="1253" fg:w="1"/><text x="98.0642%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8142%" y="437" width="0.0781%" height="15" fill="rgb(210,184,50)" fg:x="1253" fg:w="1"/><text x="98.0642%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (69 samples, 5.39%)</title><rect x="92.5839%" y="789" width="5.3864%" height="15" fill="rgb(222,112,26)" fg:x="1186" fg:w="69"/><text x="92.8339%" y="799.50">&lt;engine..</text></g><g><title>kernel::plugins::mw::apply_middleware (69 samples, 5.39%)</title><rect x="92.5839%" y="773" width="5.3864%" height="15" fill="rgb(250,98,18)" fg:x="1186" fg:w="69"/><text x="92.8339%" y="783.50">kernel:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (69 samples, 5.39%)</title><rect x="92.5839%" y="757" width="5.3864%" height="15" fill="rgb(250,34,12)" fg:x="1186" fg:w="69"/><text x="92.8339%" y="767.50">kernel:..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (69 samples, 5.39%)</title><rect x="92.5839%" y="741" width="5.3864%" height="15" fill="rgb(236,141,30)" fg:x="1186" fg:w="69"/><text x="92.8339%" y="751.50">&lt;engine..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (53 samples, 4.14%)</title><rect x="93.8329%" y="725" width="4.1374%" height="15" fill="rgb(246,134,38)" fg:x="1202" fg:w="53"/><text x="94.0829%" y="735.50">kerne..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (52 samples, 4.06%)</title><rect x="93.9110%" y="709" width="4.0593%" height="15" fill="rgb(240,114,4)" fg:x="1203" fg:w="52"/><text x="94.1610%" y="719.50">&lt;plu..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (52 samples, 4.06%)</title><rect x="93.9110%" y="693" width="4.0593%" height="15" fill="rgb(243,113,39)" fg:x="1203" fg:w="52"/><text x="94.1610%" y="703.50">kern..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (52 samples, 4.06%)</title><rect x="93.9110%" y="677" width="4.0593%" height="15" fill="rgb(239,215,4)" fg:x="1203" fg:w="52"/><text x="94.1610%" y="687.50">core..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (52 samples, 4.06%)</title><rect x="93.9110%" y="661" width="4.0593%" height="15" fill="rgb(236,229,45)" fg:x="1203" fg:w="52"/><text x="94.1610%" y="671.50">kern..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (52 samples, 4.06%)</title><rect x="93.9110%" y="645" width="4.0593%" height="15" fill="rgb(242,2,6)" fg:x="1203" fg:w="52"/><text x="94.1610%" y="655.50">core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (52 samples, 4.06%)</title><rect x="93.9110%" y="629" width="4.0593%" height="15" fill="rgb(239,108,21)" fg:x="1203" fg:w="52"/><text x="94.1610%" y="639.50">&lt;all..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (52 samples, 4.06%)</title><rect x="93.9110%" y="613" width="4.0593%" height="15" fill="rgb(215,168,34)" fg:x="1203" fg:w="52"/><text x="94.1610%" y="623.50">&lt;eng..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (52 samples, 4.06%)</title><rect x="93.9110%" y="597" width="4.0593%" height="15" fill="rgb(238,31,17)" fg:x="1203" fg:w="52"/><text x="94.1610%" y="607.50">&lt;plu..</text></g><g><title>plugins_core::looking::model::new_area_observation (52 samples, 4.06%)</title><rect x="93.9110%" y="581" width="4.0593%" height="15" fill="rgb(220,133,11)" fg:x="1203" fg:w="52"/><text x="94.1610%" y="591.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (29 samples, 2.26%)</title><rect x="95.7065%" y="565" width="2.2639%" height="15" fill="rgb(212,158,23)" fg:x="1226" fg:w="29"/><text x="95.9565%" y="575.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (29 samples, 2.26%)</title><rect x="95.7065%" y="549" width="2.2639%" height="15" fill="rgb(223,172,7)" fg:x="1226" fg:w="29"/><text x="95.9565%" y="559.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8923%" y="533" width="0.0781%" height="15" fill="rgb(244,3,52)" fg:x="1254" fg:w="1"/><text x="98.1423%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8923%" y="517" width="0.0781%" height="15" fill="rgb(207,69,27)" fg:x="1254" fg:w="1"/><text x="98.1423%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.8923%" y="501" width="0.0781%" height="15" fill="rgb(213,136,45)" fg:x="1254" fg:w="1"/><text x="98.1423%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.8923%" y="485" width="0.0781%" height="15" fill="rgb(218,79,17)" fg:x="1254" fg:w="1"/><text x="98.1423%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="97.8923%" y="469" width="0.0781%" height="15" fill="rgb(216,106,36)" fg:x="1254" fg:w="1"/><text x="98.1423%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8923%" y="453" width="0.0781%" height="15" fill="rgb(251,27,45)" fg:x="1254" fg:w="1"/><text x="98.1423%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8923%" y="437" width="0.0781%" height="15" fill="rgb(232,21,34)" fg:x="1254" fg:w="1"/><text x="98.1423%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.8923%" y="421" width="0.0781%" height="15" fill="rgb(249,191,16)" fg:x="1254" fg:w="1"/><text x="98.1423%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.8923%" y="405" width="0.0781%" height="15" fill="rgb(224,88,20)" fg:x="1254" fg:w="1"/><text x="98.1423%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.0484%" y="709" width="0.0781%" height="15" fill="rgb(237,93,27)" fg:x="1256" fg:w="1"/><text x="98.2984%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.0484%" y="693" width="0.0781%" height="15" fill="rgb(226,198,48)" fg:x="1256" fg:w="1"/><text x="98.2984%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.0484%" y="677" width="0.0781%" height="15" fill="rgb(207,162,53)" fg:x="1256" fg:w="1"/><text x="98.2984%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0484%" y="661" width="0.0781%" height="15" fill="rgb(207,169,9)" fg:x="1256" fg:w="1"/><text x="98.2984%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0484%" y="645" width="0.0781%" height="15" fill="rgb(224,166,46)" fg:x="1256" fg:w="1"/><text x="98.2984%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="98.0484%" y="741" width="0.1561%" height="15" fill="rgb(233,26,6)" fg:x="1256" fg:w="2"/><text x="98.2984%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="98.0484%" y="725" width="0.1561%" height="15" fill="rgb(218,106,45)" fg:x="1256" fg:w="2"/><text x="98.2984%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.1265%" y="709" width="0.0781%" height="15" fill="rgb(240,217,4)" fg:x="1257" fg:w="1"/><text x="98.3765%" y="719.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="98.1265%" y="693" width="0.0781%" height="15" fill="rgb(246,171,10)" fg:x="1257" fg:w="1"/><text x="98.3765%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.1265%" y="677" width="0.0781%" height="15" fill="rgb(223,197,30)" fg:x="1257" fg:w="1"/><text x="98.3765%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="98.1265%" y="661" width="0.0781%" height="15" fill="rgb(207,92,16)" fg:x="1257" fg:w="1"/><text x="98.3765%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.2045%" y="677" width="0.0781%" height="15" fill="rgb(211,6,44)" fg:x="1258" fg:w="1"/><text x="98.4545%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2045%" y="661" width="0.0781%" height="15" fill="rgb(219,139,2)" fg:x="1258" fg:w="1"/><text x="98.4545%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.2826%" y="645" width="0.0781%" height="15" fill="rgb(224,103,21)" fg:x="1259" fg:w="1"/><text x="98.5326%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2826%" y="629" width="0.0781%" height="15" fill="rgb(254,110,48)" fg:x="1259" fg:w="1"/><text x="98.5326%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.3607%" y="581" width="0.0781%" height="15" fill="rgb(212,88,19)" fg:x="1260" fg:w="1"/><text x="98.6107%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.4387%" y="581" width="0.1561%" height="15" fill="rgb(248,103,6)" fg:x="1261" fg:w="2"/><text x="98.6887%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.4387%" y="565" width="0.1561%" height="15" fill="rgb(214,53,46)" fg:x="1261" fg:w="2"/><text x="98.6887%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5168%" y="549" width="0.0781%" height="15" fill="rgb(236,190,24)" fg:x="1262" fg:w="1"/><text x="98.7668%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="98.3607%" y="597" width="0.3903%" height="15" fill="rgb(254,58,28)" fg:x="1260" fg:w="5"/><text x="98.6107%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.5948%" y="581" width="0.1561%" height="15" fill="rgb(243,63,27)" fg:x="1263" fg:w="2"/><text x="98.8448%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.5948%" y="565" width="0.1561%" height="15" fill="rgb(206,81,20)" fg:x="1263" fg:w="2"/><text x="98.8448%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.5948%" y="549" width="0.1561%" height="15" fill="rgb(252,69,51)" fg:x="1263" fg:w="2"/><text x="98.8448%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6729%" y="533" width="0.0781%" height="15" fill="rgb(222,213,4)" fg:x="1264" fg:w="1"/><text x="98.9229%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.6729%" y="517" width="0.0781%" height="15" fill="rgb(226,198,12)" fg:x="1264" fg:w="1"/><text x="98.9229%" y="527.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.70%)</title><rect x="98.2045%" y="725" width="0.7026%" height="15" fill="rgb(248,115,11)" fg:x="1258" fg:w="9"/><text x="98.4545%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.70%)</title><rect x="98.2045%" y="709" width="0.7026%" height="15" fill="rgb(221,148,54)" fg:x="1258" fg:w="9"/><text x="98.4545%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.70%)</title><rect x="98.2045%" y="693" width="0.7026%" height="15" fill="rgb(214,209,51)" fg:x="1258" fg:w="9"/><text x="98.4545%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.62%)</title><rect x="98.2826%" y="677" width="0.6245%" height="15" fill="rgb(249,116,53)" fg:x="1259" fg:w="8"/><text x="98.5326%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.62%)</title><rect x="98.2826%" y="661" width="0.6245%" height="15" fill="rgb(248,170,1)" fg:x="1259" fg:w="8"/><text x="98.5326%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.55%)</title><rect x="98.3607%" y="645" width="0.5464%" height="15" fill="rgb(244,105,10)" fg:x="1260" fg:w="7"/><text x="98.6107%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.55%)</title><rect x="98.3607%" y="629" width="0.5464%" height="15" fill="rgb(229,100,5)" fg:x="1260" fg:w="7"/><text x="98.6107%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.55%)</title><rect x="98.3607%" y="613" width="0.5464%" height="15" fill="rgb(233,221,39)" fg:x="1260" fg:w="7"/><text x="98.6107%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.7510%" y="597" width="0.1561%" height="15" fill="rgb(233,88,21)" fg:x="1265" fg:w="2"/><text x="99.0010%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.7510%" y="581" width="0.1561%" height="15" fill="rgb(206,13,0)" fg:x="1265" fg:w="2"/><text x="99.0010%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.7510%" y="565" width="0.1561%" height="15" fill="rgb(242,15,35)" fg:x="1265" fg:w="2"/><text x="99.0010%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.9852%" y="661" width="0.0781%" height="15" fill="rgb(247,142,41)" fg:x="1268" fg:w="1"/><text x="99.2352%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0632%" y="645" width="0.0781%" height="15" fill="rgb(245,51,29)" fg:x="1269" fg:w="1"/><text x="99.3132%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0632%" y="629" width="0.0781%" height="15" fill="rgb(228,209,43)" fg:x="1269" fg:w="1"/><text x="99.3132%" y="639.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.0632%" y="613" width="0.0781%" height="15" fill="rgb(233,185,9)" fg:x="1269" fg:w="1"/><text x="99.3132%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0632%" y="597" width="0.0781%" height="15" fill="rgb(226,93,0)" fg:x="1269" fg:w="1"/><text x="99.3132%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0632%" y="581" width="0.0781%" height="15" fill="rgb(245,194,43)" fg:x="1269" fg:w="1"/><text x="99.3132%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.31%)</title><rect x="98.9852%" y="693" width="0.3123%" height="15" fill="rgb(211,145,34)" fg:x="1268" fg:w="4"/><text x="99.2352%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="98.9852%" y="677" width="0.3123%" height="15" fill="rgb(231,228,28)" fg:x="1268" fg:w="4"/><text x="99.2352%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.23%)</title><rect x="99.0632%" y="661" width="0.2342%" height="15" fill="rgb(236,149,4)" fg:x="1269" fg:w="3"/><text x="99.3132%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="99.1413%" y="645" width="0.1561%" height="15" fill="rgb(234,114,38)" fg:x="1270" fg:w="2"/><text x="99.3913%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="99.1413%" y="629" width="0.1561%" height="15" fill="rgb(246,132,51)" fg:x="1270" fg:w="2"/><text x="99.3913%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="99.1413%" y="613" width="0.1561%" height="15" fill="rgb(251,137,22)" fg:x="1270" fg:w="2"/><text x="99.3913%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.2194%" y="597" width="0.0781%" height="15" fill="rgb(243,59,52)" fg:x="1271" fg:w="1"/><text x="99.4694%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.2194%" y="581" width="0.0781%" height="15" fill="rgb(239,56,28)" fg:x="1271" fg:w="1"/><text x="99.4694%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.2194%" y="565" width="0.0781%" height="15" fill="rgb(218,168,27)" fg:x="1271" fg:w="1"/><text x="99.4694%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.2974%" y="661" width="0.0781%" height="15" fill="rgb(232,165,11)" fg:x="1272" fg:w="1"/><text x="99.5474%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.2974%" y="645" width="0.0781%" height="15" fill="rgb(253,55,41)" fg:x="1272" fg:w="1"/><text x="99.5474%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (16 samples, 1.25%)</title><rect x="98.2045%" y="741" width="1.2490%" height="15" fill="rgb(233,206,24)" fg:x="1258" fg:w="16"/><text x="98.4545%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="98.9071%" y="725" width="0.5464%" height="15" fill="rgb(220,199,8)" fg:x="1267" fg:w="7"/><text x="99.1571%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="98.9071%" y="709" width="0.5464%" height="15" fill="rgb(254,65,26)" fg:x="1267" fg:w="7"/><text x="99.1571%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.2974%" y="693" width="0.1561%" height="15" fill="rgb(253,102,23)" fg:x="1272" fg:w="2"/><text x="99.5474%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.2974%" y="677" width="0.1561%" height="15" fill="rgb(231,103,35)" fg:x="1272" fg:w="2"/><text x="99.5474%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="99.3755%" y="661" width="0.0781%" height="15" fill="rgb(238,26,10)" fg:x="1273" fg:w="1"/><text x="99.6255%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.4536%" y="693" width="0.0781%" height="15" fill="rgb(234,191,34)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.4536%" y="677" width="0.0781%" height="15" fill="rgb(206,210,9)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.4536%" y="661" width="0.0781%" height="15" fill="rgb(219,155,3)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.4536%" y="645" width="0.0781%" height="15" fill="rgb(221,62,52)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.4536%" y="629" width="0.0781%" height="15" fill="rgb(215,197,36)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.4536%" y="613" width="0.0781%" height="15" fill="rgb(226,222,6)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.4536%" y="597" width="0.0781%" height="15" fill="rgb(215,58,28)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.4536%" y="581" width="0.0781%" height="15" fill="rgb(212,148,2)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.4536%" y="565" width="0.0781%" height="15" fill="rgb(208,21,42)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.4536%" y="549" width="0.0781%" height="15" fill="rgb(209,107,26)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.4536%" y="533" width="0.0781%" height="15" fill="rgb(254,60,47)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.4536%" y="517" width="0.0781%" height="15" fill="rgb(207,226,45)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.4536%" y="501" width="0.0781%" height="15" fill="rgb(223,124,22)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.4536%" y="485" width="0.0781%" height="15" fill="rgb(240,162,13)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.4536%" y="469" width="0.0781%" height="15" fill="rgb(244,199,31)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4536%" y="453" width="0.0781%" height="15" fill="rgb(207,92,16)" fg:x="1274" fg:w="1"/><text x="99.7036%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="99.4536%" y="741" width="0.2342%" height="15" fill="rgb(215,31,19)" fg:x="1274" fg:w="3"/><text x="99.7036%" y="751.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="99.4536%" y="725" width="0.2342%" height="15" fill="rgb(245,118,14)" fg:x="1274" fg:w="3"/><text x="99.7036%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="99.4536%" y="709" width="0.2342%" height="15" fill="rgb(248,12,46)" fg:x="1274" fg:w="3"/><text x="99.7036%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.5316%" y="693" width="0.1561%" height="15" fill="rgb(209,119,0)" fg:x="1275" fg:w="2"/><text x="99.7816%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5316%" y="677" width="0.1561%" height="15" fill="rgb(254,51,44)" fg:x="1275" fg:w="2"/><text x="99.7816%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.5316%" y="661" width="0.1561%" height="15" fill="rgb(253,182,35)" fg:x="1275" fg:w="2"/><text x="99.7816%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5316%" y="645" width="0.1561%" height="15" fill="rgb(205,198,39)" fg:x="1275" fg:w="2"/><text x="99.7816%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.5316%" y="629" width="0.1561%" height="15" fill="rgb(251,175,48)" fg:x="1275" fg:w="2"/><text x="99.7816%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5316%" y="613" width="0.1561%" height="15" fill="rgb(239,38,17)" fg:x="1275" fg:w="2"/><text x="99.7816%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6097%" y="597" width="0.0781%" height="15" fill="rgb(212,101,8)" fg:x="1276" fg:w="1"/><text x="99.8597%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6097%" y="581" width="0.0781%" height="15" fill="rgb(228,35,17)" fg:x="1276" fg:w="1"/><text x="99.8597%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6097%" y="565" width="0.0781%" height="15" fill="rgb(214,95,8)" fg:x="1276" fg:w="1"/><text x="99.8597%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6097%" y="549" width="0.0781%" height="15" fill="rgb(210,176,35)" fg:x="1276" fg:w="1"/><text x="99.8597%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.6097%" y="533" width="0.0781%" height="15" fill="rgb(226,4,3)" fg:x="1276" fg:w="1"/><text x="99.8597%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (23 samples, 1.80%)</title><rect x="97.9703%" y="789" width="1.7955%" height="15" fill="rgb(232,133,14)" fg:x="1255" fg:w="23"/><text x="98.2203%" y="799.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (23 samples, 1.80%)</title><rect x="97.9703%" y="773" width="1.7955%" height="15" fill="rgb(250,191,8)" fg:x="1255" fg:w="23"/><text x="98.2203%" y="783.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (23 samples, 1.80%)</title><rect x="97.9703%" y="757" width="1.7955%" height="15" fill="rgb(213,12,45)" fg:x="1255" fg:w="23"/><text x="98.2203%" y="767.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.6877%" y="741" width="0.0781%" height="15" fill="rgb(233,78,26)" fg:x="1277" fg:w="1"/><text x="99.9377%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6877%" y="725" width="0.0781%" height="15" fill="rgb(245,222,11)" fg:x="1277" fg:w="1"/><text x="99.9377%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6877%" y="709" width="0.0781%" height="15" fill="rgb(216,174,12)" fg:x="1277" fg:w="1"/><text x="99.9377%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="99.6877%" y="693" width="0.0781%" height="15" fill="rgb(213,15,9)" fg:x="1277" fg:w="1"/><text x="99.9377%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6877%" y="677" width="0.0781%" height="15" fill="rgb(238,103,32)" fg:x="1277" fg:w="1"/><text x="99.9377%" y="687.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7658%" y="725" width="0.0781%" height="15" fill="rgb(245,85,15)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.7658%" y="709" width="0.0781%" height="15" fill="rgb(254,204,5)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.7658%" y="693" width="0.0781%" height="15" fill="rgb(231,178,15)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7658%" y="677" width="0.0781%" height="15" fill="rgb(248,151,3)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7658%" y="661" width="0.0781%" height="15" fill="rgb(250,139,13)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.7658%" y="645" width="0.0781%" height="15" fill="rgb(243,107,53)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.7658%" y="629" width="0.0781%" height="15" fill="rgb(232,81,15)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.7658%" y="613" width="0.0781%" height="15" fill="rgb(225,187,48)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.7658%" y="597" width="0.0781%" height="15" fill="rgb(205,116,12)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.7658%" y="581" width="0.0781%" height="15" fill="rgb(220,222,31)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.7658%" y="565" width="0.0781%" height="15" fill="rgb(233,187,49)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.7658%" y="549" width="0.0781%" height="15" fill="rgb(211,168,53)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.7658%" y="533" width="0.0781%" height="15" fill="rgb(206,160,16)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.7658%" y="517" width="0.0781%" height="15" fill="rgb(254,164,13)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.7658%" y="501" width="0.0781%" height="15" fill="rgb(229,45,30)" fg:x="1278" fg:w="1"/><text x="100.0158%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (2 samples, 0.16%)</title><rect x="99.7658%" y="789" width="0.1561%" height="15" fill="rgb(237,32,10)" fg:x="1278" fg:w="2"/><text x="100.0158%" y="799.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="99.7658%" y="773" width="0.1561%" height="15" fill="rgb(251,20,47)" fg:x="1278" fg:w="2"/><text x="100.0158%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="99.7658%" y="757" width="0.1561%" height="15" fill="rgb(251,116,12)" fg:x="1278" fg:w="2"/><text x="100.0158%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.7658%" y="741" width="0.1561%" height="15" fill="rgb(214,227,27)" fg:x="1278" fg:w="2"/><text x="100.0158%" y="751.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.8439%" y="725" width="0.0781%" height="15" fill="rgb(248,10,53)" fg:x="1279" fg:w="1"/><text x="100.0939%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8439%" y="709" width="0.0781%" height="15" fill="rgb(221,176,25)" fg:x="1279" fg:w="1"/><text x="100.0939%" y="719.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.8439%" y="693" width="0.0781%" height="15" fill="rgb(205,70,46)" fg:x="1279" fg:w="1"/><text x="100.0939%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8439%" y="677" width="0.0781%" height="15" fill="rgb(217,45,38)" fg:x="1279" fg:w="1"/><text x="100.0939%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.8439%" y="661" width="0.0781%" height="15" fill="rgb(243,6,54)" fg:x="1279" fg:w="1"/><text x="100.0939%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.8439%" y="645" width="0.0781%" height="15" fill="rgb(242,76,23)" fg:x="1279" fg:w="1"/><text x="100.0939%" y="655.50"></text></g><g><title>all (1,281 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(239,166,0)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="1183.50"></text></g><g><title>simple-81fabdd1 (1,281 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(238,174,32)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="1167.50">simple-81fabdd1</text></g><g><title>_start (1,281 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(238,124,44)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="1151.50">_start</text></g><g><title>__libc_start_main (1,281 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(206,185,9)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="1135.50">__libc_start_main</text></g><g><title>main (1,281 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(215,157,17)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="1119.50">main</text></g><g><title>std::rt::lang_start_internal (1,281 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(251,17,29)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="1103.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,281 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(227,113,27)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="1087.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,281 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(217,226,24)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="1071.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,281 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(251,99,38)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="1055.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,281 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(231,147,19)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="1039.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,281 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(230,86,8)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,281 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(237,159,39)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,281 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(247,179,47)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="991.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,281 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(253,152,26)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="975.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,281 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(222,211,15)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="959.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,281 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(236,193,6)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="943.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,281 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(226,206,10)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="927.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,281 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(213,125,22)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="911.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,281 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(221,66,28)" fg:x="0" fg:w="1281"/><text x="0.2500%" y="895.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (371 samples, 28.96%)</title><rect x="71.0383%" y="869" width="28.9617%" height="15" fill="rgb(222,84,53)" fg:x="910" fg:w="371"/><text x="71.2883%" y="879.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criteri..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (371 samples, 28.96%)</title><rect x="71.0383%" y="853" width="28.9617%" height="15" fill="rgb(243,50,15)" fg:x="910" fg:w="371"/><text x="71.2883%" y="863.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (371 samples, 28.96%)</title><rect x="71.0383%" y="837" width="28.9617%" height="15" fill="rgb(208,184,23)" fg:x="910" fg:w="371"/><text x="71.2883%" y="847.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (95 samples, 7.42%)</title><rect x="92.5839%" y="821" width="7.4161%" height="15" fill="rgb(221,83,2)" fg:x="1186" fg:w="95"/><text x="92.8339%" y="831.50">engine::se..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (95 samples, 7.42%)</title><rect x="92.5839%" y="805" width="7.4161%" height="15" fill="rgb(236,53,24)" fg:x="1186" fg:w="95"/><text x="92.8339%" y="815.50">engine::se..</text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="99.9219%" y="789" width="0.0781%" height="15" fill="rgb(244,171,29)" fg:x="1280" fg:w="1"/><text x="100.1719%" y="799.50"></text></g></svg></svg>