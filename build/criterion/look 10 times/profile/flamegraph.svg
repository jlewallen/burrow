<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1093.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1093.00"> </text><svg id="frames" x="10" width="1180" total_samples="1248"><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="0.1603%" y="709" width="0.0801%" height="15" fill="rgb(214,93,52)" fg:x="2" fg:w="1"/><text x="0.4103%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.2404%" y="693" width="0.0801%" height="15" fill="rgb(251,37,40)" fg:x="3" fg:w="1"/><text x="0.4904%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5609%" y="597" width="0.0801%" height="15" fill="rgb(227,80,54)" fg:x="7" fg:w="1"/><text x="0.8109%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="0.6410%" y="597" width="0.4006%" height="15" fill="rgb(254,48,11)" fg:x="8" fg:w="5"/><text x="0.8910%" y="607.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.8013%" y="581" width="0.2404%" height="15" fill="rgb(235,193,26)" fg:x="10" fg:w="3"/><text x="1.0513%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="1.0417%" y="581" width="0.3205%" height="15" fill="rgb(229,99,21)" fg:x="13" fg:w="4"/><text x="1.2917%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="1.1218%" y="565" width="0.2404%" height="15" fill="rgb(211,140,41)" fg:x="14" fg:w="3"/><text x="1.3718%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.2019%" y="549" width="0.1603%" height="15" fill="rgb(240,227,30)" fg:x="15" fg:w="2"/><text x="1.4519%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2821%" y="533" width="0.0801%" height="15" fill="rgb(215,224,45)" fg:x="16" fg:w="1"/><text x="1.5321%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.3622%" y="581" width="0.1603%" height="15" fill="rgb(206,123,31)" fg:x="17" fg:w="2"/><text x="1.6122%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.5224%" y="581" width="0.0801%" height="15" fill="rgb(210,138,16)" fg:x="19" fg:w="1"/><text x="1.7724%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6827%" y="565" width="0.0801%" height="15" fill="rgb(228,57,28)" fg:x="21" fg:w="1"/><text x="1.9327%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.36%)</title><rect x="0.4808%" y="613" width="1.3622%" height="15" fill="rgb(242,170,10)" fg:x="6" fg:w="17"/><text x="0.7308%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="1.0417%" y="597" width="0.8013%" height="15" fill="rgb(228,214,39)" fg:x="13" fg:w="10"/><text x="1.2917%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.6026%" y="581" width="0.2404%" height="15" fill="rgb(218,179,33)" fg:x="20" fg:w="3"/><text x="1.8526%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.7628%" y="565" width="0.0801%" height="15" fill="rgb(235,193,39)" fg:x="22" fg:w="1"/><text x="2.0128%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7628%" y="549" width="0.0801%" height="15" fill="rgb(219,221,36)" fg:x="22" fg:w="1"/><text x="2.0128%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.44%)</title><rect x="0.4808%" y="629" width="1.4423%" height="15" fill="rgb(248,218,19)" fg:x="6" fg:w="18"/><text x="0.7308%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8429%" y="613" width="0.0801%" height="15" fill="rgb(205,50,9)" fg:x="23" fg:w="1"/><text x="2.0929%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="0.4808%" y="645" width="1.5224%" height="15" fill="rgb(238,81,28)" fg:x="6" fg:w="19"/><text x="0.7308%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9231%" y="629" width="0.0801%" height="15" fill="rgb(235,110,19)" fg:x="24" fg:w="1"/><text x="2.1731%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.84%)</title><rect x="0.2404%" y="709" width="1.8429%" height="15" fill="rgb(214,7,14)" fg:x="3" fg:w="23"/><text x="0.4904%" y="719.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (22 samples, 1.76%)</title><rect x="0.3205%" y="693" width="1.7628%" height="15" fill="rgb(211,77,3)" fg:x="4" fg:w="22"/><text x="0.5705%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.68%)</title><rect x="0.4006%" y="677" width="1.6827%" height="15" fill="rgb(229,5,9)" fg:x="5" fg:w="21"/><text x="0.6506%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (20 samples, 1.60%)</title><rect x="0.4808%" y="661" width="1.6026%" height="15" fill="rgb(225,90,11)" fg:x="6" fg:w="20"/><text x="0.7308%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="2.0032%" y="645" width="0.0801%" height="15" fill="rgb(242,56,8)" fg:x="25" fg:w="1"/><text x="2.2532%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0032%" y="629" width="0.0801%" height="15" fill="rgb(249,212,39)" fg:x="25" fg:w="1"/><text x="2.2532%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.1635%" y="661" width="0.0801%" height="15" fill="rgb(236,90,9)" fg:x="27" fg:w="1"/><text x="2.4135%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.2436%" y="613" width="0.0801%" height="15" fill="rgb(206,88,35)" fg:x="28" fg:w="1"/><text x="2.4936%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.2436%" y="597" width="0.0801%" height="15" fill="rgb(205,126,30)" fg:x="28" fg:w="1"/><text x="2.4936%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.2436%" y="581" width="0.0801%" height="15" fill="rgb(230,176,12)" fg:x="28" fg:w="1"/><text x="2.4936%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.2436%" y="565" width="0.0801%" height="15" fill="rgb(243,19,9)" fg:x="28" fg:w="1"/><text x="2.4936%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.2436%" y="549" width="0.0801%" height="15" fill="rgb(245,171,17)" fg:x="28" fg:w="1"/><text x="2.4936%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.2436%" y="533" width="0.0801%" height="15" fill="rgb(227,52,21)" fg:x="28" fg:w="1"/><text x="2.4936%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="2.2436%" y="517" width="0.0801%" height="15" fill="rgb(238,69,14)" fg:x="28" fg:w="1"/><text x="2.4936%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.2436%" y="501" width="0.0801%" height="15" fill="rgb(241,156,39)" fg:x="28" fg:w="1"/><text x="2.4936%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.2436%" y="485" width="0.0801%" height="15" fill="rgb(212,227,28)" fg:x="28" fg:w="1"/><text x="2.4936%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.2436%" y="469" width="0.0801%" height="15" fill="rgb(209,118,27)" fg:x="28" fg:w="1"/><text x="2.4936%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.2436%" y="453" width="0.0801%" height="15" fill="rgb(226,102,5)" fg:x="28" fg:w="1"/><text x="2.4936%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.2436%" y="437" width="0.0801%" height="15" fill="rgb(223,34,3)" fg:x="28" fg:w="1"/><text x="2.4936%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.2436%" y="421" width="0.0801%" height="15" fill="rgb(221,81,38)" fg:x="28" fg:w="1"/><text x="2.4936%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="2.2436%" y="405" width="0.0801%" height="15" fill="rgb(236,219,28)" fg:x="28" fg:w="1"/><text x="2.4936%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.2436%" y="389" width="0.0801%" height="15" fill="rgb(213,200,14)" fg:x="28" fg:w="1"/><text x="2.4936%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="2.2436%" y="373" width="0.0801%" height="15" fill="rgb(240,33,19)" fg:x="28" fg:w="1"/><text x="2.4936%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="2.2436%" y="357" width="0.0801%" height="15" fill="rgb(233,113,27)" fg:x="28" fg:w="1"/><text x="2.4936%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="2.2436%" y="341" width="0.0801%" height="15" fill="rgb(220,221,18)" fg:x="28" fg:w="1"/><text x="2.4936%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.2436%" y="325" width="0.0801%" height="15" fill="rgb(238,92,8)" fg:x="28" fg:w="1"/><text x="2.4936%" y="335.50"></text></g><g><title>__asprintf (4 samples, 0.32%)</title><rect x="2.4038%" y="581" width="0.3205%" height="15" fill="rgb(222,164,16)" fg:x="30" fg:w="4"/><text x="2.6538%" y="591.50"></text></g><g><title>dlerror (6 samples, 0.48%)</title><rect x="2.3237%" y="597" width="0.4808%" height="15" fill="rgb(241,119,3)" fg:x="29" fg:w="6"/><text x="2.5737%" y="607.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="2.7244%" y="581" width="0.0801%" height="15" fill="rgb(241,44,8)" fg:x="34" fg:w="1"/><text x="2.9744%" y="591.50"></text></g><g><title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="2.8045%" y="533" width="0.0801%" height="15" fill="rgb(230,36,40)" fg:x="35" fg:w="1"/><text x="3.0545%" y="543.50"></text></g><g><title>libloading::safe::Library::new (10 samples, 0.80%)</title><rect x="2.3237%" y="613" width="0.8013%" height="15" fill="rgb(243,16,36)" fg:x="29" fg:w="10"/><text x="2.5737%" y="623.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="2.8045%" y="597" width="0.3205%" height="15" fill="rgb(231,4,26)" fg:x="35" fg:w="4"/><text x="3.0545%" y="607.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="2.8045%" y="581" width="0.3205%" height="15" fill="rgb(240,9,31)" fg:x="35" fg:w="4"/><text x="3.0545%" y="591.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="2.8045%" y="565" width="0.3205%" height="15" fill="rgb(207,173,15)" fg:x="35" fg:w="4"/><text x="3.0545%" y="575.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="2.8045%" y="549" width="0.3205%" height="15" fill="rgb(224,192,53)" fg:x="35" fg:w="4"/><text x="3.0545%" y="559.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="2.8846%" y="533" width="0.2404%" height="15" fill="rgb(223,67,28)" fg:x="36" fg:w="3"/><text x="3.1346%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (12 samples, 0.96%)</title><rect x="2.2436%" y="629" width="0.9615%" height="15" fill="rgb(211,20,47)" fg:x="28" fg:w="12"/><text x="2.4936%" y="639.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="3.1250%" y="613" width="0.0801%" height="15" fill="rgb(240,228,2)" fg:x="39" fg:w="1"/><text x="3.3750%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (15 samples, 1.20%)</title><rect x="2.2436%" y="645" width="1.2019%" height="15" fill="rgb(248,151,12)" fg:x="28" fg:w="15"/><text x="2.4936%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.24%)</title><rect x="3.2051%" y="629" width="0.2404%" height="15" fill="rgb(244,8,39)" fg:x="40" fg:w="3"/><text x="3.4551%" y="639.50"></text></g><g><title>clock_gettime (3 samples, 0.24%)</title><rect x="3.2051%" y="613" width="0.2404%" height="15" fill="rgb(222,26,8)" fg:x="40" fg:w="3"/><text x="3.4551%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="3.6058%" y="597" width="0.0801%" height="15" fill="rgb(213,106,44)" fg:x="45" fg:w="1"/><text x="3.8558%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.6058%" y="581" width="0.0801%" height="15" fill="rgb(214,129,20)" fg:x="45" fg:w="1"/><text x="3.8558%" y="591.50"></text></g><g><title>engine::session::Session::initialize (23 samples, 1.84%)</title><rect x="2.2436%" y="661" width="1.8429%" height="15" fill="rgb(212,32,13)" fg:x="28" fg:w="23"/><text x="2.4936%" y="671.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (8 samples, 0.64%)</title><rect x="3.4455%" y="645" width="0.6410%" height="15" fill="rgb(208,168,33)" fg:x="43" fg:w="8"/><text x="3.6955%" y="655.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.64%)</title><rect x="3.4455%" y="629" width="0.6410%" height="15" fill="rgb(231,207,8)" fg:x="43" fg:w="8"/><text x="3.6955%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="3.4455%" y="613" width="0.6410%" height="15" fill="rgb(235,219,23)" fg:x="43" fg:w="8"/><text x="3.6955%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="3.6859%" y="597" width="0.4006%" height="15" fill="rgb(226,216,26)" fg:x="46" fg:w="5"/><text x="3.9359%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="3.6859%" y="581" width="0.4006%" height="15" fill="rgb(239,137,16)" fg:x="46" fg:w="5"/><text x="3.9359%" y="591.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="3.6859%" y="565" width="0.4006%" height="15" fill="rgb(207,12,36)" fg:x="46" fg:w="5"/><text x="3.9359%" y="575.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (26 samples, 2.08%)</title><rect x="2.0833%" y="709" width="2.0833%" height="15" fill="rgb(210,214,24)" fg:x="26" fg:w="26"/><text x="2.3333%" y="719.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (26 samples, 2.08%)</title><rect x="2.0833%" y="693" width="2.0833%" height="15" fill="rgb(206,56,30)" fg:x="26" fg:w="26"/><text x="2.3333%" y="703.50">e..</text></g><g><title>engine::session::Session::new (25 samples, 2.00%)</title><rect x="2.1635%" y="677" width="2.0032%" height="15" fill="rgb(228,143,26)" fg:x="27" fg:w="25"/><text x="2.4135%" y="687.50">e..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="4.0865%" y="661" width="0.0801%" height="15" fill="rgb(216,218,46)" fg:x="51" fg:w="1"/><text x="4.3365%" y="671.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="4.0865%" y="645" width="0.0801%" height="15" fill="rgb(206,6,19)" fg:x="51" fg:w="1"/><text x="4.3365%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.0865%" y="629" width="0.0801%" height="15" fill="rgb(239,177,51)" fg:x="51" fg:w="1"/><text x="4.3365%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="4.0865%" y="613" width="0.0801%" height="15" fill="rgb(216,55,25)" fg:x="51" fg:w="1"/><text x="4.3365%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.0865%" y="597" width="0.0801%" height="15" fill="rgb(231,163,29)" fg:x="51" fg:w="1"/><text x="4.3365%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.2468%" y="693" width="0.0801%" height="15" fill="rgb(232,149,50)" fg:x="53" fg:w="1"/><text x="4.4968%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.2468%" y="677" width="0.0801%" height="15" fill="rgb(223,142,48)" fg:x="53" fg:w="1"/><text x="4.4968%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.2468%" y="661" width="0.0801%" height="15" fill="rgb(245,83,23)" fg:x="53" fg:w="1"/><text x="4.4968%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.2468%" y="645" width="0.0801%" height="15" fill="rgb(224,63,2)" fg:x="53" fg:w="1"/><text x="4.4968%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.2468%" y="629" width="0.0801%" height="15" fill="rgb(218,65,53)" fg:x="53" fg:w="1"/><text x="4.4968%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.2468%" y="613" width="0.0801%" height="15" fill="rgb(221,84,29)" fg:x="53" fg:w="1"/><text x="4.4968%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.2468%" y="597" width="0.0801%" height="15" fill="rgb(234,0,32)" fg:x="53" fg:w="1"/><text x="4.4968%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.2468%" y="581" width="0.0801%" height="15" fill="rgb(206,20,16)" fg:x="53" fg:w="1"/><text x="4.4968%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.2468%" y="565" width="0.0801%" height="15" fill="rgb(244,172,18)" fg:x="53" fg:w="1"/><text x="4.4968%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.2468%" y="549" width="0.0801%" height="15" fill="rgb(254,133,1)" fg:x="53" fg:w="1"/><text x="4.4968%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.2468%" y="533" width="0.0801%" height="15" fill="rgb(222,206,41)" fg:x="53" fg:w="1"/><text x="4.4968%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.2468%" y="517" width="0.0801%" height="15" fill="rgb(212,3,42)" fg:x="53" fg:w="1"/><text x="4.4968%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.2468%" y="501" width="0.0801%" height="15" fill="rgb(241,11,4)" fg:x="53" fg:w="1"/><text x="4.4968%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (2 samples, 0.16%)</title><rect x="4.3269%" y="693" width="0.1603%" height="15" fill="rgb(205,19,26)" fg:x="54" fg:w="2"/><text x="4.5769%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="4.3269%" y="677" width="0.1603%" height="15" fill="rgb(210,179,32)" fg:x="54" fg:w="2"/><text x="4.5769%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="4.3269%" y="661" width="0.1603%" height="15" fill="rgb(227,116,49)" fg:x="54" fg:w="2"/><text x="4.5769%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="4.3269%" y="645" width="0.1603%" height="15" fill="rgb(211,146,6)" fg:x="54" fg:w="2"/><text x="4.5769%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.4872%" y="677" width="0.0801%" height="15" fill="rgb(219,44,39)" fg:x="56" fg:w="1"/><text x="4.7372%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="4.4872%" y="661" width="0.0801%" height="15" fill="rgb(234,128,11)" fg:x="56" fg:w="1"/><text x="4.7372%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.4872%" y="645" width="0.0801%" height="15" fill="rgb(220,183,53)" fg:x="56" fg:w="1"/><text x="4.7372%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (2 samples, 0.16%)</title><rect x="4.4872%" y="693" width="0.1603%" height="15" fill="rgb(213,219,32)" fg:x="56" fg:w="2"/><text x="4.7372%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="4.5673%" y="677" width="0.0801%" height="15" fill="rgb(232,156,16)" fg:x="57" fg:w="1"/><text x="4.8173%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.5673%" y="661" width="0.0801%" height="15" fill="rgb(246,135,34)" fg:x="57" fg:w="1"/><text x="4.8173%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.5673%" y="645" width="0.0801%" height="15" fill="rgb(241,99,0)" fg:x="57" fg:w="1"/><text x="4.8173%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.7276%" y="581" width="0.0801%" height="15" fill="rgb(222,103,45)" fg:x="59" fg:w="1"/><text x="4.9776%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.7276%" y="565" width="0.0801%" height="15" fill="rgb(212,57,4)" fg:x="59" fg:w="1"/><text x="4.9776%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.7276%" y="549" width="0.0801%" height="15" fill="rgb(215,68,47)" fg:x="59" fg:w="1"/><text x="4.9776%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.7276%" y="533" width="0.0801%" height="15" fill="rgb(230,84,2)" fg:x="59" fg:w="1"/><text x="4.9776%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.7276%" y="517" width="0.0801%" height="15" fill="rgb(220,102,14)" fg:x="59" fg:w="1"/><text x="4.9776%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.7276%" y="501" width="0.0801%" height="15" fill="rgb(240,10,32)" fg:x="59" fg:w="1"/><text x="4.9776%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.7276%" y="485" width="0.0801%" height="15" fill="rgb(215,47,27)" fg:x="59" fg:w="1"/><text x="4.9776%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="4.7276%" y="661" width="0.3205%" height="15" fill="rgb(233,188,43)" fg:x="59" fg:w="4"/><text x="4.9776%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="4.7276%" y="645" width="0.3205%" height="15" fill="rgb(253,190,1)" fg:x="59" fg:w="4"/><text x="4.9776%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="4.7276%" y="629" width="0.3205%" height="15" fill="rgb(206,114,52)" fg:x="59" fg:w="4"/><text x="4.9776%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="4.7276%" y="613" width="0.3205%" height="15" fill="rgb(233,120,37)" fg:x="59" fg:w="4"/><text x="4.9776%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="4.7276%" y="597" width="0.3205%" height="15" fill="rgb(214,52,39)" fg:x="59" fg:w="4"/><text x="4.9776%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.24%)</title><rect x="4.8077%" y="581" width="0.2404%" height="15" fill="rgb(223,80,29)" fg:x="60" fg:w="3"/><text x="5.0577%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.24%)</title><rect x="4.8077%" y="565" width="0.2404%" height="15" fill="rgb(230,101,40)" fg:x="60" fg:w="3"/><text x="5.0577%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.0481%" y="661" width="0.0801%" height="15" fill="rgb(219,211,8)" fg:x="63" fg:w="1"/><text x="5.2981%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.1282%" y="661" width="0.0801%" height="15" fill="rgb(252,126,28)" fg:x="64" fg:w="1"/><text x="5.3782%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (8 samples, 0.64%)</title><rect x="4.6474%" y="677" width="0.6410%" height="15" fill="rgb(215,56,38)" fg:x="58" fg:w="8"/><text x="4.8974%" y="687.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="5.2083%" y="661" width="0.0801%" height="15" fill="rgb(249,55,44)" fg:x="65" fg:w="1"/><text x="5.4583%" y="671.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="5.2885%" y="677" width="0.0801%" height="15" fill="rgb(220,221,32)" fg:x="66" fg:w="1"/><text x="5.5385%" y="687.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="5.2885%" y="661" width="0.0801%" height="15" fill="rgb(212,216,41)" fg:x="66" fg:w="1"/><text x="5.5385%" y="671.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="5.2885%" y="645" width="0.0801%" height="15" fill="rgb(228,213,43)" fg:x="66" fg:w="1"/><text x="5.5385%" y="655.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="5.2885%" y="629" width="0.0801%" height="15" fill="rgb(211,31,26)" fg:x="66" fg:w="1"/><text x="5.5385%" y="639.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="5.2885%" y="613" width="0.0801%" height="15" fill="rgb(229,202,19)" fg:x="66" fg:w="1"/><text x="5.5385%" y="623.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="5.2885%" y="597" width="0.0801%" height="15" fill="rgb(229,105,46)" fg:x="66" fg:w="1"/><text x="5.5385%" y="607.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="5.2885%" y="581" width="0.0801%" height="15" fill="rgb(235,108,1)" fg:x="66" fg:w="1"/><text x="5.5385%" y="591.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="5.2885%" y="565" width="0.0801%" height="15" fill="rgb(245,111,35)" fg:x="66" fg:w="1"/><text x="5.5385%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="5.3686%" y="613" width="0.0801%" height="15" fill="rgb(219,185,31)" fg:x="67" fg:w="1"/><text x="5.6186%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.3686%" y="645" width="0.1603%" height="15" fill="rgb(214,4,43)" fg:x="67" fg:w="2"/><text x="5.6186%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="5.3686%" y="629" width="0.1603%" height="15" fill="rgb(235,227,40)" fg:x="67" fg:w="2"/><text x="5.6186%" y="639.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="5.4487%" y="613" width="0.0801%" height="15" fill="rgb(230,88,30)" fg:x="68" fg:w="1"/><text x="5.6987%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="5.6090%" y="613" width="0.0801%" height="15" fill="rgb(216,217,1)" fg:x="70" fg:w="1"/><text x="5.8590%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="5.6090%" y="597" width="0.0801%" height="15" fill="rgb(248,139,50)" fg:x="70" fg:w="1"/><text x="5.8590%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="5.6090%" y="581" width="0.0801%" height="15" fill="rgb(233,1,21)" fg:x="70" fg:w="1"/><text x="5.8590%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="5.6090%" y="565" width="0.0801%" height="15" fill="rgb(215,183,12)" fg:x="70" fg:w="1"/><text x="5.8590%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.6090%" y="549" width="0.0801%" height="15" fill="rgb(229,104,42)" fg:x="70" fg:w="1"/><text x="5.8590%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.6090%" y="533" width="0.0801%" height="15" fill="rgb(243,34,48)" fg:x="70" fg:w="1"/><text x="5.8590%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.6090%" y="517" width="0.0801%" height="15" fill="rgb(239,11,44)" fg:x="70" fg:w="1"/><text x="5.8590%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.6090%" y="501" width="0.0801%" height="15" fill="rgb(231,98,35)" fg:x="70" fg:w="1"/><text x="5.8590%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="5.6891%" y="597" width="0.1603%" height="15" fill="rgb(233,28,25)" fg:x="71" fg:w="2"/><text x="5.9391%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.6891%" y="581" width="0.1603%" height="15" fill="rgb(234,123,11)" fg:x="71" fg:w="2"/><text x="5.9391%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.7692%" y="565" width="0.0801%" height="15" fill="rgb(220,69,3)" fg:x="72" fg:w="1"/><text x="6.0192%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.0096%" y="581" width="0.0801%" height="15" fill="rgb(214,64,36)" fg:x="75" fg:w="1"/><text x="6.2596%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.0897%" y="581" width="0.1603%" height="15" fill="rgb(211,138,32)" fg:x="76" fg:w="2"/><text x="6.3397%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.0897%" y="565" width="0.1603%" height="15" fill="rgb(213,118,47)" fg:x="76" fg:w="2"/><text x="6.3397%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.1699%" y="549" width="0.0801%" height="15" fill="rgb(243,124,49)" fg:x="77" fg:w="1"/><text x="6.4199%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.1699%" y="533" width="0.0801%" height="15" fill="rgb(221,30,28)" fg:x="77" fg:w="1"/><text x="6.4199%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.2500%" y="533" width="0.0801%" height="15" fill="rgb(246,37,13)" fg:x="78" fg:w="1"/><text x="6.5000%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.2500%" y="517" width="0.0801%" height="15" fill="rgb(249,66,14)" fg:x="78" fg:w="1"/><text x="6.5000%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.2500%" y="501" width="0.0801%" height="15" fill="rgb(213,166,5)" fg:x="78" fg:w="1"/><text x="6.5000%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.2500%" y="485" width="0.0801%" height="15" fill="rgb(221,66,24)" fg:x="78" fg:w="1"/><text x="6.5000%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.2500%" y="469" width="0.0801%" height="15" fill="rgb(210,132,17)" fg:x="78" fg:w="1"/><text x="6.5000%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.2500%" y="453" width="0.0801%" height="15" fill="rgb(243,202,5)" fg:x="78" fg:w="1"/><text x="6.5000%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.2500%" y="437" width="0.0801%" height="15" fill="rgb(233,70,48)" fg:x="78" fg:w="1"/><text x="6.5000%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="6.2500%" y="565" width="0.1603%" height="15" fill="rgb(238,41,26)" fg:x="78" fg:w="2"/><text x="6.5000%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="6.2500%" y="549" width="0.1603%" height="15" fill="rgb(241,19,31)" fg:x="78" fg:w="2"/><text x="6.5000%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.3301%" y="533" width="0.0801%" height="15" fill="rgb(214,76,10)" fg:x="79" fg:w="1"/><text x="6.5801%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.3301%" y="517" width="0.0801%" height="15" fill="rgb(254,202,22)" fg:x="79" fg:w="1"/><text x="6.5801%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="6.3301%" y="501" width="0.0801%" height="15" fill="rgb(214,72,24)" fg:x="79" fg:w="1"/><text x="6.5801%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="6.6506%" y="517" width="0.4006%" height="15" fill="rgb(221,92,46)" fg:x="83" fg:w="5"/><text x="6.9006%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.9712%" y="501" width="0.0801%" height="15" fill="rgb(246,13,50)" fg:x="87" fg:w="1"/><text x="7.2212%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.9712%" y="485" width="0.0801%" height="15" fill="rgb(240,165,38)" fg:x="87" fg:w="1"/><text x="7.2212%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.9712%" y="469" width="0.0801%" height="15" fill="rgb(241,24,51)" fg:x="87" fg:w="1"/><text x="7.2212%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.72%)</title><rect x="6.4103%" y="565" width="0.7212%" height="15" fill="rgb(227,51,44)" fg:x="80" fg:w="9"/><text x="6.6603%" y="575.50"></text></g><g><title>std::io::Write::write_all (9 samples, 0.72%)</title><rect x="6.4103%" y="549" width="0.7212%" height="15" fill="rgb(231,121,3)" fg:x="80" fg:w="9"/><text x="6.6603%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="6.6506%" y="533" width="0.4808%" height="15" fill="rgb(245,3,41)" fg:x="83" fg:w="6"/><text x="6.9006%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="7.0513%" y="517" width="0.0801%" height="15" fill="rgb(214,13,26)" fg:x="88" fg:w="1"/><text x="7.3013%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="7.1314%" y="549" width="0.4808%" height="15" fill="rgb(252,75,11)" fg:x="89" fg:w="6"/><text x="7.3814%" y="559.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="7.1314%" y="533" width="0.4808%" height="15" fill="rgb(218,226,17)" fg:x="89" fg:w="6"/><text x="7.3814%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.4519%" y="517" width="0.1603%" height="15" fill="rgb(248,89,38)" fg:x="93" fg:w="2"/><text x="7.7019%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.4519%" y="501" width="0.1603%" height="15" fill="rgb(237,73,46)" fg:x="93" fg:w="2"/><text x="7.7019%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.6923%" y="533" width="0.0801%" height="15" fill="rgb(242,78,33)" fg:x="96" fg:w="1"/><text x="7.9423%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="7.7724%" y="533" width="0.4006%" height="15" fill="rgb(235,60,3)" fg:x="97" fg:w="5"/><text x="8.0224%" y="543.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="7.7724%" y="517" width="0.4006%" height="15" fill="rgb(216,172,19)" fg:x="97" fg:w="5"/><text x="8.0224%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.0128%" y="501" width="0.1603%" height="15" fill="rgb(227,6,42)" fg:x="100" fg:w="2"/><text x="8.2628%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.0128%" y="485" width="0.1603%" height="15" fill="rgb(223,207,42)" fg:x="100" fg:w="2"/><text x="8.2628%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="8.1731%" y="533" width="0.3205%" height="15" fill="rgb(246,138,30)" fg:x="102" fg:w="4"/><text x="8.4231%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="8.2532%" y="517" width="0.2404%" height="15" fill="rgb(251,199,47)" fg:x="103" fg:w="3"/><text x="8.5032%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.4936%" y="501" width="0.0801%" height="15" fill="rgb(228,218,44)" fg:x="106" fg:w="1"/><text x="8.7436%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="7.6122%" y="549" width="1.0417%" height="15" fill="rgb(220,68,6)" fg:x="95" fg:w="13"/><text x="7.8622%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.4936%" y="533" width="0.1603%" height="15" fill="rgb(240,60,26)" fg:x="106" fg:w="2"/><text x="8.7436%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.4936%" y="517" width="0.1603%" height="15" fill="rgb(211,200,19)" fg:x="106" fg:w="2"/><text x="8.7436%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.5737%" y="501" width="0.0801%" height="15" fill="rgb(242,145,30)" fg:x="107" fg:w="1"/><text x="8.8237%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="7.1314%" y="565" width="1.6026%" height="15" fill="rgb(225,64,13)" fg:x="89" fg:w="20"/><text x="7.3814%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.6538%" y="549" width="0.0801%" height="15" fill="rgb(218,103,35)" fg:x="108" fg:w="1"/><text x="8.9038%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.6538%" y="533" width="0.0801%" height="15" fill="rgb(216,93,46)" fg:x="108" fg:w="1"/><text x="8.9038%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.6538%" y="517" width="0.0801%" height="15" fill="rgb(225,159,27)" fg:x="108" fg:w="1"/><text x="8.9038%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.80%)</title><rect x="6.2500%" y="581" width="2.8045%" height="15" fill="rgb(225,204,11)" fg:x="78" fg:w="35"/><text x="6.5000%" y="591.50">se..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="8.7340%" y="565" width="0.3205%" height="15" fill="rgb(205,56,4)" fg:x="109" fg:w="4"/><text x="8.9840%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.8942%" y="549" width="0.1603%" height="15" fill="rgb(206,6,35)" fg:x="111" fg:w="2"/><text x="9.1442%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.9744%" y="533" width="0.0801%" height="15" fill="rgb(247,73,52)" fg:x="112" fg:w="1"/><text x="9.2244%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="9.0545%" y="549" width="0.1603%" height="15" fill="rgb(246,97,4)" fg:x="113" fg:w="2"/><text x="9.3045%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (45 samples, 3.61%)</title><rect x="5.6891%" y="613" width="3.6058%" height="15" fill="rgb(212,37,15)" fg:x="71" fg:w="45"/><text x="5.9391%" y="623.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (43 samples, 3.45%)</title><rect x="5.8494%" y="597" width="3.4455%" height="15" fill="rgb(208,130,40)" fg:x="73" fg:w="43"/><text x="6.0994%" y="607.50">ser..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="9.0545%" y="581" width="0.2404%" height="15" fill="rgb(236,55,29)" fg:x="113" fg:w="3"/><text x="9.3045%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="9.0545%" y="565" width="0.2404%" height="15" fill="rgb(209,156,45)" fg:x="113" fg:w="3"/><text x="9.3045%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="9.2147%" y="549" width="0.0801%" height="15" fill="rgb(249,107,4)" fg:x="115" fg:w="1"/><text x="9.4647%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.2949%" y="581" width="0.0801%" height="15" fill="rgb(227,7,13)" fg:x="116" fg:w="1"/><text x="9.5449%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="9.4551%" y="565" width="0.1603%" height="15" fill="rgb(250,129,14)" fg:x="118" fg:w="2"/><text x="9.7051%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.6154%" y="565" width="0.0801%" height="15" fill="rgb(229,92,13)" fg:x="120" fg:w="1"/><text x="9.8654%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.6154%" y="549" width="0.0801%" height="15" fill="rgb(245,98,39)" fg:x="120" fg:w="1"/><text x="9.8654%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.6955%" y="549" width="0.0801%" height="15" fill="rgb(234,135,48)" fg:x="121" fg:w="1"/><text x="9.9455%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.7756%" y="533" width="0.0801%" height="15" fill="rgb(230,98,28)" fg:x="122" fg:w="1"/><text x="10.0256%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.8558%" y="533" width="0.0801%" height="15" fill="rgb(223,121,0)" fg:x="123" fg:w="1"/><text x="10.1058%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="9.2949%" y="613" width="0.7212%" height="15" fill="rgb(234,173,33)" fg:x="116" fg:w="9"/><text x="9.5449%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="9.2949%" y="597" width="0.7212%" height="15" fill="rgb(245,47,8)" fg:x="116" fg:w="9"/><text x="9.5449%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="9.3750%" y="581" width="0.6410%" height="15" fill="rgb(205,17,20)" fg:x="117" fg:w="8"/><text x="9.6250%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="9.6955%" y="565" width="0.3205%" height="15" fill="rgb(232,151,16)" fg:x="121" fg:w="4"/><text x="9.9455%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="9.7756%" y="549" width="0.2404%" height="15" fill="rgb(208,30,32)" fg:x="122" fg:w="3"/><text x="10.0256%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="9.9359%" y="533" width="0.0801%" height="15" fill="rgb(254,26,3)" fg:x="124" fg:w="1"/><text x="10.1859%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.0962%" y="581" width="0.0801%" height="15" fill="rgb(240,177,30)" fg:x="126" fg:w="1"/><text x="10.3462%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="10.0160%" y="597" width="0.2404%" height="15" fill="rgb(248,76,44)" fg:x="125" fg:w="3"/><text x="10.2660%" y="607.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="10.1763%" y="581" width="0.0801%" height="15" fill="rgb(241,186,54)" fg:x="127" fg:w="1"/><text x="10.4263%" y="591.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="10.1763%" y="565" width="0.0801%" height="15" fill="rgb(249,171,29)" fg:x="127" fg:w="1"/><text x="10.4263%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="10.2564%" y="597" width="0.0801%" height="15" fill="rgb(237,151,44)" fg:x="128" fg:w="1"/><text x="10.5064%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.2564%" y="581" width="0.0801%" height="15" fill="rgb(228,174,30)" fg:x="128" fg:w="1"/><text x="10.5064%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.5769%" y="565" width="0.1603%" height="15" fill="rgb(252,14,37)" fg:x="132" fg:w="2"/><text x="10.8269%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.6571%" y="549" width="0.0801%" height="15" fill="rgb(207,111,40)" fg:x="133" fg:w="1"/><text x="10.9071%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.6571%" y="533" width="0.0801%" height="15" fill="rgb(248,171,54)" fg:x="133" fg:w="1"/><text x="10.9071%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="10.7372%" y="565" width="0.0801%" height="15" fill="rgb(211,127,2)" fg:x="134" fg:w="1"/><text x="10.9872%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.7372%" y="549" width="0.0801%" height="15" fill="rgb(236,87,47)" fg:x="134" fg:w="1"/><text x="10.9872%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.7372%" y="533" width="0.0801%" height="15" fill="rgb(223,190,45)" fg:x="134" fg:w="1"/><text x="10.9872%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.7372%" y="517" width="0.0801%" height="15" fill="rgb(215,5,16)" fg:x="134" fg:w="1"/><text x="10.9872%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.7372%" y="501" width="0.0801%" height="15" fill="rgb(252,82,33)" fg:x="134" fg:w="1"/><text x="10.9872%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="10.8173%" y="565" width="0.0801%" height="15" fill="rgb(247,213,44)" fg:x="135" fg:w="1"/><text x="11.0673%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="10.8974%" y="565" width="0.0801%" height="15" fill="rgb(205,196,44)" fg:x="136" fg:w="1"/><text x="11.1474%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.8974%" y="549" width="0.0801%" height="15" fill="rgb(237,96,54)" fg:x="136" fg:w="1"/><text x="11.1474%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.8974%" y="533" width="0.0801%" height="15" fill="rgb(230,113,34)" fg:x="136" fg:w="1"/><text x="11.1474%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.1378%" y="517" width="0.0801%" height="15" fill="rgb(221,224,12)" fg:x="139" fg:w="1"/><text x="11.3878%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.1378%" y="501" width="0.0801%" height="15" fill="rgb(219,112,44)" fg:x="139" fg:w="1"/><text x="11.3878%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.3782%" y="469" width="0.0801%" height="15" fill="rgb(210,31,13)" fg:x="142" fg:w="1"/><text x="11.6282%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="11.2981%" y="485" width="0.2404%" height="15" fill="rgb(230,25,16)" fg:x="141" fg:w="3"/><text x="11.5481%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="11.4583%" y="469" width="0.0801%" height="15" fill="rgb(246,108,53)" fg:x="143" fg:w="1"/><text x="11.7083%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="11.2179%" y="517" width="0.4006%" height="15" fill="rgb(241,172,50)" fg:x="140" fg:w="5"/><text x="11.4679%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="11.2179%" y="501" width="0.4006%" height="15" fill="rgb(235,141,10)" fg:x="140" fg:w="5"/><text x="11.4679%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.5385%" y="485" width="0.0801%" height="15" fill="rgb(220,174,43)" fg:x="144" fg:w="1"/><text x="11.7885%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.6987%" y="485" width="0.1603%" height="15" fill="rgb(215,181,40)" fg:x="146" fg:w="2"/><text x="11.9487%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.7788%" y="469" width="0.0801%" height="15" fill="rgb(230,97,2)" fg:x="147" fg:w="1"/><text x="12.0288%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.7788%" y="453" width="0.0801%" height="15" fill="rgb(211,25,27)" fg:x="147" fg:w="1"/><text x="12.0288%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.04%)</title><rect x="10.9776%" y="549" width="1.0417%" height="15" fill="rgb(230,87,26)" fg:x="137" fg:w="13"/><text x="11.2276%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="11.0577%" y="533" width="0.9615%" height="15" fill="rgb(227,160,17)" fg:x="138" fg:w="12"/><text x="11.3077%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="11.6186%" y="517" width="0.4006%" height="15" fill="rgb(244,85,34)" fg:x="145" fg:w="5"/><text x="11.8686%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="11.6987%" y="501" width="0.3205%" height="15" fill="rgb(207,70,0)" fg:x="146" fg:w="4"/><text x="11.9487%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="11.8590%" y="485" width="0.1603%" height="15" fill="rgb(223,129,7)" fg:x="148" fg:w="2"/><text x="12.1090%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="11.9391%" y="469" width="0.0801%" height="15" fill="rgb(246,105,7)" fg:x="149" fg:w="1"/><text x="12.1891%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0192%" y="549" width="0.0801%" height="15" fill="rgb(215,154,42)" fg:x="150" fg:w="1"/><text x="12.2692%" y="559.50"></text></g><g><title>engine::session::Session::flush (94 samples, 7.53%)</title><rect x="4.6474%" y="693" width="7.5321%" height="15" fill="rgb(220,215,30)" fg:x="58" fg:w="94"/><text x="4.8974%" y="703.50">engine::se..</text></g><g><title>engine::session::state::State::close (85 samples, 6.81%)</title><rect x="5.3686%" y="677" width="6.8109%" height="15" fill="rgb(228,81,51)" fg:x="67" fg:w="85"/><text x="5.6186%" y="687.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (85 samples, 6.81%)</title><rect x="5.3686%" y="661" width="6.8109%" height="15" fill="rgb(247,71,54)" fg:x="67" fg:w="85"/><text x="5.6186%" y="671.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (83 samples, 6.65%)</title><rect x="5.5288%" y="645" width="6.6506%" height="15" fill="rgb(234,176,34)" fg:x="69" fg:w="83"/><text x="5.7788%" y="655.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (83 samples, 6.65%)</title><rect x="5.5288%" y="629" width="6.6506%" height="15" fill="rgb(241,103,54)" fg:x="69" fg:w="83"/><text x="5.7788%" y="639.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (27 samples, 2.16%)</title><rect x="10.0160%" y="613" width="2.1635%" height="15" fill="rgb(228,22,34)" fg:x="125" fg:w="27"/><text x="10.2660%" y="623.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (23 samples, 1.84%)</title><rect x="10.3365%" y="597" width="1.8429%" height="15" fill="rgb(241,179,48)" fg:x="129" fg:w="23"/><text x="10.5865%" y="607.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.76%)</title><rect x="10.4167%" y="581" width="1.7628%" height="15" fill="rgb(235,167,37)" fg:x="130" fg:w="22"/><text x="10.6667%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.20%)</title><rect x="10.9776%" y="565" width="1.2019%" height="15" fill="rgb(213,109,30)" fg:x="137" fg:w="15"/><text x="11.2276%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0994%" y="549" width="0.0801%" height="15" fill="rgb(222,172,16)" fg:x="151" fg:w="1"/><text x="12.3494%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0994%" y="533" width="0.0801%" height="15" fill="rgb(233,192,5)" fg:x="151" fg:w="1"/><text x="12.3494%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="12.0994%" y="517" width="0.0801%" height="15" fill="rgb(247,189,41)" fg:x="151" fg:w="1"/><text x="12.3494%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="12.2596%" y="661" width="0.0801%" height="15" fill="rgb(218,134,47)" fg:x="153" fg:w="1"/><text x="12.5096%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.2596%" y="645" width="0.0801%" height="15" fill="rgb(216,29,3)" fg:x="153" fg:w="1"/><text x="12.5096%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.2596%" y="629" width="0.0801%" height="15" fill="rgb(246,140,12)" fg:x="153" fg:w="1"/><text x="12.5096%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.2596%" y="613" width="0.0801%" height="15" fill="rgb(230,136,11)" fg:x="153" fg:w="1"/><text x="12.5096%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.2596%" y="597" width="0.0801%" height="15" fill="rgb(247,22,47)" fg:x="153" fg:w="1"/><text x="12.5096%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2596%" y="581" width="0.0801%" height="15" fill="rgb(218,84,22)" fg:x="153" fg:w="1"/><text x="12.5096%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2596%" y="565" width="0.0801%" height="15" fill="rgb(216,87,39)" fg:x="153" fg:w="1"/><text x="12.5096%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.2596%" y="549" width="0.0801%" height="15" fill="rgb(221,178,8)" fg:x="153" fg:w="1"/><text x="12.5096%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.2596%" y="533" width="0.0801%" height="15" fill="rgb(230,42,11)" fg:x="153" fg:w="1"/><text x="12.5096%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.2596%" y="517" width="0.0801%" height="15" fill="rgb(237,229,4)" fg:x="153" fg:w="1"/><text x="12.5096%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2596%" y="501" width="0.0801%" height="15" fill="rgb(222,31,33)" fg:x="153" fg:w="1"/><text x="12.5096%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2596%" y="485" width="0.0801%" height="15" fill="rgb(210,17,39)" fg:x="153" fg:w="1"/><text x="12.5096%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.2596%" y="469" width="0.0801%" height="15" fill="rgb(244,93,20)" fg:x="153" fg:w="1"/><text x="12.5096%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.2596%" y="453" width="0.0801%" height="15" fill="rgb(210,40,47)" fg:x="153" fg:w="1"/><text x="12.5096%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.2596%" y="437" width="0.0801%" height="15" fill="rgb(239,211,47)" fg:x="153" fg:w="1"/><text x="12.5096%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.2596%" y="421" width="0.0801%" height="15" fill="rgb(251,223,49)" fg:x="153" fg:w="1"/><text x="12.5096%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2596%" y="405" width="0.0801%" height="15" fill="rgb(221,149,5)" fg:x="153" fg:w="1"/><text x="12.5096%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="12.3397%" y="645" width="0.1603%" height="15" fill="rgb(219,224,51)" fg:x="154" fg:w="2"/><text x="12.5897%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.3397%" y="629" width="0.1603%" height="15" fill="rgb(223,7,8)" fg:x="154" fg:w="2"/><text x="12.5897%" y="639.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="12.3397%" y="613" width="0.1603%" height="15" fill="rgb(241,217,22)" fg:x="154" fg:w="2"/><text x="12.5897%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.3397%" y="597" width="0.1603%" height="15" fill="rgb(248,209,0)" fg:x="154" fg:w="2"/><text x="12.5897%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.3397%" y="581" width="0.1603%" height="15" fill="rgb(217,205,4)" fg:x="154" fg:w="2"/><text x="12.5897%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="12.3397%" y="565" width="0.1603%" height="15" fill="rgb(228,124,39)" fg:x="154" fg:w="2"/><text x="12.5897%" y="575.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="12.3397%" y="661" width="0.3205%" height="15" fill="rgb(250,116,42)" fg:x="154" fg:w="4"/><text x="12.5897%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.5000%" y="645" width="0.1603%" height="15" fill="rgb(223,202,9)" fg:x="156" fg:w="2"/><text x="12.7500%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.5801%" y="629" width="0.0801%" height="15" fill="rgb(242,222,40)" fg:x="157" fg:w="1"/><text x="12.8301%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.6603%" y="581" width="0.1603%" height="15" fill="rgb(229,99,46)" fg:x="158" fg:w="2"/><text x="12.9103%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.6603%" y="565" width="0.1603%" height="15" fill="rgb(225,56,46)" fg:x="158" fg:w="2"/><text x="12.9103%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.6603%" y="549" width="0.1603%" height="15" fill="rgb(227,94,5)" fg:x="158" fg:w="2"/><text x="12.9103%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7404%" y="533" width="0.0801%" height="15" fill="rgb(205,112,38)" fg:x="159" fg:w="1"/><text x="12.9904%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7404%" y="517" width="0.0801%" height="15" fill="rgb(231,133,46)" fg:x="159" fg:w="1"/><text x="12.9904%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.7404%" y="501" width="0.0801%" height="15" fill="rgb(217,16,9)" fg:x="159" fg:w="1"/><text x="12.9904%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.7404%" y="485" width="0.0801%" height="15" fill="rgb(249,173,9)" fg:x="159" fg:w="1"/><text x="12.9904%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.7404%" y="469" width="0.0801%" height="15" fill="rgb(205,163,53)" fg:x="159" fg:w="1"/><text x="12.9904%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.7404%" y="453" width="0.0801%" height="15" fill="rgb(217,54,41)" fg:x="159" fg:w="1"/><text x="12.9904%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.7404%" y="437" width="0.0801%" height="15" fill="rgb(228,216,12)" fg:x="159" fg:w="1"/><text x="12.9904%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.7404%" y="421" width="0.0801%" height="15" fill="rgb(244,228,15)" fg:x="159" fg:w="1"/><text x="12.9904%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.7404%" y="405" width="0.0801%" height="15" fill="rgb(221,176,53)" fg:x="159" fg:w="1"/><text x="12.9904%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.7404%" y="389" width="0.0801%" height="15" fill="rgb(205,94,34)" fg:x="159" fg:w="1"/><text x="12.9904%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.7404%" y="373" width="0.0801%" height="15" fill="rgb(213,110,48)" fg:x="159" fg:w="1"/><text x="12.9904%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7404%" y="357" width="0.0801%" height="15" fill="rgb(236,142,28)" fg:x="159" fg:w="1"/><text x="12.9904%" y="367.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="12.6603%" y="613" width="0.2404%" height="15" fill="rgb(225,135,29)" fg:x="158" fg:w="3"/><text x="12.9103%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="12.6603%" y="597" width="0.2404%" height="15" fill="rgb(252,45,31)" fg:x="158" fg:w="3"/><text x="12.9103%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="12.8205%" y="581" width="0.0801%" height="15" fill="rgb(211,187,50)" fg:x="160" fg:w="1"/><text x="13.0705%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.8205%" y="565" width="0.0801%" height="15" fill="rgb(229,109,7)" fg:x="160" fg:w="1"/><text x="13.0705%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="12.8205%" y="549" width="0.0801%" height="15" fill="rgb(251,131,51)" fg:x="160" fg:w="1"/><text x="13.0705%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="12.8205%" y="533" width="0.0801%" height="15" fill="rgb(251,180,35)" fg:x="160" fg:w="1"/><text x="13.0705%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.8205%" y="517" width="0.0801%" height="15" fill="rgb(211,46,32)" fg:x="160" fg:w="1"/><text x="13.0705%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="12.6603%" y="645" width="0.3205%" height="15" fill="rgb(248,123,17)" fg:x="158" fg:w="4"/><text x="12.9103%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="12.6603%" y="629" width="0.3205%" height="15" fill="rgb(227,141,18)" fg:x="158" fg:w="4"/><text x="12.9103%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.9006%" y="613" width="0.0801%" height="15" fill="rgb(216,102,9)" fg:x="161" fg:w="1"/><text x="13.1506%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9006%" y="597" width="0.0801%" height="15" fill="rgb(253,47,13)" fg:x="161" fg:w="1"/><text x="13.1506%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9006%" y="581" width="0.0801%" height="15" fill="rgb(226,93,23)" fg:x="161" fg:w="1"/><text x="13.1506%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9006%" y="565" width="0.0801%" height="15" fill="rgb(247,104,17)" fg:x="161" fg:w="1"/><text x="13.1506%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9006%" y="549" width="0.0801%" height="15" fill="rgb(233,203,26)" fg:x="161" fg:w="1"/><text x="13.1506%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.0609%" y="581" width="0.0801%" height="15" fill="rgb(244,98,49)" fg:x="163" fg:w="1"/><text x="13.3109%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (22 samples, 1.76%)</title><rect x="12.1795%" y="677" width="1.7628%" height="15" fill="rgb(235,134,22)" fg:x="152" fg:w="22"/><text x="12.4295%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (16 samples, 1.28%)</title><rect x="12.6603%" y="661" width="1.2821%" height="15" fill="rgb(221,70,32)" fg:x="158" fg:w="16"/><text x="12.9103%" y="671.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (12 samples, 0.96%)</title><rect x="12.9808%" y="645" width="0.9615%" height="15" fill="rgb(238,15,50)" fg:x="162" fg:w="12"/><text x="13.2308%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.96%)</title><rect x="12.9808%" y="629" width="0.9615%" height="15" fill="rgb(215,221,48)" fg:x="162" fg:w="12"/><text x="13.2308%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.96%)</title><rect x="12.9808%" y="613" width="0.9615%" height="15" fill="rgb(236,73,3)" fg:x="162" fg:w="12"/><text x="13.2308%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.96%)</title><rect x="12.9808%" y="597" width="0.9615%" height="15" fill="rgb(250,107,11)" fg:x="162" fg:w="12"/><text x="13.2308%" y="607.50"></text></g><g><title>__libc_malloc (10 samples, 0.80%)</title><rect x="13.1410%" y="581" width="0.8013%" height="15" fill="rgb(242,39,14)" fg:x="164" fg:w="10"/><text x="13.3910%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.0224%" y="597" width="0.0801%" height="15" fill="rgb(248,164,37)" fg:x="175" fg:w="1"/><text x="14.2724%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.0224%" y="581" width="0.0801%" height="15" fill="rgb(217,60,12)" fg:x="175" fg:w="1"/><text x="14.2724%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.0224%" y="565" width="0.0801%" height="15" fill="rgb(240,125,29)" fg:x="175" fg:w="1"/><text x="14.2724%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.0224%" y="549" width="0.0801%" height="15" fill="rgb(208,207,28)" fg:x="175" fg:w="1"/><text x="14.2724%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.0224%" y="533" width="0.0801%" height="15" fill="rgb(209,159,27)" fg:x="175" fg:w="1"/><text x="14.2724%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="13.9423%" y="629" width="0.2404%" height="15" fill="rgb(251,176,53)" fg:x="174" fg:w="3"/><text x="14.1923%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.9423%" y="613" width="0.2404%" height="15" fill="rgb(211,85,7)" fg:x="174" fg:w="3"/><text x="14.1923%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.1026%" y="597" width="0.0801%" height="15" fill="rgb(216,64,54)" fg:x="176" fg:w="1"/><text x="14.3526%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1026%" y="581" width="0.0801%" height="15" fill="rgb(217,54,24)" fg:x="176" fg:w="1"/><text x="14.3526%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.1026%" y="565" width="0.0801%" height="15" fill="rgb(208,206,53)" fg:x="176" fg:w="1"/><text x="14.3526%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.1827%" y="597" width="0.1603%" height="15" fill="rgb(251,74,39)" fg:x="177" fg:w="2"/><text x="14.4327%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.1827%" y="581" width="0.1603%" height="15" fill="rgb(226,47,5)" fg:x="177" fg:w="2"/><text x="14.4327%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="14.4231%" y="533" width="0.0801%" height="15" fill="rgb(234,111,33)" fg:x="180" fg:w="1"/><text x="14.6731%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="13.9423%" y="661" width="0.6410%" height="15" fill="rgb(251,14,10)" fg:x="174" fg:w="8"/><text x="14.1923%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="13.9423%" y="645" width="0.6410%" height="15" fill="rgb(232,43,0)" fg:x="174" fg:w="8"/><text x="14.1923%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="14.1827%" y="629" width="0.4006%" height="15" fill="rgb(222,68,43)" fg:x="177" fg:w="5"/><text x="14.4327%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="14.1827%" y="613" width="0.4006%" height="15" fill="rgb(217,24,23)" fg:x="177" fg:w="5"/><text x="14.4327%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="14.3429%" y="597" width="0.2404%" height="15" fill="rgb(229,209,14)" fg:x="179" fg:w="3"/><text x="14.5929%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.3429%" y="581" width="0.2404%" height="15" fill="rgb(250,149,48)" fg:x="179" fg:w="3"/><text x="14.5929%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.4231%" y="565" width="0.1603%" height="15" fill="rgb(210,120,37)" fg:x="180" fg:w="2"/><text x="14.6731%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.4231%" y="549" width="0.1603%" height="15" fill="rgb(210,21,8)" fg:x="180" fg:w="2"/><text x="14.6731%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.5032%" y="533" width="0.0801%" height="15" fill="rgb(243,145,7)" fg:x="181" fg:w="1"/><text x="14.7532%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5032%" y="517" width="0.0801%" height="15" fill="rgb(238,178,32)" fg:x="181" fg:w="1"/><text x="14.7532%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6635%" y="645" width="0.0801%" height="15" fill="rgb(222,4,10)" fg:x="183" fg:w="1"/><text x="14.9135%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6635%" y="629" width="0.0801%" height="15" fill="rgb(239,7,37)" fg:x="183" fg:w="1"/><text x="14.9135%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6635%" y="613" width="0.0801%" height="15" fill="rgb(215,31,37)" fg:x="183" fg:w="1"/><text x="14.9135%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.6635%" y="597" width="0.0801%" height="15" fill="rgb(224,83,33)" fg:x="183" fg:w="1"/><text x="14.9135%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.6635%" y="581" width="0.0801%" height="15" fill="rgb(239,55,3)" fg:x="183" fg:w="1"/><text x="14.9135%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.6635%" y="565" width="0.0801%" height="15" fill="rgb(247,92,11)" fg:x="183" fg:w="1"/><text x="14.9135%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.6635%" y="549" width="0.0801%" height="15" fill="rgb(239,200,7)" fg:x="183" fg:w="1"/><text x="14.9135%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.6635%" y="533" width="0.0801%" height="15" fill="rgb(227,115,8)" fg:x="183" fg:w="1"/><text x="14.9135%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="14.5833%" y="661" width="0.2404%" height="15" fill="rgb(215,189,27)" fg:x="182" fg:w="3"/><text x="14.8333%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.7436%" y="645" width="0.0801%" height="15" fill="rgb(251,216,39)" fg:x="184" fg:w="1"/><text x="14.9936%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.7436%" y="629" width="0.0801%" height="15" fill="rgb(207,29,47)" fg:x="184" fg:w="1"/><text x="14.9936%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.7436%" y="613" width="0.0801%" height="15" fill="rgb(210,71,34)" fg:x="184" fg:w="1"/><text x="14.9936%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9038%" y="613" width="0.0801%" height="15" fill="rgb(253,217,51)" fg:x="186" fg:w="1"/><text x="15.1538%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9038%" y="597" width="0.0801%" height="15" fill="rgb(222,117,46)" fg:x="186" fg:w="1"/><text x="15.1538%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="14.8237%" y="661" width="0.2404%" height="15" fill="rgb(226,132,6)" fg:x="185" fg:w="3"/><text x="15.0737%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="14.8237%" y="645" width="0.2404%" height="15" fill="rgb(254,145,51)" fg:x="185" fg:w="3"/><text x="15.0737%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.9038%" y="629" width="0.1603%" height="15" fill="rgb(231,199,27)" fg:x="186" fg:w="2"/><text x="15.1538%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="14.9840%" y="613" width="0.0801%" height="15" fill="rgb(245,158,14)" fg:x="187" fg:w="1"/><text x="15.2340%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="14.9840%" y="597" width="0.0801%" height="15" fill="rgb(240,113,14)" fg:x="187" fg:w="1"/><text x="15.2340%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.9840%" y="581" width="0.0801%" height="15" fill="rgb(210,20,13)" fg:x="187" fg:w="1"/><text x="15.2340%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9840%" y="565" width="0.0801%" height="15" fill="rgb(241,144,13)" fg:x="187" fg:w="1"/><text x="15.2340%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0641%" y="581" width="0.0801%" height="15" fill="rgb(235,43,34)" fg:x="188" fg:w="1"/><text x="15.3141%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0641%" y="565" width="0.0801%" height="15" fill="rgb(208,36,20)" fg:x="188" fg:w="1"/><text x="15.3141%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="15.0641%" y="613" width="0.2404%" height="15" fill="rgb(239,204,10)" fg:x="188" fg:w="3"/><text x="15.3141%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.0641%" y="597" width="0.2404%" height="15" fill="rgb(217,84,43)" fg:x="188" fg:w="3"/><text x="15.3141%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.1442%" y="581" width="0.1603%" height="15" fill="rgb(241,170,50)" fg:x="189" fg:w="2"/><text x="15.3942%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1442%" y="565" width="0.1603%" height="15" fill="rgb(226,205,29)" fg:x="189" fg:w="2"/><text x="15.3942%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="15.1442%" y="549" width="0.1603%" height="15" fill="rgb(233,113,1)" fg:x="189" fg:w="2"/><text x="15.3942%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1442%" y="533" width="0.1603%" height="15" fill="rgb(253,98,13)" fg:x="189" fg:w="2"/><text x="15.3942%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2244%" y="517" width="0.0801%" height="15" fill="rgb(211,115,12)" fg:x="190" fg:w="1"/><text x="15.4744%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2244%" y="501" width="0.0801%" height="15" fill="rgb(208,12,16)" fg:x="190" fg:w="1"/><text x="15.4744%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3045%" y="549" width="0.0801%" height="15" fill="rgb(237,193,54)" fg:x="191" fg:w="1"/><text x="15.5545%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.3045%" y="581" width="0.1603%" height="15" fill="rgb(243,22,42)" fg:x="191" fg:w="2"/><text x="15.5545%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.3045%" y="565" width="0.1603%" height="15" fill="rgb(233,151,36)" fg:x="191" fg:w="2"/><text x="15.5545%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3846%" y="549" width="0.0801%" height="15" fill="rgb(237,57,45)" fg:x="192" fg:w="1"/><text x="15.6346%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3846%" y="533" width="0.0801%" height="15" fill="rgb(221,88,17)" fg:x="192" fg:w="1"/><text x="15.6346%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.3846%" y="517" width="0.0801%" height="15" fill="rgb(230,79,15)" fg:x="192" fg:w="1"/><text x="15.6346%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.3846%" y="501" width="0.0801%" height="15" fill="rgb(213,57,13)" fg:x="192" fg:w="1"/><text x="15.6346%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.3846%" y="485" width="0.0801%" height="15" fill="rgb(222,116,39)" fg:x="192" fg:w="1"/><text x="15.6346%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3846%" y="469" width="0.0801%" height="15" fill="rgb(245,107,2)" fg:x="192" fg:w="1"/><text x="15.6346%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3846%" y="453" width="0.0801%" height="15" fill="rgb(238,1,10)" fg:x="192" fg:w="1"/><text x="15.6346%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.3846%" y="437" width="0.0801%" height="15" fill="rgb(249,4,48)" fg:x="192" fg:w="1"/><text x="15.6346%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.3846%" y="421" width="0.0801%" height="15" fill="rgb(223,151,18)" fg:x="192" fg:w="1"/><text x="15.6346%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.3846%" y="405" width="0.0801%" height="15" fill="rgb(227,65,43)" fg:x="192" fg:w="1"/><text x="15.6346%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.3846%" y="389" width="0.0801%" height="15" fill="rgb(218,40,45)" fg:x="192" fg:w="1"/><text x="15.6346%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3846%" y="373" width="0.0801%" height="15" fill="rgb(252,121,31)" fg:x="192" fg:w="1"/><text x="15.6346%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="15.0641%" y="645" width="0.5609%" height="15" fill="rgb(219,158,43)" fg:x="188" fg:w="7"/><text x="15.3141%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="15.0641%" y="629" width="0.5609%" height="15" fill="rgb(231,162,42)" fg:x="188" fg:w="7"/><text x="15.3141%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="15.3045%" y="613" width="0.3205%" height="15" fill="rgb(217,179,25)" fg:x="191" fg:w="4"/><text x="15.5545%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="15.3045%" y="597" width="0.3205%" height="15" fill="rgb(206,212,31)" fg:x="191" fg:w="4"/><text x="15.5545%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.4647%" y="581" width="0.1603%" height="15" fill="rgb(235,144,12)" fg:x="193" fg:w="2"/><text x="15.7147%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.4647%" y="565" width="0.1603%" height="15" fill="rgb(213,51,10)" fg:x="193" fg:w="2"/><text x="15.7147%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.5449%" y="549" width="0.0801%" height="15" fill="rgb(231,145,14)" fg:x="194" fg:w="1"/><text x="15.7949%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5449%" y="533" width="0.0801%" height="15" fill="rgb(235,15,28)" fg:x="194" fg:w="1"/><text x="15.7949%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.5449%" y="517" width="0.0801%" height="15" fill="rgb(237,206,10)" fg:x="194" fg:w="1"/><text x="15.7949%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="15.0641%" y="661" width="0.6410%" height="15" fill="rgb(236,227,27)" fg:x="188" fg:w="8"/><text x="15.3141%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="15.6250%" y="645" width="0.0801%" height="15" fill="rgb(246,83,35)" fg:x="195" fg:w="1"/><text x="15.8750%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.6250%" y="629" width="0.0801%" height="15" fill="rgb(220,136,24)" fg:x="195" fg:w="1"/><text x="15.8750%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="15.6250%" y="613" width="0.0801%" height="15" fill="rgb(217,3,25)" fg:x="195" fg:w="1"/><text x="15.8750%" y="623.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="15.6250%" y="597" width="0.0801%" height="15" fill="rgb(239,24,14)" fg:x="195" fg:w="1"/><text x="15.8750%" y="607.50"></text></g><g><title>kernel::model::base::Identity::new (1 samples, 0.08%)</title><rect x="15.6250%" y="581" width="0.0801%" height="15" fill="rgb(244,16,53)" fg:x="195" fg:w="1"/><text x="15.8750%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="15.7051%" y="645" width="0.0801%" height="15" fill="rgb(208,175,44)" fg:x="196" fg:w="1"/><text x="15.9551%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="15.7051%" y="629" width="0.0801%" height="15" fill="rgb(252,18,48)" fg:x="196" fg:w="1"/><text x="15.9551%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.7051%" y="613" width="0.0801%" height="15" fill="rgb(234,199,32)" fg:x="196" fg:w="1"/><text x="15.9551%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="15.7853%" y="597" width="0.0801%" height="15" fill="rgb(225,77,54)" fg:x="197" fg:w="1"/><text x="16.0353%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="15.7853%" y="581" width="0.0801%" height="15" fill="rgb(225,42,25)" fg:x="197" fg:w="1"/><text x="16.0353%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (47 samples, 3.77%)</title><rect x="12.1795%" y="693" width="3.7660%" height="15" fill="rgb(242,227,46)" fg:x="152" fg:w="47"/><text x="12.4295%" y="703.50">plug..</text></g><g><title>plugins_core::tools::set_container (25 samples, 2.00%)</title><rect x="13.9423%" y="677" width="2.0032%" height="15" fill="rgb(246,197,35)" fg:x="174" fg:w="25"/><text x="14.1923%" y="687.50">p..</text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="15.7051%" y="661" width="0.2404%" height="15" fill="rgb(215,159,26)" fg:x="196" fg:w="3"/><text x="15.9551%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.7853%" y="645" width="0.1603%" height="15" fill="rgb(212,194,50)" fg:x="197" fg:w="2"/><text x="16.0353%" y="655.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="15.7853%" y="629" width="0.1603%" height="15" fill="rgb(246,132,1)" fg:x="197" fg:w="2"/><text x="16.0353%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="15.7853%" y="613" width="0.1603%" height="15" fill="rgb(217,71,7)" fg:x="197" fg:w="2"/><text x="16.0353%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8654%" y="597" width="0.0801%" height="15" fill="rgb(252,59,32)" fg:x="198" fg:w="1"/><text x="16.1154%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.8654%" y="581" width="0.0801%" height="15" fill="rgb(253,204,25)" fg:x="198" fg:w="1"/><text x="16.1154%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.8654%" y="565" width="0.0801%" height="15" fill="rgb(232,21,16)" fg:x="198" fg:w="1"/><text x="16.1154%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="15.9455%" y="661" width="0.1603%" height="15" fill="rgb(248,90,29)" fg:x="199" fg:w="2"/><text x="16.1955%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="15.9455%" y="645" width="0.1603%" height="15" fill="rgb(249,223,7)" fg:x="199" fg:w="2"/><text x="16.1955%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.0256%" y="629" width="0.0801%" height="15" fill="rgb(231,119,42)" fg:x="200" fg:w="1"/><text x="16.2756%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.0256%" y="613" width="0.0801%" height="15" fill="rgb(215,41,35)" fg:x="200" fg:w="1"/><text x="16.2756%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.0256%" y="597" width="0.0801%" height="15" fill="rgb(220,44,45)" fg:x="200" fg:w="1"/><text x="16.2756%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.0256%" y="581" width="0.0801%" height="15" fill="rgb(253,197,36)" fg:x="200" fg:w="1"/><text x="16.2756%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.0256%" y="565" width="0.0801%" height="15" fill="rgb(245,225,54)" fg:x="200" fg:w="1"/><text x="16.2756%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.0256%" y="549" width="0.0801%" height="15" fill="rgb(239,94,37)" fg:x="200" fg:w="1"/><text x="16.2756%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.0256%" y="533" width="0.0801%" height="15" fill="rgb(242,217,10)" fg:x="200" fg:w="1"/><text x="16.2756%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.0256%" y="517" width="0.0801%" height="15" fill="rgb(250,193,7)" fg:x="200" fg:w="1"/><text x="16.2756%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.0256%" y="501" width="0.0801%" height="15" fill="rgb(230,104,19)" fg:x="200" fg:w="1"/><text x="16.2756%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.0256%" y="485" width="0.0801%" height="15" fill="rgb(230,181,4)" fg:x="200" fg:w="1"/><text x="16.2756%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.0256%" y="469" width="0.0801%" height="15" fill="rgb(216,219,49)" fg:x="200" fg:w="1"/><text x="16.2756%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0256%" y="453" width="0.0801%" height="15" fill="rgb(254,144,0)" fg:x="200" fg:w="1"/><text x="16.2756%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.1058%" y="597" width="0.2404%" height="15" fill="rgb(205,209,38)" fg:x="201" fg:w="3"/><text x="16.3558%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.2660%" y="581" width="0.0801%" height="15" fill="rgb(240,21,42)" fg:x="203" fg:w="1"/><text x="16.5160%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="16.1058%" y="613" width="0.3205%" height="15" fill="rgb(241,132,3)" fg:x="201" fg:w="4"/><text x="16.3558%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3462%" y="597" width="0.0801%" height="15" fill="rgb(225,14,2)" fg:x="204" fg:w="1"/><text x="16.5962%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3462%" y="581" width="0.0801%" height="15" fill="rgb(210,141,35)" fg:x="204" fg:w="1"/><text x="16.5962%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.3462%" y="565" width="0.0801%" height="15" fill="rgb(251,14,44)" fg:x="204" fg:w="1"/><text x="16.5962%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.3462%" y="549" width="0.0801%" height="15" fill="rgb(247,48,18)" fg:x="204" fg:w="1"/><text x="16.5962%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.3462%" y="533" width="0.0801%" height="15" fill="rgb(225,0,40)" fg:x="204" fg:w="1"/><text x="16.5962%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3462%" y="517" width="0.0801%" height="15" fill="rgb(221,31,33)" fg:x="204" fg:w="1"/><text x="16.5962%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3462%" y="501" width="0.0801%" height="15" fill="rgb(237,42,40)" fg:x="204" fg:w="1"/><text x="16.5962%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.3462%" y="485" width="0.0801%" height="15" fill="rgb(233,51,29)" fg:x="204" fg:w="1"/><text x="16.5962%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.3462%" y="469" width="0.0801%" height="15" fill="rgb(226,58,20)" fg:x="204" fg:w="1"/><text x="16.5962%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.3462%" y="453" width="0.0801%" height="15" fill="rgb(208,98,7)" fg:x="204" fg:w="1"/><text x="16.5962%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.3462%" y="437" width="0.0801%" height="15" fill="rgb(228,143,44)" fg:x="204" fg:w="1"/><text x="16.5962%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3462%" y="421" width="0.0801%" height="15" fill="rgb(246,55,38)" fg:x="204" fg:w="1"/><text x="16.5962%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="16.1058%" y="629" width="0.4006%" height="15" fill="rgb(247,87,16)" fg:x="201" fg:w="5"/><text x="16.3558%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.4263%" y="613" width="0.0801%" height="15" fill="rgb(234,129,42)" fg:x="205" fg:w="1"/><text x="16.6763%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.5064%" y="629" width="0.0801%" height="15" fill="rgb(220,82,16)" fg:x="206" fg:w="1"/><text x="16.7564%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="16.1058%" y="661" width="0.5609%" height="15" fill="rgb(211,88,4)" fg:x="201" fg:w="7"/><text x="16.3558%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="16.1058%" y="645" width="0.5609%" height="15" fill="rgb(248,151,21)" fg:x="201" fg:w="7"/><text x="16.3558%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.5865%" y="629" width="0.0801%" height="15" fill="rgb(238,163,6)" fg:x="207" fg:w="1"/><text x="16.8365%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.5865%" y="613" width="0.0801%" height="15" fill="rgb(209,183,11)" fg:x="207" fg:w="1"/><text x="16.8365%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.5865%" y="597" width="0.0801%" height="15" fill="rgb(219,37,20)" fg:x="207" fg:w="1"/><text x="16.8365%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.5865%" y="581" width="0.0801%" height="15" fill="rgb(210,158,4)" fg:x="207" fg:w="1"/><text x="16.8365%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="16.5865%" y="565" width="0.0801%" height="15" fill="rgb(221,167,53)" fg:x="207" fg:w="1"/><text x="16.8365%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.6667%" y="629" width="0.0801%" height="15" fill="rgb(237,151,45)" fg:x="208" fg:w="1"/><text x="16.9167%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.6667%" y="613" width="0.0801%" height="15" fill="rgb(231,39,3)" fg:x="208" fg:w="1"/><text x="16.9167%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.8269%" y="581" width="0.0801%" height="15" fill="rgb(212,167,28)" fg:x="210" fg:w="1"/><text x="17.0769%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="16.6667%" y="645" width="0.3205%" height="15" fill="rgb(232,178,8)" fg:x="208" fg:w="4"/><text x="16.9167%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="16.7468%" y="629" width="0.2404%" height="15" fill="rgb(225,151,20)" fg:x="209" fg:w="3"/><text x="16.9968%" y="639.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (3 samples, 0.24%)</title><rect x="16.7468%" y="613" width="0.2404%" height="15" fill="rgb(238,3,37)" fg:x="209" fg:w="3"/><text x="16.9968%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.7468%" y="597" width="0.2404%" height="15" fill="rgb(251,147,42)" fg:x="209" fg:w="3"/><text x="16.9968%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.9071%" y="581" width="0.0801%" height="15" fill="rgb(208,173,10)" fg:x="211" fg:w="1"/><text x="17.1571%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.9071%" y="565" width="0.0801%" height="15" fill="rgb(246,225,4)" fg:x="211" fg:w="1"/><text x="17.1571%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.9071%" y="549" width="0.0801%" height="15" fill="rgb(248,102,6)" fg:x="211" fg:w="1"/><text x="17.1571%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.9071%" y="533" width="0.0801%" height="15" fill="rgb(232,6,21)" fg:x="211" fg:w="1"/><text x="17.1571%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="16.6667%" y="661" width="0.4006%" height="15" fill="rgb(221,179,22)" fg:x="208" fg:w="5"/><text x="16.9167%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.9872%" y="645" width="0.0801%" height="15" fill="rgb(252,50,20)" fg:x="212" fg:w="1"/><text x="17.2372%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9872%" y="629" width="0.0801%" height="15" fill="rgb(222,56,38)" fg:x="212" fg:w="1"/><text x="17.2372%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9872%" y="613" width="0.0801%" height="15" fill="rgb(206,193,29)" fg:x="212" fg:w="1"/><text x="17.2372%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="17.0673%" y="661" width="0.0801%" height="15" fill="rgb(239,192,45)" fg:x="213" fg:w="1"/><text x="17.3173%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="17.0673%" y="645" width="0.0801%" height="15" fill="rgb(254,18,36)" fg:x="213" fg:w="1"/><text x="17.3173%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="17.0673%" y="629" width="0.0801%" height="15" fill="rgb(221,127,11)" fg:x="213" fg:w="1"/><text x="17.3173%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="17.0673%" y="613" width="0.0801%" height="15" fill="rgb(234,146,35)" fg:x="213" fg:w="1"/><text x="17.3173%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.0673%" y="597" width="0.0801%" height="15" fill="rgb(254,201,37)" fg:x="213" fg:w="1"/><text x="17.3173%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="17.0673%" y="581" width="0.0801%" height="15" fill="rgb(211,202,23)" fg:x="213" fg:w="1"/><text x="17.3173%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.0673%" y="565" width="0.0801%" height="15" fill="rgb(237,91,2)" fg:x="213" fg:w="1"/><text x="17.3173%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.0673%" y="549" width="0.0801%" height="15" fill="rgb(226,228,36)" fg:x="213" fg:w="1"/><text x="17.3173%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.0673%" y="533" width="0.0801%" height="15" fill="rgb(213,63,50)" fg:x="213" fg:w="1"/><text x="17.3173%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.0673%" y="517" width="0.0801%" height="15" fill="rgb(235,194,19)" fg:x="213" fg:w="1"/><text x="17.3173%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="17.0673%" y="501" width="0.0801%" height="15" fill="rgb(207,204,18)" fg:x="213" fg:w="1"/><text x="17.3173%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.28%)</title><rect x="15.9455%" y="693" width="1.2821%" height="15" fill="rgb(248,8,7)" fg:x="199" fg:w="16"/><text x="16.1955%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.28%)</title><rect x="15.9455%" y="677" width="1.2821%" height="15" fill="rgb(223,145,47)" fg:x="199" fg:w="16"/><text x="16.1955%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="17.1474%" y="661" width="0.0801%" height="15" fill="rgb(228,84,11)" fg:x="214" fg:w="1"/><text x="17.3974%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.1474%" y="645" width="0.0801%" height="15" fill="rgb(218,76,45)" fg:x="214" fg:w="1"/><text x="17.3974%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.1474%" y="629" width="0.0801%" height="15" fill="rgb(223,80,15)" fg:x="214" fg:w="1"/><text x="17.3974%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.1474%" y="613" width="0.0801%" height="15" fill="rgb(219,218,33)" fg:x="214" fg:w="1"/><text x="17.3974%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.1474%" y="597" width="0.0801%" height="15" fill="rgb(208,51,11)" fg:x="214" fg:w="1"/><text x="17.3974%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.1474%" y="581" width="0.0801%" height="15" fill="rgb(229,165,39)" fg:x="214" fg:w="1"/><text x="17.3974%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.1474%" y="565" width="0.0801%" height="15" fill="rgb(241,100,24)" fg:x="214" fg:w="1"/><text x="17.3974%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.1474%" y="549" width="0.0801%" height="15" fill="rgb(228,14,23)" fg:x="214" fg:w="1"/><text x="17.3974%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.1474%" y="533" width="0.0801%" height="15" fill="rgb(247,116,52)" fg:x="214" fg:w="1"/><text x="17.3974%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.1474%" y="517" width="0.0801%" height="15" fill="rgb(216,149,33)" fg:x="214" fg:w="1"/><text x="17.3974%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.1474%" y="501" width="0.0801%" height="15" fill="rgb(238,142,29)" fg:x="214" fg:w="1"/><text x="17.3974%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.1474%" y="485" width="0.0801%" height="15" fill="rgb(224,83,40)" fg:x="214" fg:w="1"/><text x="17.3974%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.1474%" y="469" width="0.0801%" height="15" fill="rgb(234,165,11)" fg:x="214" fg:w="1"/><text x="17.3974%" y="479.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="17.2276%" y="661" width="0.0801%" height="15" fill="rgb(215,96,23)" fg:x="215" fg:w="1"/><text x="17.4776%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.2276%" y="645" width="0.0801%" height="15" fill="rgb(233,179,26)" fg:x="215" fg:w="1"/><text x="17.4776%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.2276%" y="629" width="0.0801%" height="15" fill="rgb(225,129,33)" fg:x="215" fg:w="1"/><text x="17.4776%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="17.3077%" y="661" width="0.0801%" height="15" fill="rgb(237,49,13)" fg:x="216" fg:w="1"/><text x="17.5577%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.3077%" y="645" width="0.0801%" height="15" fill="rgb(211,3,31)" fg:x="216" fg:w="1"/><text x="17.5577%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3077%" y="629" width="0.0801%" height="15" fill="rgb(216,152,19)" fg:x="216" fg:w="1"/><text x="17.5577%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.3077%" y="613" width="0.0801%" height="15" fill="rgb(251,121,35)" fg:x="216" fg:w="1"/><text x="17.5577%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.3077%" y="597" width="0.0801%" height="15" fill="rgb(210,217,47)" fg:x="216" fg:w="1"/><text x="17.5577%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.3077%" y="581" width="0.0801%" height="15" fill="rgb(244,116,22)" fg:x="216" fg:w="1"/><text x="17.5577%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.3077%" y="565" width="0.0801%" height="15" fill="rgb(228,17,21)" fg:x="216" fg:w="1"/><text x="17.5577%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.3077%" y="549" width="0.0801%" height="15" fill="rgb(240,149,34)" fg:x="216" fg:w="1"/><text x="17.5577%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.3077%" y="533" width="0.0801%" height="15" fill="rgb(208,125,47)" fg:x="216" fg:w="1"/><text x="17.5577%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.3077%" y="517" width="0.0801%" height="15" fill="rgb(249,186,39)" fg:x="216" fg:w="1"/><text x="17.5577%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.3077%" y="501" width="0.0801%" height="15" fill="rgb(240,220,33)" fg:x="216" fg:w="1"/><text x="17.5577%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.3077%" y="485" width="0.0801%" height="15" fill="rgb(243,110,23)" fg:x="216" fg:w="1"/><text x="17.5577%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.3077%" y="469" width="0.0801%" height="15" fill="rgb(219,163,46)" fg:x="216" fg:w="1"/><text x="17.5577%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.3077%" y="453" width="0.0801%" height="15" fill="rgb(216,126,30)" fg:x="216" fg:w="1"/><text x="17.5577%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.3077%" y="437" width="0.0801%" height="15" fill="rgb(208,139,11)" fg:x="216" fg:w="1"/><text x="17.5577%" y="447.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="17.2276%" y="693" width="0.3205%" height="15" fill="rgb(213,118,36)" fg:x="215" fg:w="4"/><text x="17.4776%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="17.2276%" y="677" width="0.3205%" height="15" fill="rgb(226,43,17)" fg:x="215" fg:w="4"/><text x="17.4776%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.3878%" y="661" width="0.1603%" height="15" fill="rgb(254,217,4)" fg:x="217" fg:w="2"/><text x="17.6378%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.4679%" y="645" width="0.0801%" height="15" fill="rgb(210,134,47)" fg:x="218" fg:w="1"/><text x="17.7179%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="17.4679%" y="629" width="0.0801%" height="15" fill="rgb(237,24,49)" fg:x="218" fg:w="1"/><text x="17.7179%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="17.7083%" y="661" width="0.0801%" height="15" fill="rgb(251,39,46)" fg:x="221" fg:w="1"/><text x="17.9583%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="17.7083%" y="645" width="0.0801%" height="15" fill="rgb(251,220,3)" fg:x="221" fg:w="1"/><text x="17.9583%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="17.7083%" y="629" width="0.0801%" height="15" fill="rgb(228,105,12)" fg:x="221" fg:w="1"/><text x="17.9583%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.7083%" y="613" width="0.0801%" height="15" fill="rgb(215,196,1)" fg:x="221" fg:w="1"/><text x="17.9583%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.7083%" y="597" width="0.0801%" height="15" fill="rgb(214,33,39)" fg:x="221" fg:w="1"/><text x="17.9583%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.7083%" y="581" width="0.0801%" height="15" fill="rgb(220,19,52)" fg:x="221" fg:w="1"/><text x="17.9583%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.7083%" y="565" width="0.0801%" height="15" fill="rgb(221,78,38)" fg:x="221" fg:w="1"/><text x="17.9583%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="17.7885%" y="629" width="0.1603%" height="15" fill="rgb(253,30,16)" fg:x="222" fg:w="2"/><text x="18.0385%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="17.7885%" y="613" width="0.1603%" height="15" fill="rgb(242,65,0)" fg:x="222" fg:w="2"/><text x="18.0385%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="17.7885%" y="597" width="0.1603%" height="15" fill="rgb(235,201,12)" fg:x="222" fg:w="2"/><text x="18.0385%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="17.7885%" y="581" width="0.1603%" height="15" fill="rgb(233,161,9)" fg:x="222" fg:w="2"/><text x="18.0385%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.8686%" y="565" width="0.0801%" height="15" fill="rgb(241,207,41)" fg:x="223" fg:w="1"/><text x="18.1186%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8686%" y="549" width="0.0801%" height="15" fill="rgb(212,69,46)" fg:x="223" fg:w="1"/><text x="18.1186%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.0288%" y="565" width="0.0801%" height="15" fill="rgb(239,69,45)" fg:x="225" fg:w="1"/><text x="18.2788%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.0288%" y="549" width="0.0801%" height="15" fill="rgb(242,117,48)" fg:x="225" fg:w="1"/><text x="18.2788%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.0288%" y="533" width="0.0801%" height="15" fill="rgb(228,41,36)" fg:x="225" fg:w="1"/><text x="18.2788%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="17.6282%" y="677" width="0.5609%" height="15" fill="rgb(212,3,32)" fg:x="220" fg:w="7"/><text x="17.8782%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="17.7885%" y="661" width="0.4006%" height="15" fill="rgb(233,41,49)" fg:x="222" fg:w="5"/><text x="18.0385%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="17.7885%" y="645" width="0.4006%" height="15" fill="rgb(252,170,49)" fg:x="222" fg:w="5"/><text x="18.0385%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.9487%" y="629" width="0.2404%" height="15" fill="rgb(229,53,26)" fg:x="224" fg:w="3"/><text x="18.1987%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.9487%" y="613" width="0.2404%" height="15" fill="rgb(217,157,12)" fg:x="224" fg:w="3"/><text x="18.1987%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="17.9487%" y="597" width="0.2404%" height="15" fill="rgb(227,17,9)" fg:x="224" fg:w="3"/><text x="18.1987%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0288%" y="581" width="0.1603%" height="15" fill="rgb(218,84,12)" fg:x="225" fg:w="2"/><text x="18.2788%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.1090%" y="565" width="0.0801%" height="15" fill="rgb(212,79,24)" fg:x="226" fg:w="1"/><text x="18.3590%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1090%" y="549" width="0.0801%" height="15" fill="rgb(217,222,37)" fg:x="226" fg:w="1"/><text x="18.3590%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.1090%" y="533" width="0.0801%" height="15" fill="rgb(246,208,8)" fg:x="226" fg:w="1"/><text x="18.3590%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.1891%" y="677" width="0.0801%" height="15" fill="rgb(244,133,10)" fg:x="227" fg:w="1"/><text x="18.4391%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="18.2692%" y="645" width="0.0801%" height="15" fill="rgb(209,219,41)" fg:x="228" fg:w="1"/><text x="18.5192%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::base::AclRule&gt;&gt; (1 samples, 0.08%)</title><rect x="18.2692%" y="629" width="0.0801%" height="15" fill="rgb(253,175,45)" fg:x="228" fg:w="1"/><text x="18.5192%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="18.2692%" y="677" width="0.1603%" height="15" fill="rgb(235,100,37)" fg:x="228" fg:w="2"/><text x="18.5192%" y="687.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="18.2692%" y="661" width="0.1603%" height="15" fill="rgb(225,87,19)" fg:x="228" fg:w="2"/><text x="18.5192%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.3494%" y="645" width="0.0801%" height="15" fill="rgb(217,152,17)" fg:x="229" fg:w="1"/><text x="18.5994%" y="655.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="18.3494%" y="629" width="0.0801%" height="15" fill="rgb(235,72,13)" fg:x="229" fg:w="1"/><text x="18.5994%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.3494%" y="613" width="0.0801%" height="15" fill="rgb(233,140,18)" fg:x="229" fg:w="1"/><text x="18.5994%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="18.4295%" y="613" width="0.0801%" height="15" fill="rgb(207,212,28)" fg:x="230" fg:w="1"/><text x="18.6795%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="18.4295%" y="597" width="0.0801%" height="15" fill="rgb(220,130,25)" fg:x="230" fg:w="1"/><text x="18.6795%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="18.4295%" y="581" width="0.0801%" height="15" fill="rgb(205,55,34)" fg:x="230" fg:w="1"/><text x="18.6795%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.4295%" y="565" width="0.0801%" height="15" fill="rgb(237,54,35)" fg:x="230" fg:w="1"/><text x="18.6795%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.4295%" y="549" width="0.0801%" height="15" fill="rgb(208,67,23)" fg:x="230" fg:w="1"/><text x="18.6795%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="18.4295%" y="629" width="0.1603%" height="15" fill="rgb(206,207,50)" fg:x="230" fg:w="2"/><text x="18.6795%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="18.5096%" y="613" width="0.0801%" height="15" fill="rgb(213,211,42)" fg:x="231" fg:w="1"/><text x="18.7596%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.5096%" y="597" width="0.0801%" height="15" fill="rgb(252,197,50)" fg:x="231" fg:w="1"/><text x="18.7596%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.5096%" y="581" width="0.0801%" height="15" fill="rgb(251,211,41)" fg:x="231" fg:w="1"/><text x="18.7596%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="18.5897%" y="629" width="0.1603%" height="15" fill="rgb(229,211,5)" fg:x="232" fg:w="2"/><text x="18.8397%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="18.5897%" y="613" width="0.1603%" height="15" fill="rgb(239,36,31)" fg:x="232" fg:w="2"/><text x="18.8397%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.6699%" y="597" width="0.0801%" height="15" fill="rgb(248,67,31)" fg:x="233" fg:w="1"/><text x="18.9199%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.6699%" y="581" width="0.0801%" height="15" fill="rgb(249,55,44)" fg:x="233" fg:w="1"/><text x="18.9199%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.6699%" y="565" width="0.0801%" height="15" fill="rgb(216,82,12)" fg:x="233" fg:w="1"/><text x="18.9199%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6699%" y="549" width="0.0801%" height="15" fill="rgb(242,174,1)" fg:x="233" fg:w="1"/><text x="18.9199%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.6699%" y="533" width="0.0801%" height="15" fill="rgb(208,120,29)" fg:x="233" fg:w="1"/><text x="18.9199%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6699%" y="517" width="0.0801%" height="15" fill="rgb(221,105,43)" fg:x="233" fg:w="1"/><text x="18.9199%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.6699%" y="501" width="0.0801%" height="15" fill="rgb(234,124,22)" fg:x="233" fg:w="1"/><text x="18.9199%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.6699%" y="485" width="0.0801%" height="15" fill="rgb(212,23,30)" fg:x="233" fg:w="1"/><text x="18.9199%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="18.8301%" y="597" width="0.1603%" height="15" fill="rgb(219,122,53)" fg:x="235" fg:w="2"/><text x="19.0801%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="18.8301%" y="581" width="0.1603%" height="15" fill="rgb(248,84,24)" fg:x="235" fg:w="2"/><text x="19.0801%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="18.8301%" y="565" width="0.1603%" height="15" fill="rgb(245,115,18)" fg:x="235" fg:w="2"/><text x="19.0801%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="18.8301%" y="549" width="0.1603%" height="15" fill="rgb(227,176,51)" fg:x="235" fg:w="2"/><text x="19.0801%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="18.8301%" y="533" width="0.1603%" height="15" fill="rgb(229,63,42)" fg:x="235" fg:w="2"/><text x="19.0801%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="18.8301%" y="517" width="0.1603%" height="15" fill="rgb(247,202,24)" fg:x="235" fg:w="2"/><text x="19.0801%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="18.8301%" y="501" width="0.1603%" height="15" fill="rgb(244,173,20)" fg:x="235" fg:w="2"/><text x="19.0801%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="18.8301%" y="485" width="0.1603%" height="15" fill="rgb(242,81,47)" fg:x="235" fg:w="2"/><text x="19.0801%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="18.8301%" y="469" width="0.1603%" height="15" fill="rgb(231,185,54)" fg:x="235" fg:w="2"/><text x="19.0801%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="18.8301%" y="453" width="0.1603%" height="15" fill="rgb(243,55,32)" fg:x="235" fg:w="2"/><text x="19.0801%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="18.8301%" y="437" width="0.1603%" height="15" fill="rgb(208,167,19)" fg:x="235" fg:w="2"/><text x="19.0801%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="18.8301%" y="421" width="0.1603%" height="15" fill="rgb(231,72,35)" fg:x="235" fg:w="2"/><text x="19.0801%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="18.8301%" y="405" width="0.1603%" height="15" fill="rgb(250,173,51)" fg:x="235" fg:w="2"/><text x="19.0801%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="18.8301%" y="389" width="0.1603%" height="15" fill="rgb(209,5,22)" fg:x="235" fg:w="2"/><text x="19.0801%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="18.8301%" y="373" width="0.1603%" height="15" fill="rgb(250,174,19)" fg:x="235" fg:w="2"/><text x="19.0801%" y="383.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="18.8301%" y="357" width="0.1603%" height="15" fill="rgb(217,3,49)" fg:x="235" fg:w="2"/><text x="19.0801%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="18.8301%" y="341" width="0.1603%" height="15" fill="rgb(218,225,5)" fg:x="235" fg:w="2"/><text x="19.0801%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="18.8301%" y="325" width="0.1603%" height="15" fill="rgb(236,89,11)" fg:x="235" fg:w="2"/><text x="19.0801%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="18.8301%" y="309" width="0.1603%" height="15" fill="rgb(206,33,28)" fg:x="235" fg:w="2"/><text x="19.0801%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="18.8301%" y="293" width="0.1603%" height="15" fill="rgb(241,56,42)" fg:x="235" fg:w="2"/><text x="19.0801%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="18.8301%" y="277" width="0.1603%" height="15" fill="rgb(222,44,11)" fg:x="235" fg:w="2"/><text x="19.0801%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.9103%" y="261" width="0.0801%" height="15" fill="rgb(234,111,20)" fg:x="236" fg:w="1"/><text x="19.1603%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="18.9103%" y="245" width="0.0801%" height="15" fill="rgb(237,77,6)" fg:x="236" fg:w="1"/><text x="19.1603%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.9103%" y="229" width="0.0801%" height="15" fill="rgb(235,111,23)" fg:x="236" fg:w="1"/><text x="19.1603%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.9103%" y="213" width="0.0801%" height="15" fill="rgb(251,135,29)" fg:x="236" fg:w="1"/><text x="19.1603%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.9904%" y="597" width="0.0801%" height="15" fill="rgb(217,57,1)" fg:x="237" fg:w="1"/><text x="19.2404%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.9904%" y="581" width="0.0801%" height="15" fill="rgb(249,119,31)" fg:x="237" fg:w="1"/><text x="19.2404%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.9904%" y="565" width="0.0801%" height="15" fill="rgb(233,164,33)" fg:x="237" fg:w="1"/><text x="19.2404%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.9904%" y="549" width="0.0801%" height="15" fill="rgb(250,217,43)" fg:x="237" fg:w="1"/><text x="19.2404%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.9904%" y="533" width="0.0801%" height="15" fill="rgb(232,154,50)" fg:x="237" fg:w="1"/><text x="19.2404%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="19.0705%" y="597" width="0.0801%" height="15" fill="rgb(227,190,8)" fg:x="238" fg:w="1"/><text x="19.3205%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="19.0705%" y="581" width="0.0801%" height="15" fill="rgb(209,217,32)" fg:x="238" fg:w="1"/><text x="19.3205%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="19.1506%" y="581" width="0.0801%" height="15" fill="rgb(243,203,50)" fg:x="239" fg:w="1"/><text x="19.4006%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.1506%" y="565" width="0.0801%" height="15" fill="rgb(232,152,27)" fg:x="239" fg:w="1"/><text x="19.4006%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.1506%" y="549" width="0.0801%" height="15" fill="rgb(240,34,29)" fg:x="239" fg:w="1"/><text x="19.4006%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.1506%" y="533" width="0.0801%" height="15" fill="rgb(215,185,52)" fg:x="239" fg:w="1"/><text x="19.4006%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.1506%" y="517" width="0.0801%" height="15" fill="rgb(240,89,49)" fg:x="239" fg:w="1"/><text x="19.4006%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.1506%" y="501" width="0.0801%" height="15" fill="rgb(225,12,52)" fg:x="239" fg:w="1"/><text x="19.4006%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.1506%" y="485" width="0.0801%" height="15" fill="rgb(239,128,45)" fg:x="239" fg:w="1"/><text x="19.4006%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.1506%" y="469" width="0.0801%" height="15" fill="rgb(211,78,47)" fg:x="239" fg:w="1"/><text x="19.4006%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.1506%" y="453" width="0.0801%" height="15" fill="rgb(232,31,21)" fg:x="239" fg:w="1"/><text x="19.4006%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.1506%" y="437" width="0.0801%" height="15" fill="rgb(222,168,14)" fg:x="239" fg:w="1"/><text x="19.4006%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.1506%" y="421" width="0.0801%" height="15" fill="rgb(209,128,24)" fg:x="239" fg:w="1"/><text x="19.4006%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.1506%" y="405" width="0.0801%" height="15" fill="rgb(249,35,13)" fg:x="239" fg:w="1"/><text x="19.4006%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.1506%" y="389" width="0.0801%" height="15" fill="rgb(218,7,2)" fg:x="239" fg:w="1"/><text x="19.4006%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.1506%" y="373" width="0.0801%" height="15" fill="rgb(238,107,27)" fg:x="239" fg:w="1"/><text x="19.4006%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.1506%" y="357" width="0.0801%" height="15" fill="rgb(217,88,38)" fg:x="239" fg:w="1"/><text x="19.4006%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.1506%" y="341" width="0.0801%" height="15" fill="rgb(230,207,0)" fg:x="239" fg:w="1"/><text x="19.4006%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.1506%" y="325" width="0.0801%" height="15" fill="rgb(249,64,54)" fg:x="239" fg:w="1"/><text x="19.4006%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="19.2308%" y="549" width="0.0801%" height="15" fill="rgb(231,7,11)" fg:x="240" fg:w="1"/><text x="19.4808%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="19.1506%" y="597" width="0.2404%" height="15" fill="rgb(205,149,21)" fg:x="239" fg:w="3"/><text x="19.4006%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="19.2308%" y="581" width="0.1603%" height="15" fill="rgb(215,126,34)" fg:x="240" fg:w="2"/><text x="19.4808%" y="591.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="19.2308%" y="565" width="0.1603%" height="15" fill="rgb(241,132,45)" fg:x="240" fg:w="2"/><text x="19.4808%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.3109%" y="549" width="0.0801%" height="15" fill="rgb(252,69,32)" fg:x="241" fg:w="1"/><text x="19.5609%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3109%" y="533" width="0.0801%" height="15" fill="rgb(232,204,19)" fg:x="241" fg:w="1"/><text x="19.5609%" y="543.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="19.3910%" y="549" width="0.0801%" height="15" fill="rgb(249,15,47)" fg:x="242" fg:w="1"/><text x="19.6410%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.3910%" y="533" width="0.0801%" height="15" fill="rgb(209,227,23)" fg:x="242" fg:w="1"/><text x="19.6410%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.3910%" y="517" width="0.0801%" height="15" fill="rgb(248,92,24)" fg:x="242" fg:w="1"/><text x="19.6410%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.3910%" y="501" width="0.0801%" height="15" fill="rgb(247,59,2)" fg:x="242" fg:w="1"/><text x="19.6410%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.3910%" y="485" width="0.0801%" height="15" fill="rgb(221,30,5)" fg:x="242" fg:w="1"/><text x="19.6410%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.3910%" y="469" width="0.0801%" height="15" fill="rgb(208,108,53)" fg:x="242" fg:w="1"/><text x="19.6410%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.3910%" y="453" width="0.0801%" height="15" fill="rgb(211,183,26)" fg:x="242" fg:w="1"/><text x="19.6410%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.3910%" y="437" width="0.0801%" height="15" fill="rgb(232,132,4)" fg:x="242" fg:w="1"/><text x="19.6410%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.3910%" y="421" width="0.0801%" height="15" fill="rgb(253,128,37)" fg:x="242" fg:w="1"/><text x="19.6410%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.3910%" y="405" width="0.0801%" height="15" fill="rgb(221,58,24)" fg:x="242" fg:w="1"/><text x="19.6410%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.3910%" y="389" width="0.0801%" height="15" fill="rgb(230,54,45)" fg:x="242" fg:w="1"/><text x="19.6410%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.3910%" y="373" width="0.0801%" height="15" fill="rgb(254,21,18)" fg:x="242" fg:w="1"/><text x="19.6410%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.3910%" y="357" width="0.0801%" height="15" fill="rgb(221,108,0)" fg:x="242" fg:w="1"/><text x="19.6410%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.3910%" y="341" width="0.0801%" height="15" fill="rgb(206,95,1)" fg:x="242" fg:w="1"/><text x="19.6410%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.3910%" y="325" width="0.0801%" height="15" fill="rgb(237,52,5)" fg:x="242" fg:w="1"/><text x="19.6410%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3910%" y="309" width="0.0801%" height="15" fill="rgb(218,150,34)" fg:x="242" fg:w="1"/><text x="19.6410%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.4712%" y="501" width="0.0801%" height="15" fill="rgb(235,194,28)" fg:x="243" fg:w="1"/><text x="19.7212%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.4712%" y="485" width="0.0801%" height="15" fill="rgb(245,92,18)" fg:x="243" fg:w="1"/><text x="19.7212%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="19.3910%" y="581" width="0.2404%" height="15" fill="rgb(253,203,53)" fg:x="242" fg:w="3"/><text x="19.6410%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="19.3910%" y="565" width="0.2404%" height="15" fill="rgb(249,185,47)" fg:x="242" fg:w="3"/><text x="19.6410%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.4712%" y="549" width="0.1603%" height="15" fill="rgb(252,194,52)" fg:x="243" fg:w="2"/><text x="19.7212%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.4712%" y="533" width="0.1603%" height="15" fill="rgb(210,53,36)" fg:x="243" fg:w="2"/><text x="19.7212%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="19.4712%" y="517" width="0.1603%" height="15" fill="rgb(237,37,25)" fg:x="243" fg:w="2"/><text x="19.7212%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.5513%" y="501" width="0.0801%" height="15" fill="rgb(242,116,27)" fg:x="244" fg:w="1"/><text x="19.8013%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="18.7500%" y="613" width="0.9615%" height="15" fill="rgb(213,185,26)" fg:x="234" fg:w="12"/><text x="19.0000%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="19.3910%" y="597" width="0.3205%" height="15" fill="rgb(225,204,8)" fg:x="242" fg:w="4"/><text x="19.6410%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="19.6314%" y="581" width="0.0801%" height="15" fill="rgb(254,111,37)" fg:x="245" fg:w="1"/><text x="19.8814%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.6314%" y="565" width="0.0801%" height="15" fill="rgb(242,35,9)" fg:x="245" fg:w="1"/><text x="19.8814%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.7115%" y="501" width="0.0801%" height="15" fill="rgb(232,138,49)" fg:x="246" fg:w="1"/><text x="19.9615%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="19.7115%" y="565" width="0.1603%" height="15" fill="rgb(247,56,4)" fg:x="246" fg:w="2"/><text x="19.9615%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.7115%" y="549" width="0.1603%" height="15" fill="rgb(226,179,17)" fg:x="246" fg:w="2"/><text x="19.9615%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.7115%" y="533" width="0.1603%" height="15" fill="rgb(216,163,45)" fg:x="246" fg:w="2"/><text x="19.9615%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.7115%" y="517" width="0.1603%" height="15" fill="rgb(211,157,3)" fg:x="246" fg:w="2"/><text x="19.9615%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.7917%" y="501" width="0.0801%" height="15" fill="rgb(234,44,20)" fg:x="247" fg:w="1"/><text x="20.0417%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7917%" y="485" width="0.0801%" height="15" fill="rgb(254,138,23)" fg:x="247" fg:w="1"/><text x="20.0417%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.7917%" y="469" width="0.0801%" height="15" fill="rgb(206,119,39)" fg:x="247" fg:w="1"/><text x="20.0417%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.7917%" y="453" width="0.0801%" height="15" fill="rgb(231,105,52)" fg:x="247" fg:w="1"/><text x="20.0417%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8718%" y="533" width="0.0801%" height="15" fill="rgb(250,20,5)" fg:x="248" fg:w="1"/><text x="20.1218%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8718%" y="517" width="0.0801%" height="15" fill="rgb(215,198,30)" fg:x="248" fg:w="1"/><text x="20.1218%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8718%" y="501" width="0.0801%" height="15" fill="rgb(246,142,8)" fg:x="248" fg:w="1"/><text x="20.1218%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.8718%" y="485" width="0.0801%" height="15" fill="rgb(243,26,38)" fg:x="248" fg:w="1"/><text x="20.1218%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.8718%" y="469" width="0.0801%" height="15" fill="rgb(205,133,28)" fg:x="248" fg:w="1"/><text x="20.1218%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.8718%" y="453" width="0.0801%" height="15" fill="rgb(212,34,0)" fg:x="248" fg:w="1"/><text x="20.1218%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.8718%" y="437" width="0.0801%" height="15" fill="rgb(251,226,22)" fg:x="248" fg:w="1"/><text x="20.1218%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.8718%" y="421" width="0.0801%" height="15" fill="rgb(252,119,9)" fg:x="248" fg:w="1"/><text x="20.1218%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.8718%" y="405" width="0.0801%" height="15" fill="rgb(213,150,50)" fg:x="248" fg:w="1"/><text x="20.1218%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.8718%" y="389" width="0.0801%" height="15" fill="rgb(212,24,39)" fg:x="248" fg:w="1"/><text x="20.1218%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9519%" y="533" width="0.0801%" height="15" fill="rgb(213,46,39)" fg:x="249" fg:w="1"/><text x="20.2019%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.9519%" y="517" width="0.0801%" height="15" fill="rgb(239,106,12)" fg:x="249" fg:w="1"/><text x="20.2019%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9519%" y="501" width="0.0801%" height="15" fill="rgb(249,229,21)" fg:x="249" fg:w="1"/><text x="20.2019%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9519%" y="485" width="0.0801%" height="15" fill="rgb(212,158,3)" fg:x="249" fg:w="1"/><text x="20.2019%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9519%" y="469" width="0.0801%" height="15" fill="rgb(253,26,48)" fg:x="249" fg:w="1"/><text x="20.2019%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="20.0321%" y="469" width="0.0801%" height="15" fill="rgb(238,178,20)" fg:x="250" fg:w="1"/><text x="20.2821%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.0321%" y="453" width="0.0801%" height="15" fill="rgb(208,86,15)" fg:x="250" fg:w="1"/><text x="20.2821%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.0321%" y="437" width="0.0801%" height="15" fill="rgb(239,42,53)" fg:x="250" fg:w="1"/><text x="20.2821%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="19.7115%" y="597" width="0.4808%" height="15" fill="rgb(245,226,8)" fg:x="246" fg:w="6"/><text x="19.9615%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="19.7115%" y="581" width="0.4808%" height="15" fill="rgb(216,176,32)" fg:x="246" fg:w="6"/><text x="19.9615%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="19.8718%" y="565" width="0.3205%" height="15" fill="rgb(231,186,21)" fg:x="248" fg:w="4"/><text x="20.1218%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="19.8718%" y="549" width="0.3205%" height="15" fill="rgb(205,95,49)" fg:x="248" fg:w="4"/><text x="20.1218%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.0321%" y="533" width="0.1603%" height="15" fill="rgb(217,145,8)" fg:x="250" fg:w="2"/><text x="20.2821%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.0321%" y="517" width="0.1603%" height="15" fill="rgb(239,144,48)" fg:x="250" fg:w="2"/><text x="20.2821%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="20.0321%" y="501" width="0.1603%" height="15" fill="rgb(214,189,23)" fg:x="250" fg:w="2"/><text x="20.2821%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.0321%" y="485" width="0.1603%" height="15" fill="rgb(229,157,17)" fg:x="250" fg:w="2"/><text x="20.2821%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.1122%" y="469" width="0.0801%" height="15" fill="rgb(230,5,48)" fg:x="251" fg:w="1"/><text x="20.3622%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.1122%" y="453" width="0.0801%" height="15" fill="rgb(224,156,48)" fg:x="251" fg:w="1"/><text x="20.3622%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="20.1122%" y="437" width="0.0801%" height="15" fill="rgb(223,14,29)" fg:x="251" fg:w="1"/><text x="20.3622%" y="447.50"></text></g><g><title>plugins_core::build::Build::leads_to (19 samples, 1.52%)</title><rect x="18.7500%" y="629" width="1.5224%" height="15" fill="rgb(229,96,36)" fg:x="234" fg:w="19"/><text x="19.0000%" y="639.50"></text></g><g><title>plugins_core::tools::leads_to (7 samples, 0.56%)</title><rect x="19.7115%" y="613" width="0.5609%" height="15" fill="rgb(231,102,53)" fg:x="246" fg:w="7"/><text x="19.9615%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="20.1923%" y="597" width="0.0801%" height="15" fill="rgb(210,77,38)" fg:x="252" fg:w="1"/><text x="20.4423%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1923%" y="581" width="0.0801%" height="15" fill="rgb(235,131,6)" fg:x="252" fg:w="1"/><text x="20.4423%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.1923%" y="565" width="0.0801%" height="15" fill="rgb(252,55,38)" fg:x="252" fg:w="1"/><text x="20.4423%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1923%" y="549" width="0.0801%" height="15" fill="rgb(246,38,14)" fg:x="252" fg:w="1"/><text x="20.4423%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.1923%" y="533" width="0.0801%" height="15" fill="rgb(242,27,5)" fg:x="252" fg:w="1"/><text x="20.4423%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.1923%" y="517" width="0.0801%" height="15" fill="rgb(228,65,35)" fg:x="252" fg:w="1"/><text x="20.4423%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (24 samples, 1.92%)</title><rect x="18.4295%" y="677" width="1.9231%" height="15" fill="rgb(245,93,11)" fg:x="230" fg:w="24"/><text x="18.6795%" y="687.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 1.92%)</title><rect x="18.4295%" y="661" width="1.9231%" height="15" fill="rgb(213,1,31)" fg:x="230" fg:w="24"/><text x="18.6795%" y="671.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (24 samples, 1.92%)</title><rect x="18.4295%" y="645" width="1.9231%" height="15" fill="rgb(237,205,14)" fg:x="230" fg:w="24"/><text x="18.6795%" y="655.50">p..</text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="20.2724%" y="629" width="0.0801%" height="15" fill="rgb(232,118,45)" fg:x="253" fg:w="1"/><text x="20.5224%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="20.2724%" y="613" width="0.0801%" height="15" fill="rgb(218,5,6)" fg:x="253" fg:w="1"/><text x="20.5224%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="20.2724%" y="597" width="0.0801%" height="15" fill="rgb(251,87,51)" fg:x="253" fg:w="1"/><text x="20.5224%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="20.2724%" y="581" width="0.0801%" height="15" fill="rgb(207,225,20)" fg:x="253" fg:w="1"/><text x="20.5224%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.2724%" y="565" width="0.0801%" height="15" fill="rgb(222,78,54)" fg:x="253" fg:w="1"/><text x="20.5224%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.2724%" y="549" width="0.0801%" height="15" fill="rgb(232,85,16)" fg:x="253" fg:w="1"/><text x="20.5224%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.2724%" y="533" width="0.0801%" height="15" fill="rgb(244,25,33)" fg:x="253" fg:w="1"/><text x="20.5224%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.2724%" y="517" width="0.0801%" height="15" fill="rgb(233,24,36)" fg:x="253" fg:w="1"/><text x="20.5224%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="20.4327%" y="661" width="0.0801%" height="15" fill="rgb(253,49,54)" fg:x="255" fg:w="1"/><text x="20.6827%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.4327%" y="645" width="0.0801%" height="15" fill="rgb(245,12,22)" fg:x="255" fg:w="1"/><text x="20.6827%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.4327%" y="629" width="0.0801%" height="15" fill="rgb(253,141,28)" fg:x="255" fg:w="1"/><text x="20.6827%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.4327%" y="613" width="0.0801%" height="15" fill="rgb(225,207,27)" fg:x="255" fg:w="1"/><text x="20.6827%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.4327%" y="597" width="0.0801%" height="15" fill="rgb(220,84,2)" fg:x="255" fg:w="1"/><text x="20.6827%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.4327%" y="581" width="0.0801%" height="15" fill="rgb(224,37,37)" fg:x="255" fg:w="1"/><text x="20.6827%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.4327%" y="565" width="0.0801%" height="15" fill="rgb(220,143,18)" fg:x="255" fg:w="1"/><text x="20.6827%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.4327%" y="549" width="0.0801%" height="15" fill="rgb(210,88,33)" fg:x="255" fg:w="1"/><text x="20.6827%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.4327%" y="533" width="0.0801%" height="15" fill="rgb(219,87,51)" fg:x="255" fg:w="1"/><text x="20.6827%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.4327%" y="517" width="0.0801%" height="15" fill="rgb(211,7,35)" fg:x="255" fg:w="1"/><text x="20.6827%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.4327%" y="501" width="0.0801%" height="15" fill="rgb(232,77,2)" fg:x="255" fg:w="1"/><text x="20.6827%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.4327%" y="485" width="0.0801%" height="15" fill="rgb(249,94,25)" fg:x="255" fg:w="1"/><text x="20.6827%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.4327%" y="469" width="0.0801%" height="15" fill="rgb(215,112,2)" fg:x="255" fg:w="1"/><text x="20.6827%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="20.5128%" y="613" width="0.0801%" height="15" fill="rgb(226,115,48)" fg:x="256" fg:w="1"/><text x="20.7628%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="20.6731%" y="581" width="0.0801%" height="15" fill="rgb(249,196,10)" fg:x="258" fg:w="1"/><text x="20.9231%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="20.5929%" y="613" width="0.3205%" height="15" fill="rgb(237,109,14)" fg:x="257" fg:w="4"/><text x="20.8429%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="20.6731%" y="597" width="0.2404%" height="15" fill="rgb(217,103,53)" fg:x="258" fg:w="3"/><text x="20.9231%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="20.7532%" y="581" width="0.1603%" height="15" fill="rgb(244,137,9)" fg:x="259" fg:w="2"/><text x="21.0032%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.9936%" y="581" width="0.0801%" height="15" fill="rgb(227,201,3)" fg:x="262" fg:w="1"/><text x="21.2436%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.9936%" y="565" width="0.0801%" height="15" fill="rgb(243,94,6)" fg:x="262" fg:w="1"/><text x="21.2436%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.9936%" y="549" width="0.0801%" height="15" fill="rgb(235,118,5)" fg:x="262" fg:w="1"/><text x="21.2436%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.9936%" y="533" width="0.0801%" height="15" fill="rgb(247,10,30)" fg:x="262" fg:w="1"/><text x="21.2436%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.9936%" y="517" width="0.0801%" height="15" fill="rgb(205,26,28)" fg:x="262" fg:w="1"/><text x="21.2436%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="20.9936%" y="501" width="0.0801%" height="15" fill="rgb(206,99,35)" fg:x="262" fg:w="1"/><text x="21.2436%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="20.9936%" y="485" width="0.0801%" height="15" fill="rgb(238,130,40)" fg:x="262" fg:w="1"/><text x="21.2436%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.1538%" y="565" width="0.0801%" height="15" fill="rgb(224,126,31)" fg:x="264" fg:w="1"/><text x="21.4038%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="21.2340%" y="549" width="0.3205%" height="15" fill="rgb(254,105,17)" fg:x="265" fg:w="4"/><text x="21.4840%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.3942%" y="533" width="0.1603%" height="15" fill="rgb(216,87,36)" fg:x="267" fg:w="2"/><text x="21.6442%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.3942%" y="517" width="0.1603%" height="15" fill="rgb(240,21,12)" fg:x="267" fg:w="2"/><text x="21.6442%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.4744%" y="501" width="0.0801%" height="15" fill="rgb(245,192,34)" fg:x="268" fg:w="1"/><text x="21.7244%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.5545%" y="517" width="0.1603%" height="15" fill="rgb(226,100,49)" fg:x="269" fg:w="2"/><text x="21.8045%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="21.2340%" y="565" width="0.6410%" height="15" fill="rgb(245,188,27)" fg:x="265" fg:w="8"/><text x="21.4840%" y="575.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="21.5545%" y="549" width="0.3205%" height="15" fill="rgb(212,170,8)" fg:x="269" fg:w="4"/><text x="21.8045%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="21.5545%" y="533" width="0.3205%" height="15" fill="rgb(217,113,29)" fg:x="269" fg:w="4"/><text x="21.8045%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="21.7147%" y="517" width="0.1603%" height="15" fill="rgb(237,30,3)" fg:x="271" fg:w="2"/><text x="21.9647%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.9551%" y="549" width="0.0801%" height="15" fill="rgb(227,19,28)" fg:x="274" fg:w="1"/><text x="22.2051%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.3558%" y="501" width="0.0801%" height="15" fill="rgb(239,172,45)" fg:x="279" fg:w="1"/><text x="22.6058%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="22.0353%" y="549" width="0.4808%" height="15" fill="rgb(254,55,39)" fg:x="275" fg:w="6"/><text x="22.2853%" y="559.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="22.0353%" y="533" width="0.4808%" height="15" fill="rgb(249,208,12)" fg:x="275" fg:w="6"/><text x="22.2853%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="22.1955%" y="517" width="0.3205%" height="15" fill="rgb(240,52,13)" fg:x="277" fg:w="4"/><text x="22.4455%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="22.4359%" y="501" width="0.0801%" height="15" fill="rgb(252,149,13)" fg:x="280" fg:w="1"/><text x="22.6859%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="22.6763%" y="533" width="0.0801%" height="15" fill="rgb(232,81,48)" fg:x="283" fg:w="1"/><text x="22.9263%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="22.7564%" y="501" width="0.0801%" height="15" fill="rgb(222,144,2)" fg:x="284" fg:w="1"/><text x="23.0064%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="22.7564%" y="485" width="0.0801%" height="15" fill="rgb(216,81,32)" fg:x="284" fg:w="1"/><text x="23.0064%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="22.7564%" y="533" width="0.1603%" height="15" fill="rgb(244,78,51)" fg:x="284" fg:w="2"/><text x="23.0064%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="22.7564%" y="517" width="0.1603%" height="15" fill="rgb(217,66,21)" fg:x="284" fg:w="2"/><text x="23.0064%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.8365%" y="501" width="0.0801%" height="15" fill="rgb(247,101,42)" fg:x="285" fg:w="1"/><text x="23.0865%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="22.9167%" y="533" width="0.6410%" height="15" fill="rgb(227,81,39)" fg:x="286" fg:w="8"/><text x="23.1667%" y="543.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="22.9968%" y="517" width="0.5609%" height="15" fill="rgb(220,223,44)" fg:x="287" fg:w="7"/><text x="23.2468%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="23.1571%" y="501" width="0.4006%" height="15" fill="rgb(205,218,2)" fg:x="289" fg:w="5"/><text x="23.4071%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="23.1571%" y="485" width="0.4006%" height="15" fill="rgb(212,207,28)" fg:x="289" fg:w="5"/><text x="23.4071%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.4776%" y="469" width="0.0801%" height="15" fill="rgb(224,12,41)" fg:x="293" fg:w="1"/><text x="23.7276%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.4776%" y="453" width="0.0801%" height="15" fill="rgb(216,118,12)" fg:x="293" fg:w="1"/><text x="23.7276%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.4776%" y="437" width="0.0801%" height="15" fill="rgb(252,97,46)" fg:x="293" fg:w="1"/><text x="23.7276%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="23.6378%" y="517" width="0.2404%" height="15" fill="rgb(244,206,19)" fg:x="295" fg:w="3"/><text x="23.8878%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="23.7179%" y="501" width="0.1603%" height="15" fill="rgb(231,84,31)" fg:x="296" fg:w="2"/><text x="23.9679%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.7981%" y="485" width="0.0801%" height="15" fill="rgb(244,133,0)" fg:x="297" fg:w="1"/><text x="24.0481%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.7981%" y="469" width="0.0801%" height="15" fill="rgb(223,15,50)" fg:x="297" fg:w="1"/><text x="24.0481%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="23.8782%" y="501" width="0.4006%" height="15" fill="rgb(250,118,49)" fg:x="298" fg:w="5"/><text x="24.1282%" y="511.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="23.9583%" y="485" width="0.3205%" height="15" fill="rgb(248,25,38)" fg:x="299" fg:w="4"/><text x="24.2083%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.1987%" y="469" width="0.0801%" height="15" fill="rgb(215,70,14)" fg:x="302" fg:w="1"/><text x="24.4487%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.1987%" y="453" width="0.0801%" height="15" fill="rgb(215,28,15)" fg:x="302" fg:w="1"/><text x="24.4487%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="24.2788%" y="501" width="0.0801%" height="15" fill="rgb(243,6,28)" fg:x="303" fg:w="1"/><text x="24.5288%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="23.8782%" y="517" width="0.6410%" height="15" fill="rgb(222,130,1)" fg:x="298" fg:w="8"/><text x="24.1282%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="24.3590%" y="501" width="0.1603%" height="15" fill="rgb(236,166,44)" fg:x="304" fg:w="2"/><text x="24.6090%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="24.3590%" y="485" width="0.1603%" height="15" fill="rgb(221,108,14)" fg:x="304" fg:w="2"/><text x="24.6090%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="24.3590%" y="469" width="0.1603%" height="15" fill="rgb(252,3,45)" fg:x="304" fg:w="2"/><text x="24.6090%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="23.5577%" y="533" width="1.2821%" height="15" fill="rgb(237,68,30)" fg:x="294" fg:w="16"/><text x="23.8077%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="24.5192%" y="517" width="0.3205%" height="15" fill="rgb(211,79,22)" fg:x="306" fg:w="4"/><text x="24.7692%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.64%)</title><rect x="22.5160%" y="549" width="2.6442%" height="15" fill="rgb(252,185,21)" fg:x="281" fg:w="33"/><text x="22.7660%" y="559.50">se..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="24.8397%" y="533" width="0.3205%" height="15" fill="rgb(225,189,26)" fg:x="310" fg:w="4"/><text x="25.0897%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="24.9199%" y="517" width="0.2404%" height="15" fill="rgb(241,30,40)" fg:x="311" fg:w="3"/><text x="25.1699%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.0801%" y="501" width="0.0801%" height="15" fill="rgb(235,215,44)" fg:x="313" fg:w="1"/><text x="25.3301%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (46 samples, 3.69%)</title><rect x="21.8750%" y="565" width="3.6859%" height="15" fill="rgb(205,8,29)" fg:x="273" fg:w="46"/><text x="22.1250%" y="575.50">serd..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="25.1603%" y="549" width="0.4006%" height="15" fill="rgb(241,137,42)" fg:x="314" fg:w="5"/><text x="25.4103%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="25.3205%" y="533" width="0.2404%" height="15" fill="rgb(237,155,2)" fg:x="316" fg:w="3"/><text x="25.5705%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="25.3205%" y="517" width="0.2404%" height="15" fill="rgb(245,29,42)" fg:x="316" fg:w="3"/><text x="25.5705%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="25.4006%" y="501" width="0.1603%" height="15" fill="rgb(234,101,35)" fg:x="317" fg:w="2"/><text x="25.6506%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="25.4006%" y="485" width="0.1603%" height="15" fill="rgb(228,64,37)" fg:x="317" fg:w="2"/><text x="25.6506%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="25.4006%" y="469" width="0.1603%" height="15" fill="rgb(217,214,36)" fg:x="317" fg:w="2"/><text x="25.6506%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (57 samples, 4.57%)</title><rect x="21.0737%" y="581" width="4.5673%" height="15" fill="rgb(243,70,3)" fg:x="263" fg:w="57"/><text x="21.3237%" y="591.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.5609%" y="565" width="0.0801%" height="15" fill="rgb(253,158,52)" fg:x="319" fg:w="1"/><text x="25.8109%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.5609%" y="549" width="0.0801%" height="15" fill="rgb(234,111,54)" fg:x="319" fg:w="1"/><text x="25.8109%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.5609%" y="533" width="0.0801%" height="15" fill="rgb(217,70,32)" fg:x="319" fg:w="1"/><text x="25.8109%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.5609%" y="517" width="0.0801%" height="15" fill="rgb(234,18,33)" fg:x="319" fg:w="1"/><text x="25.8109%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.5609%" y="501" width="0.0801%" height="15" fill="rgb(234,12,49)" fg:x="319" fg:w="1"/><text x="25.8109%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.7212%" y="549" width="0.0801%" height="15" fill="rgb(236,10,21)" fg:x="321" fg:w="1"/><text x="25.9712%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.8013%" y="549" width="0.0801%" height="15" fill="rgb(248,182,45)" fg:x="322" fg:w="1"/><text x="26.0513%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.9615%" y="533" width="0.0801%" height="15" fill="rgb(217,95,36)" fg:x="324" fg:w="1"/><text x="26.2115%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.1218%" y="517" width="0.0801%" height="15" fill="rgb(212,110,31)" fg:x="326" fg:w="1"/><text x="26.3718%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.1218%" y="501" width="0.0801%" height="15" fill="rgb(206,32,53)" fg:x="326" fg:w="1"/><text x="26.3718%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.2019%" y="501" width="0.1603%" height="15" fill="rgb(246,141,37)" fg:x="327" fg:w="2"/><text x="26.4519%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.3622%" y="501" width="0.0801%" height="15" fill="rgb(219,16,7)" fg:x="329" fg:w="1"/><text x="26.6122%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.3622%" y="485" width="0.0801%" height="15" fill="rgb(230,205,45)" fg:x="329" fg:w="1"/><text x="26.6122%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="26.4423%" y="501" width="0.1603%" height="15" fill="rgb(231,43,49)" fg:x="330" fg:w="2"/><text x="26.6923%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="26.4423%" y="485" width="0.1603%" height="15" fill="rgb(212,106,34)" fg:x="330" fg:w="2"/><text x="26.6923%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.5224%" y="469" width="0.0801%" height="15" fill="rgb(206,83,17)" fg:x="331" fg:w="1"/><text x="26.7724%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.6026%" y="485" width="0.0801%" height="15" fill="rgb(244,154,49)" fg:x="332" fg:w="1"/><text x="26.8526%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.6827%" y="485" width="0.0801%" height="15" fill="rgb(244,149,49)" fg:x="333" fg:w="1"/><text x="26.9327%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="25.6410%" y="581" width="1.2019%" height="15" fill="rgb(227,134,18)" fg:x="320" fg:w="15"/><text x="25.8910%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.20%)</title><rect x="25.6410%" y="565" width="1.2019%" height="15" fill="rgb(237,116,36)" fg:x="320" fg:w="15"/><text x="25.8910%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="25.8814%" y="549" width="0.9615%" height="15" fill="rgb(205,129,40)" fg:x="323" fg:w="12"/><text x="26.1314%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="26.0417%" y="533" width="0.8013%" height="15" fill="rgb(236,178,4)" fg:x="325" fg:w="10"/><text x="26.2917%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="26.2019%" y="517" width="0.6410%" height="15" fill="rgb(251,76,53)" fg:x="327" fg:w="8"/><text x="26.4519%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="26.6026%" y="501" width="0.2404%" height="15" fill="rgb(242,92,40)" fg:x="332" fg:w="3"/><text x="26.8526%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="26.7628%" y="485" width="0.0801%" height="15" fill="rgb(209,45,30)" fg:x="334" fg:w="1"/><text x="27.0128%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="26.8429%" y="565" width="0.0801%" height="15" fill="rgb(218,157,36)" fg:x="335" fg:w="1"/><text x="27.0929%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="26.9231%" y="565" width="0.1603%" height="15" fill="rgb(222,186,16)" fg:x="336" fg:w="2"/><text x="27.1731%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.0032%" y="549" width="0.0801%" height="15" fill="rgb(254,72,35)" fg:x="337" fg:w="1"/><text x="27.2532%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="27.1635%" y="533" width="0.3205%" height="15" fill="rgb(224,25,35)" fg:x="339" fg:w="4"/><text x="27.4135%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="27.1635%" y="517" width="0.3205%" height="15" fill="rgb(206,135,52)" fg:x="339" fg:w="4"/><text x="27.4135%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="27.2436%" y="501" width="0.2404%" height="15" fill="rgb(229,174,47)" fg:x="340" fg:w="3"/><text x="27.4936%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="27.4840%" y="533" width="0.1603%" height="15" fill="rgb(242,184,21)" fg:x="343" fg:w="2"/><text x="27.7340%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.4840%" y="517" width="0.1603%" height="15" fill="rgb(213,22,45)" fg:x="343" fg:w="2"/><text x="27.7340%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.5641%" y="501" width="0.0801%" height="15" fill="rgb(237,81,54)" fg:x="344" fg:w="1"/><text x="27.8141%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (3 samples, 0.24%)</title><rect x="27.6442%" y="533" width="0.2404%" height="15" fill="rgb(248,177,18)" fg:x="345" fg:w="3"/><text x="27.8942%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="27.8045%" y="517" width="0.0801%" height="15" fill="rgb(254,31,16)" fg:x="347" fg:w="1"/><text x="28.0545%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="27.8846%" y="533" width="0.0801%" height="15" fill="rgb(235,20,31)" fg:x="348" fg:w="1"/><text x="28.1346%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.8846%" y="517" width="0.0801%" height="15" fill="rgb(240,56,43)" fg:x="348" fg:w="1"/><text x="28.1346%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.8846%" y="501" width="0.0801%" height="15" fill="rgb(237,197,51)" fg:x="348" fg:w="1"/><text x="28.1346%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="28.2853%" y="485" width="0.4808%" height="15" fill="rgb(241,162,44)" fg:x="353" fg:w="6"/><text x="28.5353%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="28.3654%" y="469" width="0.4006%" height="15" fill="rgb(224,23,20)" fg:x="354" fg:w="5"/><text x="28.6154%" y="479.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="28.5256%" y="453" width="0.2404%" height="15" fill="rgb(250,109,34)" fg:x="356" fg:w="3"/><text x="28.7756%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="28.7660%" y="469" width="0.0801%" height="15" fill="rgb(214,175,50)" fg:x="359" fg:w="1"/><text x="29.0160%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="28.8462%" y="453" width="0.2404%" height="15" fill="rgb(213,182,5)" fg:x="360" fg:w="3"/><text x="29.0962%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.9263%" y="437" width="0.1603%" height="15" fill="rgb(209,199,19)" fg:x="361" fg:w="2"/><text x="29.1763%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.9263%" y="421" width="0.1603%" height="15" fill="rgb(236,224,42)" fg:x="361" fg:w="2"/><text x="29.1763%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="29.0064%" y="405" width="0.0801%" height="15" fill="rgb(246,226,29)" fg:x="362" fg:w="1"/><text x="29.2564%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="28.7660%" y="485" width="0.4006%" height="15" fill="rgb(227,223,11)" fg:x="359" fg:w="5"/><text x="29.0160%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="28.8462%" y="469" width="0.3205%" height="15" fill="rgb(219,7,51)" fg:x="360" fg:w="4"/><text x="29.0962%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="29.0865%" y="453" width="0.0801%" height="15" fill="rgb(245,167,10)" fg:x="363" fg:w="1"/><text x="29.3365%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="29.0865%" y="437" width="0.0801%" height="15" fill="rgb(237,224,16)" fg:x="363" fg:w="1"/><text x="29.3365%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.4071%" y="453" width="0.1603%" height="15" fill="rgb(226,132,13)" fg:x="367" fg:w="2"/><text x="29.6571%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.4071%" y="437" width="0.1603%" height="15" fill="rgb(214,140,3)" fg:x="367" fg:w="2"/><text x="29.6571%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="29.4071%" y="421" width="0.1603%" height="15" fill="rgb(221,177,4)" fg:x="367" fg:w="2"/><text x="29.6571%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.6474%" y="437" width="0.0801%" height="15" fill="rgb(238,139,3)" fg:x="370" fg:w="1"/><text x="29.8974%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="29.2468%" y="469" width="0.8814%" height="15" fill="rgb(216,17,39)" fg:x="365" fg:w="11"/><text x="29.4968%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="29.5673%" y="453" width="0.5609%" height="15" fill="rgb(238,120,9)" fg:x="369" fg:w="7"/><text x="29.8173%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="29.7276%" y="437" width="0.4006%" height="15" fill="rgb(244,92,53)" fg:x="371" fg:w="5"/><text x="29.9776%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.9679%" y="421" width="0.1603%" height="15" fill="rgb(224,148,33)" fg:x="374" fg:w="2"/><text x="30.2179%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.9679%" y="405" width="0.1603%" height="15" fill="rgb(243,6,36)" fg:x="374" fg:w="2"/><text x="30.2179%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="29.9679%" y="389" width="0.1603%" height="15" fill="rgb(230,102,11)" fg:x="374" fg:w="2"/><text x="30.2179%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (26 samples, 2.08%)</title><rect x="28.1250%" y="517" width="2.0833%" height="15" fill="rgb(234,148,36)" fg:x="351" fg:w="26"/><text x="28.3750%" y="527.50">&lt;..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (26 samples, 2.08%)</title><rect x="28.1250%" y="501" width="2.0833%" height="15" fill="rgb(251,153,25)" fg:x="351" fg:w="26"/><text x="28.3750%" y="511.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.04%)</title><rect x="29.1667%" y="485" width="1.0417%" height="15" fill="rgb(215,129,8)" fg:x="364" fg:w="13"/><text x="29.4167%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1282%" y="469" width="0.0801%" height="15" fill="rgb(224,128,35)" fg:x="376" fg:w="1"/><text x="30.3782%" y="479.50"></text></g><g><title>engine::session::state::State::flush_entities (122 samples, 9.78%)</title><rect x="20.5128%" y="629" width="9.7756%" height="15" fill="rgb(237,56,52)" fg:x="256" fg:w="122"/><text x="20.7628%" y="639.50">engine::sessio..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (117 samples, 9.38%)</title><rect x="20.9135%" y="613" width="9.3750%" height="15" fill="rgb(234,213,19)" fg:x="261" fg:w="117"/><text x="21.1635%" y="623.50">engine::sessi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (117 samples, 9.38%)</title><rect x="20.9135%" y="597" width="9.3750%" height="15" fill="rgb(252,82,23)" fg:x="261" fg:w="117"/><text x="21.1635%" y="607.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (43 samples, 3.45%)</title><rect x="26.8429%" y="581" width="3.4455%" height="15" fill="rgb(254,201,21)" fg:x="335" fg:w="43"/><text x="27.0929%" y="591.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (40 samples, 3.21%)</title><rect x="27.0833%" y="565" width="3.2051%" height="15" fill="rgb(250,186,11)" fg:x="338" fg:w="40"/><text x="27.3333%" y="575.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (40 samples, 3.21%)</title><rect x="27.0833%" y="549" width="3.2051%" height="15" fill="rgb(211,174,5)" fg:x="338" fg:w="40"/><text x="27.3333%" y="559.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (29 samples, 2.32%)</title><rect x="27.9647%" y="533" width="2.3237%" height="15" fill="rgb(214,121,10)" fg:x="349" fg:w="29"/><text x="28.2147%" y="543.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.2083%" y="517" width="0.0801%" height="15" fill="rgb(241,66,2)" fg:x="377" fg:w="1"/><text x="30.4583%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.2083%" y="501" width="0.0801%" height="15" fill="rgb(220,167,19)" fg:x="377" fg:w="1"/><text x="30.4583%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="30.2083%" y="485" width="0.0801%" height="15" fill="rgb(231,54,50)" fg:x="377" fg:w="1"/><text x="30.4583%" y="495.50"></text></g><g><title>engine::session::Session::flush (125 samples, 10.02%)</title><rect x="20.3526%" y="677" width="10.0160%" height="15" fill="rgb(239,217,53)" fg:x="254" fg:w="125"/><text x="20.6026%" y="687.50">engine::sessio..</text></g><g><title>engine::session::Session::save_changes (123 samples, 9.86%)</title><rect x="20.5128%" y="661" width="9.8558%" height="15" fill="rgb(248,8,0)" fg:x="256" fg:w="123"/><text x="20.7628%" y="671.50">engine::sessio..</text></g><g><title>engine::session::state::State::close (123 samples, 9.86%)</title><rect x="20.5128%" y="645" width="9.8558%" height="15" fill="rgb(229,118,37)" fg:x="256" fg:w="123"/><text x="20.7628%" y="655.50">engine::sessio..</text></g><g><title>engine::session::state::State::flush_futures (1 samples, 0.08%)</title><rect x="30.2885%" y="629" width="0.0801%" height="15" fill="rgb(253,223,43)" fg:x="378" fg:w="1"/><text x="30.5385%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="30.3686%" y="661" width="0.1603%" height="15" fill="rgb(211,77,36)" fg:x="379" fg:w="2"/><text x="30.6186%" y="671.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="30.4487%" y="645" width="0.0801%" height="15" fill="rgb(219,3,53)" fg:x="380" fg:w="1"/><text x="30.6987%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="30.4487%" y="629" width="0.0801%" height="15" fill="rgb(244,45,42)" fg:x="380" fg:w="1"/><text x="30.6987%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.5288%" y="661" width="0.0801%" height="15" fill="rgb(225,95,27)" fg:x="381" fg:w="1"/><text x="30.7788%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.6090%" y="645" width="0.0801%" height="15" fill="rgb(207,74,8)" fg:x="382" fg:w="1"/><text x="30.8590%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.6090%" y="629" width="0.0801%" height="15" fill="rgb(243,63,36)" fg:x="382" fg:w="1"/><text x="30.8590%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.6090%" y="613" width="0.0801%" height="15" fill="rgb(211,180,12)" fg:x="382" fg:w="1"/><text x="30.8590%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.6090%" y="597" width="0.0801%" height="15" fill="rgb(254,166,49)" fg:x="382" fg:w="1"/><text x="30.8590%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.6090%" y="581" width="0.0801%" height="15" fill="rgb(205,19,0)" fg:x="382" fg:w="1"/><text x="30.8590%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (8 samples, 0.64%)</title><rect x="30.3686%" y="677" width="0.6410%" height="15" fill="rgb(224,172,32)" fg:x="379" fg:w="8"/><text x="30.6186%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="30.6090%" y="661" width="0.4006%" height="15" fill="rgb(254,136,30)" fg:x="382" fg:w="5"/><text x="30.8590%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="30.6891%" y="645" width="0.3205%" height="15" fill="rgb(246,19,35)" fg:x="383" fg:w="4"/><text x="30.9391%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="30.7692%" y="629" width="0.2404%" height="15" fill="rgb(219,24,36)" fg:x="384" fg:w="3"/><text x="31.0192%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.9295%" y="613" width="0.0801%" height="15" fill="rgb(251,55,1)" fg:x="386" fg:w="1"/><text x="31.1795%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.9295%" y="597" width="0.0801%" height="15" fill="rgb(218,117,39)" fg:x="386" fg:w="1"/><text x="31.1795%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="31.0096%" y="629" width="0.1603%" height="15" fill="rgb(248,169,11)" fg:x="387" fg:w="2"/><text x="31.2596%" y="639.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="31.0096%" y="613" width="0.1603%" height="15" fill="rgb(244,40,44)" fg:x="387" fg:w="2"/><text x="31.2596%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.0897%" y="597" width="0.0801%" height="15" fill="rgb(234,62,37)" fg:x="388" fg:w="1"/><text x="31.3397%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="31.0897%" y="581" width="0.0801%" height="15" fill="rgb(207,117,42)" fg:x="388" fg:w="1"/><text x="31.3397%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="31.0096%" y="645" width="0.2404%" height="15" fill="rgb(213,43,2)" fg:x="387" fg:w="3"/><text x="31.2596%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="31.1699%" y="629" width="0.0801%" height="15" fill="rgb(244,202,51)" fg:x="389" fg:w="1"/><text x="31.4199%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="31.1699%" y="613" width="0.0801%" height="15" fill="rgb(253,174,46)" fg:x="389" fg:w="1"/><text x="31.4199%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="31.1699%" y="597" width="0.0801%" height="15" fill="rgb(251,23,1)" fg:x="389" fg:w="1"/><text x="31.4199%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.1699%" y="581" width="0.0801%" height="15" fill="rgb(253,26,1)" fg:x="389" fg:w="1"/><text x="31.4199%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.1699%" y="565" width="0.0801%" height="15" fill="rgb(216,89,31)" fg:x="389" fg:w="1"/><text x="31.4199%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="31.1699%" y="549" width="0.0801%" height="15" fill="rgb(209,109,5)" fg:x="389" fg:w="1"/><text x="31.4199%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.1699%" y="533" width="0.0801%" height="15" fill="rgb(229,63,13)" fg:x="389" fg:w="1"/><text x="31.4199%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.1699%" y="517" width="0.0801%" height="15" fill="rgb(238,137,54)" fg:x="389" fg:w="1"/><text x="31.4199%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.1699%" y="501" width="0.0801%" height="15" fill="rgb(228,1,9)" fg:x="389" fg:w="1"/><text x="31.4199%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="31.1699%" y="485" width="0.0801%" height="15" fill="rgb(249,120,48)" fg:x="389" fg:w="1"/><text x="31.4199%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.1699%" y="469" width="0.0801%" height="15" fill="rgb(209,72,36)" fg:x="389" fg:w="1"/><text x="31.4199%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.1699%" y="453" width="0.0801%" height="15" fill="rgb(247,98,49)" fg:x="389" fg:w="1"/><text x="31.4199%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.1699%" y="437" width="0.0801%" height="15" fill="rgb(233,75,36)" fg:x="389" fg:w="1"/><text x="31.4199%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="31.1699%" y="421" width="0.0801%" height="15" fill="rgb(225,14,24)" fg:x="389" fg:w="1"/><text x="31.4199%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.1699%" y="405" width="0.0801%" height="15" fill="rgb(237,193,20)" fg:x="389" fg:w="1"/><text x="31.4199%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.1699%" y="389" width="0.0801%" height="15" fill="rgb(239,122,19)" fg:x="389" fg:w="1"/><text x="31.4199%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.1699%" y="373" width="0.0801%" height="15" fill="rgb(231,220,10)" fg:x="389" fg:w="1"/><text x="31.4199%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.1699%" y="357" width="0.0801%" height="15" fill="rgb(220,66,15)" fg:x="389" fg:w="1"/><text x="31.4199%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.1699%" y="341" width="0.0801%" height="15" fill="rgb(215,171,52)" fg:x="389" fg:w="1"/><text x="31.4199%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="31.1699%" y="325" width="0.0801%" height="15" fill="rgb(241,169,50)" fg:x="389" fg:w="1"/><text x="31.4199%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="31.1699%" y="309" width="0.0801%" height="15" fill="rgb(236,189,0)" fg:x="389" fg:w="1"/><text x="31.4199%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="31.1699%" y="293" width="0.0801%" height="15" fill="rgb(217,147,20)" fg:x="389" fg:w="1"/><text x="31.4199%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="31.1699%" y="277" width="0.0801%" height="15" fill="rgb(206,188,39)" fg:x="389" fg:w="1"/><text x="31.4199%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.1699%" y="261" width="0.0801%" height="15" fill="rgb(227,118,25)" fg:x="389" fg:w="1"/><text x="31.4199%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.1699%" y="245" width="0.0801%" height="15" fill="rgb(248,171,40)" fg:x="389" fg:w="1"/><text x="31.4199%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="31.1699%" y="229" width="0.0801%" height="15" fill="rgb(251,90,54)" fg:x="389" fg:w="1"/><text x="31.4199%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="31.1699%" y="213" width="0.0801%" height="15" fill="rgb(234,11,46)" fg:x="389" fg:w="1"/><text x="31.4199%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.1699%" y="197" width="0.0801%" height="15" fill="rgb(229,134,13)" fg:x="389" fg:w="1"/><text x="31.4199%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="31.1699%" y="181" width="0.0801%" height="15" fill="rgb(223,129,3)" fg:x="389" fg:w="1"/><text x="31.4199%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="31.1699%" y="165" width="0.0801%" height="15" fill="rgb(221,124,13)" fg:x="389" fg:w="1"/><text x="31.4199%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="31.1699%" y="149" width="0.0801%" height="15" fill="rgb(234,3,18)" fg:x="389" fg:w="1"/><text x="31.4199%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.1699%" y="133" width="0.0801%" height="15" fill="rgb(249,199,20)" fg:x="389" fg:w="1"/><text x="31.4199%" y="143.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="31.2500%" y="629" width="0.0801%" height="15" fill="rgb(224,134,6)" fg:x="390" fg:w="1"/><text x="31.5000%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.3301%" y="613" width="0.0801%" height="15" fill="rgb(254,83,26)" fg:x="391" fg:w="1"/><text x="31.5801%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.4103%" y="613" width="0.0801%" height="15" fill="rgb(217,88,9)" fg:x="392" fg:w="1"/><text x="31.6603%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.4103%" y="597" width="0.0801%" height="15" fill="rgb(225,73,2)" fg:x="392" fg:w="1"/><text x="31.6603%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.4103%" y="581" width="0.0801%" height="15" fill="rgb(226,44,39)" fg:x="392" fg:w="1"/><text x="31.6603%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.4103%" y="565" width="0.0801%" height="15" fill="rgb(228,53,17)" fg:x="392" fg:w="1"/><text x="31.6603%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="31.2500%" y="645" width="0.3205%" height="15" fill="rgb(212,27,27)" fg:x="390" fg:w="4"/><text x="31.5000%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.3301%" y="629" width="0.2404%" height="15" fill="rgb(241,50,6)" fg:x="391" fg:w="3"/><text x="31.5801%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.4904%" y="613" width="0.0801%" height="15" fill="rgb(225,28,51)" fg:x="393" fg:w="1"/><text x="31.7404%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.4904%" y="597" width="0.0801%" height="15" fill="rgb(215,33,16)" fg:x="393" fg:w="1"/><text x="31.7404%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.4904%" y="581" width="0.0801%" height="15" fill="rgb(243,40,39)" fg:x="393" fg:w="1"/><text x="31.7404%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.4904%" y="565" width="0.0801%" height="15" fill="rgb(225,11,42)" fg:x="393" fg:w="1"/><text x="31.7404%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.4904%" y="549" width="0.0801%" height="15" fill="rgb(241,220,38)" fg:x="393" fg:w="1"/><text x="31.7404%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.4904%" y="533" width="0.0801%" height="15" fill="rgb(244,52,35)" fg:x="393" fg:w="1"/><text x="31.7404%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.4904%" y="517" width="0.0801%" height="15" fill="rgb(246,42,46)" fg:x="393" fg:w="1"/><text x="31.7404%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="31.5705%" y="597" width="0.1603%" height="15" fill="rgb(205,184,13)" fg:x="394" fg:w="2"/><text x="31.8205%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="31.5705%" y="581" width="0.1603%" height="15" fill="rgb(209,48,36)" fg:x="394" fg:w="2"/><text x="31.8205%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="31.5705%" y="565" width="0.1603%" height="15" fill="rgb(244,34,51)" fg:x="394" fg:w="2"/><text x="31.8205%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.5705%" y="549" width="0.1603%" height="15" fill="rgb(221,107,33)" fg:x="394" fg:w="2"/><text x="31.8205%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="31.6506%" y="533" width="0.0801%" height="15" fill="rgb(224,203,12)" fg:x="395" fg:w="1"/><text x="31.9006%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6506%" y="517" width="0.0801%" height="15" fill="rgb(230,215,18)" fg:x="395" fg:w="1"/><text x="31.9006%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6506%" y="501" width="0.0801%" height="15" fill="rgb(206,185,35)" fg:x="395" fg:w="1"/><text x="31.9006%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="31.5705%" y="613" width="0.3205%" height="15" fill="rgb(228,140,34)" fg:x="394" fg:w="4"/><text x="31.8205%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="31.7308%" y="597" width="0.1603%" height="15" fill="rgb(208,93,13)" fg:x="396" fg:w="2"/><text x="31.9808%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.7308%" y="581" width="0.1603%" height="15" fill="rgb(221,193,39)" fg:x="396" fg:w="2"/><text x="31.9808%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.7308%" y="565" width="0.1603%" height="15" fill="rgb(241,132,34)" fg:x="396" fg:w="2"/><text x="31.9808%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="31.7308%" y="549" width="0.1603%" height="15" fill="rgb(221,141,10)" fg:x="396" fg:w="2"/><text x="31.9808%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.7308%" y="533" width="0.1603%" height="15" fill="rgb(226,90,31)" fg:x="396" fg:w="2"/><text x="31.9808%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="31.8109%" y="517" width="0.0801%" height="15" fill="rgb(243,75,5)" fg:x="397" fg:w="1"/><text x="32.0609%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="31.0096%" y="661" width="0.9615%" height="15" fill="rgb(227,156,21)" fg:x="387" fg:w="12"/><text x="31.2596%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="31.5705%" y="645" width="0.4006%" height="15" fill="rgb(250,195,8)" fg:x="394" fg:w="5"/><text x="31.8205%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="31.5705%" y="629" width="0.4006%" height="15" fill="rgb(220,134,5)" fg:x="394" fg:w="5"/><text x="31.8205%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.8910%" y="613" width="0.0801%" height="15" fill="rgb(246,106,34)" fg:x="398" fg:w="1"/><text x="32.1410%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.1314%" y="581" width="0.0801%" height="15" fill="rgb(205,1,4)" fg:x="401" fg:w="1"/><text x="32.3814%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.1314%" y="565" width="0.0801%" height="15" fill="rgb(224,151,29)" fg:x="401" fg:w="1"/><text x="32.3814%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.1314%" y="549" width="0.0801%" height="15" fill="rgb(251,196,0)" fg:x="401" fg:w="1"/><text x="32.3814%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="32.2115%" y="517" width="0.0801%" height="15" fill="rgb(212,127,0)" fg:x="402" fg:w="1"/><text x="32.4615%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.2115%" y="501" width="0.0801%" height="15" fill="rgb(236,71,53)" fg:x="402" fg:w="1"/><text x="32.4615%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="32.1314%" y="613" width="0.2404%" height="15" fill="rgb(227,99,0)" fg:x="401" fg:w="3"/><text x="32.3814%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.1314%" y="597" width="0.2404%" height="15" fill="rgb(239,89,21)" fg:x="401" fg:w="3"/><text x="32.3814%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.2115%" y="581" width="0.1603%" height="15" fill="rgb(243,122,19)" fg:x="402" fg:w="2"/><text x="32.4615%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.2115%" y="565" width="0.1603%" height="15" fill="rgb(229,192,45)" fg:x="402" fg:w="2"/><text x="32.4615%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.2115%" y="549" width="0.1603%" height="15" fill="rgb(235,165,35)" fg:x="402" fg:w="2"/><text x="32.4615%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.2115%" y="533" width="0.1603%" height="15" fill="rgb(253,202,0)" fg:x="402" fg:w="2"/><text x="32.4615%" y="543.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="32.2917%" y="517" width="0.0801%" height="15" fill="rgb(235,51,20)" fg:x="403" fg:w="1"/><text x="32.5417%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3718%" y="597" width="0.0801%" height="15" fill="rgb(218,95,46)" fg:x="404" fg:w="1"/><text x="32.6218%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3718%" y="581" width="0.0801%" height="15" fill="rgb(212,81,10)" fg:x="404" fg:w="1"/><text x="32.6218%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.3718%" y="565" width="0.0801%" height="15" fill="rgb(240,59,0)" fg:x="404" fg:w="1"/><text x="32.6218%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.3718%" y="549" width="0.0801%" height="15" fill="rgb(212,191,42)" fg:x="404" fg:w="1"/><text x="32.6218%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.3718%" y="533" width="0.0801%" height="15" fill="rgb(233,140,3)" fg:x="404" fg:w="1"/><text x="32.6218%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.3718%" y="517" width="0.0801%" height="15" fill="rgb(215,69,23)" fg:x="404" fg:w="1"/><text x="32.6218%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.3718%" y="501" width="0.0801%" height="15" fill="rgb(240,202,20)" fg:x="404" fg:w="1"/><text x="32.6218%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.3718%" y="485" width="0.0801%" height="15" fill="rgb(209,146,50)" fg:x="404" fg:w="1"/><text x="32.6218%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.3718%" y="469" width="0.0801%" height="15" fill="rgb(253,102,54)" fg:x="404" fg:w="1"/><text x="32.6218%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.3718%" y="453" width="0.0801%" height="15" fill="rgb(250,173,47)" fg:x="404" fg:w="1"/><text x="32.6218%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.3718%" y="437" width="0.0801%" height="15" fill="rgb(232,142,7)" fg:x="404" fg:w="1"/><text x="32.6218%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.3718%" y="421" width="0.0801%" height="15" fill="rgb(230,157,47)" fg:x="404" fg:w="1"/><text x="32.6218%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4519%" y="581" width="0.0801%" height="15" fill="rgb(214,177,35)" fg:x="405" fg:w="1"/><text x="32.7019%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4519%" y="565" width="0.0801%" height="15" fill="rgb(234,119,46)" fg:x="405" fg:w="1"/><text x="32.7019%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4519%" y="549" width="0.0801%" height="15" fill="rgb(241,180,50)" fg:x="405" fg:w="1"/><text x="32.7019%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.4519%" y="533" width="0.0801%" height="15" fill="rgb(221,54,25)" fg:x="405" fg:w="1"/><text x="32.7019%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.4519%" y="517" width="0.0801%" height="15" fill="rgb(209,157,44)" fg:x="405" fg:w="1"/><text x="32.7019%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.4519%" y="501" width="0.0801%" height="15" fill="rgb(246,115,41)" fg:x="405" fg:w="1"/><text x="32.7019%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.4519%" y="485" width="0.0801%" height="15" fill="rgb(229,86,1)" fg:x="405" fg:w="1"/><text x="32.7019%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.4519%" y="469" width="0.0801%" height="15" fill="rgb(240,108,53)" fg:x="405" fg:w="1"/><text x="32.7019%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.4519%" y="453" width="0.0801%" height="15" fill="rgb(227,134,2)" fg:x="405" fg:w="1"/><text x="32.7019%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.4519%" y="437" width="0.0801%" height="15" fill="rgb(213,129,25)" fg:x="405" fg:w="1"/><text x="32.7019%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.4519%" y="421" width="0.0801%" height="15" fill="rgb(226,35,21)" fg:x="405" fg:w="1"/><text x="32.7019%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.4519%" y="405" width="0.0801%" height="15" fill="rgb(208,129,26)" fg:x="405" fg:w="1"/><text x="32.7019%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.4519%" y="389" width="0.0801%" height="15" fill="rgb(224,83,6)" fg:x="405" fg:w="1"/><text x="32.7019%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.4519%" y="373" width="0.0801%" height="15" fill="rgb(227,52,39)" fg:x="405" fg:w="1"/><text x="32.7019%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.4519%" y="357" width="0.0801%" height="15" fill="rgb(241,30,17)" fg:x="405" fg:w="1"/><text x="32.7019%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.5321%" y="581" width="0.0801%" height="15" fill="rgb(246,186,42)" fg:x="406" fg:w="1"/><text x="32.7821%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.5321%" y="565" width="0.0801%" height="15" fill="rgb(221,169,15)" fg:x="406" fg:w="1"/><text x="32.7821%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.5321%" y="549" width="0.0801%" height="15" fill="rgb(235,108,21)" fg:x="406" fg:w="1"/><text x="32.7821%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6923%" y="517" width="0.0801%" height="15" fill="rgb(219,148,30)" fg:x="408" fg:w="1"/><text x="32.9423%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="32.0513%" y="645" width="0.8013%" height="15" fill="rgb(220,109,5)" fg:x="400" fg:w="10"/><text x="32.3013%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="32.0513%" y="629" width="0.8013%" height="15" fill="rgb(213,203,48)" fg:x="400" fg:w="10"/><text x="32.3013%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="32.3718%" y="613" width="0.4808%" height="15" fill="rgb(244,71,33)" fg:x="404" fg:w="6"/><text x="32.6218%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="32.4519%" y="597" width="0.4006%" height="15" fill="rgb(209,23,2)" fg:x="405" fg:w="5"/><text x="32.7019%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="32.6122%" y="581" width="0.2404%" height="15" fill="rgb(219,97,7)" fg:x="407" fg:w="3"/><text x="32.8622%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="32.6122%" y="565" width="0.2404%" height="15" fill="rgb(216,161,23)" fg:x="407" fg:w="3"/><text x="32.8622%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="32.6122%" y="549" width="0.2404%" height="15" fill="rgb(207,45,42)" fg:x="407" fg:w="3"/><text x="32.8622%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="32.6122%" y="533" width="0.2404%" height="15" fill="rgb(241,61,4)" fg:x="407" fg:w="3"/><text x="32.8622%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.7724%" y="517" width="0.0801%" height="15" fill="rgb(236,170,1)" fg:x="409" fg:w="1"/><text x="33.0224%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.8526%" y="597" width="0.0801%" height="15" fill="rgb(239,72,5)" fg:x="410" fg:w="1"/><text x="33.1026%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.9327%" y="597" width="0.1603%" height="15" fill="rgb(214,13,50)" fg:x="411" fg:w="2"/><text x="33.1827%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="33.1731%" y="581" width="0.0801%" height="15" fill="rgb(224,88,9)" fg:x="414" fg:w="1"/><text x="33.4231%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="33.2532%" y="581" width="0.0801%" height="15" fill="rgb(238,192,34)" fg:x="415" fg:w="1"/><text x="33.5032%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.2532%" y="565" width="0.0801%" height="15" fill="rgb(217,203,50)" fg:x="415" fg:w="1"/><text x="33.5032%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (8 samples, 0.64%)</title><rect x="32.8526%" y="645" width="0.6410%" height="15" fill="rgb(241,123,32)" fg:x="410" fg:w="8"/><text x="33.1026%" y="655.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (8 samples, 0.64%)</title><rect x="32.8526%" y="629" width="0.6410%" height="15" fill="rgb(248,151,39)" fg:x="410" fg:w="8"/><text x="33.1026%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="32.8526%" y="613" width="0.6410%" height="15" fill="rgb(208,89,6)" fg:x="410" fg:w="8"/><text x="33.1026%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="33.0929%" y="597" width="0.4006%" height="15" fill="rgb(254,43,26)" fg:x="413" fg:w="5"/><text x="33.3429%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="33.3333%" y="581" width="0.1603%" height="15" fill="rgb(216,158,13)" fg:x="416" fg:w="2"/><text x="33.5833%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.3333%" y="565" width="0.1603%" height="15" fill="rgb(212,47,37)" fg:x="416" fg:w="2"/><text x="33.5833%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.3333%" y="549" width="0.1603%" height="15" fill="rgb(254,16,10)" fg:x="416" fg:w="2"/><text x="33.5833%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.3333%" y="533" width="0.1603%" height="15" fill="rgb(223,228,16)" fg:x="416" fg:w="2"/><text x="33.5833%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="33.4936%" y="629" width="0.0801%" height="15" fill="rgb(249,108,50)" fg:x="418" fg:w="1"/><text x="33.7436%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6538%" y="565" width="0.0801%" height="15" fill="rgb(208,220,5)" fg:x="420" fg:w="1"/><text x="33.9038%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.7340%" y="565" width="0.0801%" height="15" fill="rgb(217,89,48)" fg:x="421" fg:w="1"/><text x="33.9840%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.7340%" y="549" width="0.0801%" height="15" fill="rgb(212,113,41)" fg:x="421" fg:w="1"/><text x="33.9840%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7340%" y="533" width="0.0801%" height="15" fill="rgb(231,127,5)" fg:x="421" fg:w="1"/><text x="33.9840%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="33.6538%" y="597" width="0.3205%" height="15" fill="rgb(217,141,17)" fg:x="420" fg:w="4"/><text x="33.9038%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="33.6538%" y="581" width="0.3205%" height="15" fill="rgb(245,125,54)" fg:x="420" fg:w="4"/><text x="33.9038%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.8141%" y="565" width="0.1603%" height="15" fill="rgb(248,125,3)" fg:x="422" fg:w="2"/><text x="34.0641%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.8141%" y="549" width="0.1603%" height="15" fill="rgb(236,119,51)" fg:x="422" fg:w="2"/><text x="34.0641%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.8942%" y="533" width="0.0801%" height="15" fill="rgb(239,99,8)" fg:x="423" fg:w="1"/><text x="34.1442%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.8942%" y="517" width="0.0801%" height="15" fill="rgb(224,228,4)" fg:x="423" fg:w="1"/><text x="34.1442%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.8942%" y="501" width="0.0801%" height="15" fill="rgb(220,131,45)" fg:x="423" fg:w="1"/><text x="34.1442%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.8942%" y="485" width="0.0801%" height="15" fill="rgb(215,62,5)" fg:x="423" fg:w="1"/><text x="34.1442%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.8942%" y="469" width="0.0801%" height="15" fill="rgb(253,12,24)" fg:x="423" fg:w="1"/><text x="34.1442%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.8942%" y="453" width="0.0801%" height="15" fill="rgb(248,120,50)" fg:x="423" fg:w="1"/><text x="34.1442%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.9744%" y="565" width="0.1603%" height="15" fill="rgb(245,194,10)" fg:x="424" fg:w="2"/><text x="34.2244%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.9744%" y="549" width="0.1603%" height="15" fill="rgb(241,149,38)" fg:x="424" fg:w="2"/><text x="34.2244%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.9744%" y="533" width="0.1603%" height="15" fill="rgb(219,215,7)" fg:x="424" fg:w="2"/><text x="34.2244%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.9744%" y="517" width="0.1603%" height="15" fill="rgb(208,120,31)" fg:x="424" fg:w="2"/><text x="34.2244%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.9744%" y="501" width="0.1603%" height="15" fill="rgb(244,30,8)" fg:x="424" fg:w="2"/><text x="34.2244%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="33.9744%" y="485" width="0.1603%" height="15" fill="rgb(238,35,44)" fg:x="424" fg:w="2"/><text x="34.2244%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="33.9744%" y="469" width="0.1603%" height="15" fill="rgb(243,218,37)" fg:x="424" fg:w="2"/><text x="34.2244%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="33.9744%" y="453" width="0.1603%" height="15" fill="rgb(218,169,10)" fg:x="424" fg:w="2"/><text x="34.2244%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="33.9744%" y="437" width="0.1603%" height="15" fill="rgb(221,144,10)" fg:x="424" fg:w="2"/><text x="34.2244%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="33.9744%" y="421" width="0.1603%" height="15" fill="rgb(226,41,38)" fg:x="424" fg:w="2"/><text x="34.2244%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="33.9744%" y="405" width="0.1603%" height="15" fill="rgb(228,3,1)" fg:x="424" fg:w="2"/><text x="34.2244%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="33.9744%" y="389" width="0.1603%" height="15" fill="rgb(209,129,12)" fg:x="424" fg:w="2"/><text x="34.2244%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="33.9744%" y="373" width="0.1603%" height="15" fill="rgb(213,136,33)" fg:x="424" fg:w="2"/><text x="34.2244%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="33.9744%" y="357" width="0.1603%" height="15" fill="rgb(209,181,29)" fg:x="424" fg:w="2"/><text x="34.2244%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.9744%" y="341" width="0.1603%" height="15" fill="rgb(234,173,18)" fg:x="424" fg:w="2"/><text x="34.2244%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.1346%" y="565" width="0.0801%" height="15" fill="rgb(227,73,47)" fg:x="426" fg:w="1"/><text x="34.3846%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="34.1346%" y="549" width="0.0801%" height="15" fill="rgb(234,9,34)" fg:x="426" fg:w="1"/><text x="34.3846%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.2147%" y="565" width="0.0801%" height="15" fill="rgb(235,172,15)" fg:x="427" fg:w="1"/><text x="34.4647%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.2147%" y="549" width="0.0801%" height="15" fill="rgb(245,61,2)" fg:x="427" fg:w="1"/><text x="34.4647%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="33.5737%" y="629" width="0.8013%" height="15" fill="rgb(238,39,47)" fg:x="419" fg:w="10"/><text x="33.8237%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="33.6538%" y="613" width="0.7212%" height="15" fill="rgb(234,37,24)" fg:x="420" fg:w="9"/><text x="33.9038%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="33.9744%" y="597" width="0.4006%" height="15" fill="rgb(248,223,24)" fg:x="424" fg:w="5"/><text x="34.2244%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="33.9744%" y="581" width="0.4006%" height="15" fill="rgb(223,12,15)" fg:x="424" fg:w="5"/><text x="34.2244%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.2949%" y="565" width="0.0801%" height="15" fill="rgb(249,6,3)" fg:x="428" fg:w="1"/><text x="34.5449%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.2949%" y="549" width="0.0801%" height="15" fill="rgb(237,105,33)" fg:x="428" fg:w="1"/><text x="34.5449%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.2949%" y="533" width="0.0801%" height="15" fill="rgb(252,208,35)" fg:x="428" fg:w="1"/><text x="34.5449%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.2949%" y="517" width="0.0801%" height="15" fill="rgb(215,181,35)" fg:x="428" fg:w="1"/><text x="34.5449%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.2949%" y="501" width="0.0801%" height="15" fill="rgb(246,212,3)" fg:x="428" fg:w="1"/><text x="34.5449%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="34.3750%" y="597" width="0.0801%" height="15" fill="rgb(247,156,24)" fg:x="429" fg:w="1"/><text x="34.6250%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (13 samples, 1.04%)</title><rect x="33.4936%" y="645" width="1.0417%" height="15" fill="rgb(248,9,31)" fg:x="418" fg:w="13"/><text x="33.7436%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="34.3750%" y="629" width="0.1603%" height="15" fill="rgb(234,26,45)" fg:x="429" fg:w="2"/><text x="34.6250%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="34.3750%" y="613" width="0.1603%" height="15" fill="rgb(249,11,32)" fg:x="429" fg:w="2"/><text x="34.6250%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="34.4551%" y="597" width="0.0801%" height="15" fill="rgb(249,162,33)" fg:x="430" fg:w="1"/><text x="34.7051%" y="607.50"></text></g><g><title>plugins_core::build::Build::holding (45 samples, 3.61%)</title><rect x="31.0096%" y="677" width="3.6058%" height="15" fill="rgb(232,4,32)" fg:x="387" fg:w="45"/><text x="31.2596%" y="687.50">plug..</text></g><g><title>plugins_core::tools::set_container (33 samples, 2.64%)</title><rect x="31.9712%" y="661" width="2.6442%" height="15" fill="rgb(212,5,45)" fg:x="399" fg:w="33"/><text x="32.2212%" y="671.50">pl..</text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="34.5353%" y="645" width="0.0801%" height="15" fill="rgb(227,95,13)" fg:x="431" fg:w="1"/><text x="34.7853%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="34.5353%" y="629" width="0.0801%" height="15" fill="rgb(223,205,10)" fg:x="431" fg:w="1"/><text x="34.7853%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5353%" y="613" width="0.0801%" height="15" fill="rgb(222,178,8)" fg:x="431" fg:w="1"/><text x="34.7853%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.6955%" y="613" width="0.1603%" height="15" fill="rgb(216,13,22)" fg:x="433" fg:w="2"/><text x="34.9455%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7756%" y="597" width="0.0801%" height="15" fill="rgb(240,167,12)" fg:x="434" fg:w="1"/><text x="35.0256%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7756%" y="581" width="0.0801%" height="15" fill="rgb(235,68,35)" fg:x="434" fg:w="1"/><text x="35.0256%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.7756%" y="565" width="0.0801%" height="15" fill="rgb(253,40,27)" fg:x="434" fg:w="1"/><text x="35.0256%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.7756%" y="549" width="0.0801%" height="15" fill="rgb(214,19,28)" fg:x="434" fg:w="1"/><text x="35.0256%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.7756%" y="533" width="0.0801%" height="15" fill="rgb(210,167,45)" fg:x="434" fg:w="1"/><text x="35.0256%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.7756%" y="517" width="0.0801%" height="15" fill="rgb(232,97,40)" fg:x="434" fg:w="1"/><text x="35.0256%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.7756%" y="501" width="0.0801%" height="15" fill="rgb(250,35,23)" fg:x="434" fg:w="1"/><text x="35.0256%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.7756%" y="485" width="0.0801%" height="15" fill="rgb(248,47,53)" fg:x="434" fg:w="1"/><text x="35.0256%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.7756%" y="469" width="0.0801%" height="15" fill="rgb(226,58,50)" fg:x="434" fg:w="1"/><text x="35.0256%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.7756%" y="453" width="0.0801%" height="15" fill="rgb(217,105,26)" fg:x="434" fg:w="1"/><text x="35.0256%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.7756%" y="437" width="0.0801%" height="15" fill="rgb(208,64,1)" fg:x="434" fg:w="1"/><text x="35.0256%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.7756%" y="421" width="0.0801%" height="15" fill="rgb(214,80,1)" fg:x="434" fg:w="1"/><text x="35.0256%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.7756%" y="405" width="0.0801%" height="15" fill="rgb(206,175,26)" fg:x="434" fg:w="1"/><text x="35.0256%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.7756%" y="389" width="0.0801%" height="15" fill="rgb(235,156,37)" fg:x="434" fg:w="1"/><text x="35.0256%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="34.6154%" y="677" width="0.4006%" height="15" fill="rgb(213,100,9)" fg:x="432" fg:w="5"/><text x="34.8654%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="34.6955%" y="661" width="0.3205%" height="15" fill="rgb(241,15,13)" fg:x="433" fg:w="4"/><text x="34.9455%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="34.6955%" y="645" width="0.3205%" height="15" fill="rgb(205,97,43)" fg:x="433" fg:w="4"/><text x="34.9455%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="34.6955%" y="629" width="0.3205%" height="15" fill="rgb(216,106,32)" fg:x="433" fg:w="4"/><text x="34.9455%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.8558%" y="613" width="0.1603%" height="15" fill="rgb(226,200,8)" fg:x="435" fg:w="2"/><text x="35.1058%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.8558%" y="597" width="0.1603%" height="15" fill="rgb(244,54,29)" fg:x="435" fg:w="2"/><text x="35.1058%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="34.8558%" y="581" width="0.1603%" height="15" fill="rgb(252,169,12)" fg:x="435" fg:w="2"/><text x="35.1058%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.8558%" y="565" width="0.1603%" height="15" fill="rgb(231,199,11)" fg:x="435" fg:w="2"/><text x="35.1058%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9359%" y="549" width="0.0801%" height="15" fill="rgb(233,191,18)" fg:x="436" fg:w="1"/><text x="35.1859%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9359%" y="533" width="0.0801%" height="15" fill="rgb(215,83,47)" fg:x="436" fg:w="1"/><text x="35.1859%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.0160%" y="613" width="0.0801%" height="15" fill="rgb(251,67,19)" fg:x="437" fg:w="1"/><text x="35.2660%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="35.0962%" y="549" width="0.0801%" height="15" fill="rgb(240,7,20)" fg:x="438" fg:w="1"/><text x="35.3462%" y="559.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="35.0160%" y="645" width="0.2404%" height="15" fill="rgb(210,150,26)" fg:x="437" fg:w="3"/><text x="35.2660%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="35.0160%" y="629" width="0.2404%" height="15" fill="rgb(228,75,42)" fg:x="437" fg:w="3"/><text x="35.2660%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="35.0962%" y="613" width="0.1603%" height="15" fill="rgb(237,134,48)" fg:x="438" fg:w="2"/><text x="35.3462%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.0962%" y="597" width="0.1603%" height="15" fill="rgb(205,80,50)" fg:x="438" fg:w="2"/><text x="35.3462%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="35.0962%" y="581" width="0.1603%" height="15" fill="rgb(217,74,48)" fg:x="438" fg:w="2"/><text x="35.3462%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="35.0962%" y="565" width="0.1603%" height="15" fill="rgb(205,82,50)" fg:x="438" fg:w="2"/><text x="35.3462%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.1763%" y="549" width="0.0801%" height="15" fill="rgb(228,1,33)" fg:x="439" fg:w="1"/><text x="35.4263%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.1763%" y="533" width="0.0801%" height="15" fill="rgb(214,50,23)" fg:x="439" fg:w="1"/><text x="35.4263%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.2564%" y="629" width="0.0801%" height="15" fill="rgb(210,62,9)" fg:x="440" fg:w="1"/><text x="35.5064%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="35.0160%" y="677" width="0.4006%" height="15" fill="rgb(210,104,37)" fg:x="437" fg:w="5"/><text x="35.2660%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.40%)</title><rect x="35.0160%" y="661" width="0.4006%" height="15" fill="rgb(232,104,43)" fg:x="437" fg:w="5"/><text x="35.2660%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="35.2564%" y="645" width="0.1603%" height="15" fill="rgb(244,52,6)" fg:x="440" fg:w="2"/><text x="35.5064%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.3365%" y="629" width="0.0801%" height="15" fill="rgb(211,174,52)" fg:x="441" fg:w="1"/><text x="35.5865%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.3365%" y="613" width="0.0801%" height="15" fill="rgb(229,48,4)" fg:x="441" fg:w="1"/><text x="35.5865%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="35.4968%" y="629" width="0.1603%" height="15" fill="rgb(205,155,16)" fg:x="443" fg:w="2"/><text x="35.7468%" y="639.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="35.4968%" y="613" width="0.1603%" height="15" fill="rgb(211,141,53)" fg:x="443" fg:w="2"/><text x="35.7468%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.7372%" y="437" width="0.0801%" height="15" fill="rgb(240,148,11)" fg:x="446" fg:w="1"/><text x="35.9872%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.7372%" y="421" width="0.0801%" height="15" fill="rgb(214,45,23)" fg:x="446" fg:w="1"/><text x="35.9872%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.7372%" y="405" width="0.0801%" height="15" fill="rgb(248,74,26)" fg:x="446" fg:w="1"/><text x="35.9872%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.7372%" y="389" width="0.0801%" height="15" fill="rgb(218,121,16)" fg:x="446" fg:w="1"/><text x="35.9872%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.7372%" y="373" width="0.0801%" height="15" fill="rgb(218,10,47)" fg:x="446" fg:w="1"/><text x="35.9872%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.7372%" y="357" width="0.0801%" height="15" fill="rgb(227,99,14)" fg:x="446" fg:w="1"/><text x="35.9872%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.7372%" y="341" width="0.0801%" height="15" fill="rgb(229,83,46)" fg:x="446" fg:w="1"/><text x="35.9872%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.7372%" y="325" width="0.0801%" height="15" fill="rgb(228,25,1)" fg:x="446" fg:w="1"/><text x="35.9872%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.7372%" y="309" width="0.0801%" height="15" fill="rgb(252,190,15)" fg:x="446" fg:w="1"/><text x="35.9872%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="35.7372%" y="293" width="0.0801%" height="15" fill="rgb(213,103,51)" fg:x="446" fg:w="1"/><text x="35.9872%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.7372%" y="277" width="0.0801%" height="15" fill="rgb(220,38,44)" fg:x="446" fg:w="1"/><text x="35.9872%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.7372%" y="261" width="0.0801%" height="15" fill="rgb(210,45,26)" fg:x="446" fg:w="1"/><text x="35.9872%" y="271.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="35.8173%" y="421" width="0.0801%" height="15" fill="rgb(205,95,48)" fg:x="447" fg:w="1"/><text x="36.0673%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="35.8173%" y="405" width="0.0801%" height="15" fill="rgb(225,179,37)" fg:x="447" fg:w="1"/><text x="36.0673%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.8173%" y="389" width="0.0801%" height="15" fill="rgb(230,209,3)" fg:x="447" fg:w="1"/><text x="36.0673%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.8173%" y="373" width="0.0801%" height="15" fill="rgb(248,12,46)" fg:x="447" fg:w="1"/><text x="36.0673%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.8173%" y="357" width="0.0801%" height="15" fill="rgb(234,18,0)" fg:x="447" fg:w="1"/><text x="36.0673%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.8173%" y="341" width="0.0801%" height="15" fill="rgb(238,197,14)" fg:x="447" fg:w="1"/><text x="36.0673%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.8173%" y="325" width="0.0801%" height="15" fill="rgb(251,162,48)" fg:x="447" fg:w="1"/><text x="36.0673%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.8173%" y="309" width="0.0801%" height="15" fill="rgb(237,73,42)" fg:x="447" fg:w="1"/><text x="36.0673%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.8173%" y="293" width="0.0801%" height="15" fill="rgb(211,108,8)" fg:x="447" fg:w="1"/><text x="36.0673%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.8173%" y="277" width="0.0801%" height="15" fill="rgb(213,45,22)" fg:x="447" fg:w="1"/><text x="36.0673%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.8173%" y="261" width="0.0801%" height="15" fill="rgb(252,154,5)" fg:x="447" fg:w="1"/><text x="36.0673%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.8173%" y="245" width="0.0801%" height="15" fill="rgb(221,79,52)" fg:x="447" fg:w="1"/><text x="36.0673%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.8173%" y="229" width="0.0801%" height="15" fill="rgb(229,220,36)" fg:x="447" fg:w="1"/><text x="36.0673%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="35.8173%" y="213" width="0.0801%" height="15" fill="rgb(211,17,16)" fg:x="447" fg:w="1"/><text x="36.0673%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.8173%" y="197" width="0.0801%" height="15" fill="rgb(222,55,31)" fg:x="447" fg:w="1"/><text x="36.0673%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="35.8173%" y="181" width="0.0801%" height="15" fill="rgb(221,221,31)" fg:x="447" fg:w="1"/><text x="36.0673%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="35.8173%" y="165" width="0.0801%" height="15" fill="rgb(227,168,26)" fg:x="447" fg:w="1"/><text x="36.0673%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="35.8173%" y="149" width="0.0801%" height="15" fill="rgb(224,139,9)" fg:x="447" fg:w="1"/><text x="36.0673%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.8173%" y="133" width="0.0801%" height="15" fill="rgb(254,172,0)" fg:x="447" fg:w="1"/><text x="36.0673%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (6 samples, 0.48%)</title><rect x="35.4968%" y="645" width="0.4808%" height="15" fill="rgb(235,203,1)" fg:x="443" fg:w="6"/><text x="35.7468%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="35.6571%" y="629" width="0.3205%" height="15" fill="rgb(216,205,24)" fg:x="445" fg:w="4"/><text x="35.9071%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="35.7372%" y="613" width="0.2404%" height="15" fill="rgb(233,24,6)" fg:x="446" fg:w="3"/><text x="35.9872%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="35.7372%" y="597" width="0.2404%" height="15" fill="rgb(244,110,9)" fg:x="446" fg:w="3"/><text x="35.9872%" y="607.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="35.7372%" y="581" width="0.2404%" height="15" fill="rgb(239,222,42)" fg:x="446" fg:w="3"/><text x="35.9872%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="35.7372%" y="565" width="0.2404%" height="15" fill="rgb(218,145,13)" fg:x="446" fg:w="3"/><text x="35.9872%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="35.7372%" y="549" width="0.2404%" height="15" fill="rgb(207,69,11)" fg:x="446" fg:w="3"/><text x="35.9872%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="35.7372%" y="533" width="0.2404%" height="15" fill="rgb(220,223,22)" fg:x="446" fg:w="3"/><text x="35.9872%" y="543.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="35.7372%" y="517" width="0.2404%" height="15" fill="rgb(245,102,5)" fg:x="446" fg:w="3"/><text x="35.9872%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="35.7372%" y="501" width="0.2404%" height="15" fill="rgb(211,148,2)" fg:x="446" fg:w="3"/><text x="35.9872%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="35.7372%" y="485" width="0.2404%" height="15" fill="rgb(241,13,44)" fg:x="446" fg:w="3"/><text x="35.9872%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="35.7372%" y="469" width="0.2404%" height="15" fill="rgb(219,137,21)" fg:x="446" fg:w="3"/><text x="35.9872%" y="479.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="35.7372%" y="453" width="0.2404%" height="15" fill="rgb(242,206,5)" fg:x="446" fg:w="3"/><text x="35.9872%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="35.8173%" y="437" width="0.1603%" height="15" fill="rgb(217,114,22)" fg:x="447" fg:w="2"/><text x="36.0673%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.8974%" y="421" width="0.0801%" height="15" fill="rgb(253,206,42)" fg:x="448" fg:w="1"/><text x="36.1474%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.8974%" y="405" width="0.0801%" height="15" fill="rgb(236,102,18)" fg:x="448" fg:w="1"/><text x="36.1474%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.8974%" y="389" width="0.0801%" height="15" fill="rgb(208,59,49)" fg:x="448" fg:w="1"/><text x="36.1474%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.8974%" y="373" width="0.0801%" height="15" fill="rgb(215,194,28)" fg:x="448" fg:w="1"/><text x="36.1474%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.8974%" y="357" width="0.0801%" height="15" fill="rgb(243,207,11)" fg:x="448" fg:w="1"/><text x="36.1474%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.8974%" y="341" width="0.0801%" height="15" fill="rgb(254,179,35)" fg:x="448" fg:w="1"/><text x="36.1474%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.8974%" y="325" width="0.0801%" height="15" fill="rgb(235,97,3)" fg:x="448" fg:w="1"/><text x="36.1474%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.8974%" y="309" width="0.0801%" height="15" fill="rgb(215,155,33)" fg:x="448" fg:w="1"/><text x="36.1474%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.8974%" y="293" width="0.0801%" height="15" fill="rgb(223,128,12)" fg:x="448" fg:w="1"/><text x="36.1474%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="35.8974%" y="277" width="0.0801%" height="15" fill="rgb(208,157,18)" fg:x="448" fg:w="1"/><text x="36.1474%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="35.9776%" y="645" width="0.0801%" height="15" fill="rgb(249,70,54)" fg:x="449" fg:w="1"/><text x="36.2276%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.9776%" y="629" width="0.0801%" height="15" fill="rgb(244,118,24)" fg:x="449" fg:w="1"/><text x="36.2276%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.9776%" y="613" width="0.0801%" height="15" fill="rgb(211,54,0)" fg:x="449" fg:w="1"/><text x="36.2276%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.9776%" y="597" width="0.0801%" height="15" fill="rgb(245,137,45)" fg:x="449" fg:w="1"/><text x="36.2276%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.9776%" y="581" width="0.0801%" height="15" fill="rgb(232,154,31)" fg:x="449" fg:w="1"/><text x="36.2276%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.9776%" y="565" width="0.0801%" height="15" fill="rgb(253,6,39)" fg:x="449" fg:w="1"/><text x="36.2276%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.9776%" y="549" width="0.0801%" height="15" fill="rgb(234,183,24)" fg:x="449" fg:w="1"/><text x="36.2276%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="36.0577%" y="629" width="0.2404%" height="15" fill="rgb(252,84,40)" fg:x="450" fg:w="3"/><text x="36.3077%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="36.0577%" y="613" width="0.2404%" height="15" fill="rgb(224,65,2)" fg:x="450" fg:w="3"/><text x="36.3077%" y="623.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.1378%" y="597" width="0.1603%" height="15" fill="rgb(229,38,24)" fg:x="451" fg:w="2"/><text x="36.3878%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.1378%" y="581" width="0.1603%" height="15" fill="rgb(218,131,50)" fg:x="451" fg:w="2"/><text x="36.3878%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.2179%" y="565" width="0.0801%" height="15" fill="rgb(233,106,18)" fg:x="452" fg:w="1"/><text x="36.4679%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2179%" y="549" width="0.0801%" height="15" fill="rgb(220,216,11)" fg:x="452" fg:w="1"/><text x="36.4679%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2179%" y="533" width="0.0801%" height="15" fill="rgb(251,100,45)" fg:x="452" fg:w="1"/><text x="36.4679%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.2179%" y="517" width="0.0801%" height="15" fill="rgb(235,143,32)" fg:x="452" fg:w="1"/><text x="36.4679%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.2179%" y="501" width="0.0801%" height="15" fill="rgb(248,124,34)" fg:x="452" fg:w="1"/><text x="36.4679%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.2179%" y="485" width="0.0801%" height="15" fill="rgb(225,221,4)" fg:x="452" fg:w="1"/><text x="36.4679%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.2179%" y="469" width="0.0801%" height="15" fill="rgb(242,27,43)" fg:x="452" fg:w="1"/><text x="36.4679%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.2179%" y="453" width="0.0801%" height="15" fill="rgb(227,54,8)" fg:x="452" fg:w="1"/><text x="36.4679%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="36.0577%" y="645" width="0.3205%" height="15" fill="rgb(253,139,49)" fg:x="450" fg:w="4"/><text x="36.3077%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="36.2981%" y="629" width="0.0801%" height="15" fill="rgb(231,26,43)" fg:x="453" fg:w="1"/><text x="36.5481%" y="639.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="36.2981%" y="613" width="0.0801%" height="15" fill="rgb(207,121,39)" fg:x="453" fg:w="1"/><text x="36.5481%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.2981%" y="597" width="0.0801%" height="15" fill="rgb(223,101,35)" fg:x="453" fg:w="1"/><text x="36.5481%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2981%" y="581" width="0.0801%" height="15" fill="rgb(232,87,23)" fg:x="453" fg:w="1"/><text x="36.5481%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2981%" y="565" width="0.0801%" height="15" fill="rgb(225,180,29)" fg:x="453" fg:w="1"/><text x="36.5481%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.2981%" y="549" width="0.0801%" height="15" fill="rgb(225,25,17)" fg:x="453" fg:w="1"/><text x="36.5481%" y="559.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="36.3782%" y="597" width="0.0801%" height="15" fill="rgb(223,8,52)" fg:x="454" fg:w="1"/><text x="36.6282%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="36.3782%" y="581" width="0.0801%" height="15" fill="rgb(246,42,21)" fg:x="454" fg:w="1"/><text x="36.6282%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="36.3782%" y="565" width="0.0801%" height="15" fill="rgb(205,64,43)" fg:x="454" fg:w="1"/><text x="36.6282%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.3782%" y="549" width="0.0801%" height="15" fill="rgb(221,160,13)" fg:x="454" fg:w="1"/><text x="36.6282%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="36.3782%" y="533" width="0.0801%" height="15" fill="rgb(239,58,35)" fg:x="454" fg:w="1"/><text x="36.6282%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3782%" y="517" width="0.0801%" height="15" fill="rgb(251,26,40)" fg:x="454" fg:w="1"/><text x="36.6282%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="35.4968%" y="661" width="1.0417%" height="15" fill="rgb(247,0,4)" fg:x="443" fg:w="13"/><text x="35.7468%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="36.3782%" y="645" width="0.1603%" height="15" fill="rgb(218,130,10)" fg:x="454" fg:w="2"/><text x="36.6282%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="36.3782%" y="629" width="0.1603%" height="15" fill="rgb(239,32,7)" fg:x="454" fg:w="2"/><text x="36.6282%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="36.3782%" y="613" width="0.1603%" height="15" fill="rgb(210,192,24)" fg:x="454" fg:w="2"/><text x="36.6282%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.4583%" y="597" width="0.0801%" height="15" fill="rgb(226,212,17)" fg:x="455" fg:w="1"/><text x="36.7083%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.4583%" y="581" width="0.0801%" height="15" fill="rgb(219,201,28)" fg:x="455" fg:w="1"/><text x="36.7083%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.4583%" y="565" width="0.0801%" height="15" fill="rgb(235,207,41)" fg:x="455" fg:w="1"/><text x="36.7083%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.4583%" y="549" width="0.0801%" height="15" fill="rgb(241,95,54)" fg:x="455" fg:w="1"/><text x="36.7083%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.4583%" y="533" width="0.0801%" height="15" fill="rgb(248,12,23)" fg:x="455" fg:w="1"/><text x="36.7083%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.4583%" y="517" width="0.0801%" height="15" fill="rgb(228,173,4)" fg:x="455" fg:w="1"/><text x="36.7083%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.4583%" y="501" width="0.0801%" height="15" fill="rgb(254,99,5)" fg:x="455" fg:w="1"/><text x="36.7083%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.4583%" y="485" width="0.0801%" height="15" fill="rgb(212,184,17)" fg:x="455" fg:w="1"/><text x="36.7083%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5385%" y="581" width="0.0801%" height="15" fill="rgb(252,174,1)" fg:x="456" fg:w="1"/><text x="36.7885%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5385%" y="565" width="0.0801%" height="15" fill="rgb(241,118,51)" fg:x="456" fg:w="1"/><text x="36.7885%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.6186%" y="581" width="0.0801%" height="15" fill="rgb(227,94,47)" fg:x="457" fg:w="1"/><text x="36.8686%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.6186%" y="565" width="0.0801%" height="15" fill="rgb(229,104,2)" fg:x="457" fg:w="1"/><text x="36.8686%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.6186%" y="549" width="0.0801%" height="15" fill="rgb(219,28,31)" fg:x="457" fg:w="1"/><text x="36.8686%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.6987%" y="517" width="0.0801%" height="15" fill="rgb(233,109,36)" fg:x="458" fg:w="1"/><text x="36.9487%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.7788%" y="517" width="0.1603%" height="15" fill="rgb(246,88,11)" fg:x="459" fg:w="2"/><text x="37.0288%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8590%" y="501" width="0.0801%" height="15" fill="rgb(209,212,17)" fg:x="460" fg:w="1"/><text x="37.1090%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="36.5385%" y="613" width="0.4808%" height="15" fill="rgb(243,59,29)" fg:x="456" fg:w="6"/><text x="36.7885%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="36.5385%" y="597" width="0.4808%" height="15" fill="rgb(244,205,48)" fg:x="456" fg:w="6"/><text x="36.7885%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="36.6987%" y="581" width="0.3205%" height="15" fill="rgb(227,30,6)" fg:x="458" fg:w="4"/><text x="36.9487%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="36.6987%" y="565" width="0.3205%" height="15" fill="rgb(220,205,48)" fg:x="458" fg:w="4"/><text x="36.9487%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="36.6987%" y="549" width="0.3205%" height="15" fill="rgb(250,94,14)" fg:x="458" fg:w="4"/><text x="36.9487%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="36.6987%" y="533" width="0.3205%" height="15" fill="rgb(216,119,42)" fg:x="458" fg:w="4"/><text x="36.9487%" y="543.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="36.9391%" y="517" width="0.0801%" height="15" fill="rgb(232,155,0)" fg:x="461" fg:w="1"/><text x="37.1891%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="36.5385%" y="645" width="0.5609%" height="15" fill="rgb(212,24,32)" fg:x="456" fg:w="7"/><text x="36.7885%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="36.5385%" y="629" width="0.5609%" height="15" fill="rgb(216,69,20)" fg:x="456" fg:w="7"/><text x="36.7885%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="37.0192%" y="613" width="0.0801%" height="15" fill="rgb(229,73,31)" fg:x="462" fg:w="1"/><text x="37.2692%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.0192%" y="597" width="0.0801%" height="15" fill="rgb(224,219,20)" fg:x="462" fg:w="1"/><text x="37.2692%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.0192%" y="581" width="0.0801%" height="15" fill="rgb(215,146,41)" fg:x="462" fg:w="1"/><text x="37.2692%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.0192%" y="565" width="0.0801%" height="15" fill="rgb(244,71,31)" fg:x="462" fg:w="1"/><text x="37.2692%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.0192%" y="549" width="0.0801%" height="15" fill="rgb(224,24,11)" fg:x="462" fg:w="1"/><text x="37.2692%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="37.0994%" y="645" width="0.0801%" height="15" fill="rgb(229,76,15)" fg:x="463" fg:w="1"/><text x="37.3494%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.0994%" y="629" width="0.0801%" height="15" fill="rgb(209,93,2)" fg:x="463" fg:w="1"/><text x="37.3494%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="37.2596%" y="613" width="0.0801%" height="15" fill="rgb(216,200,50)" fg:x="465" fg:w="1"/><text x="37.5096%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3397%" y="549" width="0.0801%" height="15" fill="rgb(211,67,34)" fg:x="466" fg:w="1"/><text x="37.5897%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.3397%" y="565" width="0.1603%" height="15" fill="rgb(225,87,47)" fg:x="466" fg:w="2"/><text x="37.5897%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.4199%" y="549" width="0.0801%" height="15" fill="rgb(217,185,16)" fg:x="467" fg:w="1"/><text x="37.6699%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.4199%" y="533" width="0.0801%" height="15" fill="rgb(205,0,0)" fg:x="467" fg:w="1"/><text x="37.6699%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="37.1795%" y="645" width="0.4006%" height="15" fill="rgb(207,116,45)" fg:x="464" fg:w="5"/><text x="37.4295%" y="655.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (4 samples, 0.32%)</title><rect x="37.2596%" y="629" width="0.3205%" height="15" fill="rgb(221,156,26)" fg:x="465" fg:w="4"/><text x="37.5096%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="37.3397%" y="613" width="0.2404%" height="15" fill="rgb(213,140,4)" fg:x="466" fg:w="3"/><text x="37.5897%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="37.3397%" y="597" width="0.2404%" height="15" fill="rgb(231,224,15)" fg:x="466" fg:w="3"/><text x="37.5897%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="37.3397%" y="581" width="0.2404%" height="15" fill="rgb(244,76,20)" fg:x="466" fg:w="3"/><text x="37.5897%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="37.5000%" y="565" width="0.0801%" height="15" fill="rgb(238,117,7)" fg:x="468" fg:w="1"/><text x="37.7500%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (252 samples, 20.19%)</title><rect x="17.5481%" y="693" width="20.1923%" height="15" fill="rgb(235,1,10)" fg:x="219" fg:w="252"/><text x="17.7981%" y="703.50">plugins_core::build::BuildSurrou..</text></g><g><title>plugins_core::build::Build::occupying (29 samples, 2.32%)</title><rect x="35.4167%" y="677" width="2.3237%" height="15" fill="rgb(216,165,6)" fg:x="442" fg:w="29"/><text x="35.6667%" y="687.50">p..</text></g><g><title>plugins_core::tools::set_occupying (15 samples, 1.20%)</title><rect x="36.5385%" y="661" width="1.2019%" height="15" fill="rgb(246,91,35)" fg:x="456" fg:w="15"/><text x="36.7885%" y="671.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="37.5801%" y="645" width="0.1603%" height="15" fill="rgb(228,96,24)" fg:x="469" fg:w="2"/><text x="37.8301%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="37.5801%" y="629" width="0.1603%" height="15" fill="rgb(254,217,53)" fg:x="469" fg:w="2"/><text x="37.8301%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="37.5801%" y="613" width="0.1603%" height="15" fill="rgb(209,60,0)" fg:x="469" fg:w="2"/><text x="37.8301%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="37.5801%" y="597" width="0.1603%" height="15" fill="rgb(250,93,26)" fg:x="469" fg:w="2"/><text x="37.8301%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="37.5801%" y="581" width="0.1603%" height="15" fill="rgb(211,9,40)" fg:x="469" fg:w="2"/><text x="37.8301%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.6603%" y="565" width="0.0801%" height="15" fill="rgb(242,57,20)" fg:x="470" fg:w="1"/><text x="37.9103%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.6603%" y="549" width="0.0801%" height="15" fill="rgb(248,85,48)" fg:x="470" fg:w="1"/><text x="37.9103%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.6603%" y="533" width="0.0801%" height="15" fill="rgb(212,117,2)" fg:x="470" fg:w="1"/><text x="37.9103%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.6603%" y="517" width="0.0801%" height="15" fill="rgb(243,19,3)" fg:x="470" fg:w="1"/><text x="37.9103%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.6603%" y="501" width="0.0801%" height="15" fill="rgb(232,217,24)" fg:x="470" fg:w="1"/><text x="37.9103%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.6603%" y="485" width="0.0801%" height="15" fill="rgb(224,175,40)" fg:x="470" fg:w="1"/><text x="37.9103%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="37.7404%" y="661" width="0.0801%" height="15" fill="rgb(212,162,32)" fg:x="471" fg:w="1"/><text x="37.9904%" y="671.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="37.7404%" y="645" width="0.0801%" height="15" fill="rgb(215,9,4)" fg:x="471" fg:w="1"/><text x="37.9904%" y="655.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="37.7404%" y="629" width="0.0801%" height="15" fill="rgb(242,42,7)" fg:x="471" fg:w="1"/><text x="37.9904%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="37.7404%" y="613" width="0.0801%" height="15" fill="rgb(242,184,45)" fg:x="471" fg:w="1"/><text x="37.9904%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="37.7404%" y="597" width="0.0801%" height="15" fill="rgb(228,111,51)" fg:x="471" fg:w="1"/><text x="37.9904%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="37.8205%" y="661" width="0.0801%" height="15" fill="rgb(236,147,17)" fg:x="472" fg:w="1"/><text x="38.0705%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="37.8205%" y="645" width="0.0801%" height="15" fill="rgb(210,75,22)" fg:x="472" fg:w="1"/><text x="38.0705%" y="655.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="37.8205%" y="629" width="0.0801%" height="15" fill="rgb(217,159,45)" fg:x="472" fg:w="1"/><text x="38.0705%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="37.8205%" y="613" width="0.0801%" height="15" fill="rgb(245,165,53)" fg:x="472" fg:w="1"/><text x="38.0705%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.8205%" y="597" width="0.0801%" height="15" fill="rgb(251,190,50)" fg:x="472" fg:w="1"/><text x="38.0705%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.8205%" y="581" width="0.0801%" height="15" fill="rgb(208,203,29)" fg:x="472" fg:w="1"/><text x="38.0705%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.8205%" y="565" width="0.0801%" height="15" fill="rgb(207,209,35)" fg:x="472" fg:w="1"/><text x="38.0705%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.8205%" y="549" width="0.0801%" height="15" fill="rgb(230,144,49)" fg:x="472" fg:w="1"/><text x="38.0705%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.8205%" y="533" width="0.0801%" height="15" fill="rgb(229,31,6)" fg:x="472" fg:w="1"/><text x="38.0705%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.8205%" y="517" width="0.0801%" height="15" fill="rgb(251,129,24)" fg:x="472" fg:w="1"/><text x="38.0705%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.8205%" y="501" width="0.0801%" height="15" fill="rgb(235,105,15)" fg:x="472" fg:w="1"/><text x="38.0705%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.8205%" y="485" width="0.0801%" height="15" fill="rgb(216,52,43)" fg:x="472" fg:w="1"/><text x="38.0705%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="37.9006%" y="645" width="0.0801%" height="15" fill="rgb(238,144,41)" fg:x="473" fg:w="1"/><text x="38.1506%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.9006%" y="629" width="0.0801%" height="15" fill="rgb(243,63,9)" fg:x="473" fg:w="1"/><text x="38.1506%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.9006%" y="613" width="0.0801%" height="15" fill="rgb(246,208,1)" fg:x="473" fg:w="1"/><text x="38.1506%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.9006%" y="597" width="0.0801%" height="15" fill="rgb(233,182,18)" fg:x="473" fg:w="1"/><text x="38.1506%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (4 samples, 0.32%)</title><rect x="37.7404%" y="693" width="0.3205%" height="15" fill="rgb(242,224,8)" fg:x="471" fg:w="4"/><text x="37.9904%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="37.7404%" y="677" width="0.3205%" height="15" fill="rgb(243,54,37)" fg:x="471" fg:w="4"/><text x="37.9904%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="37.9006%" y="661" width="0.1603%" height="15" fill="rgb(233,192,12)" fg:x="473" fg:w="2"/><text x="38.1506%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="37.9808%" y="645" width="0.0801%" height="15" fill="rgb(251,192,53)" fg:x="474" fg:w="1"/><text x="38.2308%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.9808%" y="629" width="0.0801%" height="15" fill="rgb(246,141,26)" fg:x="474" fg:w="1"/><text x="38.2308%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="38.0609%" y="645" width="0.0801%" height="15" fill="rgb(239,195,19)" fg:x="475" fg:w="1"/><text x="38.3109%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="38.0609%" y="629" width="0.0801%" height="15" fill="rgb(241,16,39)" fg:x="475" fg:w="1"/><text x="38.3109%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.1410%" y="629" width="0.1603%" height="15" fill="rgb(223,13,53)" fg:x="476" fg:w="2"/><text x="38.3910%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="38.1410%" y="645" width="0.4006%" height="15" fill="rgb(214,227,0)" fg:x="476" fg:w="5"/><text x="38.3910%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="38.3013%" y="629" width="0.2404%" height="15" fill="rgb(228,103,26)" fg:x="478" fg:w="3"/><text x="38.5513%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.3814%" y="613" width="0.1603%" height="15" fill="rgb(254,177,53)" fg:x="479" fg:w="2"/><text x="38.6314%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4615%" y="597" width="0.0801%" height="15" fill="rgb(208,201,34)" fg:x="480" fg:w="1"/><text x="38.7115%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4615%" y="581" width="0.0801%" height="15" fill="rgb(212,39,5)" fg:x="480" fg:w="1"/><text x="38.7115%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="38.5417%" y="645" width="0.0801%" height="15" fill="rgb(246,117,3)" fg:x="481" fg:w="1"/><text x="38.7917%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="38.6218%" y="629" width="0.0801%" height="15" fill="rgb(244,118,39)" fg:x="482" fg:w="1"/><text x="38.8718%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::base::AclRule&gt;&gt; (1 samples, 0.08%)</title><rect x="38.6218%" y="613" width="0.0801%" height="15" fill="rgb(241,64,10)" fg:x="482" fg:w="1"/><text x="38.8718%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="38.7019%" y="629" width="0.0801%" height="15" fill="rgb(229,39,44)" fg:x="483" fg:w="1"/><text x="38.9519%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="38.7019%" y="613" width="0.0801%" height="15" fill="rgb(230,226,3)" fg:x="483" fg:w="1"/><text x="38.9519%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="38.6218%" y="645" width="0.2404%" height="15" fill="rgb(222,13,42)" fg:x="482" fg:w="3"/><text x="38.8718%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="38.7821%" y="629" width="0.0801%" height="15" fill="rgb(247,180,54)" fg:x="484" fg:w="1"/><text x="39.0321%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8622%" y="565" width="0.0801%" height="15" fill="rgb(205,96,16)" fg:x="485" fg:w="1"/><text x="39.1122%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8622%" y="549" width="0.0801%" height="15" fill="rgb(205,100,21)" fg:x="485" fg:w="1"/><text x="39.1122%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8622%" y="533" width="0.0801%" height="15" fill="rgb(248,51,4)" fg:x="485" fg:w="1"/><text x="39.1122%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8622%" y="517" width="0.0801%" height="15" fill="rgb(217,197,30)" fg:x="485" fg:w="1"/><text x="39.1122%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.9423%" y="565" width="0.0801%" height="15" fill="rgb(240,179,40)" fg:x="486" fg:w="1"/><text x="39.1923%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.9423%" y="549" width="0.0801%" height="15" fill="rgb(212,185,35)" fg:x="486" fg:w="1"/><text x="39.1923%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.9423%" y="533" width="0.0801%" height="15" fill="rgb(251,222,31)" fg:x="486" fg:w="1"/><text x="39.1923%" y="543.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="38.8622%" y="597" width="0.2404%" height="15" fill="rgb(208,140,36)" fg:x="485" fg:w="3"/><text x="39.1122%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="38.8622%" y="581" width="0.2404%" height="15" fill="rgb(220,148,1)" fg:x="485" fg:w="3"/><text x="39.1122%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="39.0224%" y="565" width="0.0801%" height="15" fill="rgb(254,4,28)" fg:x="487" fg:w="1"/><text x="39.2724%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.0224%" y="549" width="0.0801%" height="15" fill="rgb(222,185,44)" fg:x="487" fg:w="1"/><text x="39.2724%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="39.0224%" y="533" width="0.0801%" height="15" fill="rgb(215,74,39)" fg:x="487" fg:w="1"/><text x="39.2724%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="38.8622%" y="629" width="0.4006%" height="15" fill="rgb(247,86,4)" fg:x="485" fg:w="5"/><text x="39.1122%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="38.8622%" y="613" width="0.4006%" height="15" fill="rgb(231,105,32)" fg:x="485" fg:w="5"/><text x="39.1122%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="39.1026%" y="597" width="0.1603%" height="15" fill="rgb(222,65,35)" fg:x="488" fg:w="2"/><text x="39.3526%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.1026%" y="581" width="0.1603%" height="15" fill="rgb(218,145,35)" fg:x="488" fg:w="2"/><text x="39.3526%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.1026%" y="565" width="0.1603%" height="15" fill="rgb(208,7,15)" fg:x="488" fg:w="2"/><text x="39.3526%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="39.1026%" y="549" width="0.1603%" height="15" fill="rgb(209,83,13)" fg:x="488" fg:w="2"/><text x="39.3526%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.1026%" y="533" width="0.1603%" height="15" fill="rgb(218,3,10)" fg:x="488" fg:w="2"/><text x="39.3526%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.1827%" y="517" width="0.0801%" height="15" fill="rgb(211,219,4)" fg:x="489" fg:w="1"/><text x="39.4327%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.1827%" y="501" width="0.0801%" height="15" fill="rgb(228,194,12)" fg:x="489" fg:w="1"/><text x="39.4327%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.1827%" y="485" width="0.0801%" height="15" fill="rgb(210,175,7)" fg:x="489" fg:w="1"/><text x="39.4327%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.28%)</title><rect x="38.0609%" y="661" width="1.2821%" height="15" fill="rgb(243,132,6)" fg:x="475" fg:w="16"/><text x="38.3109%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="38.8622%" y="645" width="0.4808%" height="15" fill="rgb(207,72,18)" fg:x="485" fg:w="6"/><text x="39.1122%" y="655.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="39.2628%" y="629" width="0.0801%" height="15" fill="rgb(236,1,18)" fg:x="490" fg:w="1"/><text x="39.5128%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.2628%" y="613" width="0.0801%" height="15" fill="rgb(227,0,18)" fg:x="490" fg:w="1"/><text x="39.5128%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.2628%" y="597" width="0.0801%" height="15" fill="rgb(247,37,5)" fg:x="490" fg:w="1"/><text x="39.5128%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="39.2628%" y="581" width="0.0801%" height="15" fill="rgb(237,179,24)" fg:x="490" fg:w="1"/><text x="39.5128%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="39.4231%" y="645" width="0.0801%" height="15" fill="rgb(226,53,20)" fg:x="492" fg:w="1"/><text x="39.6731%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="39.3429%" y="661" width="0.2404%" height="15" fill="rgb(247,75,7)" fg:x="491" fg:w="3"/><text x="39.5929%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="39.5032%" y="645" width="0.0801%" height="15" fill="rgb(233,96,12)" fg:x="493" fg:w="1"/><text x="39.7532%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="39.5032%" y="629" width="0.0801%" height="15" fill="rgb(224,125,0)" fg:x="493" fg:w="1"/><text x="39.7532%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="39.5032%" y="613" width="0.0801%" height="15" fill="rgb(224,92,25)" fg:x="493" fg:w="1"/><text x="39.7532%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.5032%" y="597" width="0.0801%" height="15" fill="rgb(224,42,24)" fg:x="493" fg:w="1"/><text x="39.7532%" y="607.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="39.5833%" y="629" width="0.0801%" height="15" fill="rgb(234,132,49)" fg:x="494" fg:w="1"/><text x="39.8333%" y="639.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="39.5833%" y="613" width="0.0801%" height="15" fill="rgb(248,100,35)" fg:x="494" fg:w="1"/><text x="39.8333%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="39.6635%" y="629" width="0.0801%" height="15" fill="rgb(239,94,40)" fg:x="495" fg:w="1"/><text x="39.9135%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="39.6635%" y="613" width="0.0801%" height="15" fill="rgb(235,139,28)" fg:x="495" fg:w="1"/><text x="39.9135%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="39.6635%" y="597" width="0.0801%" height="15" fill="rgb(217,144,7)" fg:x="495" fg:w="1"/><text x="39.9135%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.6635%" y="581" width="0.0801%" height="15" fill="rgb(227,55,4)" fg:x="495" fg:w="1"/><text x="39.9135%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.8237%" y="581" width="0.0801%" height="15" fill="rgb(252,82,54)" fg:x="497" fg:w="1"/><text x="40.0737%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.8237%" y="565" width="0.0801%" height="15" fill="rgb(245,172,4)" fg:x="497" fg:w="1"/><text x="40.0737%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (24 samples, 1.92%)</title><rect x="38.0609%" y="693" width="1.9231%" height="15" fill="rgb(207,26,27)" fg:x="475" fg:w="24"/><text x="38.3109%" y="703.50">p..</text></g><g><title>plugins_core::build::QuickThing::make (24 samples, 1.92%)</title><rect x="38.0609%" y="677" width="1.9231%" height="15" fill="rgb(252,98,18)" fg:x="475" fg:w="24"/><text x="38.3109%" y="687.50">p..</text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="39.5833%" y="661" width="0.4006%" height="15" fill="rgb(244,8,26)" fg:x="494" fg:w="5"/><text x="39.8333%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.40%)</title><rect x="39.5833%" y="645" width="0.4006%" height="15" fill="rgb(237,173,45)" fg:x="494" fg:w="5"/><text x="39.8333%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="39.7436%" y="629" width="0.2404%" height="15" fill="rgb(208,213,49)" fg:x="496" fg:w="3"/><text x="39.9936%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="39.7436%" y="613" width="0.2404%" height="15" fill="rgb(212,122,37)" fg:x="496" fg:w="3"/><text x="39.9936%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.7436%" y="597" width="0.2404%" height="15" fill="rgb(213,80,17)" fg:x="496" fg:w="3"/><text x="39.9936%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.9038%" y="581" width="0.0801%" height="15" fill="rgb(206,210,43)" fg:x="498" fg:w="1"/><text x="40.1538%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.9038%" y="565" width="0.0801%" height="15" fill="rgb(229,214,3)" fg:x="498" fg:w="1"/><text x="40.1538%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.9038%" y="549" width="0.0801%" height="15" fill="rgb(235,213,29)" fg:x="498" fg:w="1"/><text x="40.1538%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.9038%" y="533" width="0.0801%" height="15" fill="rgb(248,135,26)" fg:x="498" fg:w="1"/><text x="40.1538%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="39.9840%" y="661" width="0.0801%" height="15" fill="rgb(242,188,12)" fg:x="499" fg:w="1"/><text x="40.2340%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="39.9840%" y="645" width="0.0801%" height="15" fill="rgb(245,38,12)" fg:x="499" fg:w="1"/><text x="40.2340%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.9840%" y="629" width="0.0801%" height="15" fill="rgb(218,42,13)" fg:x="499" fg:w="1"/><text x="40.2340%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.9840%" y="613" width="0.0801%" height="15" fill="rgb(238,132,49)" fg:x="499" fg:w="1"/><text x="40.2340%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.9840%" y="597" width="0.0801%" height="15" fill="rgb(209,196,19)" fg:x="499" fg:w="1"/><text x="40.2340%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.9840%" y="581" width="0.0801%" height="15" fill="rgb(244,131,22)" fg:x="499" fg:w="1"/><text x="40.2340%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="39.9840%" y="565" width="0.0801%" height="15" fill="rgb(223,18,34)" fg:x="499" fg:w="1"/><text x="40.2340%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.9840%" y="549" width="0.0801%" height="15" fill="rgb(252,124,54)" fg:x="499" fg:w="1"/><text x="40.2340%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.9840%" y="533" width="0.0801%" height="15" fill="rgb(229,106,42)" fg:x="499" fg:w="1"/><text x="40.2340%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.9840%" y="517" width="0.0801%" height="15" fill="rgb(221,129,1)" fg:x="499" fg:w="1"/><text x="40.2340%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="39.9840%" y="501" width="0.0801%" height="15" fill="rgb(229,74,15)" fg:x="499" fg:w="1"/><text x="40.2340%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.9840%" y="485" width="0.0801%" height="15" fill="rgb(210,206,50)" fg:x="499" fg:w="1"/><text x="40.2340%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.9840%" y="469" width="0.0801%" height="15" fill="rgb(251,114,31)" fg:x="499" fg:w="1"/><text x="40.2340%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.9840%" y="453" width="0.0801%" height="15" fill="rgb(215,225,28)" fg:x="499" fg:w="1"/><text x="40.2340%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="39.9840%" y="437" width="0.0801%" height="15" fill="rgb(237,109,14)" fg:x="499" fg:w="1"/><text x="40.2340%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.9840%" y="421" width="0.0801%" height="15" fill="rgb(230,13,37)" fg:x="499" fg:w="1"/><text x="40.2340%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.9840%" y="405" width="0.0801%" height="15" fill="rgb(231,40,28)" fg:x="499" fg:w="1"/><text x="40.2340%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.9840%" y="389" width="0.0801%" height="15" fill="rgb(231,202,18)" fg:x="499" fg:w="1"/><text x="40.2340%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.9840%" y="373" width="0.0801%" height="15" fill="rgb(225,33,18)" fg:x="499" fg:w="1"/><text x="40.2340%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.9840%" y="357" width="0.0801%" height="15" fill="rgb(223,64,47)" fg:x="499" fg:w="1"/><text x="40.2340%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="39.9840%" y="341" width="0.0801%" height="15" fill="rgb(234,114,13)" fg:x="499" fg:w="1"/><text x="40.2340%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="39.9840%" y="325" width="0.0801%" height="15" fill="rgb(248,56,40)" fg:x="499" fg:w="1"/><text x="40.2340%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="39.9840%" y="309" width="0.0801%" height="15" fill="rgb(221,194,21)" fg:x="499" fg:w="1"/><text x="40.2340%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="39.9840%" y="293" width="0.0801%" height="15" fill="rgb(242,108,46)" fg:x="499" fg:w="1"/><text x="40.2340%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.9840%" y="277" width="0.0801%" height="15" fill="rgb(220,106,10)" fg:x="499" fg:w="1"/><text x="40.2340%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.9840%" y="261" width="0.0801%" height="15" fill="rgb(211,88,4)" fg:x="499" fg:w="1"/><text x="40.2340%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.9840%" y="245" width="0.0801%" height="15" fill="rgb(214,95,34)" fg:x="499" fg:w="1"/><text x="40.2340%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="39.9840%" y="229" width="0.0801%" height="15" fill="rgb(250,160,33)" fg:x="499" fg:w="1"/><text x="40.2340%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.9840%" y="213" width="0.0801%" height="15" fill="rgb(225,29,10)" fg:x="499" fg:w="1"/><text x="40.2340%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="39.9840%" y="197" width="0.0801%" height="15" fill="rgb(224,28,30)" fg:x="499" fg:w="1"/><text x="40.2340%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="39.9840%" y="181" width="0.0801%" height="15" fill="rgb(231,77,4)" fg:x="499" fg:w="1"/><text x="40.2340%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="39.9840%" y="165" width="0.0801%" height="15" fill="rgb(209,63,21)" fg:x="499" fg:w="1"/><text x="40.2340%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.9840%" y="149" width="0.0801%" height="15" fill="rgb(226,22,11)" fg:x="499" fg:w="1"/><text x="40.2340%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.0641%" y="629" width="0.1603%" height="15" fill="rgb(216,82,30)" fg:x="500" fg:w="2"/><text x="40.3141%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1442%" y="613" width="0.0801%" height="15" fill="rgb(246,227,38)" fg:x="501" fg:w="1"/><text x="40.3942%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1442%" y="597" width="0.0801%" height="15" fill="rgb(251,203,53)" fg:x="501" fg:w="1"/><text x="40.3942%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.1442%" y="581" width="0.0801%" height="15" fill="rgb(254,101,1)" fg:x="501" fg:w="1"/><text x="40.3942%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.1442%" y="565" width="0.0801%" height="15" fill="rgb(241,180,5)" fg:x="501" fg:w="1"/><text x="40.3942%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.1442%" y="549" width="0.0801%" height="15" fill="rgb(218,168,4)" fg:x="501" fg:w="1"/><text x="40.3942%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.1442%" y="533" width="0.0801%" height="15" fill="rgb(224,223,32)" fg:x="501" fg:w="1"/><text x="40.3942%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.1442%" y="517" width="0.0801%" height="15" fill="rgb(236,106,22)" fg:x="501" fg:w="1"/><text x="40.3942%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.1442%" y="501" width="0.0801%" height="15" fill="rgb(206,121,5)" fg:x="501" fg:w="1"/><text x="40.3942%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.1442%" y="485" width="0.0801%" height="15" fill="rgb(233,87,28)" fg:x="501" fg:w="1"/><text x="40.3942%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.1442%" y="469" width="0.0801%" height="15" fill="rgb(236,137,17)" fg:x="501" fg:w="1"/><text x="40.3942%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.1442%" y="453" width="0.0801%" height="15" fill="rgb(209,183,38)" fg:x="501" fg:w="1"/><text x="40.3942%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.1442%" y="437" width="0.0801%" height="15" fill="rgb(206,162,44)" fg:x="501" fg:w="1"/><text x="40.3942%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.1442%" y="421" width="0.0801%" height="15" fill="rgb(237,70,39)" fg:x="501" fg:w="1"/><text x="40.3942%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.1442%" y="405" width="0.0801%" height="15" fill="rgb(212,176,5)" fg:x="501" fg:w="1"/><text x="40.3942%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="40.0641%" y="661" width="0.2404%" height="15" fill="rgb(232,95,16)" fg:x="500" fg:w="3"/><text x="40.3141%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="40.0641%" y="645" width="0.2404%" height="15" fill="rgb(219,115,35)" fg:x="500" fg:w="3"/><text x="40.3141%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.2244%" y="629" width="0.0801%" height="15" fill="rgb(251,67,27)" fg:x="502" fg:w="1"/><text x="40.4744%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2244%" y="613" width="0.0801%" height="15" fill="rgb(222,95,40)" fg:x="502" fg:w="1"/><text x="40.4744%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.2244%" y="597" width="0.0801%" height="15" fill="rgb(250,35,16)" fg:x="502" fg:w="1"/><text x="40.4744%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2244%" y="581" width="0.0801%" height="15" fill="rgb(224,86,44)" fg:x="502" fg:w="1"/><text x="40.4744%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.2244%" y="565" width="0.0801%" height="15" fill="rgb(237,53,53)" fg:x="502" fg:w="1"/><text x="40.4744%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="40.3045%" y="613" width="0.0801%" height="15" fill="rgb(208,171,33)" fg:x="503" fg:w="1"/><text x="40.5545%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.3045%" y="597" width="0.0801%" height="15" fill="rgb(222,64,27)" fg:x="503" fg:w="1"/><text x="40.5545%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.3045%" y="581" width="0.0801%" height="15" fill="rgb(221,121,35)" fg:x="503" fg:w="1"/><text x="40.5545%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="40.3846%" y="597" width="0.0801%" height="15" fill="rgb(228,137,42)" fg:x="504" fg:w="1"/><text x="40.6346%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3846%" y="581" width="0.0801%" height="15" fill="rgb(227,54,21)" fg:x="504" fg:w="1"/><text x="40.6346%" y="591.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="40.3846%" y="613" width="0.1603%" height="15" fill="rgb(240,168,33)" fg:x="504" fg:w="2"/><text x="40.6346%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="40.4647%" y="597" width="0.0801%" height="15" fill="rgb(243,159,6)" fg:x="505" fg:w="1"/><text x="40.7147%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="40.3045%" y="629" width="0.4006%" height="15" fill="rgb(205,211,41)" fg:x="503" fg:w="5"/><text x="40.5545%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="40.5449%" y="613" width="0.1603%" height="15" fill="rgb(253,30,1)" fg:x="506" fg:w="2"/><text x="40.7949%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.5449%" y="597" width="0.1603%" height="15" fill="rgb(226,80,18)" fg:x="506" fg:w="2"/><text x="40.7949%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6250%" y="581" width="0.0801%" height="15" fill="rgb(253,156,46)" fg:x="507" fg:w="1"/><text x="40.8750%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6250%" y="565" width="0.0801%" height="15" fill="rgb(248,87,27)" fg:x="507" fg:w="1"/><text x="40.8750%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.6250%" y="549" width="0.0801%" height="15" fill="rgb(227,122,2)" fg:x="507" fg:w="1"/><text x="40.8750%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.6250%" y="533" width="0.0801%" height="15" fill="rgb(229,94,39)" fg:x="507" fg:w="1"/><text x="40.8750%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.6250%" y="517" width="0.0801%" height="15" fill="rgb(225,173,31)" fg:x="507" fg:w="1"/><text x="40.8750%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6250%" y="501" width="0.0801%" height="15" fill="rgb(239,176,30)" fg:x="507" fg:w="1"/><text x="40.8750%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6250%" y="485" width="0.0801%" height="15" fill="rgb(212,104,21)" fg:x="507" fg:w="1"/><text x="40.8750%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.6250%" y="469" width="0.0801%" height="15" fill="rgb(240,209,40)" fg:x="507" fg:w="1"/><text x="40.8750%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.6250%" y="453" width="0.0801%" height="15" fill="rgb(234,195,5)" fg:x="507" fg:w="1"/><text x="40.8750%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.6250%" y="437" width="0.0801%" height="15" fill="rgb(238,213,1)" fg:x="507" fg:w="1"/><text x="40.8750%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.6250%" y="421" width="0.0801%" height="15" fill="rgb(235,182,54)" fg:x="507" fg:w="1"/><text x="40.8750%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6250%" y="405" width="0.0801%" height="15" fill="rgb(229,50,46)" fg:x="507" fg:w="1"/><text x="40.8750%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="39.9840%" y="677" width="0.8013%" height="15" fill="rgb(219,145,13)" fg:x="499" fg:w="10"/><text x="40.2340%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="40.3045%" y="661" width="0.4808%" height="15" fill="rgb(220,226,10)" fg:x="503" fg:w="6"/><text x="40.5545%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="40.3045%" y="645" width="0.4808%" height="15" fill="rgb(248,47,30)" fg:x="503" fg:w="6"/><text x="40.5545%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.7051%" y="629" width="0.0801%" height="15" fill="rgb(231,209,44)" fg:x="508" fg:w="1"/><text x="40.9551%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="40.7853%" y="677" width="0.0801%" height="15" fill="rgb(209,80,30)" fg:x="509" fg:w="1"/><text x="41.0353%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.7853%" y="661" width="0.0801%" height="15" fill="rgb(232,9,14)" fg:x="509" fg:w="1"/><text x="41.0353%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8654%" y="613" width="0.0801%" height="15" fill="rgb(243,91,43)" fg:x="510" fg:w="1"/><text x="41.1154%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.8654%" y="597" width="0.0801%" height="15" fill="rgb(231,90,52)" fg:x="510" fg:w="1"/><text x="41.1154%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.9455%" y="613" width="0.0801%" height="15" fill="rgb(253,192,44)" fg:x="511" fg:w="1"/><text x="41.1955%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.9455%" y="597" width="0.0801%" height="15" fill="rgb(241,66,31)" fg:x="511" fg:w="1"/><text x="41.1955%" y="607.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="40.8654%" y="645" width="0.2404%" height="15" fill="rgb(235,81,37)" fg:x="510" fg:w="3"/><text x="41.1154%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="40.8654%" y="629" width="0.2404%" height="15" fill="rgb(223,221,9)" fg:x="510" fg:w="3"/><text x="41.1154%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="41.0256%" y="613" width="0.0801%" height="15" fill="rgb(242,180,7)" fg:x="512" fg:w="1"/><text x="41.2756%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.0256%" y="597" width="0.0801%" height="15" fill="rgb(243,78,19)" fg:x="512" fg:w="1"/><text x="41.2756%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="41.0256%" y="581" width="0.0801%" height="15" fill="rgb(233,23,17)" fg:x="512" fg:w="1"/><text x="41.2756%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="41.0256%" y="565" width="0.0801%" height="15" fill="rgb(252,122,45)" fg:x="512" fg:w="1"/><text x="41.2756%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="40.8654%" y="677" width="0.3205%" height="15" fill="rgb(247,108,20)" fg:x="510" fg:w="4"/><text x="41.1154%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="40.8654%" y="661" width="0.3205%" height="15" fill="rgb(235,84,21)" fg:x="510" fg:w="4"/><text x="41.1154%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.1058%" y="645" width="0.0801%" height="15" fill="rgb(247,129,10)" fg:x="513" fg:w="1"/><text x="41.3558%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.1058%" y="629" width="0.0801%" height="15" fill="rgb(208,173,14)" fg:x="513" fg:w="1"/><text x="41.3558%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="41.1859%" y="661" width="0.1603%" height="15" fill="rgb(236,31,38)" fg:x="514" fg:w="2"/><text x="41.4359%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="41.1859%" y="645" width="0.1603%" height="15" fill="rgb(232,65,17)" fg:x="514" fg:w="2"/><text x="41.4359%" y="655.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="41.1859%" y="629" width="0.1603%" height="15" fill="rgb(224,45,49)" fg:x="514" fg:w="2"/><text x="41.4359%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.2660%" y="613" width="0.0801%" height="15" fill="rgb(225,2,53)" fg:x="515" fg:w="1"/><text x="41.5160%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.2660%" y="597" width="0.0801%" height="15" fill="rgb(248,210,53)" fg:x="515" fg:w="1"/><text x="41.5160%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.2660%" y="581" width="0.0801%" height="15" fill="rgb(211,1,30)" fg:x="515" fg:w="1"/><text x="41.5160%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.2660%" y="565" width="0.0801%" height="15" fill="rgb(224,96,15)" fg:x="515" fg:w="1"/><text x="41.5160%" y="575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="41.2660%" y="549" width="0.0801%" height="15" fill="rgb(252,45,11)" fg:x="515" fg:w="1"/><text x="41.5160%" y="559.50"></text></g><g><title>&lt;u64 as core::fmt::num::DisplayInt&gt;::to_u64 (1 samples, 0.08%)</title><rect x="41.2660%" y="533" width="0.0801%" height="15" fill="rgb(220,125,38)" fg:x="515" fg:w="1"/><text x="41.5160%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (18 samples, 1.44%)</title><rect x="39.9840%" y="693" width="1.4423%" height="15" fill="rgb(243,161,33)" fg:x="499" fg:w="18"/><text x="40.2340%" y="703.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="41.1859%" y="677" width="0.2404%" height="15" fill="rgb(248,197,34)" fg:x="514" fg:w="3"/><text x="41.4359%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="41.3462%" y="661" width="0.0801%" height="15" fill="rgb(228,165,23)" fg:x="516" fg:w="1"/><text x="41.5962%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="41.3462%" y="645" width="0.0801%" height="15" fill="rgb(236,94,38)" fg:x="516" fg:w="1"/><text x="41.5962%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="41.3462%" y="629" width="0.0801%" height="15" fill="rgb(220,13,23)" fg:x="516" fg:w="1"/><text x="41.5962%" y="639.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (466 samples, 37.34%)</title><rect x="4.1667%" y="709" width="37.3397%" height="15" fill="rgb(234,26,39)" fg:x="52" fg:w="466"/><text x="4.4167%" y="719.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="41.4263%" y="693" width="0.0801%" height="15" fill="rgb(205,117,44)" fg:x="517" fg:w="1"/><text x="41.6763%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="41.5064%" y="709" width="0.0801%" height="15" fill="rgb(250,42,2)" fg:x="518" fg:w="1"/><text x="41.7564%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="41.5064%" y="693" width="0.0801%" height="15" fill="rgb(223,83,14)" fg:x="518" fg:w="1"/><text x="41.7564%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="41.5064%" y="677" width="0.0801%" height="15" fill="rgb(241,147,50)" fg:x="518" fg:w="1"/><text x="41.7564%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.5064%" y="661" width="0.0801%" height="15" fill="rgb(218,90,6)" fg:x="518" fg:w="1"/><text x="41.7564%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (5 samples, 0.40%)</title><rect x="41.5865%" y="709" width="0.4006%" height="15" fill="rgb(210,191,5)" fg:x="519" fg:w="5"/><text x="41.8365%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (5 samples, 0.40%)</title><rect x="41.5865%" y="693" width="0.4006%" height="15" fill="rgb(225,139,19)" fg:x="519" fg:w="5"/><text x="41.8365%" y="703.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="41.6667%" y="677" width="0.3205%" height="15" fill="rgb(210,1,33)" fg:x="520" fg:w="4"/><text x="41.9167%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="41.9872%" y="693" width="0.0801%" height="15" fill="rgb(213,50,3)" fg:x="524" fg:w="1"/><text x="42.2372%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.9872%" y="677" width="0.0801%" height="15" fill="rgb(234,227,4)" fg:x="524" fg:w="1"/><text x="42.2372%" y="687.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.0673%" y="693" width="0.0801%" height="15" fill="rgb(246,63,5)" fg:x="525" fg:w="1"/><text x="42.3173%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="42.1474%" y="693" width="0.0801%" height="15" fill="rgb(245,136,27)" fg:x="526" fg:w="1"/><text x="42.3974%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.1474%" y="677" width="0.0801%" height="15" fill="rgb(247,199,27)" fg:x="526" fg:w="1"/><text x="42.3974%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.1474%" y="661" width="0.0801%" height="15" fill="rgb(252,158,49)" fg:x="526" fg:w="1"/><text x="42.3974%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.1474%" y="645" width="0.0801%" height="15" fill="rgb(254,73,1)" fg:x="526" fg:w="1"/><text x="42.3974%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="42.1474%" y="629" width="0.0801%" height="15" fill="rgb(248,93,19)" fg:x="526" fg:w="1"/><text x="42.3974%" y="639.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="42.1474%" y="613" width="0.0801%" height="15" fill="rgb(206,67,5)" fg:x="526" fg:w="1"/><text x="42.3974%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="42.1474%" y="597" width="0.0801%" height="15" fill="rgb(209,210,4)" fg:x="526" fg:w="1"/><text x="42.3974%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="42.1474%" y="581" width="0.0801%" height="15" fill="rgb(214,185,36)" fg:x="526" fg:w="1"/><text x="42.3974%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.1474%" y="565" width="0.0801%" height="15" fill="rgb(233,191,26)" fg:x="526" fg:w="1"/><text x="42.3974%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.1474%" y="549" width="0.0801%" height="15" fill="rgb(248,94,17)" fg:x="526" fg:w="1"/><text x="42.3974%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.1474%" y="533" width="0.0801%" height="15" fill="rgb(250,64,4)" fg:x="526" fg:w="1"/><text x="42.3974%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.1474%" y="517" width="0.0801%" height="15" fill="rgb(218,41,53)" fg:x="526" fg:w="1"/><text x="42.3974%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="42.1474%" y="501" width="0.0801%" height="15" fill="rgb(251,176,28)" fg:x="526" fg:w="1"/><text x="42.3974%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="42.1474%" y="485" width="0.0801%" height="15" fill="rgb(247,22,9)" fg:x="526" fg:w="1"/><text x="42.3974%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="42.1474%" y="469" width="0.0801%" height="15" fill="rgb(218,201,14)" fg:x="526" fg:w="1"/><text x="42.3974%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="42.1474%" y="453" width="0.0801%" height="15" fill="rgb(218,94,10)" fg:x="526" fg:w="1"/><text x="42.3974%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.1474%" y="437" width="0.0801%" height="15" fill="rgb(222,183,52)" fg:x="526" fg:w="1"/><text x="42.3974%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.1474%" y="421" width="0.0801%" height="15" fill="rgb(242,140,25)" fg:x="526" fg:w="1"/><text x="42.3974%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="42.1474%" y="405" width="0.0801%" height="15" fill="rgb(235,197,38)" fg:x="526" fg:w="1"/><text x="42.3974%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="42.1474%" y="389" width="0.0801%" height="15" fill="rgb(237,136,15)" fg:x="526" fg:w="1"/><text x="42.3974%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="42.1474%" y="373" width="0.0801%" height="15" fill="rgb(223,44,49)" fg:x="526" fg:w="1"/><text x="42.3974%" y="383.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="42.2276%" y="693" width="0.0801%" height="15" fill="rgb(227,71,15)" fg:x="527" fg:w="1"/><text x="42.4776%" y="703.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="42.2276%" y="677" width="0.0801%" height="15" fill="rgb(225,153,20)" fg:x="527" fg:w="1"/><text x="42.4776%" y="687.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="42.2276%" y="661" width="0.0801%" height="15" fill="rgb(210,190,26)" fg:x="527" fg:w="1"/><text x="42.4776%" y="671.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="42.2276%" y="645" width="0.0801%" height="15" fill="rgb(223,147,5)" fg:x="527" fg:w="1"/><text x="42.4776%" y="655.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="42.2276%" y="629" width="0.0801%" height="15" fill="rgb(207,14,23)" fg:x="527" fg:w="1"/><text x="42.4776%" y="639.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="42.2276%" y="613" width="0.0801%" height="15" fill="rgb(211,195,53)" fg:x="527" fg:w="1"/><text x="42.4776%" y="623.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="42.2276%" y="597" width="0.0801%" height="15" fill="rgb(237,75,46)" fg:x="527" fg:w="1"/><text x="42.4776%" y="607.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="42.2276%" y="581" width="0.0801%" height="15" fill="rgb(254,55,14)" fg:x="527" fg:w="1"/><text x="42.4776%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="42.3077%" y="661" width="0.0801%" height="15" fill="rgb(230,185,30)" fg:x="528" fg:w="1"/><text x="42.5577%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="42.3077%" y="645" width="0.0801%" height="15" fill="rgb(220,14,11)" fg:x="528" fg:w="1"/><text x="42.5577%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3077%" y="629" width="0.0801%" height="15" fill="rgb(215,169,44)" fg:x="528" fg:w="1"/><text x="42.5577%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.5481%" y="549" width="0.0801%" height="15" fill="rgb(253,203,20)" fg:x="531" fg:w="1"/><text x="42.7981%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.5481%" y="533" width="0.0801%" height="15" fill="rgb(229,225,17)" fg:x="531" fg:w="1"/><text x="42.7981%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.5481%" y="517" width="0.0801%" height="15" fill="rgb(236,76,26)" fg:x="531" fg:w="1"/><text x="42.7981%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.5481%" y="501" width="0.0801%" height="15" fill="rgb(234,15,30)" fg:x="531" fg:w="1"/><text x="42.7981%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.5481%" y="485" width="0.0801%" height="15" fill="rgb(211,113,48)" fg:x="531" fg:w="1"/><text x="42.7981%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.5481%" y="469" width="0.0801%" height="15" fill="rgb(221,31,36)" fg:x="531" fg:w="1"/><text x="42.7981%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.5481%" y="453" width="0.0801%" height="15" fill="rgb(215,118,52)" fg:x="531" fg:w="1"/><text x="42.7981%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="42.4679%" y="629" width="0.2404%" height="15" fill="rgb(241,151,27)" fg:x="530" fg:w="3"/><text x="42.7179%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.5481%" y="613" width="0.1603%" height="15" fill="rgb(253,51,3)" fg:x="531" fg:w="2"/><text x="42.7981%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="42.5481%" y="597" width="0.1603%" height="15" fill="rgb(216,201,24)" fg:x="531" fg:w="2"/><text x="42.7981%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="42.5481%" y="581" width="0.1603%" height="15" fill="rgb(231,107,4)" fg:x="531" fg:w="2"/><text x="42.7981%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="42.5481%" y="565" width="0.1603%" height="15" fill="rgb(243,97,54)" fg:x="531" fg:w="2"/><text x="42.7981%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="42.6282%" y="549" width="0.0801%" height="15" fill="rgb(221,32,51)" fg:x="532" fg:w="1"/><text x="42.8782%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.6282%" y="533" width="0.0801%" height="15" fill="rgb(218,171,35)" fg:x="532" fg:w="1"/><text x="42.8782%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="42.7083%" y="613" width="0.1603%" height="15" fill="rgb(214,20,53)" fg:x="533" fg:w="2"/><text x="42.9583%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="42.8686%" y="597" width="0.5609%" height="15" fill="rgb(239,9,52)" fg:x="535" fg:w="7"/><text x="43.1186%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="43.1891%" y="581" width="0.2404%" height="15" fill="rgb(215,114,45)" fg:x="539" fg:w="3"/><text x="43.4391%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="43.2692%" y="565" width="0.1603%" height="15" fill="rgb(208,118,9)" fg:x="540" fg:w="2"/><text x="43.5192%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="43.2692%" y="549" width="0.1603%" height="15" fill="rgb(235,7,39)" fg:x="540" fg:w="2"/><text x="43.5192%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.72%)</title><rect x="42.8686%" y="613" width="0.7212%" height="15" fill="rgb(243,225,15)" fg:x="535" fg:w="9"/><text x="43.1186%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="43.4295%" y="597" width="0.1603%" height="15" fill="rgb(225,216,18)" fg:x="542" fg:w="2"/><text x="43.6795%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.5096%" y="581" width="0.0801%" height="15" fill="rgb(233,36,38)" fg:x="543" fg:w="1"/><text x="43.7596%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="43.5096%" y="565" width="0.0801%" height="15" fill="rgb(239,88,23)" fg:x="543" fg:w="1"/><text x="43.7596%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="43.5897%" y="597" width="0.1603%" height="15" fill="rgb(219,181,35)" fg:x="544" fg:w="2"/><text x="43.8397%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="43.7500%" y="597" width="0.0801%" height="15" fill="rgb(215,18,46)" fg:x="546" fg:w="1"/><text x="44.0000%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.7500%" y="581" width="0.0801%" height="15" fill="rgb(241,38,11)" fg:x="546" fg:w="1"/><text x="44.0000%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.7500%" y="565" width="0.0801%" height="15" fill="rgb(248,169,45)" fg:x="546" fg:w="1"/><text x="44.0000%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="43.8301%" y="597" width="0.1603%" height="15" fill="rgb(239,50,49)" fg:x="547" fg:w="2"/><text x="44.0801%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="43.8301%" y="581" width="0.1603%" height="15" fill="rgb(231,96,31)" fg:x="547" fg:w="2"/><text x="44.0801%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="43.9904%" y="581" width="0.0801%" height="15" fill="rgb(224,193,37)" fg:x="549" fg:w="1"/><text x="44.2404%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="44.1506%" y="549" width="0.0801%" height="15" fill="rgb(227,153,50)" fg:x="551" fg:w="1"/><text x="44.4006%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.1506%" y="533" width="0.0801%" height="15" fill="rgb(249,228,3)" fg:x="551" fg:w="1"/><text x="44.4006%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="44.0705%" y="581" width="0.2404%" height="15" fill="rgb(219,164,43)" fg:x="550" fg:w="3"/><text x="44.3205%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="44.0705%" y="565" width="0.2404%" height="15" fill="rgb(216,45,41)" fg:x="550" fg:w="3"/><text x="44.3205%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.2308%" y="549" width="0.0801%" height="15" fill="rgb(210,226,51)" fg:x="552" fg:w="1"/><text x="44.4808%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.2308%" y="533" width="0.0801%" height="15" fill="rgb(209,117,49)" fg:x="552" fg:w="1"/><text x="44.4808%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.2308%" y="517" width="0.0801%" height="15" fill="rgb(206,196,24)" fg:x="552" fg:w="1"/><text x="44.4808%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="44.3109%" y="581" width="0.5609%" height="15" fill="rgb(253,218,3)" fg:x="553" fg:w="7"/><text x="44.5609%" y="591.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="44.3910%" y="565" width="0.4808%" height="15" fill="rgb(252,166,2)" fg:x="554" fg:w="6"/><text x="44.6410%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="44.5513%" y="549" width="0.3205%" height="15" fill="rgb(236,218,26)" fg:x="556" fg:w="4"/><text x="44.8013%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="44.5513%" y="533" width="0.3205%" height="15" fill="rgb(254,84,19)" fg:x="556" fg:w="4"/><text x="44.8013%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="44.7115%" y="517" width="0.1603%" height="15" fill="rgb(219,137,29)" fg:x="558" fg:w="2"/><text x="44.9615%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="44.7115%" y="501" width="0.1603%" height="15" fill="rgb(227,47,52)" fg:x="558" fg:w="2"/><text x="44.9615%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="44.7917%" y="485" width="0.0801%" height="15" fill="rgb(229,167,24)" fg:x="559" fg:w="1"/><text x="45.0417%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="45.1122%" y="549" width="0.3205%" height="15" fill="rgb(233,164,1)" fg:x="563" fg:w="4"/><text x="45.3622%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="45.1923%" y="533" width="0.2404%" height="15" fill="rgb(218,88,48)" fg:x="564" fg:w="3"/><text x="45.4423%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="45.2724%" y="517" width="0.1603%" height="15" fill="rgb(226,214,24)" fg:x="565" fg:w="2"/><text x="45.5224%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="45.3526%" y="501" width="0.0801%" height="15" fill="rgb(233,29,12)" fg:x="566" fg:w="1"/><text x="45.6026%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="45.0321%" y="565" width="0.5609%" height="15" fill="rgb(219,120,34)" fg:x="562" fg:w="7"/><text x="45.2821%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="45.4327%" y="549" width="0.1603%" height="15" fill="rgb(226,78,44)" fg:x="567" fg:w="2"/><text x="45.6827%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="44.8718%" y="581" width="0.8814%" height="15" fill="rgb(240,15,48)" fg:x="560" fg:w="11"/><text x="45.1218%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="45.5929%" y="565" width="0.1603%" height="15" fill="rgb(253,176,7)" fg:x="569" fg:w="2"/><text x="45.8429%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.6731%" y="549" width="0.0801%" height="15" fill="rgb(206,166,28)" fg:x="570" fg:w="1"/><text x="45.9231%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="45.6731%" y="533" width="0.0801%" height="15" fill="rgb(241,53,51)" fg:x="570" fg:w="1"/><text x="45.9231%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.92%)</title><rect x="43.9904%" y="597" width="1.9231%" height="15" fill="rgb(249,112,30)" fg:x="549" fg:w="24"/><text x="44.2404%" y="607.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="45.7532%" y="581" width="0.1603%" height="15" fill="rgb(217,85,30)" fg:x="571" fg:w="2"/><text x="46.0032%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.8333%" y="565" width="0.0801%" height="15" fill="rgb(233,49,7)" fg:x="572" fg:w="1"/><text x="46.0833%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="45.8333%" y="549" width="0.0801%" height="15" fill="rgb(234,109,9)" fg:x="572" fg:w="1"/><text x="46.0833%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.56%)</title><rect x="45.9936%" y="565" width="0.5609%" height="15" fill="rgb(253,95,22)" fg:x="574" fg:w="7"/><text x="46.2436%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="46.3942%" y="549" width="0.1603%" height="15" fill="rgb(233,176,25)" fg:x="579" fg:w="2"/><text x="46.6442%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="46.3942%" y="533" width="0.1603%" height="15" fill="rgb(236,33,39)" fg:x="579" fg:w="2"/><text x="46.6442%" y="543.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="46.3942%" y="517" width="0.1603%" height="15" fill="rgb(223,226,42)" fg:x="579" fg:w="2"/><text x="46.6442%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (49 samples, 3.93%)</title><rect x="42.7083%" y="629" width="3.9263%" height="15" fill="rgb(216,99,33)" fg:x="533" fg:w="49"/><text x="42.9583%" y="639.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.04%)</title><rect x="43.5897%" y="613" width="3.0449%" height="15" fill="rgb(235,84,23)" fg:x="544" fg:w="38"/><text x="43.8397%" y="623.50">ser..</text></g><g><title>std::io::Write::write_all (9 samples, 0.72%)</title><rect x="45.9135%" y="597" width="0.7212%" height="15" fill="rgb(232,2,27)" fg:x="573" fg:w="9"/><text x="46.1635%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (8 samples, 0.64%)</title><rect x="45.9936%" y="581" width="0.6410%" height="15" fill="rgb(241,23,22)" fg:x="574" fg:w="8"/><text x="46.2436%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="46.5545%" y="565" width="0.0801%" height="15" fill="rgb(211,73,27)" fg:x="581" fg:w="1"/><text x="46.8045%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.6346%" y="597" width="0.1603%" height="15" fill="rgb(235,109,49)" fg:x="582" fg:w="2"/><text x="46.8846%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="46.8750%" y="565" width="0.1603%" height="15" fill="rgb(230,99,29)" fg:x="585" fg:w="2"/><text x="47.1250%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.0353%" y="549" width="0.0801%" height="15" fill="rgb(245,199,7)" fg:x="587" fg:w="1"/><text x="47.2853%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="47.1154%" y="549" width="0.0801%" height="15" fill="rgb(217,179,10)" fg:x="588" fg:w="1"/><text x="47.3654%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="47.1154%" y="533" width="0.0801%" height="15" fill="rgb(254,99,47)" fg:x="588" fg:w="1"/><text x="47.3654%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.1154%" y="517" width="0.0801%" height="15" fill="rgb(251,121,7)" fg:x="588" fg:w="1"/><text x="47.3654%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="46.6346%" y="629" width="0.6410%" height="15" fill="rgb(250,177,26)" fg:x="582" fg:w="8"/><text x="46.8846%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="46.6346%" y="613" width="0.6410%" height="15" fill="rgb(232,88,15)" fg:x="582" fg:w="8"/><text x="46.8846%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="46.7949%" y="597" width="0.4808%" height="15" fill="rgb(251,54,54)" fg:x="584" fg:w="6"/><text x="47.0449%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="46.7949%" y="581" width="0.4808%" height="15" fill="rgb(208,177,15)" fg:x="584" fg:w="6"/><text x="47.0449%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="47.0353%" y="565" width="0.2404%" height="15" fill="rgb(205,97,32)" fg:x="587" fg:w="3"/><text x="47.2853%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.1955%" y="549" width="0.0801%" height="15" fill="rgb(217,192,13)" fg:x="589" fg:w="1"/><text x="47.4455%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.1955%" y="533" width="0.0801%" height="15" fill="rgb(215,163,41)" fg:x="589" fg:w="1"/><text x="47.4455%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.4359%" y="597" width="0.1603%" height="15" fill="rgb(246,83,29)" fg:x="592" fg:w="2"/><text x="47.6859%" y="607.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="47.5962%" y="565" width="0.2404%" height="15" fill="rgb(219,2,45)" fg:x="594" fg:w="3"/><text x="47.8462%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.8365%" y="565" width="0.0801%" height="15" fill="rgb(242,215,33)" fg:x="597" fg:w="1"/><text x="48.0865%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.8365%" y="549" width="0.0801%" height="15" fill="rgb(217,1,6)" fg:x="597" fg:w="1"/><text x="48.0865%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.9968%" y="549" width="0.0801%" height="15" fill="rgb(207,85,52)" fg:x="599" fg:w="1"/><text x="48.2468%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.0769%" y="549" width="0.0801%" height="15" fill="rgb(231,171,19)" fg:x="600" fg:w="1"/><text x="48.3269%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="48.1571%" y="533" width="0.1603%" height="15" fill="rgb(207,128,4)" fg:x="601" fg:w="2"/><text x="48.4071%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.3173%" y="533" width="0.0801%" height="15" fill="rgb(219,208,4)" fg:x="603" fg:w="1"/><text x="48.5673%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.3173%" y="517" width="0.0801%" height="15" fill="rgb(235,161,42)" fg:x="603" fg:w="1"/><text x="48.5673%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.4776%" y="517" width="0.0801%" height="15" fill="rgb(247,218,18)" fg:x="605" fg:w="1"/><text x="48.7276%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="48.5577%" y="517" width="0.0801%" height="15" fill="rgb(232,114,51)" fg:x="606" fg:w="1"/><text x="48.8077%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="48.5577%" y="501" width="0.0801%" height="15" fill="rgb(222,95,3)" fg:x="606" fg:w="1"/><text x="48.8077%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.5577%" y="485" width="0.0801%" height="15" fill="rgb(240,65,29)" fg:x="606" fg:w="1"/><text x="48.8077%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.6378%" y="501" width="0.0801%" height="15" fill="rgb(249,209,20)" fg:x="607" fg:w="1"/><text x="48.8878%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="47.5962%" y="597" width="1.2019%" height="15" fill="rgb(241,48,37)" fg:x="594" fg:w="15"/><text x="47.8462%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.20%)</title><rect x="47.5962%" y="581" width="1.2019%" height="15" fill="rgb(230,140,42)" fg:x="594" fg:w="15"/><text x="47.8462%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="47.9167%" y="565" width="0.8814%" height="15" fill="rgb(230,176,45)" fg:x="598" fg:w="11"/><text x="48.1667%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="48.1571%" y="549" width="0.6410%" height="15" fill="rgb(245,112,21)" fg:x="601" fg:w="8"/><text x="48.4071%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="48.3974%" y="533" width="0.4006%" height="15" fill="rgb(207,183,35)" fg:x="604" fg:w="5"/><text x="48.6474%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="48.6378%" y="517" width="0.1603%" height="15" fill="rgb(227,44,33)" fg:x="607" fg:w="2"/><text x="48.8878%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.7179%" y="501" width="0.0801%" height="15" fill="rgb(246,120,21)" fg:x="608" fg:w="1"/><text x="48.9679%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="49.0385%" y="533" width="0.0801%" height="15" fill="rgb(235,57,52)" fg:x="612" fg:w="1"/><text x="49.2885%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="49.1186%" y="533" width="0.1603%" height="15" fill="rgb(238,84,10)" fg:x="613" fg:w="2"/><text x="49.3686%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="48.8782%" y="581" width="0.4808%" height="15" fill="rgb(251,200,32)" fg:x="610" fg:w="6"/><text x="49.1282%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="49.0385%" y="565" width="0.3205%" height="15" fill="rgb(247,159,13)" fg:x="612" fg:w="4"/><text x="49.2885%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="49.0385%" y="549" width="0.3205%" height="15" fill="rgb(238,64,4)" fg:x="612" fg:w="4"/><text x="49.2885%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.2788%" y="533" width="0.0801%" height="15" fill="rgb(221,131,51)" fg:x="615" fg:w="1"/><text x="49.5288%" y="543.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (25 samples, 2.00%)</title><rect x="47.4359%" y="613" width="2.0032%" height="15" fill="rgb(242,5,29)" fg:x="592" fg:w="25"/><text x="47.6859%" y="623.50">&lt;..</text></g><g><title>treediff::diff::diff (8 samples, 0.64%)</title><rect x="48.7981%" y="597" width="0.6410%" height="15" fill="rgb(214,130,32)" fg:x="609" fg:w="8"/><text x="49.0481%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="49.3590%" y="581" width="0.0801%" height="15" fill="rgb(244,210,16)" fg:x="616" fg:w="1"/><text x="49.6090%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.3590%" y="565" width="0.0801%" height="15" fill="rgb(234,48,26)" fg:x="616" fg:w="1"/><text x="49.6090%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3590%" y="549" width="0.0801%" height="15" fill="rgb(231,82,38)" fg:x="616" fg:w="1"/><text x="49.6090%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="49.4391%" y="613" width="0.0801%" height="15" fill="rgb(254,128,41)" fg:x="617" fg:w="1"/><text x="49.6891%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.4391%" y="597" width="0.0801%" height="15" fill="rgb(212,73,49)" fg:x="617" fg:w="1"/><text x="49.6891%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="50.0000%" y="581" width="0.4808%" height="15" fill="rgb(205,62,54)" fg:x="624" fg:w="6"/><text x="50.2500%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="50.0801%" y="565" width="0.4006%" height="15" fill="rgb(228,0,8)" fg:x="625" fg:w="5"/><text x="50.3301%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="50.3205%" y="549" width="0.1603%" height="15" fill="rgb(251,28,17)" fg:x="628" fg:w="2"/><text x="50.5705%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="50.4808%" y="581" width="0.1603%" height="15" fill="rgb(238,105,27)" fg:x="630" fg:w="2"/><text x="50.7308%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="50.4808%" y="565" width="0.1603%" height="15" fill="rgb(237,216,33)" fg:x="630" fg:w="2"/><text x="50.7308%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.5609%" y="549" width="0.0801%" height="15" fill="rgb(229,228,25)" fg:x="631" fg:w="1"/><text x="50.8109%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="50.6410%" y="581" width="0.0801%" height="15" fill="rgb(233,75,23)" fg:x="632" fg:w="1"/><text x="50.8910%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.8814%" y="549" width="0.1603%" height="15" fill="rgb(231,207,16)" fg:x="635" fg:w="2"/><text x="51.1314%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (7 samples, 0.56%)</title><rect x="50.7212%" y="581" width="0.5609%" height="15" fill="rgb(231,191,45)" fg:x="633" fg:w="7"/><text x="50.9712%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="50.8013%" y="565" width="0.4808%" height="15" fill="rgb(224,133,17)" fg:x="634" fg:w="6"/><text x="51.0513%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="51.0417%" y="549" width="0.2404%" height="15" fill="rgb(209,178,27)" fg:x="637" fg:w="3"/><text x="51.2917%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.1218%" y="533" width="0.1603%" height="15" fill="rgb(218,37,11)" fg:x="638" fg:w="2"/><text x="51.3718%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="51.1218%" y="517" width="0.1603%" height="15" fill="rgb(251,226,25)" fg:x="638" fg:w="2"/><text x="51.3718%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.5224%" y="533" width="0.1603%" height="15" fill="rgb(209,222,27)" fg:x="643" fg:w="2"/><text x="51.7724%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.5224%" y="517" width="0.1603%" height="15" fill="rgb(238,22,21)" fg:x="643" fg:w="2"/><text x="51.7724%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.5224%" y="501" width="0.1603%" height="15" fill="rgb(233,161,25)" fg:x="643" fg:w="2"/><text x="51.7724%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="51.6827%" y="517" width="0.0801%" height="15" fill="rgb(226,122,53)" fg:x="645" fg:w="1"/><text x="51.9327%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="51.7628%" y="517" width="0.0801%" height="15" fill="rgb(220,123,17)" fg:x="646" fg:w="1"/><text x="52.0128%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.0032%" y="485" width="0.2404%" height="15" fill="rgb(230,224,35)" fg:x="649" fg:w="3"/><text x="52.2532%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.0833%" y="469" width="0.1603%" height="15" fill="rgb(246,83,8)" fg:x="650" fg:w="2"/><text x="52.3333%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.1635%" y="453" width="0.0801%" height="15" fill="rgb(230,214,17)" fg:x="651" fg:w="1"/><text x="52.4135%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="51.9231%" y="501" width="0.4006%" height="15" fill="rgb(222,97,18)" fg:x="648" fg:w="5"/><text x="52.1731%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="52.2436%" y="485" width="0.0801%" height="15" fill="rgb(206,79,1)" fg:x="652" fg:w="1"/><text x="52.4936%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2436%" y="469" width="0.0801%" height="15" fill="rgb(214,121,34)" fg:x="652" fg:w="1"/><text x="52.4936%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (9 samples, 0.72%)</title><rect x="51.6827%" y="533" width="0.7212%" height="15" fill="rgb(249,199,46)" fg:x="645" fg:w="9"/><text x="51.9327%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="51.8429%" y="517" width="0.5609%" height="15" fill="rgb(214,222,46)" fg:x="647" fg:w="7"/><text x="52.0929%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.3237%" y="501" width="0.0801%" height="15" fill="rgb(248,168,30)" fg:x="653" fg:w="1"/><text x="52.5737%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="52.5641%" y="517" width="0.0801%" height="15" fill="rgb(226,14,28)" fg:x="656" fg:w="1"/><text x="52.8141%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="52.8045%" y="501" width="0.3205%" height="15" fill="rgb(253,123,1)" fg:x="659" fg:w="4"/><text x="53.0545%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.8846%" y="485" width="0.2404%" height="15" fill="rgb(225,24,42)" fg:x="660" fg:w="3"/><text x="53.1346%" y="495.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="52.8846%" y="469" width="0.2404%" height="15" fill="rgb(216,161,37)" fg:x="660" fg:w="3"/><text x="53.1346%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="53.4455%" y="485" width="0.0801%" height="15" fill="rgb(251,164,26)" fg:x="667" fg:w="1"/><text x="53.6955%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="53.5256%" y="485" width="0.3205%" height="15" fill="rgb(219,177,3)" fg:x="668" fg:w="4"/><text x="53.7756%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.6859%" y="469" width="0.1603%" height="15" fill="rgb(222,65,0)" fg:x="670" fg:w="2"/><text x="53.9359%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.6859%" y="453" width="0.1603%" height="15" fill="rgb(223,69,54)" fg:x="670" fg:w="2"/><text x="53.9359%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7660%" y="437" width="0.0801%" height="15" fill="rgb(235,30,27)" fg:x="671" fg:w="1"/><text x="54.0160%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.60%)</title><rect x="52.6442%" y="517" width="1.6026%" height="15" fill="rgb(220,183,50)" fg:x="657" fg:w="20"/><text x="52.8942%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.12%)</title><rect x="53.1250%" y="501" width="1.1218%" height="15" fill="rgb(248,198,15)" fg:x="663" fg:w="14"/><text x="53.3750%" y="511.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="53.8462%" y="485" width="0.4006%" height="15" fill="rgb(222,211,4)" fg:x="672" fg:w="5"/><text x="54.0962%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (36 samples, 2.88%)</title><rect x="51.5224%" y="549" width="2.8846%" height="15" fill="rgb(214,102,34)" fg:x="643" fg:w="36"/><text x="51.7724%" y="559.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (25 samples, 2.00%)</title><rect x="52.4038%" y="533" width="2.0032%" height="15" fill="rgb(245,92,5)" fg:x="654" fg:w="25"/><text x="52.6538%" y="543.50">s..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.2468%" y="517" width="0.1603%" height="15" fill="rgb(252,72,51)" fg:x="677" fg:w="2"/><text x="54.4968%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (40 samples, 3.21%)</title><rect x="51.4423%" y="565" width="3.2051%" height="15" fill="rgb(252,208,19)" fg:x="642" fg:w="40"/><text x="51.6923%" y="575.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="54.4071%" y="549" width="0.2404%" height="15" fill="rgb(211,69,7)" fg:x="679" fg:w="3"/><text x="54.6571%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.4872%" y="533" width="0.1603%" height="15" fill="rgb(211,27,16)" fg:x="680" fg:w="2"/><text x="54.7372%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.6474%" y="565" width="0.0801%" height="15" fill="rgb(219,216,14)" fg:x="682" fg:w="1"/><text x="54.8974%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (67 samples, 5.37%)</title><rect x="49.5192%" y="613" width="5.3686%" height="15" fill="rgb(219,71,8)" fg:x="618" fg:w="67"/><text x="49.7692%" y="623.50">kernel:..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (67 samples, 5.37%)</title><rect x="49.5192%" y="597" width="5.3686%" height="15" fill="rgb(223,170,53)" fg:x="618" fg:w="67"/><text x="49.7692%" y="607.50">&lt;serde_..</text></g><g><title>serde::ser::Serializer::collect_map (45 samples, 3.61%)</title><rect x="51.2821%" y="581" width="3.6058%" height="15" fill="rgb(246,21,26)" fg:x="640" fg:w="45"/><text x="51.5321%" y="591.50">serd..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.7276%" y="565" width="0.1603%" height="15" fill="rgb(248,20,46)" fg:x="683" fg:w="2"/><text x="54.9776%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="55.8494%" y="469" width="0.3205%" height="15" fill="rgb(252,94,11)" fg:x="697" fg:w="4"/><text x="56.0994%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="55.8494%" y="453" width="0.3205%" height="15" fill="rgb(236,163,8)" fg:x="697" fg:w="4"/><text x="56.0994%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.0096%" y="437" width="0.1603%" height="15" fill="rgb(217,221,45)" fg:x="699" fg:w="2"/><text x="56.2596%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.0096%" y="421" width="0.1603%" height="15" fill="rgb(238,38,17)" fg:x="699" fg:w="2"/><text x="56.2596%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.2500%" y="421" width="0.0801%" height="15" fill="rgb(242,210,23)" fg:x="702" fg:w="1"/><text x="56.5000%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.4103%" y="389" width="0.1603%" height="15" fill="rgb(250,86,53)" fg:x="704" fg:w="2"/><text x="56.6603%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="56.2500%" y="453" width="0.4006%" height="15" fill="rgb(223,168,25)" fg:x="702" fg:w="5"/><text x="56.5000%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="56.2500%" y="437" width="0.4006%" height="15" fill="rgb(251,189,4)" fg:x="702" fg:w="5"/><text x="56.5000%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="56.3301%" y="421" width="0.3205%" height="15" fill="rgb(245,19,28)" fg:x="703" fg:w="4"/><text x="56.5801%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="56.3301%" y="405" width="0.3205%" height="15" fill="rgb(207,10,34)" fg:x="703" fg:w="4"/><text x="56.5801%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="56.5705%" y="389" width="0.0801%" height="15" fill="rgb(235,153,31)" fg:x="706" fg:w="1"/><text x="56.8205%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="56.6506%" y="453" width="0.2404%" height="15" fill="rgb(228,72,37)" fg:x="707" fg:w="3"/><text x="56.9006%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="56.7308%" y="437" width="0.1603%" height="15" fill="rgb(215,15,16)" fg:x="708" fg:w="2"/><text x="56.9808%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="56.1699%" y="469" width="0.9615%" height="15" fill="rgb(250,119,29)" fg:x="701" fg:w="12"/><text x="56.4199%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="56.8910%" y="453" width="0.2404%" height="15" fill="rgb(214,59,1)" fg:x="710" fg:w="3"/><text x="57.1410%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.0513%" y="437" width="0.0801%" height="15" fill="rgb(223,109,25)" fg:x="712" fg:w="1"/><text x="57.3013%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.60%)</title><rect x="55.6891%" y="485" width="1.6026%" height="15" fill="rgb(230,198,22)" fg:x="695" fg:w="20"/><text x="55.9391%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="57.1314%" y="469" width="0.1603%" height="15" fill="rgb(245,184,46)" fg:x="713" fg:w="2"/><text x="57.3814%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="57.2115%" y="453" width="0.0801%" height="15" fill="rgb(253,73,16)" fg:x="714" fg:w="1"/><text x="57.4615%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2115%" y="437" width="0.0801%" height="15" fill="rgb(206,94,45)" fg:x="714" fg:w="1"/><text x="57.4615%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="57.2917%" y="485" width="0.2404%" height="15" fill="rgb(236,83,27)" fg:x="715" fg:w="3"/><text x="57.5417%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.3718%" y="469" width="0.1603%" height="15" fill="rgb(220,196,8)" fg:x="716" fg:w="2"/><text x="57.6218%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (26 samples, 2.08%)</title><rect x="55.6891%" y="501" width="2.0833%" height="15" fill="rgb(254,185,14)" fg:x="695" fg:w="26"/><text x="55.9391%" y="511.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="57.5321%" y="485" width="0.2404%" height="15" fill="rgb(226,50,22)" fg:x="718" fg:w="3"/><text x="57.7821%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.6122%" y="469" width="0.1603%" height="15" fill="rgb(253,147,0)" fg:x="719" fg:w="2"/><text x="57.8622%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.6923%" y="453" width="0.0801%" height="15" fill="rgb(252,46,33)" fg:x="720" fg:w="1"/><text x="57.9423%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (30 samples, 2.40%)</title><rect x="55.4487%" y="517" width="2.4038%" height="15" fill="rgb(242,22,54)" fg:x="692" fg:w="30"/><text x="55.6987%" y="527.50">&lt;&amp;..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.7724%" y="501" width="0.0801%" height="15" fill="rgb(223,178,32)" fg:x="721" fg:w="1"/><text x="58.0224%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.8526%" y="517" width="0.0801%" height="15" fill="rgb(214,106,53)" fg:x="722" fg:w="1"/><text x="58.1026%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (38 samples, 3.04%)</title><rect x="55.0481%" y="549" width="3.0449%" height="15" fill="rgb(232,65,50)" fg:x="687" fg:w="38"/><text x="55.2981%" y="559.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (35 samples, 2.80%)</title><rect x="55.2885%" y="533" width="2.8045%" height="15" fill="rgb(231,110,28)" fg:x="690" fg:w="35"/><text x="55.5385%" y="543.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.9327%" y="517" width="0.1603%" height="15" fill="rgb(216,71,40)" fg:x="723" fg:w="2"/><text x="58.1827%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.9327%" y="501" width="0.1603%" height="15" fill="rgb(229,89,53)" fg:x="723" fg:w="2"/><text x="58.1827%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.9327%" y="485" width="0.1603%" height="15" fill="rgb(210,124,14)" fg:x="723" fg:w="2"/><text x="58.1827%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.48%)</title><rect x="58.0929%" y="549" width="0.4808%" height="15" fill="rgb(236,213,6)" fg:x="725" fg:w="6"/><text x="58.3429%" y="559.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="58.3333%" y="533" width="0.2404%" height="15" fill="rgb(228,41,5)" fg:x="728" fg:w="3"/><text x="58.5833%" y="543.50"></text></g><g><title>engine::session::state::State::close (205 samples, 16.43%)</title><rect x="42.3077%" y="693" width="16.4263%" height="15" fill="rgb(221,167,25)" fg:x="528" fg:w="205"/><text x="42.5577%" y="703.50">engine::session::state::S..</text></g><g><title>engine::session::state::State::flush_entities (205 samples, 16.43%)</title><rect x="42.3077%" y="677" width="16.4263%" height="15" fill="rgb(228,144,37)" fg:x="528" fg:w="205"/><text x="42.5577%" y="687.50">engine::session::state::S..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (204 samples, 16.35%)</title><rect x="42.3878%" y="661" width="16.3462%" height="15" fill="rgb(227,189,38)" fg:x="529" fg:w="204"/><text x="42.6378%" y="671.50">engine::session::internal..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (204 samples, 16.35%)</title><rect x="42.3878%" y="645" width="16.3462%" height="15" fill="rgb(218,8,2)" fg:x="529" fg:w="204"/><text x="42.6378%" y="655.50">engine::session::state::S..</text></g><g><title>kernel::model::any_entity_changes (143 samples, 11.46%)</title><rect x="47.2756%" y="629" width="11.4583%" height="15" fill="rgb(209,61,28)" fg:x="590" fg:w="143"/><text x="47.5256%" y="639.50">kernel::model::an..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (48 samples, 3.85%)</title><rect x="54.8878%" y="613" width="3.8462%" height="15" fill="rgb(233,140,39)" fg:x="685" fg:w="48"/><text x="55.1378%" y="623.50">serd..</text></g><g><title>serde_json::de::from_trait (48 samples, 3.85%)</title><rect x="54.8878%" y="597" width="3.8462%" height="15" fill="rgb(251,66,48)" fg:x="685" fg:w="48"/><text x="55.1378%" y="607.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (48 samples, 3.85%)</title><rect x="54.8878%" y="581" width="3.8462%" height="15" fill="rgb(210,44,45)" fg:x="685" fg:w="48"/><text x="55.1378%" y="591.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (46 samples, 3.69%)</title><rect x="55.0481%" y="565" width="3.6859%" height="15" fill="rgb(214,136,46)" fg:x="687" fg:w="46"/><text x="55.2981%" y="575.50">&lt;ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.5737%" y="549" width="0.1603%" height="15" fill="rgb(207,130,50)" fg:x="731" fg:w="2"/><text x="58.8237%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.5737%" y="533" width="0.1603%" height="15" fill="rgb(228,102,49)" fg:x="731" fg:w="2"/><text x="58.8237%" y="543.50"></text></g><g><title>engine::session::Session::close (211 samples, 16.91%)</title><rect x="41.9872%" y="709" width="16.9071%" height="15" fill="rgb(253,55,1)" fg:x="524" fg:w="211"/><text x="42.2372%" y="719.50">engine::session::Session::..</text></g><g><title>kernel::plugins::SessionPlugins::stop (2 samples, 0.16%)</title><rect x="58.7340%" y="693" width="0.1603%" height="15" fill="rgb(238,222,9)" fg:x="733" fg:w="2"/><text x="58.9840%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="58.8942%" y="581" width="0.0801%" height="15" fill="rgb(246,99,6)" fg:x="735" fg:w="1"/><text x="59.1442%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="58.8942%" y="565" width="0.0801%" height="15" fill="rgb(219,110,26)" fg:x="735" fg:w="1"/><text x="59.1442%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="58.8942%" y="549" width="0.0801%" height="15" fill="rgb(239,160,33)" fg:x="735" fg:w="1"/><text x="59.1442%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="58.8942%" y="533" width="0.0801%" height="15" fill="rgb(220,202,23)" fg:x="735" fg:w="1"/><text x="59.1442%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="58.8942%" y="517" width="0.0801%" height="15" fill="rgb(208,80,26)" fg:x="735" fg:w="1"/><text x="59.1442%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="58.8942%" y="501" width="0.0801%" height="15" fill="rgb(243,85,7)" fg:x="735" fg:w="1"/><text x="59.1442%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="58.8942%" y="485" width="0.0801%" height="15" fill="rgb(228,77,47)" fg:x="735" fg:w="1"/><text x="59.1442%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="58.8942%" y="469" width="0.0801%" height="15" fill="rgb(212,226,8)" fg:x="735" fg:w="1"/><text x="59.1442%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="58.8942%" y="453" width="0.0801%" height="15" fill="rgb(241,120,54)" fg:x="735" fg:w="1"/><text x="59.1442%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="59.1346%" y="517" width="0.0801%" height="15" fill="rgb(226,80,16)" fg:x="738" fg:w="1"/><text x="59.3846%" y="527.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="59.2147%" y="453" width="0.0801%" height="15" fill="rgb(240,76,13)" fg:x="739" fg:w="1"/><text x="59.4647%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.2949%" y="405" width="0.0801%" height="15" fill="rgb(252,74,8)" fg:x="740" fg:w="1"/><text x="59.5449%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.2949%" y="389" width="0.0801%" height="15" fill="rgb(244,155,2)" fg:x="740" fg:w="1"/><text x="59.5449%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="59.2147%" y="501" width="0.2404%" height="15" fill="rgb(215,81,35)" fg:x="739" fg:w="3"/><text x="59.4647%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="59.2147%" y="485" width="0.2404%" height="15" fill="rgb(206,55,2)" fg:x="739" fg:w="3"/><text x="59.4647%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="59.2147%" y="469" width="0.2404%" height="15" fill="rgb(231,2,34)" fg:x="739" fg:w="3"/><text x="59.4647%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="59.2949%" y="453" width="0.1603%" height="15" fill="rgb(242,176,48)" fg:x="740" fg:w="2"/><text x="59.5449%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.2949%" y="437" width="0.1603%" height="15" fill="rgb(249,31,36)" fg:x="740" fg:w="2"/><text x="59.5449%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.2949%" y="421" width="0.1603%" height="15" fill="rgb(205,18,17)" fg:x="740" fg:w="2"/><text x="59.5449%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="59.3750%" y="405" width="0.0801%" height="15" fill="rgb(254,130,5)" fg:x="741" fg:w="1"/><text x="59.6250%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.3750%" y="389" width="0.0801%" height="15" fill="rgb(229,42,45)" fg:x="741" fg:w="1"/><text x="59.6250%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="59.5353%" y="405" width="0.2404%" height="15" fill="rgb(245,95,25)" fg:x="743" fg:w="3"/><text x="59.7853%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.6154%" y="389" width="0.1603%" height="15" fill="rgb(249,193,38)" fg:x="744" fg:w="2"/><text x="59.8654%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.7756%" y="341" width="0.0801%" height="15" fill="rgb(241,140,43)" fg:x="746" fg:w="1"/><text x="60.0256%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.7756%" y="325" width="0.0801%" height="15" fill="rgb(245,78,48)" fg:x="746" fg:w="1"/><text x="60.0256%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7756%" y="309" width="0.0801%" height="15" fill="rgb(214,92,39)" fg:x="746" fg:w="1"/><text x="60.0256%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.7756%" y="357" width="0.1603%" height="15" fill="rgb(211,189,14)" fg:x="746" fg:w="2"/><text x="60.0256%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="59.8558%" y="341" width="0.0801%" height="15" fill="rgb(218,7,24)" fg:x="747" fg:w="1"/><text x="60.1058%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.8558%" y="325" width="0.0801%" height="15" fill="rgb(224,200,49)" fg:x="747" fg:w="1"/><text x="60.1058%" y="335.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="59.4551%" y="485" width="0.6410%" height="15" fill="rgb(218,210,14)" fg:x="742" fg:w="8"/><text x="59.7051%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="59.4551%" y="469" width="0.6410%" height="15" fill="rgb(234,142,31)" fg:x="742" fg:w="8"/><text x="59.7051%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="59.4551%" y="453" width="0.6410%" height="15" fill="rgb(227,165,2)" fg:x="742" fg:w="8"/><text x="59.7051%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="59.4551%" y="437" width="0.6410%" height="15" fill="rgb(232,44,46)" fg:x="742" fg:w="8"/><text x="59.7051%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="59.5353%" y="421" width="0.5609%" height="15" fill="rgb(236,149,47)" fg:x="743" fg:w="7"/><text x="59.7853%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="59.7756%" y="405" width="0.3205%" height="15" fill="rgb(227,45,31)" fg:x="746" fg:w="4"/><text x="60.0256%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="59.7756%" y="389" width="0.3205%" height="15" fill="rgb(240,176,51)" fg:x="746" fg:w="4"/><text x="60.0256%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="59.7756%" y="373" width="0.3205%" height="15" fill="rgb(249,146,41)" fg:x="746" fg:w="4"/><text x="60.0256%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.9359%" y="357" width="0.1603%" height="15" fill="rgb(213,208,4)" fg:x="748" fg:w="2"/><text x="60.1859%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.9359%" y="341" width="0.1603%" height="15" fill="rgb(245,84,36)" fg:x="748" fg:w="2"/><text x="60.1859%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.9359%" y="325" width="0.1603%" height="15" fill="rgb(254,84,18)" fg:x="748" fg:w="2"/><text x="60.1859%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.0160%" y="309" width="0.0801%" height="15" fill="rgb(225,38,54)" fg:x="749" fg:w="1"/><text x="60.2660%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.0160%" y="293" width="0.0801%" height="15" fill="rgb(246,50,30)" fg:x="749" fg:w="1"/><text x="60.2660%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="60.1763%" y="405" width="0.3205%" height="15" fill="rgb(246,148,9)" fg:x="751" fg:w="4"/><text x="60.4263%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.2564%" y="389" width="0.2404%" height="15" fill="rgb(223,75,4)" fg:x="752" fg:w="3"/><text x="60.5064%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="60.3365%" y="373" width="0.1603%" height="15" fill="rgb(239,148,41)" fg:x="753" fg:w="2"/><text x="60.5865%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.3365%" y="357" width="0.1603%" height="15" fill="rgb(205,195,3)" fg:x="753" fg:w="2"/><text x="60.5865%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.3365%" y="341" width="0.1603%" height="15" fill="rgb(254,161,1)" fg:x="753" fg:w="2"/><text x="60.5865%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.3365%" y="325" width="0.1603%" height="15" fill="rgb(211,229,8)" fg:x="753" fg:w="2"/><text x="60.5865%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.3365%" y="309" width="0.1603%" height="15" fill="rgb(220,97,9)" fg:x="753" fg:w="2"/><text x="60.5865%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4167%" y="293" width="0.0801%" height="15" fill="rgb(240,218,8)" fg:x="754" fg:w="1"/><text x="60.6667%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="60.4968%" y="357" width="0.1603%" height="15" fill="rgb(250,44,0)" fg:x="755" fg:w="2"/><text x="60.7468%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="60.4968%" y="341" width="0.1603%" height="15" fill="rgb(236,41,53)" fg:x="755" fg:w="2"/><text x="60.7468%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.4968%" y="325" width="0.1603%" height="15" fill="rgb(218,227,13)" fg:x="755" fg:w="2"/><text x="60.7468%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.4968%" y="309" width="0.1603%" height="15" fill="rgb(217,94,32)" fg:x="755" fg:w="2"/><text x="60.7468%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.5769%" y="293" width="0.0801%" height="15" fill="rgb(213,217,12)" fg:x="756" fg:w="1"/><text x="60.8269%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (16 samples, 1.28%)</title><rect x="59.4551%" y="501" width="1.2821%" height="15" fill="rgb(229,13,46)" fg:x="742" fg:w="16"/><text x="59.7051%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="60.0962%" y="485" width="0.6410%" height="15" fill="rgb(243,139,5)" fg:x="750" fg:w="8"/><text x="60.3462%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="60.0962%" y="469" width="0.6410%" height="15" fill="rgb(249,38,45)" fg:x="750" fg:w="8"/><text x="60.3462%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="60.1763%" y="453" width="0.5609%" height="15" fill="rgb(216,70,11)" fg:x="751" fg:w="7"/><text x="60.4263%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="60.1763%" y="437" width="0.5609%" height="15" fill="rgb(253,101,25)" fg:x="751" fg:w="7"/><text x="60.4263%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="60.1763%" y="421" width="0.5609%" height="15" fill="rgb(207,197,30)" fg:x="751" fg:w="7"/><text x="60.4263%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="60.4968%" y="405" width="0.2404%" height="15" fill="rgb(238,87,13)" fg:x="755" fg:w="3"/><text x="60.7468%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.4968%" y="389" width="0.2404%" height="15" fill="rgb(215,155,8)" fg:x="755" fg:w="3"/><text x="60.7468%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="60.4968%" y="373" width="0.2404%" height="15" fill="rgb(239,166,38)" fg:x="755" fg:w="3"/><text x="60.7468%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.6571%" y="357" width="0.0801%" height="15" fill="rgb(240,194,35)" fg:x="757" fg:w="1"/><text x="60.9071%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.6571%" y="341" width="0.0801%" height="15" fill="rgb(219,10,44)" fg:x="757" fg:w="1"/><text x="60.9071%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.6571%" y="325" width="0.0801%" height="15" fill="rgb(251,220,35)" fg:x="757" fg:w="1"/><text x="60.9071%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.6571%" y="309" width="0.0801%" height="15" fill="rgb(218,117,13)" fg:x="757" fg:w="1"/><text x="60.9071%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.7372%" y="485" width="0.0801%" height="15" fill="rgb(221,213,40)" fg:x="758" fg:w="1"/><text x="60.9872%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (22 samples, 1.76%)</title><rect x="59.1346%" y="533" width="1.7628%" height="15" fill="rgb(251,224,35)" fg:x="738" fg:w="22"/><text x="59.3846%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (21 samples, 1.68%)</title><rect x="59.2147%" y="517" width="1.6827%" height="15" fill="rgb(241,33,39)" fg:x="739" fg:w="21"/><text x="59.4647%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="60.7372%" y="501" width="0.1603%" height="15" fill="rgb(222,74,17)" fg:x="758" fg:w="2"/><text x="60.9872%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="60.8173%" y="485" width="0.0801%" height="15" fill="rgb(225,103,0)" fg:x="759" fg:w="1"/><text x="61.0673%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.8173%" y="469" width="0.0801%" height="15" fill="rgb(240,0,12)" fg:x="759" fg:w="1"/><text x="61.0673%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8173%" y="453" width="0.0801%" height="15" fill="rgb(233,213,37)" fg:x="759" fg:w="1"/><text x="61.0673%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="60.8173%" y="437" width="0.0801%" height="15" fill="rgb(225,84,52)" fg:x="759" fg:w="1"/><text x="61.0673%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8173%" y="421" width="0.0801%" height="15" fill="rgb(247,160,51)" fg:x="759" fg:w="1"/><text x="61.0673%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.8173%" y="405" width="0.0801%" height="15" fill="rgb(244,60,51)" fg:x="759" fg:w="1"/><text x="61.0673%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8173%" y="389" width="0.0801%" height="15" fill="rgb(233,114,7)" fg:x="759" fg:w="1"/><text x="61.0673%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (25 samples, 2.00%)</title><rect x="58.9744%" y="549" width="2.0032%" height="15" fill="rgb(246,136,16)" fg:x="736" fg:w="25"/><text x="59.2244%" y="559.50">&lt;..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="60.8974%" y="533" width="0.0801%" height="15" fill="rgb(243,114,45)" fg:x="760" fg:w="1"/><text x="61.1474%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8974%" y="517" width="0.0801%" height="15" fill="rgb(247,183,43)" fg:x="760" fg:w="1"/><text x="61.1474%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8974%" y="501" width="0.0801%" height="15" fill="rgb(251,210,42)" fg:x="760" fg:w="1"/><text x="61.1474%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.8974%" y="485" width="0.0801%" height="15" fill="rgb(221,88,35)" fg:x="760" fg:w="1"/><text x="61.1474%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.8974%" y="469" width="0.0801%" height="15" fill="rgb(242,21,20)" fg:x="760" fg:w="1"/><text x="61.1474%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.8974%" y="453" width="0.0801%" height="15" fill="rgb(233,226,36)" fg:x="760" fg:w="1"/><text x="61.1474%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8974%" y="437" width="0.0801%" height="15" fill="rgb(243,189,34)" fg:x="760" fg:w="1"/><text x="61.1474%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8974%" y="421" width="0.0801%" height="15" fill="rgb(207,145,50)" fg:x="760" fg:w="1"/><text x="61.1474%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.8974%" y="405" width="0.0801%" height="15" fill="rgb(242,1,50)" fg:x="760" fg:w="1"/><text x="61.1474%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.8974%" y="389" width="0.0801%" height="15" fill="rgb(231,65,32)" fg:x="760" fg:w="1"/><text x="61.1474%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.8974%" y="373" width="0.0801%" height="15" fill="rgb(208,68,49)" fg:x="760" fg:w="1"/><text x="61.1474%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.8974%" y="357" width="0.0801%" height="15" fill="rgb(253,54,49)" fg:x="760" fg:w="1"/><text x="61.1474%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8974%" y="341" width="0.0801%" height="15" fill="rgb(245,186,24)" fg:x="760" fg:w="1"/><text x="61.1474%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="60.9776%" y="517" width="0.0801%" height="15" fill="rgb(209,2,41)" fg:x="761" fg:w="1"/><text x="61.2276%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (29 samples, 2.32%)</title><rect x="58.8942%" y="597" width="2.3237%" height="15" fill="rgb(242,208,54)" fg:x="735" fg:w="29"/><text x="59.1442%" y="607.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (28 samples, 2.24%)</title><rect x="58.9744%" y="581" width="2.2436%" height="15" fill="rgb(225,9,51)" fg:x="736" fg:w="28"/><text x="59.2244%" y="591.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (28 samples, 2.24%)</title><rect x="58.9744%" y="565" width="2.2436%" height="15" fill="rgb(207,207,25)" fg:x="736" fg:w="28"/><text x="59.2244%" y="575.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="60.9776%" y="549" width="0.2404%" height="15" fill="rgb(253,96,18)" fg:x="761" fg:w="3"/><text x="61.2276%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="60.9776%" y="533" width="0.2404%" height="15" fill="rgb(252,215,20)" fg:x="761" fg:w="3"/><text x="61.2276%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.0577%" y="517" width="0.1603%" height="15" fill="rgb(245,227,26)" fg:x="762" fg:w="2"/><text x="61.3077%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.1378%" y="501" width="0.0801%" height="15" fill="rgb(241,208,0)" fg:x="763" fg:w="1"/><text x="61.3878%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.1378%" y="485" width="0.0801%" height="15" fill="rgb(224,130,10)" fg:x="763" fg:w="1"/><text x="61.3878%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="61.2179%" y="565" width="0.0801%" height="15" fill="rgb(237,29,0)" fg:x="764" fg:w="1"/><text x="61.4679%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="61.2179%" y="549" width="0.0801%" height="15" fill="rgb(219,27,41)" fg:x="764" fg:w="1"/><text x="61.4679%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="61.2179%" y="533" width="0.0801%" height="15" fill="rgb(245,101,19)" fg:x="764" fg:w="1"/><text x="61.4679%" y="543.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (31 samples, 2.48%)</title><rect x="58.8942%" y="613" width="2.4840%" height="15" fill="rgb(243,44,37)" fg:x="735" fg:w="31"/><text x="59.1442%" y="623.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="61.2179%" y="597" width="0.1603%" height="15" fill="rgb(228,213,43)" fg:x="764" fg:w="2"/><text x="61.4679%" y="607.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="61.2179%" y="581" width="0.1603%" height="15" fill="rgb(219,163,21)" fg:x="764" fg:w="2"/><text x="61.4679%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.2981%" y="565" width="0.0801%" height="15" fill="rgb(234,86,24)" fg:x="765" fg:w="1"/><text x="61.5481%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3782%" y="613" width="0.0801%" height="15" fill="rgb(225,10,24)" fg:x="766" fg:w="1"/><text x="61.6282%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3782%" y="597" width="0.0801%" height="15" fill="rgb(218,109,7)" fg:x="766" fg:w="1"/><text x="61.6282%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3782%" y="581" width="0.0801%" height="15" fill="rgb(210,20,26)" fg:x="766" fg:w="1"/><text x="61.6282%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.3782%" y="565" width="0.0801%" height="15" fill="rgb(216,18,1)" fg:x="766" fg:w="1"/><text x="61.6282%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.3782%" y="549" width="0.0801%" height="15" fill="rgb(206,163,23)" fg:x="766" fg:w="1"/><text x="61.6282%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.3782%" y="533" width="0.0801%" height="15" fill="rgb(229,150,31)" fg:x="766" fg:w="1"/><text x="61.6282%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.3782%" y="517" width="0.0801%" height="15" fill="rgb(231,10,5)" fg:x="766" fg:w="1"/><text x="61.6282%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.3782%" y="501" width="0.0801%" height="15" fill="rgb(250,40,50)" fg:x="766" fg:w="1"/><text x="61.6282%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.3782%" y="485" width="0.0801%" height="15" fill="rgb(217,119,7)" fg:x="766" fg:w="1"/><text x="61.6282%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.3782%" y="469" width="0.0801%" height="15" fill="rgb(245,214,40)" fg:x="766" fg:w="1"/><text x="61.6282%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.3782%" y="453" width="0.0801%" height="15" fill="rgb(216,187,1)" fg:x="766" fg:w="1"/><text x="61.6282%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.3782%" y="437" width="0.0801%" height="15" fill="rgb(237,146,21)" fg:x="766" fg:w="1"/><text x="61.6282%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.3782%" y="421" width="0.0801%" height="15" fill="rgb(210,174,47)" fg:x="766" fg:w="1"/><text x="61.6282%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="61.4583%" y="613" width="0.0801%" height="15" fill="rgb(218,111,39)" fg:x="767" fg:w="1"/><text x="61.7083%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="61.4583%" y="597" width="0.0801%" height="15" fill="rgb(224,95,19)" fg:x="767" fg:w="1"/><text x="61.7083%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.4583%" y="581" width="0.0801%" height="15" fill="rgb(234,15,38)" fg:x="767" fg:w="1"/><text x="61.7083%" y="591.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="61.7788%" y="485" width="0.0801%" height="15" fill="rgb(246,56,12)" fg:x="771" fg:w="1"/><text x="62.0288%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7788%" y="469" width="0.0801%" height="15" fill="rgb(247,16,17)" fg:x="771" fg:w="1"/><text x="62.0288%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="62.0192%" y="453" width="0.0801%" height="15" fill="rgb(215,151,11)" fg:x="774" fg:w="1"/><text x="62.2692%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="62.0192%" y="437" width="0.0801%" height="15" fill="rgb(225,16,24)" fg:x="774" fg:w="1"/><text x="62.2692%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.0192%" y="421" width="0.0801%" height="15" fill="rgb(217,117,5)" fg:x="774" fg:w="1"/><text x="62.2692%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.0192%" y="405" width="0.0801%" height="15" fill="rgb(246,187,53)" fg:x="774" fg:w="1"/><text x="62.2692%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.0192%" y="389" width="0.0801%" height="15" fill="rgb(241,71,40)" fg:x="774" fg:w="1"/><text x="62.2692%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.0994%" y="437" width="0.0801%" height="15" fill="rgb(231,67,39)" fg:x="775" fg:w="1"/><text x="62.3494%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.2596%" y="421" width="0.0801%" height="15" fill="rgb(222,120,24)" fg:x="777" fg:w="1"/><text x="62.5096%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="62.3397%" y="421" width="0.2404%" height="15" fill="rgb(248,3,3)" fg:x="778" fg:w="3"/><text x="62.5897%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.5000%" y="405" width="0.0801%" height="15" fill="rgb(228,218,5)" fg:x="780" fg:w="1"/><text x="62.7500%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.5000%" y="389" width="0.0801%" height="15" fill="rgb(212,202,43)" fg:x="780" fg:w="1"/><text x="62.7500%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.5000%" y="373" width="0.0801%" height="15" fill="rgb(235,183,2)" fg:x="780" fg:w="1"/><text x="62.7500%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.5000%" y="357" width="0.0801%" height="15" fill="rgb(230,165,10)" fg:x="780" fg:w="1"/><text x="62.7500%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.9808%" y="357" width="0.0801%" height="15" fill="rgb(219,54,40)" fg:x="786" fg:w="1"/><text x="63.2308%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.3814%" y="325" width="0.0801%" height="15" fill="rgb(244,73,9)" fg:x="791" fg:w="1"/><text x="63.6314%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (18 samples, 1.44%)</title><rect x="62.0994%" y="453" width="1.4423%" height="15" fill="rgb(212,32,45)" fg:x="775" fg:w="18"/><text x="62.3494%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (17 samples, 1.36%)</title><rect x="62.1795%" y="437" width="1.3622%" height="15" fill="rgb(205,58,31)" fg:x="776" fg:w="17"/><text x="62.4295%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.96%)</title><rect x="62.5801%" y="421" width="0.9615%" height="15" fill="rgb(250,120,43)" fg:x="781" fg:w="12"/><text x="62.8301%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="62.5801%" y="405" width="0.9615%" height="15" fill="rgb(235,13,10)" fg:x="781" fg:w="12"/><text x="62.8301%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.96%)</title><rect x="62.5801%" y="389" width="0.9615%" height="15" fill="rgb(232,219,31)" fg:x="781" fg:w="12"/><text x="62.8301%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="62.5801%" y="373" width="0.9615%" height="15" fill="rgb(218,157,51)" fg:x="781" fg:w="12"/><text x="62.8301%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="63.0609%" y="357" width="0.4808%" height="15" fill="rgb(211,91,52)" fg:x="787" fg:w="6"/><text x="63.3109%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="63.0609%" y="341" width="0.4808%" height="15" fill="rgb(240,173,1)" fg:x="787" fg:w="6"/><text x="63.3109%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.4615%" y="325" width="0.0801%" height="15" fill="rgb(248,20,47)" fg:x="792" fg:w="1"/><text x="63.7115%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.7019%" y="437" width="0.0801%" height="15" fill="rgb(217,221,40)" fg:x="795" fg:w="1"/><text x="63.9519%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.7821%" y="437" width="0.0801%" height="15" fill="rgb(226,149,51)" fg:x="796" fg:w="1"/><text x="64.0321%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.1827%" y="373" width="0.1603%" height="15" fill="rgb(252,193,7)" fg:x="801" fg:w="2"/><text x="64.4327%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.1827%" y="357" width="0.1603%" height="15" fill="rgb(205,123,0)" fg:x="801" fg:w="2"/><text x="64.4327%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.1827%" y="341" width="0.1603%" height="15" fill="rgb(233,173,25)" fg:x="801" fg:w="2"/><text x="64.4327%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.1827%" y="325" width="0.1603%" height="15" fill="rgb(216,63,32)" fg:x="801" fg:w="2"/><text x="64.4327%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.1827%" y="309" width="0.1603%" height="15" fill="rgb(209,56,45)" fg:x="801" fg:w="2"/><text x="64.4327%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.1827%" y="293" width="0.1603%" height="15" fill="rgb(226,111,49)" fg:x="801" fg:w="2"/><text x="64.4327%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.1827%" y="277" width="0.1603%" height="15" fill="rgb(244,181,21)" fg:x="801" fg:w="2"/><text x="64.4327%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="64.1827%" y="261" width="0.1603%" height="15" fill="rgb(222,126,15)" fg:x="801" fg:w="2"/><text x="64.4327%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="64.1827%" y="245" width="0.1603%" height="15" fill="rgb(222,95,17)" fg:x="801" fg:w="2"/><text x="64.4327%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="64.1827%" y="229" width="0.1603%" height="15" fill="rgb(254,46,5)" fg:x="801" fg:w="2"/><text x="64.4327%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="64.1827%" y="213" width="0.1603%" height="15" fill="rgb(236,216,35)" fg:x="801" fg:w="2"/><text x="64.4327%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.1827%" y="197" width="0.1603%" height="15" fill="rgb(217,187,26)" fg:x="801" fg:w="2"/><text x="64.4327%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.1827%" y="389" width="0.2404%" height="15" fill="rgb(207,192,25)" fg:x="801" fg:w="3"/><text x="64.4327%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.3429%" y="373" width="0.0801%" height="15" fill="rgb(253,135,27)" fg:x="803" fg:w="1"/><text x="64.5929%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4231%" y="389" width="0.0801%" height="15" fill="rgb(211,122,29)" fg:x="804" fg:w="1"/><text x="64.6731%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4231%" y="373" width="0.0801%" height="15" fill="rgb(233,162,40)" fg:x="804" fg:w="1"/><text x="64.6731%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.4231%" y="357" width="0.0801%" height="15" fill="rgb(222,184,47)" fg:x="804" fg:w="1"/><text x="64.6731%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.4231%" y="341" width="0.0801%" height="15" fill="rgb(249,99,23)" fg:x="804" fg:w="1"/><text x="64.6731%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.4231%" y="325" width="0.0801%" height="15" fill="rgb(214,60,12)" fg:x="804" fg:w="1"/><text x="64.6731%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.4231%" y="309" width="0.0801%" height="15" fill="rgb(250,229,36)" fg:x="804" fg:w="1"/><text x="64.6731%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.4231%" y="293" width="0.0801%" height="15" fill="rgb(232,195,10)" fg:x="804" fg:w="1"/><text x="64.6731%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="64.0224%" y="421" width="0.5609%" height="15" fill="rgb(205,213,31)" fg:x="799" fg:w="7"/><text x="64.2724%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="64.0224%" y="405" width="0.5609%" height="15" fill="rgb(237,43,8)" fg:x="799" fg:w="7"/><text x="64.2724%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5032%" y="389" width="0.0801%" height="15" fill="rgb(216,208,3)" fg:x="805" fg:w="1"/><text x="64.7532%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.5833%" y="421" width="0.1603%" height="15" fill="rgb(228,179,44)" fg:x="806" fg:w="2"/><text x="64.8333%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="64.5833%" y="405" width="0.1603%" height="15" fill="rgb(230,192,27)" fg:x="806" fg:w="2"/><text x="64.8333%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.5833%" y="389" width="0.1603%" height="15" fill="rgb(251,30,38)" fg:x="806" fg:w="2"/><text x="64.8333%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.5833%" y="373" width="0.1603%" height="15" fill="rgb(246,55,52)" fg:x="806" fg:w="2"/><text x="64.8333%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.6635%" y="357" width="0.0801%" height="15" fill="rgb(249,79,26)" fg:x="807" fg:w="1"/><text x="64.9135%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="64.9840%" y="341" width="0.1603%" height="15" fill="rgb(220,202,16)" fg:x="811" fg:w="2"/><text x="65.2340%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="64.9840%" y="357" width="0.2404%" height="15" fill="rgb(250,170,23)" fg:x="811" fg:w="3"/><text x="65.2340%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.1442%" y="341" width="0.0801%" height="15" fill="rgb(230,7,37)" fg:x="813" fg:w="1"/><text x="65.3942%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.5449%" y="325" width="0.0801%" height="15" fill="rgb(213,71,1)" fg:x="818" fg:w="1"/><text x="65.7949%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.5449%" y="309" width="0.0801%" height="15" fill="rgb(227,87,39)" fg:x="818" fg:w="1"/><text x="65.7949%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.04%)</title><rect x="64.7436%" y="389" width="1.0417%" height="15" fill="rgb(210,41,29)" fg:x="808" fg:w="13"/><text x="64.9936%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="64.7436%" y="373" width="1.0417%" height="15" fill="rgb(206,191,31)" fg:x="808" fg:w="13"/><text x="64.9936%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="65.2244%" y="357" width="0.5609%" height="15" fill="rgb(247,75,54)" fg:x="814" fg:w="7"/><text x="65.4744%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="65.2244%" y="341" width="0.5609%" height="15" fill="rgb(208,54,50)" fg:x="814" fg:w="7"/><text x="65.4744%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="65.6250%" y="325" width="0.1603%" height="15" fill="rgb(214,90,37)" fg:x="819" fg:w="2"/><text x="65.8750%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (29 samples, 2.32%)</title><rect x="63.5417%" y="453" width="2.3237%" height="15" fill="rgb(220,132,6)" fg:x="793" fg:w="29"/><text x="63.7917%" y="463.50">&lt;..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (25 samples, 2.00%)</title><rect x="63.8622%" y="437" width="2.0032%" height="15" fill="rgb(213,167,7)" fg:x="797" fg:w="25"/><text x="64.1122%" y="447.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.12%)</title><rect x="64.7436%" y="421" width="1.1218%" height="15" fill="rgb(243,36,27)" fg:x="808" fg:w="14"/><text x="64.9936%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.12%)</title><rect x="64.7436%" y="405" width="1.1218%" height="15" fill="rgb(235,147,12)" fg:x="808" fg:w="14"/><text x="64.9936%" y="415.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="65.7853%" y="389" width="0.0801%" height="15" fill="rgb(212,198,44)" fg:x="821" fg:w="1"/><text x="66.0353%" y="399.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (50 samples, 4.01%)</title><rect x="61.9391%" y="469" width="4.0064%" height="15" fill="rgb(218,68,50)" fg:x="773" fg:w="50"/><text x="62.1891%" y="479.50">&lt;&amp;ke..</text></g><g><title>plugins_core::looking::model::Unqualified::qualify (1 samples, 0.08%)</title><rect x="65.8654%" y="453" width="0.0801%" height="15" fill="rgb(224,79,48)" fg:x="822" fg:w="1"/><text x="66.1154%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.8654%" y="437" width="0.0801%" height="15" fill="rgb(213,191,50)" fg:x="822" fg:w="1"/><text x="66.1154%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.9455%" y="469" width="0.0801%" height="15" fill="rgb(254,146,10)" fg:x="823" fg:w="1"/><text x="66.1955%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="66.2660%" y="437" width="0.1603%" height="15" fill="rgb(215,175,11)" fg:x="827" fg:w="2"/><text x="66.5160%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="66.2660%" y="421" width="0.1603%" height="15" fill="rgb(207,49,7)" fg:x="827" fg:w="2"/><text x="66.5160%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.3462%" y="405" width="0.0801%" height="15" fill="rgb(234,144,29)" fg:x="828" fg:w="1"/><text x="66.5962%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="66.4263%" y="437" width="0.0801%" height="15" fill="rgb(213,222,48)" fg:x="829" fg:w="1"/><text x="66.6763%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4263%" y="421" width="0.0801%" height="15" fill="rgb(222,8,6)" fg:x="829" fg:w="1"/><text x="66.6763%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4263%" y="405" width="0.0801%" height="15" fill="rgb(221,114,49)" fg:x="829" fg:w="1"/><text x="66.6763%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.4263%" y="389" width="0.0801%" height="15" fill="rgb(250,140,42)" fg:x="829" fg:w="1"/><text x="66.6763%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.4263%" y="373" width="0.0801%" height="15" fill="rgb(250,150,27)" fg:x="829" fg:w="1"/><text x="66.6763%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.4263%" y="357" width="0.0801%" height="15" fill="rgb(252,159,3)" fg:x="829" fg:w="1"/><text x="66.6763%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="66.4263%" y="341" width="0.0801%" height="15" fill="rgb(241,182,3)" fg:x="829" fg:w="1"/><text x="66.6763%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="66.4263%" y="325" width="0.0801%" height="15" fill="rgb(236,3,9)" fg:x="829" fg:w="1"/><text x="66.6763%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.5865%" y="421" width="0.0801%" height="15" fill="rgb(223,227,51)" fg:x="831" fg:w="1"/><text x="66.8365%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.5865%" y="405" width="0.0801%" height="15" fill="rgb(232,133,30)" fg:x="831" fg:w="1"/><text x="66.8365%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.5865%" y="389" width="0.0801%" height="15" fill="rgb(209,93,27)" fg:x="831" fg:w="1"/><text x="66.8365%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.5865%" y="373" width="0.0801%" height="15" fill="rgb(208,108,34)" fg:x="831" fg:w="1"/><text x="66.8365%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.5865%" y="357" width="0.0801%" height="15" fill="rgb(215,189,13)" fg:x="831" fg:w="1"/><text x="66.8365%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="66.5865%" y="341" width="0.0801%" height="15" fill="rgb(206,88,23)" fg:x="831" fg:w="1"/><text x="66.8365%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="66.5865%" y="325" width="0.0801%" height="15" fill="rgb(240,173,0)" fg:x="831" fg:w="1"/><text x="66.8365%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (9 samples, 0.72%)</title><rect x="66.0256%" y="469" width="0.7212%" height="15" fill="rgb(223,106,52)" fg:x="824" fg:w="9"/><text x="66.2756%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (7 samples, 0.56%)</title><rect x="66.1859%" y="453" width="0.5609%" height="15" fill="rgb(206,130,16)" fg:x="826" fg:w="7"/><text x="66.4359%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="66.5064%" y="437" width="0.2404%" height="15" fill="rgb(220,54,25)" fg:x="830" fg:w="3"/><text x="66.7564%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="66.6667%" y="421" width="0.0801%" height="15" fill="rgb(210,4,38)" fg:x="832" fg:w="1"/><text x="66.9167%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="66.6667%" y="405" width="0.0801%" height="15" fill="rgb(238,94,39)" fg:x="832" fg:w="1"/><text x="66.9167%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.6667%" y="389" width="0.0801%" height="15" fill="rgb(234,124,34)" fg:x="832" fg:w="1"/><text x="66.9167%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.6667%" y="373" width="0.0801%" height="15" fill="rgb(221,91,40)" fg:x="832" fg:w="1"/><text x="66.9167%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="66.6667%" y="357" width="0.0801%" height="15" fill="rgb(246,53,28)" fg:x="832" fg:w="1"/><text x="66.9167%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="66.6667%" y="341" width="0.0801%" height="15" fill="rgb(229,109,7)" fg:x="832" fg:w="1"/><text x="66.9167%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.6667%" y="325" width="0.0801%" height="15" fill="rgb(249,117,8)" fg:x="832" fg:w="1"/><text x="66.9167%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.6667%" y="309" width="0.0801%" height="15" fill="rgb(210,181,1)" fg:x="832" fg:w="1"/><text x="66.9167%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="66.6667%" y="293" width="0.0801%" height="15" fill="rgb(211,66,1)" fg:x="832" fg:w="1"/><text x="66.9167%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="66.6667%" y="277" width="0.0801%" height="15" fill="rgb(221,90,14)" fg:x="832" fg:w="1"/><text x="66.9167%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.6667%" y="261" width="0.0801%" height="15" fill="rgb(219,222,44)" fg:x="832" fg:w="1"/><text x="66.9167%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.6667%" y="245" width="0.0801%" height="15" fill="rgb(246,34,33)" fg:x="832" fg:w="1"/><text x="66.9167%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.6667%" y="229" width="0.0801%" height="15" fill="rgb(227,135,41)" fg:x="832" fg:w="1"/><text x="66.9167%" y="239.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.6667%" y="213" width="0.0801%" height="15" fill="rgb(226,15,14)" fg:x="832" fg:w="1"/><text x="66.9167%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.6667%" y="197" width="0.0801%" height="15" fill="rgb(236,148,47)" fg:x="832" fg:w="1"/><text x="66.9167%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.6667%" y="181" width="0.0801%" height="15" fill="rgb(233,162,52)" fg:x="832" fg:w="1"/><text x="66.9167%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.6667%" y="165" width="0.0801%" height="15" fill="rgb(244,35,28)" fg:x="832" fg:w="1"/><text x="66.9167%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.6667%" y="149" width="0.0801%" height="15" fill="rgb(205,121,10)" fg:x="832" fg:w="1"/><text x="66.9167%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.6667%" y="133" width="0.0801%" height="15" fill="rgb(250,58,18)" fg:x="832" fg:w="1"/><text x="66.9167%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.6667%" y="117" width="0.0801%" height="15" fill="rgb(216,37,13)" fg:x="832" fg:w="1"/><text x="66.9167%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="66.6667%" y="101" width="0.0801%" height="15" fill="rgb(221,215,42)" fg:x="832" fg:w="1"/><text x="66.9167%" y="111.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="66.6667%" y="85" width="0.0801%" height="15" fill="rgb(217,214,19)" fg:x="832" fg:w="1"/><text x="66.9167%" y="95.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="66.6667%" y="69" width="0.0801%" height="15" fill="rgb(233,139,13)" fg:x="832" fg:w="1"/><text x="66.9167%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8269%" y="405" width="0.0801%" height="15" fill="rgb(247,168,23)" fg:x="834" fg:w="1"/><text x="67.0769%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8269%" y="389" width="0.0801%" height="15" fill="rgb(207,202,1)" fg:x="834" fg:w="1"/><text x="67.0769%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8269%" y="373" width="0.0801%" height="15" fill="rgb(220,155,48)" fg:x="834" fg:w="1"/><text x="67.0769%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.8269%" y="357" width="0.0801%" height="15" fill="rgb(250,43,26)" fg:x="834" fg:w="1"/><text x="67.0769%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.8269%" y="341" width="0.0801%" height="15" fill="rgb(212,190,23)" fg:x="834" fg:w="1"/><text x="67.0769%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.8269%" y="325" width="0.0801%" height="15" fill="rgb(216,39,24)" fg:x="834" fg:w="1"/><text x="67.0769%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.8269%" y="309" width="0.0801%" height="15" fill="rgb(252,113,16)" fg:x="834" fg:w="1"/><text x="67.0769%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.8269%" y="293" width="0.0801%" height="15" fill="rgb(208,113,19)" fg:x="834" fg:w="1"/><text x="67.0769%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.8269%" y="277" width="0.0801%" height="15" fill="rgb(234,107,25)" fg:x="834" fg:w="1"/><text x="67.0769%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.8269%" y="261" width="0.0801%" height="15" fill="rgb(234,217,51)" fg:x="834" fg:w="1"/><text x="67.0769%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.8269%" y="245" width="0.0801%" height="15" fill="rgb(251,29,42)" fg:x="834" fg:w="1"/><text x="67.0769%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.8269%" y="229" width="0.0801%" height="15" fill="rgb(221,62,51)" fg:x="834" fg:w="1"/><text x="67.0769%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.8269%" y="213" width="0.0801%" height="15" fill="rgb(240,192,43)" fg:x="834" fg:w="1"/><text x="67.0769%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.0673%" y="245" width="0.0801%" height="15" fill="rgb(224,157,47)" fg:x="837" fg:w="1"/><text x="67.3173%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.0673%" y="229" width="0.0801%" height="15" fill="rgb(226,84,45)" fg:x="837" fg:w="1"/><text x="67.3173%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.0673%" y="213" width="0.0801%" height="15" fill="rgb(208,207,23)" fg:x="837" fg:w="1"/><text x="67.3173%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.0673%" y="197" width="0.0801%" height="15" fill="rgb(253,34,51)" fg:x="837" fg:w="1"/><text x="67.3173%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="66.9872%" y="373" width="0.2404%" height="15" fill="rgb(227,26,34)" fg:x="836" fg:w="3"/><text x="67.2372%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.0673%" y="357" width="0.1603%" height="15" fill="rgb(245,75,19)" fg:x="837" fg:w="2"/><text x="67.3173%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="67.0673%" y="341" width="0.1603%" height="15" fill="rgb(250,191,31)" fg:x="837" fg:w="2"/><text x="67.3173%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="67.0673%" y="325" width="0.1603%" height="15" fill="rgb(224,11,50)" fg:x="837" fg:w="2"/><text x="67.3173%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="67.0673%" y="309" width="0.1603%" height="15" fill="rgb(231,171,7)" fg:x="837" fg:w="2"/><text x="67.3173%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="67.0673%" y="293" width="0.1603%" height="15" fill="rgb(252,214,10)" fg:x="837" fg:w="2"/><text x="67.3173%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="67.0673%" y="277" width="0.1603%" height="15" fill="rgb(249,45,46)" fg:x="837" fg:w="2"/><text x="67.3173%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="67.0673%" y="261" width="0.1603%" height="15" fill="rgb(240,173,7)" fg:x="837" fg:w="2"/><text x="67.3173%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="67.1474%" y="245" width="0.0801%" height="15" fill="rgb(235,214,13)" fg:x="838" fg:w="1"/><text x="67.3974%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="67.1474%" y="229" width="0.0801%" height="15" fill="rgb(245,156,8)" fg:x="838" fg:w="1"/><text x="67.3974%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="66.9872%" y="389" width="0.3205%" height="15" fill="rgb(235,46,12)" fg:x="836" fg:w="4"/><text x="67.2372%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.2276%" y="373" width="0.0801%" height="15" fill="rgb(221,81,14)" fg:x="839" fg:w="1"/><text x="67.4776%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (7 samples, 0.56%)</title><rect x="66.8269%" y="437" width="0.5609%" height="15" fill="rgb(238,207,9)" fg:x="834" fg:w="7"/><text x="67.0769%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="66.8269%" y="421" width="0.5609%" height="15" fill="rgb(224,129,35)" fg:x="834" fg:w="7"/><text x="67.0769%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="66.9071%" y="405" width="0.4808%" height="15" fill="rgb(243,218,34)" fg:x="835" fg:w="6"/><text x="67.1571%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3077%" y="389" width="0.0801%" height="15" fill="rgb(220,166,13)" fg:x="840" fg:w="1"/><text x="67.5577%" y="399.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="67.6282%" y="341" width="0.1603%" height="15" fill="rgb(227,167,49)" fg:x="844" fg:w="2"/><text x="67.8782%" y="351.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="67.7885%" y="277" width="0.0801%" height="15" fill="rgb(234,142,12)" fg:x="846" fg:w="1"/><text x="68.0385%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8686%" y="229" width="0.0801%" height="15" fill="rgb(207,100,48)" fg:x="847" fg:w="1"/><text x="68.1186%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8686%" y="213" width="0.0801%" height="15" fill="rgb(210,25,14)" fg:x="847" fg:w="1"/><text x="68.1186%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.8686%" y="197" width="0.0801%" height="15" fill="rgb(246,116,27)" fg:x="847" fg:w="1"/><text x="68.1186%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.8686%" y="181" width="0.0801%" height="15" fill="rgb(214,193,42)" fg:x="847" fg:w="1"/><text x="68.1186%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.8686%" y="165" width="0.0801%" height="15" fill="rgb(214,122,8)" fg:x="847" fg:w="1"/><text x="68.1186%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8686%" y="149" width="0.0801%" height="15" fill="rgb(244,173,18)" fg:x="847" fg:w="1"/><text x="68.1186%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8686%" y="133" width="0.0801%" height="15" fill="rgb(232,68,19)" fg:x="847" fg:w="1"/><text x="68.1186%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.8686%" y="117" width="0.0801%" height="15" fill="rgb(236,224,1)" fg:x="847" fg:w="1"/><text x="68.1186%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.8686%" y="101" width="0.0801%" height="15" fill="rgb(240,11,8)" fg:x="847" fg:w="1"/><text x="68.1186%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.8686%" y="85" width="0.0801%" height="15" fill="rgb(244,159,20)" fg:x="847" fg:w="1"/><text x="68.1186%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.8686%" y="69" width="0.0801%" height="15" fill="rgb(240,223,54)" fg:x="847" fg:w="1"/><text x="68.1186%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8686%" y="53" width="0.0801%" height="15" fill="rgb(237,146,5)" fg:x="847" fg:w="1"/><text x="68.1186%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.8686%" y="261" width="0.1603%" height="15" fill="rgb(218,221,32)" fg:x="847" fg:w="2"/><text x="68.1186%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.8686%" y="245" width="0.1603%" height="15" fill="rgb(244,96,26)" fg:x="847" fg:w="2"/><text x="68.1186%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9487%" y="229" width="0.0801%" height="15" fill="rgb(245,184,37)" fg:x="848" fg:w="1"/><text x="68.1987%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="67.7885%" y="293" width="0.4808%" height="15" fill="rgb(248,91,47)" fg:x="846" fg:w="6"/><text x="68.0385%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="67.8686%" y="277" width="0.4006%" height="15" fill="rgb(243,199,8)" fg:x="847" fg:w="5"/><text x="68.1186%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="68.0288%" y="261" width="0.2404%" height="15" fill="rgb(249,12,15)" fg:x="849" fg:w="3"/><text x="68.2788%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.0288%" y="245" width="0.2404%" height="15" fill="rgb(245,97,12)" fg:x="849" fg:w="3"/><text x="68.2788%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="68.1090%" y="229" width="0.1603%" height="15" fill="rgb(244,61,1)" fg:x="850" fg:w="2"/><text x="68.3590%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.1090%" y="213" width="0.1603%" height="15" fill="rgb(222,194,10)" fg:x="850" fg:w="2"/><text x="68.3590%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.1891%" y="197" width="0.0801%" height="15" fill="rgb(226,178,8)" fg:x="851" fg:w="1"/><text x="68.4391%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.1891%" y="181" width="0.0801%" height="15" fill="rgb(241,32,34)" fg:x="851" fg:w="1"/><text x="68.4391%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="68.2692%" y="277" width="0.0801%" height="15" fill="rgb(254,26,6)" fg:x="852" fg:w="1"/><text x="68.5192%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.3494%" y="261" width="0.0801%" height="15" fill="rgb(249,71,11)" fg:x="853" fg:w="1"/><text x="68.5994%" y="271.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (9 samples, 0.72%)</title><rect x="67.7885%" y="325" width="0.7212%" height="15" fill="rgb(232,170,27)" fg:x="846" fg:w="9"/><text x="68.0385%" y="335.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="67.7885%" y="309" width="0.7212%" height="15" fill="rgb(214,223,17)" fg:x="846" fg:w="9"/><text x="68.0385%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="68.2692%" y="293" width="0.2404%" height="15" fill="rgb(250,18,15)" fg:x="852" fg:w="3"/><text x="68.5192%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="68.3494%" y="277" width="0.1603%" height="15" fill="rgb(212,153,51)" fg:x="853" fg:w="2"/><text x="68.5994%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.4295%" y="261" width="0.0801%" height="15" fill="rgb(219,194,12)" fg:x="854" fg:w="1"/><text x="68.6795%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4295%" y="245" width="0.0801%" height="15" fill="rgb(212,58,17)" fg:x="854" fg:w="1"/><text x="68.6795%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.4295%" y="229" width="0.0801%" height="15" fill="rgb(254,5,10)" fg:x="854" fg:w="1"/><text x="68.6795%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4295%" y="213" width="0.0801%" height="15" fill="rgb(246,91,7)" fg:x="854" fg:w="1"/><text x="68.6795%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.4295%" y="197" width="0.0801%" height="15" fill="rgb(218,108,49)" fg:x="854" fg:w="1"/><text x="68.6795%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4295%" y="181" width="0.0801%" height="15" fill="rgb(238,123,20)" fg:x="854" fg:w="1"/><text x="68.6795%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.5096%" y="261" width="0.0801%" height="15" fill="rgb(231,69,23)" fg:x="855" fg:w="1"/><text x="68.7596%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.5096%" y="245" width="0.0801%" height="15" fill="rgb(230,209,3)" fg:x="855" fg:w="1"/><text x="68.7596%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.7500%" y="229" width="0.0801%" height="15" fill="rgb(231,19,0)" fg:x="858" fg:w="1"/><text x="69.0000%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.9103%" y="197" width="0.1603%" height="15" fill="rgb(226,192,25)" fg:x="860" fg:w="2"/><text x="69.1603%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="69.1506%" y="165" width="0.2404%" height="15" fill="rgb(223,175,53)" fg:x="863" fg:w="3"/><text x="69.4006%" y="175.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="69.1506%" y="149" width="0.2404%" height="15" fill="rgb(248,35,51)" fg:x="863" fg:w="3"/><text x="69.4006%" y="159.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 1.04%)</title><rect x="68.5096%" y="309" width="1.0417%" height="15" fill="rgb(230,37,26)" fg:x="855" fg:w="13"/><text x="68.7596%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.04%)</title><rect x="68.5096%" y="293" width="1.0417%" height="15" fill="rgb(206,120,22)" fg:x="855" fg:w="13"/><text x="68.7596%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="68.5096%" y="277" width="1.0417%" height="15" fill="rgb(207,165,28)" fg:x="855" fg:w="13"/><text x="68.7596%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="68.5897%" y="261" width="0.9615%" height="15" fill="rgb(226,23,46)" fg:x="856" fg:w="12"/><text x="68.8397%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="68.5897%" y="245" width="0.9615%" height="15" fill="rgb(208,130,44)" fg:x="856" fg:w="12"/><text x="68.8397%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="68.8301%" y="229" width="0.7212%" height="15" fill="rgb(231,67,8)" fg:x="859" fg:w="9"/><text x="69.0801%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="68.9103%" y="213" width="0.6410%" height="15" fill="rgb(205,183,22)" fg:x="860" fg:w="8"/><text x="69.1603%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="69.0705%" y="197" width="0.4808%" height="15" fill="rgb(224,47,9)" fg:x="862" fg:w="6"/><text x="69.3205%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="69.0705%" y="181" width="0.4808%" height="15" fill="rgb(250,183,49)" fg:x="862" fg:w="6"/><text x="69.3205%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.3910%" y="165" width="0.1603%" height="15" fill="rgb(220,151,39)" fg:x="866" fg:w="2"/><text x="69.6410%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.4712%" y="149" width="0.0801%" height="15" fill="rgb(220,118,20)" fg:x="867" fg:w="1"/><text x="69.7212%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.4712%" y="133" width="0.0801%" height="15" fill="rgb(231,65,51)" fg:x="867" fg:w="1"/><text x="69.7212%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.5513%" y="277" width="0.0801%" height="15" fill="rgb(253,125,37)" fg:x="868" fg:w="1"/><text x="69.8013%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.6314%" y="245" width="0.0801%" height="15" fill="rgb(232,102,6)" fg:x="869" fg:w="1"/><text x="69.8814%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.7115%" y="229" width="0.0801%" height="15" fill="rgb(251,105,13)" fg:x="870" fg:w="1"/><text x="69.9615%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.7115%" y="245" width="0.1603%" height="15" fill="rgb(222,179,29)" fg:x="870" fg:w="2"/><text x="69.9615%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7917%" y="229" width="0.0801%" height="15" fill="rgb(229,180,53)" fg:x="871" fg:w="1"/><text x="70.0417%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="69.8718%" y="229" width="0.4006%" height="15" fill="rgb(238,104,13)" fg:x="872" fg:w="5"/><text x="70.1218%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="69.8718%" y="213" width="0.4006%" height="15" fill="rgb(210,130,5)" fg:x="872" fg:w="5"/><text x="70.1218%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="70.1122%" y="197" width="0.1603%" height="15" fill="rgb(233,87,49)" fg:x="875" fg:w="2"/><text x="70.3622%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.1122%" y="181" width="0.1603%" height="15" fill="rgb(243,34,9)" fg:x="875" fg:w="2"/><text x="70.3622%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="70.1122%" y="165" width="0.1603%" height="15" fill="rgb(235,225,10)" fg:x="875" fg:w="2"/><text x="70.3622%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.3526%" y="181" width="0.0801%" height="15" fill="rgb(212,0,30)" fg:x="878" fg:w="1"/><text x="70.6026%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.5929%" y="165" width="0.0801%" height="15" fill="rgb(211,177,0)" fg:x="881" fg:w="1"/><text x="70.8429%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (7 samples, 0.56%)</title><rect x="70.2724%" y="229" width="0.5609%" height="15" fill="rgb(225,220,11)" fg:x="877" fg:w="7"/><text x="70.5224%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="70.2724%" y="213" width="0.5609%" height="15" fill="rgb(215,10,13)" fg:x="877" fg:w="7"/><text x="70.5224%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (6 samples, 0.48%)</title><rect x="70.3526%" y="197" width="0.4808%" height="15" fill="rgb(240,177,14)" fg:x="878" fg:w="6"/><text x="70.6026%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (5 samples, 0.40%)</title><rect x="70.4327%" y="181" width="0.4006%" height="15" fill="rgb(243,7,39)" fg:x="879" fg:w="5"/><text x="70.6827%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="70.6731%" y="165" width="0.1603%" height="15" fill="rgb(212,99,0)" fg:x="882" fg:w="2"/><text x="70.9231%" y="175.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="70.9135%" y="181" width="0.0801%" height="15" fill="rgb(225,162,48)" fg:x="885" fg:w="1"/><text x="71.1635%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="70.9135%" y="165" width="0.0801%" height="15" fill="rgb(246,16,25)" fg:x="885" fg:w="1"/><text x="71.1635%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.9135%" y="149" width="0.0801%" height="15" fill="rgb(220,150,2)" fg:x="885" fg:w="1"/><text x="71.1635%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.9135%" y="133" width="0.0801%" height="15" fill="rgb(237,113,11)" fg:x="885" fg:w="1"/><text x="71.1635%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (20 samples, 1.60%)</title><rect x="69.6314%" y="277" width="1.6026%" height="15" fill="rgb(236,70,20)" fg:x="869" fg:w="20"/><text x="69.8814%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (20 samples, 1.60%)</title><rect x="69.6314%" y="261" width="1.6026%" height="15" fill="rgb(234,94,7)" fg:x="869" fg:w="20"/><text x="69.8814%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (17 samples, 1.36%)</title><rect x="69.8718%" y="245" width="1.3622%" height="15" fill="rgb(250,221,0)" fg:x="872" fg:w="17"/><text x="70.1218%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="70.8333%" y="229" width="0.4006%" height="15" fill="rgb(245,149,46)" fg:x="884" fg:w="5"/><text x="71.0833%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="70.8333%" y="213" width="0.4006%" height="15" fill="rgb(215,37,27)" fg:x="884" fg:w="5"/><text x="71.0833%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="70.9135%" y="197" width="0.3205%" height="15" fill="rgb(232,65,3)" fg:x="885" fg:w="4"/><text x="71.1635%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.9936%" y="181" width="0.2404%" height="15" fill="rgb(214,2,16)" fg:x="886" fg:w="3"/><text x="71.2436%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.0737%" y="165" width="0.1603%" height="15" fill="rgb(227,131,50)" fg:x="887" fg:w="2"/><text x="71.3237%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.1538%" y="149" width="0.0801%" height="15" fill="rgb(247,131,45)" fg:x="888" fg:w="1"/><text x="71.4038%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (35 samples, 2.80%)</title><rect x="68.5096%" y="325" width="2.8045%" height="15" fill="rgb(215,97,47)" fg:x="855" fg:w="35"/><text x="68.7596%" y="335.50">&lt;k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (22 samples, 1.76%)</title><rect x="69.5513%" y="309" width="1.7628%" height="15" fill="rgb(233,143,12)" fg:x="868" fg:w="22"/><text x="69.8013%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (22 samples, 1.76%)</title><rect x="69.5513%" y="293" width="1.7628%" height="15" fill="rgb(222,57,17)" fg:x="868" fg:w="22"/><text x="69.8013%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.2340%" y="277" width="0.0801%" height="15" fill="rgb(214,119,38)" fg:x="889" fg:w="1"/><text x="71.4840%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.2340%" y="261" width="0.0801%" height="15" fill="rgb(217,28,47)" fg:x="889" fg:w="1"/><text x="71.4840%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.2340%" y="245" width="0.0801%" height="15" fill="rgb(231,14,52)" fg:x="889" fg:w="1"/><text x="71.4840%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.3141%" y="293" width="0.0801%" height="15" fill="rgb(220,158,18)" fg:x="890" fg:w="1"/><text x="71.5641%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.3141%" y="277" width="0.0801%" height="15" fill="rgb(222,143,46)" fg:x="890" fg:w="1"/><text x="71.5641%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="71.3141%" y="325" width="0.4006%" height="15" fill="rgb(227,165,5)" fg:x="890" fg:w="5"/><text x="71.5641%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="71.3141%" y="309" width="0.4006%" height="15" fill="rgb(216,222,49)" fg:x="890" fg:w="5"/><text x="71.5641%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="71.3942%" y="293" width="0.3205%" height="15" fill="rgb(238,73,39)" fg:x="891" fg:w="4"/><text x="71.6442%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="71.3942%" y="277" width="0.3205%" height="15" fill="rgb(252,115,9)" fg:x="891" fg:w="4"/><text x="71.6442%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="71.4744%" y="261" width="0.2404%" height="15" fill="rgb(238,202,4)" fg:x="892" fg:w="3"/><text x="71.7244%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="71.4744%" y="245" width="0.2404%" height="15" fill="rgb(252,153,44)" fg:x="892" fg:w="3"/><text x="71.7244%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.5545%" y="229" width="0.1603%" height="15" fill="rgb(235,128,27)" fg:x="893" fg:w="2"/><text x="71.8045%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.5545%" y="213" width="0.1603%" height="15" fill="rgb(221,121,47)" fg:x="893" fg:w="2"/><text x="71.8045%" y="223.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (65 samples, 5.21%)</title><rect x="67.7885%" y="341" width="5.2083%" height="15" fill="rgb(247,211,47)" fg:x="846" fg:w="65"/><text x="68.0385%" y="351.50">engine..</text></g><g><title>engine::session::internal::EntityMap::add_entity (16 samples, 1.28%)</title><rect x="71.7147%" y="325" width="1.2821%" height="15" fill="rgb(252,47,49)" fg:x="895" fg:w="16"/><text x="71.9647%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 1.28%)</title><rect x="71.7147%" y="309" width="1.2821%" height="15" fill="rgb(219,119,53)" fg:x="895" fg:w="16"/><text x="71.9647%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (16 samples, 1.28%)</title><rect x="71.7147%" y="293" width="1.2821%" height="15" fill="rgb(243,165,53)" fg:x="895" fg:w="16"/><text x="71.9647%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 1.28%)</title><rect x="71.7147%" y="277" width="1.2821%" height="15" fill="rgb(230,12,35)" fg:x="895" fg:w="16"/><text x="71.9647%" y="287.50"></text></g><g><title>__libc_malloc (16 samples, 1.28%)</title><rect x="71.7147%" y="261" width="1.2821%" height="15" fill="rgb(239,57,49)" fg:x="895" fg:w="16"/><text x="71.9647%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (70 samples, 5.61%)</title><rect x="67.5481%" y="357" width="5.6090%" height="15" fill="rgb(231,154,7)" fg:x="843" fg:w="70"/><text x="67.7981%" y="367.50">&lt;engine..</text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="72.9968%" y="341" width="0.1603%" height="15" fill="rgb(248,81,34)" fg:x="911" fg:w="2"/><text x="73.2468%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (73 samples, 5.85%)</title><rect x="67.3878%" y="437" width="5.8494%" height="15" fill="rgb(247,9,5)" fg:x="841" fg:w="73"/><text x="67.6378%" y="447.50">&lt;plugin..</text></g><g><title>core::iter::adapters::try_process (72 samples, 5.77%)</title><rect x="67.4679%" y="421" width="5.7692%" height="15" fill="rgb(228,172,27)" fg:x="842" fg:w="72"/><text x="67.7179%" y="431.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (72 samples, 5.77%)</title><rect x="67.4679%" y="405" width="5.7692%" height="15" fill="rgb(230,57,44)" fg:x="842" fg:w="72"/><text x="67.7179%" y="415.50">&lt;alloc:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (72 samples, 5.77%)</title><rect x="67.4679%" y="389" width="5.7692%" height="15" fill="rgb(249,35,22)" fg:x="842" fg:w="72"/><text x="67.7179%" y="399.50">&lt;core::..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (71 samples, 5.69%)</title><rect x="67.5481%" y="373" width="5.6891%" height="15" fill="rgb(250,137,27)" fg:x="843" fg:w="71"/><text x="67.7981%" y="383.50">&lt;engine..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="73.1571%" y="357" width="0.0801%" height="15" fill="rgb(251,57,31)" fg:x="913" fg:w="1"/><text x="73.4071%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1571%" y="341" width="0.0801%" height="15" fill="rgb(238,60,0)" fg:x="913" fg:w="1"/><text x="73.4071%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1571%" y="325" width="0.0801%" height="15" fill="rgb(242,185,39)" fg:x="913" fg:w="1"/><text x="73.4071%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.1571%" y="309" width="0.0801%" height="15" fill="rgb(240,63,43)" fg:x="913" fg:w="1"/><text x="73.4071%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.1571%" y="293" width="0.0801%" height="15" fill="rgb(236,155,6)" fg:x="913" fg:w="1"/><text x="73.4071%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.1571%" y="277" width="0.0801%" height="15" fill="rgb(215,11,29)" fg:x="913" fg:w="1"/><text x="73.4071%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1571%" y="261" width="0.0801%" height="15" fill="rgb(228,180,48)" fg:x="913" fg:w="1"/><text x="73.4071%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1571%" y="245" width="0.0801%" height="15" fill="rgb(241,102,12)" fg:x="913" fg:w="1"/><text x="73.4071%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.1571%" y="229" width="0.0801%" height="15" fill="rgb(246,213,4)" fg:x="913" fg:w="1"/><text x="73.4071%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.1571%" y="213" width="0.0801%" height="15" fill="rgb(218,134,35)" fg:x="913" fg:w="1"/><text x="73.4071%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.1571%" y="197" width="0.0801%" height="15" fill="rgb(251,117,35)" fg:x="913" fg:w="1"/><text x="73.4071%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.1571%" y="181" width="0.0801%" height="15" fill="rgb(206,156,45)" fg:x="913" fg:w="1"/><text x="73.4071%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1571%" y="165" width="0.0801%" height="15" fill="rgb(218,52,27)" fg:x="913" fg:w="1"/><text x="73.4071%" y="175.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="73.2372%" y="437" width="0.0801%" height="15" fill="rgb(238,83,36)" fg:x="914" fg:w="1"/><text x="73.4872%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.3974%" y="405" width="0.0801%" height="15" fill="rgb(218,53,43)" fg:x="916" fg:w="1"/><text x="73.6474%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.3974%" y="389" width="0.0801%" height="15" fill="rgb(239,54,39)" fg:x="916" fg:w="1"/><text x="73.6474%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.4776%" y="357" width="0.0801%" height="15" fill="rgb(212,198,13)" fg:x="917" fg:w="1"/><text x="73.7276%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.6378%" y="325" width="0.0801%" height="15" fill="rgb(234,54,46)" fg:x="919" fg:w="1"/><text x="73.8878%" y="335.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (151 samples, 12.10%)</title><rect x="61.6987%" y="501" width="12.0994%" height="15" fill="rgb(217,120,7)" fg:x="770" fg:w="151"/><text x="61.9487%" y="511.50">&lt;plugins_core::loo..</text></g><g><title>plugins_core::looking::model::new_area_observation (149 samples, 11.94%)</title><rect x="61.8590%" y="485" width="11.9391%" height="15" fill="rgb(246,39,15)" fg:x="772" fg:w="149"/><text x="62.1090%" y="495.50">plugins_core::look..</text></g><g><title>kernel::model::entry::Entry::scope (88 samples, 7.05%)</title><rect x="66.7468%" y="469" width="7.0513%" height="15" fill="rgb(242,143,31)" fg:x="833" fg:w="88"/><text x="66.9968%" y="479.50">kernel::m..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (88 samples, 7.05%)</title><rect x="66.7468%" y="453" width="7.0513%" height="15" fill="rgb(252,60,24)" fg:x="833" fg:w="88"/><text x="66.9968%" y="463.50">kernel::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="73.3173%" y="437" width="0.4808%" height="15" fill="rgb(249,220,7)" fg:x="915" fg:w="6"/><text x="73.5673%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="73.3173%" y="421" width="0.4808%" height="15" fill="rgb(236,67,13)" fg:x="915" fg:w="6"/><text x="73.5673%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="73.4776%" y="405" width="0.3205%" height="15" fill="rgb(210,62,39)" fg:x="917" fg:w="4"/><text x="73.7276%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="73.4776%" y="389" width="0.3205%" height="15" fill="rgb(219,122,53)" fg:x="917" fg:w="4"/><text x="73.7276%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="73.4776%" y="373" width="0.3205%" height="15" fill="rgb(218,87,25)" fg:x="917" fg:w="4"/><text x="73.7276%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="73.5577%" y="357" width="0.2404%" height="15" fill="rgb(234,179,48)" fg:x="918" fg:w="3"/><text x="73.8077%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="73.5577%" y="341" width="0.2404%" height="15" fill="rgb(248,90,0)" fg:x="918" fg:w="3"/><text x="73.8077%" y="351.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="73.7179%" y="325" width="0.0801%" height="15" fill="rgb(207,228,37)" fg:x="920" fg:w="1"/><text x="73.9679%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (187 samples, 14.98%)</title><rect x="58.8942%" y="677" width="14.9840%" height="15" fill="rgb(235,214,15)" fg:x="735" fg:w="187"/><text x="59.1442%" y="687.50">&lt;engine::session::Sessi..</text></g><g><title>kernel::plugins::mw::apply_middleware (187 samples, 14.98%)</title><rect x="58.8942%" y="661" width="14.9840%" height="15" fill="rgb(210,144,39)" fg:x="735" fg:w="187"/><text x="59.1442%" y="671.50">kernel::plugins::mw::ap..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (187 samples, 14.98%)</title><rect x="58.8942%" y="645" width="14.9840%" height="15" fill="rgb(222,67,41)" fg:x="735" fg:w="187"/><text x="59.1442%" y="655.50">kernel::plugins::mw::Mi..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (187 samples, 14.98%)</title><rect x="58.8942%" y="629" width="14.9840%" height="15" fill="rgb(205,35,37)" fg:x="735" fg:w="187"/><text x="59.1442%" y="639.50">&lt;engine::session::Expan..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (154 samples, 12.34%)</title><rect x="61.5385%" y="613" width="12.3397%" height="15" fill="rgb(216,125,40)" fg:x="768" fg:w="154"/><text x="61.7885%" y="623.50">kernel::plugins::m..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (154 samples, 12.34%)</title><rect x="61.5385%" y="597" width="12.3397%" height="15" fill="rgb(228,227,20)" fg:x="768" fg:w="154"/><text x="61.7885%" y="607.50">&lt;plugins_dynlib::D..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (153 samples, 12.26%)</title><rect x="61.6186%" y="581" width="12.2596%" height="15" fill="rgb(242,173,45)" fg:x="769" fg:w="153"/><text x="61.8686%" y="591.50">kernel::plugins::m..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (153 samples, 12.26%)</title><rect x="61.6186%" y="565" width="12.2596%" height="15" fill="rgb(215,79,24)" fg:x="769" fg:w="153"/><text x="61.8686%" y="575.50">core::ops::functio..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (152 samples, 12.18%)</title><rect x="61.6987%" y="549" width="12.1795%" height="15" fill="rgb(238,164,38)" fg:x="770" fg:w="152"/><text x="61.9487%" y="559.50">kernel::plugins::m..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (152 samples, 12.18%)</title><rect x="61.6987%" y="533" width="12.1795%" height="15" fill="rgb(245,196,38)" fg:x="770" fg:w="152"/><text x="61.9487%" y="543.50">core::ops::functio..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (152 samples, 12.18%)</title><rect x="61.6987%" y="517" width="12.1795%" height="15" fill="rgb(231,217,29)" fg:x="770" fg:w="152"/><text x="61.9487%" y="527.50">&lt;engine::session::..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.7981%" y="501" width="0.0801%" height="15" fill="rgb(245,6,4)" fg:x="921" fg:w="1"/><text x="74.0481%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.1186%" y="629" width="0.0801%" height="15" fill="rgb(214,76,49)" fg:x="925" fg:w="1"/><text x="74.3686%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.1186%" y="613" width="0.0801%" height="15" fill="rgb(205,96,12)" fg:x="925" fg:w="1"/><text x="74.3686%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.1186%" y="597" width="0.0801%" height="15" fill="rgb(243,131,4)" fg:x="925" fg:w="1"/><text x="74.3686%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.1186%" y="581" width="0.0801%" height="15" fill="rgb(214,114,4)" fg:x="925" fg:w="1"/><text x="74.3686%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.1186%" y="565" width="0.0801%" height="15" fill="rgb(234,215,15)" fg:x="925" fg:w="1"/><text x="74.3686%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.1186%" y="549" width="0.0801%" height="15" fill="rgb(250,216,45)" fg:x="925" fg:w="1"/><text x="74.3686%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.1186%" y="533" width="0.0801%" height="15" fill="rgb(236,128,4)" fg:x="925" fg:w="1"/><text x="74.3686%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.1186%" y="517" width="0.0801%" height="15" fill="rgb(234,50,33)" fg:x="925" fg:w="1"/><text x="74.3686%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.1186%" y="501" width="0.0801%" height="15" fill="rgb(253,131,37)" fg:x="925" fg:w="1"/><text x="74.3686%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.1186%" y="485" width="0.0801%" height="15" fill="rgb(218,55,27)" fg:x="925" fg:w="1"/><text x="74.3686%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.1186%" y="469" width="0.0801%" height="15" fill="rgb(241,220,28)" fg:x="925" fg:w="1"/><text x="74.3686%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.1186%" y="453" width="0.0801%" height="15" fill="rgb(241,90,48)" fg:x="925" fg:w="1"/><text x="74.3686%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.1186%" y="437" width="0.0801%" height="15" fill="rgb(216,43,37)" fg:x="925" fg:w="1"/><text x="74.3686%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.2788%" y="533" width="0.0801%" height="15" fill="rgb(207,173,9)" fg:x="927" fg:w="1"/><text x="74.5288%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="74.1987%" y="565" width="0.2404%" height="15" fill="rgb(240,126,30)" fg:x="926" fg:w="3"/><text x="74.4487%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="74.1987%" y="549" width="0.2404%" height="15" fill="rgb(228,178,53)" fg:x="926" fg:w="3"/><text x="74.4487%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3590%" y="533" width="0.0801%" height="15" fill="rgb(217,33,4)" fg:x="928" fg:w="1"/><text x="74.6090%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="74.1987%" y="597" width="0.3205%" height="15" fill="rgb(206,124,34)" fg:x="926" fg:w="4"/><text x="74.4487%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="74.1987%" y="581" width="0.3205%" height="15" fill="rgb(208,122,53)" fg:x="926" fg:w="4"/><text x="74.4487%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.4391%" y="565" width="0.0801%" height="15" fill="rgb(215,202,26)" fg:x="929" fg:w="1"/><text x="74.6891%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4391%" y="549" width="0.0801%" height="15" fill="rgb(232,198,31)" fg:x="929" fg:w="1"/><text x="74.6891%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.4391%" y="533" width="0.0801%" height="15" fill="rgb(222,23,35)" fg:x="929" fg:w="1"/><text x="74.6891%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4391%" y="517" width="0.0801%" height="15" fill="rgb(242,27,53)" fg:x="929" fg:w="1"/><text x="74.6891%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.4391%" y="501" width="0.0801%" height="15" fill="rgb(210,216,42)" fg:x="929" fg:w="1"/><text x="74.6891%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4391%" y="485" width="0.0801%" height="15" fill="rgb(234,39,38)" fg:x="929" fg:w="1"/><text x="74.6891%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="74.1987%" y="629" width="0.4808%" height="15" fill="rgb(235,126,54)" fg:x="926" fg:w="6"/><text x="74.4487%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="74.1987%" y="613" width="0.4808%" height="15" fill="rgb(235,150,33)" fg:x="926" fg:w="6"/><text x="74.4487%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="74.5192%" y="597" width="0.1603%" height="15" fill="rgb(249,49,53)" fg:x="930" fg:w="2"/><text x="74.7692%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.5192%" y="581" width="0.1603%" height="15" fill="rgb(238,60,50)" fg:x="930" fg:w="2"/><text x="74.7692%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.5192%" y="565" width="0.1603%" height="15" fill="rgb(210,5,2)" fg:x="930" fg:w="2"/><text x="74.7692%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.5192%" y="549" width="0.1603%" height="15" fill="rgb(214,207,24)" fg:x="930" fg:w="2"/><text x="74.7692%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.5994%" y="533" width="0.0801%" height="15" fill="rgb(228,173,2)" fg:x="931" fg:w="1"/><text x="74.8494%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5994%" y="517" width="0.0801%" height="15" fill="rgb(244,26,8)" fg:x="931" fg:w="1"/><text x="74.8494%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5994%" y="501" width="0.0801%" height="15" fill="rgb(249,153,35)" fg:x="931" fg:w="1"/><text x="74.8494%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5994%" y="485" width="0.0801%" height="15" fill="rgb(221,215,40)" fg:x="931" fg:w="1"/><text x="74.8494%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="74.7596%" y="565" width="0.2404%" height="15" fill="rgb(238,106,35)" fg:x="933" fg:w="3"/><text x="75.0096%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.8397%" y="549" width="0.1603%" height="15" fill="rgb(207,195,21)" fg:x="934" fg:w="2"/><text x="75.0897%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.0000%" y="565" width="0.1603%" height="15" fill="rgb(205,43,29)" fg:x="936" fg:w="2"/><text x="75.2500%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.0801%" y="549" width="0.0801%" height="15" fill="rgb(236,35,21)" fg:x="937" fg:w="1"/><text x="75.3301%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.3205%" y="517" width="0.0801%" height="15" fill="rgb(244,74,8)" fg:x="940" fg:w="1"/><text x="75.5705%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4006%" y="517" width="0.0801%" height="15" fill="rgb(241,229,7)" fg:x="941" fg:w="1"/><text x="75.6506%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="75.3205%" y="533" width="0.2404%" height="15" fill="rgb(212,223,25)" fg:x="940" fg:w="3"/><text x="75.5705%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="75.4808%" y="517" width="0.0801%" height="15" fill="rgb(234,58,53)" fg:x="942" fg:w="1"/><text x="75.7308%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="75.4808%" y="501" width="0.0801%" height="15" fill="rgb(244,36,1)" fg:x="942" fg:w="1"/><text x="75.7308%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.5609%" y="501" width="0.0801%" height="15" fill="rgb(222,40,54)" fg:x="943" fg:w="1"/><text x="75.8109%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.7212%" y="469" width="0.0801%" height="15" fill="rgb(210,207,39)" fg:x="945" fg:w="1"/><text x="75.9712%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.7212%" y="453" width="0.0801%" height="15" fill="rgb(234,52,14)" fg:x="945" fg:w="1"/><text x="75.9712%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.8013%" y="469" width="0.0801%" height="15" fill="rgb(239,108,46)" fg:x="946" fg:w="1"/><text x="76.0513%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.8013%" y="453" width="0.0801%" height="15" fill="rgb(252,223,5)" fg:x="946" fg:w="1"/><text x="76.0513%" y="463.50"></text></g><g><title>serde_json::de::from_trait (17 samples, 1.36%)</title><rect x="74.6795%" y="613" width="1.3622%" height="15" fill="rgb(227,181,11)" fg:x="932" fg:w="17"/><text x="74.9295%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17 samples, 1.36%)</title><rect x="74.6795%" y="597" width="1.3622%" height="15" fill="rgb(248,126,40)" fg:x="932" fg:w="17"/><text x="74.9295%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.36%)</title><rect x="74.6795%" y="581" width="1.3622%" height="15" fill="rgb(243,1,18)" fg:x="932" fg:w="17"/><text x="74.9295%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="75.1603%" y="565" width="0.8814%" height="15" fill="rgb(214,145,23)" fg:x="938" fg:w="11"/><text x="75.4103%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="75.1603%" y="549" width="0.8814%" height="15" fill="rgb(241,218,11)" fg:x="938" fg:w="11"/><text x="75.4103%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="75.5609%" y="533" width="0.4808%" height="15" fill="rgb(214,219,24)" fg:x="943" fg:w="6"/><text x="75.8109%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="75.5609%" y="517" width="0.4808%" height="15" fill="rgb(235,32,7)" fg:x="943" fg:w="6"/><text x="75.8109%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="75.6410%" y="501" width="0.4006%" height="15" fill="rgb(227,121,28)" fg:x="944" fg:w="5"/><text x="75.8910%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="75.7212%" y="485" width="0.3205%" height="15" fill="rgb(216,129,49)" fg:x="945" fg:w="4"/><text x="75.9712%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.8814%" y="469" width="0.1603%" height="15" fill="rgb(207,194,50)" fg:x="947" fg:w="2"/><text x="76.1314%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.9615%" y="453" width="0.0801%" height="15" fill="rgb(207,4,18)" fg:x="948" fg:w="1"/><text x="76.2115%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.9615%" y="437" width="0.0801%" height="15" fill="rgb(213,50,30)" fg:x="948" fg:w="1"/><text x="76.2115%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9615%" y="421" width="0.0801%" height="15" fill="rgb(208,77,22)" fg:x="948" fg:w="1"/><text x="76.2115%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1218%" y="581" width="0.0801%" height="15" fill="rgb(244,204,34)" fg:x="950" fg:w="1"/><text x="76.3718%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.2019%" y="549" width="0.0801%" height="15" fill="rgb(230,20,17)" fg:x="951" fg:w="1"/><text x="76.4519%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2821%" y="549" width="0.0801%" height="15" fill="rgb(237,83,15)" fg:x="952" fg:w="1"/><text x="76.5321%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.2821%" y="533" width="0.0801%" height="15" fill="rgb(221,109,25)" fg:x="952" fg:w="1"/><text x="76.5321%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="76.4423%" y="501" width="0.2404%" height="15" fill="rgb(205,194,52)" fg:x="954" fg:w="3"/><text x="76.6923%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.4423%" y="485" width="0.2404%" height="15" fill="rgb(244,173,54)" fg:x="954" fg:w="3"/><text x="76.6923%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="76.5224%" y="469" width="0.1603%" height="15" fill="rgb(227,181,18)" fg:x="955" fg:w="2"/><text x="76.7724%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.6026%" y="453" width="0.0801%" height="15" fill="rgb(238,36,30)" fg:x="956" fg:w="1"/><text x="76.8526%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.6026%" y="437" width="0.0801%" height="15" fill="rgb(254,85,0)" fg:x="956" fg:w="1"/><text x="76.8526%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="76.6026%" y="421" width="0.0801%" height="15" fill="rgb(247,63,33)" fg:x="956" fg:w="1"/><text x="76.8526%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.6026%" y="405" width="0.0801%" height="15" fill="rgb(220,7,54)" fg:x="956" fg:w="1"/><text x="76.8526%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6026%" y="389" width="0.0801%" height="15" fill="rgb(238,227,21)" fg:x="956" fg:w="1"/><text x="76.8526%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="76.6827%" y="485" width="0.2404%" height="15" fill="rgb(237,29,31)" fg:x="957" fg:w="3"/><text x="76.9327%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="76.6827%" y="469" width="0.2404%" height="15" fill="rgb(211,21,50)" fg:x="957" fg:w="3"/><text x="76.9327%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.6827%" y="453" width="0.2404%" height="15" fill="rgb(239,119,2)" fg:x="957" fg:w="3"/><text x="76.9327%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="76.7628%" y="437" width="0.1603%" height="15" fill="rgb(250,2,39)" fg:x="958" fg:w="2"/><text x="77.0128%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.7628%" y="421" width="0.1603%" height="15" fill="rgb(244,46,53)" fg:x="958" fg:w="2"/><text x="77.0128%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8429%" y="405" width="0.0801%" height="15" fill="rgb(209,21,19)" fg:x="959" fg:w="1"/><text x="77.0929%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="76.4423%" y="533" width="0.5609%" height="15" fill="rgb(236,145,4)" fg:x="954" fg:w="7"/><text x="76.6923%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="76.4423%" y="517" width="0.5609%" height="15" fill="rgb(220,133,36)" fg:x="954" fg:w="7"/><text x="76.6923%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (4 samples, 0.32%)</title><rect x="76.6827%" y="501" width="0.3205%" height="15" fill="rgb(244,18,3)" fg:x="957" fg:w="4"/><text x="76.9327%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="76.9231%" y="485" width="0.0801%" height="15" fill="rgb(232,171,48)" fg:x="960" fg:w="1"/><text x="77.1731%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9231%" y="469" width="0.0801%" height="15" fill="rgb(223,223,53)" fg:x="960" fg:w="1"/><text x="77.1731%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (6 samples, 0.48%)</title><rect x="77.0032%" y="533" width="0.4808%" height="15" fill="rgb(246,92,13)" fg:x="961" fg:w="6"/><text x="77.2532%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="77.0032%" y="517" width="0.4808%" height="15" fill="rgb(229,171,10)" fg:x="961" fg:w="6"/><text x="77.2532%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (6 samples, 0.48%)</title><rect x="77.0032%" y="501" width="0.4808%" height="15" fill="rgb(213,131,26)" fg:x="961" fg:w="6"/><text x="77.2532%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (5 samples, 0.40%)</title><rect x="77.0833%" y="485" width="0.4006%" height="15" fill="rgb(242,87,54)" fg:x="962" fg:w="5"/><text x="77.3333%" y="495.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="77.1635%" y="469" width="0.3205%" height="15" fill="rgb(237,21,35)" fg:x="963" fg:w="4"/><text x="77.4135%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="77.5641%" y="485" width="0.0801%" height="15" fill="rgb(253,13,47)" fg:x="968" fg:w="1"/><text x="77.8141%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="77.5641%" y="469" width="0.0801%" height="15" fill="rgb(215,122,49)" fg:x="968" fg:w="1"/><text x="77.8141%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.5641%" y="453" width="0.0801%" height="15" fill="rgb(209,179,30)" fg:x="968" fg:w="1"/><text x="77.8141%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.5641%" y="437" width="0.0801%" height="15" fill="rgb(235,100,24)" fg:x="968" fg:w="1"/><text x="77.8141%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="77.6442%" y="437" width="0.0801%" height="15" fill="rgb(209,67,24)" fg:x="969" fg:w="1"/><text x="77.8942%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="77.6442%" y="421" width="0.0801%" height="15" fill="rgb(206,74,32)" fg:x="969" fg:w="1"/><text x="77.8942%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (20 samples, 1.60%)</title><rect x="76.2019%" y="581" width="1.6026%" height="15" fill="rgb(212,45,25)" fg:x="951" fg:w="20"/><text x="76.4519%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (20 samples, 1.60%)</title><rect x="76.2019%" y="565" width="1.6026%" height="15" fill="rgb(239,26,3)" fg:x="951" fg:w="20"/><text x="76.4519%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (18 samples, 1.44%)</title><rect x="76.3622%" y="549" width="1.4423%" height="15" fill="rgb(218,36,15)" fg:x="953" fg:w="18"/><text x="76.6122%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="77.4840%" y="533" width="0.3205%" height="15" fill="rgb(206,108,24)" fg:x="967" fg:w="4"/><text x="77.7340%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="77.4840%" y="517" width="0.3205%" height="15" fill="rgb(234,204,42)" fg:x="967" fg:w="4"/><text x="77.7340%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="77.5641%" y="501" width="0.2404%" height="15" fill="rgb(229,2,11)" fg:x="968" fg:w="3"/><text x="77.8141%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.6442%" y="485" width="0.1603%" height="15" fill="rgb(221,20,48)" fg:x="969" fg:w="2"/><text x="77.8942%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.6442%" y="469" width="0.1603%" height="15" fill="rgb(244,164,10)" fg:x="969" fg:w="2"/><text x="77.8942%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="77.6442%" y="453" width="0.1603%" height="15" fill="rgb(243,229,2)" fg:x="969" fg:w="2"/><text x="77.8942%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7244%" y="437" width="0.0801%" height="15" fill="rgb(232,131,37)" fg:x="970" fg:w="1"/><text x="77.9744%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.7244%" y="421" width="0.0801%" height="15" fill="rgb(217,156,11)" fg:x="970" fg:w="1"/><text x="77.9744%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (41 samples, 3.29%)</title><rect x="74.6795%" y="629" width="3.2853%" height="15" fill="rgb(239,99,48)" fg:x="932" fg:w="41"/><text x="74.9295%" y="639.50">&lt;ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (24 samples, 1.92%)</title><rect x="76.0417%" y="613" width="1.9231%" height="15" fill="rgb(231,209,9)" fg:x="949" fg:w="24"/><text x="76.2917%" y="623.50">s..</text></g><g><title>serde_json::value::de::visit_object (24 samples, 1.92%)</title><rect x="76.0417%" y="597" width="1.9231%" height="15" fill="rgb(254,97,27)" fg:x="949" fg:w="24"/><text x="76.2917%" y="607.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.8045%" y="581" width="0.1603%" height="15" fill="rgb(223,151,38)" fg:x="971" fg:w="2"/><text x="78.0545%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.8045%" y="565" width="0.1603%" height="15" fill="rgb(219,206,35)" fg:x="971" fg:w="2"/><text x="78.0545%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.8846%" y="549" width="0.0801%" height="15" fill="rgb(216,130,31)" fg:x="972" fg:w="1"/><text x="78.1346%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.8846%" y="533" width="0.0801%" height="15" fill="rgb(251,97,34)" fg:x="972" fg:w="1"/><text x="78.1346%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="77.9647%" y="629" width="0.2404%" height="15" fill="rgb(246,159,47)" fg:x="973" fg:w="3"/><text x="78.2147%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.0449%" y="613" width="0.1603%" height="15" fill="rgb(232,87,10)" fg:x="974" fg:w="2"/><text x="78.2949%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.1250%" y="597" width="0.0801%" height="15" fill="rgb(249,1,37)" fg:x="975" fg:w="1"/><text x="78.3750%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.1250%" y="581" width="0.0801%" height="15" fill="rgb(239,135,14)" fg:x="975" fg:w="1"/><text x="78.3750%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (55 samples, 4.41%)</title><rect x="73.8782%" y="645" width="4.4071%" height="15" fill="rgb(253,116,46)" fg:x="922" fg:w="55"/><text x="74.1282%" y="655.50">engin..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="78.2051%" y="629" width="0.0801%" height="15" fill="rgb(222,217,37)" fg:x="976" fg:w="1"/><text x="78.4551%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (56 samples, 4.49%)</title><rect x="73.8782%" y="661" width="4.4872%" height="15" fill="rgb(252,96,8)" fg:x="922" fg:w="56"/><text x="74.1282%" y="671.50">&lt;engi..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="78.2853%" y="645" width="0.0801%" height="15" fill="rgb(254,103,41)" fg:x="977" fg:w="1"/><text x="78.5353%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.2853%" y="629" width="0.0801%" height="15" fill="rgb(218,213,19)" fg:x="977" fg:w="1"/><text x="78.5353%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.3654%" y="501" width="0.0801%" height="15" fill="rgb(253,95,21)" fg:x="978" fg:w="1"/><text x="78.6154%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.3654%" y="485" width="0.0801%" height="15" fill="rgb(229,26,28)" fg:x="978" fg:w="1"/><text x="78.6154%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.3654%" y="469" width="0.0801%" height="15" fill="rgb(230,129,16)" fg:x="978" fg:w="1"/><text x="78.6154%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.3654%" y="453" width="0.0801%" height="15" fill="rgb(236,126,17)" fg:x="978" fg:w="1"/><text x="78.6154%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.3654%" y="437" width="0.0801%" height="15" fill="rgb(209,33,33)" fg:x="978" fg:w="1"/><text x="78.6154%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.3654%" y="421" width="0.0801%" height="15" fill="rgb(227,85,29)" fg:x="978" fg:w="1"/><text x="78.6154%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.3654%" y="405" width="0.0801%" height="15" fill="rgb(241,53,46)" fg:x="978" fg:w="1"/><text x="78.6154%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.3654%" y="389" width="0.0801%" height="15" fill="rgb(228,167,53)" fg:x="978" fg:w="1"/><text x="78.6154%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.3654%" y="373" width="0.0801%" height="15" fill="rgb(238,195,45)" fg:x="978" fg:w="1"/><text x="78.6154%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.3654%" y="357" width="0.0801%" height="15" fill="rgb(252,124,45)" fg:x="978" fg:w="1"/><text x="78.6154%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.3654%" y="341" width="0.0801%" height="15" fill="rgb(251,38,35)" fg:x="978" fg:w="1"/><text x="78.6154%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.3654%" y="325" width="0.0801%" height="15" fill="rgb(227,33,2)" fg:x="978" fg:w="1"/><text x="78.6154%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (58 samples, 4.65%)</title><rect x="73.8782%" y="677" width="4.6474%" height="15" fill="rgb(223,157,46)" fg:x="922" fg:w="58"/><text x="74.1282%" y="687.50">&lt;engi..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="78.3654%" y="661" width="0.1603%" height="15" fill="rgb(222,78,41)" fg:x="978" fg:w="2"/><text x="78.6154%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="78.3654%" y="645" width="0.1603%" height="15" fill="rgb(248,176,11)" fg:x="978" fg:w="2"/><text x="78.6154%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="78.3654%" y="629" width="0.1603%" height="15" fill="rgb(241,221,18)" fg:x="978" fg:w="2"/><text x="78.6154%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.3654%" y="613" width="0.1603%" height="15" fill="rgb(218,85,22)" fg:x="978" fg:w="2"/><text x="78.6154%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.3654%" y="597" width="0.1603%" height="15" fill="rgb(222,223,7)" fg:x="978" fg:w="2"/><text x="78.6154%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="78.3654%" y="581" width="0.1603%" height="15" fill="rgb(254,59,39)" fg:x="978" fg:w="2"/><text x="78.6154%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="78.3654%" y="565" width="0.1603%" height="15" fill="rgb(247,100,27)" fg:x="978" fg:w="2"/><text x="78.6154%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.3654%" y="549" width="0.1603%" height="15" fill="rgb(237,207,10)" fg:x="978" fg:w="2"/><text x="78.6154%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.3654%" y="533" width="0.1603%" height="15" fill="rgb(220,121,28)" fg:x="978" fg:w="2"/><text x="78.6154%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="78.3654%" y="517" width="0.1603%" height="15" fill="rgb(213,223,20)" fg:x="978" fg:w="2"/><text x="78.6154%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.4455%" y="501" width="0.0801%" height="15" fill="rgb(205,121,27)" fg:x="979" fg:w="1"/><text x="78.6955%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.4455%" y="485" width="0.0801%" height="15" fill="rgb(253,24,53)" fg:x="979" fg:w="1"/><text x="78.6955%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.4455%" y="469" width="0.0801%" height="15" fill="rgb(224,224,47)" fg:x="979" fg:w="1"/><text x="78.6955%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="78.4455%" y="453" width="0.0801%" height="15" fill="rgb(250,125,36)" fg:x="979" fg:w="1"/><text x="78.6955%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.4455%" y="437" width="0.0801%" height="15" fill="rgb(240,144,38)" fg:x="979" fg:w="1"/><text x="78.6955%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.4455%" y="421" width="0.0801%" height="15" fill="rgb(250,15,50)" fg:x="979" fg:w="1"/><text x="78.6955%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.4455%" y="405" width="0.0801%" height="15" fill="rgb(210,24,26)" fg:x="979" fg:w="1"/><text x="78.6955%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="78.4455%" y="389" width="0.0801%" height="15" fill="rgb(234,53,53)" fg:x="979" fg:w="1"/><text x="78.6955%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="78.4455%" y="373" width="0.0801%" height="15" fill="rgb(208,108,28)" fg:x="979" fg:w="1"/><text x="78.6955%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4455%" y="357" width="0.0801%" height="15" fill="rgb(227,143,7)" fg:x="979" fg:w="1"/><text x="78.6955%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4455%" y="341" width="0.0801%" height="15" fill="rgb(238,189,38)" fg:x="979" fg:w="1"/><text x="78.6955%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.4455%" y="325" width="0.0801%" height="15" fill="rgb(222,69,15)" fg:x="979" fg:w="1"/><text x="78.6955%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.4455%" y="309" width="0.0801%" height="15" fill="rgb(213,169,7)" fg:x="979" fg:w="1"/><text x="78.6955%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.4455%" y="293" width="0.0801%" height="15" fill="rgb(251,219,4)" fg:x="979" fg:w="1"/><text x="78.6955%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.4455%" y="277" width="0.0801%" height="15" fill="rgb(241,55,40)" fg:x="979" fg:w="1"/><text x="78.6955%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.4455%" y="261" width="0.0801%" height="15" fill="rgb(243,57,30)" fg:x="979" fg:w="1"/><text x="78.6955%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.4455%" y="245" width="0.0801%" height="15" fill="rgb(234,50,30)" fg:x="979" fg:w="1"/><text x="78.6955%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.4455%" y="229" width="0.0801%" height="15" fill="rgb(239,23,42)" fg:x="979" fg:w="1"/><text x="78.6955%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="78.4455%" y="213" width="0.0801%" height="15" fill="rgb(217,38,19)" fg:x="979" fg:w="1"/><text x="78.6955%" y="223.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.5256%" y="677" width="0.0801%" height="15" fill="rgb(215,179,16)" fg:x="980" fg:w="1"/><text x="78.7756%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="78.5256%" y="661" width="0.0801%" height="15" fill="rgb(254,21,37)" fg:x="980" fg:w="1"/><text x="78.7756%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.6058%" y="661" width="0.0801%" height="15" fill="rgb(219,207,48)" fg:x="981" fg:w="1"/><text x="78.8558%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.6058%" y="645" width="0.0801%" height="15" fill="rgb(227,225,41)" fg:x="981" fg:w="1"/><text x="78.8558%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.6058%" y="629" width="0.0801%" height="15" fill="rgb(223,130,1)" fg:x="981" fg:w="1"/><text x="78.8558%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.6058%" y="613" width="0.0801%" height="15" fill="rgb(249,54,42)" fg:x="981" fg:w="1"/><text x="78.8558%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.6058%" y="597" width="0.0801%" height="15" fill="rgb(248,69,25)" fg:x="981" fg:w="1"/><text x="78.8558%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.6058%" y="581" width="0.0801%" height="15" fill="rgb(234,21,32)" fg:x="981" fg:w="1"/><text x="78.8558%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.6058%" y="565" width="0.0801%" height="15" fill="rgb(252,136,6)" fg:x="981" fg:w="1"/><text x="78.8558%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.6058%" y="549" width="0.0801%" height="15" fill="rgb(245,87,12)" fg:x="981" fg:w="1"/><text x="78.8558%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.6058%" y="533" width="0.0801%" height="15" fill="rgb(208,12,15)" fg:x="981" fg:w="1"/><text x="78.8558%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.6058%" y="517" width="0.0801%" height="15" fill="rgb(250,98,2)" fg:x="981" fg:w="1"/><text x="78.8558%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.6058%" y="501" width="0.0801%" height="15" fill="rgb(205,213,15)" fg:x="981" fg:w="1"/><text x="78.8558%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (985 samples, 78.93%)</title><rect x="0.0000%" y="757" width="78.9263%" height="15" fill="rgb(248,192,44)" fg:x="0" fg:w="985"/><text x="0.2500%" y="767.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (985 samples, 78.93%)</title><rect x="0.0000%" y="741" width="78.9263%" height="15" fill="rgb(221,89,17)" fg:x="0" fg:w="985"/><text x="0.2500%" y="751.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (985 samples, 78.93%)</title><rect x="0.0000%" y="725" width="78.9263%" height="15" fill="rgb(209,55,3)" fg:x="0" fg:w="985"/><text x="0.2500%" y="735.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (250 samples, 20.03%)</title><rect x="58.8942%" y="709" width="20.0321%" height="15" fill="rgb(247,23,45)" fg:x="735" fg:w="250"/><text x="59.1442%" y="719.50">engine::session::Session::evalu..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (250 samples, 20.03%)</title><rect x="58.8942%" y="693" width="20.0321%" height="15" fill="rgb(235,152,23)" fg:x="735" fg:w="250"/><text x="59.1442%" y="703.50">engine::session::Session::evalu..</text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="78.6058%" y="677" width="0.3205%" height="15" fill="rgb(244,63,13)" fg:x="981" fg:w="4"/><text x="78.8558%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="78.6859%" y="661" width="0.2404%" height="15" fill="rgb(227,30,37)" fg:x="982" fg:w="3"/><text x="78.9359%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="78.6859%" y="645" width="0.2404%" height="15" fill="rgb(224,49,42)" fg:x="982" fg:w="3"/><text x="78.9359%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="78.6859%" y="629" width="0.2404%" height="15" fill="rgb(218,129,5)" fg:x="982" fg:w="3"/><text x="78.9359%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="78.6859%" y="613" width="0.2404%" height="15" fill="rgb(240,199,54)" fg:x="982" fg:w="3"/><text x="78.9359%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.8462%" y="597" width="0.0801%" height="15" fill="rgb(234,31,13)" fg:x="984" fg:w="1"/><text x="79.0962%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.8462%" y="581" width="0.0801%" height="15" fill="rgb(219,73,54)" fg:x="984" fg:w="1"/><text x="79.0962%" y="591.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="78.8462%" y="565" width="0.0801%" height="15" fill="rgb(251,162,10)" fg:x="984" fg:w="1"/><text x="79.0962%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0865%" y="597" width="0.0801%" height="15" fill="rgb(240,138,47)" fg:x="987" fg:w="1"/><text x="79.3365%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1667%" y="581" width="0.0801%" height="15" fill="rgb(216,138,26)" fg:x="988" fg:w="1"/><text x="79.4167%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="78.9263%" y="645" width="0.4808%" height="15" fill="rgb(243,17,35)" fg:x="985" fg:w="6"/><text x="79.1763%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="78.9263%" y="629" width="0.4808%" height="15" fill="rgb(241,60,18)" fg:x="985" fg:w="6"/><text x="79.1763%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="79.0865%" y="613" width="0.3205%" height="15" fill="rgb(234,2,44)" fg:x="987" fg:w="4"/><text x="79.3365%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.1667%" y="597" width="0.2404%" height="15" fill="rgb(225,225,33)" fg:x="988" fg:w="3"/><text x="79.4167%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.2468%" y="581" width="0.1603%" height="15" fill="rgb(234,50,31)" fg:x="989" fg:w="2"/><text x="79.4968%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3269%" y="565" width="0.0801%" height="15" fill="rgb(249,6,25)" fg:x="990" fg:w="1"/><text x="79.5769%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="78.9263%" y="677" width="0.5609%" height="15" fill="rgb(241,5,17)" fg:x="985" fg:w="7"/><text x="79.1763%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (7 samples, 0.56%)</title><rect x="78.9263%" y="661" width="0.5609%" height="15" fill="rgb(207,116,10)" fg:x="985" fg:w="7"/><text x="79.1763%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4071%" y="645" width="0.0801%" height="15" fill="rgb(222,128,18)" fg:x="991" fg:w="1"/><text x="79.6571%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="78.9263%" y="709" width="0.6410%" height="15" fill="rgb(229,109,25)" fg:x="985" fg:w="8"/><text x="79.1763%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (8 samples, 0.64%)</title><rect x="78.9263%" y="693" width="0.6410%" height="15" fill="rgb(222,102,25)" fg:x="985" fg:w="8"/><text x="79.1763%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4872%" y="677" width="0.0801%" height="15" fill="rgb(239,211,5)" fg:x="992" fg:w="1"/><text x="79.7372%" y="687.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="79.5673%" y="597" width="0.0801%" height="15" fill="rgb(223,136,26)" fg:x="993" fg:w="1"/><text x="79.8173%" y="607.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="79.5673%" y="581" width="0.0801%" height="15" fill="rgb(227,30,15)" fg:x="993" fg:w="1"/><text x="79.8173%" y="591.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="79.5673%" y="565" width="0.0801%" height="15" fill="rgb(247,76,4)" fg:x="993" fg:w="1"/><text x="79.8173%" y="575.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="79.6474%" y="597" width="0.2404%" height="15" fill="rgb(245,38,48)" fg:x="994" fg:w="3"/><text x="79.8974%" y="607.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="79.6474%" y="581" width="0.2404%" height="15" fill="rgb(210,220,14)" fg:x="994" fg:w="3"/><text x="79.8974%" y="591.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="79.6474%" y="565" width="0.2404%" height="15" fill="rgb(224,60,51)" fg:x="994" fg:w="3"/><text x="79.8974%" y="575.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="79.6474%" y="549" width="0.2404%" height="15" fill="rgb(212,133,49)" fg:x="994" fg:w="3"/><text x="79.8974%" y="559.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="79.6474%" y="533" width="0.2404%" height="15" fill="rgb(231,39,22)" fg:x="994" fg:w="3"/><text x="79.8974%" y="543.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (5 samples, 0.40%)</title><rect x="79.5673%" y="645" width="0.4006%" height="15" fill="rgb(236,173,22)" fg:x="993" fg:w="5"/><text x="79.8173%" y="655.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (5 samples, 0.40%)</title><rect x="79.5673%" y="629" width="0.4006%" height="15" fill="rgb(210,70,0)" fg:x="993" fg:w="5"/><text x="79.8173%" y="639.50"></text></g><g><title>libloading::safe::Library::new (5 samples, 0.40%)</title><rect x="79.5673%" y="613" width="0.4006%" height="15" fill="rgb(215,170,11)" fg:x="993" fg:w="5"/><text x="79.8173%" y="623.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="79.8878%" y="597" width="0.0801%" height="15" fill="rgb(220,154,28)" fg:x="997" fg:w="1"/><text x="80.1378%" y="607.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="79.8878%" y="581" width="0.0801%" height="15" fill="rgb(240,160,41)" fg:x="997" fg:w="1"/><text x="80.1378%" y="591.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="79.8878%" y="565" width="0.0801%" height="15" fill="rgb(243,215,41)" fg:x="997" fg:w="1"/><text x="80.1378%" y="575.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (6 samples, 0.48%)</title><rect x="79.5673%" y="709" width="0.4808%" height="15" fill="rgb(214,208,31)" fg:x="993" fg:w="6"/><text x="79.8173%" y="719.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (6 samples, 0.48%)</title><rect x="79.5673%" y="693" width="0.4808%" height="15" fill="rgb(247,57,22)" fg:x="993" fg:w="6"/><text x="79.8173%" y="703.50"></text></g><g><title>engine::session::Session::new (6 samples, 0.48%)</title><rect x="79.5673%" y="677" width="0.4808%" height="15" fill="rgb(228,73,52)" fg:x="993" fg:w="6"/><text x="79.8173%" y="687.50"></text></g><g><title>engine::session::Session::initialize (6 samples, 0.48%)</title><rect x="79.5673%" y="661" width="0.4808%" height="15" fill="rgb(252,60,9)" fg:x="993" fg:w="6"/><text x="79.8173%" y="671.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="79.9679%" y="645" width="0.0801%" height="15" fill="rgb(233,9,51)" fg:x="998" fg:w="1"/><text x="80.2179%" y="655.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="79.9679%" y="629" width="0.0801%" height="15" fill="rgb(223,67,14)" fg:x="998" fg:w="1"/><text x="80.2179%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.9679%" y="613" width="0.0801%" height="15" fill="rgb(222,86,2)" fg:x="998" fg:w="1"/><text x="80.2179%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.9679%" y="597" width="0.0801%" height="15" fill="rgb(243,58,54)" fg:x="998" fg:w="1"/><text x="80.2179%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.9679%" y="581" width="0.0801%" height="15" fill="rgb(210,200,39)" fg:x="998" fg:w="1"/><text x="80.2179%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.9679%" y="565" width="0.0801%" height="15" fill="rgb(238,135,9)" fg:x="998" fg:w="1"/><text x="80.2179%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="80.1282%" y="693" width="0.0801%" height="15" fill="rgb(232,179,7)" fg:x="1000" fg:w="1"/><text x="80.3782%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1282%" y="677" width="0.0801%" height="15" fill="rgb(245,65,41)" fg:x="1000" fg:w="1"/><text x="80.3782%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="80.2083%" y="677" width="0.0801%" height="15" fill="rgb(227,43,8)" fg:x="1001" fg:w="1"/><text x="80.4583%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2083%" y="661" width="0.0801%" height="15" fill="rgb(235,91,14)" fg:x="1001" fg:w="1"/><text x="80.4583%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.2885%" y="645" width="0.0801%" height="15" fill="rgb(235,219,31)" fg:x="1002" fg:w="1"/><text x="80.5385%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="80.2885%" y="629" width="0.0801%" height="15" fill="rgb(227,121,25)" fg:x="1002" fg:w="1"/><text x="80.5385%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.2885%" y="613" width="0.0801%" height="15" fill="rgb(254,129,24)" fg:x="1002" fg:w="1"/><text x="80.5385%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="80.3686%" y="629" width="0.0801%" height="15" fill="rgb(226,144,49)" fg:x="1003" fg:w="1"/><text x="80.6186%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.3686%" y="613" width="0.0801%" height="15" fill="rgb(214,187,32)" fg:x="1003" fg:w="1"/><text x="80.6186%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.3686%" y="597" width="0.0801%" height="15" fill="rgb(243,129,46)" fg:x="1003" fg:w="1"/><text x="80.6186%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.6090%" y="597" width="0.0801%" height="15" fill="rgb(221,185,35)" fg:x="1006" fg:w="1"/><text x="80.8590%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.6090%" y="581" width="0.0801%" height="15" fill="rgb(205,0,32)" fg:x="1006" fg:w="1"/><text x="80.8590%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.6090%" y="565" width="0.0801%" height="15" fill="rgb(229,179,12)" fg:x="1006" fg:w="1"/><text x="80.8590%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.6090%" y="549" width="0.0801%" height="15" fill="rgb(252,107,19)" fg:x="1006" fg:w="1"/><text x="80.8590%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.6090%" y="533" width="0.0801%" height="15" fill="rgb(220,95,27)" fg:x="1006" fg:w="1"/><text x="80.8590%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.7692%" y="565" width="0.0801%" height="15" fill="rgb(240,113,40)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7692%" y="549" width="0.0801%" height="15" fill="rgb(208,4,43)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.7692%" y="533" width="0.0801%" height="15" fill="rgb(247,189,30)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7692%" y="517" width="0.0801%" height="15" fill="rgb(231,157,17)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7692%" y="501" width="0.0801%" height="15" fill="rgb(224,139,6)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7692%" y="485" width="0.0801%" height="15" fill="rgb(223,83,16)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.7692%" y="469" width="0.0801%" height="15" fill="rgb(232,211,20)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.8494%" y="565" width="0.0801%" height="15" fill="rgb(225,203,35)" fg:x="1009" fg:w="1"/><text x="81.0994%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8494%" y="549" width="0.0801%" height="15" fill="rgb(215,211,44)" fg:x="1009" fg:w="1"/><text x="81.0994%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.9295%" y="565" width="0.1603%" height="15" fill="rgb(248,213,26)" fg:x="1010" fg:w="2"/><text x="81.1795%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.9295%" y="549" width="0.1603%" height="15" fill="rgb(214,23,52)" fg:x="1010" fg:w="2"/><text x="81.1795%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0096%" y="533" width="0.0801%" height="15" fill="rgb(225,173,50)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.0096%" y="517" width="0.0801%" height="15" fill="rgb(206,150,22)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="81.0096%" y="501" width="0.0801%" height="15" fill="rgb(239,64,23)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.0897%" y="533" width="0.0801%" height="15" fill="rgb(242,50,38)" fg:x="1012" fg:w="1"/><text x="81.3397%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="80.6891%" y="581" width="0.5609%" height="15" fill="rgb(217,91,15)" fg:x="1007" fg:w="7"/><text x="80.9391%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.0897%" y="565" width="0.1603%" height="15" fill="rgb(230,172,6)" fg:x="1012" fg:w="2"/><text x="81.3397%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="81.0897%" y="549" width="0.1603%" height="15" fill="rgb(221,98,26)" fg:x="1012" fg:w="2"/><text x="81.3397%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="81.1699%" y="533" width="0.0801%" height="15" fill="rgb(227,210,45)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.80%)</title><rect x="80.5288%" y="613" width="0.8013%" height="15" fill="rgb(206,8,30)" fg:x="1005" fg:w="10"/><text x="80.7788%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="80.6891%" y="597" width="0.6410%" height="15" fill="rgb(241,219,17)" fg:x="1007" fg:w="8"/><text x="80.9391%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.2500%" y="581" width="0.0801%" height="15" fill="rgb(247,121,29)" fg:x="1014" fg:w="1"/><text x="81.5000%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.3301%" y="613" width="0.0801%" height="15" fill="rgb(219,169,49)" fg:x="1015" fg:w="1"/><text x="81.5801%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.3301%" y="597" width="0.0801%" height="15" fill="rgb(253,49,49)" fg:x="1015" fg:w="1"/><text x="81.5801%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.3301%" y="581" width="0.0801%" height="15" fill="rgb(217,178,3)" fg:x="1015" fg:w="1"/><text x="81.5801%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.5705%" y="565" width="0.1603%" height="15" fill="rgb(234,73,37)" fg:x="1018" fg:w="2"/><text x="81.8205%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6506%" y="549" width="0.0801%" height="15" fill="rgb(250,98,22)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.6506%" y="533" width="0.0801%" height="15" fill="rgb(220,108,37)" fg:x="1019" fg:w="1"/><text x="81.9006%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7308%" y="565" width="0.0801%" height="15" fill="rgb(225,168,10)" fg:x="1020" fg:w="1"/><text x="81.9808%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.7308%" y="549" width="0.0801%" height="15" fill="rgb(247,215,21)" fg:x="1020" fg:w="1"/><text x="81.9808%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7308%" y="533" width="0.0801%" height="15" fill="rgb(253,189,31)" fg:x="1020" fg:w="1"/><text x="81.9808%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8109%" y="517" width="0.0801%" height="15" fill="rgb(241,54,22)" fg:x="1021" fg:w="1"/><text x="82.0609%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2115%" y="485" width="0.0801%" height="15" fill="rgb(211,87,4)" fg:x="1026" fg:w="1"/><text x="82.4615%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2115%" y="469" width="0.0801%" height="15" fill="rgb(245,112,24)" fg:x="1026" fg:w="1"/><text x="82.4615%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2115%" y="453" width="0.0801%" height="15" fill="rgb(235,190,41)" fg:x="1026" fg:w="1"/><text x="82.4615%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="81.8109%" y="533" width="0.5609%" height="15" fill="rgb(214,89,8)" fg:x="1021" fg:w="7"/><text x="82.0609%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="81.8910%" y="517" width="0.4808%" height="15" fill="rgb(249,155,35)" fg:x="1022" fg:w="6"/><text x="82.1410%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="82.0513%" y="501" width="0.3205%" height="15" fill="rgb(249,88,26)" fg:x="1024" fg:w="4"/><text x="82.3013%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2917%" y="485" width="0.0801%" height="15" fill="rgb(232,56,8)" fg:x="1027" fg:w="1"/><text x="82.5417%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.2917%" y="469" width="0.0801%" height="15" fill="rgb(240,95,3)" fg:x="1027" fg:w="1"/><text x="82.5417%" y="479.50"></text></g><g><title>engine::session::Session::flush (28 samples, 2.24%)</title><rect x="80.2083%" y="693" width="2.2436%" height="15" fill="rgb(222,44,28)" fg:x="1001" fg:w="28"/><text x="80.4583%" y="703.50">e..</text></g><g><title>engine::session::state::State::close (27 samples, 2.16%)</title><rect x="80.2885%" y="677" width="2.1635%" height="15" fill="rgb(234,16,30)" fg:x="1002" fg:w="27"/><text x="80.5385%" y="687.50">e..</text></g><g><title>engine::session::state::State::flush_entities (27 samples, 2.16%)</title><rect x="80.2885%" y="661" width="2.1635%" height="15" fill="rgb(223,26,17)" fg:x="1002" fg:w="27"/><text x="80.5385%" y="671.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (26 samples, 2.08%)</title><rect x="80.3686%" y="645" width="2.0833%" height="15" fill="rgb(239,187,47)" fg:x="1003" fg:w="26"/><text x="80.6186%" y="655.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (25 samples, 2.00%)</title><rect x="80.4487%" y="629" width="2.0032%" height="15" fill="rgb(247,102,50)" fg:x="1004" fg:w="25"/><text x="80.6987%" y="639.50">e..</text></g><g><title>kernel::model::any_entity_changes (13 samples, 1.04%)</title><rect x="81.4103%" y="613" width="1.0417%" height="15" fill="rgb(231,216,22)" fg:x="1016" fg:w="13"/><text x="81.6603%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 1.04%)</title><rect x="81.4103%" y="597" width="1.0417%" height="15" fill="rgb(216,201,26)" fg:x="1016" fg:w="13"/><text x="81.6603%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.04%)</title><rect x="81.4103%" y="581" width="1.0417%" height="15" fill="rgb(214,186,23)" fg:x="1016" fg:w="13"/><text x="81.6603%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="81.8109%" y="565" width="0.6410%" height="15" fill="rgb(235,184,4)" fg:x="1021" fg:w="8"/><text x="82.0609%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="81.8109%" y="549" width="0.6410%" height="15" fill="rgb(244,46,17)" fg:x="1021" fg:w="8"/><text x="82.0609%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="82.3718%" y="533" width="0.0801%" height="15" fill="rgb(248,74,46)" fg:x="1028" fg:w="1"/><text x="82.6218%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.4519%" y="661" width="0.0801%" height="15" fill="rgb(243,79,5)" fg:x="1029" fg:w="1"/><text x="82.7019%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.4519%" y="645" width="0.0801%" height="15" fill="rgb(213,148,1)" fg:x="1029" fg:w="1"/><text x="82.7019%" y="655.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5321%" y="613" width="0.0801%" height="15" fill="rgb(221,30,0)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5321%" y="597" width="0.0801%" height="15" fill="rgb(207,85,29)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5321%" y="581" width="0.0801%" height="15" fill="rgb(239,31,46)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5321%" y="565" width="0.0801%" height="15" fill="rgb(219,6,1)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.5321%" y="549" width="0.0801%" height="15" fill="rgb(229,90,29)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.5321%" y="533" width="0.0801%" height="15" fill="rgb(242,201,42)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.5321%" y="517" width="0.0801%" height="15" fill="rgb(243,80,54)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.5321%" y="501" width="0.0801%" height="15" fill="rgb(223,166,15)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.5321%" y="485" width="0.0801%" height="15" fill="rgb(238,78,27)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.5321%" y="469" width="0.0801%" height="15" fill="rgb(235,28,43)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.5321%" y="453" width="0.0801%" height="15" fill="rgb(240,210,28)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.5321%" y="437" width="0.0801%" height="15" fill="rgb(253,6,46)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.5321%" y="421" width="0.0801%" height="15" fill="rgb(250,159,47)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5321%" y="405" width="0.0801%" height="15" fill="rgb(216,139,2)" fg:x="1030" fg:w="1"/><text x="82.7821%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="82.5321%" y="661" width="0.1603%" height="15" fill="rgb(221,124,44)" fg:x="1030" fg:w="2"/><text x="82.7821%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="82.5321%" y="645" width="0.1603%" height="15" fill="rgb(205,37,22)" fg:x="1030" fg:w="2"/><text x="82.7821%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.5321%" y="629" width="0.1603%" height="15" fill="rgb(250,55,8)" fg:x="1030" fg:w="2"/><text x="82.7821%" y="639.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.6122%" y="613" width="0.0801%" height="15" fill="rgb(215,83,48)" fg:x="1031" fg:w="1"/><text x="82.8622%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6122%" y="597" width="0.0801%" height="15" fill="rgb(253,2,32)" fg:x="1031" fg:w="1"/><text x="82.8622%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.6923%" y="645" width="0.0801%" height="15" fill="rgb(236,67,28)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.6923%" y="629" width="0.0801%" height="15" fill="rgb(252,55,15)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.6923%" y="613" width="0.0801%" height="15" fill="rgb(243,173,17)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.6923%" y="597" width="0.0801%" height="15" fill="rgb(215,212,13)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6923%" y="581" width="0.0801%" height="15" fill="rgb(253,176,6)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.6923%" y="565" width="0.0801%" height="15" fill="rgb(236,105,26)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6923%" y="549" width="0.0801%" height="15" fill="rgb(239,226,32)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.6923%" y="533" width="0.0801%" height="15" fill="rgb(236,104,51)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6923%" y="517" width="0.0801%" height="15" fill="rgb(220,172,33)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6923%" y="501" width="0.0801%" height="15" fill="rgb(224,182,25)" fg:x="1032" fg:w="1"/><text x="82.9423%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="82.4519%" y="677" width="0.4006%" height="15" fill="rgb(236,184,24)" fg:x="1029" fg:w="5"/><text x="82.7019%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="82.6923%" y="661" width="0.1603%" height="15" fill="rgb(241,221,14)" fg:x="1032" fg:w="2"/><text x="82.9423%" y="671.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="82.7724%" y="645" width="0.0801%" height="15" fill="rgb(227,146,5)" fg:x="1033" fg:w="1"/><text x="83.0224%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7724%" y="629" width="0.0801%" height="15" fill="rgb(214,15,23)" fg:x="1033" fg:w="1"/><text x="83.0224%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7724%" y="613" width="0.0801%" height="15" fill="rgb(233,157,31)" fg:x="1033" fg:w="1"/><text x="83.0224%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.8526%" y="661" width="0.0801%" height="15" fill="rgb(211,27,52)" fg:x="1034" fg:w="1"/><text x="83.1026%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="82.8526%" y="645" width="0.0801%" height="15" fill="rgb(212,223,15)" fg:x="1034" fg:w="1"/><text x="83.1026%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="82.8526%" y="629" width="0.0801%" height="15" fill="rgb(254,211,0)" fg:x="1034" fg:w="1"/><text x="83.1026%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="82.4519%" y="693" width="0.5609%" height="15" fill="rgb(205,43,38)" fg:x="1029" fg:w="7"/><text x="82.7019%" y="703.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.16%)</title><rect x="82.8526%" y="677" width="0.1603%" height="15" fill="rgb(242,206,46)" fg:x="1034" fg:w="2"/><text x="83.1026%" y="687.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="82.9327%" y="661" width="0.0801%" height="15" fill="rgb(220,221,12)" fg:x="1035" fg:w="1"/><text x="83.1827%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.9327%" y="645" width="0.0801%" height="15" fill="rgb(217,156,35)" fg:x="1035" fg:w="1"/><text x="83.1827%" y="655.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9327%" y="629" width="0.0801%" height="15" fill="rgb(207,181,49)" fg:x="1035" fg:w="1"/><text x="83.1827%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.0128%" y="661" width="0.0801%" height="15" fill="rgb(235,103,47)" fg:x="1036" fg:w="1"/><text x="83.2628%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.0128%" y="645" width="0.0801%" height="15" fill="rgb(222,63,28)" fg:x="1036" fg:w="1"/><text x="83.2628%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0128%" y="629" width="0.0801%" height="15" fill="rgb(244,137,21)" fg:x="1036" fg:w="1"/><text x="83.2628%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0128%" y="613" width="0.0801%" height="15" fill="rgb(228,35,27)" fg:x="1036" fg:w="1"/><text x="83.2628%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0128%" y="597" width="0.0801%" height="15" fill="rgb(226,191,41)" fg:x="1036" fg:w="1"/><text x="83.2628%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0128%" y="581" width="0.0801%" height="15" fill="rgb(210,154,3)" fg:x="1036" fg:w="1"/><text x="83.2628%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="83.0128%" y="693" width="0.1603%" height="15" fill="rgb(216,60,49)" fg:x="1036" fg:w="2"/><text x="83.2628%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="83.0128%" y="677" width="0.1603%" height="15" fill="rgb(226,17,20)" fg:x="1036" fg:w="2"/><text x="83.2628%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="83.0929%" y="661" width="0.0801%" height="15" fill="rgb(206,115,35)" fg:x="1037" fg:w="1"/><text x="83.3429%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="83.0929%" y="645" width="0.0801%" height="15" fill="rgb(227,88,1)" fg:x="1037" fg:w="1"/><text x="83.3429%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="83.0929%" y="629" width="0.0801%" height="15" fill="rgb(230,222,24)" fg:x="1037" fg:w="1"/><text x="83.3429%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.0929%" y="613" width="0.0801%" height="15" fill="rgb(214,124,32)" fg:x="1037" fg:w="1"/><text x="83.3429%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.0929%" y="597" width="0.0801%" height="15" fill="rgb(240,41,36)" fg:x="1037" fg:w="1"/><text x="83.3429%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0929%" y="581" width="0.0801%" height="15" fill="rgb(221,17,52)" fg:x="1037" fg:w="1"/><text x="83.3429%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0929%" y="565" width="0.0801%" height="15" fill="rgb(252,70,16)" fg:x="1037" fg:w="1"/><text x="83.3429%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="83.1731%" y="677" width="0.0801%" height="15" fill="rgb(250,177,4)" fg:x="1038" fg:w="1"/><text x="83.4231%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.1731%" y="661" width="0.0801%" height="15" fill="rgb(240,188,47)" fg:x="1038" fg:w="1"/><text x="83.4231%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.1731%" y="645" width="0.0801%" height="15" fill="rgb(215,92,12)" fg:x="1038" fg:w="1"/><text x="83.4231%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.1731%" y="629" width="0.0801%" height="15" fill="rgb(242,110,29)" fg:x="1038" fg:w="1"/><text x="83.4231%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.1731%" y="613" width="0.0801%" height="15" fill="rgb(208,211,26)" fg:x="1038" fg:w="1"/><text x="83.4231%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.1731%" y="597" width="0.0801%" height="15" fill="rgb(244,147,6)" fg:x="1038" fg:w="1"/><text x="83.4231%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.1731%" y="581" width="0.0801%" height="15" fill="rgb(211,130,42)" fg:x="1038" fg:w="1"/><text x="83.4231%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.1731%" y="565" width="0.0801%" height="15" fill="rgb(220,63,1)" fg:x="1038" fg:w="1"/><text x="83.4231%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="83.2532%" y="645" width="0.0801%" height="15" fill="rgb(241,212,30)" fg:x="1039" fg:w="1"/><text x="83.5032%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.2532%" y="629" width="0.0801%" height="15" fill="rgb(233,153,17)" fg:x="1039" fg:w="1"/><text x="83.5032%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="83.2532%" y="677" width="0.1603%" height="15" fill="rgb(236,3,10)" fg:x="1039" fg:w="2"/><text x="83.5032%" y="687.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="83.2532%" y="661" width="0.1603%" height="15" fill="rgb(232,41,21)" fg:x="1039" fg:w="2"/><text x="83.5032%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.3333%" y="645" width="0.0801%" height="15" fill="rgb(206,63,51)" fg:x="1040" fg:w="1"/><text x="83.5833%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="83.4135%" y="629" width="0.0801%" height="15" fill="rgb(250,214,3)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="83.4135%" y="613" width="0.0801%" height="15" fill="rgb(254,89,27)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.4135%" y="597" width="0.0801%" height="15" fill="rgb(249,41,14)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.4135%" y="581" width="0.0801%" height="15" fill="rgb(221,196,51)" fg:x="1041" fg:w="1"/><text x="83.6635%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="83.4936%" y="581" width="0.0801%" height="15" fill="rgb(214,116,26)" fg:x="1042" fg:w="1"/><text x="83.7436%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="83.4936%" y="565" width="0.0801%" height="15" fill="rgb(236,67,7)" fg:x="1042" fg:w="1"/><text x="83.7436%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.4936%" y="549" width="0.0801%" height="15" fill="rgb(253,179,32)" fg:x="1042" fg:w="1"/><text x="83.7436%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.4936%" y="533" width="0.0801%" height="15" fill="rgb(218,33,15)" fg:x="1042" fg:w="1"/><text x="83.7436%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="83.4936%" y="597" width="0.1603%" height="15" fill="rgb(217,202,41)" fg:x="1042" fg:w="2"/><text x="83.7436%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="83.5737%" y="581" width="0.0801%" height="15" fill="rgb(234,133,5)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="83.5737%" y="565" width="0.0801%" height="15" fill="rgb(240,47,40)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.5737%" y="549" width="0.0801%" height="15" fill="rgb(234,166,26)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.5737%" y="533" width="0.0801%" height="15" fill="rgb(244,125,51)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.5737%" y="517" width="0.0801%" height="15" fill="rgb(229,171,11)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="83.5737%" y="501" width="0.0801%" height="15" fill="rgb(224,38,45)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.5737%" y="485" width="0.0801%" height="15" fill="rgb(237,27,7)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.5737%" y="469" width="0.0801%" height="15" fill="rgb(216,52,7)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.5737%" y="453" width="0.0801%" height="15" fill="rgb(243,11,11)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="83.5737%" y="437" width="0.0801%" height="15" fill="rgb(253,167,20)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.5737%" y="421" width="0.0801%" height="15" fill="rgb(215,207,5)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.5737%" y="405" width="0.0801%" height="15" fill="rgb(252,127,31)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.5737%" y="389" width="0.0801%" height="15" fill="rgb(209,106,27)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.5737%" y="373" width="0.0801%" height="15" fill="rgb(214,220,18)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.5737%" y="357" width="0.0801%" height="15" fill="rgb(237,89,12)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="83.5737%" y="341" width="0.0801%" height="15" fill="rgb(209,167,36)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="83.5737%" y="325" width="0.0801%" height="15" fill="rgb(243,45,22)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="83.5737%" y="309" width="0.0801%" height="15" fill="rgb(239,2,46)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="83.5737%" y="293" width="0.0801%" height="15" fill="rgb(241,101,0)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="83.5737%" y="277" width="0.0801%" height="15" fill="rgb(244,34,31)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="83.5737%" y="261" width="0.0801%" height="15" fill="rgb(248,23,22)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.5737%" y="245" width="0.0801%" height="15" fill="rgb(218,27,48)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="83.5737%" y="229" width="0.0801%" height="15" fill="rgb(232,78,1)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.5737%" y="213" width="0.0801%" height="15" fill="rgb(233,169,12)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="83.5737%" y="197" width="0.0801%" height="15" fill="rgb(225,222,54)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="83.5737%" y="181" width="0.0801%" height="15" fill="rgb(245,126,29)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="83.5737%" y="165" width="0.0801%" height="15" fill="rgb(241,63,48)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.5737%" y="149" width="0.0801%" height="15" fill="rgb(235,126,38)" fg:x="1043" fg:w="1"/><text x="83.8237%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.6538%" y="597" width="0.0801%" height="15" fill="rgb(232,96,49)" fg:x="1044" fg:w="1"/><text x="83.9038%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.6538%" y="581" width="0.0801%" height="15" fill="rgb(211,146,40)" fg:x="1044" fg:w="1"/><text x="83.9038%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.6538%" y="565" width="0.0801%" height="15" fill="rgb(247,93,44)" fg:x="1044" fg:w="1"/><text x="83.9038%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.6538%" y="549" width="0.0801%" height="15" fill="rgb(251,41,49)" fg:x="1044" fg:w="1"/><text x="83.9038%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.6538%" y="533" width="0.0801%" height="15" fill="rgb(218,155,12)" fg:x="1044" fg:w="1"/><text x="83.9038%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.6538%" y="517" width="0.0801%" height="15" fill="rgb(221,161,30)" fg:x="1044" fg:w="1"/><text x="83.9038%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.6538%" y="501" width="0.0801%" height="15" fill="rgb(221,179,11)" fg:x="1044" fg:w="1"/><text x="83.9038%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.6538%" y="485" width="0.0801%" height="15" fill="rgb(224,170,48)" fg:x="1044" fg:w="1"/><text x="83.9038%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="83.7340%" y="597" width="0.0801%" height="15" fill="rgb(223,117,5)" fg:x="1045" fg:w="1"/><text x="83.9840%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="83.7340%" y="581" width="0.0801%" height="15" fill="rgb(209,52,20)" fg:x="1045" fg:w="1"/><text x="83.9840%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.7340%" y="565" width="0.0801%" height="15" fill="rgb(209,19,41)" fg:x="1045" fg:w="1"/><text x="83.9840%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="83.4936%" y="613" width="0.4006%" height="15" fill="rgb(210,177,12)" fg:x="1042" fg:w="5"/><text x="83.7436%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="83.8141%" y="597" width="0.0801%" height="15" fill="rgb(211,159,37)" fg:x="1046" fg:w="1"/><text x="84.0641%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="83.8141%" y="581" width="0.0801%" height="15" fill="rgb(209,20,2)" fg:x="1046" fg:w="1"/><text x="84.0641%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="83.8141%" y="565" width="0.0801%" height="15" fill="rgb(244,3,46)" fg:x="1046" fg:w="1"/><text x="84.0641%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.8141%" y="549" width="0.0801%" height="15" fill="rgb(220,94,38)" fg:x="1046" fg:w="1"/><text x="84.0641%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.8141%" y="533" width="0.0801%" height="15" fill="rgb(253,14,31)" fg:x="1046" fg:w="1"/><text x="84.0641%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8141%" y="517" width="0.0801%" height="15" fill="rgb(234,176,13)" fg:x="1046" fg:w="1"/><text x="84.0641%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8141%" y="501" width="0.0801%" height="15" fill="rgb(218,62,25)" fg:x="1046" fg:w="1"/><text x="84.0641%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.56%)</title><rect x="83.4135%" y="677" width="0.5609%" height="15" fill="rgb(216,124,40)" fg:x="1041" fg:w="7"/><text x="83.6635%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="83.4135%" y="661" width="0.5609%" height="15" fill="rgb(228,170,12)" fg:x="1041" fg:w="7"/><text x="83.6635%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.56%)</title><rect x="83.4135%" y="645" width="0.5609%" height="15" fill="rgb(231,226,5)" fg:x="1041" fg:w="7"/><text x="83.6635%" y="655.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.48%)</title><rect x="83.4936%" y="629" width="0.4808%" height="15" fill="rgb(237,122,22)" fg:x="1042" fg:w="6"/><text x="83.7436%" y="639.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="83.8942%" y="613" width="0.0801%" height="15" fill="rgb(209,185,25)" fg:x="1047" fg:w="1"/><text x="84.1442%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.8942%" y="597" width="0.0801%" height="15" fill="rgb(228,200,32)" fg:x="1047" fg:w="1"/><text x="84.1442%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="83.8942%" y="581" width="0.0801%" height="15" fill="rgb(217,140,10)" fg:x="1047" fg:w="1"/><text x="84.1442%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.8942%" y="565" width="0.0801%" height="15" fill="rgb(253,17,24)" fg:x="1047" fg:w="1"/><text x="84.1442%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="83.8942%" y="549" width="0.0801%" height="15" fill="rgb(212,61,6)" fg:x="1047" fg:w="1"/><text x="84.1442%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.8942%" y="533" width="0.0801%" height="15" fill="rgb(205,14,25)" fg:x="1047" fg:w="1"/><text x="84.1442%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="83.9744%" y="565" width="0.2404%" height="15" fill="rgb(232,69,41)" fg:x="1048" fg:w="3"/><text x="84.2244%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="83.9744%" y="549" width="0.2404%" height="15" fill="rgb(241,106,47)" fg:x="1048" fg:w="3"/><text x="84.2244%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="84.0545%" y="533" width="0.1603%" height="15" fill="rgb(210,213,53)" fg:x="1049" fg:w="2"/><text x="84.3045%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.1346%" y="517" width="0.0801%" height="15" fill="rgb(253,175,27)" fg:x="1050" fg:w="1"/><text x="84.3846%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.1346%" y="501" width="0.0801%" height="15" fill="rgb(211,171,24)" fg:x="1050" fg:w="1"/><text x="84.3846%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.2949%" y="549" width="0.0801%" height="15" fill="rgb(229,80,7)" fg:x="1052" fg:w="1"/><text x="84.5449%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.3750%" y="517" width="0.0801%" height="15" fill="rgb(212,46,39)" fg:x="1053" fg:w="1"/><text x="84.6250%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.3750%" y="501" width="0.0801%" height="15" fill="rgb(240,80,45)" fg:x="1053" fg:w="1"/><text x="84.6250%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4551%" y="517" width="0.0801%" height="15" fill="rgb(253,177,40)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4551%" y="501" width="0.0801%" height="15" fill="rgb(249,200,15)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.4551%" y="485" width="0.0801%" height="15" fill="rgb(217,78,26)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.4551%" y="469" width="0.0801%" height="15" fill="rgb(254,151,32)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.4551%" y="453" width="0.0801%" height="15" fill="rgb(226,165,27)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="84.3750%" y="549" width="0.2404%" height="15" fill="rgb(250,206,4)" fg:x="1053" fg:w="3"/><text x="84.6250%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="84.3750%" y="533" width="0.2404%" height="15" fill="rgb(231,229,27)" fg:x="1053" fg:w="3"/><text x="84.6250%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.5353%" y="517" width="0.0801%" height="15" fill="rgb(239,217,8)" fg:x="1055" fg:w="1"/><text x="84.7853%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.5353%" y="501" width="0.0801%" height="15" fill="rgb(225,204,27)" fg:x="1055" fg:w="1"/><text x="84.7853%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.5353%" y="485" width="0.0801%" height="15" fill="rgb(230,56,32)" fg:x="1055" fg:w="1"/><text x="84.7853%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.88%)</title><rect x="83.9744%" y="581" width="0.8814%" height="15" fill="rgb(222,56,27)" fg:x="1048" fg:w="11"/><text x="84.2244%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="84.2147%" y="565" width="0.6410%" height="15" fill="rgb(253,108,27)" fg:x="1051" fg:w="8"/><text x="84.4647%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="84.6154%" y="549" width="0.2404%" height="15" fill="rgb(212,87,36)" fg:x="1056" fg:w="3"/><text x="84.8654%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="84.6154%" y="533" width="0.2404%" height="15" fill="rgb(247,82,36)" fg:x="1056" fg:w="3"/><text x="84.8654%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="84.6154%" y="517" width="0.2404%" height="15" fill="rgb(222,143,9)" fg:x="1056" fg:w="3"/><text x="84.8654%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="84.6154%" y="501" width="0.2404%" height="15" fill="rgb(238,162,48)" fg:x="1056" fg:w="3"/><text x="84.8654%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="84.6154%" y="485" width="0.2404%" height="15" fill="rgb(221,59,43)" fg:x="1056" fg:w="3"/><text x="84.8654%" y="495.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="84.6154%" y="469" width="0.2404%" height="15" fill="rgb(205,166,41)" fg:x="1056" fg:w="3"/><text x="84.8654%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.8558%" y="549" width="0.0801%" height="15" fill="rgb(241,186,40)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.9359%" y="549" width="0.0801%" height="15" fill="rgb(216,119,35)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.9359%" y="533" width="0.0801%" height="15" fill="rgb(208,68,38)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.8558%" y="581" width="0.2404%" height="15" fill="rgb(217,113,1)" fg:x="1059" fg:w="3"/><text x="85.1058%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="84.8558%" y="565" width="0.2404%" height="15" fill="rgb(242,153,3)" fg:x="1059" fg:w="3"/><text x="85.1058%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.0160%" y="549" width="0.0801%" height="15" fill="rgb(229,76,35)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.0160%" y="533" width="0.0801%" height="15" fill="rgb(229,125,34)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.0160%" y="517" width="0.0801%" height="15" fill="rgb(238,179,36)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0160%" y="501" width="0.0801%" height="15" fill="rgb(244,183,19)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.0962%" y="533" width="0.1603%" height="15" fill="rgb(216,85,49)" fg:x="1062" fg:w="2"/><text x="85.3462%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1763%" y="517" width="0.0801%" height="15" fill="rgb(208,161,47)" fg:x="1063" fg:w="1"/><text x="85.4263%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="85.1763%" y="501" width="0.0801%" height="15" fill="rgb(233,210,18)" fg:x="1063" fg:w="1"/><text x="85.4263%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2564%" y="533" width="0.0801%" height="15" fill="rgb(205,104,42)" fg:x="1064" fg:w="1"/><text x="85.5064%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="85.3365%" y="533" width="0.0801%" height="15" fill="rgb(248,90,43)" fg:x="1065" fg:w="1"/><text x="85.5865%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.3365%" y="517" width="0.0801%" height="15" fill="rgb(206,198,11)" fg:x="1065" fg:w="1"/><text x="85.5865%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3365%" y="501" width="0.0801%" height="15" fill="rgb(239,165,27)" fg:x="1065" fg:w="1"/><text x="85.5865%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.7372%" y="453" width="0.1603%" height="15" fill="rgb(246,44,32)" fg:x="1070" fg:w="2"/><text x="85.9872%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.7372%" y="437" width="0.1603%" height="15" fill="rgb(252,65,42)" fg:x="1070" fg:w="2"/><text x="85.9872%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="85.7372%" y="421" width="0.1603%" height="15" fill="rgb(246,197,18)" fg:x="1070" fg:w="2"/><text x="85.9872%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.0577%" y="437" width="0.0801%" height="15" fill="rgb(216,192,4)" fg:x="1074" fg:w="1"/><text x="86.3077%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="85.4968%" y="501" width="0.7212%" height="15" fill="rgb(208,117,10)" fg:x="1067" fg:w="9"/><text x="85.7468%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="85.4968%" y="485" width="0.7212%" height="15" fill="rgb(240,61,47)" fg:x="1067" fg:w="9"/><text x="85.7468%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="85.5769%" y="469" width="0.6410%" height="15" fill="rgb(228,178,21)" fg:x="1068" fg:w="8"/><text x="85.8269%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="85.8974%" y="453" width="0.3205%" height="15" fill="rgb(219,96,54)" fg:x="1072" fg:w="4"/><text x="86.1474%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.1378%" y="437" width="0.0801%" height="15" fill="rgb(250,177,24)" fg:x="1075" fg:w="1"/><text x="86.3878%" y="447.50"></text></g><g><title>engine::session::Session::flush (30 samples, 2.40%)</title><rect x="83.9744%" y="677" width="2.4038%" height="15" fill="rgb(242,154,46)" fg:x="1048" fg:w="30"/><text x="84.2244%" y="687.50">en..</text></g><g><title>engine::session::Session::save_changes (30 samples, 2.40%)</title><rect x="83.9744%" y="661" width="2.4038%" height="15" fill="rgb(226,176,29)" fg:x="1048" fg:w="30"/><text x="84.2244%" y="671.50">en..</text></g><g><title>engine::session::state::State::close (30 samples, 2.40%)</title><rect x="83.9744%" y="645" width="2.4038%" height="15" fill="rgb(226,29,2)" fg:x="1048" fg:w="30"/><text x="84.2244%" y="655.50">en..</text></g><g><title>engine::session::state::State::flush_entities (30 samples, 2.40%)</title><rect x="83.9744%" y="629" width="2.4038%" height="15" fill="rgb(237,104,14)" fg:x="1048" fg:w="30"/><text x="84.2244%" y="639.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (30 samples, 2.40%)</title><rect x="83.9744%" y="613" width="2.4038%" height="15" fill="rgb(245,207,31)" fg:x="1048" fg:w="30"/><text x="84.2244%" y="623.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (30 samples, 2.40%)</title><rect x="83.9744%" y="597" width="2.4038%" height="15" fill="rgb(229,211,45)" fg:x="1048" fg:w="30"/><text x="84.2244%" y="607.50">en..</text></g><g><title>kernel::model::any_entity_changes (16 samples, 1.28%)</title><rect x="85.0962%" y="581" width="1.2821%" height="15" fill="rgb(229,113,15)" fg:x="1062" fg:w="16"/><text x="85.3462%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.28%)</title><rect x="85.0962%" y="565" width="1.2821%" height="15" fill="rgb(237,147,15)" fg:x="1062" fg:w="16"/><text x="85.3462%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.28%)</title><rect x="85.0962%" y="549" width="1.2821%" height="15" fill="rgb(244,120,12)" fg:x="1062" fg:w="16"/><text x="85.3462%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="85.4167%" y="533" width="0.9615%" height="15" fill="rgb(205,120,12)" fg:x="1066" fg:w="12"/><text x="85.6667%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.88%)</title><rect x="85.4968%" y="517" width="0.8814%" height="15" fill="rgb(231,26,45)" fg:x="1067" fg:w="11"/><text x="85.7468%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="86.2179%" y="501" width="0.1603%" height="15" fill="rgb(246,98,1)" fg:x="1076" fg:w="2"/><text x="86.4679%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="86.2179%" y="485" width="0.1603%" height="15" fill="rgb(207,68,45)" fg:x="1076" fg:w="2"/><text x="86.4679%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="86.3782%" y="677" width="0.0801%" height="15" fill="rgb(231,27,38)" fg:x="1078" fg:w="1"/><text x="86.6282%" y="687.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="86.3782%" y="661" width="0.0801%" height="15" fill="rgb(214,223,3)" fg:x="1078" fg:w="1"/><text x="86.6282%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="86.4583%" y="645" width="0.0801%" height="15" fill="rgb(228,195,46)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.4583%" y="629" width="0.0801%" height="15" fill="rgb(231,100,42)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="639.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="86.4583%" y="613" width="0.0801%" height="15" fill="rgb(236,53,4)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.4583%" y="597" width="0.0801%" height="15" fill="rgb(230,152,12)" fg:x="1079" fg:w="1"/><text x="86.7083%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="86.4583%" y="661" width="0.1603%" height="15" fill="rgb(226,101,19)" fg:x="1079" fg:w="2"/><text x="86.7083%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="86.5385%" y="645" width="0.0801%" height="15" fill="rgb(250,149,32)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="86.5385%" y="629" width="0.0801%" height="15" fill="rgb(232,178,12)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.5385%" y="613" width="0.0801%" height="15" fill="rgb(246,151,17)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.5385%" y="597" width="0.0801%" height="15" fill="rgb(252,17,51)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.5385%" y="581" width="0.0801%" height="15" fill="rgb(250,207,23)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.5385%" y="565" width="0.0801%" height="15" fill="rgb(205,27,5)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.5385%" y="549" width="0.0801%" height="15" fill="rgb(224,32,19)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.5385%" y="533" width="0.0801%" height="15" fill="rgb(247,214,40)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="86.5385%" y="517" width="0.0801%" height="15" fill="rgb(239,199,17)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.5385%" y="501" width="0.0801%" height="15" fill="rgb(251,159,9)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.5385%" y="485" width="0.0801%" height="15" fill="rgb(225,78,32)" fg:x="1080" fg:w="1"/><text x="86.7885%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="86.6186%" y="645" width="0.0801%" height="15" fill="rgb(206,97,47)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="86.6186%" y="629" width="0.0801%" height="15" fill="rgb(227,107,4)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.6186%" y="613" width="0.0801%" height="15" fill="rgb(241,146,50)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.6186%" y="597" width="0.0801%" height="15" fill="rgb(232,92,30)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6186%" y="581" width="0.0801%" height="15" fill="rgb(222,0,40)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6186%" y="565" width="0.0801%" height="15" fill="rgb(219,54,33)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6186%" y="549" width="0.0801%" height="15" fill="rgb(226,209,28)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6186%" y="533" width="0.0801%" height="15" fill="rgb(254,205,35)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6186%" y="517" width="0.0801%" height="15" fill="rgb(230,159,3)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.6186%" y="501" width="0.0801%" height="15" fill="rgb(232,190,24)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.6186%" y="485" width="0.0801%" height="15" fill="rgb(217,227,44)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.6186%" y="469" width="0.0801%" height="15" fill="rgb(236,211,1)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6186%" y="453" width="0.0801%" height="15" fill="rgb(250,127,46)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6186%" y="437" width="0.0801%" height="15" fill="rgb(229,213,6)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.6186%" y="421" width="0.0801%" height="15" fill="rgb(237,15,36)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.6186%" y="405" width="0.0801%" height="15" fill="rgb(213,131,41)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.6186%" y="389" width="0.0801%" height="15" fill="rgb(225,82,44)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.6186%" y="373" width="0.0801%" height="15" fill="rgb(249,42,11)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6186%" y="357" width="0.0801%" height="15" fill="rgb(253,11,29)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.6987%" y="597" width="0.1603%" height="15" fill="rgb(206,8,54)" fg:x="1082" fg:w="2"/><text x="86.9487%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.6987%" y="581" width="0.1603%" height="15" fill="rgb(222,186,2)" fg:x="1082" fg:w="2"/><text x="86.9487%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.7788%" y="565" width="0.0801%" height="15" fill="rgb(221,206,53)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7788%" y="549" width="0.0801%" height="15" fill="rgb(230,150,21)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.7788%" y="533" width="0.0801%" height="15" fill="rgb(253,202,10)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7788%" y="517" width="0.0801%" height="15" fill="rgb(238,109,40)" fg:x="1083" fg:w="1"/><text x="87.0288%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8590%" y="565" width="0.0801%" height="15" fill="rgb(247,120,22)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8590%" y="549" width="0.0801%" height="15" fill="rgb(207,43,30)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.8590%" y="533" width="0.0801%" height="15" fill="rgb(213,211,24)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.8590%" y="517" width="0.0801%" height="15" fill="rgb(239,73,39)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.8590%" y="501" width="0.0801%" height="15" fill="rgb(245,182,19)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.8590%" y="485" width="0.0801%" height="15" fill="rgb(247,143,26)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.8590%" y="469" width="0.0801%" height="15" fill="rgb(228,191,23)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.8590%" y="453" width="0.0801%" height="15" fill="rgb(253,165,31)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.8590%" y="437" width="0.0801%" height="15" fill="rgb(234,138,20)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.8590%" y="421" width="0.0801%" height="15" fill="rgb(218,191,29)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.8590%" y="405" width="0.0801%" height="15" fill="rgb(221,157,19)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.8590%" y="389" width="0.0801%" height="15" fill="rgb(237,26,42)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.8590%" y="373" width="0.0801%" height="15" fill="rgb(220,163,24)" fg:x="1084" fg:w="1"/><text x="87.1090%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9391%" y="565" width="0.0801%" height="15" fill="rgb(242,115,20)" fg:x="1085" fg:w="1"/><text x="87.1891%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.9391%" y="549" width="0.0801%" height="15" fill="rgb(210,206,9)" fg:x="1085" fg:w="1"/><text x="87.1891%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9391%" y="533" width="0.0801%" height="15" fill="rgb(208,71,17)" fg:x="1085" fg:w="1"/><text x="87.1891%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9391%" y="517" width="0.0801%" height="15" fill="rgb(233,7,5)" fg:x="1085" fg:w="1"/><text x="87.1891%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="86.6987%" y="629" width="0.4808%" height="15" fill="rgb(207,92,33)" fg:x="1082" fg:w="6"/><text x="86.9487%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="86.6987%" y="613" width="0.4808%" height="15" fill="rgb(218,87,9)" fg:x="1082" fg:w="6"/><text x="86.9487%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="86.8590%" y="597" width="0.3205%" height="15" fill="rgb(219,47,37)" fg:x="1084" fg:w="4"/><text x="87.1090%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="86.8590%" y="581" width="0.3205%" height="15" fill="rgb(221,152,34)" fg:x="1084" fg:w="4"/><text x="87.1090%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.0192%" y="565" width="0.1603%" height="15" fill="rgb(235,176,21)" fg:x="1086" fg:w="2"/><text x="87.2692%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.0192%" y="549" width="0.1603%" height="15" fill="rgb(232,212,21)" fg:x="1086" fg:w="2"/><text x="87.2692%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="87.0192%" y="533" width="0.1603%" height="15" fill="rgb(245,82,39)" fg:x="1086" fg:w="2"/><text x="87.2692%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.0192%" y="517" width="0.1603%" height="15" fill="rgb(241,52,51)" fg:x="1086" fg:w="2"/><text x="87.2692%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.0994%" y="501" width="0.0801%" height="15" fill="rgb(219,91,24)" fg:x="1087" fg:w="1"/><text x="87.3494%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0994%" y="485" width="0.0801%" height="15" fill="rgb(241,142,12)" fg:x="1087" fg:w="1"/><text x="87.3494%" y="495.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="86.6987%" y="645" width="0.5609%" height="15" fill="rgb(230,27,9)" fg:x="1082" fg:w="7"/><text x="86.9487%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="87.1795%" y="629" width="0.0801%" height="15" fill="rgb(249,181,32)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.1795%" y="613" width="0.0801%" height="15" fill="rgb(230,107,3)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="87.1795%" y="597" width="0.0801%" height="15" fill="rgb(246,204,14)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="607.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="87.1795%" y="581" width="0.0801%" height="15" fill="rgb(213,192,47)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="87.2596%" y="629" width="0.0801%" height="15" fill="rgb(240,44,36)" fg:x="1089" fg:w="1"/><text x="87.5096%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.2596%" y="613" width="0.0801%" height="15" fill="rgb(244,209,38)" fg:x="1089" fg:w="1"/><text x="87.5096%" y="623.50"></text></g><g><title>plugins_core::build::Build::holding (12 samples, 0.96%)</title><rect x="86.4583%" y="677" width="0.9615%" height="15" fill="rgb(219,34,37)" fg:x="1079" fg:w="12"/><text x="86.7083%" y="687.50"></text></g><g><title>plugins_core::tools::set_container (10 samples, 0.80%)</title><rect x="86.6186%" y="661" width="0.8013%" height="15" fill="rgb(210,28,6)" fg:x="1081" fg:w="10"/><text x="86.8686%" y="671.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="87.2596%" y="645" width="0.1603%" height="15" fill="rgb(244,110,52)" fg:x="1089" fg:w="2"/><text x="87.5096%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.3397%" y="629" width="0.0801%" height="15" fill="rgb(254,124,47)" fg:x="1090" fg:w="1"/><text x="87.5897%" y="639.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="87.3397%" y="613" width="0.0801%" height="15" fill="rgb(254,110,13)" fg:x="1090" fg:w="1"/><text x="87.5897%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.3397%" y="597" width="0.0801%" height="15" fill="rgb(252,57,21)" fg:x="1090" fg:w="1"/><text x="87.5897%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="87.3397%" y="581" width="0.0801%" height="15" fill="rgb(242,60,45)" fg:x="1090" fg:w="1"/><text x="87.5897%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.3397%" y="565" width="0.0801%" height="15" fill="rgb(234,49,30)" fg:x="1090" fg:w="1"/><text x="87.5897%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.3397%" y="549" width="0.0801%" height="15" fill="rgb(218,98,6)" fg:x="1090" fg:w="1"/><text x="87.5897%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="87.4199%" y="645" width="0.0801%" height="15" fill="rgb(220,174,29)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.4199%" y="629" width="0.0801%" height="15" fill="rgb(236,163,23)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.4199%" y="613" width="0.0801%" height="15" fill="rgb(242,114,45)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.4199%" y="597" width="0.0801%" height="15" fill="rgb(232,10,53)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.4199%" y="581" width="0.0801%" height="15" fill="rgb(245,108,29)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.4199%" y="565" width="0.0801%" height="15" fill="rgb(240,89,53)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.4199%" y="549" width="0.0801%" height="15" fill="rgb(226,60,45)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.4199%" y="533" width="0.0801%" height="15" fill="rgb(230,41,44)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.4199%" y="517" width="0.0801%" height="15" fill="rgb(230,26,20)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.4199%" y="501" width="0.0801%" height="15" fill="rgb(237,170,32)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.4199%" y="485" width="0.0801%" height="15" fill="rgb(212,35,42)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.4199%" y="469" width="0.0801%" height="15" fill="rgb(227,31,34)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="87.5000%" y="629" width="0.0801%" height="15" fill="rgb(216,19,18)" fg:x="1092" fg:w="1"/><text x="87.7500%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.5000%" y="613" width="0.0801%" height="15" fill="rgb(211,133,42)" fg:x="1092" fg:w="1"/><text x="87.7500%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="87.4199%" y="677" width="0.2404%" height="15" fill="rgb(244,66,13)" fg:x="1091" fg:w="3"/><text x="87.6699%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="87.4199%" y="661" width="0.2404%" height="15" fill="rgb(218,185,50)" fg:x="1091" fg:w="3"/><text x="87.6699%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="87.5000%" y="645" width="0.1603%" height="15" fill="rgb(219,149,13)" fg:x="1092" fg:w="2"/><text x="87.7500%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.5801%" y="629" width="0.0801%" height="15" fill="rgb(221,125,0)" fg:x="1093" fg:w="1"/><text x="87.8301%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.5801%" y="613" width="0.0801%" height="15" fill="rgb(247,126,27)" fg:x="1093" fg:w="1"/><text x="87.8301%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5801%" y="597" width="0.0801%" height="15" fill="rgb(250,138,30)" fg:x="1093" fg:w="1"/><text x="87.8301%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.5801%" y="581" width="0.0801%" height="15" fill="rgb(230,151,9)" fg:x="1093" fg:w="1"/><text x="87.8301%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5801%" y="565" width="0.0801%" height="15" fill="rgb(233,80,38)" fg:x="1093" fg:w="1"/><text x="87.8301%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="87.6603%" y="677" width="0.0801%" height="15" fill="rgb(232,68,43)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="87.6603%" y="661" width="0.0801%" height="15" fill="rgb(254,5,50)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.6603%" y="645" width="0.0801%" height="15" fill="rgb(225,45,5)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="87.7404%" y="661" width="0.1603%" height="15" fill="rgb(239,22,3)" fg:x="1095" fg:w="2"/><text x="87.9904%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="87.8205%" y="645" width="0.0801%" height="15" fill="rgb(243,129,0)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.8205%" y="629" width="0.0801%" height="15" fill="rgb(223,164,0)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.8205%" y="613" width="0.0801%" height="15" fill="rgb(221,46,29)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.8205%" y="597" width="0.0801%" height="15" fill="rgb(205,97,47)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.8205%" y="581" width="0.0801%" height="15" fill="rgb(249,14,8)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.8205%" y="565" width="0.0801%" height="15" fill="rgb(216,77,3)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.8205%" y="549" width="0.0801%" height="15" fill="rgb(206,168,54)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.8205%" y="533" width="0.0801%" height="15" fill="rgb(236,3,41)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.8205%" y="517" width="0.0801%" height="15" fill="rgb(231,132,24)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.8205%" y="501" width="0.0801%" height="15" fill="rgb(227,221,40)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.8205%" y="485" width="0.0801%" height="15" fill="rgb(233,151,11)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.8205%" y="469" width="0.0801%" height="15" fill="rgb(247,81,35)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.8205%" y="453" width="0.0801%" height="15" fill="rgb(243,128,48)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.8205%" y="437" width="0.0801%" height="15" fill="rgb(253,16,10)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="87.9006%" y="645" width="0.0801%" height="15" fill="rgb(228,67,27)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="87.9006%" y="629" width="0.0801%" height="15" fill="rgb(231,105,25)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.9006%" y="613" width="0.0801%" height="15" fill="rgb(213,166,47)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.9006%" y="597" width="0.0801%" height="15" fill="rgb(209,27,10)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.9006%" y="581" width="0.0801%" height="15" fill="rgb(241,44,30)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.9006%" y="565" width="0.0801%" height="15" fill="rgb(223,216,15)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.9006%" y="549" width="0.0801%" height="15" fill="rgb(227,14,7)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="87.9808%" y="645" width="0.0801%" height="15" fill="rgb(237,14,5)" fg:x="1098" fg:w="1"/><text x="88.2308%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="88.0609%" y="645" width="0.0801%" height="15" fill="rgb(232,14,36)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="655.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="88.0609%" y="629" width="0.0801%" height="15" fill="rgb(234,0,38)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.0609%" y="613" width="0.0801%" height="15" fill="rgb(207,170,14)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1410%" y="565" width="0.0801%" height="15" fill="rgb(252,45,13)" fg:x="1100" fg:w="1"/><text x="88.3910%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1410%" y="549" width="0.0801%" height="15" fill="rgb(213,142,7)" fg:x="1100" fg:w="1"/><text x="88.3910%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (64 samples, 5.13%)</title><rect x="83.1731%" y="693" width="5.1282%" height="15" fill="rgb(216,157,23)" fg:x="1038" fg:w="64"/><text x="83.4231%" y="703.50">plugin..</text></g><g><title>plugins_core::build::Build::occupying (7 samples, 0.56%)</title><rect x="87.7404%" y="677" width="0.5609%" height="15" fill="rgb(212,145,33)" fg:x="1095" fg:w="7"/><text x="87.9904%" y="687.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.40%)</title><rect x="87.9006%" y="661" width="0.4006%" height="15" fill="rgb(233,26,13)" fg:x="1097" fg:w="5"/><text x="88.1506%" y="671.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="88.1410%" y="645" width="0.1603%" height="15" fill="rgb(219,196,19)" fg:x="1100" fg:w="2"/><text x="88.3910%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="88.1410%" y="629" width="0.1603%" height="15" fill="rgb(246,56,21)" fg:x="1100" fg:w="2"/><text x="88.3910%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="88.1410%" y="613" width="0.1603%" height="15" fill="rgb(222,28,53)" fg:x="1100" fg:w="2"/><text x="88.3910%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.1410%" y="597" width="0.1603%" height="15" fill="rgb(224,5,27)" fg:x="1100" fg:w="2"/><text x="88.3910%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.1410%" y="581" width="0.1603%" height="15" fill="rgb(220,153,33)" fg:x="1100" fg:w="2"/><text x="88.3910%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.2212%" y="565" width="0.0801%" height="15" fill="rgb(226,58,19)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2212%" y="549" width="0.0801%" height="15" fill="rgb(239,112,23)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.2212%" y="533" width="0.0801%" height="15" fill="rgb(251,213,20)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2212%" y="517" width="0.0801%" height="15" fill="rgb(215,181,21)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.2212%" y="501" width="0.0801%" height="15" fill="rgb(240,8,35)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2212%" y="485" width="0.0801%" height="15" fill="rgb(232,203,3)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.2212%" y="469" width="0.0801%" height="15" fill="rgb(214,202,43)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="88.3013%" y="661" width="0.0801%" height="15" fill="rgb(254,35,11)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="671.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="88.3013%" y="645" width="0.0801%" height="15" fill="rgb(239,173,13)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.3013%" y="629" width="0.0801%" height="15" fill="rgb(220,141,0)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.3013%" y="613" width="0.0801%" height="15" fill="rgb(210,98,12)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.3013%" y="597" width="0.0801%" height="15" fill="rgb(254,153,22)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.3013%" y="581" width="0.0801%" height="15" fill="rgb(247,223,17)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.3013%" y="565" width="0.0801%" height="15" fill="rgb(246,56,7)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="88.3013%" y="549" width="0.0801%" height="15" fill="rgb(240,226,12)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="88.3013%" y="533" width="0.0801%" height="15" fill="rgb(205,87,46)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="88.3013%" y="517" width="0.0801%" height="15" fill="rgb(245,214,51)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="88.3013%" y="501" width="0.0801%" height="15" fill="rgb(223,172,33)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="88.3013%" y="485" width="0.0801%" height="15" fill="rgb(227,203,34)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="88.3814%" y="661" width="0.0801%" height="15" fill="rgb(248,143,44)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.4615%" y="645" width="0.0801%" height="15" fill="rgb(226,162,5)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.4615%" y="629" width="0.0801%" height="15" fill="rgb(211,143,1)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.5417%" y="645" width="0.0801%" height="15" fill="rgb(224,96,15)" fg:x="1105" fg:w="1"/><text x="88.7917%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.5417%" y="629" width="0.0801%" height="15" fill="rgb(222,4,38)" fg:x="1105" fg:w="1"/><text x="88.7917%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.5417%" y="613" width="0.0801%" height="15" fill="rgb(253,228,15)" fg:x="1105" fg:w="1"/><text x="88.7917%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5417%" y="597" width="0.0801%" height="15" fill="rgb(242,194,12)" fg:x="1105" fg:w="1"/><text x="88.7917%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5417%" y="581" width="0.0801%" height="15" fill="rgb(214,177,31)" fg:x="1105" fg:w="1"/><text x="88.7917%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (5 samples, 0.40%)</title><rect x="88.3013%" y="693" width="0.4006%" height="15" fill="rgb(226,58,51)" fg:x="1102" fg:w="5"/><text x="88.5513%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (5 samples, 0.40%)</title><rect x="88.3013%" y="677" width="0.4006%" height="15" fill="rgb(250,119,16)" fg:x="1102" fg:w="5"/><text x="88.5513%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="88.4615%" y="661" width="0.2404%" height="15" fill="rgb(223,128,53)" fg:x="1104" fg:w="3"/><text x="88.7115%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6218%" y="645" width="0.0801%" height="15" fill="rgb(251,199,15)" fg:x="1106" fg:w="1"/><text x="88.8718%" y="655.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="88.7821%" y="645" width="0.0801%" height="15" fill="rgb(235,168,42)" fg:x="1108" fg:w="1"/><text x="89.0321%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="88.7821%" y="629" width="0.0801%" height="15" fill="rgb(250,210,17)" fg:x="1108" fg:w="1"/><text x="89.0321%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="88.7821%" y="613" width="0.0801%" height="15" fill="rgb(226,36,41)" fg:x="1108" fg:w="1"/><text x="89.0321%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="88.8622%" y="629" width="0.0801%" height="15" fill="rgb(225,87,10)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.8622%" y="613" width="0.0801%" height="15" fill="rgb(228,83,9)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="88.8622%" y="597" width="0.0801%" height="15" fill="rgb(225,16,36)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="88.8622%" y="581" width="0.0801%" height="15" fill="rgb(242,198,13)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="88.8622%" y="565" width="0.0801%" height="15" fill="rgb(239,25,51)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.8622%" y="549" width="0.0801%" height="15" fill="rgb(239,28,37)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.8622%" y="533" width="0.0801%" height="15" fill="rgb(234,70,17)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="88.8622%" y="517" width="0.0801%" height="15" fill="rgb(231,215,53)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.8622%" y="501" width="0.0801%" height="15" fill="rgb(218,140,42)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8622%" y="485" width="0.0801%" height="15" fill="rgb(233,227,45)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8622%" y="469" width="0.0801%" height="15" fill="rgb(225,189,21)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="88.8622%" y="453" width="0.0801%" height="15" fill="rgb(237,176,54)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="88.7821%" y="661" width="0.2404%" height="15" fill="rgb(215,131,46)" fg:x="1108" fg:w="3"/><text x="89.0321%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="88.8622%" y="645" width="0.1603%" height="15" fill="rgb(218,95,20)" fg:x="1109" fg:w="2"/><text x="89.1122%" y="655.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="88.9423%" y="629" width="0.0801%" height="15" fill="rgb(208,198,12)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.9423%" y="613" width="0.0801%" height="15" fill="rgb(239,107,50)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.48%)</title><rect x="88.7019%" y="693" width="0.4808%" height="15" fill="rgb(240,217,37)" fg:x="1107" fg:w="6"/><text x="88.9519%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="88.7019%" y="677" width="0.4808%" height="15" fill="rgb(242,197,49)" fg:x="1107" fg:w="6"/><text x="88.9519%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="89.0224%" y="661" width="0.1603%" height="15" fill="rgb(219,171,17)" fg:x="1111" fg:w="2"/><text x="89.2724%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="89.0224%" y="645" width="0.1603%" height="15" fill="rgb(209,81,40)" fg:x="1111" fg:w="2"/><text x="89.2724%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="89.0224%" y="629" width="0.1603%" height="15" fill="rgb(237,156,30)" fg:x="1111" fg:w="2"/><text x="89.2724%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.0224%" y="613" width="0.1603%" height="15" fill="rgb(212,127,16)" fg:x="1111" fg:w="2"/><text x="89.2724%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1026%" y="597" width="0.0801%" height="15" fill="rgb(226,66,32)" fg:x="1112" fg:w="1"/><text x="89.3526%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="89.1827%" y="645" width="0.0801%" height="15" fill="rgb(245,22,46)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="89.1827%" y="629" width="0.0801%" height="15" fill="rgb(210,112,21)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.1827%" y="613" width="0.0801%" height="15" fill="rgb(207,118,39)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.1827%" y="597" width="0.0801%" height="15" fill="rgb(205,206,35)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1827%" y="581" width="0.0801%" height="15" fill="rgb(222,120,2)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.1827%" y="565" width="0.0801%" height="15" fill="rgb(205,38,18)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1827%" y="549" width="0.0801%" height="15" fill="rgb(226,61,2)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="89.1827%" y="533" width="0.0801%" height="15" fill="rgb(242,161,23)" fg:x="1113" fg:w="1"/><text x="89.4327%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="89.1827%" y="677" width="0.1603%" height="15" fill="rgb(213,13,52)" fg:x="1113" fg:w="2"/><text x="89.4327%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="89.1827%" y="661" width="0.1603%" height="15" fill="rgb(246,209,47)" fg:x="1113" fg:w="2"/><text x="89.4327%" y="671.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="89.2628%" y="645" width="0.0801%" height="15" fill="rgb(214,41,3)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2628%" y="629" width="0.0801%" height="15" fill="rgb(236,119,38)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2628%" y="613" width="0.0801%" height="15" fill="rgb(218,50,11)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="89.2628%" y="597" width="0.0801%" height="15" fill="rgb(228,38,11)" fg:x="1114" fg:w="1"/><text x="89.5128%" y="607.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (117 samples, 9.38%)</title><rect x="80.0481%" y="709" width="9.3750%" height="15" fill="rgb(212,13,9)" fg:x="999" fg:w="117"/><text x="80.2981%" y="719.50">&lt;tests::Holdi..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (3 samples, 0.24%)</title><rect x="89.1827%" y="693" width="0.2404%" height="15" fill="rgb(208,211,9)" fg:x="1113" fg:w="3"/><text x="89.4327%" y="703.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="89.3429%" y="677" width="0.0801%" height="15" fill="rgb(239,39,32)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="89.3429%" y="661" width="0.0801%" height="15" fill="rgb(254,179,26)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="89.3429%" y="645" width="0.0801%" height="15" fill="rgb(249,165,28)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="89.3429%" y="629" width="0.0801%" height="15" fill="rgb(225,59,50)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.3429%" y="613" width="0.0801%" height="15" fill="rgb(209,122,5)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.3429%" y="597" width="0.0801%" height="15" fill="rgb(214,65,34)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.3429%" y="581" width="0.0801%" height="15" fill="rgb(249,183,32)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="89.4231%" y="709" width="0.0801%" height="15" fill="rgb(218,122,24)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="89.4231%" y="693" width="0.0801%" height="15" fill="rgb(224,109,18)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="89.4231%" y="677" width="0.0801%" height="15" fill="rgb(210,68,50)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.4231%" y="661" width="0.0801%" height="15" fill="rgb(212,184,34)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.4231%" y="645" width="0.0801%" height="15" fill="rgb(238,105,48)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="89.5032%" y="693" width="0.0801%" height="15" fill="rgb(222,134,54)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5032%" y="677" width="0.0801%" height="15" fill="rgb(246,24,43)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5032%" y="661" width="0.0801%" height="15" fill="rgb(227,169,22)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.5032%" y="645" width="0.0801%" height="15" fill="rgb(253,152,4)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.5032%" y="629" width="0.0801%" height="15" fill="rgb(219,158,36)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.5032%" y="613" width="0.0801%" height="15" fill="rgb(251,128,40)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="89.5032%" y="597" width="0.0801%" height="15" fill="rgb(254,101,39)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.5032%" y="581" width="0.0801%" height="15" fill="rgb(221,168,40)" fg:x="1117" fg:w="1"/><text x="89.7532%" y="591.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="89.5833%" y="693" width="0.0801%" height="15" fill="rgb(221,14,27)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="703.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="89.5833%" y="677" width="0.0801%" height="15" fill="rgb(207,36,43)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="687.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="89.5833%" y="661" width="0.0801%" height="15" fill="rgb(240,172,53)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="671.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="89.5833%" y="645" width="0.0801%" height="15" fill="rgb(241,138,43)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="655.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="89.5833%" y="629" width="0.0801%" height="15" fill="rgb(227,78,19)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="639.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="89.5833%" y="613" width="0.0801%" height="15" fill="rgb(215,127,44)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="623.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="89.5833%" y="597" width="0.0801%" height="15" fill="rgb(227,13,10)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="607.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="89.5833%" y="581" width="0.0801%" height="15" fill="rgb(249,177,6)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="89.7436%" y="613" width="0.0801%" height="15" fill="rgb(215,154,26)" fg:x="1120" fg:w="1"/><text x="89.9936%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.7436%" y="597" width="0.0801%" height="15" fill="rgb(250,168,20)" fg:x="1120" fg:w="1"/><text x="89.9936%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.7436%" y="581" width="0.0801%" height="15" fill="rgb(222,53,38)" fg:x="1120" fg:w="1"/><text x="89.9936%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="89.7436%" y="565" width="0.0801%" height="15" fill="rgb(245,154,5)" fg:x="1120" fg:w="1"/><text x="89.9936%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.8237%" y="597" width="0.0801%" height="15" fill="rgb(214,89,50)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.8237%" y="581" width="0.0801%" height="15" fill="rgb(232,73,14)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.8237%" y="565" width="0.0801%" height="15" fill="rgb(230,101,20)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.9038%" y="581" width="0.0801%" height="15" fill="rgb(208,56,28)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="89.9038%" y="565" width="0.0801%" height="15" fill="rgb(247,205,22)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.9038%" y="549" width="0.0801%" height="15" fill="rgb(252,109,51)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.9038%" y="533" width="0.0801%" height="15" fill="rgb(220,40,24)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.9038%" y="517" width="0.0801%" height="15" fill="rgb(251,108,7)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.9038%" y="501" width="0.0801%" height="15" fill="rgb(238,102,51)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.9038%" y="485" width="0.0801%" height="15" fill="rgb(219,149,34)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.9038%" y="469" width="0.0801%" height="15" fill="rgb(239,70,0)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="479.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="89.9038%" y="453" width="0.0801%" height="15" fill="rgb(246,214,23)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="89.9038%" y="437" width="0.0801%" height="15" fill="rgb(239,221,51)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.0641%" y="565" width="0.0801%" height="15" fill="rgb(254,62,14)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.1442%" y="565" width="0.0801%" height="15" fill="rgb(253,57,33)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.1442%" y="549" width="0.0801%" height="15" fill="rgb(229,34,6)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.2244%" y="549" width="0.0801%" height="15" fill="rgb(235,191,23)" fg:x="1126" fg:w="1"/><text x="90.4744%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.2244%" y="533" width="0.0801%" height="15" fill="rgb(217,207,27)" fg:x="1126" fg:w="1"/><text x="90.4744%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.2244%" y="517" width="0.0801%" height="15" fill="rgb(232,41,44)" fg:x="1126" fg:w="1"/><text x="90.4744%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="89.9840%" y="581" width="0.4006%" height="15" fill="rgb(221,188,19)" fg:x="1123" fg:w="5"/><text x="90.2340%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="90.2244%" y="565" width="0.1603%" height="15" fill="rgb(245,180,45)" fg:x="1126" fg:w="2"/><text x="90.4744%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="90.3045%" y="549" width="0.0801%" height="15" fill="rgb(250,220,42)" fg:x="1127" fg:w="1"/><text x="90.5545%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.3045%" y="533" width="0.0801%" height="15" fill="rgb(234,16,34)" fg:x="1127" fg:w="1"/><text x="90.5545%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.3045%" y="517" width="0.0801%" height="15" fill="rgb(233,217,23)" fg:x="1127" fg:w="1"/><text x="90.5545%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="89.9038%" y="597" width="0.5609%" height="15" fill="rgb(209,22,46)" fg:x="1122" fg:w="7"/><text x="90.1538%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.3846%" y="581" width="0.0801%" height="15" fill="rgb(213,101,18)" fg:x="1128" fg:w="1"/><text x="90.6346%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="89.8237%" y="613" width="0.7212%" height="15" fill="rgb(215,179,52)" fg:x="1121" fg:w="9"/><text x="90.0737%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.4647%" y="597" width="0.0801%" height="15" fill="rgb(223,50,25)" fg:x="1129" fg:w="1"/><text x="90.7147%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.4647%" y="581" width="0.0801%" height="15" fill="rgb(224,51,44)" fg:x="1129" fg:w="1"/><text x="90.7147%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.4647%" y="565" width="0.0801%" height="15" fill="rgb(224,13,54)" fg:x="1129" fg:w="1"/><text x="90.7147%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="90.4647%" y="549" width="0.0801%" height="15" fill="rgb(219,58,47)" fg:x="1129" fg:w="1"/><text x="90.7147%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.4647%" y="533" width="0.0801%" height="15" fill="rgb(246,124,34)" fg:x="1129" fg:w="1"/><text x="90.7147%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="90.4647%" y="517" width="0.0801%" height="15" fill="rgb(245,109,25)" fg:x="1129" fg:w="1"/><text x="90.7147%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.88%)</title><rect x="89.7436%" y="629" width="0.8814%" height="15" fill="rgb(235,48,23)" fg:x="1120" fg:w="11"/><text x="89.9936%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.5449%" y="613" width="0.0801%" height="15" fill="rgb(229,203,36)" fg:x="1130" fg:w="1"/><text x="90.7949%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.5449%" y="597" width="0.0801%" height="15" fill="rgb(234,180,9)" fg:x="1130" fg:w="1"/><text x="90.7949%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6250%" y="565" width="0.0801%" height="15" fill="rgb(228,98,45)" fg:x="1131" fg:w="1"/><text x="90.8750%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.6250%" y="629" width="0.2404%" height="15" fill="rgb(240,24,36)" fg:x="1131" fg:w="3"/><text x="90.8750%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="90.6250%" y="613" width="0.2404%" height="15" fill="rgb(227,154,19)" fg:x="1131" fg:w="3"/><text x="90.8750%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.6250%" y="597" width="0.2404%" height="15" fill="rgb(231,2,48)" fg:x="1131" fg:w="3"/><text x="90.8750%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.6250%" y="581" width="0.2404%" height="15" fill="rgb(219,216,0)" fg:x="1131" fg:w="3"/><text x="90.8750%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="90.7051%" y="565" width="0.1603%" height="15" fill="rgb(251,88,0)" fg:x="1132" fg:w="2"/><text x="90.9551%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="90.7853%" y="549" width="0.0801%" height="15" fill="rgb(242,45,45)" fg:x="1133" fg:w="1"/><text x="91.0353%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.7853%" y="533" width="0.0801%" height="15" fill="rgb(218,149,45)" fg:x="1133" fg:w="1"/><text x="91.0353%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.7853%" y="517" width="0.0801%" height="15" fill="rgb(247,194,10)" fg:x="1133" fg:w="1"/><text x="91.0353%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.8654%" y="565" width="0.0801%" height="15" fill="rgb(234,33,37)" fg:x="1134" fg:w="1"/><text x="91.1154%" y="575.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="90.9455%" y="549" width="0.3205%" height="15" fill="rgb(218,61,13)" fg:x="1135" fg:w="4"/><text x="91.1955%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.2660%" y="533" width="0.0801%" height="15" fill="rgb(210,80,52)" fg:x="1139" fg:w="1"/><text x="91.5160%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.2660%" y="517" width="0.0801%" height="15" fill="rgb(218,203,27)" fg:x="1139" fg:w="1"/><text x="91.5160%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3462%" y="517" width="0.0801%" height="15" fill="rgb(209,126,33)" fg:x="1140" fg:w="1"/><text x="91.5962%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.4263%" y="517" width="0.0801%" height="15" fill="rgb(234,173,41)" fg:x="1141" fg:w="1"/><text x="91.6763%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.4263%" y="501" width="0.0801%" height="15" fill="rgb(228,166,9)" fg:x="1141" fg:w="1"/><text x="91.6763%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5064%" y="485" width="0.0801%" height="15" fill="rgb(208,124,43)" fg:x="1142" fg:w="1"/><text x="91.7564%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="90.8654%" y="597" width="0.8013%" height="15" fill="rgb(212,154,38)" fg:x="1134" fg:w="10"/><text x="91.1154%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="90.8654%" y="581" width="0.8013%" height="15" fill="rgb(246,179,35)" fg:x="1134" fg:w="10"/><text x="91.1154%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="90.9455%" y="565" width="0.7212%" height="15" fill="rgb(251,3,50)" fg:x="1135" fg:w="9"/><text x="91.1955%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="91.2660%" y="549" width="0.4006%" height="15" fill="rgb(219,96,8)" fg:x="1139" fg:w="5"/><text x="91.5160%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="91.3462%" y="533" width="0.3205%" height="15" fill="rgb(251,216,33)" fg:x="1140" fg:w="4"/><text x="91.5962%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="91.5064%" y="517" width="0.1603%" height="15" fill="rgb(243,145,29)" fg:x="1142" fg:w="2"/><text x="91.7564%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="91.5064%" y="501" width="0.1603%" height="15" fill="rgb(210,75,20)" fg:x="1142" fg:w="2"/><text x="91.7564%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.5865%" y="485" width="0.0801%" height="15" fill="rgb(235,56,8)" fg:x="1143" fg:w="1"/><text x="91.8365%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (13 samples, 1.04%)</title><rect x="90.8654%" y="613" width="1.0417%" height="15" fill="rgb(226,175,49)" fg:x="1134" fg:w="13"/><text x="91.1154%" y="623.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="91.6667%" y="597" width="0.2404%" height="15" fill="rgb(242,204,23)" fg:x="1144" fg:w="3"/><text x="91.9167%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="91.6667%" y="581" width="0.2404%" height="15" fill="rgb(225,104,24)" fg:x="1144" fg:w="3"/><text x="91.9167%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="91.7468%" y="565" width="0.1603%" height="15" fill="rgb(253,34,1)" fg:x="1145" fg:w="2"/><text x="91.9968%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="91.8269%" y="549" width="0.0801%" height="15" fill="rgb(233,199,23)" fg:x="1146" fg:w="1"/><text x="92.0769%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.9872%" y="581" width="0.1603%" height="15" fill="rgb(247,7,51)" fg:x="1148" fg:w="2"/><text x="92.2372%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="92.1474%" y="581" width="0.2404%" height="15" fill="rgb(214,146,12)" fg:x="1150" fg:w="3"/><text x="92.3974%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.2276%" y="565" width="0.1603%" height="15" fill="rgb(234,181,43)" fg:x="1151" fg:w="2"/><text x="92.4776%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="92.2276%" y="549" width="0.1603%" height="15" fill="rgb(239,148,6)" fg:x="1151" fg:w="2"/><text x="92.4776%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="92.3878%" y="581" width="0.0801%" height="15" fill="rgb(206,151,17)" fg:x="1153" fg:w="1"/><text x="92.6378%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="92.3878%" y="565" width="0.0801%" height="15" fill="rgb(213,215,10)" fg:x="1153" fg:w="1"/><text x="92.6378%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5481%" y="533" width="0.0801%" height="15" fill="rgb(215,220,44)" fg:x="1155" fg:w="1"/><text x="92.7981%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5481%" y="517" width="0.0801%" height="15" fill="rgb(245,205,37)" fg:x="1155" fg:w="1"/><text x="92.7981%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5481%" y="501" width="0.0801%" height="15" fill="rgb(245,130,43)" fg:x="1155" fg:w="1"/><text x="92.7981%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="92.6282%" y="533" width="0.1603%" height="15" fill="rgb(231,227,38)" fg:x="1156" fg:w="2"/><text x="92.8782%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="92.6282%" y="517" width="0.1603%" height="15" fill="rgb(233,185,4)" fg:x="1156" fg:w="2"/><text x="92.8782%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="92.6282%" y="501" width="0.1603%" height="15" fill="rgb(224,154,43)" fg:x="1156" fg:w="2"/><text x="92.8782%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.6282%" y="485" width="0.1603%" height="15" fill="rgb(235,156,15)" fg:x="1156" fg:w="2"/><text x="92.8782%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7083%" y="469" width="0.0801%" height="15" fill="rgb(211,55,43)" fg:x="1157" fg:w="1"/><text x="92.9583%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="92.8686%" y="485" width="0.0801%" height="15" fill="rgb(247,149,40)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9487%" y="469" width="0.0801%" height="15" fill="rgb(232,171,16)" fg:x="1160" fg:w="1"/><text x="93.1987%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9487%" y="453" width="0.0801%" height="15" fill="rgb(215,117,49)" fg:x="1160" fg:w="1"/><text x="93.1987%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9487%" y="437" width="0.0801%" height="15" fill="rgb(246,194,11)" fg:x="1160" fg:w="1"/><text x="93.1987%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="92.4679%" y="565" width="0.6410%" height="15" fill="rgb(242,101,44)" fg:x="1154" fg:w="8"/><text x="92.7179%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="92.4679%" y="549" width="0.6410%" height="15" fill="rgb(226,174,6)" fg:x="1154" fg:w="8"/><text x="92.7179%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="92.7885%" y="533" width="0.3205%" height="15" fill="rgb(213,150,20)" fg:x="1158" fg:w="4"/><text x="93.0385%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="92.8686%" y="517" width="0.2404%" height="15" fill="rgb(222,124,42)" fg:x="1159" fg:w="3"/><text x="93.1186%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="92.8686%" y="501" width="0.2404%" height="15" fill="rgb(250,19,47)" fg:x="1159" fg:w="3"/><text x="93.1186%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="92.9487%" y="485" width="0.1603%" height="15" fill="rgb(241,217,19)" fg:x="1160" fg:w="2"/><text x="93.1987%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="93.0288%" y="469" width="0.0801%" height="15" fill="rgb(207,210,34)" fg:x="1161" fg:w="1"/><text x="93.2788%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0288%" y="453" width="0.0801%" height="15" fill="rgb(244,45,4)" fg:x="1161" fg:w="1"/><text x="93.2788%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="93.1090%" y="565" width="0.1603%" height="15" fill="rgb(252,134,50)" fg:x="1162" fg:w="2"/><text x="93.3590%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (18 samples, 1.44%)</title><rect x="91.9071%" y="613" width="1.4423%" height="15" fill="rgb(238,74,2)" fg:x="1147" fg:w="18"/><text x="92.1571%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.36%)</title><rect x="91.9872%" y="597" width="1.3622%" height="15" fill="rgb(226,58,46)" fg:x="1148" fg:w="17"/><text x="92.2372%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="92.4679%" y="581" width="0.8814%" height="15" fill="rgb(232,83,35)" fg:x="1154" fg:w="11"/><text x="92.7179%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.2692%" y="565" width="0.0801%" height="15" fill="rgb(212,148,47)" fg:x="1164" fg:w="1"/><text x="93.5192%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.2692%" y="549" width="0.0801%" height="15" fill="rgb(235,29,1)" fg:x="1164" fg:w="1"/><text x="93.5192%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.4295%" y="453" width="0.0801%" height="15" fill="rgb(247,55,37)" fg:x="1166" fg:w="1"/><text x="93.6795%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.4295%" y="437" width="0.0801%" height="15" fill="rgb(222,48,3)" fg:x="1166" fg:w="1"/><text x="93.6795%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.4295%" y="485" width="0.1603%" height="15" fill="rgb(234,21,33)" fg:x="1166" fg:w="2"/><text x="93.6795%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.4295%" y="469" width="0.1603%" height="15" fill="rgb(247,178,53)" fg:x="1166" fg:w="2"/><text x="93.6795%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5096%" y="453" width="0.0801%" height="15" fill="rgb(225,75,7)" fg:x="1167" fg:w="1"/><text x="93.7596%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5096%" y="437" width="0.0801%" height="15" fill="rgb(219,199,7)" fg:x="1167" fg:w="1"/><text x="93.7596%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="93.5096%" y="421" width="0.0801%" height="15" fill="rgb(209,93,42)" fg:x="1167" fg:w="1"/><text x="93.7596%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="93.4295%" y="517" width="0.2404%" height="15" fill="rgb(240,175,17)" fg:x="1166" fg:w="3"/><text x="93.6795%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.4295%" y="501" width="0.2404%" height="15" fill="rgb(232,106,7)" fg:x="1166" fg:w="3"/><text x="93.6795%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5897%" y="485" width="0.0801%" height="15" fill="rgb(242,106,43)" fg:x="1168" fg:w="1"/><text x="93.8397%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5897%" y="469" width="0.0801%" height="15" fill="rgb(242,61,37)" fg:x="1168" fg:w="1"/><text x="93.8397%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5897%" y="453" width="0.0801%" height="15" fill="rgb(205,72,10)" fg:x="1168" fg:w="1"/><text x="93.8397%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.6699%" y="517" width="0.0801%" height="15" fill="rgb(214,184,36)" fg:x="1169" fg:w="1"/><text x="93.9199%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.6699%" y="501" width="0.0801%" height="15" fill="rgb(206,107,18)" fg:x="1169" fg:w="1"/><text x="93.9199%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="93.4295%" y="549" width="0.4808%" height="15" fill="rgb(210,75,5)" fg:x="1166" fg:w="6"/><text x="93.6795%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="93.4295%" y="533" width="0.4808%" height="15" fill="rgb(205,3,19)" fg:x="1166" fg:w="6"/><text x="93.6795%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.7500%" y="517" width="0.1603%" height="15" fill="rgb(207,181,42)" fg:x="1170" fg:w="2"/><text x="94.0000%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.8301%" y="501" width="0.0801%" height="15" fill="rgb(229,179,43)" fg:x="1171" fg:w="1"/><text x="94.0801%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8301%" y="485" width="0.0801%" height="15" fill="rgb(246,95,30)" fg:x="1171" fg:w="1"/><text x="94.0801%" y="495.50"></text></g><g><title>engine::session::state::State::close (54 samples, 4.33%)</title><rect x="89.6635%" y="693" width="4.3269%" height="15" fill="rgb(234,144,45)" fg:x="1119" fg:w="54"/><text x="89.9135%" y="703.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (54 samples, 4.33%)</title><rect x="89.6635%" y="677" width="4.3269%" height="15" fill="rgb(250,54,25)" fg:x="1119" fg:w="54"/><text x="89.9135%" y="687.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (54 samples, 4.33%)</title><rect x="89.6635%" y="661" width="4.3269%" height="15" fill="rgb(215,195,40)" fg:x="1119" fg:w="54"/><text x="89.9135%" y="671.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (54 samples, 4.33%)</title><rect x="89.6635%" y="645" width="4.3269%" height="15" fill="rgb(233,188,42)" fg:x="1119" fg:w="54"/><text x="89.9135%" y="655.50">engin..</text></g><g><title>kernel::model::any_entity_changes (39 samples, 3.12%)</title><rect x="90.8654%" y="629" width="3.1250%" height="15" fill="rgb(247,227,35)" fg:x="1134" fg:w="39"/><text x="91.1154%" y="639.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.64%)</title><rect x="93.3494%" y="613" width="0.6410%" height="15" fill="rgb(249,124,27)" fg:x="1165" fg:w="8"/><text x="93.5994%" y="623.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="93.3494%" y="597" width="0.6410%" height="15" fill="rgb(219,207,25)" fg:x="1165" fg:w="8"/><text x="93.5994%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="93.3494%" y="581" width="0.6410%" height="15" fill="rgb(241,216,47)" fg:x="1165" fg:w="8"/><text x="93.5994%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="93.4295%" y="565" width="0.5609%" height="15" fill="rgb(233,82,50)" fg:x="1166" fg:w="7"/><text x="93.6795%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.9103%" y="549" width="0.0801%" height="15" fill="rgb(232,63,2)" fg:x="1172" fg:w="1"/><text x="94.1603%" y="559.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="93.9904%" y="693" width="0.0801%" height="15" fill="rgb(236,184,28)" fg:x="1173" fg:w="1"/><text x="94.2404%" y="703.50"></text></g><g><title>engine::session::Session::close (58 samples, 4.65%)</title><rect x="89.5032%" y="709" width="4.6474%" height="15" fill="rgb(254,63,27)" fg:x="1117" fg:w="58"/><text x="89.7532%" y="719.50">engin..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="94.0705%" y="693" width="0.0801%" height="15" fill="rgb(253,106,28)" fg:x="1174" fg:w="1"/><text x="94.3205%" y="703.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="94.0705%" y="677" width="0.0801%" height="15" fill="rgb(225,141,39)" fg:x="1174" fg:w="1"/><text x="94.3205%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="94.0705%" y="661" width="0.0801%" height="15" fill="rgb(222,157,20)" fg:x="1174" fg:w="1"/><text x="94.3205%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="94.0705%" y="645" width="0.0801%" height="15" fill="rgb(210,190,9)" fg:x="1174" fg:w="1"/><text x="94.3205%" y="655.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="94.0705%" y="629" width="0.0801%" height="15" fill="rgb(242,167,7)" fg:x="1174" fg:w="1"/><text x="94.3205%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="94.2308%" y="581" width="0.0801%" height="15" fill="rgb(227,82,41)" fg:x="1176" fg:w="1"/><text x="94.4808%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="94.3109%" y="581" width="0.0801%" height="15" fill="rgb(222,131,13)" fg:x="1177" fg:w="1"/><text x="94.5609%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3109%" y="565" width="0.0801%" height="15" fill="rgb(221,98,26)" fg:x="1177" fg:w="1"/><text x="94.5609%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3910%" y="437" width="0.0801%" height="15" fill="rgb(251,63,52)" fg:x="1178" fg:w="1"/><text x="94.6410%" y="447.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="94.3910%" y="485" width="0.1603%" height="15" fill="rgb(246,25,43)" fg:x="1178" fg:w="2"/><text x="94.6410%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.3910%" y="469" width="0.1603%" height="15" fill="rgb(247,167,15)" fg:x="1178" fg:w="2"/><text x="94.6410%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.3910%" y="453" width="0.1603%" height="15" fill="rgb(240,104,42)" fg:x="1178" fg:w="2"/><text x="94.6410%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.4712%" y="437" width="0.0801%" height="15" fill="rgb(224,54,6)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4712%" y="421" width="0.0801%" height="15" fill="rgb(244,108,35)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.4712%" y="405" width="0.0801%" height="15" fill="rgb(216,154,2)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4712%" y="389" width="0.0801%" height="15" fill="rgb(222,8,47)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.4712%" y="373" width="0.0801%" height="15" fill="rgb(252,93,1)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.4712%" y="357" width="0.0801%" height="15" fill="rgb(223,226,51)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4712%" y="341" width="0.0801%" height="15" fill="rgb(206,147,9)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.6314%" y="405" width="0.2404%" height="15" fill="rgb(248,180,41)" fg:x="1181" fg:w="3"/><text x="94.8814%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.6314%" y="389" width="0.2404%" height="15" fill="rgb(209,47,50)" fg:x="1181" fg:w="3"/><text x="94.8814%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="94.6314%" y="373" width="0.2404%" height="15" fill="rgb(243,65,31)" fg:x="1181" fg:w="3"/><text x="94.8814%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.6314%" y="357" width="0.2404%" height="15" fill="rgb(228,128,1)" fg:x="1181" fg:w="3"/><text x="94.8814%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.6314%" y="341" width="0.2404%" height="15" fill="rgb(231,192,16)" fg:x="1181" fg:w="3"/><text x="94.8814%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.6314%" y="325" width="0.2404%" height="15" fill="rgb(224,26,40)" fg:x="1181" fg:w="3"/><text x="94.8814%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="94.7115%" y="309" width="0.1603%" height="15" fill="rgb(214,192,17)" fg:x="1182" fg:w="2"/><text x="94.9615%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.16%)</title><rect x="94.7115%" y="293" width="0.1603%" height="15" fill="rgb(225,147,18)" fg:x="1182" fg:w="2"/><text x="94.9615%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="94.7115%" y="277" width="0.1603%" height="15" fill="rgb(205,35,11)" fg:x="1182" fg:w="2"/><text x="94.9615%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.8718%" y="405" width="0.0801%" height="15" fill="rgb(242,40,42)" fg:x="1184" fg:w="1"/><text x="95.1218%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="94.3910%" y="549" width="0.6410%" height="15" fill="rgb(250,170,13)" fg:x="1178" fg:w="8"/><text x="94.6410%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.64%)</title><rect x="94.3910%" y="533" width="0.6410%" height="15" fill="rgb(240,161,28)" fg:x="1178" fg:w="8"/><text x="94.6410%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="94.3910%" y="517" width="0.6410%" height="15" fill="rgb(245,179,12)" fg:x="1178" fg:w="8"/><text x="94.6410%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (8 samples, 0.64%)</title><rect x="94.3910%" y="501" width="0.6410%" height="15" fill="rgb(250,92,32)" fg:x="1178" fg:w="8"/><text x="94.6410%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="94.5513%" y="485" width="0.4808%" height="15" fill="rgb(233,10,40)" fg:x="1180" fg:w="6"/><text x="94.8013%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="94.5513%" y="469" width="0.4808%" height="15" fill="rgb(217,98,1)" fg:x="1180" fg:w="6"/><text x="94.8013%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="94.5513%" y="453" width="0.4808%" height="15" fill="rgb(238,202,7)" fg:x="1180" fg:w="6"/><text x="94.8013%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="94.5513%" y="437" width="0.4808%" height="15" fill="rgb(222,91,3)" fg:x="1180" fg:w="6"/><text x="94.8013%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="94.5513%" y="421" width="0.4808%" height="15" fill="rgb(211,170,49)" fg:x="1180" fg:w="6"/><text x="94.8013%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="94.9519%" y="405" width="0.0801%" height="15" fill="rgb(253,139,18)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.9519%" y="389" width="0.0801%" height="15" fill="rgb(222,4,43)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="94.9519%" y="373" width="0.0801%" height="15" fill="rgb(207,205,12)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="94.9519%" y="357" width="0.0801%" height="15" fill="rgb(216,159,46)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9519%" y="341" width="0.0801%" height="15" fill="rgb(236,115,1)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="351.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (12 samples, 0.96%)</title><rect x="94.1506%" y="597" width="0.9615%" height="15" fill="rgb(251,35,33)" fg:x="1175" fg:w="12"/><text x="94.4006%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.72%)</title><rect x="94.3910%" y="581" width="0.7212%" height="15" fill="rgb(248,62,51)" fg:x="1178" fg:w="9"/><text x="94.6410%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="94.3910%" y="565" width="0.7212%" height="15" fill="rgb(254,180,19)" fg:x="1178" fg:w="9"/><text x="94.6410%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0321%" y="549" width="0.0801%" height="15" fill="rgb(217,100,32)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0321%" y="533" width="0.0801%" height="15" fill="rgb(224,71,22)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0321%" y="517" width="0.0801%" height="15" fill="rgb(251,185,33)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="527.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (13 samples, 1.04%)</title><rect x="94.1506%" y="613" width="1.0417%" height="15" fill="rgb(209,75,48)" fg:x="1175" fg:w="13"/><text x="94.4006%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="95.1122%" y="597" width="0.0801%" height="15" fill="rgb(253,190,16)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.1122%" y="581" width="0.0801%" height="15" fill="rgb(226,140,1)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1923%" y="613" width="0.0801%" height="15" fill="rgb(206,75,30)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1923%" y="597" width="0.0801%" height="15" fill="rgb(231,208,37)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1923%" y="581" width="0.0801%" height="15" fill="rgb(238,136,40)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.1923%" y="565" width="0.0801%" height="15" fill="rgb(247,137,17)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.1923%" y="549" width="0.0801%" height="15" fill="rgb(240,60,40)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.1923%" y="533" width="0.0801%" height="15" fill="rgb(236,68,50)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1923%" y="517" width="0.0801%" height="15" fill="rgb(230,42,12)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1923%" y="501" width="0.0801%" height="15" fill="rgb(219,16,16)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.1923%" y="485" width="0.0801%" height="15" fill="rgb(220,38,35)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.1923%" y="469" width="0.0801%" height="15" fill="rgb(228,33,1)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.1923%" y="453" width="0.0801%" height="15" fill="rgb(241,46,31)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.1923%" y="437" width="0.0801%" height="15" fill="rgb(232,58,20)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="447.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="95.2724%" y="485" width="0.0801%" height="15" fill="rgb(206,228,53)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2724%" y="469" width="0.0801%" height="15" fill="rgb(206,88,33)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2724%" y="453" width="0.0801%" height="15" fill="rgb(238,69,7)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2724%" y="437" width="0.0801%" height="15" fill="rgb(250,21,46)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.2724%" y="421" width="0.0801%" height="15" fill="rgb(215,212,21)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.2724%" y="405" width="0.0801%" height="15" fill="rgb(211,35,12)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.2724%" y="389" width="0.0801%" height="15" fill="rgb(231,184,16)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.2724%" y="373" width="0.0801%" height="15" fill="rgb(242,140,15)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.2724%" y="357" width="0.0801%" height="15" fill="rgb(220,37,14)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.2724%" y="341" width="0.0801%" height="15" fill="rgb(223,146,22)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.2724%" y="325" width="0.0801%" height="15" fill="rgb(216,132,15)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.2724%" y="309" width="0.0801%" height="15" fill="rgb(248,83,5)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.2724%" y="293" width="0.0801%" height="15" fill="rgb(231,206,48)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2724%" y="277" width="0.0801%" height="15" fill="rgb(253,185,37)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="287.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="95.4327%" y="453" width="0.0801%" height="15" fill="rgb(208,21,44)" fg:x="1191" fg:w="1"/><text x="95.6827%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.4327%" y="437" width="0.0801%" height="15" fill="rgb(236,125,4)" fg:x="1191" fg:w="1"/><text x="95.6827%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.4327%" y="421" width="0.0801%" height="15" fill="rgb(226,134,25)" fg:x="1191" fg:w="1"/><text x="95.6827%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.4327%" y="405" width="0.0801%" height="15" fill="rgb(250,201,12)" fg:x="1191" fg:w="1"/><text x="95.6827%" y="415.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="95.4327%" y="389" width="0.0801%" height="15" fill="rgb(225,92,18)" fg:x="1191" fg:w="1"/><text x="95.6827%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="95.5128%" y="421" width="0.3205%" height="15" fill="rgb(227,35,22)" fg:x="1192" fg:w="4"/><text x="95.7628%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="95.5128%" y="405" width="0.3205%" height="15" fill="rgb(214,180,52)" fg:x="1192" fg:w="4"/><text x="95.7628%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="95.5128%" y="389" width="0.3205%" height="15" fill="rgb(233,55,38)" fg:x="1192" fg:w="4"/><text x="95.7628%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7532%" y="373" width="0.0801%" height="15" fill="rgb(249,171,43)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7532%" y="357" width="0.0801%" height="15" fill="rgb(239,87,2)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.7532%" y="341" width="0.0801%" height="15" fill="rgb(248,141,5)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.7532%" y="325" width="0.0801%" height="15" fill="rgb(238,33,42)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.7532%" y="309" width="0.0801%" height="15" fill="rgb(231,57,19)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.7532%" y="293" width="0.0801%" height="15" fill="rgb(214,78,53)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.7532%" y="277" width="0.0801%" height="15" fill="rgb(206,132,29)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.7532%" y="261" width="0.0801%" height="15" fill="rgb(248,174,31)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.7532%" y="245" width="0.0801%" height="15" fill="rgb(221,87,13)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.7532%" y="229" width="0.0801%" height="15" fill="rgb(223,197,17)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.7532%" y="213" width="0.0801%" height="15" fill="rgb(220,144,50)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7532%" y="197" width="0.0801%" height="15" fill="rgb(244,201,11)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.9135%" y="357" width="0.0801%" height="15" fill="rgb(249,81,34)" fg:x="1197" fg:w="1"/><text x="96.1635%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9135%" y="341" width="0.0801%" height="15" fill="rgb(205,161,12)" fg:x="1197" fg:w="1"/><text x="96.1635%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="95.8333%" y="389" width="0.2404%" height="15" fill="rgb(252,139,50)" fg:x="1196" fg:w="3"/><text x="96.0833%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.8333%" y="373" width="0.2404%" height="15" fill="rgb(205,169,14)" fg:x="1196" fg:w="3"/><text x="96.0833%" y="383.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="95.9936%" y="357" width="0.0801%" height="15" fill="rgb(248,198,33)" fg:x="1198" fg:w="1"/><text x="96.2436%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (8 samples, 0.64%)</title><rect x="95.5128%" y="453" width="0.6410%" height="15" fill="rgb(236,23,21)" fg:x="1192" fg:w="8"/><text x="95.7628%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="95.5128%" y="437" width="0.6410%" height="15" fill="rgb(231,13,38)" fg:x="1192" fg:w="8"/><text x="95.7628%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="95.8333%" y="421" width="0.3205%" height="15" fill="rgb(239,139,21)" fg:x="1196" fg:w="4"/><text x="96.0833%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="95.8333%" y="405" width="0.3205%" height="15" fill="rgb(222,164,45)" fg:x="1196" fg:w="4"/><text x="96.0833%" y="415.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="96.0737%" y="389" width="0.0801%" height="15" fill="rgb(230,52,27)" fg:x="1199" fg:w="1"/><text x="96.3237%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.1538%" y="421" width="0.0801%" height="15" fill="rgb(227,143,42)" fg:x="1200" fg:w="1"/><text x="96.4038%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.3141%" y="357" width="0.0801%" height="15" fill="rgb(249,127,1)" fg:x="1202" fg:w="1"/><text x="96.5641%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.3942%" y="341" width="0.0801%" height="15" fill="rgb(243,107,26)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.3942%" y="357" width="0.1603%" height="15" fill="rgb(225,7,45)" fg:x="1203" fg:w="2"/><text x="96.6442%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4744%" y="341" width="0.0801%" height="15" fill="rgb(241,88,38)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="351.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (17 samples, 1.36%)</title><rect x="95.4327%" y="469" width="1.3622%" height="15" fill="rgb(226,121,9)" fg:x="1191" fg:w="17"/><text x="95.6827%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="96.1538%" y="453" width="0.6410%" height="15" fill="rgb(253,60,29)" fg:x="1200" fg:w="8"/><text x="96.4038%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="96.1538%" y="437" width="0.6410%" height="15" fill="rgb(244,181,39)" fg:x="1200" fg:w="8"/><text x="96.4038%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="96.2340%" y="421" width="0.5609%" height="15" fill="rgb(252,203,31)" fg:x="1201" fg:w="7"/><text x="96.4840%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="96.2340%" y="405" width="0.5609%" height="15" fill="rgb(224,120,8)" fg:x="1201" fg:w="7"/><text x="96.4840%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="96.2340%" y="389" width="0.5609%" height="15" fill="rgb(205,171,54)" fg:x="1201" fg:w="7"/><text x="96.4840%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="96.2340%" y="373" width="0.5609%" height="15" fill="rgb(235,89,11)" fg:x="1201" fg:w="7"/><text x="96.4840%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.5545%" y="357" width="0.2404%" height="15" fill="rgb(212,180,28)" fg:x="1205" fg:w="3"/><text x="96.8045%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.6346%" y="341" width="0.1603%" height="15" fill="rgb(247,84,49)" fg:x="1206" fg:w="2"/><text x="96.8846%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.7147%" y="325" width="0.0801%" height="15" fill="rgb(236,187,52)" fg:x="1207" fg:w="1"/><text x="96.9647%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="96.7949%" y="437" width="0.0801%" height="15" fill="rgb(227,24,15)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="96.7949%" y="421" width="0.0801%" height="15" fill="rgb(227,211,13)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7949%" y="405" width="0.0801%" height="15" fill="rgb(245,52,14)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7949%" y="389" width="0.0801%" height="15" fill="rgb(225,185,13)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7949%" y="373" width="0.0801%" height="15" fill="rgb(217,160,29)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.7949%" y="357" width="0.0801%" height="15" fill="rgb(216,115,53)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.7949%" y="341" width="0.0801%" height="15" fill="rgb(236,99,5)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.7949%" y="325" width="0.0801%" height="15" fill="rgb(222,60,38)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.7949%" y="309" width="0.0801%" height="15" fill="rgb(212,82,22)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.7949%" y="293" width="0.0801%" height="15" fill="rgb(214,48,28)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.7949%" y="277" width="0.0801%" height="15" fill="rgb(245,196,50)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.7949%" y="261" width="0.0801%" height="15" fill="rgb(225,159,46)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.7949%" y="245" width="0.0801%" height="15" fill="rgb(207,195,48)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.7949%" y="229" width="0.0801%" height="15" fill="rgb(240,73,3)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="96.7949%" y="469" width="0.1603%" height="15" fill="rgb(245,57,23)" fg:x="1208" fg:w="2"/><text x="97.0449%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="96.7949%" y="453" width="0.1603%" height="15" fill="rgb(240,75,18)" fg:x="1208" fg:w="2"/><text x="97.0449%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="96.8750%" y="437" width="0.0801%" height="15" fill="rgb(238,168,12)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="96.8750%" y="421" width="0.0801%" height="15" fill="rgb(226,20,40)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="96.8750%" y="405" width="0.0801%" height="15" fill="rgb(224,130,35)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.8750%" y="389" width="0.0801%" height="15" fill="rgb(225,63,41)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="96.9551%" y="469" width="0.0801%" height="15" fill="rgb(219,3,3)" fg:x="1210" fg:w="1"/><text x="97.2051%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.9551%" y="453" width="0.0801%" height="15" fill="rgb(218,157,4)" fg:x="1210" fg:w="1"/><text x="97.2051%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1154%" y="437" width="0.0801%" height="15" fill="rgb(232,76,36)" fg:x="1212" fg:w="1"/><text x="97.3654%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1154%" y="421" width="0.0801%" height="15" fill="rgb(247,36,0)" fg:x="1212" fg:w="1"/><text x="97.3654%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1154%" y="405" width="0.0801%" height="15" fill="rgb(205,2,34)" fg:x="1212" fg:w="1"/><text x="97.3654%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1154%" y="389" width="0.0801%" height="15" fill="rgb(239,136,13)" fg:x="1212" fg:w="1"/><text x="97.3654%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1154%" y="373" width="0.0801%" height="15" fill="rgb(253,122,12)" fg:x="1212" fg:w="1"/><text x="97.3654%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.1955%" y="293" width="0.0801%" height="15" fill="rgb(222,174,7)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.1955%" y="277" width="0.0801%" height="15" fill="rgb(208,191,42)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1955%" y="261" width="0.0801%" height="15" fill="rgb(237,212,15)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1955%" y="245" width="0.0801%" height="15" fill="rgb(215,65,20)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1955%" y="229" width="0.0801%" height="15" fill="rgb(232,103,11)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1955%" y="213" width="0.0801%" height="15" fill="rgb(235,148,18)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1955%" y="197" width="0.0801%" height="15" fill="rgb(240,173,7)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.1955%" y="181" width="0.0801%" height="15" fill="rgb(228,182,25)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.1955%" y="165" width="0.0801%" height="15" fill="rgb(247,3,52)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.1955%" y="149" width="0.0801%" height="15" fill="rgb(226,155,8)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1955%" y="133" width="0.0801%" height="15" fill="rgb(243,195,38)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1955%" y="117" width="0.0801%" height="15" fill="rgb(254,181,33)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.1955%" y="101" width="0.0801%" height="15" fill="rgb(232,98,23)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.1955%" y="85" width="0.0801%" height="15" fill="rgb(205,23,10)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.1955%" y="69" width="0.0801%" height="15" fill="rgb(212,124,38)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.1955%" y="53" width="0.0801%" height="15" fill="rgb(228,207,2)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1955%" y="37" width="0.0801%" height="15" fill="rgb(215,120,22)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2756%" y="261" width="0.0801%" height="15" fill="rgb(251,172,33)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2756%" y="245" width="0.0801%" height="15" fill="rgb(250,83,2)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2756%" y="229" width="0.0801%" height="15" fill="rgb(210,132,53)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2756%" y="213" width="0.0801%" height="15" fill="rgb(221,208,36)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="97.1955%" y="325" width="0.2404%" height="15" fill="rgb(205,192,46)" fg:x="1213" fg:w="3"/><text x="97.4455%" y="335.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="97.1955%" y="309" width="0.2404%" height="15" fill="rgb(223,163,14)" fg:x="1213" fg:w="3"/><text x="97.4455%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="97.2756%" y="293" width="0.1603%" height="15" fill="rgb(218,41,28)" fg:x="1214" fg:w="2"/><text x="97.5256%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.2756%" y="277" width="0.1603%" height="15" fill="rgb(235,104,10)" fg:x="1214" fg:w="2"/><text x="97.5256%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.3558%" y="261" width="0.0801%" height="15" fill="rgb(246,17,4)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3558%" y="245" width="0.0801%" height="15" fill="rgb(240,7,16)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.3558%" y="229" width="0.0801%" height="15" fill="rgb(213,160,23)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3558%" y="213" width="0.0801%" height="15" fill="rgb(251,179,49)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.3558%" y="197" width="0.0801%" height="15" fill="rgb(247,198,10)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4359%" y="261" width="0.0801%" height="15" fill="rgb(220,65,29)" fg:x="1216" fg:w="1"/><text x="97.6859%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4359%" y="245" width="0.0801%" height="15" fill="rgb(237,171,28)" fg:x="1216" fg:w="1"/><text x="97.6859%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.4359%" y="229" width="0.0801%" height="15" fill="rgb(228,44,26)" fg:x="1216" fg:w="1"/><text x="97.6859%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5160%" y="229" width="0.0801%" height="15" fill="rgb(216,210,27)" fg:x="1217" fg:w="1"/><text x="97.7660%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5160%" y="213" width="0.0801%" height="15" fill="rgb(252,10,17)" fg:x="1217" fg:w="1"/><text x="97.7660%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5160%" y="197" width="0.0801%" height="15" fill="rgb(214,172,30)" fg:x="1217" fg:w="1"/><text x="97.7660%" y="207.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="97.4359%" y="309" width="0.2404%" height="15" fill="rgb(253,130,48)" fg:x="1216" fg:w="3"/><text x="97.6859%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.4359%" y="293" width="0.2404%" height="15" fill="rgb(226,99,43)" fg:x="1216" fg:w="3"/><text x="97.6859%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.4359%" y="277" width="0.2404%" height="15" fill="rgb(239,111,26)" fg:x="1216" fg:w="3"/><text x="97.6859%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.5160%" y="261" width="0.1603%" height="15" fill="rgb(240,27,53)" fg:x="1217" fg:w="2"/><text x="97.7660%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.5160%" y="245" width="0.1603%" height="15" fill="rgb(254,163,12)" fg:x="1217" fg:w="2"/><text x="97.7660%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.5962%" y="229" width="0.0801%" height="15" fill="rgb(225,51,48)" fg:x="1218" fg:w="1"/><text x="97.8462%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.5962%" y="213" width="0.0801%" height="15" fill="rgb(205,19,32)" fg:x="1218" fg:w="1"/><text x="97.8462%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.5962%" y="197" width="0.0801%" height="15" fill="rgb(218,119,26)" fg:x="1218" fg:w="1"/><text x="97.8462%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.5962%" y="181" width="0.0801%" height="15" fill="rgb(231,173,33)" fg:x="1218" fg:w="1"/><text x="97.8462%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.5962%" y="165" width="0.0801%" height="15" fill="rgb(241,100,29)" fg:x="1218" fg:w="1"/><text x="97.8462%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.5962%" y="149" width="0.0801%" height="15" fill="rgb(250,194,34)" fg:x="1218" fg:w="1"/><text x="97.8462%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.5962%" y="133" width="0.0801%" height="15" fill="rgb(215,23,50)" fg:x="1218" fg:w="1"/><text x="97.8462%" y="143.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6763%" y="245" width="0.0801%" height="15" fill="rgb(206,49,37)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.7564%" y="229" width="0.0801%" height="15" fill="rgb(247,39,21)" fg:x="1220" fg:w="1"/><text x="98.0064%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.7564%" y="213" width="0.0801%" height="15" fill="rgb(209,220,15)" fg:x="1220" fg:w="1"/><text x="98.0064%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7564%" y="197" width="0.0801%" height="15" fill="rgb(206,41,33)" fg:x="1220" fg:w="1"/><text x="98.0064%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7564%" y="181" width="0.0801%" height="15" fill="rgb(221,225,45)" fg:x="1220" fg:w="1"/><text x="98.0064%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7564%" y="165" width="0.0801%" height="15" fill="rgb(216,27,18)" fg:x="1220" fg:w="1"/><text x="98.0064%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="97.6763%" y="277" width="0.2404%" height="15" fill="rgb(250,193,34)" fg:x="1219" fg:w="3"/><text x="97.9263%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.6763%" y="261" width="0.2404%" height="15" fill="rgb(227,215,20)" fg:x="1219" fg:w="3"/><text x="97.9263%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.7564%" y="245" width="0.1603%" height="15" fill="rgb(242,211,27)" fg:x="1220" fg:w="2"/><text x="98.0064%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8365%" y="229" width="0.0801%" height="15" fill="rgb(229,190,30)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.8365%" y="213" width="0.0801%" height="15" fill="rgb(253,31,29)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.8365%" y="197" width="0.0801%" height="15" fill="rgb(229,177,52)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8365%" y="181" width="0.0801%" height="15" fill="rgb(226,88,8)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.8365%" y="165" width="0.0801%" height="15" fill="rgb(214,55,27)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.8365%" y="149" width="0.0801%" height="15" fill="rgb(233,202,5)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8365%" y="133" width="0.0801%" height="15" fill="rgb(251,49,30)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.8365%" y="117" width="0.0801%" height="15" fill="rgb(235,18,52)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.56%)</title><rect x="97.4359%" y="325" width="0.5609%" height="15" fill="rgb(250,111,51)" fg:x="1216" fg:w="7"/><text x="97.6859%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="97.6763%" y="309" width="0.3205%" height="15" fill="rgb(218,13,25)" fg:x="1219" fg:w="4"/><text x="97.9263%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="97.6763%" y="293" width="0.3205%" height="15" fill="rgb(248,96,7)" fg:x="1219" fg:w="4"/><text x="97.9263%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9167%" y="277" width="0.0801%" height="15" fill="rgb(217,31,15)" fg:x="1222" fg:w="1"/><text x="98.1667%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9167%" y="261" width="0.0801%" height="15" fill="rgb(228,59,49)" fg:x="1222" fg:w="1"/><text x="98.1667%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.9167%" y="245" width="0.0801%" height="15" fill="rgb(210,152,38)" fg:x="1222" fg:w="1"/><text x="98.1667%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.9167%" y="229" width="0.0801%" height="15" fill="rgb(206,71,11)" fg:x="1222" fg:w="1"/><text x="98.1667%" y="239.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="97.9167%" y="213" width="0.0801%" height="15" fill="rgb(244,199,5)" fg:x="1222" fg:w="1"/><text x="98.1667%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (12 samples, 0.96%)</title><rect x="97.1955%" y="437" width="0.9615%" height="15" fill="rgb(253,49,1)" fg:x="1213" fg:w="12"/><text x="97.4455%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.96%)</title><rect x="97.1955%" y="421" width="0.9615%" height="15" fill="rgb(225,206,40)" fg:x="1213" fg:w="12"/><text x="97.4455%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.96%)</title><rect x="97.1955%" y="405" width="0.9615%" height="15" fill="rgb(243,116,47)" fg:x="1213" fg:w="12"/><text x="97.4455%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.96%)</title><rect x="97.1955%" y="389" width="0.9615%" height="15" fill="rgb(219,225,16)" fg:x="1213" fg:w="12"/><text x="97.4455%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (12 samples, 0.96%)</title><rect x="97.1955%" y="373" width="0.9615%" height="15" fill="rgb(233,29,47)" fg:x="1213" fg:w="12"/><text x="97.4455%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.96%)</title><rect x="97.1955%" y="357" width="0.9615%" height="15" fill="rgb(250,179,18)" fg:x="1213" fg:w="12"/><text x="97.4455%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.96%)</title><rect x="97.1955%" y="341" width="0.9615%" height="15" fill="rgb(215,176,6)" fg:x="1213" fg:w="12"/><text x="97.4455%" y="351.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="97.9968%" y="325" width="0.1603%" height="15" fill="rgb(214,117,39)" fg:x="1223" fg:w="2"/><text x="98.2468%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.9968%" y="309" width="0.1603%" height="15" fill="rgb(247,183,36)" fg:x="1223" fg:w="2"/><text x="98.2468%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.9968%" y="293" width="0.1603%" height="15" fill="rgb(237,200,3)" fg:x="1223" fg:w="2"/><text x="98.2468%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="97.9968%" y="277" width="0.1603%" height="15" fill="rgb(212,220,24)" fg:x="1223" fg:w="2"/><text x="98.2468%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.9968%" y="261" width="0.1603%" height="15" fill="rgb(245,216,20)" fg:x="1223" fg:w="2"/><text x="98.2468%" y="271.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (37 samples, 2.96%)</title><rect x="95.2724%" y="501" width="2.9647%" height="15" fill="rgb(219,124,7)" fg:x="1189" fg:w="37"/><text x="95.5224%" y="511.50">&lt;pl..</text></g><g><title>plugins_core::looking::model::new_area_observation (36 samples, 2.88%)</title><rect x="95.3526%" y="485" width="2.8846%" height="15" fill="rgb(227,167,8)" fg:x="1190" fg:w="36"/><text x="95.6026%" y="495.50">pl..</text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.20%)</title><rect x="97.0353%" y="469" width="1.2019%" height="15" fill="rgb(241,37,2)" fg:x="1211" fg:w="15"/><text x="97.2853%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (15 samples, 1.20%)</title><rect x="97.0353%" y="453" width="1.2019%" height="15" fill="rgb(238,134,33)" fg:x="1211" fg:w="15"/><text x="97.2853%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1571%" y="437" width="0.0801%" height="15" fill="rgb(248,48,27)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1571%" y="421" width="0.0801%" height="15" fill="rgb(212,14,16)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.1571%" y="405" width="0.0801%" height="15" fill="rgb(217,205,37)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (52 samples, 4.17%)</title><rect x="94.1506%" y="677" width="4.1667%" height="15" fill="rgb(233,185,47)" fg:x="1175" fg:w="52"/><text x="94.4006%" y="687.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::apply_middleware (52 samples, 4.17%)</title><rect x="94.1506%" y="661" width="4.1667%" height="15" fill="rgb(244,88,8)" fg:x="1175" fg:w="52"/><text x="94.4006%" y="671.50">kerne..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (52 samples, 4.17%)</title><rect x="94.1506%" y="645" width="4.1667%" height="15" fill="rgb(213,0,20)" fg:x="1175" fg:w="52"/><text x="94.4006%" y="655.50">kerne..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (52 samples, 4.17%)</title><rect x="94.1506%" y="629" width="4.1667%" height="15" fill="rgb(238,159,36)" fg:x="1175" fg:w="52"/><text x="94.4006%" y="639.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (38 samples, 3.04%)</title><rect x="95.2724%" y="613" width="3.0449%" height="15" fill="rgb(253,173,17)" fg:x="1189" fg:w="38"/><text x="95.5224%" y="623.50">ker..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (38 samples, 3.04%)</title><rect x="95.2724%" y="597" width="3.0449%" height="15" fill="rgb(221,23,28)" fg:x="1189" fg:w="38"/><text x="95.5224%" y="607.50">&lt;pl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (38 samples, 3.04%)</title><rect x="95.2724%" y="581" width="3.0449%" height="15" fill="rgb(218,113,15)" fg:x="1189" fg:w="38"/><text x="95.5224%" y="591.50">ker..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (38 samples, 3.04%)</title><rect x="95.2724%" y="565" width="3.0449%" height="15" fill="rgb(233,58,3)" fg:x="1189" fg:w="38"/><text x="95.5224%" y="575.50">cor..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (38 samples, 3.04%)</title><rect x="95.2724%" y="549" width="3.0449%" height="15" fill="rgb(250,46,35)" fg:x="1189" fg:w="38"/><text x="95.5224%" y="559.50">ker..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (38 samples, 3.04%)</title><rect x="95.2724%" y="533" width="3.0449%" height="15" fill="rgb(210,169,11)" fg:x="1189" fg:w="38"/><text x="95.5224%" y="543.50">cor..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (38 samples, 3.04%)</title><rect x="95.2724%" y="517" width="3.0449%" height="15" fill="rgb(246,88,19)" fg:x="1189" fg:w="38"/><text x="95.5224%" y="527.50">&lt;en..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="98.2372%" y="501" width="0.0801%" height="15" fill="rgb(206,81,49)" fg:x="1226" fg:w="1"/><text x="98.4872%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.2372%" y="485" width="0.0801%" height="15" fill="rgb(232,144,18)" fg:x="1226" fg:w="1"/><text x="98.4872%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="98.3974%" y="645" width="0.0801%" height="15" fill="rgb(235,2,27)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3974%" y="629" width="0.0801%" height="15" fill="rgb(239,157,39)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.4776%" y="597" width="0.0801%" height="15" fill="rgb(220,11,17)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.4776%" y="581" width="0.0801%" height="15" fill="rgb(243,94,50)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="98.4776%" y="629" width="0.1603%" height="15" fill="rgb(218,22,0)" fg:x="1229" fg:w="2"/><text x="98.7276%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="98.4776%" y="613" width="0.1603%" height="15" fill="rgb(249,70,21)" fg:x="1229" fg:w="2"/><text x="98.7276%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.5577%" y="597" width="0.0801%" height="15" fill="rgb(245,111,46)" fg:x="1230" fg:w="1"/><text x="98.8077%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.5577%" y="581" width="0.0801%" height="15" fill="rgb(244,183,12)" fg:x="1230" fg:w="1"/><text x="98.8077%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.5577%" y="565" width="0.0801%" height="15" fill="rgb(207,117,0)" fg:x="1230" fg:w="1"/><text x="98.8077%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.5577%" y="549" width="0.0801%" height="15" fill="rgb(206,20,43)" fg:x="1230" fg:w="1"/><text x="98.8077%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.5577%" y="533" width="0.0801%" height="15" fill="rgb(221,104,11)" fg:x="1230" fg:w="1"/><text x="98.8077%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.5577%" y="517" width="0.0801%" height="15" fill="rgb(254,36,50)" fg:x="1230" fg:w="1"/><text x="98.8077%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5577%" y="501" width="0.0801%" height="15" fill="rgb(252,17,15)" fg:x="1230" fg:w="1"/><text x="98.8077%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.6378%" y="565" width="0.0801%" height="15" fill="rgb(219,129,43)" fg:x="1231" fg:w="1"/><text x="98.8878%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.6378%" y="549" width="0.0801%" height="15" fill="rgb(205,34,45)" fg:x="1231" fg:w="1"/><text x="98.8878%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.7981%" y="533" width="0.0801%" height="15" fill="rgb(251,201,32)" fg:x="1233" fg:w="1"/><text x="99.0481%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.7981%" y="517" width="0.0801%" height="15" fill="rgb(205,56,0)" fg:x="1233" fg:w="1"/><text x="99.0481%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8782%" y="501" width="0.0801%" height="15" fill="rgb(211,193,27)" fg:x="1234" fg:w="1"/><text x="99.1282%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8782%" y="485" width="0.0801%" height="15" fill="rgb(231,100,42)" fg:x="1234" fg:w="1"/><text x="99.1282%" y="495.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="98.6378%" y="613" width="0.4006%" height="15" fill="rgb(245,85,27)" fg:x="1231" fg:w="5"/><text x="98.8878%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="98.6378%" y="597" width="0.4006%" height="15" fill="rgb(241,76,24)" fg:x="1231" fg:w="5"/><text x="98.8878%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="98.6378%" y="581" width="0.4006%" height="15" fill="rgb(249,157,15)" fg:x="1231" fg:w="5"/><text x="98.8878%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.7179%" y="565" width="0.3205%" height="15" fill="rgb(222,218,25)" fg:x="1232" fg:w="4"/><text x="98.9679%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.7179%" y="549" width="0.3205%" height="15" fill="rgb(252,156,52)" fg:x="1232" fg:w="4"/><text x="98.9679%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.8782%" y="533" width="0.1603%" height="15" fill="rgb(211,185,7)" fg:x="1234" fg:w="2"/><text x="99.1282%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8782%" y="517" width="0.1603%" height="15" fill="rgb(234,108,24)" fg:x="1234" fg:w="2"/><text x="99.1282%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9583%" y="501" width="0.0801%" height="15" fill="rgb(227,218,2)" fg:x="1235" fg:w="1"/><text x="99.2083%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9583%" y="485" width="0.0801%" height="15" fill="rgb(224,0,36)" fg:x="1235" fg:w="1"/><text x="99.2083%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9583%" y="469" width="0.0801%" height="15" fill="rgb(233,201,10)" fg:x="1235" fg:w="1"/><text x="99.2083%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9583%" y="453" width="0.0801%" height="15" fill="rgb(252,209,14)" fg:x="1235" fg:w="1"/><text x="99.2083%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.0385%" y="581" width="0.0801%" height="15" fill="rgb(205,93,49)" fg:x="1236" fg:w="1"/><text x="99.2885%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.0385%" y="565" width="0.0801%" height="15" fill="rgb(234,116,45)" fg:x="1236" fg:w="1"/><text x="99.2885%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1186%" y="533" width="0.0801%" height="15" fill="rgb(248,89,35)" fg:x="1237" fg:w="1"/><text x="99.3686%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.1186%" y="517" width="0.0801%" height="15" fill="rgb(233,167,45)" fg:x="1237" fg:w="1"/><text x="99.3686%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.1186%" y="501" width="0.0801%" height="15" fill="rgb(248,228,14)" fg:x="1237" fg:w="1"/><text x="99.3686%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="99.1186%" y="581" width="0.2404%" height="15" fill="rgb(246,91,14)" fg:x="1237" fg:w="3"/><text x="99.3686%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.1186%" y="565" width="0.2404%" height="15" fill="rgb(227,142,5)" fg:x="1237" fg:w="3"/><text x="99.3686%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.1186%" y="549" width="0.2404%" height="15" fill="rgb(221,63,33)" fg:x="1237" fg:w="3"/><text x="99.3686%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1987%" y="533" width="0.1603%" height="15" fill="rgb(233,49,0)" fg:x="1238" fg:w="2"/><text x="99.4487%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1987%" y="517" width="0.1603%" height="15" fill="rgb(251,115,38)" fg:x="1238" fg:w="2"/><text x="99.4487%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="99.1987%" y="501" width="0.1603%" height="15" fill="rgb(231,214,32)" fg:x="1238" fg:w="2"/><text x="99.4487%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.2788%" y="485" width="0.0801%" height="15" fill="rgb(248,73,46)" fg:x="1239" fg:w="1"/><text x="99.5288%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="99.2788%" y="469" width="0.0801%" height="15" fill="rgb(237,156,4)" fg:x="1239" fg:w="1"/><text x="99.5288%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (11 samples, 0.88%)</title><rect x="98.6378%" y="629" width="0.8814%" height="15" fill="rgb(227,132,2)" fg:x="1231" fg:w="11"/><text x="98.8878%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="99.0385%" y="613" width="0.4808%" height="15" fill="rgb(248,161,9)" fg:x="1236" fg:w="6"/><text x="99.2885%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="99.0385%" y="597" width="0.4808%" height="15" fill="rgb(238,77,38)" fg:x="1236" fg:w="6"/><text x="99.2885%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.3590%" y="581" width="0.1603%" height="15" fill="rgb(222,166,40)" fg:x="1240" fg:w="2"/><text x="99.6090%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.3590%" y="565" width="0.1603%" height="15" fill="rgb(214,168,45)" fg:x="1240" fg:w="2"/><text x="99.6090%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.4391%" y="549" width="0.0801%" height="15" fill="rgb(226,64,37)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.5192%" y="629" width="0.1603%" height="15" fill="rgb(232,210,43)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.5192%" y="613" width="0.1603%" height="15" fill="rgb(214,76,33)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.5192%" y="597" width="0.1603%" height="15" fill="rgb(210,78,5)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5192%" y="581" width="0.1603%" height="15" fill="rgb(211,107,37)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.5192%" y="565" width="0.1603%" height="15" fill="rgb(249,67,16)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5192%" y="549" width="0.1603%" height="15" fill="rgb(222,114,31)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.5192%" y="533" width="0.1603%" height="15" fill="rgb(242,118,19)" fg:x="1242" fg:w="2"/><text x="99.7692%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5994%" y="517" width="0.0801%" height="15" fill="rgb(223,115,1)" fg:x="1243" fg:w="1"/><text x="99.8494%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.5994%" y="501" width="0.0801%" height="15" fill="rgb(241,182,54)" fg:x="1243" fg:w="1"/><text x="99.8494%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.5994%" y="485" width="0.0801%" height="15" fill="rgb(244,166,36)" fg:x="1243" fg:w="1"/><text x="99.8494%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (18 samples, 1.44%)</title><rect x="98.3173%" y="677" width="1.4423%" height="15" fill="rgb(241,52,43)" fg:x="1227" fg:w="18"/><text x="98.5673%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (18 samples, 1.44%)</title><rect x="98.3173%" y="661" width="1.4423%" height="15" fill="rgb(236,82,9)" fg:x="1227" fg:w="18"/><text x="98.5673%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="98.4776%" y="645" width="1.2821%" height="15" fill="rgb(241,119,0)" fg:x="1229" fg:w="16"/><text x="98.7276%" y="655.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.6795%" y="629" width="0.0801%" height="15" fill="rgb(221,19,22)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6795%" y="613" width="0.0801%" height="15" fill="rgb(254,144,35)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6795%" y="597" width="0.0801%" height="15" fill="rgb(246,132,30)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="607.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7596%" y="629" width="0.0801%" height="15" fill="rgb(234,69,28)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.7596%" y="613" width="0.0801%" height="15" fill="rgb(219,106,47)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.7596%" y="597" width="0.0801%" height="15" fill="rgb(218,79,24)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7596%" y="581" width="0.0801%" height="15" fill="rgb(225,26,21)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.8397%" y="597" width="0.0801%" height="15" fill="rgb(217,68,49)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="607.50"></text></g><g><title>all (1,248 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(220,204,28)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1071.50"></text></g><g><title>simple-b5e2632a (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(237,208,43)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1055.50">simple-b5e2632a</text></g><g><title>_start (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(213,97,42)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1039.50">_start</text></g><g><title>__libc_start_main (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(238,96,52)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1023.50">__libc_start_main</text></g><g><title>main (1,248 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(228,14,13)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1007.50">main</text></g><g><title>std::rt::lang_start_internal (1,248 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(219,123,13)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="991.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,248 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(216,144,17)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,248 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(230,228,29)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,248 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(233,18,5)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="943.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,248 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(233,197,12)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="927.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,248 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(234,140,29)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,248 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(233,113,19)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,248 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(246,209,13)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="879.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,248 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(242,79,54)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="863.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,248 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(219,73,16)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="847.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,248 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(224,52,10)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="831.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,248 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(237,179,5)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="815.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,248 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(231,20,6)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="799.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,248 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(253,171,45)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="783.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (263 samples, 21.07%)</title><rect x="78.9263%" y="757" width="21.0737%" height="15" fill="rgb(230,75,49)" fg:x="985" fg:w="263"/><text x="79.1763%" y="767.50">&lt;criterion::routine::Function&lt;M,F..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (263 samples, 21.07%)</title><rect x="78.9263%" y="741" width="21.0737%" height="15" fill="rgb(216,83,46)" fg:x="985" fg:w="263"/><text x="79.1763%" y="751.50">criterion::bencher::Bencher&lt;M&gt;::i..</text></g><g><title>tests::evaluate_text_in_new_domain (263 samples, 21.07%)</title><rect x="78.9263%" y="725" width="21.0737%" height="15" fill="rgb(236,56,9)" fg:x="985" fg:w="263"/><text x="79.1763%" y="735.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (73 samples, 5.85%)</title><rect x="94.1506%" y="709" width="5.8494%" height="15" fill="rgb(215,28,34)" fg:x="1175" fg:w="73"/><text x="94.4006%" y="719.50">engine:..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (73 samples, 5.85%)</title><rect x="94.1506%" y="693" width="5.8494%" height="15" fill="rgb(230,222,20)" fg:x="1175" fg:w="73"/><text x="94.4006%" y="703.50">engine:..</text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="99.7596%" y="677" width="0.2404%" height="15" fill="rgb(235,209,51)" fg:x="1245" fg:w="3"/><text x="100.0096%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="99.7596%" y="661" width="0.2404%" height="15" fill="rgb(235,167,1)" fg:x="1245" fg:w="3"/><text x="100.0096%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="99.7596%" y="645" width="0.2404%" height="15" fill="rgb(248,220,0)" fg:x="1245" fg:w="3"/><text x="100.0096%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.8397%" y="629" width="0.1603%" height="15" fill="rgb(239,0,18)" fg:x="1246" fg:w="2"/><text x="100.0897%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.8397%" y="613" width="0.1603%" height="15" fill="rgb(229,179,11)" fg:x="1246" fg:w="2"/><text x="100.0897%" y="623.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="99.9199%" y="597" width="0.0801%" height="15" fill="rgb(226,116,53)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="607.50"></text></g></svg></svg>