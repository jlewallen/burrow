<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="1251"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0799%" y="581" width="0.0799%" height="15" fill="rgb(231,102,53)" fg:x="1" fg:w="1"/><text x="0.3299%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.0799%" y="597" width="0.2398%" height="15" fill="rgb(210,77,38)" fg:x="1" fg:w="3"/><text x="0.3299%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.1599%" y="581" width="0.1599%" height="15" fill="rgb(235,131,6)" fg:x="2" fg:w="2"/><text x="0.4099%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.1599%" y="565" width="0.1599%" height="15" fill="rgb(252,55,38)" fg:x="2" fg:w="2"/><text x="0.4099%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.1599%" y="549" width="0.1599%" height="15" fill="rgb(246,38,14)" fg:x="2" fg:w="2"/><text x="0.4099%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="0.3197%" y="581" width="0.2398%" height="15" fill="rgb(242,27,5)" fg:x="4" fg:w="3"/><text x="0.5697%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.3997%" y="565" width="0.1599%" height="15" fill="rgb(228,65,35)" fg:x="5" fg:w="2"/><text x="0.6497%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.4796%" y="549" width="0.0799%" height="15" fill="rgb(245,93,11)" fg:x="6" fg:w="1"/><text x="0.7296%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.7994%" y="501" width="0.1599%" height="15" fill="rgb(213,1,31)" fg:x="10" fg:w="2"/><text x="1.0494%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9592%" y="485" width="0.0799%" height="15" fill="rgb(237,205,14)" fg:x="12" fg:w="1"/><text x="1.2092%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="1.0392%" y="485" width="0.3197%" height="15" fill="rgb(232,118,45)" fg:x="13" fg:w="4"/><text x="1.2892%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.1990%" y="469" width="0.1599%" height="15" fill="rgb(218,5,6)" fg:x="15" fg:w="2"/><text x="1.4490%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.3589%" y="469" width="0.0799%" height="15" fill="rgb(251,87,51)" fg:x="17" fg:w="1"/><text x="1.6089%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3589%" y="453" width="0.0799%" height="15" fill="rgb(207,225,20)" fg:x="17" fg:w="1"/><text x="1.6089%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="1.6787%" y="453" width="0.1599%" height="15" fill="rgb(222,78,54)" fg:x="21" fg:w="2"/><text x="1.9287%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.7586%" y="437" width="0.0799%" height="15" fill="rgb(232,85,16)" fg:x="22" fg:w="1"/><text x="2.0086%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.8385%" y="453" width="0.0799%" height="15" fill="rgb(244,25,33)" fg:x="23" fg:w="1"/><text x="2.0885%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8385%" y="437" width="0.0799%" height="15" fill="rgb(233,24,36)" fg:x="23" fg:w="1"/><text x="2.0885%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.60%)</title><rect x="0.7194%" y="517" width="1.5987%" height="15" fill="rgb(253,49,54)" fg:x="9" fg:w="20"/><text x="0.9694%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="0.9592%" y="501" width="1.3589%" height="15" fill="rgb(245,12,22)" fg:x="12" fg:w="17"/><text x="1.2092%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="1.3589%" y="485" width="0.9592%" height="15" fill="rgb(253,141,28)" fg:x="17" fg:w="12"/><text x="1.6089%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="1.4388%" y="469" width="0.8793%" height="15" fill="rgb(225,207,27)" fg:x="18" fg:w="11"/><text x="1.6888%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.9185%" y="453" width="0.3997%" height="15" fill="rgb(220,84,2)" fg:x="24" fg:w="5"/><text x="2.1685%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="2.0783%" y="437" width="0.2398%" height="15" fill="rgb(224,37,37)" fg:x="26" fg:w="3"/><text x="2.3283%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.2382%" y="421" width="0.0799%" height="15" fill="rgb(220,143,18)" fg:x="28" fg:w="1"/><text x="2.4882%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.3981%" y="485" width="0.1599%" height="15" fill="rgb(210,88,33)" fg:x="30" fg:w="2"/><text x="2.6481%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.5580%" y="485" width="0.1599%" height="15" fill="rgb(219,87,51)" fg:x="32" fg:w="2"/><text x="2.8080%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.6379%" y="469" width="0.0799%" height="15" fill="rgb(211,7,35)" fg:x="33" fg:w="1"/><text x="2.8879%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.7978%" y="453" width="0.2398%" height="15" fill="rgb(232,77,2)" fg:x="35" fg:w="3"/><text x="3.0478%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="2.7178%" y="469" width="0.3997%" height="15" fill="rgb(249,94,25)" fg:x="34" fg:w="5"/><text x="2.9678%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="3.0376%" y="453" width="0.0799%" height="15" fill="rgb(215,112,2)" fg:x="38" fg:w="1"/><text x="3.2876%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.1175%" y="469" width="0.0799%" height="15" fill="rgb(226,115,48)" fg:x="39" fg:w="1"/><text x="3.3675%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.1175%" y="453" width="0.0799%" height="15" fill="rgb(249,196,10)" fg:x="39" fg:w="1"/><text x="3.3675%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.1974%" y="453" width="0.0799%" height="15" fill="rgb(237,109,14)" fg:x="40" fg:w="1"/><text x="3.4474%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.20%)</title><rect x="2.3181%" y="517" width="1.1990%" height="15" fill="rgb(217,103,53)" fg:x="29" fg:w="15"/><text x="2.5681%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.20%)</title><rect x="2.3181%" y="501" width="1.1990%" height="15" fill="rgb(244,137,9)" fg:x="29" fg:w="15"/><text x="2.5681%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="2.7178%" y="485" width="0.7994%" height="15" fill="rgb(227,201,3)" fg:x="34" fg:w="10"/><text x="2.9678%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="3.1974%" y="469" width="0.3197%" height="15" fill="rgb(243,94,6)" fg:x="40" fg:w="4"/><text x="3.4474%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="3.2774%" y="453" width="0.2398%" height="15" fill="rgb(235,118,5)" fg:x="41" fg:w="3"/><text x="3.5274%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 3.44%)</title><rect x="0.3197%" y="597" width="3.4373%" height="15" fill="rgb(247,10,30)" fg:x="4" fg:w="43"/><text x="0.5697%" y="607.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (40 samples, 3.20%)</title><rect x="0.5596%" y="581" width="3.1974%" height="15" fill="rgb(205,26,28)" fg:x="7" fg:w="40"/><text x="0.8096%" y="591.50">cor..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 3.20%)</title><rect x="0.5596%" y="565" width="3.1974%" height="15" fill="rgb(206,99,35)" fg:x="7" fg:w="40"/><text x="0.8096%" y="575.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (39 samples, 3.12%)</title><rect x="0.6395%" y="549" width="3.1175%" height="15" fill="rgb(238,130,40)" fg:x="8" fg:w="39"/><text x="0.8895%" y="559.50">cor..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 3.12%)</title><rect x="0.6395%" y="533" width="3.1175%" height="15" fill="rgb(224,126,31)" fg:x="8" fg:w="39"/><text x="0.8895%" y="543.50">&lt;al..</text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="3.5172%" y="517" width="0.2398%" height="15" fill="rgb(254,105,17)" fg:x="44" fg:w="3"/><text x="3.7672%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="3.7570%" y="565" width="0.0799%" height="15" fill="rgb(216,87,36)" fg:x="47" fg:w="1"/><text x="4.0070%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.9169%" y="501" width="0.0799%" height="15" fill="rgb(240,21,12)" fg:x="49" fg:w="1"/><text x="4.1669%" y="511.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="3.9968%" y="485" width="0.1599%" height="15" fill="rgb(245,192,34)" fg:x="50" fg:w="2"/><text x="4.2468%" y="495.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="4.0767%" y="469" width="0.0799%" height="15" fill="rgb(226,100,49)" fg:x="51" fg:w="1"/><text x="4.3267%" y="479.50"></text></g><g><title>dlopen (5 samples, 0.40%)</title><rect x="4.1567%" y="485" width="0.3997%" height="15" fill="rgb(245,188,27)" fg:x="52" fg:w="5"/><text x="4.4067%" y="495.50"></text></g><g><title>_dl_catch_error (5 samples, 0.40%)</title><rect x="4.1567%" y="469" width="0.3997%" height="15" fill="rgb(212,170,8)" fg:x="52" fg:w="5"/><text x="4.4067%" y="479.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="4.1567%" y="453" width="0.3997%" height="15" fill="rgb(217,113,29)" fg:x="52" fg:w="5"/><text x="4.4067%" y="463.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="4.2366%" y="437" width="0.3197%" height="15" fill="rgb(237,30,3)" fg:x="53" fg:w="4"/><text x="4.4866%" y="447.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="4.2366%" y="421" width="0.3197%" height="15" fill="rgb(227,19,28)" fg:x="53" fg:w="4"/><text x="4.4866%" y="431.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.08%)</title><rect x="4.4764%" y="405" width="0.0799%" height="15" fill="rgb(239,172,45)" fg:x="56" fg:w="1"/><text x="4.7264%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (10 samples, 0.80%)</title><rect x="3.9169%" y="517" width="0.7994%" height="15" fill="rgb(254,55,39)" fg:x="49" fg:w="10"/><text x="4.1669%" y="527.50"></text></g><g><title>libloading::safe::Library::new (9 samples, 0.72%)</title><rect x="3.9968%" y="501" width="0.7194%" height="15" fill="rgb(249,208,12)" fg:x="50" fg:w="9"/><text x="4.2468%" y="511.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (2 samples, 0.16%)</title><rect x="4.5564%" y="485" width="0.1599%" height="15" fill="rgb(240,52,13)" fg:x="57" fg:w="2"/><text x="4.8064%" y="495.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (2 samples, 0.16%)</title><rect x="4.5564%" y="469" width="0.1599%" height="15" fill="rgb(252,149,13)" fg:x="57" fg:w="2"/><text x="4.8064%" y="479.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (2 samples, 0.16%)</title><rect x="4.5564%" y="453" width="0.1599%" height="15" fill="rgb(232,81,48)" fg:x="57" fg:w="2"/><text x="4.8064%" y="463.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.08%)</title><rect x="4.6363%" y="437" width="0.0799%" height="15" fill="rgb(222,144,2)" fg:x="58" fg:w="1"/><text x="4.8863%" y="447.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (13 samples, 1.04%)</title><rect x="3.8369%" y="533" width="1.0392%" height="15" fill="rgb(216,81,32)" fg:x="48" fg:w="13"/><text x="4.0869%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="4.7162%" y="517" width="0.1599%" height="15" fill="rgb(244,78,51)" fg:x="59" fg:w="2"/><text x="4.9662%" y="527.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="4.7162%" y="501" width="0.1599%" height="15" fill="rgb(217,66,21)" fg:x="59" fg:w="2"/><text x="4.9662%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="4.8761%" y="517" width="0.1599%" height="15" fill="rgb(247,101,42)" fg:x="61" fg:w="2"/><text x="5.1261%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.9560%" y="501" width="0.0799%" height="15" fill="rgb(227,81,39)" fg:x="62" fg:w="1"/><text x="5.2060%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="5.0360%" y="485" width="0.0799%" height="15" fill="rgb(220,223,44)" fg:x="63" fg:w="1"/><text x="5.2860%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.0360%" y="469" width="0.0799%" height="15" fill="rgb(205,218,2)" fg:x="63" fg:w="1"/><text x="5.2860%" y="479.50"></text></g><g><title>engine::session::Session::initialize (18 samples, 1.44%)</title><rect x="3.8369%" y="549" width="1.4388%" height="15" fill="rgb(212,207,28)" fg:x="48" fg:w="18"/><text x="4.0869%" y="559.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (5 samples, 0.40%)</title><rect x="4.8761%" y="533" width="0.3997%" height="15" fill="rgb(224,12,41)" fg:x="61" fg:w="5"/><text x="5.1261%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="5.0360%" y="517" width="0.2398%" height="15" fill="rgb(216,118,12)" fg:x="63" fg:w="3"/><text x="5.2860%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="5.0360%" y="501" width="0.2398%" height="15" fill="rgb(252,97,46)" fg:x="63" fg:w="3"/><text x="5.2860%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.1159%" y="485" width="0.1599%" height="15" fill="rgb(244,206,19)" fg:x="64" fg:w="2"/><text x="5.3659%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.1159%" y="469" width="0.1599%" height="15" fill="rgb(231,84,31)" fg:x="64" fg:w="2"/><text x="5.3659%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="5.1159%" y="453" width="0.1599%" height="15" fill="rgb(244,133,0)" fg:x="64" fg:w="2"/><text x="5.3659%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (20 samples, 1.60%)</title><rect x="3.7570%" y="597" width="1.5987%" height="15" fill="rgb(223,15,50)" fg:x="47" fg:w="20"/><text x="4.0070%" y="607.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (20 samples, 1.60%)</title><rect x="3.7570%" y="581" width="1.5987%" height="15" fill="rgb(250,118,49)" fg:x="47" fg:w="20"/><text x="4.0070%" y="591.50"></text></g><g><title>engine::session::Session::new (19 samples, 1.52%)</title><rect x="3.8369%" y="565" width="1.5188%" height="15" fill="rgb(248,25,38)" fg:x="48" fg:w="19"/><text x="4.0869%" y="575.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="5.2758%" y="549" width="0.0799%" height="15" fill="rgb(215,70,14)" fg:x="66" fg:w="1"/><text x="5.5258%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="5.2758%" y="533" width="0.0799%" height="15" fill="rgb(215,28,15)" fg:x="66" fg:w="1"/><text x="5.5258%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.2758%" y="517" width="0.0799%" height="15" fill="rgb(243,6,28)" fg:x="66" fg:w="1"/><text x="5.5258%" y="527.50"></text></g><g><title>&lt;plugins_core::chat::ChatPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="5.2758%" y="501" width="0.0799%" height="15" fill="rgb(222,130,1)" fg:x="66" fg:w="1"/><text x="5.5258%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="5.3557%" y="581" width="0.0799%" height="15" fill="rgb(236,166,44)" fg:x="67" fg:w="1"/><text x="5.6057%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.3557%" y="565" width="0.0799%" height="15" fill="rgb(221,108,14)" fg:x="67" fg:w="1"/><text x="5.6057%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="5.4357%" y="565" width="0.1599%" height="15" fill="rgb(252,3,45)" fg:x="68" fg:w="2"/><text x="5.6857%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.4357%" y="549" width="0.1599%" height="15" fill="rgb(237,68,30)" fg:x="68" fg:w="2"/><text x="5.6857%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.4357%" y="533" width="0.1599%" height="15" fill="rgb(211,79,22)" fg:x="68" fg:w="2"/><text x="5.6857%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="5.4357%" y="517" width="0.1599%" height="15" fill="rgb(252,185,21)" fg:x="68" fg:w="2"/><text x="5.6857%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="5.4357%" y="501" width="0.1599%" height="15" fill="rgb(225,189,26)" fg:x="68" fg:w="2"/><text x="5.6857%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="5.4357%" y="485" width="0.1599%" height="15" fill="rgb(241,30,40)" fg:x="68" fg:w="2"/><text x="5.6857%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="5.4357%" y="469" width="0.1599%" height="15" fill="rgb(235,215,44)" fg:x="68" fg:w="2"/><text x="5.6857%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="5.4357%" y="453" width="0.1599%" height="15" fill="rgb(205,8,29)" fg:x="68" fg:w="2"/><text x="5.6857%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="5.4357%" y="437" width="0.1599%" height="15" fill="rgb(241,137,42)" fg:x="68" fg:w="2"/><text x="5.6857%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="5.4357%" y="421" width="0.1599%" height="15" fill="rgb(237,155,2)" fg:x="68" fg:w="2"/><text x="5.6857%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="5.4357%" y="405" width="0.1599%" height="15" fill="rgb(245,29,42)" fg:x="68" fg:w="2"/><text x="5.6857%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="5.4357%" y="389" width="0.1599%" height="15" fill="rgb(234,101,35)" fg:x="68" fg:w="2"/><text x="5.6857%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.5156%" y="373" width="0.0799%" height="15" fill="rgb(228,64,37)" fg:x="69" fg:w="1"/><text x="5.7656%" y="383.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="5.5955%" y="501" width="0.0799%" height="15" fill="rgb(217,214,36)" fg:x="70" fg:w="1"/><text x="5.8455%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.5955%" y="485" width="0.0799%" height="15" fill="rgb(243,70,3)" fg:x="70" fg:w="1"/><text x="5.8455%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.5955%" y="469" width="0.0799%" height="15" fill="rgb(253,158,52)" fg:x="70" fg:w="1"/><text x="5.8455%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.5955%" y="453" width="0.0799%" height="15" fill="rgb(234,111,54)" fg:x="70" fg:w="1"/><text x="5.8455%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.5955%" y="437" width="0.0799%" height="15" fill="rgb(217,70,32)" fg:x="70" fg:w="1"/><text x="5.8455%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.5955%" y="421" width="0.0799%" height="15" fill="rgb(234,18,33)" fg:x="70" fg:w="1"/><text x="5.8455%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="5.5955%" y="405" width="0.0799%" height="15" fill="rgb(234,12,49)" fg:x="70" fg:w="1"/><text x="5.8455%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="5.5955%" y="389" width="0.0799%" height="15" fill="rgb(236,10,21)" fg:x="70" fg:w="1"/><text x="5.8455%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.5955%" y="533" width="0.1599%" height="15" fill="rgb(248,182,45)" fg:x="70" fg:w="2"/><text x="5.8455%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="5.5955%" y="517" width="0.1599%" height="15" fill="rgb(217,95,36)" fg:x="70" fg:w="2"/><text x="5.8455%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.6755%" y="501" width="0.0799%" height="15" fill="rgb(212,110,31)" fg:x="71" fg:w="1"/><text x="5.9255%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.7554%" y="501" width="0.0799%" height="15" fill="rgb(206,32,53)" fg:x="72" fg:w="1"/><text x="6.0054%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.8353%" y="469" width="0.0799%" height="15" fill="rgb(246,141,37)" fg:x="73" fg:w="1"/><text x="6.0853%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="5.9153%" y="469" width="0.1599%" height="15" fill="rgb(219,16,7)" fg:x="74" fg:w="2"/><text x="6.1653%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.9153%" y="453" width="0.1599%" height="15" fill="rgb(230,205,45)" fg:x="74" fg:w="2"/><text x="6.1653%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.9153%" y="437" width="0.1599%" height="15" fill="rgb(231,43,49)" fg:x="74" fg:w="2"/><text x="6.1653%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.9153%" y="421" width="0.1599%" height="15" fill="rgb(212,106,34)" fg:x="74" fg:w="2"/><text x="6.1653%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.9952%" y="405" width="0.0799%" height="15" fill="rgb(206,83,17)" fg:x="75" fg:w="1"/><text x="6.2452%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="6.2350%" y="453" width="0.3997%" height="15" fill="rgb(244,154,49)" fg:x="78" fg:w="5"/><text x="6.4850%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.3949%" y="437" width="0.2398%" height="15" fill="rgb(244,149,49)" fg:x="80" fg:w="3"/><text x="6.6449%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.4748%" y="421" width="0.1599%" height="15" fill="rgb(227,134,18)" fg:x="81" fg:w="2"/><text x="6.7248%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.4748%" y="405" width="0.1599%" height="15" fill="rgb(237,116,36)" fg:x="81" fg:w="2"/><text x="6.7248%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.6347%" y="405" width="0.0799%" height="15" fill="rgb(205,129,40)" fg:x="83" fg:w="1"/><text x="6.8847%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.6347%" y="389" width="0.0799%" height="15" fill="rgb(236,178,4)" fg:x="83" fg:w="1"/><text x="6.8847%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.6347%" y="373" width="0.0799%" height="15" fill="rgb(251,76,53)" fg:x="83" fg:w="1"/><text x="6.8847%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.6347%" y="357" width="0.0799%" height="15" fill="rgb(242,92,40)" fg:x="83" fg:w="1"/><text x="6.8847%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.6347%" y="341" width="0.0799%" height="15" fill="rgb(209,45,30)" fg:x="83" fg:w="1"/><text x="6.8847%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.6347%" y="325" width="0.0799%" height="15" fill="rgb(218,157,36)" fg:x="83" fg:w="1"/><text x="6.8847%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.6347%" y="309" width="0.0799%" height="15" fill="rgb(222,186,16)" fg:x="83" fg:w="1"/><text x="6.8847%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="6.6347%" y="421" width="0.3197%" height="15" fill="rgb(254,72,35)" fg:x="83" fg:w="4"/><text x="6.8847%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="6.7146%" y="405" width="0.2398%" height="15" fill="rgb(224,25,35)" fg:x="84" fg:w="3"/><text x="6.9646%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.8745%" y="389" width="0.0799%" height="15" fill="rgb(206,135,52)" fg:x="86" fg:w="1"/><text x="7.1245%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="6.6347%" y="437" width="0.3997%" height="15" fill="rgb(229,174,47)" fg:x="83" fg:w="5"/><text x="6.8847%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.9544%" y="421" width="0.0799%" height="15" fill="rgb(242,184,21)" fg:x="87" fg:w="1"/><text x="7.2044%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.9544%" y="405" width="0.0799%" height="15" fill="rgb(213,22,45)" fg:x="87" fg:w="1"/><text x="7.2044%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="7.0344%" y="437" width="0.2398%" height="15" fill="rgb(237,81,54)" fg:x="88" fg:w="3"/><text x="7.2844%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.0344%" y="421" width="0.2398%" height="15" fill="rgb(248,177,18)" fg:x="88" fg:w="3"/><text x="7.2844%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.0344%" y="405" width="0.2398%" height="15" fill="rgb(254,31,16)" fg:x="88" fg:w="3"/><text x="7.2844%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="7.0344%" y="389" width="0.2398%" height="15" fill="rgb(235,20,31)" fg:x="88" fg:w="3"/><text x="7.2844%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="7.1143%" y="373" width="0.1599%" height="15" fill="rgb(240,56,43)" fg:x="89" fg:w="2"/><text x="7.3643%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.1942%" y="357" width="0.0799%" height="15" fill="rgb(237,197,51)" fg:x="90" fg:w="1"/><text x="7.4442%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.1942%" y="341" width="0.0799%" height="15" fill="rgb(241,162,44)" fg:x="90" fg:w="1"/><text x="7.4442%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="7.3541%" y="421" width="0.1599%" height="15" fill="rgb(224,23,20)" fg:x="92" fg:w="2"/><text x="7.6041%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.7538%" y="389" width="0.0799%" height="15" fill="rgb(250,109,34)" fg:x="97" fg:w="1"/><text x="8.0038%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.7538%" y="373" width="0.0799%" height="15" fill="rgb(214,175,50)" fg:x="97" fg:w="1"/><text x="8.0038%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.7538%" y="357" width="0.0799%" height="15" fill="rgb(213,182,5)" fg:x="97" fg:w="1"/><text x="8.0038%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.7538%" y="341" width="0.0799%" height="15" fill="rgb(209,199,19)" fg:x="97" fg:w="1"/><text x="8.0038%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="7.5939%" y="405" width="0.3997%" height="15" fill="rgb(236,224,42)" fg:x="95" fg:w="5"/><text x="7.8439%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.8337%" y="389" width="0.1599%" height="15" fill="rgb(246,226,29)" fg:x="98" fg:w="2"/><text x="8.0837%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.9137%" y="373" width="0.0799%" height="15" fill="rgb(227,223,11)" fg:x="99" fg:w="1"/><text x="8.1637%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.9137%" y="357" width="0.0799%" height="15" fill="rgb(219,7,51)" fg:x="99" fg:w="1"/><text x="8.1637%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="7.5140%" y="421" width="0.5596%" height="15" fill="rgb(245,167,10)" fg:x="94" fg:w="7"/><text x="7.7640%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.9936%" y="405" width="0.0799%" height="15" fill="rgb(237,224,16)" fg:x="100" fg:w="1"/><text x="8.2436%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="7.2742%" y="437" width="0.8793%" height="15" fill="rgb(226,132,13)" fg:x="91" fg:w="11"/><text x="7.5242%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.0735%" y="421" width="0.0799%" height="15" fill="rgb(214,140,3)" fg:x="101" fg:w="1"/><text x="8.3235%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.0735%" y="405" width="0.0799%" height="15" fill="rgb(221,177,4)" fg:x="101" fg:w="1"/><text x="8.3235%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="6.6347%" y="453" width="1.5987%" height="15" fill="rgb(238,139,3)" fg:x="83" fg:w="20"/><text x="6.8847%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.1535%" y="437" width="0.0799%" height="15" fill="rgb(216,17,39)" fg:x="102" fg:w="1"/><text x="8.4035%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.56%)</title><rect x="5.8353%" y="485" width="2.5580%" height="15" fill="rgb(238,120,9)" fg:x="73" fg:w="32"/><text x="6.0853%" y="495.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.32%)</title><rect x="6.0751%" y="469" width="2.3181%" height="15" fill="rgb(244,92,53)" fg:x="76" fg:w="29"/><text x="6.3251%" y="479.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.2334%" y="453" width="0.1599%" height="15" fill="rgb(224,148,33)" fg:x="103" fg:w="2"/><text x="8.4834%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.2334%" y="437" width="0.1599%" height="15" fill="rgb(243,6,36)" fg:x="103" fg:w="2"/><text x="8.4834%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.2334%" y="421" width="0.1599%" height="15" fill="rgb(230,102,11)" fg:x="103" fg:w="2"/><text x="8.4834%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="8.3933%" y="453" width="0.1599%" height="15" fill="rgb(234,148,36)" fg:x="105" fg:w="2"/><text x="8.6433%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="8.5532%" y="437" width="0.1599%" height="15" fill="rgb(251,153,25)" fg:x="107" fg:w="2"/><text x="8.8032%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.7130%" y="437" width="0.0799%" height="15" fill="rgb(215,129,8)" fg:x="109" fg:w="1"/><text x="8.9630%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="8.8729%" y="421" width="0.1599%" height="15" fill="rgb(224,128,35)" fg:x="111" fg:w="2"/><text x="9.1229%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="8.3933%" y="485" width="0.8793%" height="15" fill="rgb(237,56,52)" fg:x="105" fg:w="11"/><text x="8.6433%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.88%)</title><rect x="8.3933%" y="469" width="0.8793%" height="15" fill="rgb(234,213,19)" fg:x="105" fg:w="11"/><text x="8.6433%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="8.5532%" y="453" width="0.7194%" height="15" fill="rgb(252,82,23)" fg:x="107" fg:w="9"/><text x="8.8032%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="8.7930%" y="437" width="0.4796%" height="15" fill="rgb(254,201,21)" fg:x="110" fg:w="6"/><text x="9.0430%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="9.0328%" y="421" width="0.2398%" height="15" fill="rgb(250,186,11)" fg:x="113" fg:w="3"/><text x="9.2828%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="9.1127%" y="405" width="0.1599%" height="15" fill="rgb(211,174,5)" fg:x="114" fg:w="2"/><text x="9.3627%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="9.1127%" y="389" width="0.1599%" height="15" fill="rgb(214,121,10)" fg:x="114" fg:w="2"/><text x="9.3627%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.1926%" y="373" width="0.0799%" height="15" fill="rgb(241,66,2)" fg:x="115" fg:w="1"/><text x="9.4426%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="9.2726%" y="469" width="0.0799%" height="15" fill="rgb(220,167,19)" fg:x="116" fg:w="1"/><text x="9.5226%" y="479.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="9.2726%" y="453" width="0.0799%" height="15" fill="rgb(231,54,50)" fg:x="116" fg:w="1"/><text x="9.5226%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="9.2726%" y="437" width="0.0799%" height="15" fill="rgb(239,217,53)" fg:x="116" fg:w="1"/><text x="9.5226%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.2726%" y="421" width="0.0799%" height="15" fill="rgb(248,8,0)" fg:x="116" fg:w="1"/><text x="9.5226%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.2726%" y="405" width="0.0799%" height="15" fill="rgb(229,118,37)" fg:x="116" fg:w="1"/><text x="9.5226%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.4325%" y="437" width="0.0799%" height="15" fill="rgb(253,223,43)" fg:x="118" fg:w="1"/><text x="9.6825%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.4325%" y="421" width="0.0799%" height="15" fill="rgb(211,77,36)" fg:x="118" fg:w="1"/><text x="9.6825%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="9.5124%" y="437" width="0.0799%" height="15" fill="rgb(219,3,53)" fg:x="119" fg:w="1"/><text x="9.7624%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.5124%" y="421" width="0.0799%" height="15" fill="rgb(244,45,42)" fg:x="119" fg:w="1"/><text x="9.7624%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.5124%" y="405" width="0.0799%" height="15" fill="rgb(225,95,27)" fg:x="119" fg:w="1"/><text x="9.7624%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.7522%" y="389" width="0.0799%" height="15" fill="rgb(207,74,8)" fg:x="122" fg:w="1"/><text x="10.0022%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.7522%" y="373" width="0.0799%" height="15" fill="rgb(243,63,36)" fg:x="122" fg:w="1"/><text x="10.0022%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.7522%" y="357" width="0.0799%" height="15" fill="rgb(211,180,12)" fg:x="122" fg:w="1"/><text x="10.0022%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="9.8321%" y="389" width="0.1599%" height="15" fill="rgb(254,166,49)" fg:x="123" fg:w="2"/><text x="10.0821%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="9.8321%" y="373" width="0.1599%" height="15" fill="rgb(205,19,0)" fg:x="123" fg:w="2"/><text x="10.0821%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.9920%" y="357" width="0.0799%" height="15" fill="rgb(224,172,32)" fg:x="125" fg:w="1"/><text x="10.2420%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="10.0719%" y="325" width="0.2398%" height="15" fill="rgb(254,136,30)" fg:x="126" fg:w="3"/><text x="10.3219%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="9.9920%" y="373" width="0.3997%" height="15" fill="rgb(246,19,35)" fg:x="125" fg:w="5"/><text x="10.2420%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="10.0719%" y="357" width="0.3197%" height="15" fill="rgb(219,24,36)" fg:x="126" fg:w="4"/><text x="10.3219%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="10.0719%" y="341" width="0.3197%" height="15" fill="rgb(251,55,1)" fg:x="126" fg:w="4"/><text x="10.3219%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="10.3118%" y="325" width="0.0799%" height="15" fill="rgb(218,117,39)" fg:x="129" fg:w="1"/><text x="10.5618%" y="335.50"></text></g><g><title>engine::session::Session::flush (63 samples, 5.04%)</title><rect x="5.4357%" y="581" width="5.0360%" height="15" fill="rgb(248,169,11)" fg:x="68" fg:w="63"/><text x="5.6857%" y="591.50">engine..</text></g><g><title>engine::session::state::State::close (61 samples, 4.88%)</title><rect x="5.5955%" y="565" width="4.8761%" height="15" fill="rgb(244,40,44)" fg:x="70" fg:w="61"/><text x="5.8455%" y="575.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (61 samples, 4.88%)</title><rect x="5.5955%" y="549" width="4.8761%" height="15" fill="rgb(234,62,37)" fg:x="70" fg:w="61"/><text x="5.8455%" y="559.50">engine..</text></g><g><title>core::iter::adapters::try_process (59 samples, 4.72%)</title><rect x="5.7554%" y="533" width="4.7162%" height="15" fill="rgb(207,117,42)" fg:x="72" fg:w="59"/><text x="6.0054%" y="543.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (59 samples, 4.72%)</title><rect x="5.7554%" y="517" width="4.7162%" height="15" fill="rgb(213,43,2)" fg:x="72" fg:w="59"/><text x="6.0054%" y="527.50">&lt;allo..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (58 samples, 4.64%)</title><rect x="5.8353%" y="501" width="4.6363%" height="15" fill="rgb(244,202,51)" fg:x="73" fg:w="58"/><text x="6.0853%" y="511.50">engin..</text></g><g><title>kernel::model::any_entity_changes (15 samples, 1.20%)</title><rect x="9.2726%" y="485" width="1.1990%" height="15" fill="rgb(253,174,46)" fg:x="116" fg:w="15"/><text x="9.5226%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.12%)</title><rect x="9.3525%" y="469" width="1.1191%" height="15" fill="rgb(251,23,1)" fg:x="117" fg:w="14"/><text x="9.6025%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.12%)</title><rect x="9.3525%" y="453" width="1.1191%" height="15" fill="rgb(253,26,1)" fg:x="117" fg:w="14"/><text x="9.6025%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="9.5923%" y="437" width="0.8793%" height="15" fill="rgb(216,89,31)" fg:x="120" fg:w="11"/><text x="9.8423%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.72%)</title><rect x="9.7522%" y="421" width="0.7194%" height="15" fill="rgb(209,109,5)" fg:x="122" fg:w="9"/><text x="10.0022%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="9.7522%" y="405" width="0.7194%" height="15" fill="rgb(229,63,13)" fg:x="122" fg:w="9"/><text x="10.0022%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="9.9920%" y="389" width="0.4796%" height="15" fill="rgb(238,137,54)" fg:x="125" fg:w="6"/><text x="10.2420%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.3917%" y="373" width="0.0799%" height="15" fill="rgb(228,1,9)" fg:x="130" fg:w="1"/><text x="10.6417%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="10.5516%" y="485" width="0.1599%" height="15" fill="rgb(249,120,48)" fg:x="132" fg:w="2"/><text x="10.8016%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.6315%" y="469" width="0.0799%" height="15" fill="rgb(209,72,36)" fg:x="133" fg:w="1"/><text x="10.8815%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.6315%" y="453" width="0.0799%" height="15" fill="rgb(247,98,49)" fg:x="133" fg:w="1"/><text x="10.8815%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.6315%" y="437" width="0.0799%" height="15" fill="rgb(233,75,36)" fg:x="133" fg:w="1"/><text x="10.8815%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="10.5516%" y="533" width="0.2398%" height="15" fill="rgb(225,14,24)" fg:x="132" fg:w="3"/><text x="10.8016%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="10.5516%" y="517" width="0.2398%" height="15" fill="rgb(237,193,20)" fg:x="132" fg:w="3"/><text x="10.8016%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="10.5516%" y="501" width="0.2398%" height="15" fill="rgb(239,122,19)" fg:x="132" fg:w="3"/><text x="10.8016%" y="511.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="10.7114%" y="485" width="0.0799%" height="15" fill="rgb(231,220,10)" fg:x="134" fg:w="1"/><text x="10.9614%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.7114%" y="469" width="0.0799%" height="15" fill="rgb(220,66,15)" fg:x="134" fg:w="1"/><text x="10.9614%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="10.7114%" y="453" width="0.0799%" height="15" fill="rgb(215,171,52)" fg:x="134" fg:w="1"/><text x="10.9614%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.7114%" y="437" width="0.0799%" height="15" fill="rgb(241,169,50)" fg:x="134" fg:w="1"/><text x="10.9614%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.7114%" y="421" width="0.0799%" height="15" fill="rgb(236,189,0)" fg:x="134" fg:w="1"/><text x="10.9614%" y="431.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="10.7914%" y="485" width="0.0799%" height="15" fill="rgb(217,147,20)" fg:x="135" fg:w="1"/><text x="11.0414%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="10.7914%" y="469" width="0.0799%" height="15" fill="rgb(206,188,39)" fg:x="135" fg:w="1"/><text x="11.0414%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="10.7914%" y="453" width="0.0799%" height="15" fill="rgb(227,118,25)" fg:x="135" fg:w="1"/><text x="11.0414%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.7914%" y="437" width="0.0799%" height="15" fill="rgb(248,171,40)" fg:x="135" fg:w="1"/><text x="11.0414%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.7914%" y="421" width="0.0799%" height="15" fill="rgb(251,90,54)" fg:x="135" fg:w="1"/><text x="11.0414%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8713%" y="469" width="0.0799%" height="15" fill="rgb(234,11,46)" fg:x="136" fg:w="1"/><text x="11.1213%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8713%" y="453" width="0.0799%" height="15" fill="rgb(229,134,13)" fg:x="136" fg:w="1"/><text x="11.1213%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="10.7914%" y="517" width="0.2398%" height="15" fill="rgb(223,129,3)" fg:x="135" fg:w="3"/><text x="11.0414%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="10.7914%" y="501" width="0.2398%" height="15" fill="rgb(221,124,13)" fg:x="135" fg:w="3"/><text x="11.0414%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="10.8713%" y="485" width="0.1599%" height="15" fill="rgb(234,3,18)" fg:x="136" fg:w="2"/><text x="11.1213%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.9512%" y="469" width="0.0799%" height="15" fill="rgb(249,199,20)" fg:x="137" fg:w="1"/><text x="11.2012%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.9512%" y="453" width="0.0799%" height="15" fill="rgb(224,134,6)" fg:x="137" fg:w="1"/><text x="11.2012%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.9512%" y="437" width="0.0799%" height="15" fill="rgb(254,83,26)" fg:x="137" fg:w="1"/><text x="11.2012%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.9512%" y="421" width="0.0799%" height="15" fill="rgb(217,88,9)" fg:x="137" fg:w="1"/><text x="11.2012%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.9512%" y="405" width="0.0799%" height="15" fill="rgb(225,73,2)" fg:x="137" fg:w="1"/><text x="11.2012%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.9512%" y="389" width="0.0799%" height="15" fill="rgb(226,44,39)" fg:x="137" fg:w="1"/><text x="11.2012%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="10.7914%" y="533" width="0.4796%" height="15" fill="rgb(228,53,17)" fg:x="135" fg:w="6"/><text x="11.0414%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="11.0312%" y="517" width="0.2398%" height="15" fill="rgb(212,27,27)" fg:x="138" fg:w="3"/><text x="11.2812%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="11.0312%" y="501" width="0.2398%" height="15" fill="rgb(241,50,6)" fg:x="138" fg:w="3"/><text x="11.2812%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.1111%" y="485" width="0.1599%" height="15" fill="rgb(225,28,51)" fg:x="139" fg:w="2"/><text x="11.3611%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.1910%" y="469" width="0.0799%" height="15" fill="rgb(215,33,16)" fg:x="140" fg:w="1"/><text x="11.4410%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="11.2710%" y="533" width="0.0799%" height="15" fill="rgb(243,40,39)" fg:x="141" fg:w="1"/><text x="11.5210%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="11.2710%" y="517" width="0.0799%" height="15" fill="rgb(225,11,42)" fg:x="141" fg:w="1"/><text x="11.5210%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.2710%" y="501" width="0.0799%" height="15" fill="rgb(241,220,38)" fg:x="141" fg:w="1"/><text x="11.5210%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.2710%" y="485" width="0.0799%" height="15" fill="rgb(244,52,35)" fg:x="141" fg:w="1"/><text x="11.5210%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.2710%" y="469" width="0.0799%" height="15" fill="rgb(246,42,46)" fg:x="141" fg:w="1"/><text x="11.5210%" y="479.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="11.3509%" y="517" width="0.0799%" height="15" fill="rgb(205,184,13)" fg:x="142" fg:w="1"/><text x="11.6009%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="11.3509%" y="501" width="0.0799%" height="15" fill="rgb(209,48,36)" fg:x="142" fg:w="1"/><text x="11.6009%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.3509%" y="485" width="0.0799%" height="15" fill="rgb(244,34,51)" fg:x="142" fg:w="1"/><text x="11.6009%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.4309%" y="485" width="0.0799%" height="15" fill="rgb(221,107,33)" fg:x="143" fg:w="1"/><text x="11.6809%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="11.5108%" y="485" width="0.0799%" height="15" fill="rgb(224,203,12)" fg:x="144" fg:w="1"/><text x="11.7608%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.5108%" y="469" width="0.0799%" height="15" fill="rgb(230,215,18)" fg:x="144" fg:w="1"/><text x="11.7608%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="11.4309%" y="501" width="0.2398%" height="15" fill="rgb(206,185,35)" fg:x="143" fg:w="3"/><text x="11.6809%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.5907%" y="485" width="0.0799%" height="15" fill="rgb(228,140,34)" fg:x="145" fg:w="1"/><text x="11.8407%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.5907%" y="469" width="0.0799%" height="15" fill="rgb(208,93,13)" fg:x="145" fg:w="1"/><text x="11.8407%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.5907%" y="453" width="0.0799%" height="15" fill="rgb(221,193,39)" fg:x="145" fg:w="1"/><text x="11.8407%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.5907%" y="437" width="0.0799%" height="15" fill="rgb(241,132,34)" fg:x="145" fg:w="1"/><text x="11.8407%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.5907%" y="421" width="0.0799%" height="15" fill="rgb(221,141,10)" fg:x="145" fg:w="1"/><text x="11.8407%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.6707%" y="469" width="0.0799%" height="15" fill="rgb(226,90,31)" fg:x="146" fg:w="1"/><text x="11.9207%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.6707%" y="453" width="0.0799%" height="15" fill="rgb(243,75,5)" fg:x="146" fg:w="1"/><text x="11.9207%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.6707%" y="437" width="0.0799%" height="15" fill="rgb(227,156,21)" fg:x="146" fg:w="1"/><text x="11.9207%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.36%)</title><rect x="10.4716%" y="549" width="1.3589%" height="15" fill="rgb(250,195,8)" fg:x="131" fg:w="17"/><text x="10.7216%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.48%)</title><rect x="11.3509%" y="533" width="0.4796%" height="15" fill="rgb(220,134,5)" fg:x="142" fg:w="6"/><text x="11.6009%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="11.4309%" y="517" width="0.3997%" height="15" fill="rgb(246,106,34)" fg:x="143" fg:w="5"/><text x="11.6809%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="11.6707%" y="501" width="0.1599%" height="15" fill="rgb(205,1,4)" fg:x="146" fg:w="2"/><text x="11.9207%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="11.6707%" y="485" width="0.1599%" height="15" fill="rgb(224,151,29)" fg:x="146" fg:w="2"/><text x="11.9207%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.7506%" y="469" width="0.0799%" height="15" fill="rgb(251,196,0)" fg:x="147" fg:w="1"/><text x="12.0006%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.7506%" y="453" width="0.0799%" height="15" fill="rgb(212,127,0)" fg:x="147" fg:w="1"/><text x="12.0006%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.7506%" y="437" width="0.0799%" height="15" fill="rgb(236,71,53)" fg:x="147" fg:w="1"/><text x="12.0006%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.7506%" y="421" width="0.0799%" height="15" fill="rgb(227,99,0)" fg:x="147" fg:w="1"/><text x="12.0006%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="11.7506%" y="405" width="0.0799%" height="15" fill="rgb(239,89,21)" fg:x="147" fg:w="1"/><text x="12.0006%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.8305%" y="517" width="0.0799%" height="15" fill="rgb(243,122,19)" fg:x="148" fg:w="1"/><text x="12.0805%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.8305%" y="501" width="0.0799%" height="15" fill="rgb(229,192,45)" fg:x="148" fg:w="1"/><text x="12.0805%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.8305%" y="485" width="0.0799%" height="15" fill="rgb(235,165,35)" fg:x="148" fg:w="1"/><text x="12.0805%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.8305%" y="469" width="0.0799%" height="15" fill="rgb(253,202,0)" fg:x="148" fg:w="1"/><text x="12.0805%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.8305%" y="453" width="0.0799%" height="15" fill="rgb(235,51,20)" fg:x="148" fg:w="1"/><text x="12.0805%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.52%)</title><rect x="10.4716%" y="565" width="1.5188%" height="15" fill="rgb(218,95,46)" fg:x="131" fg:w="19"/><text x="10.7216%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="11.8305%" y="549" width="0.1599%" height="15" fill="rgb(212,81,10)" fg:x="148" fg:w="2"/><text x="12.0805%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="11.8305%" y="533" width="0.1599%" height="15" fill="rgb(240,59,0)" fg:x="148" fg:w="2"/><text x="12.0805%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.9105%" y="517" width="0.0799%" height="15" fill="rgb(212,191,42)" fg:x="149" fg:w="1"/><text x="12.1605%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9105%" y="501" width="0.0799%" height="15" fill="rgb(233,140,3)" fg:x="149" fg:w="1"/><text x="12.1605%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.9105%" y="485" width="0.0799%" height="15" fill="rgb(215,69,23)" fg:x="149" fg:w="1"/><text x="12.1605%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9105%" y="469" width="0.0799%" height="15" fill="rgb(240,202,20)" fg:x="149" fg:w="1"/><text x="12.1605%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="11.9105%" y="453" width="0.0799%" height="15" fill="rgb(209,146,50)" fg:x="149" fg:w="1"/><text x="12.1605%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="11.9904%" y="501" width="0.0799%" height="15" fill="rgb(253,102,54)" fg:x="150" fg:w="1"/><text x="12.2404%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.0703%" y="485" width="0.0799%" height="15" fill="rgb(250,173,47)" fg:x="151" fg:w="1"/><text x="12.3203%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.0703%" y="469" width="0.0799%" height="15" fill="rgb(232,142,7)" fg:x="151" fg:w="1"/><text x="12.3203%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.0703%" y="453" width="0.0799%" height="15" fill="rgb(230,157,47)" fg:x="151" fg:w="1"/><text x="12.3203%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.0703%" y="437" width="0.0799%" height="15" fill="rgb(214,177,35)" fg:x="151" fg:w="1"/><text x="12.3203%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0703%" y="421" width="0.0799%" height="15" fill="rgb(234,119,46)" fg:x="151" fg:w="1"/><text x="12.3203%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="11.9904%" y="517" width="0.2398%" height="15" fill="rgb(241,180,50)" fg:x="150" fg:w="3"/><text x="12.2404%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.0703%" y="501" width="0.1599%" height="15" fill="rgb(221,54,25)" fg:x="151" fg:w="2"/><text x="12.3203%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.1503%" y="485" width="0.0799%" height="15" fill="rgb(209,157,44)" fg:x="152" fg:w="1"/><text x="12.4003%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1503%" y="469" width="0.0799%" height="15" fill="rgb(246,115,41)" fg:x="152" fg:w="1"/><text x="12.4003%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.1503%" y="453" width="0.0799%" height="15" fill="rgb(229,86,1)" fg:x="152" fg:w="1"/><text x="12.4003%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1503%" y="437" width="0.0799%" height="15" fill="rgb(240,108,53)" fg:x="152" fg:w="1"/><text x="12.4003%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.1503%" y="421" width="0.0799%" height="15" fill="rgb(227,134,2)" fg:x="152" fg:w="1"/><text x="12.4003%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1503%" y="405" width="0.0799%" height="15" fill="rgb(213,129,25)" fg:x="152" fg:w="1"/><text x="12.4003%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1503%" y="389" width="0.0799%" height="15" fill="rgb(226,35,21)" fg:x="152" fg:w="1"/><text x="12.4003%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.2302%" y="485" width="0.0799%" height="15" fill="rgb(208,129,26)" fg:x="153" fg:w="1"/><text x="12.4802%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="11.9904%" y="549" width="0.3997%" height="15" fill="rgb(224,83,6)" fg:x="150" fg:w="5"/><text x="12.2404%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="11.9904%" y="533" width="0.3997%" height="15" fill="rgb(227,52,39)" fg:x="150" fg:w="5"/><text x="12.2404%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="12.2302%" y="517" width="0.1599%" height="15" fill="rgb(241,30,17)" fg:x="153" fg:w="2"/><text x="12.4802%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.2302%" y="501" width="0.1599%" height="15" fill="rgb(246,186,42)" fg:x="153" fg:w="2"/><text x="12.4802%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.3102%" y="485" width="0.0799%" height="15" fill="rgb(221,169,15)" fg:x="154" fg:w="1"/><text x="12.5602%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.3102%" y="469" width="0.0799%" height="15" fill="rgb(235,108,21)" fg:x="154" fg:w="1"/><text x="12.5602%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.3102%" y="453" width="0.0799%" height="15" fill="rgb(219,148,30)" fg:x="154" fg:w="1"/><text x="12.5602%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.3102%" y="437" width="0.0799%" height="15" fill="rgb(220,109,5)" fg:x="154" fg:w="1"/><text x="12.5602%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="12.3102%" y="421" width="0.0799%" height="15" fill="rgb(213,203,48)" fg:x="154" fg:w="1"/><text x="12.5602%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.3901%" y="501" width="0.0799%" height="15" fill="rgb(244,71,33)" fg:x="155" fg:w="1"/><text x="12.6401%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.3901%" y="549" width="0.1599%" height="15" fill="rgb(209,23,2)" fg:x="155" fg:w="2"/><text x="12.6401%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="12.3901%" y="533" width="0.1599%" height="15" fill="rgb(219,97,7)" fg:x="155" fg:w="2"/><text x="12.6401%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.3901%" y="517" width="0.1599%" height="15" fill="rgb(216,161,23)" fg:x="155" fg:w="2"/><text x="12.6401%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="12.4700%" y="501" width="0.0799%" height="15" fill="rgb(207,45,42)" fg:x="156" fg:w="1"/><text x="12.7200%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="12.4700%" y="485" width="0.0799%" height="15" fill="rgb(241,61,4)" fg:x="156" fg:w="1"/><text x="12.7200%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.6299%" y="469" width="0.1599%" height="15" fill="rgb(236,170,1)" fg:x="158" fg:w="2"/><text x="12.8799%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7098%" y="453" width="0.0799%" height="15" fill="rgb(239,72,5)" fg:x="159" fg:w="1"/><text x="12.9598%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7098%" y="437" width="0.0799%" height="15" fill="rgb(214,13,50)" fg:x="159" fg:w="1"/><text x="12.9598%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7098%" y="421" width="0.0799%" height="15" fill="rgb(224,88,9)" fg:x="159" fg:w="1"/><text x="12.9598%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7098%" y="405" width="0.0799%" height="15" fill="rgb(238,192,34)" fg:x="159" fg:w="1"/><text x="12.9598%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.7098%" y="389" width="0.0799%" height="15" fill="rgb(217,203,50)" fg:x="159" fg:w="1"/><text x="12.9598%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.7098%" y="373" width="0.0799%" height="15" fill="rgb(241,123,32)" fg:x="159" fg:w="1"/><text x="12.9598%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.7098%" y="357" width="0.0799%" height="15" fill="rgb(248,151,39)" fg:x="159" fg:w="1"/><text x="12.9598%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.7098%" y="341" width="0.0799%" height="15" fill="rgb(208,89,6)" fg:x="159" fg:w="1"/><text x="12.9598%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.7098%" y="325" width="0.0799%" height="15" fill="rgb(254,43,26)" fg:x="159" fg:w="1"/><text x="12.9598%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.7098%" y="309" width="0.0799%" height="15" fill="rgb(216,158,13)" fg:x="159" fg:w="1"/><text x="12.9598%" y="319.50"></text></g><g><title>plugins_core::build::Build::holding (30 samples, 2.40%)</title><rect x="10.4716%" y="581" width="2.3981%" height="15" fill="rgb(212,47,37)" fg:x="131" fg:w="30"/><text x="10.7216%" y="591.50">pl..</text></g><g><title>plugins_core::tools::set_container (11 samples, 0.88%)</title><rect x="11.9904%" y="565" width="0.8793%" height="15" fill="rgb(254,16,10)" fg:x="150" fg:w="11"/><text x="12.2404%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="12.5500%" y="549" width="0.3197%" height="15" fill="rgb(223,228,16)" fg:x="157" fg:w="4"/><text x="12.8000%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="12.6299%" y="533" width="0.2398%" height="15" fill="rgb(249,108,50)" fg:x="158" fg:w="3"/><text x="12.8799%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="12.6299%" y="517" width="0.2398%" height="15" fill="rgb(208,220,5)" fg:x="158" fg:w="3"/><text x="12.8799%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="12.6299%" y="501" width="0.2398%" height="15" fill="rgb(217,89,48)" fg:x="158" fg:w="3"/><text x="12.8799%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.6299%" y="485" width="0.2398%" height="15" fill="rgb(212,113,41)" fg:x="158" fg:w="3"/><text x="12.8799%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.7898%" y="469" width="0.0799%" height="15" fill="rgb(231,127,5)" fg:x="160" fg:w="1"/><text x="13.0398%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.7898%" y="453" width="0.0799%" height="15" fill="rgb(217,141,17)" fg:x="160" fg:w="1"/><text x="13.0398%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.7898%" y="437" width="0.0799%" height="15" fill="rgb(245,125,54)" fg:x="160" fg:w="1"/><text x="13.0398%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.7898%" y="421" width="0.0799%" height="15" fill="rgb(248,125,3)" fg:x="160" fg:w="1"/><text x="13.0398%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.7898%" y="405" width="0.0799%" height="15" fill="rgb(236,119,51)" fg:x="160" fg:w="1"/><text x="13.0398%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.7898%" y="389" width="0.0799%" height="15" fill="rgb(239,99,8)" fg:x="160" fg:w="1"/><text x="13.0398%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9496%" y="549" width="0.0799%" height="15" fill="rgb(224,228,4)" fg:x="162" fg:w="1"/><text x="13.1996%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9496%" y="533" width="0.0799%" height="15" fill="rgb(220,131,45)" fg:x="162" fg:w="1"/><text x="13.1996%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.9496%" y="517" width="0.0799%" height="15" fill="rgb(215,62,5)" fg:x="162" fg:w="1"/><text x="13.1996%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.9496%" y="501" width="0.0799%" height="15" fill="rgb(253,12,24)" fg:x="162" fg:w="1"/><text x="13.1996%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.9496%" y="485" width="0.0799%" height="15" fill="rgb(248,120,50)" fg:x="162" fg:w="1"/><text x="13.1996%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="12.9496%" y="469" width="0.0799%" height="15" fill="rgb(245,194,10)" fg:x="162" fg:w="1"/><text x="13.1996%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="12.9496%" y="453" width="0.0799%" height="15" fill="rgb(241,149,38)" fg:x="162" fg:w="1"/><text x="13.1996%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="13.0296%" y="549" width="0.0799%" height="15" fill="rgb(219,215,7)" fg:x="163" fg:w="1"/><text x="13.2796%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.0296%" y="533" width="0.0799%" height="15" fill="rgb(208,120,31)" fg:x="163" fg:w="1"/><text x="13.2796%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.0296%" y="517" width="0.0799%" height="15" fill="rgb(244,30,8)" fg:x="163" fg:w="1"/><text x="13.2796%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.0296%" y="501" width="0.0799%" height="15" fill="rgb(238,35,44)" fg:x="163" fg:w="1"/><text x="13.2796%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="13.1095%" y="533" width="0.0799%" height="15" fill="rgb(243,218,37)" fg:x="164" fg:w="1"/><text x="13.3595%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.1095%" y="517" width="0.0799%" height="15" fill="rgb(218,169,10)" fg:x="164" fg:w="1"/><text x="13.3595%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="13.1095%" y="549" width="0.1599%" height="15" fill="rgb(221,144,10)" fg:x="164" fg:w="2"/><text x="13.3595%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.1894%" y="533" width="0.0799%" height="15" fill="rgb(226,41,38)" fg:x="165" fg:w="1"/><text x="13.4394%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.1894%" y="517" width="0.0799%" height="15" fill="rgb(228,3,1)" fg:x="165" fg:w="1"/><text x="13.4394%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1894%" y="501" width="0.0799%" height="15" fill="rgb(209,129,12)" fg:x="165" fg:w="1"/><text x="13.4394%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2694%" y="469" width="0.0799%" height="15" fill="rgb(213,136,33)" fg:x="166" fg:w="1"/><text x="13.5194%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2694%" y="453" width="0.0799%" height="15" fill="rgb(209,181,29)" fg:x="166" fg:w="1"/><text x="13.5194%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.2694%" y="437" width="0.0799%" height="15" fill="rgb(234,173,18)" fg:x="166" fg:w="1"/><text x="13.5194%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="13.2694%" y="533" width="0.1599%" height="15" fill="rgb(227,73,47)" fg:x="166" fg:w="2"/><text x="13.5194%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="13.2694%" y="517" width="0.1599%" height="15" fill="rgb(234,9,34)" fg:x="166" fg:w="2"/><text x="13.5194%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="13.2694%" y="501" width="0.1599%" height="15" fill="rgb(235,172,15)" fg:x="166" fg:w="2"/><text x="13.5194%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="13.2694%" y="485" width="0.1599%" height="15" fill="rgb(245,61,2)" fg:x="166" fg:w="2"/><text x="13.5194%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3493%" y="469" width="0.0799%" height="15" fill="rgb(238,39,47)" fg:x="167" fg:w="1"/><text x="13.5993%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.3493%" y="453" width="0.0799%" height="15" fill="rgb(234,37,24)" fg:x="167" fg:w="1"/><text x="13.5993%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3493%" y="437" width="0.0799%" height="15" fill="rgb(248,223,24)" fg:x="167" fg:w="1"/><text x="13.5993%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3493%" y="421" width="0.0799%" height="15" fill="rgb(223,12,15)" fg:x="167" fg:w="1"/><text x="13.5993%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.3493%" y="405" width="0.0799%" height="15" fill="rgb(249,6,3)" fg:x="167" fg:w="1"/><text x="13.5993%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="13.4293%" y="533" width="0.0799%" height="15" fill="rgb(237,105,33)" fg:x="168" fg:w="1"/><text x="13.6793%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="13.5891%" y="437" width="0.0799%" height="15" fill="rgb(252,208,35)" fg:x="170" fg:w="1"/><text x="13.8391%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="13.5092%" y="501" width="0.2398%" height="15" fill="rgb(215,181,35)" fg:x="169" fg:w="3"/><text x="13.7592%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="13.5092%" y="485" width="0.2398%" height="15" fill="rgb(246,212,3)" fg:x="169" fg:w="3"/><text x="13.7592%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="13.5092%" y="469" width="0.2398%" height="15" fill="rgb(247,156,24)" fg:x="169" fg:w="3"/><text x="13.7592%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="13.5891%" y="453" width="0.1599%" height="15" fill="rgb(248,9,31)" fg:x="170" fg:w="2"/><text x="13.8391%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="13.6691%" y="437" width="0.0799%" height="15" fill="rgb(234,26,45)" fg:x="171" fg:w="1"/><text x="13.9191%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6691%" y="421" width="0.0799%" height="15" fill="rgb(249,11,32)" fg:x="171" fg:w="1"/><text x="13.9191%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="13.6691%" y="405" width="0.0799%" height="15" fill="rgb(249,162,33)" fg:x="171" fg:w="1"/><text x="13.9191%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6691%" y="389" width="0.0799%" height="15" fill="rgb(232,4,32)" fg:x="171" fg:w="1"/><text x="13.9191%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6691%" y="373" width="0.0799%" height="15" fill="rgb(212,5,45)" fg:x="171" fg:w="1"/><text x="13.9191%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="13.2694%" y="549" width="0.5596%" height="15" fill="rgb(227,95,13)" fg:x="166" fg:w="7"/><text x="13.5194%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="13.5092%" y="533" width="0.3197%" height="15" fill="rgb(223,205,10)" fg:x="169" fg:w="4"/><text x="13.7592%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="13.5092%" y="517" width="0.3197%" height="15" fill="rgb(222,178,8)" fg:x="169" fg:w="4"/><text x="13.7592%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="13.7490%" y="501" width="0.0799%" height="15" fill="rgb(216,13,22)" fg:x="172" fg:w="1"/><text x="13.9990%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.7490%" y="485" width="0.0799%" height="15" fill="rgb(240,167,12)" fg:x="172" fg:w="1"/><text x="13.9990%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7490%" y="469" width="0.0799%" height="15" fill="rgb(235,68,35)" fg:x="172" fg:w="1"/><text x="13.9990%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="13.8289%" y="549" width="0.0799%" height="15" fill="rgb(253,40,27)" fg:x="173" fg:w="1"/><text x="14.0789%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="13.8289%" y="533" width="0.0799%" height="15" fill="rgb(214,19,28)" fg:x="173" fg:w="1"/><text x="14.0789%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.8289%" y="517" width="0.0799%" height="15" fill="rgb(210,167,45)" fg:x="173" fg:w="1"/><text x="14.0789%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8289%" y="501" width="0.0799%" height="15" fill="rgb(232,97,40)" fg:x="173" fg:w="1"/><text x="14.0789%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8289%" y="485" width="0.0799%" height="15" fill="rgb(250,35,23)" fg:x="173" fg:w="1"/><text x="14.0789%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8289%" y="469" width="0.0799%" height="15" fill="rgb(248,47,53)" fg:x="173" fg:w="1"/><text x="14.0789%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.8289%" y="453" width="0.0799%" height="15" fill="rgb(226,58,50)" fg:x="173" fg:w="1"/><text x="14.0789%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.8289%" y="437" width="0.0799%" height="15" fill="rgb(217,105,26)" fg:x="173" fg:w="1"/><text x="14.0789%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.8289%" y="421" width="0.0799%" height="15" fill="rgb(208,64,1)" fg:x="173" fg:w="1"/><text x="14.0789%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.8289%" y="405" width="0.0799%" height="15" fill="rgb(214,80,1)" fg:x="173" fg:w="1"/><text x="14.0789%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.8289%" y="389" width="0.0799%" height="15" fill="rgb(206,175,26)" fg:x="173" fg:w="1"/><text x="14.0789%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.8289%" y="373" width="0.0799%" height="15" fill="rgb(235,156,37)" fg:x="173" fg:w="1"/><text x="14.0789%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.8289%" y="357" width="0.0799%" height="15" fill="rgb(213,100,9)" fg:x="173" fg:w="1"/><text x="14.0789%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.8289%" y="341" width="0.0799%" height="15" fill="rgb(241,15,13)" fg:x="173" fg:w="1"/><text x="14.0789%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.8289%" y="325" width="0.0799%" height="15" fill="rgb(205,97,43)" fg:x="173" fg:w="1"/><text x="14.0789%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.8289%" y="309" width="0.0799%" height="15" fill="rgb(216,106,32)" fg:x="173" fg:w="1"/><text x="14.0789%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.8289%" y="293" width="0.0799%" height="15" fill="rgb(226,200,8)" fg:x="173" fg:w="1"/><text x="14.0789%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.8289%" y="277" width="0.0799%" height="15" fill="rgb(244,54,29)" fg:x="173" fg:w="1"/><text x="14.0789%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="13.9089%" y="501" width="0.0799%" height="15" fill="rgb(252,169,12)" fg:x="174" fg:w="1"/><text x="14.1589%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.9089%" y="485" width="0.0799%" height="15" fill="rgb(231,199,11)" fg:x="174" fg:w="1"/><text x="14.1589%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.9888%" y="485" width="0.0799%" height="15" fill="rgb(233,191,18)" fg:x="175" fg:w="1"/><text x="14.2388%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="13.9089%" y="517" width="0.2398%" height="15" fill="rgb(215,83,47)" fg:x="174" fg:w="3"/><text x="14.1589%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.9888%" y="501" width="0.1599%" height="15" fill="rgb(251,67,19)" fg:x="175" fg:w="2"/><text x="14.2388%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.0687%" y="485" width="0.0799%" height="15" fill="rgb(240,7,20)" fg:x="176" fg:w="1"/><text x="14.3187%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="14.1487%" y="501" width="0.0799%" height="15" fill="rgb(210,150,26)" fg:x="177" fg:w="1"/><text x="14.3987%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="14.1487%" y="517" width="0.1599%" height="15" fill="rgb(228,75,42)" fg:x="177" fg:w="2"/><text x="14.3987%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.2286%" y="501" width="0.0799%" height="15" fill="rgb(237,134,48)" fg:x="178" fg:w="1"/><text x="14.4786%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.2286%" y="485" width="0.0799%" height="15" fill="rgb(205,80,50)" fg:x="178" fg:w="1"/><text x="14.4786%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2286%" y="469" width="0.0799%" height="15" fill="rgb(217,74,48)" fg:x="178" fg:w="1"/><text x="14.4786%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.2286%" y="453" width="0.0799%" height="15" fill="rgb(205,82,50)" fg:x="178" fg:w="1"/><text x="14.4786%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2286%" y="437" width="0.0799%" height="15" fill="rgb(228,1,33)" fg:x="178" fg:w="1"/><text x="14.4786%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.2286%" y="421" width="0.0799%" height="15" fill="rgb(214,50,23)" fg:x="178" fg:w="1"/><text x="14.4786%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.2286%" y="405" width="0.0799%" height="15" fill="rgb(210,62,9)" fg:x="178" fg:w="1"/><text x="14.4786%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.44%)</title><rect x="12.9496%" y="565" width="1.4388%" height="15" fill="rgb(210,104,37)" fg:x="162" fg:w="18"/><text x="13.1996%" y="575.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.48%)</title><rect x="13.9089%" y="549" width="0.4796%" height="15" fill="rgb(232,104,43)" fg:x="174" fg:w="6"/><text x="14.1589%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="13.9089%" y="533" width="0.4796%" height="15" fill="rgb(244,52,6)" fg:x="174" fg:w="6"/><text x="14.1589%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.3086%" y="517" width="0.0799%" height="15" fill="rgb(211,174,52)" fg:x="179" fg:w="1"/><text x="14.5586%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (20 samples, 1.60%)</title><rect x="12.8697%" y="581" width="1.5987%" height="15" fill="rgb(229,48,4)" fg:x="161" fg:w="20"/><text x="13.1197%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="14.3885%" y="565" width="0.0799%" height="15" fill="rgb(205,155,16)" fg:x="180" fg:w="1"/><text x="14.6385%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.3885%" y="549" width="0.0799%" height="15" fill="rgb(211,141,53)" fg:x="180" fg:w="1"/><text x="14.6385%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3885%" y="533" width="0.0799%" height="15" fill="rgb(240,148,11)" fg:x="180" fg:w="1"/><text x="14.6385%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3885%" y="517" width="0.0799%" height="15" fill="rgb(214,45,23)" fg:x="180" fg:w="1"/><text x="14.6385%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3885%" y="501" width="0.0799%" height="15" fill="rgb(248,74,26)" fg:x="180" fg:w="1"/><text x="14.6385%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.3885%" y="485" width="0.0799%" height="15" fill="rgb(218,121,16)" fg:x="180" fg:w="1"/><text x="14.6385%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.3885%" y="469" width="0.0799%" height="15" fill="rgb(218,10,47)" fg:x="180" fg:w="1"/><text x="14.6385%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.3885%" y="453" width="0.0799%" height="15" fill="rgb(227,99,14)" fg:x="180" fg:w="1"/><text x="14.6385%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.3885%" y="437" width="0.0799%" height="15" fill="rgb(229,83,46)" fg:x="180" fg:w="1"/><text x="14.6385%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.3885%" y="421" width="0.0799%" height="15" fill="rgb(228,25,1)" fg:x="180" fg:w="1"/><text x="14.6385%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.3885%" y="405" width="0.0799%" height="15" fill="rgb(252,190,15)" fg:x="180" fg:w="1"/><text x="14.6385%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.3885%" y="389" width="0.0799%" height="15" fill="rgb(213,103,51)" fg:x="180" fg:w="1"/><text x="14.6385%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.3885%" y="373" width="0.0799%" height="15" fill="rgb(220,38,44)" fg:x="180" fg:w="1"/><text x="14.6385%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.3885%" y="357" width="0.0799%" height="15" fill="rgb(210,45,26)" fg:x="180" fg:w="1"/><text x="14.6385%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.3885%" y="341" width="0.0799%" height="15" fill="rgb(205,95,48)" fg:x="180" fg:w="1"/><text x="14.6385%" y="351.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="14.4684%" y="549" width="0.1599%" height="15" fill="rgb(225,179,37)" fg:x="181" fg:w="2"/><text x="14.7184%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.5484%" y="533" width="0.0799%" height="15" fill="rgb(230,209,3)" fg:x="182" fg:w="1"/><text x="14.7984%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="14.5484%" y="517" width="0.0799%" height="15" fill="rgb(248,12,46)" fg:x="182" fg:w="1"/><text x="14.7984%" y="527.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="14.4684%" y="581" width="0.2398%" height="15" fill="rgb(234,18,0)" fg:x="181" fg:w="3"/><text x="14.7184%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="14.4684%" y="565" width="0.2398%" height="15" fill="rgb(238,197,14)" fg:x="181" fg:w="3"/><text x="14.7184%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.6283%" y="549" width="0.0799%" height="15" fill="rgb(251,162,48)" fg:x="183" fg:w="1"/><text x="14.8783%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.6283%" y="533" width="0.0799%" height="15" fill="rgb(237,73,42)" fg:x="183" fg:w="1"/><text x="14.8783%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.6283%" y="517" width="0.0799%" height="15" fill="rgb(211,108,8)" fg:x="183" fg:w="1"/><text x="14.8783%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="14.7082%" y="565" width="0.0799%" height="15" fill="rgb(213,45,22)" fg:x="184" fg:w="1"/><text x="14.9582%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="14.7082%" y="549" width="0.0799%" height="15" fill="rgb(252,154,5)" fg:x="184" fg:w="1"/><text x="14.9582%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.7082%" y="533" width="0.0799%" height="15" fill="rgb(221,79,52)" fg:x="184" fg:w="1"/><text x="14.9582%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="14.7082%" y="517" width="0.0799%" height="15" fill="rgb(229,220,36)" fg:x="184" fg:w="1"/><text x="14.9582%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7882%" y="565" width="0.0799%" height="15" fill="rgb(211,17,16)" fg:x="185" fg:w="1"/><text x="15.0382%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7882%" y="549" width="0.0799%" height="15" fill="rgb(222,55,31)" fg:x="185" fg:w="1"/><text x="15.0382%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7882%" y="533" width="0.0799%" height="15" fill="rgb(221,221,31)" fg:x="185" fg:w="1"/><text x="15.0382%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.7882%" y="517" width="0.0799%" height="15" fill="rgb(227,168,26)" fg:x="185" fg:w="1"/><text x="15.0382%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.7882%" y="501" width="0.0799%" height="15" fill="rgb(224,139,9)" fg:x="185" fg:w="1"/><text x="15.0382%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.7882%" y="485" width="0.0799%" height="15" fill="rgb(254,172,0)" fg:x="185" fg:w="1"/><text x="15.0382%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7882%" y="469" width="0.0799%" height="15" fill="rgb(235,203,1)" fg:x="185" fg:w="1"/><text x="15.0382%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7882%" y="453" width="0.0799%" height="15" fill="rgb(216,205,24)" fg:x="185" fg:w="1"/><text x="15.0382%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.7882%" y="437" width="0.0799%" height="15" fill="rgb(233,24,6)" fg:x="185" fg:w="1"/><text x="15.0382%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.7882%" y="421" width="0.0799%" height="15" fill="rgb(244,110,9)" fg:x="185" fg:w="1"/><text x="15.0382%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.7882%" y="405" width="0.0799%" height="15" fill="rgb(239,222,42)" fg:x="185" fg:w="1"/><text x="15.0382%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.7882%" y="389" width="0.0799%" height="15" fill="rgb(218,145,13)" fg:x="185" fg:w="1"/><text x="15.0382%" y="399.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (3 samples, 0.24%)</title><rect x="14.8681%" y="565" width="0.2398%" height="15" fill="rgb(207,69,11)" fg:x="186" fg:w="3"/><text x="15.1181%" y="575.50"></text></g><g><title>engine::users::model::add_username_to_key (3 samples, 0.24%)</title><rect x="14.8681%" y="549" width="0.2398%" height="15" fill="rgb(220,223,22)" fg:x="186" fg:w="3"/><text x="15.1181%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.9480%" y="533" width="0.1599%" height="15" fill="rgb(245,102,5)" fg:x="187" fg:w="2"/><text x="15.1980%" y="543.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (2 samples, 0.16%)</title><rect x="14.9480%" y="517" width="0.1599%" height="15" fill="rgb(211,148,2)" fg:x="187" fg:w="2"/><text x="15.1980%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.9480%" y="501" width="0.1599%" height="15" fill="rgb(241,13,44)" fg:x="187" fg:w="2"/><text x="15.1980%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="14.9480%" y="485" width="0.1599%" height="15" fill="rgb(219,137,21)" fg:x="187" fg:w="2"/><text x="15.1980%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="15.1079%" y="517" width="0.0799%" height="15" fill="rgb(242,206,5)" fg:x="189" fg:w="1"/><text x="15.3579%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.1079%" y="501" width="0.0799%" height="15" fill="rgb(217,114,22)" fg:x="189" fg:w="1"/><text x="15.3579%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.1878%" y="469" width="0.0799%" height="15" fill="rgb(253,206,42)" fg:x="190" fg:w="1"/><text x="15.4378%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.1878%" y="453" width="0.0799%" height="15" fill="rgb(236,102,18)" fg:x="190" fg:w="1"/><text x="15.4378%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.1878%" y="437" width="0.0799%" height="15" fill="rgb(208,59,49)" fg:x="190" fg:w="1"/><text x="15.4378%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1878%" y="421" width="0.0799%" height="15" fill="rgb(215,194,28)" fg:x="190" fg:w="1"/><text x="15.4378%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="15.2678%" y="469" width="0.0799%" height="15" fill="rgb(243,207,11)" fg:x="191" fg:w="1"/><text x="15.5178%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.2678%" y="453" width="0.0799%" height="15" fill="rgb(254,179,35)" fg:x="191" fg:w="1"/><text x="15.5178%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.2678%" y="437" width="0.0799%" height="15" fill="rgb(235,97,3)" fg:x="191" fg:w="1"/><text x="15.5178%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2678%" y="421" width="0.0799%" height="15" fill="rgb(215,155,33)" fg:x="191" fg:w="1"/><text x="15.5178%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.2678%" y="405" width="0.0799%" height="15" fill="rgb(223,128,12)" fg:x="191" fg:w="1"/><text x="15.5178%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.2678%" y="389" width="0.0799%" height="15" fill="rgb(208,157,18)" fg:x="191" fg:w="1"/><text x="15.5178%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="15.2678%" y="373" width="0.0799%" height="15" fill="rgb(249,70,54)" fg:x="191" fg:w="1"/><text x="15.5178%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="15.2678%" y="357" width="0.0799%" height="15" fill="rgb(244,118,24)" fg:x="191" fg:w="1"/><text x="15.5178%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3477%" y="389" width="0.0799%" height="15" fill="rgb(211,54,0)" fg:x="192" fg:w="1"/><text x="15.5977%" y="399.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="15.3477%" y="421" width="0.1599%" height="15" fill="rgb(245,137,45)" fg:x="192" fg:w="2"/><text x="15.5977%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.3477%" y="405" width="0.1599%" height="15" fill="rgb(232,154,31)" fg:x="192" fg:w="2"/><text x="15.5977%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.4277%" y="389" width="0.0799%" height="15" fill="rgb(253,6,39)" fg:x="193" fg:w="1"/><text x="15.6777%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.4277%" y="373" width="0.0799%" height="15" fill="rgb(234,183,24)" fg:x="193" fg:w="1"/><text x="15.6777%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.4277%" y="357" width="0.0799%" height="15" fill="rgb(252,84,40)" fg:x="193" fg:w="1"/><text x="15.6777%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.4277%" y="341" width="0.0799%" height="15" fill="rgb(224,65,2)" fg:x="193" fg:w="1"/><text x="15.6777%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="15.3477%" y="453" width="0.2398%" height="15" fill="rgb(229,38,24)" fg:x="192" fg:w="3"/><text x="15.5977%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="15.3477%" y="437" width="0.2398%" height="15" fill="rgb(218,131,50)" fg:x="192" fg:w="3"/><text x="15.5977%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.5076%" y="421" width="0.0799%" height="15" fill="rgb(233,106,18)" fg:x="194" fg:w="1"/><text x="15.7576%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.5076%" y="405" width="0.0799%" height="15" fill="rgb(220,216,11)" fg:x="194" fg:w="1"/><text x="15.7576%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5076%" y="389" width="0.0799%" height="15" fill="rgb(251,100,45)" fg:x="194" fg:w="1"/><text x="15.7576%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.5076%" y="373" width="0.0799%" height="15" fill="rgb(235,143,32)" fg:x="194" fg:w="1"/><text x="15.7576%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5076%" y="357" width="0.0799%" height="15" fill="rgb(248,124,34)" fg:x="194" fg:w="1"/><text x="15.7576%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="15.5076%" y="341" width="0.0799%" height="15" fill="rgb(225,221,4)" fg:x="194" fg:w="1"/><text x="15.7576%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.5076%" y="325" width="0.0799%" height="15" fill="rgb(242,27,43)" fg:x="194" fg:w="1"/><text x="15.7576%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5076%" y="309" width="0.0799%" height="15" fill="rgb(227,54,8)" fg:x="194" fg:w="1"/><text x="15.7576%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="15.3477%" y="469" width="0.3197%" height="15" fill="rgb(253,139,49)" fg:x="192" fg:w="4"/><text x="15.5977%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="15.5875%" y="453" width="0.0799%" height="15" fill="rgb(231,26,43)" fg:x="195" fg:w="1"/><text x="15.8375%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="15.6675%" y="453" width="0.1599%" height="15" fill="rgb(207,121,39)" fg:x="196" fg:w="2"/><text x="15.9175%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.6675%" y="437" width="0.1599%" height="15" fill="rgb(223,101,35)" fg:x="196" fg:w="2"/><text x="15.9175%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7474%" y="421" width="0.0799%" height="15" fill="rgb(232,87,23)" fg:x="197" fg:w="1"/><text x="15.9974%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.7474%" y="405" width="0.0799%" height="15" fill="rgb(225,180,29)" fg:x="197" fg:w="1"/><text x="15.9974%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7474%" y="389" width="0.0799%" height="15" fill="rgb(225,25,17)" fg:x="197" fg:w="1"/><text x="15.9974%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7474%" y="373" width="0.0799%" height="15" fill="rgb(223,8,52)" fg:x="197" fg:w="1"/><text x="15.9974%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.7474%" y="357" width="0.0799%" height="15" fill="rgb(246,42,21)" fg:x="197" fg:w="1"/><text x="15.9974%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8273%" y="405" width="0.0799%" height="15" fill="rgb(205,64,43)" fg:x="198" fg:w="1"/><text x="16.0773%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8273%" y="389" width="0.0799%" height="15" fill="rgb(221,160,13)" fg:x="198" fg:w="1"/><text x="16.0773%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8273%" y="373" width="0.0799%" height="15" fill="rgb(239,58,35)" fg:x="198" fg:w="1"/><text x="16.0773%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8273%" y="357" width="0.0799%" height="15" fill="rgb(251,26,40)" fg:x="198" fg:w="1"/><text x="16.0773%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.8273%" y="341" width="0.0799%" height="15" fill="rgb(247,0,4)" fg:x="198" fg:w="1"/><text x="16.0773%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.8273%" y="325" width="0.0799%" height="15" fill="rgb(218,130,10)" fg:x="198" fg:w="1"/><text x="16.0773%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.8273%" y="309" width="0.0799%" height="15" fill="rgb(239,32,7)" fg:x="198" fg:w="1"/><text x="16.0773%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.8273%" y="293" width="0.0799%" height="15" fill="rgb(210,192,24)" fg:x="198" fg:w="1"/><text x="16.0773%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.8273%" y="277" width="0.0799%" height="15" fill="rgb(226,212,17)" fg:x="198" fg:w="1"/><text x="16.0773%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.8273%" y="261" width="0.0799%" height="15" fill="rgb(219,201,28)" fg:x="198" fg:w="1"/><text x="16.0773%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.8273%" y="245" width="0.0799%" height="15" fill="rgb(235,207,41)" fg:x="198" fg:w="1"/><text x="16.0773%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.8273%" y="229" width="0.0799%" height="15" fill="rgb(241,95,54)" fg:x="198" fg:w="1"/><text x="16.0773%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.8273%" y="213" width="0.0799%" height="15" fill="rgb(248,12,23)" fg:x="198" fg:w="1"/><text x="16.0773%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8273%" y="197" width="0.0799%" height="15" fill="rgb(228,173,4)" fg:x="198" fg:w="1"/><text x="16.0773%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.8273%" y="421" width="0.1599%" height="15" fill="rgb(254,99,5)" fg:x="198" fg:w="2"/><text x="16.0773%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.9073%" y="405" width="0.0799%" height="15" fill="rgb(212,184,17)" fg:x="199" fg:w="1"/><text x="16.1573%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.9872%" y="421" width="0.0799%" height="15" fill="rgb(252,174,1)" fg:x="200" fg:w="1"/><text x="16.2372%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.9872%" y="405" width="0.0799%" height="15" fill="rgb(241,118,51)" fg:x="200" fg:w="1"/><text x="16.2372%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.9872%" y="389" width="0.0799%" height="15" fill="rgb(227,94,47)" fg:x="200" fg:w="1"/><text x="16.2372%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.9872%" y="373" width="0.0799%" height="15" fill="rgb(229,104,2)" fg:x="200" fg:w="1"/><text x="16.2372%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="15.8273%" y="453" width="0.3997%" height="15" fill="rgb(219,28,31)" fg:x="198" fg:w="5"/><text x="16.0773%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="15.8273%" y="437" width="0.3997%" height="15" fill="rgb(233,109,36)" fg:x="198" fg:w="5"/><text x="16.0773%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.0671%" y="421" width="0.1599%" height="15" fill="rgb(246,88,11)" fg:x="201" fg:w="2"/><text x="16.3171%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.0671%" y="405" width="0.1599%" height="15" fill="rgb(209,212,17)" fg:x="201" fg:w="2"/><text x="16.3171%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.1471%" y="389" width="0.0799%" height="15" fill="rgb(243,59,29)" fg:x="202" fg:w="1"/><text x="16.3971%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1471%" y="373" width="0.0799%" height="15" fill="rgb(244,205,48)" fg:x="202" fg:w="1"/><text x="16.3971%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.1471%" y="357" width="0.0799%" height="15" fill="rgb(227,30,6)" fg:x="202" fg:w="1"/><text x="16.3971%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1471%" y="341" width="0.0799%" height="15" fill="rgb(220,205,48)" fg:x="202" fg:w="1"/><text x="16.3971%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="15.6675%" y="469" width="0.6395%" height="15" fill="rgb(250,94,14)" fg:x="196" fg:w="8"/><text x="15.9175%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="16.2270%" y="453" width="0.0799%" height="15" fill="rgb(216,119,42)" fg:x="203" fg:w="1"/><text x="16.4770%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="16.2270%" y="437" width="0.0799%" height="15" fill="rgb(232,155,0)" fg:x="203" fg:w="1"/><text x="16.4770%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.2270%" y="421" width="0.0799%" height="15" fill="rgb(212,24,32)" fg:x="203" fg:w="1"/><text x="16.4770%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.2270%" y="405" width="0.0799%" height="15" fill="rgb(216,69,20)" fg:x="203" fg:w="1"/><text x="16.4770%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.2270%" y="389" width="0.0799%" height="15" fill="rgb(229,73,31)" fg:x="203" fg:w="1"/><text x="16.4770%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3070%" y="405" width="0.0799%" height="15" fill="rgb(224,219,20)" fg:x="204" fg:w="1"/><text x="16.5570%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.3869%" y="405" width="0.0799%" height="15" fill="rgb(215,146,41)" fg:x="205" fg:w="1"/><text x="16.6369%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.3869%" y="389" width="0.0799%" height="15" fill="rgb(244,71,31)" fg:x="205" fg:w="1"/><text x="16.6369%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.3869%" y="373" width="0.0799%" height="15" fill="rgb(224,24,11)" fg:x="205" fg:w="1"/><text x="16.6369%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="16.3070%" y="437" width="0.2398%" height="15" fill="rgb(229,76,15)" fg:x="204" fg:w="3"/><text x="16.5570%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="16.3070%" y="421" width="0.2398%" height="15" fill="rgb(209,93,2)" fg:x="204" fg:w="3"/><text x="16.5570%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.4668%" y="405" width="0.0799%" height="15" fill="rgb(216,200,50)" fg:x="206" fg:w="1"/><text x="16.7168%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4668%" y="389" width="0.0799%" height="15" fill="rgb(211,67,34)" fg:x="206" fg:w="1"/><text x="16.7168%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.4668%" y="373" width="0.0799%" height="15" fill="rgb(225,87,47)" fg:x="206" fg:w="1"/><text x="16.7168%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4668%" y="357" width="0.0799%" height="15" fill="rgb(217,185,16)" fg:x="206" fg:w="1"/><text x="16.7168%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="16.4668%" y="341" width="0.0799%" height="15" fill="rgb(205,0,0)" fg:x="206" fg:w="1"/><text x="16.7168%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.4668%" y="325" width="0.0799%" height="15" fill="rgb(207,116,45)" fg:x="206" fg:w="1"/><text x="16.7168%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.5468%" y="405" width="0.2398%" height="15" fill="rgb(221,156,26)" fg:x="207" fg:w="3"/><text x="16.7968%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.6267%" y="389" width="0.1599%" height="15" fill="rgb(213,140,4)" fg:x="208" fg:w="2"/><text x="16.8767%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.6267%" y="373" width="0.1599%" height="15" fill="rgb(231,224,15)" fg:x="208" fg:w="2"/><text x="16.8767%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7066%" y="357" width="0.0799%" height="15" fill="rgb(244,76,20)" fg:x="209" fg:w="1"/><text x="16.9566%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7066%" y="341" width="0.0799%" height="15" fill="rgb(238,117,7)" fg:x="209" fg:w="1"/><text x="16.9566%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.7066%" y="325" width="0.0799%" height="15" fill="rgb(235,1,10)" fg:x="209" fg:w="1"/><text x="16.9566%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.7066%" y="309" width="0.0799%" height="15" fill="rgb(216,165,6)" fg:x="209" fg:w="1"/><text x="16.9566%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.7066%" y="293" width="0.0799%" height="15" fill="rgb(246,91,35)" fg:x="209" fg:w="1"/><text x="16.9566%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.7066%" y="277" width="0.0799%" height="15" fill="rgb(228,96,24)" fg:x="209" fg:w="1"/><text x="16.9566%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.7066%" y="261" width="0.0799%" height="15" fill="rgb(254,217,53)" fg:x="209" fg:w="1"/><text x="16.9566%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.7066%" y="245" width="0.0799%" height="15" fill="rgb(209,60,0)" fg:x="209" fg:w="1"/><text x="16.9566%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.7066%" y="229" width="0.0799%" height="15" fill="rgb(250,93,26)" fg:x="209" fg:w="1"/><text x="16.9566%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.7066%" y="213" width="0.0799%" height="15" fill="rgb(211,9,40)" fg:x="209" fg:w="1"/><text x="16.9566%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.7066%" y="197" width="0.0799%" height="15" fill="rgb(242,57,20)" fg:x="209" fg:w="1"/><text x="16.9566%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7066%" y="181" width="0.0799%" height="15" fill="rgb(248,85,48)" fg:x="209" fg:w="1"/><text x="16.9566%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.7866%" y="373" width="0.0799%" height="15" fill="rgb(212,117,2)" fg:x="210" fg:w="1"/><text x="17.0366%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="16.5468%" y="437" width="0.3997%" height="15" fill="rgb(243,19,3)" fg:x="207" fg:w="5"/><text x="16.7968%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="16.5468%" y="421" width="0.3997%" height="15" fill="rgb(232,217,24)" fg:x="207" fg:w="5"/><text x="16.7968%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="16.7866%" y="405" width="0.1599%" height="15" fill="rgb(224,175,40)" fg:x="210" fg:w="2"/><text x="17.0366%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="16.7866%" y="389" width="0.1599%" height="15" fill="rgb(212,162,32)" fg:x="210" fg:w="2"/><text x="17.0366%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.8665%" y="373" width="0.0799%" height="15" fill="rgb(215,9,4)" fg:x="211" fg:w="1"/><text x="17.1165%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.8665%" y="357" width="0.0799%" height="15" fill="rgb(242,42,7)" fg:x="211" fg:w="1"/><text x="17.1165%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.8665%" y="341" width="0.0799%" height="15" fill="rgb(242,184,45)" fg:x="211" fg:w="1"/><text x="17.1165%" y="351.50"></text></g><g><title>plugins_core::build::Build::into_entry (23 samples, 1.84%)</title><rect x="15.1878%" y="501" width="1.8385%" height="15" fill="rgb(228,111,51)" fg:x="190" fg:w="23"/><text x="15.4378%" y="511.50">p..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (23 samples, 1.84%)</title><rect x="15.1878%" y="485" width="1.8385%" height="15" fill="rgb(236,147,17)" fg:x="190" fg:w="23"/><text x="15.4378%" y="495.50">&lt;..</text></g><g><title>kernel::model::entry::EntryResolver::world (9 samples, 0.72%)</title><rect x="16.3070%" y="469" width="0.7194%" height="15" fill="rgb(210,75,22)" fg:x="204" fg:w="9"/><text x="16.5570%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (9 samples, 0.72%)</title><rect x="16.3070%" y="453" width="0.7194%" height="15" fill="rgb(217,159,45)" fg:x="204" fg:w="9"/><text x="16.5570%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="16.9464%" y="437" width="0.0799%" height="15" fill="rgb(245,165,53)" fg:x="212" fg:w="1"/><text x="17.1964%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="16.9464%" y="421" width="0.0799%" height="15" fill="rgb(251,190,50)" fg:x="212" fg:w="1"/><text x="17.1964%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.9464%" y="405" width="0.0799%" height="15" fill="rgb(208,203,29)" fg:x="212" fg:w="1"/><text x="17.1964%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.9464%" y="389" width="0.0799%" height="15" fill="rgb(207,209,35)" fg:x="212" fg:w="1"/><text x="17.1964%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="16.9464%" y="373" width="0.0799%" height="15" fill="rgb(230,144,49)" fg:x="212" fg:w="1"/><text x="17.1964%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.9464%" y="357" width="0.0799%" height="15" fill="rgb(229,31,6)" fg:x="212" fg:w="1"/><text x="17.1964%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="17.1063%" y="453" width="0.0799%" height="15" fill="rgb(251,129,24)" fg:x="214" fg:w="1"/><text x="17.3563%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.1063%" y="437" width="0.0799%" height="15" fill="rgb(235,105,15)" fg:x="214" fg:w="1"/><text x="17.3563%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.1063%" y="421" width="0.0799%" height="15" fill="rgb(216,52,43)" fg:x="214" fg:w="1"/><text x="17.3563%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.1063%" y="405" width="0.0799%" height="15" fill="rgb(238,144,41)" fg:x="214" fg:w="1"/><text x="17.3563%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.1063%" y="389" width="0.0799%" height="15" fill="rgb(243,63,9)" fg:x="214" fg:w="1"/><text x="17.3563%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.1063%" y="373" width="0.0799%" height="15" fill="rgb(246,208,1)" fg:x="214" fg:w="1"/><text x="17.3563%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.2662%" y="421" width="0.0799%" height="15" fill="rgb(233,182,18)" fg:x="216" fg:w="1"/><text x="17.5162%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.2662%" y="405" width="0.0799%" height="15" fill="rgb(242,224,8)" fg:x="216" fg:w="1"/><text x="17.5162%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.2662%" y="389" width="0.0799%" height="15" fill="rgb(243,54,37)" fg:x="216" fg:w="1"/><text x="17.5162%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.2662%" y="373" width="0.0799%" height="15" fill="rgb(233,192,12)" fg:x="216" fg:w="1"/><text x="17.5162%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2662%" y="357" width="0.0799%" height="15" fill="rgb(251,192,53)" fg:x="216" fg:w="1"/><text x="17.5162%" y="367.50"></text></g><g><title>plugins_core::build::Build::leads_to (28 samples, 2.24%)</title><rect x="15.1878%" y="517" width="2.2382%" height="15" fill="rgb(246,141,26)" fg:x="190" fg:w="28"/><text x="15.4378%" y="527.50">p..</text></g><g><title>plugins_core::tools::leads_to (5 samples, 0.40%)</title><rect x="17.0264%" y="501" width="0.3997%" height="15" fill="rgb(239,195,19)" fg:x="213" fg:w="5"/><text x="17.2764%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="17.1063%" y="485" width="0.3197%" height="15" fill="rgb(241,16,39)" fg:x="214" fg:w="4"/><text x="17.3563%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="17.1063%" y="469" width="0.3197%" height="15" fill="rgb(223,13,53)" fg:x="214" fg:w="4"/><text x="17.3563%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="17.1863%" y="453" width="0.2398%" height="15" fill="rgb(214,227,0)" fg:x="215" fg:w="3"/><text x="17.4363%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.1863%" y="437" width="0.2398%" height="15" fill="rgb(228,103,26)" fg:x="215" fg:w="3"/><text x="17.4363%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.3461%" y="421" width="0.0799%" height="15" fill="rgb(254,177,53)" fg:x="217" fg:w="1"/><text x="17.5961%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.3461%" y="405" width="0.0799%" height="15" fill="rgb(208,201,34)" fg:x="217" fg:w="1"/><text x="17.5961%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.3461%" y="389" width="0.0799%" height="15" fill="rgb(212,39,5)" fg:x="217" fg:w="1"/><text x="17.5961%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.3461%" y="373" width="0.0799%" height="15" fill="rgb(246,117,3)" fg:x="217" fg:w="1"/><text x="17.5961%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.3461%" y="357" width="0.0799%" height="15" fill="rgb(244,118,39)" fg:x="217" fg:w="1"/><text x="17.5961%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.3461%" y="341" width="0.0799%" height="15" fill="rgb(241,64,10)" fg:x="217" fg:w="1"/><text x="17.5961%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3461%" y="325" width="0.0799%" height="15" fill="rgb(229,39,44)" fg:x="217" fg:w="1"/><text x="17.5961%" y="335.50"></text></g><g><title>core::iter::adapters::try_process (32 samples, 2.56%)</title><rect x="15.1079%" y="565" width="2.5580%" height="15" fill="rgb(230,226,3)" fg:x="189" fg:w="32"/><text x="15.3579%" y="575.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 2.56%)</title><rect x="15.1079%" y="549" width="2.5580%" height="15" fill="rgb(222,13,42)" fg:x="189" fg:w="32"/><text x="15.3579%" y="559.50">&lt;a..</text></g><g><title>plugins_core::build::QuickThing::make (32 samples, 2.56%)</title><rect x="15.1079%" y="533" width="2.5580%" height="15" fill="rgb(247,180,54)" fg:x="189" fg:w="32"/><text x="15.3579%" y="543.50">pl..</text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="17.4261%" y="517" width="0.2398%" height="15" fill="rgb(205,96,16)" fg:x="218" fg:w="3"/><text x="17.6761%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="17.4261%" y="501" width="0.2398%" height="15" fill="rgb(205,100,21)" fg:x="218" fg:w="3"/><text x="17.6761%" y="511.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="17.5060%" y="485" width="0.1599%" height="15" fill="rgb(248,51,4)" fg:x="219" fg:w="2"/><text x="17.7560%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="17.5060%" y="469" width="0.1599%" height="15" fill="rgb(217,197,30)" fg:x="219" fg:w="2"/><text x="17.7560%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.5060%" y="453" width="0.1599%" height="15" fill="rgb(240,179,40)" fg:x="219" fg:w="2"/><text x="17.7560%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="17.5060%" y="437" width="0.1599%" height="15" fill="rgb(212,185,35)" fg:x="219" fg:w="2"/><text x="17.7560%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="17.6659%" y="565" width="0.0799%" height="15" fill="rgb(251,222,31)" fg:x="221" fg:w="1"/><text x="17.9159%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7458%" y="533" width="0.0799%" height="15" fill="rgb(208,140,36)" fg:x="222" fg:w="1"/><text x="17.9958%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7458%" y="517" width="0.0799%" height="15" fill="rgb(220,148,1)" fg:x="222" fg:w="1"/><text x="17.9958%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.7458%" y="501" width="0.0799%" height="15" fill="rgb(254,4,28)" fg:x="222" fg:w="1"/><text x="17.9958%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.7458%" y="485" width="0.0799%" height="15" fill="rgb(222,185,44)" fg:x="222" fg:w="1"/><text x="17.9958%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.7458%" y="469" width="0.0799%" height="15" fill="rgb(215,74,39)" fg:x="222" fg:w="1"/><text x="17.9958%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7458%" y="453" width="0.0799%" height="15" fill="rgb(247,86,4)" fg:x="222" fg:w="1"/><text x="17.9958%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7458%" y="437" width="0.0799%" height="15" fill="rgb(231,105,32)" fg:x="222" fg:w="1"/><text x="17.9958%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.7458%" y="421" width="0.0799%" height="15" fill="rgb(222,65,35)" fg:x="222" fg:w="1"/><text x="17.9958%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.7458%" y="405" width="0.0799%" height="15" fill="rgb(218,145,35)" fg:x="222" fg:w="1"/><text x="17.9958%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.7458%" y="389" width="0.0799%" height="15" fill="rgb(208,7,15)" fg:x="222" fg:w="1"/><text x="17.9958%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.7458%" y="373" width="0.0799%" height="15" fill="rgb(209,83,13)" fg:x="222" fg:w="1"/><text x="17.9958%" y="383.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="17.7458%" y="549" width="0.1599%" height="15" fill="rgb(218,3,10)" fg:x="222" fg:w="2"/><text x="17.9958%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8257%" y="533" width="0.0799%" height="15" fill="rgb(211,219,4)" fg:x="223" fg:w="1"/><text x="18.0757%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8257%" y="517" width="0.0799%" height="15" fill="rgb(228,194,12)" fg:x="223" fg:w="1"/><text x="18.0757%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="17.9057%" y="501" width="0.0799%" height="15" fill="rgb(210,175,7)" fg:x="224" fg:w="1"/><text x="18.1557%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="17.9057%" y="485" width="0.0799%" height="15" fill="rgb(243,132,6)" fg:x="224" fg:w="1"/><text x="18.1557%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="17.9057%" y="469" width="0.0799%" height="15" fill="rgb(207,72,18)" fg:x="224" fg:w="1"/><text x="18.1557%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9057%" y="453" width="0.0799%" height="15" fill="rgb(236,1,18)" fg:x="224" fg:w="1"/><text x="18.1557%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9057%" y="437" width="0.0799%" height="15" fill="rgb(227,0,18)" fg:x="224" fg:w="1"/><text x="18.1557%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.9057%" y="421" width="0.0799%" height="15" fill="rgb(247,37,5)" fg:x="224" fg:w="1"/><text x="18.1557%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.9057%" y="405" width="0.0799%" height="15" fill="rgb(237,179,24)" fg:x="224" fg:w="1"/><text x="18.1557%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.9057%" y="389" width="0.0799%" height="15" fill="rgb(226,53,20)" fg:x="224" fg:w="1"/><text x="18.1557%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.9057%" y="373" width="0.0799%" height="15" fill="rgb(247,75,7)" fg:x="224" fg:w="1"/><text x="18.1557%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.9057%" y="357" width="0.0799%" height="15" fill="rgb(233,96,12)" fg:x="224" fg:w="1"/><text x="18.1557%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="18.0655%" y="453" width="0.1599%" height="15" fill="rgb(224,125,0)" fg:x="226" fg:w="2"/><text x="18.3155%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="18.0655%" y="437" width="0.1599%" height="15" fill="rgb(224,92,25)" fg:x="226" fg:w="2"/><text x="18.3155%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="18.0655%" y="421" width="0.1599%" height="15" fill="rgb(224,42,24)" fg:x="226" fg:w="2"/><text x="18.3155%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.1455%" y="405" width="0.0799%" height="15" fill="rgb(234,132,49)" fg:x="227" fg:w="1"/><text x="18.3955%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.1455%" y="389" width="0.0799%" height="15" fill="rgb(248,100,35)" fg:x="227" fg:w="1"/><text x="18.3955%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.1455%" y="373" width="0.0799%" height="15" fill="rgb(239,94,40)" fg:x="227" fg:w="1"/><text x="18.3955%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.1455%" y="357" width="0.0799%" height="15" fill="rgb(235,139,28)" fg:x="227" fg:w="1"/><text x="18.3955%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="18.2254%" y="421" width="0.2398%" height="15" fill="rgb(217,144,7)" fg:x="228" fg:w="3"/><text x="18.4754%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="18.2254%" y="405" width="0.2398%" height="15" fill="rgb(227,55,4)" fg:x="228" fg:w="3"/><text x="18.4754%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.3853%" y="389" width="0.0799%" height="15" fill="rgb(252,82,54)" fg:x="230" fg:w="1"/><text x="18.6353%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="18.2254%" y="437" width="0.4796%" height="15" fill="rgb(245,172,4)" fg:x="228" fg:w="6"/><text x="18.4754%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="18.4652%" y="421" width="0.2398%" height="15" fill="rgb(207,26,27)" fg:x="231" fg:w="3"/><text x="18.7152%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.6251%" y="405" width="0.0799%" height="15" fill="rgb(252,98,18)" fg:x="233" fg:w="1"/><text x="18.8751%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.6251%" y="389" width="0.0799%" height="15" fill="rgb(244,8,26)" fg:x="233" fg:w="1"/><text x="18.8751%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.7050%" y="421" width="0.0799%" height="15" fill="rgb(237,173,45)" fg:x="234" fg:w="1"/><text x="18.9550%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.7050%" y="405" width="0.0799%" height="15" fill="rgb(208,213,49)" fg:x="234" fg:w="1"/><text x="18.9550%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.7050%" y="389" width="0.0799%" height="15" fill="rgb(212,122,37)" fg:x="234" fg:w="1"/><text x="18.9550%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.7050%" y="373" width="0.0799%" height="15" fill="rgb(213,80,17)" fg:x="234" fg:w="1"/><text x="18.9550%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.7850%" y="421" width="0.0799%" height="15" fill="rgb(206,210,43)" fg:x="235" fg:w="1"/><text x="19.0350%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.7850%" y="405" width="0.0799%" height="15" fill="rgb(229,214,3)" fg:x="235" fg:w="1"/><text x="19.0350%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.8649%" y="405" width="0.0799%" height="15" fill="rgb(235,213,29)" fg:x="236" fg:w="1"/><text x="19.1149%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.9448%" y="405" width="0.0799%" height="15" fill="rgb(248,135,26)" fg:x="237" fg:w="1"/><text x="19.1948%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9448%" y="389" width="0.0799%" height="15" fill="rgb(242,188,12)" fg:x="237" fg:w="1"/><text x="19.1948%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.9448%" y="373" width="0.0799%" height="15" fill="rgb(245,38,12)" fg:x="237" fg:w="1"/><text x="19.1948%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.9448%" y="357" width="0.0799%" height="15" fill="rgb(218,42,13)" fg:x="237" fg:w="1"/><text x="19.1948%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.9448%" y="341" width="0.0799%" height="15" fill="rgb(238,132,49)" fg:x="237" fg:w="1"/><text x="19.1948%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.9448%" y="325" width="0.0799%" height="15" fill="rgb(209,196,19)" fg:x="237" fg:w="1"/><text x="19.1948%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.9448%" y="309" width="0.0799%" height="15" fill="rgb(244,131,22)" fg:x="237" fg:w="1"/><text x="19.1948%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.9448%" y="293" width="0.0799%" height="15" fill="rgb(223,18,34)" fg:x="237" fg:w="1"/><text x="19.1948%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.9448%" y="277" width="0.0799%" height="15" fill="rgb(252,124,54)" fg:x="237" fg:w="1"/><text x="19.1948%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.5843%" y="357" width="0.0799%" height="15" fill="rgb(229,106,42)" fg:x="245" fg:w="1"/><text x="19.8343%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.5843%" y="341" width="0.0799%" height="15" fill="rgb(221,129,1)" fg:x="245" fg:w="1"/><text x="19.8343%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.5843%" y="325" width="0.0799%" height="15" fill="rgb(229,74,15)" fg:x="245" fg:w="1"/><text x="19.8343%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.5843%" y="309" width="0.0799%" height="15" fill="rgb(210,206,50)" fg:x="245" fg:w="1"/><text x="19.8343%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.72%)</title><rect x="19.0248%" y="405" width="0.7194%" height="15" fill="rgb(251,114,31)" fg:x="238" fg:w="9"/><text x="19.2748%" y="415.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="19.4245%" y="389" width="0.3197%" height="15" fill="rgb(215,225,28)" fg:x="243" fg:w="4"/><text x="19.6745%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="19.5843%" y="373" width="0.1599%" height="15" fill="rgb(237,109,14)" fg:x="245" fg:w="2"/><text x="19.8343%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="19.6643%" y="357" width="0.0799%" height="15" fill="rgb(230,13,37)" fg:x="246" fg:w="1"/><text x="19.9143%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.8241%" y="389" width="0.0799%" height="15" fill="rgb(231,40,28)" fg:x="248" fg:w="1"/><text x="20.0741%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8241%" y="373" width="0.0799%" height="15" fill="rgb(231,202,18)" fg:x="248" fg:w="1"/><text x="20.0741%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.9840%" y="357" width="0.0799%" height="15" fill="rgb(225,33,18)" fg:x="250" fg:w="1"/><text x="20.2340%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.9840%" y="341" width="0.0799%" height="15" fill="rgb(223,64,47)" fg:x="250" fg:w="1"/><text x="20.2340%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.9840%" y="325" width="0.0799%" height="15" fill="rgb(234,114,13)" fg:x="250" fg:w="1"/><text x="20.2340%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.9840%" y="309" width="0.0799%" height="15" fill="rgb(248,56,40)" fg:x="250" fg:w="1"/><text x="20.2340%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="19.9041%" y="373" width="0.2398%" height="15" fill="rgb(221,194,21)" fg:x="249" fg:w="3"/><text x="20.1541%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.0639%" y="357" width="0.0799%" height="15" fill="rgb(242,108,46)" fg:x="251" fg:w="1"/><text x="20.3139%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.0639%" y="341" width="0.0799%" height="15" fill="rgb(220,106,10)" fg:x="251" fg:w="1"/><text x="20.3139%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="19.9041%" y="389" width="0.3197%" height="15" fill="rgb(211,88,4)" fg:x="249" fg:w="4"/><text x="20.1541%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.1439%" y="373" width="0.0799%" height="15" fill="rgb(214,95,34)" fg:x="252" fg:w="1"/><text x="20.3939%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.1439%" y="357" width="0.0799%" height="15" fill="rgb(250,160,33)" fg:x="252" fg:w="1"/><text x="20.3939%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.1439%" y="341" width="0.0799%" height="15" fill="rgb(225,29,10)" fg:x="252" fg:w="1"/><text x="20.3939%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="18.8649%" y="421" width="1.6787%" height="15" fill="rgb(224,28,30)" fg:x="236" fg:w="21"/><text x="19.1149%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="19.7442%" y="405" width="0.7994%" height="15" fill="rgb(231,77,4)" fg:x="247" fg:w="10"/><text x="19.9942%" y="415.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="20.2238%" y="389" width="0.3197%" height="15" fill="rgb(209,63,21)" fg:x="253" fg:w="4"/><text x="20.4738%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.3837%" y="373" width="0.1599%" height="15" fill="rgb(226,22,11)" fg:x="255" fg:w="2"/><text x="20.6337%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="20.4636%" y="357" width="0.0799%" height="15" fill="rgb(216,82,30)" fg:x="256" fg:w="1"/><text x="20.7136%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (33 samples, 2.64%)</title><rect x="18.2254%" y="453" width="2.6379%" height="15" fill="rgb(246,227,38)" fg:x="228" fg:w="33"/><text x="18.4754%" y="463.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.16%)</title><rect x="18.7050%" y="437" width="2.1583%" height="15" fill="rgb(251,203,53)" fg:x="234" fg:w="27"/><text x="18.9550%" y="447.50">s..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="20.5436%" y="421" width="0.3197%" height="15" fill="rgb(254,101,1)" fg:x="257" fg:w="4"/><text x="20.7936%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="20.6235%" y="405" width="0.2398%" height="15" fill="rgb(241,180,5)" fg:x="258" fg:w="3"/><text x="20.8735%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.7034%" y="389" width="0.1599%" height="15" fill="rgb(218,168,4)" fg:x="259" fg:w="2"/><text x="20.9534%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.7834%" y="373" width="0.0799%" height="15" fill="rgb(224,223,32)" fg:x="260" fg:w="1"/><text x="21.0334%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.7834%" y="357" width="0.0799%" height="15" fill="rgb(236,106,22)" fg:x="260" fg:w="1"/><text x="21.0334%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.7834%" y="341" width="0.0799%" height="15" fill="rgb(206,121,5)" fg:x="260" fg:w="1"/><text x="21.0334%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.8633%" y="421" width="0.0799%" height="15" fill="rgb(233,87,28)" fg:x="261" fg:w="1"/><text x="21.1133%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.1031%" y="341" width="0.0799%" height="15" fill="rgb(236,137,17)" fg:x="264" fg:w="1"/><text x="21.3531%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="21.1031%" y="373" width="0.2398%" height="15" fill="rgb(209,183,38)" fg:x="264" fg:w="3"/><text x="21.3531%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="21.1031%" y="357" width="0.2398%" height="15" fill="rgb(206,162,44)" fg:x="264" fg:w="3"/><text x="21.3531%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="21.1831%" y="341" width="0.1599%" height="15" fill="rgb(237,70,39)" fg:x="265" fg:w="2"/><text x="21.4331%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="20.8633%" y="453" width="0.6395%" height="15" fill="rgb(212,176,5)" fg:x="261" fg:w="8"/><text x="21.1133%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="20.8633%" y="437" width="0.6395%" height="15" fill="rgb(232,95,16)" fg:x="261" fg:w="8"/><text x="21.1133%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="20.9432%" y="421" width="0.5596%" height="15" fill="rgb(219,115,35)" fg:x="262" fg:w="7"/><text x="21.1932%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="21.0232%" y="405" width="0.4796%" height="15" fill="rgb(251,67,27)" fg:x="263" fg:w="6"/><text x="21.2732%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="21.0232%" y="389" width="0.4796%" height="15" fill="rgb(222,95,40)" fg:x="263" fg:w="6"/><text x="21.2732%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.3429%" y="373" width="0.1599%" height="15" fill="rgb(250,35,16)" fg:x="267" fg:w="2"/><text x="21.5929%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="21.7426%" y="405" width="0.2398%" height="15" fill="rgb(224,86,44)" fg:x="272" fg:w="3"/><text x="21.9926%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.9025%" y="389" width="0.0799%" height="15" fill="rgb(237,53,53)" fg:x="274" fg:w="1"/><text x="22.1525%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.9025%" y="373" width="0.0799%" height="15" fill="rgb(208,171,33)" fg:x="274" fg:w="1"/><text x="22.1525%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="21.9824%" y="405" width="0.0799%" height="15" fill="rgb(222,64,27)" fg:x="275" fg:w="1"/><text x="22.2324%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.9824%" y="389" width="0.0799%" height="15" fill="rgb(221,121,35)" fg:x="275" fg:w="1"/><text x="22.2324%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="22.3022%" y="357" width="0.3197%" height="15" fill="rgb(228,137,42)" fg:x="279" fg:w="4"/><text x="22.5522%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="22.3022%" y="341" width="0.3197%" height="15" fill="rgb(227,54,21)" fg:x="279" fg:w="4"/><text x="22.5522%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="22.3821%" y="325" width="0.2398%" height="15" fill="rgb(240,168,33)" fg:x="280" fg:w="3"/><text x="22.6321%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="22.6219%" y="357" width="0.1599%" height="15" fill="rgb(243,159,6)" fg:x="283" fg:w="2"/><text x="22.8719%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="22.6219%" y="341" width="0.1599%" height="15" fill="rgb(205,211,41)" fg:x="283" fg:w="2"/><text x="22.8719%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="22.6219%" y="325" width="0.1599%" height="15" fill="rgb(253,30,1)" fg:x="283" fg:w="2"/><text x="22.8719%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7018%" y="309" width="0.0799%" height="15" fill="rgb(226,80,18)" fg:x="284" fg:w="1"/><text x="22.9518%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7018%" y="293" width="0.0799%" height="15" fill="rgb(253,156,46)" fg:x="284" fg:w="1"/><text x="22.9518%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="22.8617%" y="341" width="0.0799%" height="15" fill="rgb(248,87,27)" fg:x="286" fg:w="1"/><text x="23.1117%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="22.9416%" y="325" width="0.2398%" height="15" fill="rgb(227,122,2)" fg:x="287" fg:w="3"/><text x="23.1916%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="22.9416%" y="309" width="0.2398%" height="15" fill="rgb(229,94,39)" fg:x="287" fg:w="3"/><text x="23.1916%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="23.0216%" y="293" width="0.1599%" height="15" fill="rgb(225,173,31)" fg:x="288" fg:w="2"/><text x="23.2716%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.04%)</title><rect x="22.2222%" y="389" width="1.0392%" height="15" fill="rgb(239,176,30)" fg:x="278" fg:w="13"/><text x="22.4722%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="22.3022%" y="373" width="0.9592%" height="15" fill="rgb(212,104,21)" fg:x="279" fg:w="12"/><text x="22.5522%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="22.7818%" y="357" width="0.4796%" height="15" fill="rgb(240,209,40)" fg:x="285" fg:w="6"/><text x="23.0318%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="22.9416%" y="341" width="0.3197%" height="15" fill="rgb(234,195,5)" fg:x="287" fg:w="4"/><text x="23.1916%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="23.1815%" y="325" width="0.0799%" height="15" fill="rgb(238,213,1)" fg:x="290" fg:w="1"/><text x="23.4315%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2614%" y="389" width="0.0799%" height="15" fill="rgb(235,182,54)" fg:x="291" fg:w="1"/><text x="23.5114%" y="399.50"></text></g><g><title>engine::session::Session::flush (72 samples, 5.76%)</title><rect x="17.7458%" y="565" width="5.7554%" height="15" fill="rgb(229,50,46)" fg:x="222" fg:w="72"/><text x="17.9958%" y="575.50">engine:..</text></g><g><title>engine::session::Session::save_changes (70 samples, 5.60%)</title><rect x="17.9057%" y="549" width="5.5955%" height="15" fill="rgb(219,145,13)" fg:x="224" fg:w="70"/><text x="18.1557%" y="559.50">engine:..</text></g><g><title>engine::session::state::State::close (70 samples, 5.60%)</title><rect x="17.9057%" y="533" width="5.5955%" height="15" fill="rgb(220,226,10)" fg:x="224" fg:w="70"/><text x="18.1557%" y="543.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (70 samples, 5.60%)</title><rect x="17.9057%" y="517" width="5.5955%" height="15" fill="rgb(248,47,30)" fg:x="224" fg:w="70"/><text x="18.1557%" y="527.50">engine:..</text></g><g><title>core::iter::adapters::try_process (69 samples, 5.52%)</title><rect x="17.9856%" y="501" width="5.5156%" height="15" fill="rgb(231,209,44)" fg:x="225" fg:w="69"/><text x="18.2356%" y="511.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (69 samples, 5.52%)</title><rect x="17.9856%" y="485" width="5.5156%" height="15" fill="rgb(209,80,30)" fg:x="225" fg:w="69"/><text x="18.2356%" y="495.50">&lt;alloc:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (69 samples, 5.52%)</title><rect x="17.9856%" y="469" width="5.5156%" height="15" fill="rgb(232,9,14)" fg:x="225" fg:w="69"/><text x="18.2356%" y="479.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (25 samples, 2.00%)</title><rect x="21.5028%" y="453" width="1.9984%" height="15" fill="rgb(243,91,43)" fg:x="269" fg:w="25"/><text x="21.7528%" y="463.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (25 samples, 2.00%)</title><rect x="21.5028%" y="437" width="1.9984%" height="15" fill="rgb(231,90,52)" fg:x="269" fg:w="25"/><text x="21.7528%" y="447.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 1.92%)</title><rect x="21.5827%" y="421" width="1.9185%" height="15" fill="rgb(253,192,44)" fg:x="270" fg:w="24"/><text x="21.8327%" y="431.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.44%)</title><rect x="22.0624%" y="405" width="1.4388%" height="15" fill="rgb(241,66,31)" fg:x="276" fg:w="18"/><text x="22.3124%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.3413%" y="389" width="0.1599%" height="15" fill="rgb(235,81,37)" fg:x="292" fg:w="2"/><text x="23.5913%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.3413%" y="373" width="0.1599%" height="15" fill="rgb(223,221,9)" fg:x="292" fg:w="2"/><text x="23.5913%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="23.3413%" y="357" width="0.1599%" height="15" fill="rgb(242,180,7)" fg:x="292" fg:w="2"/><text x="23.5913%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5012%" y="485" width="0.0799%" height="15" fill="rgb(243,78,19)" fg:x="294" fg:w="1"/><text x="23.7512%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5811%" y="469" width="0.0799%" height="15" fill="rgb(233,23,17)" fg:x="295" fg:w="1"/><text x="23.8311%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5811%" y="453" width="0.0799%" height="15" fill="rgb(252,122,45)" fg:x="295" fg:w="1"/><text x="23.8311%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6611%" y="469" width="0.0799%" height="15" fill="rgb(247,108,20)" fg:x="296" fg:w="1"/><text x="23.9111%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.6611%" y="453" width="0.0799%" height="15" fill="rgb(235,84,21)" fg:x="296" fg:w="1"/><text x="23.9111%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6611%" y="437" width="0.0799%" height="15" fill="rgb(247,129,10)" fg:x="296" fg:w="1"/><text x="23.9111%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6611%" y="421" width="0.0799%" height="15" fill="rgb(208,173,14)" fg:x="296" fg:w="1"/><text x="23.9111%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.6611%" y="405" width="0.0799%" height="15" fill="rgb(236,31,38)" fg:x="296" fg:w="1"/><text x="23.9111%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6611%" y="389" width="0.0799%" height="15" fill="rgb(232,65,17)" fg:x="296" fg:w="1"/><text x="23.9111%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="23.5012%" y="501" width="0.3197%" height="15" fill="rgb(224,45,49)" fg:x="294" fg:w="4"/><text x="23.7512%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="23.5811%" y="485" width="0.2398%" height="15" fill="rgb(225,2,53)" fg:x="295" fg:w="3"/><text x="23.8311%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.7410%" y="469" width="0.0799%" height="15" fill="rgb(248,210,53)" fg:x="297" fg:w="1"/><text x="23.9910%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7410%" y="453" width="0.0799%" height="15" fill="rgb(211,1,30)" fg:x="297" fg:w="1"/><text x="23.9910%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.7410%" y="437" width="0.0799%" height="15" fill="rgb(224,96,15)" fg:x="297" fg:w="1"/><text x="23.9910%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7410%" y="421" width="0.0799%" height="15" fill="rgb(252,45,11)" fg:x="297" fg:w="1"/><text x="23.9910%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.8209%" y="485" width="0.0799%" height="15" fill="rgb(220,125,38)" fg:x="298" fg:w="1"/><text x="24.0709%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="23.5012%" y="533" width="0.4796%" height="15" fill="rgb(243,161,33)" fg:x="294" fg:w="6"/><text x="23.7512%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="23.5012%" y="517" width="0.4796%" height="15" fill="rgb(248,197,34)" fg:x="294" fg:w="6"/><text x="23.7512%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.8209%" y="501" width="0.1599%" height="15" fill="rgb(228,165,23)" fg:x="298" fg:w="2"/><text x="24.0709%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.9009%" y="485" width="0.0799%" height="15" fill="rgb(236,94,38)" fg:x="299" fg:w="1"/><text x="24.1509%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.9009%" y="469" width="0.0799%" height="15" fill="rgb(220,13,23)" fg:x="299" fg:w="1"/><text x="24.1509%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.9009%" y="453" width="0.0799%" height="15" fill="rgb(234,26,39)" fg:x="299" fg:w="1"/><text x="24.1509%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.9009%" y="437" width="0.0799%" height="15" fill="rgb(205,117,44)" fg:x="299" fg:w="1"/><text x="24.1509%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="23.9808%" y="533" width="0.1599%" height="15" fill="rgb(250,42,2)" fg:x="300" fg:w="2"/><text x="24.2308%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="23.9808%" y="517" width="0.1599%" height="15" fill="rgb(223,83,14)" fg:x="300" fg:w="2"/><text x="24.2308%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.0608%" y="501" width="0.0799%" height="15" fill="rgb(241,147,50)" fg:x="301" fg:w="1"/><text x="24.3108%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="24.0608%" y="485" width="0.0799%" height="15" fill="rgb(218,90,6)" fg:x="301" fg:w="1"/><text x="24.3108%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1407%" y="485" width="0.0799%" height="15" fill="rgb(210,191,5)" fg:x="302" fg:w="1"/><text x="24.3907%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="24.1407%" y="517" width="0.1599%" height="15" fill="rgb(225,139,19)" fg:x="302" fg:w="2"/><text x="24.3907%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="24.1407%" y="501" width="0.1599%" height="15" fill="rgb(210,1,33)" fg:x="302" fg:w="2"/><text x="24.3907%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="24.2206%" y="485" width="0.0799%" height="15" fill="rgb(213,50,3)" fg:x="303" fg:w="1"/><text x="24.4706%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="24.3006%" y="485" width="0.0799%" height="15" fill="rgb(234,227,4)" fg:x="304" fg:w="1"/><text x="24.5506%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.3006%" y="469" width="0.0799%" height="15" fill="rgb(246,63,5)" fg:x="304" fg:w="1"/><text x="24.5506%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3006%" y="453" width="0.0799%" height="15" fill="rgb(245,136,27)" fg:x="304" fg:w="1"/><text x="24.5506%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3006%" y="437" width="0.0799%" height="15" fill="rgb(247,199,27)" fg:x="304" fg:w="1"/><text x="24.5506%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3006%" y="421" width="0.0799%" height="15" fill="rgb(252,158,49)" fg:x="304" fg:w="1"/><text x="24.5506%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.3006%" y="405" width="0.0799%" height="15" fill="rgb(254,73,1)" fg:x="304" fg:w="1"/><text x="24.5506%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.3006%" y="389" width="0.0799%" height="15" fill="rgb(248,93,19)" fg:x="304" fg:w="1"/><text x="24.5506%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.3006%" y="373" width="0.0799%" height="15" fill="rgb(206,67,5)" fg:x="304" fg:w="1"/><text x="24.5506%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.3006%" y="357" width="0.0799%" height="15" fill="rgb(209,210,4)" fg:x="304" fg:w="1"/><text x="24.5506%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.3006%" y="341" width="0.0799%" height="15" fill="rgb(214,185,36)" fg:x="304" fg:w="1"/><text x="24.5506%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.3006%" y="325" width="0.0799%" height="15" fill="rgb(233,191,26)" fg:x="304" fg:w="1"/><text x="24.5506%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.3006%" y="309" width="0.0799%" height="15" fill="rgb(248,94,17)" fg:x="304" fg:w="1"/><text x="24.5506%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.3006%" y="293" width="0.0799%" height="15" fill="rgb(250,64,4)" fg:x="304" fg:w="1"/><text x="24.5506%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.3006%" y="277" width="0.0799%" height="15" fill="rgb(218,41,53)" fg:x="304" fg:w="1"/><text x="24.5506%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.3006%" y="261" width="0.0799%" height="15" fill="rgb(251,176,28)" fg:x="304" fg:w="1"/><text x="24.5506%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.3006%" y="245" width="0.0799%" height="15" fill="rgb(247,22,9)" fg:x="304" fg:w="1"/><text x="24.5506%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3006%" y="229" width="0.0799%" height="15" fill="rgb(218,201,14)" fg:x="304" fg:w="1"/><text x="24.5506%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.4604%" y="453" width="0.0799%" height="15" fill="rgb(218,94,10)" fg:x="306" fg:w="1"/><text x="24.7104%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.4604%" y="437" width="0.0799%" height="15" fill="rgb(222,183,52)" fg:x="306" fg:w="1"/><text x="24.7104%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.5404%" y="453" width="0.0799%" height="15" fill="rgb(242,140,25)" fg:x="307" fg:w="1"/><text x="24.7904%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.5404%" y="437" width="0.0799%" height="15" fill="rgb(235,197,38)" fg:x="307" fg:w="1"/><text x="24.7904%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.5404%" y="421" width="0.0799%" height="15" fill="rgb(237,136,15)" fg:x="307" fg:w="1"/><text x="24.7904%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.5404%" y="405" width="0.0799%" height="15" fill="rgb(223,44,49)" fg:x="307" fg:w="1"/><text x="24.7904%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.5404%" y="389" width="0.0799%" height="15" fill="rgb(227,71,15)" fg:x="307" fg:w="1"/><text x="24.7904%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="24.1407%" y="533" width="0.5596%" height="15" fill="rgb(225,153,20)" fg:x="302" fg:w="7"/><text x="24.3907%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="24.3006%" y="517" width="0.3997%" height="15" fill="rgb(210,190,26)" fg:x="304" fg:w="5"/><text x="24.5506%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="24.3006%" y="501" width="0.3997%" height="15" fill="rgb(223,147,5)" fg:x="304" fg:w="5"/><text x="24.5506%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="24.3805%" y="485" width="0.3197%" height="15" fill="rgb(207,14,23)" fg:x="305" fg:w="4"/><text x="24.6305%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="24.4604%" y="469" width="0.2398%" height="15" fill="rgb(211,195,53)" fg:x="306" fg:w="3"/><text x="24.7104%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.6203%" y="453" width="0.0799%" height="15" fill="rgb(237,75,46)" fg:x="308" fg:w="1"/><text x="24.8703%" y="463.50"></text></g><g><title>plugins_core::build::Build::holding (17 samples, 1.36%)</title><rect x="23.5012%" y="565" width="1.3589%" height="15" fill="rgb(254,55,14)" fg:x="294" fg:w="17"/><text x="23.7512%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (17 samples, 1.36%)</title><rect x="23.5012%" y="549" width="1.3589%" height="15" fill="rgb(230,185,30)" fg:x="294" fg:w="17"/><text x="23.7512%" y="559.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="24.7002%" y="533" width="0.1599%" height="15" fill="rgb(220,14,11)" fg:x="309" fg:w="2"/><text x="24.9502%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="24.7002%" y="517" width="0.1599%" height="15" fill="rgb(215,169,44)" fg:x="309" fg:w="2"/><text x="24.9502%" y="527.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="24.7002%" y="501" width="0.1599%" height="15" fill="rgb(253,203,20)" fg:x="309" fg:w="2"/><text x="24.9502%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.7002%" y="485" width="0.1599%" height="15" fill="rgb(229,225,17)" fg:x="309" fg:w="2"/><text x="24.9502%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="24.7002%" y="469" width="0.1599%" height="15" fill="rgb(236,76,26)" fg:x="309" fg:w="2"/><text x="24.9502%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.7002%" y="453" width="0.1599%" height="15" fill="rgb(234,15,30)" fg:x="309" fg:w="2"/><text x="24.9502%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.7802%" y="437" width="0.0799%" height="15" fill="rgb(211,113,48)" fg:x="310" fg:w="1"/><text x="25.0302%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.7802%" y="421" width="0.0799%" height="15" fill="rgb(221,31,36)" fg:x="310" fg:w="1"/><text x="25.0302%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7802%" y="405" width="0.0799%" height="15" fill="rgb(215,118,52)" fg:x="310" fg:w="1"/><text x="25.0302%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="24.8601%" y="565" width="0.0799%" height="15" fill="rgb(241,151,27)" fg:x="311" fg:w="1"/><text x="25.1101%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.8601%" y="549" width="0.0799%" height="15" fill="rgb(253,51,3)" fg:x="311" fg:w="1"/><text x="25.1101%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.8601%" y="533" width="0.0799%" height="15" fill="rgb(216,201,24)" fg:x="311" fg:w="1"/><text x="25.1101%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.8601%" y="517" width="0.0799%" height="15" fill="rgb(231,107,4)" fg:x="311" fg:w="1"/><text x="25.1101%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.8601%" y="501" width="0.0799%" height="15" fill="rgb(243,97,54)" fg:x="311" fg:w="1"/><text x="25.1101%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.8601%" y="485" width="0.0799%" height="15" fill="rgb(221,32,51)" fg:x="311" fg:w="1"/><text x="25.1101%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.8601%" y="469" width="0.0799%" height="15" fill="rgb(218,171,35)" fg:x="311" fg:w="1"/><text x="25.1101%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.8601%" y="453" width="0.0799%" height="15" fill="rgb(214,20,53)" fg:x="311" fg:w="1"/><text x="25.1101%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.9400%" y="533" width="0.0799%" height="15" fill="rgb(239,9,52)" fg:x="312" fg:w="1"/><text x="25.1900%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.9400%" y="517" width="0.0799%" height="15" fill="rgb(215,114,45)" fg:x="312" fg:w="1"/><text x="25.1900%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.9400%" y="501" width="0.0799%" height="15" fill="rgb(208,118,9)" fg:x="312" fg:w="1"/><text x="25.1900%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.9400%" y="485" width="0.0799%" height="15" fill="rgb(235,7,39)" fg:x="312" fg:w="1"/><text x="25.1900%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.9400%" y="469" width="0.0799%" height="15" fill="rgb(243,225,15)" fg:x="312" fg:w="1"/><text x="25.1900%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.9400%" y="453" width="0.0799%" height="15" fill="rgb(225,216,18)" fg:x="312" fg:w="1"/><text x="25.1900%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.9400%" y="437" width="0.0799%" height="15" fill="rgb(233,36,38)" fg:x="312" fg:w="1"/><text x="25.1900%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.9400%" y="421" width="0.0799%" height="15" fill="rgb(239,88,23)" fg:x="312" fg:w="1"/><text x="25.1900%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.9400%" y="405" width="0.0799%" height="15" fill="rgb(219,181,35)" fg:x="312" fg:w="1"/><text x="25.1900%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.9400%" y="389" width="0.0799%" height="15" fill="rgb(215,18,46)" fg:x="312" fg:w="1"/><text x="25.1900%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.9400%" y="373" width="0.0799%" height="15" fill="rgb(241,38,11)" fg:x="312" fg:w="1"/><text x="25.1900%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.9400%" y="357" width="0.0799%" height="15" fill="rgb(248,169,45)" fg:x="312" fg:w="1"/><text x="25.1900%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="25.0200%" y="517" width="0.0799%" height="15" fill="rgb(239,50,49)" fg:x="313" fg:w="1"/><text x="25.2700%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.0200%" y="501" width="0.0799%" height="15" fill="rgb(231,96,31)" fg:x="313" fg:w="1"/><text x="25.2700%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.0200%" y="485" width="0.0799%" height="15" fill="rgb(224,193,37)" fg:x="313" fg:w="1"/><text x="25.2700%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.0200%" y="469" width="0.0799%" height="15" fill="rgb(227,153,50)" fg:x="313" fg:w="1"/><text x="25.2700%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="25.0999%" y="501" width="0.0799%" height="15" fill="rgb(249,228,3)" fg:x="314" fg:w="1"/><text x="25.3499%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.1799%" y="437" width="0.0799%" height="15" fill="rgb(219,164,43)" fg:x="315" fg:w="1"/><text x="25.4299%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.1799%" y="421" width="0.0799%" height="15" fill="rgb(216,45,41)" fg:x="315" fg:w="1"/><text x="25.4299%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.1799%" y="405" width="0.0799%" height="15" fill="rgb(210,226,51)" fg:x="315" fg:w="1"/><text x="25.4299%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.1799%" y="389" width="0.0799%" height="15" fill="rgb(209,117,49)" fg:x="315" fg:w="1"/><text x="25.4299%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.1799%" y="373" width="0.0799%" height="15" fill="rgb(206,196,24)" fg:x="315" fg:w="1"/><text x="25.4299%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.1799%" y="357" width="0.0799%" height="15" fill="rgb(253,218,3)" fg:x="315" fg:w="1"/><text x="25.4299%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.1799%" y="341" width="0.0799%" height="15" fill="rgb(252,166,2)" fg:x="315" fg:w="1"/><text x="25.4299%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.1799%" y="325" width="0.0799%" height="15" fill="rgb(236,218,26)" fg:x="315" fg:w="1"/><text x="25.4299%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.1799%" y="309" width="0.0799%" height="15" fill="rgb(254,84,19)" fg:x="315" fg:w="1"/><text x="25.4299%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.1799%" y="293" width="0.0799%" height="15" fill="rgb(219,137,29)" fg:x="315" fg:w="1"/><text x="25.4299%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.1799%" y="277" width="0.0799%" height="15" fill="rgb(227,47,52)" fg:x="315" fg:w="1"/><text x="25.4299%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1799%" y="261" width="0.0799%" height="15" fill="rgb(229,167,24)" fg:x="315" fg:w="1"/><text x="25.4299%" y="271.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="25.1799%" y="501" width="0.1599%" height="15" fill="rgb(233,164,1)" fg:x="315" fg:w="2"/><text x="25.4299%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.1799%" y="485" width="0.1599%" height="15" fill="rgb(218,88,48)" fg:x="315" fg:w="2"/><text x="25.4299%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="25.1799%" y="469" width="0.1599%" height="15" fill="rgb(226,214,24)" fg:x="315" fg:w="2"/><text x="25.4299%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.1799%" y="453" width="0.1599%" height="15" fill="rgb(233,29,12)" fg:x="315" fg:w="2"/><text x="25.4299%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.2598%" y="437" width="0.0799%" height="15" fill="rgb(219,120,34)" fg:x="316" fg:w="1"/><text x="25.5098%" y="447.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="25.3397%" y="485" width="0.0799%" height="15" fill="rgb(226,78,44)" fg:x="317" fg:w="1"/><text x="25.5897%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.3397%" y="469" width="0.0799%" height="15" fill="rgb(240,15,48)" fg:x="317" fg:w="1"/><text x="25.5897%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.3397%" y="453" width="0.0799%" height="15" fill="rgb(253,176,7)" fg:x="317" fg:w="1"/><text x="25.5897%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="25.0999%" y="517" width="0.3997%" height="15" fill="rgb(206,166,28)" fg:x="314" fg:w="5"/><text x="25.3499%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="25.3397%" y="501" width="0.1599%" height="15" fill="rgb(241,53,51)" fg:x="317" fg:w="2"/><text x="25.5897%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="25.4197%" y="485" width="0.0799%" height="15" fill="rgb(249,112,30)" fg:x="318" fg:w="1"/><text x="25.6697%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.4996%" y="437" width="0.0799%" height="15" fill="rgb(217,85,30)" fg:x="319" fg:w="1"/><text x="25.7496%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.4996%" y="421" width="0.0799%" height="15" fill="rgb(233,49,7)" fg:x="319" fg:w="1"/><text x="25.7496%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="25.5795%" y="437" width="0.1599%" height="15" fill="rgb(234,109,9)" fg:x="320" fg:w="2"/><text x="25.8295%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="25.5795%" y="421" width="0.1599%" height="15" fill="rgb(253,95,22)" fg:x="320" fg:w="2"/><text x="25.8295%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="25.5795%" y="405" width="0.1599%" height="15" fill="rgb(233,176,25)" fg:x="320" fg:w="2"/><text x="25.8295%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="25.5795%" y="389" width="0.1599%" height="15" fill="rgb(236,33,39)" fg:x="320" fg:w="2"/><text x="25.8295%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.6595%" y="373" width="0.0799%" height="15" fill="rgb(223,226,42)" fg:x="321" fg:w="1"/><text x="25.9095%" y="383.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="25.4996%" y="469" width="0.3197%" height="15" fill="rgb(216,99,33)" fg:x="319" fg:w="4"/><text x="25.7496%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="25.4996%" y="453" width="0.3197%" height="15" fill="rgb(235,84,23)" fg:x="319" fg:w="4"/><text x="25.7496%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.7394%" y="437" width="0.0799%" height="15" fill="rgb(232,2,27)" fg:x="322" fg:w="1"/><text x="25.9894%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.7394%" y="421" width="0.0799%" height="15" fill="rgb(241,23,22)" fg:x="322" fg:w="1"/><text x="25.9894%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="25.7394%" y="405" width="0.0799%" height="15" fill="rgb(211,73,27)" fg:x="322" fg:w="1"/><text x="25.9894%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="25.7394%" y="389" width="0.0799%" height="15" fill="rgb(235,109,49)" fg:x="322" fg:w="1"/><text x="25.9894%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.7394%" y="373" width="0.0799%" height="15" fill="rgb(230,99,29)" fg:x="322" fg:w="1"/><text x="25.9894%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.7394%" y="357" width="0.0799%" height="15" fill="rgb(245,199,7)" fg:x="322" fg:w="1"/><text x="25.9894%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.7394%" y="341" width="0.0799%" height="15" fill="rgb(217,179,10)" fg:x="322" fg:w="1"/><text x="25.9894%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.7394%" y="325" width="0.0799%" height="15" fill="rgb(254,99,47)" fg:x="322" fg:w="1"/><text x="25.9894%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.8993%" y="453" width="0.0799%" height="15" fill="rgb(251,121,7)" fg:x="324" fg:w="1"/><text x="26.1493%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.8993%" y="437" width="0.0799%" height="15" fill="rgb(250,177,26)" fg:x="324" fg:w="1"/><text x="26.1493%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (8 samples, 0.64%)</title><rect x="25.4996%" y="501" width="0.6395%" height="15" fill="rgb(232,88,15)" fg:x="319" fg:w="8"/><text x="25.7496%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (8 samples, 0.64%)</title><rect x="25.4996%" y="485" width="0.6395%" height="15" fill="rgb(251,54,54)" fg:x="319" fg:w="8"/><text x="25.7496%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="25.8193%" y="469" width="0.3197%" height="15" fill="rgb(208,177,15)" fg:x="323" fg:w="4"/><text x="26.0693%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.9792%" y="453" width="0.1599%" height="15" fill="rgb(205,97,32)" fg:x="325" fg:w="2"/><text x="26.2292%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.9792%" y="437" width="0.1599%" height="15" fill="rgb(217,192,13)" fg:x="325" fg:w="2"/><text x="26.2292%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="25.9792%" y="421" width="0.1599%" height="15" fill="rgb(215,163,41)" fg:x="325" fg:w="2"/><text x="26.2292%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.9792%" y="405" width="0.1599%" height="15" fill="rgb(246,83,29)" fg:x="325" fg:w="2"/><text x="26.2292%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.9792%" y="389" width="0.1599%" height="15" fill="rgb(219,2,45)" fg:x="325" fg:w="2"/><text x="26.2292%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.9792%" y="373" width="0.1599%" height="15" fill="rgb(242,215,33)" fg:x="325" fg:w="2"/><text x="26.2292%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="25.9792%" y="357" width="0.1599%" height="15" fill="rgb(217,1,6)" fg:x="325" fg:w="2"/><text x="26.2292%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="26.1391%" y="469" width="0.0799%" height="15" fill="rgb(207,85,52)" fg:x="327" fg:w="1"/><text x="26.3891%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="26.1391%" y="453" width="0.0799%" height="15" fill="rgb(231,171,19)" fg:x="327" fg:w="1"/><text x="26.3891%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="26.1391%" y="437" width="0.0799%" height="15" fill="rgb(207,128,4)" fg:x="327" fg:w="1"/><text x="26.3891%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="26.1391%" y="421" width="0.0799%" height="15" fill="rgb(219,208,4)" fg:x="327" fg:w="1"/><text x="26.3891%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="26.1391%" y="405" width="0.0799%" height="15" fill="rgb(235,161,42)" fg:x="327" fg:w="1"/><text x="26.3891%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="26.1391%" y="389" width="0.0799%" height="15" fill="rgb(247,218,18)" fg:x="327" fg:w="1"/><text x="26.3891%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="26.1391%" y="373" width="0.0799%" height="15" fill="rgb(232,114,51)" fg:x="327" fg:w="1"/><text x="26.3891%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="26.1391%" y="357" width="0.0799%" height="15" fill="rgb(222,95,3)" fg:x="327" fg:w="1"/><text x="26.3891%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1391%" y="341" width="0.0799%" height="15" fill="rgb(240,65,29)" fg:x="327" fg:w="1"/><text x="26.3891%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="25.4996%" y="517" width="0.7994%" height="15" fill="rgb(249,209,20)" fg:x="319" fg:w="10"/><text x="25.7496%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="26.1391%" y="501" width="0.1599%" height="15" fill="rgb(241,48,37)" fg:x="327" fg:w="2"/><text x="26.3891%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="26.1391%" y="485" width="0.1599%" height="15" fill="rgb(230,140,42)" fg:x="327" fg:w="2"/><text x="26.3891%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="26.2190%" y="469" width="0.0799%" height="15" fill="rgb(230,176,45)" fg:x="328" fg:w="1"/><text x="26.4690%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.2190%" y="453" width="0.0799%" height="15" fill="rgb(245,112,21)" fg:x="328" fg:w="1"/><text x="26.4690%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.2190%" y="437" width="0.0799%" height="15" fill="rgb(207,183,35)" fg:x="328" fg:w="1"/><text x="26.4690%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.2990%" y="469" width="0.1599%" height="15" fill="rgb(227,44,33)" fg:x="329" fg:w="2"/><text x="26.5490%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3789%" y="453" width="0.0799%" height="15" fill="rgb(246,120,21)" fg:x="330" fg:w="1"/><text x="26.6289%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3789%" y="437" width="0.0799%" height="15" fill="rgb(235,57,52)" fg:x="330" fg:w="1"/><text x="26.6289%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.3789%" y="421" width="0.0799%" height="15" fill="rgb(238,84,10)" fg:x="330" fg:w="1"/><text x="26.6289%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.3789%" y="405" width="0.0799%" height="15" fill="rgb(251,200,32)" fg:x="330" fg:w="1"/><text x="26.6289%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.3789%" y="389" width="0.0799%" height="15" fill="rgb(247,159,13)" fg:x="330" fg:w="1"/><text x="26.6289%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.3789%" y="373" width="0.0799%" height="15" fill="rgb(238,64,4)" fg:x="330" fg:w="1"/><text x="26.6289%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.3789%" y="357" width="0.0799%" height="15" fill="rgb(221,131,51)" fg:x="330" fg:w="1"/><text x="26.6289%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.3789%" y="341" width="0.0799%" height="15" fill="rgb(242,5,29)" fg:x="330" fg:w="1"/><text x="26.6289%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.3789%" y="325" width="0.0799%" height="15" fill="rgb(214,130,32)" fg:x="330" fg:w="1"/><text x="26.6289%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.3789%" y="309" width="0.0799%" height="15" fill="rgb(244,210,16)" fg:x="330" fg:w="1"/><text x="26.6289%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.3789%" y="293" width="0.0799%" height="15" fill="rgb(234,48,26)" fg:x="330" fg:w="1"/><text x="26.6289%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.3789%" y="277" width="0.0799%" height="15" fill="rgb(231,82,38)" fg:x="330" fg:w="1"/><text x="26.6289%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.3789%" y="261" width="0.0799%" height="15" fill="rgb(254,128,41)" fg:x="330" fg:w="1"/><text x="26.6289%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.3789%" y="245" width="0.0799%" height="15" fill="rgb(212,73,49)" fg:x="330" fg:w="1"/><text x="26.6289%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="26.2990%" y="501" width="0.3197%" height="15" fill="rgb(205,62,54)" fg:x="329" fg:w="4"/><text x="26.5490%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="26.2990%" y="485" width="0.3197%" height="15" fill="rgb(228,0,8)" fg:x="329" fg:w="4"/><text x="26.5490%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.4588%" y="469" width="0.1599%" height="15" fill="rgb(251,28,17)" fg:x="331" fg:w="2"/><text x="26.7088%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.4588%" y="453" width="0.1599%" height="15" fill="rgb(238,105,27)" fg:x="331" fg:w="2"/><text x="26.7088%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.5388%" y="437" width="0.0799%" height="15" fill="rgb(237,216,33)" fg:x="332" fg:w="1"/><text x="26.7888%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.5388%" y="421" width="0.0799%" height="15" fill="rgb(229,228,25)" fg:x="332" fg:w="1"/><text x="26.7888%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.5388%" y="405" width="0.0799%" height="15" fill="rgb(233,75,23)" fg:x="332" fg:w="1"/><text x="26.7888%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.5388%" y="389" width="0.0799%" height="15" fill="rgb(231,207,16)" fg:x="332" fg:w="1"/><text x="26.7888%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.5388%" y="373" width="0.0799%" height="15" fill="rgb(231,191,45)" fg:x="332" fg:w="1"/><text x="26.7888%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="26.6187%" y="485" width="0.0799%" height="15" fill="rgb(224,133,17)" fg:x="333" fg:w="1"/><text x="26.8687%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.6187%" y="469" width="0.0799%" height="15" fill="rgb(209,178,27)" fg:x="333" fg:w="1"/><text x="26.8687%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="26.6187%" y="501" width="0.3197%" height="15" fill="rgb(218,37,11)" fg:x="333" fg:w="4"/><text x="26.8687%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="26.6986%" y="485" width="0.2398%" height="15" fill="rgb(251,226,25)" fg:x="334" fg:w="3"/><text x="26.9486%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="26.6986%" y="469" width="0.2398%" height="15" fill="rgb(209,222,27)" fg:x="334" fg:w="3"/><text x="26.9486%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="26.6986%" y="453" width="0.2398%" height="15" fill="rgb(238,22,21)" fg:x="334" fg:w="3"/><text x="26.9486%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="26.6986%" y="437" width="0.2398%" height="15" fill="rgb(233,161,25)" fg:x="334" fg:w="3"/><text x="26.9486%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="26.6986%" y="421" width="0.2398%" height="15" fill="rgb(226,122,53)" fg:x="334" fg:w="3"/><text x="26.9486%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.8585%" y="405" width="0.0799%" height="15" fill="rgb(220,123,17)" fg:x="336" fg:w="1"/><text x="27.1085%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.8585%" y="389" width="0.0799%" height="15" fill="rgb(230,224,35)" fg:x="336" fg:w="1"/><text x="27.1085%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.8585%" y="373" width="0.0799%" height="15" fill="rgb(246,83,8)" fg:x="336" fg:w="1"/><text x="27.1085%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.8585%" y="357" width="0.0799%" height="15" fill="rgb(230,214,17)" fg:x="336" fg:w="1"/><text x="27.1085%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::new (9 samples, 0.72%)</title><rect x="26.2990%" y="517" width="0.7194%" height="15" fill="rgb(222,97,18)" fg:x="329" fg:w="9"/><text x="26.5490%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.9384%" y="501" width="0.0799%" height="15" fill="rgb(206,79,1)" fg:x="337" fg:w="1"/><text x="27.1884%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.9384%" y="485" width="0.0799%" height="15" fill="rgb(214,121,34)" fg:x="337" fg:w="1"/><text x="27.1884%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.9384%" y="469" width="0.0799%" height="15" fill="rgb(249,199,46)" fg:x="337" fg:w="1"/><text x="27.1884%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.9384%" y="453" width="0.0799%" height="15" fill="rgb(214,222,46)" fg:x="337" fg:w="1"/><text x="27.1884%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.9384%" y="437" width="0.0799%" height="15" fill="rgb(248,168,30)" fg:x="337" fg:w="1"/><text x="27.1884%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.9384%" y="421" width="0.0799%" height="15" fill="rgb(226,14,28)" fg:x="337" fg:w="1"/><text x="27.1884%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="26.9384%" y="405" width="0.0799%" height="15" fill="rgb(253,123,1)" fg:x="337" fg:w="1"/><text x="27.1884%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="26.9384%" y="389" width="0.0799%" height="15" fill="rgb(225,24,42)" fg:x="337" fg:w="1"/><text x="27.1884%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="26.9384%" y="373" width="0.0799%" height="15" fill="rgb(216,161,37)" fg:x="337" fg:w="1"/><text x="27.1884%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="26.9384%" y="357" width="0.0799%" height="15" fill="rgb(251,164,26)" fg:x="337" fg:w="1"/><text x="27.1884%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.9384%" y="341" width="0.0799%" height="15" fill="rgb(219,177,3)" fg:x="337" fg:w="1"/><text x="27.1884%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.9384%" y="325" width="0.0799%" height="15" fill="rgb(222,65,0)" fg:x="337" fg:w="1"/><text x="27.1884%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.9384%" y="309" width="0.0799%" height="15" fill="rgb(223,69,54)" fg:x="337" fg:w="1"/><text x="27.1884%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="26.9384%" y="293" width="0.0799%" height="15" fill="rgb(235,30,27)" fg:x="337" fg:w="1"/><text x="27.1884%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0184%" y="453" width="0.0799%" height="15" fill="rgb(220,183,50)" fg:x="338" fg:w="1"/><text x="27.2684%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0184%" y="437" width="0.0799%" height="15" fill="rgb(248,198,15)" fg:x="338" fg:w="1"/><text x="27.2684%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0184%" y="421" width="0.0799%" height="15" fill="rgb(222,211,4)" fg:x="338" fg:w="1"/><text x="27.2684%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.0983%" y="453" width="0.0799%" height="15" fill="rgb(214,102,34)" fg:x="339" fg:w="1"/><text x="27.3483%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.0983%" y="437" width="0.0799%" height="15" fill="rgb(245,92,5)" fg:x="339" fg:w="1"/><text x="27.3483%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.0983%" y="421" width="0.0799%" height="15" fill="rgb(252,72,51)" fg:x="339" fg:w="1"/><text x="27.3483%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.0983%" y="405" width="0.0799%" height="15" fill="rgb(252,208,19)" fg:x="339" fg:w="1"/><text x="27.3483%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.0983%" y="389" width="0.0799%" height="15" fill="rgb(211,69,7)" fg:x="339" fg:w="1"/><text x="27.3483%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.0983%" y="373" width="0.0799%" height="15" fill="rgb(211,27,16)" fg:x="339" fg:w="1"/><text x="27.3483%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (28 samples, 2.24%)</title><rect x="25.0200%" y="533" width="2.2382%" height="15" fill="rgb(219,216,14)" fg:x="313" fg:w="28"/><text x="25.2700%" y="543.50">&lt;..</text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="27.0184%" y="517" width="0.2398%" height="15" fill="rgb(219,71,8)" fg:x="338" fg:w="3"/><text x="27.2684%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="27.0184%" y="501" width="0.2398%" height="15" fill="rgb(223,170,53)" fg:x="338" fg:w="3"/><text x="27.2684%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="27.0184%" y="485" width="0.2398%" height="15" fill="rgb(246,21,26)" fg:x="338" fg:w="3"/><text x="27.2684%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="27.0184%" y="469" width="0.2398%" height="15" fill="rgb(248,20,46)" fg:x="338" fg:w="3"/><text x="27.2684%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.1783%" y="453" width="0.0799%" height="15" fill="rgb(252,94,11)" fg:x="340" fg:w="1"/><text x="27.4283%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.1783%" y="437" width="0.0799%" height="15" fill="rgb(236,163,8)" fg:x="340" fg:w="1"/><text x="27.4283%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="27.1783%" y="421" width="0.0799%" height="15" fill="rgb(217,221,45)" fg:x="340" fg:w="1"/><text x="27.4283%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.1783%" y="405" width="0.0799%" height="15" fill="rgb(238,38,17)" fg:x="340" fg:w="1"/><text x="27.4283%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.1783%" y="389" width="0.0799%" height="15" fill="rgb(242,210,23)" fg:x="340" fg:w="1"/><text x="27.4283%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.1783%" y="373" width="0.0799%" height="15" fill="rgb(250,86,53)" fg:x="340" fg:w="1"/><text x="27.4283%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.2582%" y="501" width="0.0799%" height="15" fill="rgb(223,168,25)" fg:x="341" fg:w="1"/><text x="27.5082%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.2582%" y="485" width="0.0799%" height="15" fill="rgb(251,189,4)" fg:x="341" fg:w="1"/><text x="27.5082%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.2582%" y="469" width="0.0799%" height="15" fill="rgb(245,19,28)" fg:x="341" fg:w="1"/><text x="27.5082%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.2582%" y="453" width="0.0799%" height="15" fill="rgb(207,10,34)" fg:x="341" fg:w="1"/><text x="27.5082%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.3381%" y="437" width="0.0799%" height="15" fill="rgb(235,153,31)" fg:x="342" fg:w="1"/><text x="27.5881%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.3381%" y="421" width="0.0799%" height="15" fill="rgb(228,72,37)" fg:x="342" fg:w="1"/><text x="27.5881%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="27.3381%" y="405" width="0.0799%" height="15" fill="rgb(215,15,16)" fg:x="342" fg:w="1"/><text x="27.5881%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (32 samples, 2.56%)</title><rect x="24.9400%" y="549" width="2.5580%" height="15" fill="rgb(250,119,29)" fg:x="312" fg:w="32"/><text x="25.1900%" y="559.50">pl..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="27.2582%" y="533" width="0.2398%" height="15" fill="rgb(214,59,1)" fg:x="341" fg:w="3"/><text x="27.5082%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="27.2582%" y="517" width="0.2398%" height="15" fill="rgb(223,109,25)" fg:x="341" fg:w="3"/><text x="27.5082%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.3381%" y="501" width="0.1599%" height="15" fill="rgb(230,198,22)" fg:x="342" fg:w="2"/><text x="27.5881%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.3381%" y="485" width="0.1599%" height="15" fill="rgb(245,184,46)" fg:x="342" fg:w="2"/><text x="27.5881%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="27.3381%" y="469" width="0.1599%" height="15" fill="rgb(253,73,16)" fg:x="342" fg:w="2"/><text x="27.5881%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.3381%" y="453" width="0.1599%" height="15" fill="rgb(206,94,45)" fg:x="342" fg:w="2"/><text x="27.5881%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.4181%" y="437" width="0.0799%" height="15" fill="rgb(236,83,27)" fg:x="343" fg:w="1"/><text x="27.6681%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.4181%" y="421" width="0.0799%" height="15" fill="rgb(220,196,8)" fg:x="343" fg:w="1"/><text x="27.6681%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.4980%" y="533" width="0.0799%" height="15" fill="rgb(254,185,14)" fg:x="344" fg:w="1"/><text x="27.7480%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.5779%" y="437" width="0.0799%" height="15" fill="rgb(226,50,22)" fg:x="345" fg:w="1"/><text x="27.8279%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5779%" y="421" width="0.0799%" height="15" fill="rgb(253,147,0)" fg:x="345" fg:w="1"/><text x="27.8279%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5779%" y="405" width="0.0799%" height="15" fill="rgb(252,46,33)" fg:x="345" fg:w="1"/><text x="27.8279%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.5779%" y="389" width="0.0799%" height="15" fill="rgb(242,22,54)" fg:x="345" fg:w="1"/><text x="27.8279%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.5779%" y="373" width="0.0799%" height="15" fill="rgb(223,178,32)" fg:x="345" fg:w="1"/><text x="27.8279%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.5779%" y="357" width="0.0799%" height="15" fill="rgb(214,106,53)" fg:x="345" fg:w="1"/><text x="27.8279%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.5779%" y="341" width="0.0799%" height="15" fill="rgb(232,65,50)" fg:x="345" fg:w="1"/><text x="27.8279%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.5779%" y="325" width="0.0799%" height="15" fill="rgb(231,110,28)" fg:x="345" fg:w="1"/><text x="27.8279%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.5779%" y="309" width="0.0799%" height="15" fill="rgb(216,71,40)" fg:x="345" fg:w="1"/><text x="27.8279%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.5779%" y="293" width="0.0799%" height="15" fill="rgb(229,89,53)" fg:x="345" fg:w="1"/><text x="27.8279%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.5779%" y="277" width="0.0799%" height="15" fill="rgb(210,124,14)" fg:x="345" fg:w="1"/><text x="27.8279%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.5779%" y="261" width="0.0799%" height="15" fill="rgb(236,213,6)" fg:x="345" fg:w="1"/><text x="27.8279%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.5779%" y="245" width="0.0799%" height="15" fill="rgb(228,41,5)" fg:x="345" fg:w="1"/><text x="27.8279%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="27.5779%" y="501" width="0.1599%" height="15" fill="rgb(221,167,25)" fg:x="345" fg:w="2"/><text x="27.8279%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.5779%" y="485" width="0.1599%" height="15" fill="rgb(228,144,37)" fg:x="345" fg:w="2"/><text x="27.8279%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.5779%" y="469" width="0.1599%" height="15" fill="rgb(227,189,38)" fg:x="345" fg:w="2"/><text x="27.8279%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.5779%" y="453" width="0.1599%" height="15" fill="rgb(218,8,2)" fg:x="345" fg:w="2"/><text x="27.8279%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.6579%" y="437" width="0.0799%" height="15" fill="rgb(209,61,28)" fg:x="346" fg:w="1"/><text x="27.9079%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.7378%" y="469" width="0.0799%" height="15" fill="rgb(233,140,39)" fg:x="347" fg:w="1"/><text x="27.9878%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.7378%" y="453" width="0.0799%" height="15" fill="rgb(251,66,48)" fg:x="347" fg:w="1"/><text x="27.9878%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.7378%" y="437" width="0.0799%" height="15" fill="rgb(210,44,45)" fg:x="347" fg:w="1"/><text x="27.9878%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="27.7378%" y="421" width="0.0799%" height="15" fill="rgb(214,136,46)" fg:x="347" fg:w="1"/><text x="27.9878%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="27.7378%" y="405" width="0.0799%" height="15" fill="rgb(207,130,50)" fg:x="347" fg:w="1"/><text x="27.9878%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.8177%" y="437" width="0.0799%" height="15" fill="rgb(228,102,49)" fg:x="348" fg:w="1"/><text x="28.0677%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.8177%" y="421" width="0.0799%" height="15" fill="rgb(253,55,1)" fg:x="348" fg:w="1"/><text x="28.0677%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="27.5779%" y="533" width="0.3997%" height="15" fill="rgb(238,222,9)" fg:x="345" fg:w="5"/><text x="27.8279%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="27.5779%" y="517" width="0.3997%" height="15" fill="rgb(246,99,6)" fg:x="345" fg:w="5"/><text x="27.8279%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="27.7378%" y="501" width="0.2398%" height="15" fill="rgb(219,110,26)" fg:x="347" fg:w="3"/><text x="27.9878%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="27.7378%" y="485" width="0.2398%" height="15" fill="rgb(239,160,33)" fg:x="347" fg:w="3"/><text x="27.9878%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.8177%" y="469" width="0.1599%" height="15" fill="rgb(220,202,23)" fg:x="348" fg:w="2"/><text x="28.0677%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.8177%" y="453" width="0.1599%" height="15" fill="rgb(208,80,26)" fg:x="348" fg:w="2"/><text x="28.0677%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="27.8977%" y="437" width="0.0799%" height="15" fill="rgb(243,85,7)" fg:x="349" fg:w="1"/><text x="28.1477%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.8977%" y="421" width="0.0799%" height="15" fill="rgb(228,77,47)" fg:x="349" fg:w="1"/><text x="28.1477%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.8977%" y="405" width="0.0799%" height="15" fill="rgb(212,226,8)" fg:x="349" fg:w="1"/><text x="28.1477%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.8977%" y="389" width="0.0799%" height="15" fill="rgb(241,120,54)" fg:x="349" fg:w="1"/><text x="28.1477%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.8977%" y="373" width="0.0799%" height="15" fill="rgb(226,80,16)" fg:x="349" fg:w="1"/><text x="28.1477%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.0576%" y="517" width="0.0799%" height="15" fill="rgb(240,76,13)" fg:x="351" fg:w="1"/><text x="28.3076%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="28.1375%" y="517" width="0.0799%" height="15" fill="rgb(252,74,8)" fg:x="352" fg:w="1"/><text x="28.3875%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.1375%" y="501" width="0.0799%" height="15" fill="rgb(244,155,2)" fg:x="352" fg:w="1"/><text x="28.3875%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.1375%" y="485" width="0.0799%" height="15" fill="rgb(215,81,35)" fg:x="352" fg:w="1"/><text x="28.3875%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.2174%" y="453" width="0.0799%" height="15" fill="rgb(206,55,2)" fg:x="353" fg:w="1"/><text x="28.4674%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="27.9776%" y="533" width="0.3997%" height="15" fill="rgb(231,2,34)" fg:x="350" fg:w="5"/><text x="28.2276%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="28.2174%" y="517" width="0.1599%" height="15" fill="rgb(242,176,48)" fg:x="353" fg:w="2"/><text x="28.4674%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="28.2174%" y="501" width="0.1599%" height="15" fill="rgb(249,31,36)" fg:x="353" fg:w="2"/><text x="28.4674%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="28.2174%" y="485" width="0.1599%" height="15" fill="rgb(205,18,17)" fg:x="353" fg:w="2"/><text x="28.4674%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="28.2174%" y="469" width="0.1599%" height="15" fill="rgb(254,130,5)" fg:x="353" fg:w="2"/><text x="28.4674%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.2974%" y="453" width="0.0799%" height="15" fill="rgb(229,42,45)" fg:x="354" fg:w="1"/><text x="28.5474%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="28.3773%" y="517" width="0.0799%" height="15" fill="rgb(245,95,25)" fg:x="355" fg:w="1"/><text x="28.6273%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.3773%" y="501" width="0.0799%" height="15" fill="rgb(249,193,38)" fg:x="355" fg:w="1"/><text x="28.6273%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.3773%" y="485" width="0.0799%" height="15" fill="rgb(241,140,43)" fg:x="355" fg:w="1"/><text x="28.6273%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.4572%" y="453" width="0.0799%" height="15" fill="rgb(245,78,48)" fg:x="356" fg:w="1"/><text x="28.7072%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.4572%" y="437" width="0.0799%" height="15" fill="rgb(214,92,39)" fg:x="356" fg:w="1"/><text x="28.7072%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.4572%" y="485" width="0.1599%" height="15" fill="rgb(211,189,14)" fg:x="356" fg:w="2"/><text x="28.7072%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.4572%" y="469" width="0.1599%" height="15" fill="rgb(218,7,24)" fg:x="356" fg:w="2"/><text x="28.7072%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.5372%" y="453" width="0.0799%" height="15" fill="rgb(224,200,49)" fg:x="357" fg:w="1"/><text x="28.7872%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.5372%" y="437" width="0.0799%" height="15" fill="rgb(218,210,14)" fg:x="357" fg:w="1"/><text x="28.7872%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.5372%" y="421" width="0.0799%" height="15" fill="rgb(234,142,31)" fg:x="357" fg:w="1"/><text x="28.7872%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.5372%" y="405" width="0.0799%" height="15" fill="rgb(227,165,2)" fg:x="357" fg:w="1"/><text x="28.7872%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.5372%" y="389" width="0.0799%" height="15" fill="rgb(232,44,46)" fg:x="357" fg:w="1"/><text x="28.7872%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.5372%" y="373" width="0.0799%" height="15" fill="rgb(236,149,47)" fg:x="357" fg:w="1"/><text x="28.7872%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="28.5372%" y="357" width="0.0799%" height="15" fill="rgb(227,45,31)" fg:x="357" fg:w="1"/><text x="28.7872%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.6171%" y="469" width="0.0799%" height="15" fill="rgb(240,176,51)" fg:x="358" fg:w="1"/><text x="28.8671%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.6970%" y="453" width="0.1599%" height="15" fill="rgb(249,146,41)" fg:x="359" fg:w="2"/><text x="28.9470%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.6970%" y="437" width="0.1599%" height="15" fill="rgb(213,208,4)" fg:x="359" fg:w="2"/><text x="28.9470%" y="447.50"></text></g><g><title>plugins_core::build::Build::occupying (50 samples, 4.00%)</title><rect x="24.9400%" y="565" width="3.9968%" height="15" fill="rgb(245,84,36)" fg:x="312" fg:w="50"/><text x="25.1900%" y="575.50">plug..</text></g><g><title>plugins_core::tools::set_occupying (18 samples, 1.44%)</title><rect x="27.4980%" y="549" width="1.4388%" height="15" fill="rgb(254,84,18)" fg:x="344" fg:w="18"/><text x="27.7480%" y="559.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (7 samples, 0.56%)</title><rect x="28.3773%" y="533" width="0.5596%" height="15" fill="rgb(225,38,54)" fg:x="355" fg:w="7"/><text x="28.6273%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="28.4572%" y="517" width="0.4796%" height="15" fill="rgb(246,50,30)" fg:x="356" fg:w="6"/><text x="28.7072%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="28.4572%" y="501" width="0.4796%" height="15" fill="rgb(246,148,9)" fg:x="356" fg:w="6"/><text x="28.7072%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="28.6171%" y="485" width="0.3197%" height="15" fill="rgb(223,75,4)" fg:x="358" fg:w="4"/><text x="28.8671%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="28.6970%" y="469" width="0.2398%" height="15" fill="rgb(239,148,41)" fg:x="359" fg:w="3"/><text x="28.9470%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.8569%" y="453" width="0.0799%" height="15" fill="rgb(205,195,3)" fg:x="361" fg:w="1"/><text x="29.1069%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.8569%" y="437" width="0.0799%" height="15" fill="rgb(254,161,1)" fg:x="361" fg:w="1"/><text x="29.1069%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.8569%" y="421" width="0.0799%" height="15" fill="rgb(211,229,8)" fg:x="361" fg:w="1"/><text x="29.1069%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.8569%" y="405" width="0.0799%" height="15" fill="rgb(220,97,9)" fg:x="361" fg:w="1"/><text x="29.1069%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="28.8569%" y="389" width="0.0799%" height="15" fill="rgb(240,218,8)" fg:x="361" fg:w="1"/><text x="29.1069%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.8569%" y="373" width="0.0799%" height="15" fill="rgb(250,44,0)" fg:x="361" fg:w="1"/><text x="29.1069%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="28.9369%" y="517" width="0.0799%" height="15" fill="rgb(236,41,53)" fg:x="362" fg:w="1"/><text x="29.1869%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="28.9369%" y="501" width="0.0799%" height="15" fill="rgb(218,227,13)" fg:x="362" fg:w="1"/><text x="29.1869%" y="511.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="28.9369%" y="485" width="0.0799%" height="15" fill="rgb(217,94,32)" fg:x="362" fg:w="1"/><text x="29.1869%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.9369%" y="469" width="0.0799%" height="15" fill="rgb(213,217,12)" fg:x="362" fg:w="1"/><text x="29.1869%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0967%" y="437" width="0.0799%" height="15" fill="rgb(229,13,46)" fg:x="364" fg:w="1"/><text x="29.3467%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0967%" y="421" width="0.0799%" height="15" fill="rgb(243,139,5)" fg:x="364" fg:w="1"/><text x="29.3467%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="29.0168%" y="501" width="0.2398%" height="15" fill="rgb(249,38,45)" fg:x="363" fg:w="3"/><text x="29.2668%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="29.0168%" y="485" width="0.2398%" height="15" fill="rgb(216,70,11)" fg:x="363" fg:w="3"/><text x="29.2668%" y="495.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="29.0168%" y="469" width="0.2398%" height="15" fill="rgb(253,101,25)" fg:x="363" fg:w="3"/><text x="29.2668%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="29.0168%" y="453" width="0.2398%" height="15" fill="rgb(207,197,30)" fg:x="363" fg:w="3"/><text x="29.2668%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.1767%" y="437" width="0.0799%" height="15" fill="rgb(238,87,13)" fg:x="365" fg:w="1"/><text x="29.4267%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="29.1767%" y="421" width="0.0799%" height="15" fill="rgb(215,155,8)" fg:x="365" fg:w="1"/><text x="29.4267%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="29.0168%" y="517" width="0.4796%" height="15" fill="rgb(239,166,38)" fg:x="363" fg:w="6"/><text x="29.2668%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="29.2566%" y="501" width="0.2398%" height="15" fill="rgb(240,194,35)" fg:x="366" fg:w="3"/><text x="29.5066%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="29.2566%" y="485" width="0.2398%" height="15" fill="rgb(219,10,44)" fg:x="366" fg:w="3"/><text x="29.5066%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="29.2566%" y="469" width="0.2398%" height="15" fill="rgb(251,220,35)" fg:x="366" fg:w="3"/><text x="29.5066%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="29.2566%" y="453" width="0.2398%" height="15" fill="rgb(218,117,13)" fg:x="366" fg:w="3"/><text x="29.5066%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="29.2566%" y="437" width="0.2398%" height="15" fill="rgb(221,213,40)" fg:x="366" fg:w="3"/><text x="29.5066%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="29.2566%" y="421" width="0.2398%" height="15" fill="rgb(251,224,35)" fg:x="366" fg:w="3"/><text x="29.5066%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="29.2566%" y="405" width="0.2398%" height="15" fill="rgb(241,33,39)" fg:x="366" fg:w="3"/><text x="29.5066%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="29.3365%" y="389" width="0.1599%" height="15" fill="rgb(222,74,17)" fg:x="367" fg:w="2"/><text x="29.5865%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="29.3365%" y="373" width="0.1599%" height="15" fill="rgb(225,103,0)" fg:x="367" fg:w="2"/><text x="29.5865%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="29.4165%" y="357" width="0.0799%" height="15" fill="rgb(240,0,12)" fg:x="368" fg:w="1"/><text x="29.6665%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.4165%" y="341" width="0.0799%" height="15" fill="rgb(233,213,37)" fg:x="368" fg:w="1"/><text x="29.6665%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.4964%" y="485" width="0.0799%" height="15" fill="rgb(225,84,52)" fg:x="369" fg:w="1"/><text x="29.7464%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="29.4964%" y="501" width="0.1599%" height="15" fill="rgb(247,160,51)" fg:x="369" fg:w="2"/><text x="29.7464%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.5763%" y="485" width="0.0799%" height="15" fill="rgb(244,60,51)" fg:x="370" fg:w="1"/><text x="29.8263%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5763%" y="469" width="0.0799%" height="15" fill="rgb(233,114,7)" fg:x="370" fg:w="1"/><text x="29.8263%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5763%" y="453" width="0.0799%" height="15" fill="rgb(246,136,16)" fg:x="370" fg:w="1"/><text x="29.8263%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5763%" y="437" width="0.0799%" height="15" fill="rgb(243,114,45)" fg:x="370" fg:w="1"/><text x="29.8263%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.5763%" y="421" width="0.0799%" height="15" fill="rgb(247,183,43)" fg:x="370" fg:w="1"/><text x="29.8263%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.5763%" y="405" width="0.0799%" height="15" fill="rgb(251,210,42)" fg:x="370" fg:w="1"/><text x="29.8263%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.5763%" y="389" width="0.0799%" height="15" fill="rgb(221,88,35)" fg:x="370" fg:w="1"/><text x="29.8263%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.5763%" y="373" width="0.0799%" height="15" fill="rgb(242,21,20)" fg:x="370" fg:w="1"/><text x="29.8263%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.5763%" y="357" width="0.0799%" height="15" fill="rgb(233,226,36)" fg:x="370" fg:w="1"/><text x="29.8263%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.5763%" y="341" width="0.0799%" height="15" fill="rgb(243,189,34)" fg:x="370" fg:w="1"/><text x="29.8263%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.5763%" y="325" width="0.0799%" height="15" fill="rgb(207,145,50)" fg:x="370" fg:w="1"/><text x="29.8263%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.5763%" y="309" width="0.0799%" height="15" fill="rgb(242,1,50)" fg:x="370" fg:w="1"/><text x="29.8263%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.5763%" y="293" width="0.0799%" height="15" fill="rgb(231,65,32)" fg:x="370" fg:w="1"/><text x="29.8263%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.5763%" y="277" width="0.0799%" height="15" fill="rgb(208,68,49)" fg:x="370" fg:w="1"/><text x="29.8263%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.5763%" y="261" width="0.0799%" height="15" fill="rgb(253,54,49)" fg:x="370" fg:w="1"/><text x="29.8263%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="29.5763%" y="245" width="0.0799%" height="15" fill="rgb(245,186,24)" fg:x="370" fg:w="1"/><text x="29.8263%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="29.5763%" y="229" width="0.0799%" height="15" fill="rgb(209,2,41)" fg:x="370" fg:w="1"/><text x="29.8263%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6563%" y="453" width="0.0799%" height="15" fill="rgb(242,208,54)" fg:x="371" fg:w="1"/><text x="29.9063%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6563%" y="437" width="0.0799%" height="15" fill="rgb(225,9,51)" fg:x="371" fg:w="1"/><text x="29.9063%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6563%" y="421" width="0.0799%" height="15" fill="rgb(207,207,25)" fg:x="371" fg:w="1"/><text x="29.9063%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.6563%" y="405" width="0.0799%" height="15" fill="rgb(253,96,18)" fg:x="371" fg:w="1"/><text x="29.9063%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.6563%" y="389" width="0.0799%" height="15" fill="rgb(252,215,20)" fg:x="371" fg:w="1"/><text x="29.9063%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.6563%" y="373" width="0.0799%" height="15" fill="rgb(245,227,26)" fg:x="371" fg:w="1"/><text x="29.9063%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.6563%" y="357" width="0.0799%" height="15" fill="rgb(241,208,0)" fg:x="371" fg:w="1"/><text x="29.9063%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.6563%" y="341" width="0.0799%" height="15" fill="rgb(224,130,10)" fg:x="371" fg:w="1"/><text x="29.9063%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.6563%" y="325" width="0.0799%" height="15" fill="rgb(237,29,0)" fg:x="371" fg:w="1"/><text x="29.9063%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="29.4964%" y="517" width="0.3197%" height="15" fill="rgb(219,27,41)" fg:x="369" fg:w="4"/><text x="29.7464%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="29.6563%" y="501" width="0.1599%" height="15" fill="rgb(245,101,19)" fg:x="371" fg:w="2"/><text x="29.9063%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.6563%" y="485" width="0.1599%" height="15" fill="rgb(243,44,37)" fg:x="371" fg:w="2"/><text x="29.9063%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.6563%" y="469" width="0.1599%" height="15" fill="rgb(228,213,43)" fg:x="371" fg:w="2"/><text x="29.9063%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7362%" y="453" width="0.0799%" height="15" fill="rgb(219,163,21)" fg:x="372" fg:w="1"/><text x="29.9862%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.8961%" y="421" width="0.0799%" height="15" fill="rgb(234,86,24)" fg:x="374" fg:w="1"/><text x="30.1461%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.8961%" y="405" width="0.0799%" height="15" fill="rgb(225,10,24)" fg:x="374" fg:w="1"/><text x="30.1461%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="29.8961%" y="485" width="0.1599%" height="15" fill="rgb(218,109,7)" fg:x="374" fg:w="2"/><text x="30.1461%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.8961%" y="469" width="0.1599%" height="15" fill="rgb(210,20,26)" fg:x="374" fg:w="2"/><text x="30.1461%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="29.8961%" y="453" width="0.1599%" height="15" fill="rgb(216,18,1)" fg:x="374" fg:w="2"/><text x="30.1461%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="29.8961%" y="437" width="0.1599%" height="15" fill="rgb(206,163,23)" fg:x="374" fg:w="2"/><text x="30.1461%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.9760%" y="421" width="0.0799%" height="15" fill="rgb(229,150,31)" fg:x="375" fg:w="1"/><text x="30.2260%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.9760%" y="405" width="0.0799%" height="15" fill="rgb(231,10,5)" fg:x="375" fg:w="1"/><text x="30.2260%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.9760%" y="389" width="0.0799%" height="15" fill="rgb(250,40,50)" fg:x="375" fg:w="1"/><text x="30.2260%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.0560%" y="453" width="0.0799%" height="15" fill="rgb(217,119,7)" fg:x="376" fg:w="1"/><text x="30.3060%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.0560%" y="437" width="0.0799%" height="15" fill="rgb(245,214,40)" fg:x="376" fg:w="1"/><text x="30.3060%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.0560%" y="421" width="0.0799%" height="15" fill="rgb(216,187,1)" fg:x="376" fg:w="1"/><text x="30.3060%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.0560%" y="405" width="0.0799%" height="15" fill="rgb(237,146,21)" fg:x="376" fg:w="1"/><text x="30.3060%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.0560%" y="389" width="0.0799%" height="15" fill="rgb(210,174,47)" fg:x="376" fg:w="1"/><text x="30.3060%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.0560%" y="373" width="0.0799%" height="15" fill="rgb(218,111,39)" fg:x="376" fg:w="1"/><text x="30.3060%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.0560%" y="357" width="0.0799%" height="15" fill="rgb(224,95,19)" fg:x="376" fg:w="1"/><text x="30.3060%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.0560%" y="341" width="0.0799%" height="15" fill="rgb(234,15,38)" fg:x="376" fg:w="1"/><text x="30.3060%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.0560%" y="325" width="0.0799%" height="15" fill="rgb(246,56,12)" fg:x="376" fg:w="1"/><text x="30.3060%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.0560%" y="309" width="0.0799%" height="15" fill="rgb(247,16,17)" fg:x="376" fg:w="1"/><text x="30.3060%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.0560%" y="293" width="0.0799%" height="15" fill="rgb(215,151,11)" fg:x="376" fg:w="1"/><text x="30.3060%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.0560%" y="277" width="0.0799%" height="15" fill="rgb(225,16,24)" fg:x="376" fg:w="1"/><text x="30.3060%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.0560%" y="261" width="0.0799%" height="15" fill="rgb(217,117,5)" fg:x="376" fg:w="1"/><text x="30.3060%" y="271.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="30.0560%" y="245" width="0.0799%" height="15" fill="rgb(246,187,53)" fg:x="376" fg:w="1"/><text x="30.3060%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.1359%" y="421" width="0.0799%" height="15" fill="rgb(241,71,40)" fg:x="377" fg:w="1"/><text x="30.3859%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.1359%" y="405" width="0.0799%" height="15" fill="rgb(231,67,39)" fg:x="377" fg:w="1"/><text x="30.3859%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (195 samples, 15.59%)</title><rect x="14.7082%" y="581" width="15.5875%" height="15" fill="rgb(222,120,24)" fg:x="184" fg:w="195"/><text x="14.9582%" y="591.50">plugins_core::build::Bui..</text></g><g><title>plugins_core::build::Build::wearing (17 samples, 1.36%)</title><rect x="28.9369%" y="565" width="1.3589%" height="15" fill="rgb(248,3,3)" fg:x="362" fg:w="17"/><text x="29.1869%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (17 samples, 1.36%)</title><rect x="28.9369%" y="549" width="1.3589%" height="15" fill="rgb(228,218,5)" fg:x="362" fg:w="17"/><text x="29.1869%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.36%)</title><rect x="28.9369%" y="533" width="1.3589%" height="15" fill="rgb(212,202,43)" fg:x="362" fg:w="17"/><text x="29.1869%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.48%)</title><rect x="29.8161%" y="517" width="0.4796%" height="15" fill="rgb(235,183,2)" fg:x="373" fg:w="6"/><text x="30.0661%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="29.8961%" y="501" width="0.3997%" height="15" fill="rgb(230,165,10)" fg:x="374" fg:w="5"/><text x="30.1461%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="30.0560%" y="485" width="0.2398%" height="15" fill="rgb(219,54,40)" fg:x="376" fg:w="3"/><text x="30.3060%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="30.0560%" y="469" width="0.2398%" height="15" fill="rgb(244,73,9)" fg:x="376" fg:w="3"/><text x="30.3060%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.1359%" y="453" width="0.1599%" height="15" fill="rgb(212,32,45)" fg:x="377" fg:w="2"/><text x="30.3859%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.1359%" y="437" width="0.1599%" height="15" fill="rgb(205,58,31)" fg:x="377" fg:w="2"/><text x="30.3859%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.2158%" y="421" width="0.0799%" height="15" fill="rgb(250,120,43)" fg:x="378" fg:w="1"/><text x="30.4658%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2158%" y="405" width="0.0799%" height="15" fill="rgb(235,13,10)" fg:x="378" fg:w="1"/><text x="30.4658%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.2158%" y="389" width="0.0799%" height="15" fill="rgb(232,219,31)" fg:x="378" fg:w="1"/><text x="30.4658%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2158%" y="373" width="0.0799%" height="15" fill="rgb(218,157,51)" fg:x="378" fg:w="1"/><text x="30.4658%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.2158%" y="357" width="0.0799%" height="15" fill="rgb(211,91,52)" fg:x="378" fg:w="1"/><text x="30.4658%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="30.2958%" y="533" width="0.0799%" height="15" fill="rgb(240,173,1)" fg:x="379" fg:w="1"/><text x="30.5458%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="30.2958%" y="517" width="0.0799%" height="15" fill="rgb(248,20,47)" fg:x="379" fg:w="1"/><text x="30.5458%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.2958%" y="501" width="0.0799%" height="15" fill="rgb(217,221,40)" fg:x="379" fg:w="1"/><text x="30.5458%" y="511.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="30.2958%" y="485" width="0.0799%" height="15" fill="rgb(226,149,51)" fg:x="379" fg:w="1"/><text x="30.5458%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="30.2958%" y="469" width="0.0799%" height="15" fill="rgb(252,193,7)" fg:x="379" fg:w="1"/><text x="30.5458%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.2958%" y="453" width="0.0799%" height="15" fill="rgb(205,123,0)" fg:x="379" fg:w="1"/><text x="30.5458%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.2958%" y="437" width="0.0799%" height="15" fill="rgb(233,173,25)" fg:x="379" fg:w="1"/><text x="30.5458%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.2958%" y="421" width="0.0799%" height="15" fill="rgb(216,63,32)" fg:x="379" fg:w="1"/><text x="30.5458%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.2958%" y="405" width="0.0799%" height="15" fill="rgb(209,56,45)" fg:x="379" fg:w="1"/><text x="30.5458%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.2958%" y="389" width="0.0799%" height="15" fill="rgb(226,111,49)" fg:x="379" fg:w="1"/><text x="30.5458%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.2958%" y="373" width="0.0799%" height="15" fill="rgb(244,181,21)" fg:x="379" fg:w="1"/><text x="30.5458%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="30.2958%" y="581" width="0.1599%" height="15" fill="rgb(222,126,15)" fg:x="379" fg:w="2"/><text x="30.5458%" y="591.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="30.2958%" y="565" width="0.1599%" height="15" fill="rgb(222,95,17)" fg:x="379" fg:w="2"/><text x="30.5458%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="30.2958%" y="549" width="0.1599%" height="15" fill="rgb(254,46,5)" fg:x="379" fg:w="2"/><text x="30.5458%" y="559.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="30.3757%" y="533" width="0.0799%" height="15" fill="rgb(236,216,35)" fg:x="380" fg:w="1"/><text x="30.6257%" y="543.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.3757%" y="517" width="0.0799%" height="15" fill="rgb(217,187,26)" fg:x="380" fg:w="1"/><text x="30.6257%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="30.4556%" y="549" width="0.0799%" height="15" fill="rgb(207,192,25)" fg:x="381" fg:w="1"/><text x="30.7056%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.4556%" y="533" width="0.0799%" height="15" fill="rgb(253,135,27)" fg:x="381" fg:w="1"/><text x="30.7056%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.4556%" y="517" width="0.0799%" height="15" fill="rgb(211,122,29)" fg:x="381" fg:w="1"/><text x="30.7056%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.5356%" y="517" width="0.0799%" height="15" fill="rgb(233,162,40)" fg:x="382" fg:w="1"/><text x="30.7856%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.5356%" y="501" width="0.0799%" height="15" fill="rgb(222,184,47)" fg:x="382" fg:w="1"/><text x="30.7856%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="30.6155%" y="501" width="0.0799%" height="15" fill="rgb(249,99,23)" fg:x="383" fg:w="1"/><text x="30.8655%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="30.6155%" y="485" width="0.0799%" height="15" fill="rgb(214,60,12)" fg:x="383" fg:w="1"/><text x="30.8655%" y="495.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="30.6155%" y="469" width="0.0799%" height="15" fill="rgb(250,229,36)" fg:x="383" fg:w="1"/><text x="30.8655%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.6155%" y="453" width="0.0799%" height="15" fill="rgb(232,195,10)" fg:x="383" fg:w="1"/><text x="30.8655%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.6155%" y="437" width="0.0799%" height="15" fill="rgb(205,213,31)" fg:x="383" fg:w="1"/><text x="30.8655%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.6155%" y="421" width="0.0799%" height="15" fill="rgb(237,43,8)" fg:x="383" fg:w="1"/><text x="30.8655%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.6155%" y="405" width="0.0799%" height="15" fill="rgb(216,208,3)" fg:x="383" fg:w="1"/><text x="30.8655%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.6155%" y="389" width="0.0799%" height="15" fill="rgb(228,179,44)" fg:x="383" fg:w="1"/><text x="30.8655%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.6155%" y="373" width="0.0799%" height="15" fill="rgb(230,192,27)" fg:x="383" fg:w="1"/><text x="30.8655%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="30.6954%" y="501" width="0.0799%" height="15" fill="rgb(251,30,38)" fg:x="384" fg:w="1"/><text x="30.9454%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.6954%" y="485" width="0.0799%" height="15" fill="rgb(246,55,52)" fg:x="384" fg:w="1"/><text x="30.9454%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.6954%" y="469" width="0.0799%" height="15" fill="rgb(249,79,26)" fg:x="384" fg:w="1"/><text x="30.9454%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="30.6954%" y="453" width="0.0799%" height="15" fill="rgb(220,202,16)" fg:x="384" fg:w="1"/><text x="30.9454%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="30.6155%" y="517" width="0.2398%" height="15" fill="rgb(250,170,23)" fg:x="383" fg:w="3"/><text x="30.8655%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="30.7754%" y="501" width="0.0799%" height="15" fill="rgb(230,7,37)" fg:x="385" fg:w="1"/><text x="31.0254%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.7754%" y="485" width="0.0799%" height="15" fill="rgb(213,71,1)" fg:x="385" fg:w="1"/><text x="31.0254%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="30.7754%" y="469" width="0.0799%" height="15" fill="rgb(227,87,39)" fg:x="385" fg:w="1"/><text x="31.0254%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="30.7754%" y="453" width="0.0799%" height="15" fill="rgb(210,41,29)" fg:x="385" fg:w="1"/><text x="31.0254%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9353%" y="469" width="0.0799%" height="15" fill="rgb(206,191,31)" fg:x="387" fg:w="1"/><text x="31.1853%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9353%" y="453" width="0.0799%" height="15" fill="rgb(247,75,54)" fg:x="387" fg:w="1"/><text x="31.1853%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9353%" y="437" width="0.0799%" height="15" fill="rgb(208,54,50)" fg:x="387" fg:w="1"/><text x="31.1853%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="30.8553%" y="517" width="0.2398%" height="15" fill="rgb(214,90,37)" fg:x="386" fg:w="3"/><text x="31.1053%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="30.8553%" y="501" width="0.2398%" height="15" fill="rgb(220,132,6)" fg:x="386" fg:w="3"/><text x="31.1053%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="30.8553%" y="485" width="0.2398%" height="15" fill="rgb(213,167,7)" fg:x="386" fg:w="3"/><text x="31.1053%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0152%" y="469" width="0.0799%" height="15" fill="rgb(243,36,27)" fg:x="388" fg:w="1"/><text x="31.2652%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0152%" y="453" width="0.0799%" height="15" fill="rgb(235,147,12)" fg:x="388" fg:w="1"/><text x="31.2652%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.0951%" y="485" width="0.0799%" height="15" fill="rgb(212,198,44)" fg:x="389" fg:w="1"/><text x="31.3451%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.0951%" y="469" width="0.0799%" height="15" fill="rgb(218,68,50)" fg:x="389" fg:w="1"/><text x="31.3451%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0951%" y="453" width="0.0799%" height="15" fill="rgb(224,79,48)" fg:x="389" fg:w="1"/><text x="31.3451%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0951%" y="437" width="0.0799%" height="15" fill="rgb(213,191,50)" fg:x="389" fg:w="1"/><text x="31.3451%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.0951%" y="421" width="0.0799%" height="15" fill="rgb(254,146,10)" fg:x="389" fg:w="1"/><text x="31.3451%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0951%" y="405" width="0.0799%" height="15" fill="rgb(215,175,11)" fg:x="389" fg:w="1"/><text x="31.3451%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0951%" y="389" width="0.0799%" height="15" fill="rgb(207,49,7)" fg:x="389" fg:w="1"/><text x="31.3451%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0951%" y="373" width="0.0799%" height="15" fill="rgb(234,144,29)" fg:x="389" fg:w="1"/><text x="31.3451%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.0951%" y="357" width="0.0799%" height="15" fill="rgb(213,222,48)" fg:x="389" fg:w="1"/><text x="31.3451%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="30.5356%" y="533" width="0.7194%" height="15" fill="rgb(222,8,6)" fg:x="382" fg:w="9"/><text x="30.7856%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="31.0951%" y="517" width="0.1599%" height="15" fill="rgb(221,114,49)" fg:x="389" fg:w="2"/><text x="31.3451%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="31.0951%" y="501" width="0.1599%" height="15" fill="rgb(250,140,42)" fg:x="389" fg:w="2"/><text x="31.3451%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="31.1751%" y="485" width="0.0799%" height="15" fill="rgb(250,150,27)" fg:x="390" fg:w="1"/><text x="31.4251%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.1751%" y="469" width="0.0799%" height="15" fill="rgb(252,159,3)" fg:x="390" fg:w="1"/><text x="31.4251%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.1751%" y="453" width="0.0799%" height="15" fill="rgb(241,182,3)" fg:x="390" fg:w="1"/><text x="31.4251%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.1751%" y="437" width="0.0799%" height="15" fill="rgb(236,3,9)" fg:x="390" fg:w="1"/><text x="31.4251%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.2550%" y="437" width="0.0799%" height="15" fill="rgb(223,227,51)" fg:x="391" fg:w="1"/><text x="31.5050%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.2550%" y="421" width="0.0799%" height="15" fill="rgb(232,133,30)" fg:x="391" fg:w="1"/><text x="31.5050%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="31.2550%" y="405" width="0.0799%" height="15" fill="rgb(209,93,27)" fg:x="391" fg:w="1"/><text x="31.5050%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (13 samples, 1.04%)</title><rect x="30.4556%" y="581" width="1.0392%" height="15" fill="rgb(208,108,34)" fg:x="381" fg:w="13"/><text x="30.7056%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (13 samples, 1.04%)</title><rect x="30.4556%" y="565" width="1.0392%" height="15" fill="rgb(215,189,13)" fg:x="381" fg:w="13"/><text x="30.7056%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (12 samples, 0.96%)</title><rect x="30.5356%" y="549" width="0.9592%" height="15" fill="rgb(206,88,23)" fg:x="382" fg:w="12"/><text x="30.7856%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="31.2550%" y="533" width="0.2398%" height="15" fill="rgb(240,173,0)" fg:x="391" fg:w="3"/><text x="31.5050%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.2550%" y="517" width="0.2398%" height="15" fill="rgb(223,106,52)" fg:x="391" fg:w="3"/><text x="31.5050%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="31.2550%" y="501" width="0.2398%" height="15" fill="rgb(206,130,16)" fg:x="391" fg:w="3"/><text x="31.5050%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="31.2550%" y="485" width="0.2398%" height="15" fill="rgb(220,54,25)" fg:x="391" fg:w="3"/><text x="31.5050%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="31.2550%" y="469" width="0.2398%" height="15" fill="rgb(210,4,38)" fg:x="391" fg:w="3"/><text x="31.5050%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="31.2550%" y="453" width="0.2398%" height="15" fill="rgb(238,94,39)" fg:x="391" fg:w="3"/><text x="31.5050%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.3349%" y="437" width="0.1599%" height="15" fill="rgb(234,124,34)" fg:x="392" fg:w="2"/><text x="31.5849%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.3349%" y="421" width="0.1599%" height="15" fill="rgb(221,91,40)" fg:x="392" fg:w="2"/><text x="31.5849%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.4149%" y="405" width="0.0799%" height="15" fill="rgb(246,53,28)" fg:x="393" fg:w="1"/><text x="31.6649%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.4948%" y="501" width="0.0799%" height="15" fill="rgb(229,109,7)" fg:x="394" fg:w="1"/><text x="31.7448%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.4948%" y="485" width="0.0799%" height="15" fill="rgb(249,117,8)" fg:x="394" fg:w="1"/><text x="31.7448%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.4948%" y="469" width="0.0799%" height="15" fill="rgb(210,181,1)" fg:x="394" fg:w="1"/><text x="31.7448%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.4948%" y="453" width="0.0799%" height="15" fill="rgb(211,66,1)" fg:x="394" fg:w="1"/><text x="31.7448%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.4948%" y="437" width="0.0799%" height="15" fill="rgb(221,90,14)" fg:x="394" fg:w="1"/><text x="31.7448%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.4948%" y="421" width="0.0799%" height="15" fill="rgb(219,222,44)" fg:x="394" fg:w="1"/><text x="31.7448%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.4948%" y="405" width="0.0799%" height="15" fill="rgb(246,34,33)" fg:x="394" fg:w="1"/><text x="31.7448%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.4948%" y="389" width="0.0799%" height="15" fill="rgb(227,135,41)" fg:x="394" fg:w="1"/><text x="31.7448%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.4948%" y="373" width="0.0799%" height="15" fill="rgb(226,15,14)" fg:x="394" fg:w="1"/><text x="31.7448%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.4948%" y="357" width="0.0799%" height="15" fill="rgb(236,148,47)" fg:x="394" fg:w="1"/><text x="31.7448%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.4948%" y="341" width="0.0799%" height="15" fill="rgb(233,162,52)" fg:x="394" fg:w="1"/><text x="31.7448%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.4948%" y="325" width="0.0799%" height="15" fill="rgb(244,35,28)" fg:x="394" fg:w="1"/><text x="31.7448%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.4948%" y="309" width="0.0799%" height="15" fill="rgb(205,121,10)" fg:x="394" fg:w="1"/><text x="31.7448%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.4948%" y="293" width="0.0799%" height="15" fill="rgb(250,58,18)" fg:x="394" fg:w="1"/><text x="31.7448%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.4948%" y="277" width="0.0799%" height="15" fill="rgb(216,37,13)" fg:x="394" fg:w="1"/><text x="31.7448%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="31.4948%" y="533" width="0.1599%" height="15" fill="rgb(221,215,42)" fg:x="394" fg:w="2"/><text x="31.7448%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="31.4948%" y="517" width="0.1599%" height="15" fill="rgb(217,214,19)" fg:x="394" fg:w="2"/><text x="31.7448%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.5747%" y="501" width="0.0799%" height="15" fill="rgb(233,139,13)" fg:x="395" fg:w="1"/><text x="31.8247%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.5747%" y="485" width="0.0799%" height="15" fill="rgb(247,168,23)" fg:x="395" fg:w="1"/><text x="31.8247%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.6547%" y="469" width="0.0799%" height="15" fill="rgb(207,202,1)" fg:x="396" fg:w="1"/><text x="31.9047%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="31.6547%" y="517" width="0.1599%" height="15" fill="rgb(220,155,48)" fg:x="396" fg:w="2"/><text x="31.9047%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="31.6547%" y="501" width="0.1599%" height="15" fill="rgb(250,43,26)" fg:x="396" fg:w="2"/><text x="31.9047%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="31.6547%" y="485" width="0.1599%" height="15" fill="rgb(212,190,23)" fg:x="396" fg:w="2"/><text x="31.9047%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.7346%" y="469" width="0.0799%" height="15" fill="rgb(216,39,24)" fg:x="397" fg:w="1"/><text x="31.9846%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.7346%" y="453" width="0.0799%" height="15" fill="rgb(252,113,16)" fg:x="397" fg:w="1"/><text x="31.9846%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="31.8945%" y="485" width="0.0799%" height="15" fill="rgb(208,113,19)" fg:x="399" fg:w="1"/><text x="32.1445%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="31.8945%" y="469" width="0.0799%" height="15" fill="rgb(234,107,25)" fg:x="399" fg:w="1"/><text x="32.1445%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="31.8945%" y="453" width="0.0799%" height="15" fill="rgb(234,217,51)" fg:x="399" fg:w="1"/><text x="32.1445%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.8945%" y="437" width="0.0799%" height="15" fill="rgb(251,29,42)" fg:x="399" fg:w="1"/><text x="32.1445%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="31.8945%" y="421" width="0.0799%" height="15" fill="rgb(221,62,51)" fg:x="399" fg:w="1"/><text x="32.1445%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="31.8145%" y="517" width="0.2398%" height="15" fill="rgb(240,192,43)" fg:x="398" fg:w="3"/><text x="32.0645%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="31.8145%" y="501" width="0.2398%" height="15" fill="rgb(224,157,47)" fg:x="398" fg:w="3"/><text x="32.0645%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="31.9744%" y="485" width="0.0799%" height="15" fill="rgb(226,84,45)" fg:x="400" fg:w="1"/><text x="32.2244%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.9744%" y="469" width="0.0799%" height="15" fill="rgb(208,207,23)" fg:x="400" fg:w="1"/><text x="32.2244%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="31.6547%" y="533" width="0.4796%" height="15" fill="rgb(253,34,51)" fg:x="396" fg:w="6"/><text x="31.9047%" y="543.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="32.0544%" y="517" width="0.0799%" height="15" fill="rgb(227,26,34)" fg:x="401" fg:w="1"/><text x="32.3044%" y="527.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="32.0544%" y="501" width="0.0799%" height="15" fill="rgb(245,75,19)" fg:x="401" fg:w="1"/><text x="32.3044%" y="511.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="32.1343%" y="533" width="0.0799%" height="15" fill="rgb(250,191,31)" fg:x="402" fg:w="1"/><text x="32.3843%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.2142%" y="517" width="0.0799%" height="15" fill="rgb(224,11,50)" fg:x="403" fg:w="1"/><text x="32.4642%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.2142%" y="501" width="0.0799%" height="15" fill="rgb(231,171,7)" fg:x="403" fg:w="1"/><text x="32.4642%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.2142%" y="485" width="0.0799%" height="15" fill="rgb(252,214,10)" fg:x="403" fg:w="1"/><text x="32.4642%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.2142%" y="469" width="0.0799%" height="15" fill="rgb(249,45,46)" fg:x="403" fg:w="1"/><text x="32.4642%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.2142%" y="453" width="0.0799%" height="15" fill="rgb(240,173,7)" fg:x="403" fg:w="1"/><text x="32.4642%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.2942%" y="485" width="0.0799%" height="15" fill="rgb(235,214,13)" fg:x="404" fg:w="1"/><text x="32.5442%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.2942%" y="469" width="0.0799%" height="15" fill="rgb(245,156,8)" fg:x="404" fg:w="1"/><text x="32.5442%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.2942%" y="453" width="0.0799%" height="15" fill="rgb(235,46,12)" fg:x="404" fg:w="1"/><text x="32.5442%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2942%" y="437" width="0.0799%" height="15" fill="rgb(221,81,14)" fg:x="404" fg:w="1"/><text x="32.5442%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2942%" y="421" width="0.0799%" height="15" fill="rgb(238,207,9)" fg:x="404" fg:w="1"/><text x="32.5442%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.2942%" y="405" width="0.0799%" height="15" fill="rgb(224,129,35)" fg:x="404" fg:w="1"/><text x="32.5442%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.2942%" y="389" width="0.0799%" height="15" fill="rgb(243,218,34)" fg:x="404" fg:w="1"/><text x="32.5442%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.2942%" y="373" width="0.0799%" height="15" fill="rgb(220,166,13)" fg:x="404" fg:w="1"/><text x="32.5442%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.2942%" y="357" width="0.0799%" height="15" fill="rgb(227,167,49)" fg:x="404" fg:w="1"/><text x="32.5442%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.2942%" y="341" width="0.0799%" height="15" fill="rgb(234,142,12)" fg:x="404" fg:w="1"/><text x="32.5442%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.2942%" y="325" width="0.0799%" height="15" fill="rgb(207,100,48)" fg:x="404" fg:w="1"/><text x="32.5442%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.2942%" y="309" width="0.0799%" height="15" fill="rgb(210,25,14)" fg:x="404" fg:w="1"/><text x="32.5442%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.2942%" y="293" width="0.0799%" height="15" fill="rgb(246,116,27)" fg:x="404" fg:w="1"/><text x="32.5442%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.2942%" y="277" width="0.0799%" height="15" fill="rgb(214,193,42)" fg:x="404" fg:w="1"/><text x="32.5442%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2942%" y="261" width="0.0799%" height="15" fill="rgb(214,122,8)" fg:x="404" fg:w="1"/><text x="32.5442%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="31.4948%" y="549" width="1.0392%" height="15" fill="rgb(244,173,18)" fg:x="394" fg:w="13"/><text x="31.7448%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="32.2142%" y="533" width="0.3197%" height="15" fill="rgb(232,68,19)" fg:x="403" fg:w="4"/><text x="32.4642%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="32.2942%" y="517" width="0.2398%" height="15" fill="rgb(236,224,1)" fg:x="404" fg:w="3"/><text x="32.5442%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.2942%" y="501" width="0.2398%" height="15" fill="rgb(240,11,8)" fg:x="404" fg:w="3"/><text x="32.5442%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.3741%" y="485" width="0.1599%" height="15" fill="rgb(244,159,20)" fg:x="405" fg:w="2"/><text x="32.6241%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.3741%" y="469" width="0.1599%" height="15" fill="rgb(240,223,54)" fg:x="405" fg:w="2"/><text x="32.6241%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.3741%" y="453" width="0.1599%" height="15" fill="rgb(237,146,5)" fg:x="405" fg:w="2"/><text x="32.6241%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.3741%" y="437" width="0.1599%" height="15" fill="rgb(218,221,32)" fg:x="405" fg:w="2"/><text x="32.6241%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.3741%" y="421" width="0.1599%" height="15" fill="rgb(244,96,26)" fg:x="405" fg:w="2"/><text x="32.6241%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.3741%" y="405" width="0.1599%" height="15" fill="rgb(245,184,37)" fg:x="405" fg:w="2"/><text x="32.6241%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.4540%" y="389" width="0.0799%" height="15" fill="rgb(248,91,47)" fg:x="406" fg:w="1"/><text x="32.7040%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.6139%" y="517" width="0.0799%" height="15" fill="rgb(243,199,8)" fg:x="408" fg:w="1"/><text x="32.8639%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.6139%" y="501" width="0.0799%" height="15" fill="rgb(249,12,15)" fg:x="408" fg:w="1"/><text x="32.8639%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.6139%" y="485" width="0.0799%" height="15" fill="rgb(245,97,12)" fg:x="408" fg:w="1"/><text x="32.8639%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.6139%" y="469" width="0.0799%" height="15" fill="rgb(244,61,1)" fg:x="408" fg:w="1"/><text x="32.8639%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.6139%" y="453" width="0.0799%" height="15" fill="rgb(222,194,10)" fg:x="408" fg:w="1"/><text x="32.8639%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.6139%" y="437" width="0.0799%" height="15" fill="rgb(226,178,8)" fg:x="408" fg:w="1"/><text x="32.8639%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.6139%" y="421" width="0.0799%" height="15" fill="rgb(241,32,34)" fg:x="408" fg:w="1"/><text x="32.8639%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="32.6139%" y="405" width="0.0799%" height="15" fill="rgb(254,26,6)" fg:x="408" fg:w="1"/><text x="32.8639%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.6139%" y="389" width="0.0799%" height="15" fill="rgb(249,71,11)" fg:x="408" fg:w="1"/><text x="32.8639%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.28%)</title><rect x="31.4948%" y="565" width="1.2790%" height="15" fill="rgb(232,170,27)" fg:x="394" fg:w="16"/><text x="31.7448%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="32.5340%" y="549" width="0.2398%" height="15" fill="rgb(214,223,17)" fg:x="407" fg:w="3"/><text x="32.7840%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.5340%" y="533" width="0.2398%" height="15" fill="rgb(250,18,15)" fg:x="407" fg:w="3"/><text x="32.7840%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.6938%" y="517" width="0.0799%" height="15" fill="rgb(212,153,51)" fg:x="409" fg:w="1"/><text x="32.9438%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (17 samples, 1.36%)</title><rect x="31.4948%" y="581" width="1.3589%" height="15" fill="rgb(219,194,12)" fg:x="394" fg:w="17"/><text x="31.7448%" y="591.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="32.7738%" y="565" width="0.0799%" height="15" fill="rgb(212,58,17)" fg:x="410" fg:w="1"/><text x="33.0238%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="32.7738%" y="549" width="0.0799%" height="15" fill="rgb(254,5,10)" fg:x="410" fg:w="1"/><text x="33.0238%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="32.7738%" y="533" width="0.0799%" height="15" fill="rgb(246,91,7)" fg:x="410" fg:w="1"/><text x="33.0238%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.7738%" y="517" width="0.0799%" height="15" fill="rgb(218,108,49)" fg:x="410" fg:w="1"/><text x="33.0238%" y="527.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (345 samples, 27.58%)</title><rect x="5.3557%" y="597" width="27.5779%" height="15" fill="rgb(238,123,20)" fg:x="67" fg:w="345"/><text x="5.6057%" y="607.50">&lt;tests::HoldingKeyInVessel as tests::WorldFi..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="32.8537%" y="581" width="0.0799%" height="15" fill="rgb(231,69,23)" fg:x="411" fg:w="1"/><text x="33.1037%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="32.9337%" y="597" width="0.0799%" height="15" fill="rgb(230,209,3)" fg:x="412" fg:w="1"/><text x="33.1837%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.9337%" y="581" width="0.0799%" height="15" fill="rgb(231,19,0)" fg:x="412" fg:w="1"/><text x="33.1837%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="33.0136%" y="581" width="0.0799%" height="15" fill="rgb(226,192,25)" fg:x="413" fg:w="1"/><text x="33.2636%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.0935%" y="565" width="0.0799%" height="15" fill="rgb(223,175,53)" fg:x="414" fg:w="1"/><text x="33.3435%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.0935%" y="549" width="0.0799%" height="15" fill="rgb(248,35,51)" fg:x="414" fg:w="1"/><text x="33.3435%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.0935%" y="533" width="0.0799%" height="15" fill="rgb(230,37,26)" fg:x="414" fg:w="1"/><text x="33.3435%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.0935%" y="517" width="0.0799%" height="15" fill="rgb(206,120,22)" fg:x="414" fg:w="1"/><text x="33.3435%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.0935%" y="501" width="0.0799%" height="15" fill="rgb(207,165,28)" fg:x="414" fg:w="1"/><text x="33.3435%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="33.0935%" y="485" width="0.0799%" height="15" fill="rgb(226,23,46)" fg:x="414" fg:w="1"/><text x="33.3435%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.0935%" y="469" width="0.0799%" height="15" fill="rgb(208,130,44)" fg:x="414" fg:w="1"/><text x="33.3435%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="33.0935%" y="581" width="0.1599%" height="15" fill="rgb(231,67,8)" fg:x="414" fg:w="2"/><text x="33.3435%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.1735%" y="565" width="0.0799%" height="15" fill="rgb(205,183,22)" fg:x="415" fg:w="1"/><text x="33.4235%" y="575.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="33.2534%" y="581" width="0.0799%" height="15" fill="rgb(224,47,9)" fg:x="416" fg:w="1"/><text x="33.5034%" y="591.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="33.2534%" y="565" width="0.0799%" height="15" fill="rgb(250,183,49)" fg:x="416" fg:w="1"/><text x="33.5034%" y="575.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="33.2534%" y="549" width="0.0799%" height="15" fill="rgb(220,151,39)" fg:x="416" fg:w="1"/><text x="33.5034%" y="559.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="33.2534%" y="533" width="0.0799%" height="15" fill="rgb(220,118,20)" fg:x="416" fg:w="1"/><text x="33.5034%" y="543.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="33.2534%" y="517" width="0.0799%" height="15" fill="rgb(231,65,51)" fg:x="416" fg:w="1"/><text x="33.5034%" y="527.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="33.2534%" y="501" width="0.0799%" height="15" fill="rgb(253,125,37)" fg:x="416" fg:w="1"/><text x="33.5034%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="33.2534%" y="485" width="0.0799%" height="15" fill="rgb(232,102,6)" fg:x="416" fg:w="1"/><text x="33.5034%" y="495.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="33.2534%" y="469" width="0.0799%" height="15" fill="rgb(251,105,13)" fg:x="416" fg:w="1"/><text x="33.5034%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="33.4133%" y="549" width="0.0799%" height="15" fill="rgb(222,179,29)" fg:x="418" fg:w="1"/><text x="33.6633%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="33.4133%" y="533" width="0.0799%" height="15" fill="rgb(229,180,53)" fg:x="418" fg:w="1"/><text x="33.6633%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="33.4133%" y="517" width="0.0799%" height="15" fill="rgb(238,104,13)" fg:x="418" fg:w="1"/><text x="33.6633%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.4932%" y="517" width="0.0799%" height="15" fill="rgb(210,130,5)" fg:x="419" fg:w="1"/><text x="33.7432%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.4932%" y="501" width="0.0799%" height="15" fill="rgb(233,87,49)" fg:x="419" fg:w="1"/><text x="33.7432%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="33.4932%" y="485" width="0.0799%" height="15" fill="rgb(243,34,9)" fg:x="419" fg:w="1"/><text x="33.7432%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="33.7330%" y="485" width="0.1599%" height="15" fill="rgb(235,225,10)" fg:x="422" fg:w="2"/><text x="33.9830%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="33.7330%" y="469" width="0.1599%" height="15" fill="rgb(212,0,30)" fg:x="422" fg:w="2"/><text x="33.9830%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="33.8129%" y="453" width="0.0799%" height="15" fill="rgb(211,177,0)" fg:x="423" fg:w="1"/><text x="34.0629%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="33.8129%" y="437" width="0.0799%" height="15" fill="rgb(225,220,11)" fg:x="423" fg:w="1"/><text x="34.0629%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.8129%" y="421" width="0.0799%" height="15" fill="rgb(215,10,13)" fg:x="423" fg:w="1"/><text x="34.0629%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="33.8929%" y="469" width="0.3197%" height="15" fill="rgb(240,177,14)" fg:x="424" fg:w="4"/><text x="34.1429%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="34.0528%" y="453" width="0.1599%" height="15" fill="rgb(243,7,39)" fg:x="426" fg:w="2"/><text x="34.3028%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="34.2126%" y="421" width="0.0799%" height="15" fill="rgb(212,99,0)" fg:x="428" fg:w="1"/><text x="34.4626%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="34.2126%" y="405" width="0.0799%" height="15" fill="rgb(225,162,48)" fg:x="428" fg:w="1"/><text x="34.4626%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.2126%" y="389" width="0.0799%" height="15" fill="rgb(246,16,25)" fg:x="428" fg:w="1"/><text x="34.4626%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.2126%" y="373" width="0.0799%" height="15" fill="rgb(220,150,2)" fg:x="428" fg:w="1"/><text x="34.4626%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="34.2126%" y="453" width="0.1599%" height="15" fill="rgb(237,113,11)" fg:x="428" fg:w="2"/><text x="34.4626%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="34.2126%" y="437" width="0.1599%" height="15" fill="rgb(236,70,20)" fg:x="428" fg:w="2"/><text x="34.4626%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.2926%" y="421" width="0.0799%" height="15" fill="rgb(234,94,7)" fg:x="429" fg:w="1"/><text x="34.5426%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="34.3725%" y="453" width="0.3197%" height="15" fill="rgb(250,221,0)" fg:x="430" fg:w="4"/><text x="34.6225%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="34.4524%" y="437" width="0.2398%" height="15" fill="rgb(245,149,46)" fg:x="431" fg:w="3"/><text x="34.7024%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="34.5324%" y="421" width="0.1599%" height="15" fill="rgb(215,37,27)" fg:x="432" fg:w="2"/><text x="34.7824%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="34.5324%" y="405" width="0.1599%" height="15" fill="rgb(232,65,3)" fg:x="432" fg:w="2"/><text x="34.7824%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="34.5324%" y="389" width="0.1599%" height="15" fill="rgb(214,2,16)" fg:x="432" fg:w="2"/><text x="34.7824%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="34.5324%" y="373" width="0.1599%" height="15" fill="rgb(227,131,50)" fg:x="432" fg:w="2"/><text x="34.7824%" y="383.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="34.5324%" y="357" width="0.1599%" height="15" fill="rgb(247,131,45)" fg:x="432" fg:w="2"/><text x="34.7824%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="34.6922%" y="437" width="0.1599%" height="15" fill="rgb(215,97,47)" fg:x="434" fg:w="2"/><text x="34.9422%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="34.6922%" y="421" width="0.1599%" height="15" fill="rgb(233,143,12)" fg:x="434" fg:w="2"/><text x="34.9422%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.7722%" y="405" width="0.0799%" height="15" fill="rgb(222,57,17)" fg:x="435" fg:w="1"/><text x="35.0222%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="34.8521%" y="421" width="0.3197%" height="15" fill="rgb(214,119,38)" fg:x="436" fg:w="4"/><text x="35.1021%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="34.8521%" y="405" width="0.3197%" height="15" fill="rgb(217,28,47)" fg:x="436" fg:w="4"/><text x="35.1021%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="34.9321%" y="389" width="0.2398%" height="15" fill="rgb(231,14,52)" fg:x="437" fg:w="3"/><text x="35.1821%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.0919%" y="373" width="0.0799%" height="15" fill="rgb(220,158,18)" fg:x="439" fg:w="1"/><text x="35.3419%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="35.1719%" y="421" width="0.0799%" height="15" fill="rgb(222,143,46)" fg:x="440" fg:w="1"/><text x="35.4219%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="34.8521%" y="437" width="0.7194%" height="15" fill="rgb(227,165,5)" fg:x="436" fg:w="9"/><text x="35.1021%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="35.2518%" y="421" width="0.3197%" height="15" fill="rgb(216,222,49)" fg:x="441" fg:w="4"/><text x="35.5018%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="35.3317%" y="405" width="0.2398%" height="15" fill="rgb(238,73,39)" fg:x="442" fg:w="3"/><text x="35.5817%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="35.4117%" y="389" width="0.1599%" height="15" fill="rgb(252,115,9)" fg:x="443" fg:w="2"/><text x="35.6617%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="34.6922%" y="453" width="1.1191%" height="15" fill="rgb(238,202,4)" fg:x="434" fg:w="14"/><text x="34.9422%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="35.5715%" y="437" width="0.2398%" height="15" fill="rgb(252,153,44)" fg:x="445" fg:w="3"/><text x="35.8215%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="35.6515%" y="421" width="0.1599%" height="15" fill="rgb(235,128,27)" fg:x="446" fg:w="2"/><text x="35.9015%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.7314%" y="405" width="0.0799%" height="15" fill="rgb(221,121,47)" fg:x="447" fg:w="1"/><text x="35.9814%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.76%)</title><rect x="34.2126%" y="469" width="1.7586%" height="15" fill="rgb(247,211,47)" fg:x="428" fg:w="22"/><text x="34.4626%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.8114%" y="453" width="0.1599%" height="15" fill="rgb(252,47,49)" fg:x="448" fg:w="2"/><text x="36.0614%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.8913%" y="437" width="0.0799%" height="15" fill="rgb(219,119,53)" fg:x="449" fg:w="1"/><text x="36.1413%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.8913%" y="421" width="0.0799%" height="15" fill="rgb(243,165,53)" fg:x="449" fg:w="1"/><text x="36.1413%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (30 samples, 2.40%)</title><rect x="33.6531%" y="501" width="2.3981%" height="15" fill="rgb(230,12,35)" fg:x="421" fg:w="30"/><text x="33.9031%" y="511.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.16%)</title><rect x="33.8929%" y="485" width="2.1583%" height="15" fill="rgb(239,57,49)" fg:x="424" fg:w="27"/><text x="34.1429%" y="495.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.9712%" y="469" width="0.0799%" height="15" fill="rgb(231,154,7)" fg:x="450" fg:w="1"/><text x="36.2212%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="36.2910%" y="453" width="0.1599%" height="15" fill="rgb(248,81,34)" fg:x="454" fg:w="2"/><text x="36.5410%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.4508%" y="437" width="0.0799%" height="15" fill="rgb(247,9,5)" fg:x="456" fg:w="1"/><text x="36.7008%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.5308%" y="437" width="0.0799%" height="15" fill="rgb(228,172,27)" fg:x="457" fg:w="1"/><text x="36.7808%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.6107%" y="421" width="0.0799%" height="15" fill="rgb(230,57,44)" fg:x="458" fg:w="1"/><text x="36.8607%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="36.6906%" y="421" width="0.2398%" height="15" fill="rgb(249,35,22)" fg:x="459" fg:w="3"/><text x="36.9406%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.8505%" y="405" width="0.0799%" height="15" fill="rgb(250,137,27)" fg:x="461" fg:w="1"/><text x="37.1005%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.9305%" y="405" width="0.0799%" height="15" fill="rgb(251,57,31)" fg:x="462" fg:w="1"/><text x="37.1805%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.9305%" y="389" width="0.0799%" height="15" fill="rgb(238,60,0)" fg:x="462" fg:w="1"/><text x="37.1805%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="36.0512%" y="501" width="1.0392%" height="15" fill="rgb(242,185,39)" fg:x="451" fg:w="13"/><text x="36.3012%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="36.0512%" y="485" width="1.0392%" height="15" fill="rgb(240,63,43)" fg:x="451" fg:w="13"/><text x="36.3012%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="36.1311%" y="469" width="0.9592%" height="15" fill="rgb(236,155,6)" fg:x="452" fg:w="12"/><text x="36.3811%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="36.4508%" y="453" width="0.6395%" height="15" fill="rgb(215,11,29)" fg:x="456" fg:w="8"/><text x="36.7008%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="36.6107%" y="437" width="0.4796%" height="15" fill="rgb(228,180,48)" fg:x="458" fg:w="6"/><text x="36.8607%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.9305%" y="421" width="0.1599%" height="15" fill="rgb(241,102,12)" fg:x="462" fg:w="2"/><text x="37.1805%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.0104%" y="405" width="0.0799%" height="15" fill="rgb(246,213,4)" fg:x="463" fg:w="1"/><text x="37.2604%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.3301%" y="437" width="0.0799%" height="15" fill="rgb(218,134,35)" fg:x="467" fg:w="1"/><text x="37.5801%" y="447.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="37.5699%" y="421" width="0.3197%" height="15" fill="rgb(251,117,35)" fg:x="470" fg:w="4"/><text x="37.8199%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="37.8897%" y="421" width="0.3197%" height="15" fill="rgb(206,156,45)" fg:x="474" fg:w="4"/><text x="38.1397%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="38.4492%" y="405" width="0.1599%" height="15" fill="rgb(218,52,27)" fg:x="481" fg:w="2"/><text x="38.6992%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.7690%" y="389" width="0.1599%" height="15" fill="rgb(238,83,36)" fg:x="485" fg:w="2"/><text x="39.0190%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.9289%" y="389" width="0.0799%" height="15" fill="rgb(218,53,43)" fg:x="487" fg:w="1"/><text x="39.1789%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="39.0088%" y="389" width="0.1599%" height="15" fill="rgb(239,54,39)" fg:x="488" fg:w="2"/><text x="39.2588%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="39.0887%" y="373" width="0.0799%" height="15" fill="rgb(212,198,13)" fg:x="489" fg:w="1"/><text x="39.3387%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.0887%" y="357" width="0.0799%" height="15" fill="rgb(234,54,46)" fg:x="489" fg:w="1"/><text x="39.3387%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.3285%" y="373" width="0.1599%" height="15" fill="rgb(217,120,7)" fg:x="492" fg:w="2"/><text x="39.5785%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (30 samples, 2.40%)</title><rect x="37.1703%" y="469" width="2.3981%" height="15" fill="rgb(246,39,15)" fg:x="465" fg:w="30"/><text x="37.4203%" y="479.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (29 samples, 2.32%)</title><rect x="37.2502%" y="453" width="2.3181%" height="15" fill="rgb(242,143,31)" fg:x="466" fg:w="29"/><text x="37.5002%" y="463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (27 samples, 2.16%)</title><rect x="37.4101%" y="437" width="2.1583%" height="15" fill="rgb(252,60,24)" fg:x="468" fg:w="27"/><text x="37.6601%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="38.2094%" y="421" width="1.3589%" height="15" fill="rgb(249,220,7)" fg:x="478" fg:w="17"/><text x="38.4594%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="38.6091%" y="405" width="0.9592%" height="15" fill="rgb(236,67,13)" fg:x="483" fg:w="12"/><text x="38.8591%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="39.1687%" y="389" width="0.3997%" height="15" fill="rgb(210,62,39)" fg:x="490" fg:w="5"/><text x="39.4187%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.4884%" y="373" width="0.0799%" height="15" fill="rgb(219,122,53)" fg:x="494" fg:w="1"/><text x="39.7384%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.4884%" y="357" width="0.0799%" height="15" fill="rgb(218,87,25)" fg:x="494" fg:w="1"/><text x="39.7384%" y="367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="39.8082%" y="405" width="0.0799%" height="15" fill="rgb(234,179,48)" fg:x="498" fg:w="1"/><text x="40.0582%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="39.8082%" y="389" width="0.0799%" height="15" fill="rgb(248,90,0)" fg:x="498" fg:w="1"/><text x="40.0582%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="39.5683%" y="437" width="0.6395%" height="15" fill="rgb(207,228,37)" fg:x="495" fg:w="8"/><text x="39.8183%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="39.6483%" y="421" width="0.5596%" height="15" fill="rgb(235,214,15)" fg:x="496" fg:w="7"/><text x="39.8983%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="39.8881%" y="405" width="0.3197%" height="15" fill="rgb(210,144,39)" fg:x="499" fg:w="4"/><text x="40.1381%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="40.0480%" y="389" width="0.1599%" height="15" fill="rgb(222,67,41)" fg:x="501" fg:w="2"/><text x="40.2980%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.1279%" y="373" width="0.0799%" height="15" fill="rgb(205,35,37)" fg:x="502" fg:w="1"/><text x="40.3779%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="39.5683%" y="453" width="0.7194%" height="15" fill="rgb(216,125,40)" fg:x="495" fg:w="9"/><text x="39.8183%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.2078%" y="437" width="0.0799%" height="15" fill="rgb(228,227,20)" fg:x="503" fg:w="1"/><text x="40.4578%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.2878%" y="453" width="0.0799%" height="15" fill="rgb(242,173,45)" fg:x="504" fg:w="1"/><text x="40.5378%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (41 samples, 3.28%)</title><rect x="37.1703%" y="485" width="3.2774%" height="15" fill="rgb(215,79,24)" fg:x="465" fg:w="41"/><text x="37.4203%" y="495.50">&lt;ke..</text></g><g><title>treediff::diff::diff (11 samples, 0.88%)</title><rect x="39.5683%" y="469" width="0.8793%" height="15" fill="rgb(238,164,38)" fg:x="495" fg:w="11"/><text x="39.8183%" y="479.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="40.3677%" y="453" width="0.0799%" height="15" fill="rgb(245,196,38)" fg:x="505" fg:w="1"/><text x="40.6177%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="40.6875%" y="453" width="0.3197%" height="15" fill="rgb(231,217,29)" fg:x="509" fg:w="4"/><text x="40.9375%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="40.8473%" y="437" width="0.1599%" height="15" fill="rgb(245,6,4)" fg:x="511" fg:w="2"/><text x="41.0973%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="40.8473%" y="421" width="0.1599%" height="15" fill="rgb(214,76,49)" fg:x="511" fg:w="2"/><text x="41.0973%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0072%" y="437" width="0.0799%" height="15" fill="rgb(205,96,12)" fg:x="513" fg:w="1"/><text x="41.2572%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0072%" y="421" width="0.0799%" height="15" fill="rgb(243,131,4)" fg:x="513" fg:w="1"/><text x="41.2572%" y="431.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="41.0072%" y="405" width="0.0799%" height="15" fill="rgb(214,114,4)" fg:x="513" fg:w="1"/><text x="41.2572%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.0072%" y="389" width="0.0799%" height="15" fill="rgb(234,215,15)" fg:x="513" fg:w="1"/><text x="41.2572%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="41.0072%" y="453" width="0.1599%" height="15" fill="rgb(250,216,45)" fg:x="513" fg:w="2"/><text x="41.2572%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="41.0871%" y="437" width="0.0799%" height="15" fill="rgb(236,128,4)" fg:x="514" fg:w="1"/><text x="41.3371%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="41.0871%" y="421" width="0.0799%" height="15" fill="rgb(234,50,33)" fg:x="514" fg:w="1"/><text x="41.3371%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="41.1671%" y="453" width="0.0799%" height="15" fill="rgb(253,131,37)" fg:x="515" fg:w="1"/><text x="41.4171%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="41.2470%" y="453" width="0.0799%" height="15" fill="rgb(218,55,27)" fg:x="516" fg:w="1"/><text x="41.4970%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="41.7266%" y="405" width="0.2398%" height="15" fill="rgb(241,220,28)" fg:x="522" fg:w="3"/><text x="41.9766%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="41.7266%" y="389" width="0.2398%" height="15" fill="rgb(241,90,48)" fg:x="522" fg:w="3"/><text x="41.9766%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="41.7266%" y="373" width="0.2398%" height="15" fill="rgb(216,43,37)" fg:x="522" fg:w="3"/><text x="41.9766%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="41.9664%" y="405" width="0.1599%" height="15" fill="rgb(207,173,9)" fg:x="525" fg:w="2"/><text x="42.2164%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="41.9664%" y="389" width="0.1599%" height="15" fill="rgb(240,126,30)" fg:x="525" fg:w="2"/><text x="42.2164%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="42.0464%" y="373" width="0.0799%" height="15" fill="rgb(228,178,53)" fg:x="526" fg:w="1"/><text x="42.2964%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.3661%" y="373" width="0.0799%" height="15" fill="rgb(217,33,4)" fg:x="530" fg:w="1"/><text x="42.6161%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="42.4460%" y="357" width="0.4796%" height="15" fill="rgb(206,124,34)" fg:x="531" fg:w="6"/><text x="42.6960%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="42.5260%" y="341" width="0.3997%" height="15" fill="rgb(208,122,53)" fg:x="532" fg:w="5"/><text x="42.7760%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="42.6059%" y="325" width="0.3197%" height="15" fill="rgb(215,202,26)" fg:x="533" fg:w="4"/><text x="42.8559%" y="335.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="42.6059%" y="309" width="0.3197%" height="15" fill="rgb(232,198,31)" fg:x="533" fg:w="4"/><text x="42.8559%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="42.9257%" y="357" width="0.0799%" height="15" fill="rgb(222,23,35)" fg:x="537" fg:w="1"/><text x="43.1757%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.44%)</title><rect x="41.7266%" y="421" width="1.4388%" height="15" fill="rgb(242,27,53)" fg:x="522" fg:w="18"/><text x="41.9766%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.04%)</title><rect x="42.1263%" y="405" width="1.0392%" height="15" fill="rgb(210,216,42)" fg:x="527" fg:w="13"/><text x="42.3763%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="42.3661%" y="389" width="0.7994%" height="15" fill="rgb(234,39,38)" fg:x="530" fg:w="10"/><text x="42.6161%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="42.4460%" y="373" width="0.7194%" height="15" fill="rgb(235,126,54)" fg:x="531" fg:w="9"/><text x="42.6960%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.0056%" y="357" width="0.1599%" height="15" fill="rgb(235,150,33)" fg:x="538" fg:w="2"/><text x="43.2556%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 1.68%)</title><rect x="41.5667%" y="437" width="1.6787%" height="15" fill="rgb(249,49,53)" fg:x="520" fg:w="21"/><text x="41.8167%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="43.1655%" y="421" width="0.0799%" height="15" fill="rgb(238,60,50)" fg:x="540" fg:w="1"/><text x="43.4155%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.2454%" y="437" width="0.1599%" height="15" fill="rgb(210,5,2)" fg:x="541" fg:w="2"/><text x="43.4954%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (39 samples, 3.12%)</title><rect x="40.4476%" y="485" width="3.1175%" height="15" fill="rgb(214,207,24)" fg:x="506" fg:w="39"/><text x="40.6976%" y="495.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (38 samples, 3.04%)</title><rect x="40.5276%" y="469" width="3.0376%" height="15" fill="rgb(228,173,2)" fg:x="507" fg:w="38"/><text x="40.7776%" y="479.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (28 samples, 2.24%)</title><rect x="41.3269%" y="453" width="2.2382%" height="15" fill="rgb(244,26,8)" fg:x="517" fg:w="28"/><text x="41.5769%" y="463.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.4053%" y="437" width="0.1599%" height="15" fill="rgb(249,153,35)" fg:x="543" fg:w="2"/><text x="43.6553%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.4852%" y="421" width="0.0799%" height="15" fill="rgb(221,215,40)" fg:x="544" fg:w="1"/><text x="43.7352%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.4852%" y="405" width="0.0799%" height="15" fill="rgb(238,106,35)" fg:x="544" fg:w="1"/><text x="43.7352%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="44.0448%" y="373" width="0.0799%" height="15" fill="rgb(207,195,21)" fg:x="551" fg:w="1"/><text x="44.2948%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="44.3645%" y="293" width="0.0799%" height="15" fill="rgb(205,43,29)" fg:x="555" fg:w="1"/><text x="44.6145%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="44.2846%" y="309" width="0.2398%" height="15" fill="rgb(236,35,21)" fg:x="554" fg:w="3"/><text x="44.5346%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.4444%" y="293" width="0.0799%" height="15" fill="rgb(244,74,8)" fg:x="556" fg:w="1"/><text x="44.6944%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="44.5244%" y="309" width="0.1599%" height="15" fill="rgb(241,229,7)" fg:x="557" fg:w="2"/><text x="44.7744%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6043%" y="293" width="0.0799%" height="15" fill="rgb(212,223,25)" fg:x="558" fg:w="1"/><text x="44.8543%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="44.2046%" y="341" width="0.5596%" height="15" fill="rgb(234,58,53)" fg:x="553" fg:w="7"/><text x="44.4546%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="44.2046%" y="325" width="0.5596%" height="15" fill="rgb(244,36,1)" fg:x="553" fg:w="7"/><text x="44.4546%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.6843%" y="309" width="0.0799%" height="15" fill="rgb(222,40,54)" fg:x="559" fg:w="1"/><text x="44.9343%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="45.0839%" y="309" width="0.0799%" height="15" fill="rgb(210,207,39)" fg:x="564" fg:w="1"/><text x="45.3339%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="45.1639%" y="293" width="0.1599%" height="15" fill="rgb(234,52,14)" fg:x="565" fg:w="2"/><text x="45.4139%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.2438%" y="277" width="0.0799%" height="15" fill="rgb(239,108,46)" fg:x="566" fg:w="1"/><text x="45.4938%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="45.0040%" y="325" width="0.3997%" height="15" fill="rgb(252,223,5)" fg:x="563" fg:w="5"/><text x="45.2540%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="45.1639%" y="309" width="0.2398%" height="15" fill="rgb(227,181,11)" fg:x="565" fg:w="3"/><text x="45.4139%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.3237%" y="293" width="0.0799%" height="15" fill="rgb(248,126,40)" fg:x="567" fg:w="1"/><text x="45.5737%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="45.4037%" y="309" width="0.0799%" height="15" fill="rgb(243,1,18)" fg:x="568" fg:w="1"/><text x="45.6537%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="45.4037%" y="325" width="0.3197%" height="15" fill="rgb(214,145,23)" fg:x="568" fg:w="4"/><text x="45.6537%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="45.4836%" y="309" width="0.2398%" height="15" fill="rgb(241,218,11)" fg:x="569" fg:w="3"/><text x="45.7336%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.84%)</title><rect x="44.1247%" y="357" width="1.8385%" height="15" fill="rgb(214,219,24)" fg:x="552" fg:w="23"/><text x="44.3747%" y="367.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.20%)</title><rect x="44.7642%" y="341" width="1.1990%" height="15" fill="rgb(235,32,7)" fg:x="560" fg:w="15"/><text x="45.0142%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.7234%" y="325" width="0.2398%" height="15" fill="rgb(227,121,28)" fg:x="572" fg:w="3"/><text x="45.9734%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="45.9632%" y="357" width="0.2398%" height="15" fill="rgb(216,129,49)" fg:x="575" fg:w="3"/><text x="46.2132%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.1231%" y="341" width="0.0799%" height="15" fill="rgb(207,194,50)" fg:x="577" fg:w="1"/><text x="46.3731%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.2030%" y="325" width="0.1599%" height="15" fill="rgb(207,4,18)" fg:x="578" fg:w="2"/><text x="46.4530%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (31 samples, 2.48%)</title><rect x="43.9648%" y="389" width="2.4780%" height="15" fill="rgb(213,50,30)" fg:x="550" fg:w="31"/><text x="44.2148%" y="399.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.32%)</title><rect x="44.1247%" y="373" width="2.3181%" height="15" fill="rgb(208,77,22)" fg:x="552" fg:w="29"/><text x="44.3747%" y="383.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="46.2030%" y="357" width="0.2398%" height="15" fill="rgb(244,204,34)" fg:x="578" fg:w="3"/><text x="46.4530%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="46.2030%" y="341" width="0.2398%" height="15" fill="rgb(230,20,17)" fg:x="578" fg:w="3"/><text x="46.4530%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="46.3629%" y="325" width="0.0799%" height="15" fill="rgb(237,83,15)" fg:x="580" fg:w="1"/><text x="46.6129%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.4428%" y="373" width="0.0799%" height="15" fill="rgb(221,109,25)" fg:x="581" fg:w="1"/><text x="46.6928%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="46.4428%" y="389" width="0.1599%" height="15" fill="rgb(205,194,52)" fg:x="581" fg:w="2"/><text x="46.6928%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.5228%" y="373" width="0.0799%" height="15" fill="rgb(244,173,54)" fg:x="582" fg:w="1"/><text x="46.7728%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (40 samples, 3.20%)</title><rect x="43.7250%" y="421" width="3.1974%" height="15" fill="rgb(227,181,18)" fg:x="547" fg:w="40"/><text x="43.9750%" y="431.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (39 samples, 3.12%)</title><rect x="43.8050%" y="405" width="3.1175%" height="15" fill="rgb(238,36,30)" fg:x="548" fg:w="39"/><text x="44.0550%" y="415.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="46.6027%" y="389" width="0.3197%" height="15" fill="rgb(254,85,0)" fg:x="583" fg:w="4"/><text x="46.8527%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="46.6027%" y="373" width="0.3197%" height="15" fill="rgb(247,63,33)" fg:x="583" fg:w="4"/><text x="46.8527%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.7626%" y="357" width="0.1599%" height="15" fill="rgb(220,7,54)" fg:x="585" fg:w="2"/><text x="47.0126%" y="367.50"></text></g><g><title>engine::session::state::State::close (172 samples, 13.75%)</title><rect x="33.3333%" y="581" width="13.7490%" height="15" fill="rgb(238,227,21)" fg:x="417" fg:w="172"/><text x="33.5833%" y="591.50">engine::session::stat..</text></g><g><title>engine::session::state::State::flush_entities (172 samples, 13.75%)</title><rect x="33.3333%" y="565" width="13.7490%" height="15" fill="rgb(237,29,31)" fg:x="417" fg:w="172"/><text x="33.5833%" y="575.50">engine::session::stat..</text></g><g><title>core::iter::adapters::try_process (170 samples, 13.59%)</title><rect x="33.4932%" y="549" width="13.5891%" height="15" fill="rgb(211,21,50)" fg:x="419" fg:w="170"/><text x="33.7432%" y="559.50">core::iter::adapters:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (170 samples, 13.59%)</title><rect x="33.4932%" y="533" width="13.5891%" height="15" fill="rgb(239,119,2)" fg:x="419" fg:w="170"/><text x="33.7432%" y="543.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (169 samples, 13.51%)</title><rect x="33.5731%" y="517" width="13.5092%" height="15" fill="rgb(250,2,39)" fg:x="420" fg:w="169"/><text x="33.8231%" y="527.50">engine::session::sta..</text></g><g><title>kernel::model::any_entity_changes (125 samples, 9.99%)</title><rect x="37.0903%" y="501" width="9.9920%" height="15" fill="rgb(244,46,53)" fg:x="464" fg:w="125"/><text x="37.3403%" y="511.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (44 samples, 3.52%)</title><rect x="43.5651%" y="485" width="3.5172%" height="15" fill="rgb(209,21,19)" fg:x="545" fg:w="44"/><text x="43.8151%" y="495.50">ser..</text></g><g><title>serde_json::de::from_trait (44 samples, 3.52%)</title><rect x="43.5651%" y="469" width="3.5172%" height="15" fill="rgb(236,145,4)" fg:x="545" fg:w="44"/><text x="43.8151%" y="479.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (44 samples, 3.52%)</title><rect x="43.5651%" y="453" width="3.5172%" height="15" fill="rgb(220,133,36)" fg:x="545" fg:w="44"/><text x="43.8151%" y="463.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (44 samples, 3.52%)</title><rect x="43.5651%" y="437" width="3.5172%" height="15" fill="rgb(244,18,3)" fg:x="545" fg:w="44"/><text x="43.8151%" y="447.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.9225%" y="421" width="0.1599%" height="15" fill="rgb(232,171,48)" fg:x="587" fg:w="2"/><text x="47.1725%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.9225%" y="405" width="0.1599%" height="15" fill="rgb(223,223,53)" fg:x="587" fg:w="2"/><text x="47.1725%" y="415.50"></text></g><g><title>engine::session::Session::close (177 samples, 14.15%)</title><rect x="33.0136%" y="597" width="14.1487%" height="15" fill="rgb(246,92,13)" fg:x="413" fg:w="177"/><text x="33.2636%" y="607.50">engine::session::Sess..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="47.0823%" y="581" width="0.0799%" height="15" fill="rgb(229,171,10)" fg:x="589" fg:w="1"/><text x="47.3323%" y="591.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="47.0823%" y="565" width="0.0799%" height="15" fill="rgb(213,131,26)" fg:x="589" fg:w="1"/><text x="47.3323%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="47.0823%" y="549" width="0.0799%" height="15" fill="rgb(242,87,54)" fg:x="589" fg:w="1"/><text x="47.3323%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="47.0823%" y="533" width="0.0799%" height="15" fill="rgb(237,21,35)" fg:x="589" fg:w="1"/><text x="47.3323%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="47.0823%" y="517" width="0.0799%" height="15" fill="rgb(253,13,47)" fg:x="589" fg:w="1"/><text x="47.3323%" y="527.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="47.2422%" y="437" width="0.0799%" height="15" fill="rgb(215,122,49)" fg:x="591" fg:w="1"/><text x="47.4922%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="47.3221%" y="405" width="0.0799%" height="15" fill="rgb(209,179,30)" fg:x="592" fg:w="1"/><text x="47.5721%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.4021%" y="389" width="0.0799%" height="15" fill="rgb(235,100,24)" fg:x="593" fg:w="1"/><text x="47.6521%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.4820%" y="389" width="0.0799%" height="15" fill="rgb(209,67,24)" fg:x="594" fg:w="1"/><text x="47.7320%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="47.4820%" y="373" width="0.0799%" height="15" fill="rgb(206,74,32)" fg:x="594" fg:w="1"/><text x="47.7320%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.4820%" y="357" width="0.0799%" height="15" fill="rgb(212,45,25)" fg:x="594" fg:w="1"/><text x="47.7320%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="47.3221%" y="421" width="0.3197%" height="15" fill="rgb(239,26,3)" fg:x="592" fg:w="4"/><text x="47.5721%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="47.4021%" y="405" width="0.2398%" height="15" fill="rgb(218,36,15)" fg:x="593" fg:w="3"/><text x="47.6521%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.5620%" y="389" width="0.0799%" height="15" fill="rgb(206,108,24)" fg:x="595" fg:w="1"/><text x="47.8120%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.5620%" y="373" width="0.0799%" height="15" fill="rgb(234,204,42)" fg:x="595" fg:w="1"/><text x="47.8120%" y="383.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (8 samples, 0.64%)</title><rect x="47.2422%" y="469" width="0.6395%" height="15" fill="rgb(229,2,11)" fg:x="591" fg:w="8"/><text x="47.4922%" y="479.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (8 samples, 0.64%)</title><rect x="47.2422%" y="453" width="0.6395%" height="15" fill="rgb(221,20,48)" fg:x="591" fg:w="8"/><text x="47.4922%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="47.3221%" y="437" width="0.5596%" height="15" fill="rgb(244,164,10)" fg:x="592" fg:w="7"/><text x="47.5721%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="47.6419%" y="421" width="0.2398%" height="15" fill="rgb(243,229,2)" fg:x="596" fg:w="3"/><text x="47.8919%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="47.7218%" y="405" width="0.1599%" height="15" fill="rgb(232,131,37)" fg:x="597" fg:w="2"/><text x="47.9718%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="47.7218%" y="389" width="0.1599%" height="15" fill="rgb(217,156,11)" fg:x="597" fg:w="2"/><text x="47.9718%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.7218%" y="373" width="0.1599%" height="15" fill="rgb(239,99,48)" fg:x="597" fg:w="2"/><text x="47.9718%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.7218%" y="357" width="0.1599%" height="15" fill="rgb(231,209,9)" fg:x="597" fg:w="2"/><text x="47.9718%" y="367.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="47.7218%" y="341" width="0.1599%" height="15" fill="rgb(254,97,27)" fg:x="597" fg:w="2"/><text x="47.9718%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="47.7218%" y="325" width="0.1599%" height="15" fill="rgb(223,151,38)" fg:x="597" fg:w="2"/><text x="47.9718%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="47.7218%" y="309" width="0.1599%" height="15" fill="rgb(219,206,35)" fg:x="597" fg:w="2"/><text x="47.9718%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="47.7218%" y="293" width="0.1599%" height="15" fill="rgb(216,130,31)" fg:x="597" fg:w="2"/><text x="47.9718%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="47.7218%" y="277" width="0.1599%" height="15" fill="rgb(251,97,34)" fg:x="597" fg:w="2"/><text x="47.9718%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="47.7218%" y="261" width="0.1599%" height="15" fill="rgb(246,159,47)" fg:x="597" fg:w="2"/><text x="47.9718%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.16%)</title><rect x="47.7218%" y="245" width="0.1599%" height="15" fill="rgb(232,87,10)" fg:x="597" fg:w="2"/><text x="47.9718%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2 samples, 0.16%)</title><rect x="47.7218%" y="229" width="0.1599%" height="15" fill="rgb(249,1,37)" fg:x="597" fg:w="2"/><text x="47.9718%" y="239.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.9616%" y="437" width="0.0799%" height="15" fill="rgb(239,135,14)" fg:x="600" fg:w="1"/><text x="48.2116%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.9616%" y="421" width="0.0799%" height="15" fill="rgb(253,116,46)" fg:x="600" fg:w="1"/><text x="48.2116%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.9616%" y="405" width="0.0799%" height="15" fill="rgb(222,217,37)" fg:x="600" fg:w="1"/><text x="48.2116%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="48.0416%" y="421" width="0.0799%" height="15" fill="rgb(252,96,8)" fg:x="601" fg:w="1"/><text x="48.2916%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="48.0416%" y="437" width="0.1599%" height="15" fill="rgb(254,103,41)" fg:x="601" fg:w="2"/><text x="48.2916%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="48.1215%" y="421" width="0.0799%" height="15" fill="rgb(218,213,19)" fg:x="602" fg:w="1"/><text x="48.3715%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (13 samples, 1.04%)</title><rect x="47.2422%" y="485" width="1.0392%" height="15" fill="rgb(253,95,21)" fg:x="591" fg:w="13"/><text x="47.4922%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="47.8817%" y="469" width="0.3997%" height="15" fill="rgb(229,26,28)" fg:x="599" fg:w="5"/><text x="48.1317%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="47.9616%" y="453" width="0.3197%" height="15" fill="rgb(230,129,16)" fg:x="600" fg:w="4"/><text x="48.2116%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.2014%" y="437" width="0.0799%" height="15" fill="rgb(236,126,17)" fg:x="603" fg:w="1"/><text x="48.4514%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.2014%" y="421" width="0.0799%" height="15" fill="rgb(209,33,33)" fg:x="603" fg:w="1"/><text x="48.4514%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.2014%" y="405" width="0.0799%" height="15" fill="rgb(227,85,29)" fg:x="603" fg:w="1"/><text x="48.4514%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.2014%" y="389" width="0.0799%" height="15" fill="rgb(241,53,46)" fg:x="603" fg:w="1"/><text x="48.4514%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="48.3613%" y="421" width="0.1599%" height="15" fill="rgb(228,167,53)" fg:x="605" fg:w="2"/><text x="48.6113%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.4412%" y="405" width="0.0799%" height="15" fill="rgb(238,195,45)" fg:x="606" fg:w="1"/><text x="48.6912%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="48.4412%" y="389" width="0.0799%" height="15" fill="rgb(252,124,45)" fg:x="606" fg:w="1"/><text x="48.6912%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="48.2814%" y="437" width="0.3997%" height="15" fill="rgb(251,38,35)" fg:x="604" fg:w="5"/><text x="48.5314%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="48.5212%" y="421" width="0.1599%" height="15" fill="rgb(227,33,2)" fg:x="607" fg:w="2"/><text x="48.7712%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.5212%" y="405" width="0.1599%" height="15" fill="rgb(223,157,46)" fg:x="607" fg:w="2"/><text x="48.7712%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6011%" y="389" width="0.0799%" height="15" fill="rgb(222,78,41)" fg:x="608" fg:w="1"/><text x="48.8511%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.6011%" y="373" width="0.0799%" height="15" fill="rgb(248,176,11)" fg:x="608" fg:w="1"/><text x="48.8511%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6011%" y="357" width="0.0799%" height="15" fill="rgb(241,221,18)" fg:x="608" fg:w="1"/><text x="48.8511%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.6011%" y="341" width="0.0799%" height="15" fill="rgb(218,85,22)" fg:x="608" fg:w="1"/><text x="48.8511%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6011%" y="325" width="0.0799%" height="15" fill="rgb(222,223,7)" fg:x="608" fg:w="1"/><text x="48.8511%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.6011%" y="309" width="0.0799%" height="15" fill="rgb(254,59,39)" fg:x="608" fg:w="1"/><text x="48.8511%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.6811%" y="405" width="0.0799%" height="15" fill="rgb(247,100,27)" fg:x="609" fg:w="1"/><text x="48.9311%" y="415.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (20 samples, 1.60%)</title><rect x="47.2422%" y="501" width="1.5987%" height="15" fill="rgb(237,207,10)" fg:x="591" fg:w="20"/><text x="47.4922%" y="511.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (7 samples, 0.56%)</title><rect x="48.2814%" y="485" width="0.5596%" height="15" fill="rgb(220,121,28)" fg:x="604" fg:w="7"/><text x="48.5314%" y="495.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (7 samples, 0.56%)</title><rect x="48.2814%" y="469" width="0.5596%" height="15" fill="rgb(213,223,20)" fg:x="604" fg:w="7"/><text x="48.5314%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="48.2814%" y="453" width="0.5596%" height="15" fill="rgb(205,121,27)" fg:x="604" fg:w="7"/><text x="48.5314%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="48.6811%" y="437" width="0.1599%" height="15" fill="rgb(253,24,53)" fg:x="609" fg:w="2"/><text x="48.9311%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="48.6811%" y="421" width="0.1599%" height="15" fill="rgb(224,224,47)" fg:x="609" fg:w="2"/><text x="48.9311%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.7610%" y="405" width="0.0799%" height="15" fill="rgb(250,125,36)" fg:x="610" fg:w="1"/><text x="49.0110%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.7610%" y="389" width="0.0799%" height="15" fill="rgb(240,144,38)" fg:x="610" fg:w="1"/><text x="49.0110%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.7610%" y="373" width="0.0799%" height="15" fill="rgb(250,15,50)" fg:x="610" fg:w="1"/><text x="49.0110%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.7610%" y="357" width="0.0799%" height="15" fill="rgb(210,24,26)" fg:x="610" fg:w="1"/><text x="49.0110%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.7610%" y="341" width="0.0799%" height="15" fill="rgb(234,53,53)" fg:x="610" fg:w="1"/><text x="49.0110%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.7610%" y="325" width="0.0799%" height="15" fill="rgb(208,108,28)" fg:x="610" fg:w="1"/><text x="49.0110%" y="335.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (2 samples, 0.16%)</title><rect x="49.0807%" y="293" width="0.1599%" height="15" fill="rgb(227,143,7)" fg:x="614" fg:w="2"/><text x="49.3307%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="49.0807%" y="277" width="0.1599%" height="15" fill="rgb(238,189,38)" fg:x="614" fg:w="2"/><text x="49.3307%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.1607%" y="261" width="0.0799%" height="15" fill="rgb(222,69,15)" fg:x="615" fg:w="1"/><text x="49.4107%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.3205%" y="245" width="0.0799%" height="15" fill="rgb(213,169,7)" fg:x="617" fg:w="1"/><text x="49.5705%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.3205%" y="229" width="0.0799%" height="15" fill="rgb(251,219,4)" fg:x="617" fg:w="1"/><text x="49.5705%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3205%" y="213" width="0.0799%" height="15" fill="rgb(241,55,40)" fg:x="617" fg:w="1"/><text x="49.5705%" y="223.50"></text></g><g><title>&lt;replies::AreaObservation as replies::ToTaggedJson&gt;::to_tagged_json (6 samples, 0.48%)</title><rect x="49.0008%" y="341" width="0.4796%" height="15" fill="rgb(243,57,30)" fg:x="613" fg:w="6"/><text x="49.2508%" y="351.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::AreaObservation&gt;::serialize (5 samples, 0.40%)</title><rect x="49.0807%" y="325" width="0.3997%" height="15" fill="rgb(234,50,30)" fg:x="614" fg:w="5"/><text x="49.3307%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="49.0807%" y="309" width="0.3997%" height="15" fill="rgb(239,23,42)" fg:x="614" fg:w="5"/><text x="49.3307%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="49.2406%" y="293" width="0.2398%" height="15" fill="rgb(217,38,19)" fg:x="616" fg:w="3"/><text x="49.4906%" y="303.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (2 samples, 0.16%)</title><rect x="49.3205%" y="277" width="0.1599%" height="15" fill="rgb(215,179,16)" fg:x="617" fg:w="2"/><text x="49.5705%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="49.3205%" y="261" width="0.1599%" height="15" fill="rgb(254,21,37)" fg:x="617" fg:w="2"/><text x="49.5705%" y="271.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="49.4005%" y="245" width="0.0799%" height="15" fill="rgb(219,207,48)" fg:x="618" fg:w="1"/><text x="49.6505%" y="255.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="49.4005%" y="229" width="0.0799%" height="15" fill="rgb(227,225,41)" fg:x="618" fg:w="1"/><text x="49.6505%" y="239.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::AreaObservation&gt;&gt;::try_from (8 samples, 0.64%)</title><rect x="49.0008%" y="357" width="0.6395%" height="15" fill="rgb(223,130,1)" fg:x="613" fg:w="8"/><text x="49.2508%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (2 samples, 0.16%)</title><rect x="49.4804%" y="341" width="0.1599%" height="15" fill="rgb(249,54,42)" fg:x="619" fg:w="2"/><text x="49.7304%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (2 samples, 0.16%)</title><rect x="49.4804%" y="325" width="0.1599%" height="15" fill="rgb(248,69,25)" fg:x="619" fg:w="2"/><text x="49.7304%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="49.4804%" y="309" width="0.1599%" height="15" fill="rgb(234,21,32)" fg:x="619" fg:w="2"/><text x="49.7304%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.8801%" y="309" width="0.0799%" height="15" fill="rgb(252,136,6)" fg:x="624" fg:w="1"/><text x="50.1301%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.9600%" y="309" width="0.0799%" height="15" fill="rgb(245,87,12)" fg:x="625" fg:w="1"/><text x="50.2100%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.2798%" y="261" width="0.0799%" height="15" fill="rgb(208,12,15)" fg:x="629" fg:w="1"/><text x="50.5298%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.2798%" y="245" width="0.0799%" height="15" fill="rgb(250,98,2)" fg:x="629" fg:w="1"/><text x="50.5298%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.2798%" y="229" width="0.0799%" height="15" fill="rgb(205,213,15)" fg:x="629" fg:w="1"/><text x="50.5298%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.2798%" y="213" width="0.0799%" height="15" fill="rgb(248,192,44)" fg:x="629" fg:w="1"/><text x="50.5298%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.2798%" y="197" width="0.0799%" height="15" fill="rgb(221,89,17)" fg:x="629" fg:w="1"/><text x="50.5298%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.2798%" y="181" width="0.0799%" height="15" fill="rgb(209,55,3)" fg:x="629" fg:w="1"/><text x="50.5298%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.2798%" y="165" width="0.0799%" height="15" fill="rgb(247,23,45)" fg:x="629" fg:w="1"/><text x="50.5298%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.2798%" y="149" width="0.0799%" height="15" fill="rgb(235,152,23)" fg:x="629" fg:w="1"/><text x="50.5298%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.2798%" y="133" width="0.0799%" height="15" fill="rgb(244,63,13)" fg:x="629" fg:w="1"/><text x="50.5298%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.2798%" y="117" width="0.0799%" height="15" fill="rgb(227,30,37)" fg:x="629" fg:w="1"/><text x="50.5298%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.2798%" y="101" width="0.0799%" height="15" fill="rgb(224,49,42)" fg:x="629" fg:w="1"/><text x="50.5298%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.2798%" y="85" width="0.0799%" height="15" fill="rgb(218,129,5)" fg:x="629" fg:w="1"/><text x="50.5298%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.2798%" y="69" width="0.0799%" height="15" fill="rgb(240,199,54)" fg:x="629" fg:w="1"/><text x="50.5298%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="50.1998%" y="277" width="0.2398%" height="15" fill="rgb(234,31,13)" fg:x="628" fg:w="3"/><text x="50.4498%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3597%" y="261" width="0.0799%" height="15" fill="rgb(219,73,54)" fg:x="630" fg:w="1"/><text x="50.6097%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="50.1998%" y="293" width="0.3197%" height="15" fill="rgb(251,162,10)" fg:x="628" fg:w="4"/><text x="50.4498%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.4396%" y="277" width="0.0799%" height="15" fill="rgb(240,138,47)" fg:x="631" fg:w="1"/><text x="50.6896%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.4396%" y="261" width="0.0799%" height="15" fill="rgb(216,138,26)" fg:x="631" fg:w="1"/><text x="50.6896%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.4396%" y="245" width="0.0799%" height="15" fill="rgb(243,17,35)" fg:x="631" fg:w="1"/><text x="50.6896%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.4396%" y="229" width="0.0799%" height="15" fill="rgb(241,60,18)" fg:x="631" fg:w="1"/><text x="50.6896%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.4396%" y="213" width="0.0799%" height="15" fill="rgb(234,2,44)" fg:x="631" fg:w="1"/><text x="50.6896%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.4396%" y="197" width="0.0799%" height="15" fill="rgb(225,225,33)" fg:x="631" fg:w="1"/><text x="50.6896%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.4396%" y="181" width="0.0799%" height="15" fill="rgb(234,50,31)" fg:x="631" fg:w="1"/><text x="50.6896%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.4396%" y="165" width="0.0799%" height="15" fill="rgb(249,6,25)" fg:x="631" fg:w="1"/><text x="50.6896%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.4396%" y="149" width="0.0799%" height="15" fill="rgb(241,5,17)" fg:x="631" fg:w="1"/><text x="50.6896%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.4396%" y="133" width="0.0799%" height="15" fill="rgb(207,116,10)" fg:x="631" fg:w="1"/><text x="50.6896%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.4396%" y="117" width="0.0799%" height="15" fill="rgb(222,128,18)" fg:x="631" fg:w="1"/><text x="50.6896%" y="127.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="50.4396%" y="101" width="0.0799%" height="15" fill="rgb(229,109,25)" fg:x="631" fg:w="1"/><text x="50.6896%" y="111.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="50.4396%" y="85" width="0.0799%" height="15" fill="rgb(222,102,25)" fg:x="631" fg:w="1"/><text x="50.6896%" y="95.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.5196%" y="293" width="0.0799%" height="15" fill="rgb(239,211,5)" fg:x="632" fg:w="1"/><text x="50.7696%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="50.5995%" y="293" width="0.1599%" height="15" fill="rgb(223,136,26)" fg:x="633" fg:w="2"/><text x="50.8495%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="50.5995%" y="277" width="0.1599%" height="15" fill="rgb(227,30,15)" fg:x="633" fg:w="2"/><text x="50.8495%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="50.5995%" y="261" width="0.1599%" height="15" fill="rgb(247,76,4)" fg:x="633" fg:w="2"/><text x="50.8495%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="50.5995%" y="245" width="0.1599%" height="15" fill="rgb(245,38,48)" fg:x="633" fg:w="2"/><text x="50.8495%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.6795%" y="229" width="0.0799%" height="15" fill="rgb(210,220,14)" fg:x="634" fg:w="1"/><text x="50.9295%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.8393%" y="261" width="0.0799%" height="15" fill="rgb(224,60,51)" fg:x="636" fg:w="1"/><text x="51.0893%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.9193%" y="261" width="0.0799%" height="15" fill="rgb(212,133,49)" fg:x="637" fg:w="1"/><text x="51.1693%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.9992%" y="229" width="0.1599%" height="15" fill="rgb(231,39,22)" fg:x="638" fg:w="2"/><text x="51.2492%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="50.9992%" y="213" width="0.1599%" height="15" fill="rgb(236,173,22)" fg:x="638" fg:w="2"/><text x="51.2492%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="51.1591%" y="229" width="0.3197%" height="15" fill="rgb(210,70,0)" fg:x="640" fg:w="4"/><text x="51.4091%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="51.1591%" y="213" width="0.3197%" height="15" fill="rgb(215,170,11)" fg:x="640" fg:w="4"/><text x="51.4091%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (21 samples, 1.68%)</title><rect x="49.8801%" y="325" width="1.6787%" height="15" fill="rgb(220,154,28)" fg:x="624" fg:w="21"/><text x="50.1301%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (19 samples, 1.52%)</title><rect x="50.0400%" y="309" width="1.5188%" height="15" fill="rgb(240,160,41)" fg:x="626" fg:w="19"/><text x="50.2900%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="50.7594%" y="293" width="0.7994%" height="15" fill="rgb(243,215,41)" fg:x="635" fg:w="10"/><text x="51.0094%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="50.7594%" y="277" width="0.7994%" height="15" fill="rgb(214,208,31)" fg:x="635" fg:w="10"/><text x="51.0094%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="50.9992%" y="261" width="0.5596%" height="15" fill="rgb(247,57,22)" fg:x="638" fg:w="7"/><text x="51.2492%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="50.9992%" y="245" width="0.5596%" height="15" fill="rgb(228,73,52)" fg:x="638" fg:w="7"/><text x="51.2492%" y="255.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="51.4788%" y="229" width="0.0799%" height="15" fill="rgb(252,60,9)" fg:x="644" fg:w="1"/><text x="51.7288%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.5588%" y="309" width="0.0799%" height="15" fill="rgb(233,9,51)" fg:x="645" fg:w="1"/><text x="51.8088%" y="319.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="51.6387%" y="309" width="0.1599%" height="15" fill="rgb(223,67,14)" fg:x="646" fg:w="2"/><text x="51.8887%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="51.6387%" y="293" width="0.1599%" height="15" fill="rgb(222,86,2)" fg:x="646" fg:w="2"/><text x="51.8887%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="51.6387%" y="277" width="0.1599%" height="15" fill="rgb(243,58,54)" fg:x="646" fg:w="2"/><text x="51.8887%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="51.8785%" y="293" width="0.3197%" height="15" fill="rgb(210,200,39)" fg:x="649" fg:w="4"/><text x="52.1285%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.9584%" y="277" width="0.2398%" height="15" fill="rgb(238,135,9)" fg:x="650" fg:w="3"/><text x="52.2084%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.0384%" y="261" width="0.1599%" height="15" fill="rgb(232,179,7)" fg:x="651" fg:w="2"/><text x="52.2884%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.0384%" y="245" width="0.1599%" height="15" fill="rgb(245,65,41)" fg:x="651" fg:w="2"/><text x="52.2884%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.1183%" y="229" width="0.0799%" height="15" fill="rgb(227,43,8)" fg:x="652" fg:w="1"/><text x="52.3683%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.1183%" y="213" width="0.0799%" height="15" fill="rgb(235,91,14)" fg:x="652" fg:w="1"/><text x="52.3683%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.1183%" y="197" width="0.0799%" height="15" fill="rgb(235,219,31)" fg:x="652" fg:w="1"/><text x="52.3683%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.1183%" y="181" width="0.0799%" height="15" fill="rgb(227,121,25)" fg:x="652" fg:w="1"/><text x="52.3683%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.1183%" y="165" width="0.0799%" height="15" fill="rgb(254,129,24)" fg:x="652" fg:w="1"/><text x="52.3683%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.1183%" y="149" width="0.0799%" height="15" fill="rgb(226,144,49)" fg:x="652" fg:w="1"/><text x="52.3683%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.1183%" y="133" width="0.0799%" height="15" fill="rgb(214,187,32)" fg:x="652" fg:w="1"/><text x="52.3683%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.1183%" y="117" width="0.0799%" height="15" fill="rgb(243,129,46)" fg:x="652" fg:w="1"/><text x="52.3683%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.1183%" y="101" width="0.0799%" height="15" fill="rgb(221,185,35)" fg:x="652" fg:w="1"/><text x="52.3683%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.1183%" y="85" width="0.0799%" height="15" fill="rgb(205,0,32)" fg:x="652" fg:w="1"/><text x="52.3683%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.1183%" y="69" width="0.0799%" height="15" fill="rgb(229,179,12)" fg:x="652" fg:w="1"/><text x="52.3683%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.1982%" y="293" width="0.0799%" height="15" fill="rgb(252,107,19)" fg:x="653" fg:w="1"/><text x="52.4482%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.2782%" y="293" width="0.0799%" height="15" fill="rgb(220,95,27)" fg:x="654" fg:w="1"/><text x="52.5282%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="52.2782%" y="277" width="0.0799%" height="15" fill="rgb(240,113,40)" fg:x="654" fg:w="1"/><text x="52.5282%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.2782%" y="261" width="0.0799%" height="15" fill="rgb(208,4,43)" fg:x="654" fg:w="1"/><text x="52.5282%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.2782%" y="245" width="0.0799%" height="15" fill="rgb(247,189,30)" fg:x="654" fg:w="1"/><text x="52.5282%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.2782%" y="229" width="0.0799%" height="15" fill="rgb(231,157,17)" fg:x="654" fg:w="1"/><text x="52.5282%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="52.4380%" y="229" width="0.0799%" height="15" fill="rgb(224,139,6)" fg:x="656" fg:w="1"/><text x="52.6880%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.4380%" y="213" width="0.0799%" height="15" fill="rgb(223,83,16)" fg:x="656" fg:w="1"/><text x="52.6880%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.5180%" y="229" width="0.0799%" height="15" fill="rgb(232,211,20)" fg:x="657" fg:w="1"/><text x="52.7680%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.5979%" y="213" width="0.0799%" height="15" fill="rgb(225,203,35)" fg:x="658" fg:w="1"/><text x="52.8479%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="52.5979%" y="197" width="0.0799%" height="15" fill="rgb(215,211,44)" fg:x="658" fg:w="1"/><text x="52.8479%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.5979%" y="229" width="0.1599%" height="15" fill="rgb(248,213,26)" fg:x="658" fg:w="2"/><text x="52.8479%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.6779%" y="213" width="0.0799%" height="15" fill="rgb(214,23,52)" fg:x="659" fg:w="1"/><text x="52.9279%" y="223.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (41 samples, 3.28%)</title><rect x="49.8002%" y="341" width="3.2774%" height="15" fill="rgb(225,173,50)" fg:x="623" fg:w="41"/><text x="50.0502%" y="351.50">&lt;&amp;k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (19 samples, 1.52%)</title><rect x="51.5588%" y="325" width="1.5188%" height="15" fill="rgb(206,150,22)" fg:x="645" fg:w="19"/><text x="51.8088%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.28%)</title><rect x="51.7986%" y="309" width="1.2790%" height="15" fill="rgb(239,64,23)" fg:x="648" fg:w="16"/><text x="52.0486%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="52.3581%" y="293" width="0.7194%" height="15" fill="rgb(242,50,38)" fg:x="655" fg:w="9"/><text x="52.6081%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="52.3581%" y="277" width="0.7194%" height="15" fill="rgb(217,91,15)" fg:x="655" fg:w="9"/><text x="52.6081%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="52.3581%" y="261" width="0.7194%" height="15" fill="rgb(230,172,6)" fg:x="655" fg:w="9"/><text x="52.6081%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="52.3581%" y="245" width="0.7194%" height="15" fill="rgb(221,98,26)" fg:x="655" fg:w="9"/><text x="52.6081%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="52.7578%" y="229" width="0.3197%" height="15" fill="rgb(227,210,45)" fg:x="660" fg:w="4"/><text x="53.0078%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="52.7578%" y="213" width="0.3197%" height="15" fill="rgb(206,8,30)" fg:x="660" fg:w="4"/><text x="53.0078%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="53.0775%" y="341" width="0.0799%" height="15" fill="rgb(241,219,17)" fg:x="664" fg:w="1"/><text x="53.3275%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="53.0775%" y="325" width="0.0799%" height="15" fill="rgb(247,121,29)" fg:x="664" fg:w="1"/><text x="53.3275%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="53.1575%" y="309" width="0.0799%" height="15" fill="rgb(219,169,49)" fg:x="665" fg:w="1"/><text x="53.4075%" y="319.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="53.2374%" y="277" width="0.0799%" height="15" fill="rgb(253,49,49)" fg:x="666" fg:w="1"/><text x="53.4874%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.2374%" y="261" width="0.0799%" height="15" fill="rgb(217,178,3)" fg:x="666" fg:w="1"/><text x="53.4874%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.5572%" y="213" width="0.0799%" height="15" fill="rgb(234,73,37)" fg:x="670" fg:w="1"/><text x="53.8072%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.5572%" y="197" width="0.0799%" height="15" fill="rgb(250,98,22)" fg:x="670" fg:w="1"/><text x="53.8072%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.5572%" y="181" width="0.0799%" height="15" fill="rgb(220,108,37)" fg:x="670" fg:w="1"/><text x="53.8072%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.5572%" y="165" width="0.0799%" height="15" fill="rgb(225,168,10)" fg:x="670" fg:w="1"/><text x="53.8072%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.5572%" y="149" width="0.0799%" height="15" fill="rgb(247,215,21)" fg:x="670" fg:w="1"/><text x="53.8072%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.5572%" y="133" width="0.0799%" height="15" fill="rgb(253,189,31)" fg:x="670" fg:w="1"/><text x="53.8072%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.5572%" y="117" width="0.0799%" height="15" fill="rgb(241,54,22)" fg:x="670" fg:w="1"/><text x="53.8072%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.5572%" y="101" width="0.0799%" height="15" fill="rgb(211,87,4)" fg:x="670" fg:w="1"/><text x="53.8072%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.5572%" y="85" width="0.0799%" height="15" fill="rgb(245,112,24)" fg:x="670" fg:w="1"/><text x="53.8072%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.5572%" y="69" width="0.0799%" height="15" fill="rgb(235,190,41)" fg:x="670" fg:w="1"/><text x="53.8072%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.5572%" y="53" width="0.0799%" height="15" fill="rgb(214,89,8)" fg:x="670" fg:w="1"/><text x="53.8072%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.5572%" y="37" width="0.0799%" height="15" fill="rgb(249,155,35)" fg:x="670" fg:w="1"/><text x="53.8072%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="53.3173%" y="261" width="0.3997%" height="15" fill="rgb(249,88,26)" fg:x="667" fg:w="5"/><text x="53.5673%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="53.3173%" y="245" width="0.3997%" height="15" fill="rgb(232,56,8)" fg:x="667" fg:w="5"/><text x="53.5673%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="53.3973%" y="229" width="0.3197%" height="15" fill="rgb(240,95,3)" fg:x="668" fg:w="4"/><text x="53.6473%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.6371%" y="213" width="0.0799%" height="15" fill="rgb(222,44,28)" fg:x="671" fg:w="1"/><text x="53.8871%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.7170%" y="261" width="0.0799%" height="15" fill="rgb(234,16,30)" fg:x="672" fg:w="1"/><text x="53.9670%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="53.7170%" y="245" width="0.0799%" height="15" fill="rgb(223,26,17)" fg:x="672" fg:w="1"/><text x="53.9670%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.7170%" y="229" width="0.0799%" height="15" fill="rgb(239,187,47)" fg:x="672" fg:w="1"/><text x="53.9670%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.7170%" y="213" width="0.0799%" height="15" fill="rgb(247,102,50)" fg:x="672" fg:w="1"/><text x="53.9670%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.7170%" y="197" width="0.0799%" height="15" fill="rgb(231,216,22)" fg:x="672" fg:w="1"/><text x="53.9670%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.7970%" y="197" width="0.0799%" height="15" fill="rgb(216,201,26)" fg:x="673" fg:w="1"/><text x="54.0470%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.7970%" y="181" width="0.0799%" height="15" fill="rgb(214,186,23)" fg:x="673" fg:w="1"/><text x="54.0470%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.7970%" y="165" width="0.0799%" height="15" fill="rgb(235,184,4)" fg:x="673" fg:w="1"/><text x="54.0470%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="53.2374%" y="293" width="0.7194%" height="15" fill="rgb(244,46,17)" fg:x="666" fg:w="9"/><text x="53.4874%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="53.3173%" y="277" width="0.6395%" height="15" fill="rgb(248,74,46)" fg:x="667" fg:w="8"/><text x="53.5673%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.7970%" y="261" width="0.1599%" height="15" fill="rgb(243,79,5)" fg:x="673" fg:w="2"/><text x="54.0470%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.7970%" y="245" width="0.1599%" height="15" fill="rgb(213,148,1)" fg:x="673" fg:w="2"/><text x="54.0470%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="53.7970%" y="229" width="0.1599%" height="15" fill="rgb(221,30,0)" fg:x="673" fg:w="2"/><text x="54.0470%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.7970%" y="213" width="0.1599%" height="15" fill="rgb(207,85,29)" fg:x="673" fg:w="2"/><text x="54.0470%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.8769%" y="197" width="0.0799%" height="15" fill="rgb(239,31,46)" fg:x="674" fg:w="1"/><text x="54.1269%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.8769%" y="181" width="0.0799%" height="15" fill="rgb(219,6,1)" fg:x="674" fg:w="1"/><text x="54.1269%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.9568%" y="197" width="0.0799%" height="15" fill="rgb(229,90,29)" fg:x="675" fg:w="1"/><text x="54.2068%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.9568%" y="181" width="0.0799%" height="15" fill="rgb(242,201,42)" fg:x="675" fg:w="1"/><text x="54.2068%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.9568%" y="165" width="0.0799%" height="15" fill="rgb(243,80,54)" fg:x="675" fg:w="1"/><text x="54.2068%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.9568%" y="149" width="0.0799%" height="15" fill="rgb(223,166,15)" fg:x="675" fg:w="1"/><text x="54.2068%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.9568%" y="133" width="0.0799%" height="15" fill="rgb(238,78,27)" fg:x="675" fg:w="1"/><text x="54.2068%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.9568%" y="117" width="0.0799%" height="15" fill="rgb(235,28,43)" fg:x="675" fg:w="1"/><text x="54.2068%" y="127.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="53.9568%" y="101" width="0.0799%" height="15" fill="rgb(240,210,28)" fg:x="675" fg:w="1"/><text x="54.2068%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.9568%" y="277" width="0.1599%" height="15" fill="rgb(253,6,46)" fg:x="675" fg:w="2"/><text x="54.2068%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.9568%" y="261" width="0.1599%" height="15" fill="rgb(250,159,47)" fg:x="675" fg:w="2"/><text x="54.2068%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="53.9568%" y="245" width="0.1599%" height="15" fill="rgb(216,139,2)" fg:x="675" fg:w="2"/><text x="54.2068%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="53.9568%" y="229" width="0.1599%" height="15" fill="rgb(221,124,44)" fg:x="675" fg:w="2"/><text x="54.2068%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="53.9568%" y="213" width="0.1599%" height="15" fill="rgb(205,37,22)" fg:x="675" fg:w="2"/><text x="54.2068%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="54.0368%" y="197" width="0.0799%" height="15" fill="rgb(250,55,8)" fg:x="676" fg:w="1"/><text x="54.2868%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="54.0368%" y="181" width="0.0799%" height="15" fill="rgb(215,83,48)" fg:x="676" fg:w="1"/><text x="54.2868%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.1167%" y="133" width="0.0799%" height="15" fill="rgb(253,2,32)" fg:x="677" fg:w="1"/><text x="54.3667%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.1167%" y="117" width="0.0799%" height="15" fill="rgb(236,67,28)" fg:x="677" fg:w="1"/><text x="54.3667%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.1167%" y="101" width="0.0799%" height="15" fill="rgb(252,55,15)" fg:x="677" fg:w="1"/><text x="54.3667%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.1167%" y="85" width="0.0799%" height="15" fill="rgb(243,173,17)" fg:x="677" fg:w="1"/><text x="54.3667%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.1167%" y="69" width="0.0799%" height="15" fill="rgb(215,212,13)" fg:x="677" fg:w="1"/><text x="54.3667%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.1167%" y="53" width="0.0799%" height="15" fill="rgb(253,176,6)" fg:x="677" fg:w="1"/><text x="54.3667%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.1167%" y="37" width="0.0799%" height="15" fill="rgb(236,105,26)" fg:x="677" fg:w="1"/><text x="54.3667%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="53.9568%" y="293" width="0.3197%" height="15" fill="rgb(239,226,32)" fg:x="675" fg:w="4"/><text x="54.2068%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="54.1167%" y="277" width="0.1599%" height="15" fill="rgb(236,104,51)" fg:x="677" fg:w="2"/><text x="54.3667%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.1167%" y="261" width="0.1599%" height="15" fill="rgb(220,172,33)" fg:x="677" fg:w="2"/><text x="54.3667%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.1167%" y="245" width="0.1599%" height="15" fill="rgb(224,182,25)" fg:x="677" fg:w="2"/><text x="54.3667%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.1167%" y="229" width="0.1599%" height="15" fill="rgb(236,184,24)" fg:x="677" fg:w="2"/><text x="54.3667%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.1167%" y="213" width="0.1599%" height="15" fill="rgb(241,221,14)" fg:x="677" fg:w="2"/><text x="54.3667%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.1167%" y="197" width="0.1599%" height="15" fill="rgb(227,146,5)" fg:x="677" fg:w="2"/><text x="54.3667%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="54.1167%" y="181" width="0.1599%" height="15" fill="rgb(214,15,23)" fg:x="677" fg:w="2"/><text x="54.3667%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="54.1167%" y="165" width="0.1599%" height="15" fill="rgb(233,157,31)" fg:x="677" fg:w="2"/><text x="54.3667%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="54.1167%" y="149" width="0.1599%" height="15" fill="rgb(211,27,52)" fg:x="677" fg:w="2"/><text x="54.3667%" y="159.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="54.1966%" y="133" width="0.0799%" height="15" fill="rgb(212,223,15)" fg:x="678" fg:w="1"/><text x="54.4466%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="54.1966%" y="117" width="0.0799%" height="15" fill="rgb(254,211,0)" fg:x="678" fg:w="1"/><text x="54.4466%" y="127.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (15 samples, 1.20%)</title><rect x="53.1575%" y="341" width="1.1990%" height="15" fill="rgb(205,43,38)" fg:x="665" fg:w="15"/><text x="53.4075%" y="351.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (15 samples, 1.20%)</title><rect x="53.1575%" y="325" width="1.1990%" height="15" fill="rgb(242,206,46)" fg:x="665" fg:w="15"/><text x="53.4075%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::new (14 samples, 1.12%)</title><rect x="53.2374%" y="309" width="1.1191%" height="15" fill="rgb(220,221,12)" fg:x="666" fg:w="14"/><text x="53.4874%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="54.2766%" y="293" width="0.0799%" height="15" fill="rgb(217,156,35)" fg:x="679" fg:w="1"/><text x="54.5266%" y="303.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="54.2766%" y="277" width="0.0799%" height="15" fill="rgb(207,181,49)" fg:x="679" fg:w="1"/><text x="54.5266%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="54.2766%" y="261" width="0.0799%" height="15" fill="rgb(235,103,47)" fg:x="679" fg:w="1"/><text x="54.5266%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.2766%" y="245" width="0.0799%" height="15" fill="rgb(222,63,28)" fg:x="679" fg:w="1"/><text x="54.5266%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.2766%" y="229" width="0.0799%" height="15" fill="rgb(244,137,21)" fg:x="679" fg:w="1"/><text x="54.5266%" y="239.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="54.2766%" y="213" width="0.0799%" height="15" fill="rgb(228,35,27)" fg:x="679" fg:w="1"/><text x="54.5266%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="54.2766%" y="197" width="0.0799%" height="15" fill="rgb(226,191,41)" fg:x="679" fg:w="1"/><text x="54.5266%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="54.2766%" y="181" width="0.0799%" height="15" fill="rgb(210,154,3)" fg:x="679" fg:w="1"/><text x="54.5266%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="54.2766%" y="165" width="0.0799%" height="15" fill="rgb(216,60,49)" fg:x="679" fg:w="1"/><text x="54.5266%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="54.2766%" y="149" width="0.0799%" height="15" fill="rgb(226,17,20)" fg:x="679" fg:w="1"/><text x="54.5266%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="54.3565%" y="341" width="0.0799%" height="15" fill="rgb(206,115,35)" fg:x="680" fg:w="1"/><text x="54.6065%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="54.3565%" y="325" width="0.0799%" height="15" fill="rgb(227,88,1)" fg:x="680" fg:w="1"/><text x="54.6065%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="54.4365%" y="341" width="0.0799%" height="15" fill="rgb(230,222,24)" fg:x="681" fg:w="1"/><text x="54.6865%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.4365%" y="325" width="0.0799%" height="15" fill="rgb(214,124,32)" fg:x="681" fg:w="1"/><text x="54.6865%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.5963%" y="277" width="0.1599%" height="15" fill="rgb(240,41,36)" fg:x="683" fg:w="2"/><text x="54.8463%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.5963%" y="261" width="0.1599%" height="15" fill="rgb(221,17,52)" fg:x="683" fg:w="2"/><text x="54.8463%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="54.5963%" y="309" width="0.2398%" height="15" fill="rgb(252,70,16)" fg:x="683" fg:w="3"/><text x="54.8463%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.5963%" y="293" width="0.2398%" height="15" fill="rgb(250,177,4)" fg:x="683" fg:w="3"/><text x="54.8463%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="54.7562%" y="277" width="0.0799%" height="15" fill="rgb(240,188,47)" fg:x="685" fg:w="1"/><text x="55.0062%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="54.7562%" y="261" width="0.0799%" height="15" fill="rgb(215,92,12)" fg:x="685" fg:w="1"/><text x="55.0062%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.8361%" y="309" width="0.0799%" height="15" fill="rgb(242,110,29)" fg:x="686" fg:w="1"/><text x="55.0861%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2358%" y="229" width="0.0799%" height="15" fill="rgb(208,211,26)" fg:x="691" fg:w="1"/><text x="55.4858%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.4756%" y="197" width="0.0799%" height="15" fill="rgb(244,147,6)" fg:x="694" fg:w="1"/><text x="55.7256%" y="207.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (5 samples, 0.40%)</title><rect x="55.2358%" y="245" width="0.3997%" height="15" fill="rgb(211,130,42)" fg:x="691" fg:w="5"/><text x="55.4858%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="55.3157%" y="229" width="0.3197%" height="15" fill="rgb(220,63,1)" fg:x="692" fg:w="4"/><text x="55.5657%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.3157%" y="213" width="0.3197%" height="15" fill="rgb(241,212,30)" fg:x="692" fg:w="4"/><text x="55.5657%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="55.5556%" y="197" width="0.0799%" height="15" fill="rgb(233,153,17)" fg:x="695" fg:w="1"/><text x="55.8056%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (7 samples, 0.56%)</title><rect x="55.1559%" y="277" width="0.5596%" height="15" fill="rgb(236,3,10)" fg:x="690" fg:w="7"/><text x="55.4059%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (6 samples, 0.48%)</title><rect x="55.2358%" y="261" width="0.4796%" height="15" fill="rgb(232,41,21)" fg:x="691" fg:w="6"/><text x="55.4858%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.6355%" y="245" width="0.0799%" height="15" fill="rgb(206,63,51)" fg:x="696" fg:w="1"/><text x="55.8855%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (108 samples, 8.63%)</title><rect x="47.1623%" y="565" width="8.6331%" height="15" fill="rgb(250,214,3)" fg:x="590" fg:w="108"/><text x="47.4123%" y="575.50">&lt;engine::ses..</text></g><g><title>kernel::plugins::mw::apply_middleware (108 samples, 8.63%)</title><rect x="47.1623%" y="549" width="8.6331%" height="15" fill="rgb(254,89,27)" fg:x="590" fg:w="108"/><text x="47.4123%" y="559.50">kernel::plug..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (108 samples, 8.63%)</title><rect x="47.1623%" y="533" width="8.6331%" height="15" fill="rgb(249,41,14)" fg:x="590" fg:w="108"/><text x="47.4123%" y="543.50">kernel::plug..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (108 samples, 8.63%)</title><rect x="47.1623%" y="517" width="8.6331%" height="15" fill="rgb(221,196,51)" fg:x="590" fg:w="108"/><text x="47.4123%" y="527.50">&lt;engine::ses..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (87 samples, 6.95%)</title><rect x="48.8409%" y="501" width="6.9544%" height="15" fill="rgb(214,116,26)" fg:x="611" fg:w="87"/><text x="49.0909%" y="511.50">kernel::p..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (87 samples, 6.95%)</title><rect x="48.8409%" y="485" width="6.9544%" height="15" fill="rgb(236,67,7)" fg:x="611" fg:w="87"/><text x="49.0909%" y="495.50">&lt;plugins_..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (87 samples, 6.95%)</title><rect x="48.8409%" y="469" width="6.9544%" height="15" fill="rgb(253,179,32)" fg:x="611" fg:w="87"/><text x="49.0909%" y="479.50">kernel::p..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (86 samples, 6.87%)</title><rect x="48.9209%" y="453" width="6.8745%" height="15" fill="rgb(218,33,15)" fg:x="612" fg:w="86"/><text x="49.1709%" y="463.50">core::ops..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (86 samples, 6.87%)</title><rect x="48.9209%" y="437" width="6.8745%" height="15" fill="rgb(217,202,41)" fg:x="612" fg:w="86"/><text x="49.1709%" y="447.50">kernel::p..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (86 samples, 6.87%)</title><rect x="48.9209%" y="421" width="6.8745%" height="15" fill="rgb(234,133,5)" fg:x="612" fg:w="86"/><text x="49.1709%" y="431.50">core::ops..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (86 samples, 6.87%)</title><rect x="48.9209%" y="405" width="6.8745%" height="15" fill="rgb(240,47,40)" fg:x="612" fg:w="86"/><text x="49.1709%" y="415.50">&lt;alloc::b..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (85 samples, 6.79%)</title><rect x="49.0008%" y="389" width="6.7946%" height="15" fill="rgb(234,166,26)" fg:x="613" fg:w="85"/><text x="49.2508%" y="399.50">&lt;engine::..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (85 samples, 6.79%)</title><rect x="49.0008%" y="373" width="6.7946%" height="15" fill="rgb(244,125,51)" fg:x="613" fg:w="85"/><text x="49.2508%" y="383.50">&lt;plugins_..</text></g><g><title>plugins_core::looking::model::new_area_observation (77 samples, 6.16%)</title><rect x="49.6403%" y="357" width="6.1551%" height="15" fill="rgb(229,171,11)" fg:x="621" fg:w="77"/><text x="49.8903%" y="367.50">plugins_..</text></g><g><title>kernel::model::entry::Entry::scope (16 samples, 1.28%)</title><rect x="54.5164%" y="341" width="1.2790%" height="15" fill="rgb(224,38,45)" fg:x="682" fg:w="16"/><text x="54.7664%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.28%)</title><rect x="54.5164%" y="325" width="1.2790%" height="15" fill="rgb(237,27,7)" fg:x="682" fg:w="16"/><text x="54.7664%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="54.9161%" y="309" width="0.8793%" height="15" fill="rgb(216,52,7)" fg:x="687" fg:w="11"/><text x="55.1661%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="54.9161%" y="293" width="0.8793%" height="15" fill="rgb(243,11,11)" fg:x="687" fg:w="11"/><text x="55.1661%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.7154%" y="277" width="0.0799%" height="15" fill="rgb(253,167,20)" fg:x="697" fg:w="1"/><text x="55.9654%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.7154%" y="261" width="0.0799%" height="15" fill="rgb(215,207,5)" fg:x="697" fg:w="1"/><text x="55.9654%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.7154%" y="245" width="0.0799%" height="15" fill="rgb(252,127,31)" fg:x="697" fg:w="1"/><text x="55.9654%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="55.7954%" y="565" width="0.0799%" height="15" fill="rgb(209,106,27)" fg:x="698" fg:w="1"/><text x="56.0454%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="55.8753%" y="565" width="0.0799%" height="15" fill="rgb(214,220,18)" fg:x="699" fg:w="1"/><text x="56.1253%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8753%" y="549" width="0.0799%" height="15" fill="rgb(237,89,12)" fg:x="699" fg:w="1"/><text x="56.1253%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="55.9552%" y="549" width="0.0799%" height="15" fill="rgb(209,167,36)" fg:x="700" fg:w="1"/><text x="56.2052%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="56.0352%" y="533" width="0.1599%" height="15" fill="rgb(243,45,22)" fg:x="701" fg:w="2"/><text x="56.2852%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.1151%" y="517" width="0.0799%" height="15" fill="rgb(239,2,46)" fg:x="702" fg:w="1"/><text x="56.3651%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="56.1950%" y="517" width="0.1599%" height="15" fill="rgb(241,101,0)" fg:x="703" fg:w="2"/><text x="56.4450%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.2750%" y="501" width="0.0799%" height="15" fill="rgb(244,34,31)" fg:x="704" fg:w="1"/><text x="56.5250%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.2750%" y="485" width="0.0799%" height="15" fill="rgb(248,23,22)" fg:x="704" fg:w="1"/><text x="56.5250%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.2750%" y="469" width="0.0799%" height="15" fill="rgb(218,27,48)" fg:x="704" fg:w="1"/><text x="56.5250%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.2750%" y="453" width="0.0799%" height="15" fill="rgb(232,78,1)" fg:x="704" fg:w="1"/><text x="56.5250%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.2750%" y="437" width="0.0799%" height="15" fill="rgb(233,169,12)" fg:x="704" fg:w="1"/><text x="56.5250%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.2750%" y="421" width="0.0799%" height="15" fill="rgb(225,222,54)" fg:x="704" fg:w="1"/><text x="56.5250%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.2750%" y="405" width="0.0799%" height="15" fill="rgb(245,126,29)" fg:x="704" fg:w="1"/><text x="56.5250%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.2750%" y="389" width="0.0799%" height="15" fill="rgb(241,63,48)" fg:x="704" fg:w="1"/><text x="56.5250%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.2750%" y="373" width="0.0799%" height="15" fill="rgb(235,126,38)" fg:x="704" fg:w="1"/><text x="56.5250%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.2750%" y="357" width="0.0799%" height="15" fill="rgb(232,96,49)" fg:x="704" fg:w="1"/><text x="56.5250%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.2750%" y="341" width="0.0799%" height="15" fill="rgb(211,146,40)" fg:x="704" fg:w="1"/><text x="56.5250%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.2750%" y="325" width="0.0799%" height="15" fill="rgb(247,93,44)" fg:x="704" fg:w="1"/><text x="56.5250%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.3549%" y="485" width="0.1599%" height="15" fill="rgb(251,41,49)" fg:x="705" fg:w="2"/><text x="56.6049%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.3549%" y="469" width="0.1599%" height="15" fill="rgb(218,155,12)" fg:x="705" fg:w="2"/><text x="56.6049%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.3549%" y="453" width="0.1599%" height="15" fill="rgb(221,161,30)" fg:x="705" fg:w="2"/><text x="56.6049%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="56.3549%" y="501" width="0.2398%" height="15" fill="rgb(221,179,11)" fg:x="705" fg:w="3"/><text x="56.6049%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5148%" y="485" width="0.0799%" height="15" fill="rgb(224,170,48)" fg:x="707" fg:w="1"/><text x="56.7648%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5148%" y="469" width="0.0799%" height="15" fill="rgb(223,117,5)" fg:x="707" fg:w="1"/><text x="56.7648%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.5148%" y="453" width="0.0799%" height="15" fill="rgb(209,52,20)" fg:x="707" fg:w="1"/><text x="56.7648%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.5148%" y="437" width="0.0799%" height="15" fill="rgb(209,19,41)" fg:x="707" fg:w="1"/><text x="56.7648%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.5148%" y="421" width="0.0799%" height="15" fill="rgb(210,177,12)" fg:x="707" fg:w="1"/><text x="56.7648%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5148%" y="405" width="0.0799%" height="15" fill="rgb(211,159,37)" fg:x="707" fg:w="1"/><text x="56.7648%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5148%" y="389" width="0.0799%" height="15" fill="rgb(209,20,2)" fg:x="707" fg:w="1"/><text x="56.7648%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.5148%" y="373" width="0.0799%" height="15" fill="rgb(244,3,46)" fg:x="707" fg:w="1"/><text x="56.7648%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.5148%" y="357" width="0.0799%" height="15" fill="rgb(220,94,38)" fg:x="707" fg:w="1"/><text x="56.7648%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.5148%" y="341" width="0.0799%" height="15" fill="rgb(253,14,31)" fg:x="707" fg:w="1"/><text x="56.7648%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.5148%" y="325" width="0.0799%" height="15" fill="rgb(234,176,13)" fg:x="707" fg:w="1"/><text x="56.7648%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5148%" y="309" width="0.0799%" height="15" fill="rgb(218,62,25)" fg:x="707" fg:w="1"/><text x="56.7648%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.5947%" y="485" width="0.0799%" height="15" fill="rgb(216,124,40)" fg:x="708" fg:w="1"/><text x="56.8447%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="56.5947%" y="501" width="0.2398%" height="15" fill="rgb(228,170,12)" fg:x="708" fg:w="3"/><text x="56.8447%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="56.6747%" y="485" width="0.1599%" height="15" fill="rgb(231,226,5)" fg:x="709" fg:w="2"/><text x="56.9247%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.7546%" y="469" width="0.0799%" height="15" fill="rgb(237,122,22)" fg:x="710" fg:w="1"/><text x="57.0046%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.7546%" y="453" width="0.0799%" height="15" fill="rgb(209,185,25)" fg:x="710" fg:w="1"/><text x="57.0046%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.7546%" y="437" width="0.0799%" height="15" fill="rgb(228,200,32)" fg:x="710" fg:w="1"/><text x="57.0046%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7546%" y="421" width="0.0799%" height="15" fill="rgb(217,140,10)" fg:x="710" fg:w="1"/><text x="57.0046%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7546%" y="405" width="0.0799%" height="15" fill="rgb(253,17,24)" fg:x="710" fg:w="1"/><text x="57.0046%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.7546%" y="389" width="0.0799%" height="15" fill="rgb(212,61,6)" fg:x="710" fg:w="1"/><text x="57.0046%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.7546%" y="373" width="0.0799%" height="15" fill="rgb(205,14,25)" fg:x="710" fg:w="1"/><text x="57.0046%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.7546%" y="357" width="0.0799%" height="15" fill="rgb(232,69,41)" fg:x="710" fg:w="1"/><text x="57.0046%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7546%" y="341" width="0.0799%" height="15" fill="rgb(241,106,47)" fg:x="710" fg:w="1"/><text x="57.0046%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7546%" y="325" width="0.0799%" height="15" fill="rgb(210,213,53)" fg:x="710" fg:w="1"/><text x="57.0046%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.7546%" y="309" width="0.0799%" height="15" fill="rgb(253,175,27)" fg:x="710" fg:w="1"/><text x="57.0046%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.7546%" y="293" width="0.0799%" height="15" fill="rgb(211,171,24)" fg:x="710" fg:w="1"/><text x="57.0046%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.7546%" y="277" width="0.0799%" height="15" fill="rgb(229,80,7)" fg:x="710" fg:w="1"/><text x="57.0046%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.7546%" y="261" width="0.0799%" height="15" fill="rgb(212,46,39)" fg:x="710" fg:w="1"/><text x="57.0046%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.7546%" y="245" width="0.0799%" height="15" fill="rgb(240,80,45)" fg:x="710" fg:w="1"/><text x="57.0046%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.9944%" y="453" width="0.0799%" height="15" fill="rgb(253,177,40)" fg:x="713" fg:w="1"/><text x="57.2444%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.0743%" y="421" width="0.0799%" height="15" fill="rgb(249,200,15)" fg:x="714" fg:w="1"/><text x="57.3243%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.1543%" y="421" width="0.0799%" height="15" fill="rgb(217,78,26)" fg:x="715" fg:w="1"/><text x="57.4043%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.1543%" y="405" width="0.0799%" height="15" fill="rgb(254,151,32)" fg:x="715" fg:w="1"/><text x="57.4043%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="57.2342%" y="341" width="0.0799%" height="15" fill="rgb(226,165,27)" fg:x="716" fg:w="1"/><text x="57.4842%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.2342%" y="325" width="0.0799%" height="15" fill="rgb(250,206,4)" fg:x="716" fg:w="1"/><text x="57.4842%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.2342%" y="309" width="0.0799%" height="15" fill="rgb(231,229,27)" fg:x="716" fg:w="1"/><text x="57.4842%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2342%" y="293" width="0.0799%" height="15" fill="rgb(239,217,8)" fg:x="716" fg:w="1"/><text x="57.4842%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2342%" y="277" width="0.0799%" height="15" fill="rgb(225,204,27)" fg:x="716" fg:w="1"/><text x="57.4842%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="57.2342%" y="405" width="0.1599%" height="15" fill="rgb(230,56,32)" fg:x="716" fg:w="2"/><text x="57.4842%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.2342%" y="389" width="0.1599%" height="15" fill="rgb(222,56,27)" fg:x="716" fg:w="2"/><text x="57.4842%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="57.2342%" y="373" width="0.1599%" height="15" fill="rgb(253,108,27)" fg:x="716" fg:w="2"/><text x="57.4842%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.2342%" y="357" width="0.1599%" height="15" fill="rgb(212,87,36)" fg:x="716" fg:w="2"/><text x="57.4842%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.3141%" y="341" width="0.0799%" height="15" fill="rgb(247,82,36)" fg:x="717" fg:w="1"/><text x="57.5641%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.3141%" y="325" width="0.0799%" height="15" fill="rgb(222,143,9)" fg:x="717" fg:w="1"/><text x="57.5641%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.3141%" y="309" width="0.0799%" height="15" fill="rgb(238,162,48)" fg:x="717" fg:w="1"/><text x="57.5641%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="57.3941%" y="405" width="0.1599%" height="15" fill="rgb(221,59,43)" fg:x="718" fg:w="2"/><text x="57.6441%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="57.3941%" y="389" width="0.1599%" height="15" fill="rgb(205,166,41)" fg:x="718" fg:w="2"/><text x="57.6441%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="57.3941%" y="373" width="0.1599%" height="15" fill="rgb(241,186,40)" fg:x="718" fg:w="2"/><text x="57.6441%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="57.3941%" y="357" width="0.1599%" height="15" fill="rgb(216,119,35)" fg:x="718" fg:w="2"/><text x="57.6441%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="57.3941%" y="341" width="0.1599%" height="15" fill="rgb(208,68,38)" fg:x="718" fg:w="2"/><text x="57.6441%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (8 samples, 0.64%)</title><rect x="57.0743%" y="453" width="0.6395%" height="15" fill="rgb(217,113,1)" fg:x="714" fg:w="8"/><text x="57.3243%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="57.0743%" y="437" width="0.6395%" height="15" fill="rgb(242,153,3)" fg:x="714" fg:w="8"/><text x="57.3243%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="57.2342%" y="421" width="0.4796%" height="15" fill="rgb(229,76,35)" fg:x="716" fg:w="6"/><text x="57.4842%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.5540%" y="405" width="0.1599%" height="15" fill="rgb(229,125,34)" fg:x="720" fg:w="2"/><text x="57.8040%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.6339%" y="389" width="0.0799%" height="15" fill="rgb(238,179,36)" fg:x="721" fg:w="1"/><text x="57.8839%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="57.6339%" y="373" width="0.0799%" height="15" fill="rgb(244,183,19)" fg:x="721" fg:w="1"/><text x="57.8839%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.6339%" y="357" width="0.0799%" height="15" fill="rgb(216,85,49)" fg:x="721" fg:w="1"/><text x="57.8839%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.6339%" y="341" width="0.0799%" height="15" fill="rgb(208,161,47)" fg:x="721" fg:w="1"/><text x="57.8839%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="57.6339%" y="325" width="0.0799%" height="15" fill="rgb(233,210,18)" fg:x="721" fg:w="1"/><text x="57.8839%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.6339%" y="309" width="0.0799%" height="15" fill="rgb(205,104,42)" fg:x="721" fg:w="1"/><text x="57.8839%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.6339%" y="293" width="0.0799%" height="15" fill="rgb(248,90,43)" fg:x="721" fg:w="1"/><text x="57.8839%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::from_value (12 samples, 0.96%)</title><rect x="56.8345%" y="501" width="0.9592%" height="15" fill="rgb(206,198,11)" fg:x="711" fg:w="12"/><text x="57.0845%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.96%)</title><rect x="56.8345%" y="485" width="0.9592%" height="15" fill="rgb(239,165,27)" fg:x="711" fg:w="12"/><text x="57.0845%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="56.8345%" y="469" width="0.9592%" height="15" fill="rgb(246,44,32)" fg:x="711" fg:w="12"/><text x="57.0845%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.7138%" y="453" width="0.0799%" height="15" fill="rgb(252,65,42)" fg:x="722" fg:w="1"/><text x="57.9638%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.7138%" y="437" width="0.0799%" height="15" fill="rgb(246,197,18)" fg:x="722" fg:w="1"/><text x="57.9638%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.1135%" y="389" width="0.0799%" height="15" fill="rgb(216,192,4)" fg:x="727" fg:w="1"/><text x="58.3635%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.3533%" y="325" width="0.0799%" height="15" fill="rgb(208,117,10)" fg:x="730" fg:w="1"/><text x="58.6033%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="58.3533%" y="341" width="0.1599%" height="15" fill="rgb(240,61,47)" fg:x="730" fg:w="2"/><text x="58.6033%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.4333%" y="325" width="0.0799%" height="15" fill="rgb(228,178,21)" fg:x="731" fg:w="1"/><text x="58.6833%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.4333%" y="309" width="0.0799%" height="15" fill="rgb(219,96,54)" fg:x="731" fg:w="1"/><text x="58.6833%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.4333%" y="293" width="0.0799%" height="15" fill="rgb(250,177,24)" fg:x="731" fg:w="1"/><text x="58.6833%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="58.2734%" y="373" width="0.3197%" height="15" fill="rgb(242,154,46)" fg:x="729" fg:w="4"/><text x="58.5234%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="58.3533%" y="357" width="0.2398%" height="15" fill="rgb(226,176,29)" fg:x="730" fg:w="3"/><text x="58.6033%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.5132%" y="341" width="0.0799%" height="15" fill="rgb(226,29,2)" fg:x="732" fg:w="1"/><text x="58.7632%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="57.8737%" y="437" width="0.7994%" height="15" fill="rgb(237,104,14)" fg:x="724" fg:w="10"/><text x="58.1237%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="57.9536%" y="421" width="0.7194%" height="15" fill="rgb(245,207,31)" fg:x="725" fg:w="9"/><text x="58.2036%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="58.0336%" y="405" width="0.6395%" height="15" fill="rgb(229,211,45)" fg:x="726" fg:w="8"/><text x="58.2836%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="58.1934%" y="389" width="0.4796%" height="15" fill="rgb(229,113,15)" fg:x="728" fg:w="6"/><text x="58.4434%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.5931%" y="373" width="0.0799%" height="15" fill="rgb(237,147,15)" fg:x="733" fg:w="1"/><text x="58.8431%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (32 samples, 2.56%)</title><rect x="56.1950%" y="533" width="2.5580%" height="15" fill="rgb(244,120,12)" fg:x="703" fg:w="32"/><text x="56.4450%" y="543.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (30 samples, 2.40%)</title><rect x="56.3549%" y="517" width="2.3981%" height="15" fill="rgb(205,120,12)" fg:x="705" fg:w="30"/><text x="56.6049%" y="527.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.96%)</title><rect x="57.7938%" y="501" width="0.9592%" height="15" fill="rgb(231,26,45)" fg:x="723" fg:w="12"/><text x="58.0438%" y="511.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="57.7938%" y="485" width="0.9592%" height="15" fill="rgb(246,98,1)" fg:x="723" fg:w="12"/><text x="58.0438%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="57.7938%" y="469" width="0.9592%" height="15" fill="rgb(207,68,45)" fg:x="723" fg:w="12"/><text x="58.0438%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="57.7938%" y="453" width="0.9592%" height="15" fill="rgb(231,27,38)" fg:x="723" fg:w="12"/><text x="58.0438%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.6731%" y="437" width="0.0799%" height="15" fill="rgb(214,223,3)" fg:x="734" fg:w="1"/><text x="58.9231%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.7530%" y="437" width="0.0799%" height="15" fill="rgb(228,195,46)" fg:x="735" fg:w="1"/><text x="59.0030%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.7530%" y="421" width="0.0799%" height="15" fill="rgb(231,100,42)" fg:x="735" fg:w="1"/><text x="59.0030%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.7530%" y="405" width="0.0799%" height="15" fill="rgb(236,53,4)" fg:x="735" fg:w="1"/><text x="59.0030%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.7530%" y="389" width="0.0799%" height="15" fill="rgb(230,152,12)" fg:x="735" fg:w="1"/><text x="59.0030%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.7530%" y="373" width="0.0799%" height="15" fill="rgb(226,101,19)" fg:x="735" fg:w="1"/><text x="59.0030%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.7530%" y="357" width="0.0799%" height="15" fill="rgb(250,149,32)" fg:x="735" fg:w="1"/><text x="59.0030%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="58.7530%" y="341" width="0.0799%" height="15" fill="rgb(232,178,12)" fg:x="735" fg:w="1"/><text x="59.0030%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="58.7530%" y="325" width="0.0799%" height="15" fill="rgb(246,151,17)" fg:x="735" fg:w="1"/><text x="59.0030%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.7530%" y="469" width="0.1599%" height="15" fill="rgb(252,17,51)" fg:x="735" fg:w="2"/><text x="59.0030%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.7530%" y="453" width="0.1599%" height="15" fill="rgb(250,207,23)" fg:x="735" fg:w="2"/><text x="59.0030%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.8329%" y="437" width="0.0799%" height="15" fill="rgb(205,27,5)" fg:x="736" fg:w="1"/><text x="59.0829%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.8329%" y="421" width="0.0799%" height="15" fill="rgb(224,32,19)" fg:x="736" fg:w="1"/><text x="59.0829%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.8329%" y="405" width="0.0799%" height="15" fill="rgb(247,214,40)" fg:x="736" fg:w="1"/><text x="59.0829%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.8329%" y="389" width="0.0799%" height="15" fill="rgb(239,199,17)" fg:x="736" fg:w="1"/><text x="59.0829%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.8329%" y="373" width="0.0799%" height="15" fill="rgb(251,159,9)" fg:x="736" fg:w="1"/><text x="59.0829%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.8329%" y="357" width="0.0799%" height="15" fill="rgb(225,78,32)" fg:x="736" fg:w="1"/><text x="59.0829%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.8329%" y="341" width="0.0799%" height="15" fill="rgb(206,97,47)" fg:x="736" fg:w="1"/><text x="59.0829%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.8329%" y="325" width="0.0799%" height="15" fill="rgb(227,107,4)" fg:x="736" fg:w="1"/><text x="59.0829%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.8329%" y="309" width="0.0799%" height="15" fill="rgb(241,146,50)" fg:x="736" fg:w="1"/><text x="59.0829%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.8329%" y="293" width="0.0799%" height="15" fill="rgb(232,92,30)" fg:x="736" fg:w="1"/><text x="59.0829%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.8329%" y="277" width="0.0799%" height="15" fill="rgb(222,0,40)" fg:x="736" fg:w="1"/><text x="59.0829%" y="287.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="58.8329%" y="261" width="0.0799%" height="15" fill="rgb(219,54,33)" fg:x="736" fg:w="1"/><text x="59.0829%" y="271.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="58.8329%" y="245" width="0.0799%" height="15" fill="rgb(226,209,28)" fg:x="736" fg:w="1"/><text x="59.0829%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.7530%" y="501" width="0.2398%" height="15" fill="rgb(254,205,35)" fg:x="735" fg:w="3"/><text x="59.0030%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.7530%" y="485" width="0.2398%" height="15" fill="rgb(230,159,3)" fg:x="735" fg:w="3"/><text x="59.0030%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.9129%" y="469" width="0.0799%" height="15" fill="rgb(232,190,24)" fg:x="737" fg:w="1"/><text x="59.1629%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.9129%" y="453" width="0.0799%" height="15" fill="rgb(217,227,44)" fg:x="737" fg:w="1"/><text x="59.1629%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.9129%" y="437" width="0.0799%" height="15" fill="rgb(236,211,1)" fg:x="737" fg:w="1"/><text x="59.1629%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.9129%" y="421" width="0.0799%" height="15" fill="rgb(250,127,46)" fg:x="737" fg:w="1"/><text x="59.1629%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.9129%" y="405" width="0.0799%" height="15" fill="rgb(229,213,6)" fg:x="737" fg:w="1"/><text x="59.1629%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.9129%" y="389" width="0.0799%" height="15" fill="rgb(237,15,36)" fg:x="737" fg:w="1"/><text x="59.1629%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.9129%" y="373" width="0.0799%" height="15" fill="rgb(213,131,41)" fg:x="737" fg:w="1"/><text x="59.1629%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.9129%" y="357" width="0.0799%" height="15" fill="rgb(225,82,44)" fg:x="737" fg:w="1"/><text x="59.1629%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.9129%" y="341" width="0.0799%" height="15" fill="rgb(249,42,11)" fg:x="737" fg:w="1"/><text x="59.1629%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.9129%" y="325" width="0.0799%" height="15" fill="rgb(253,11,29)" fg:x="737" fg:w="1"/><text x="59.1629%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.9129%" y="309" width="0.0799%" height="15" fill="rgb(206,8,54)" fg:x="737" fg:w="1"/><text x="59.1629%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.9129%" y="293" width="0.0799%" height="15" fill="rgb(222,186,2)" fg:x="737" fg:w="1"/><text x="59.1629%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="59.0727%" y="437" width="0.3197%" height="15" fill="rgb(221,206,53)" fg:x="739" fg:w="4"/><text x="59.3227%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.1527%" y="421" width="0.2398%" height="15" fill="rgb(230,150,21)" fg:x="740" fg:w="3"/><text x="59.4027%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.2326%" y="405" width="0.1599%" height="15" fill="rgb(253,202,10)" fg:x="741" fg:w="2"/><text x="59.4826%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.2326%" y="389" width="0.1599%" height="15" fill="rgb(238,109,40)" fg:x="741" fg:w="2"/><text x="59.4826%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.2326%" y="373" width="0.1599%" height="15" fill="rgb(247,120,22)" fg:x="741" fg:w="2"/><text x="59.4826%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="59.2326%" y="357" width="0.1599%" height="15" fill="rgb(207,43,30)" fg:x="741" fg:w="2"/><text x="59.4826%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="59.2326%" y="341" width="0.1599%" height="15" fill="rgb(213,211,24)" fg:x="741" fg:w="2"/><text x="59.4826%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="59.2326%" y="325" width="0.1599%" height="15" fill="rgb(239,73,39)" fg:x="741" fg:w="2"/><text x="59.4826%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.2326%" y="309" width="0.1599%" height="15" fill="rgb(245,182,19)" fg:x="741" fg:w="2"/><text x="59.4826%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.2326%" y="293" width="0.1599%" height="15" fill="rgb(247,143,26)" fg:x="741" fg:w="2"/><text x="59.4826%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="59.2326%" y="277" width="0.1599%" height="15" fill="rgb(228,191,23)" fg:x="741" fg:w="2"/><text x="59.4826%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="59.2326%" y="261" width="0.1599%" height="15" fill="rgb(253,165,31)" fg:x="741" fg:w="2"/><text x="59.4826%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="59.2326%" y="245" width="0.1599%" height="15" fill="rgb(234,138,20)" fg:x="741" fg:w="2"/><text x="59.4826%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="59.2326%" y="229" width="0.1599%" height="15" fill="rgb(218,191,29)" fg:x="741" fg:w="2"/><text x="59.4826%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.2326%" y="213" width="0.1599%" height="15" fill="rgb(221,157,19)" fg:x="741" fg:w="2"/><text x="59.4826%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="59.0727%" y="453" width="0.3997%" height="15" fill="rgb(237,26,42)" fg:x="739" fg:w="5"/><text x="59.3227%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.3925%" y="437" width="0.0799%" height="15" fill="rgb(220,163,24)" fg:x="743" fg:w="1"/><text x="59.6425%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.3925%" y="421" width="0.0799%" height="15" fill="rgb(242,115,20)" fg:x="743" fg:w="1"/><text x="59.6425%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.3925%" y="405" width="0.0799%" height="15" fill="rgb(210,206,9)" fg:x="743" fg:w="1"/><text x="59.6425%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.3925%" y="389" width="0.0799%" height="15" fill="rgb(208,71,17)" fg:x="743" fg:w="1"/><text x="59.6425%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.3925%" y="373" width="0.0799%" height="15" fill="rgb(233,7,5)" fg:x="743" fg:w="1"/><text x="59.6425%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.3925%" y="357" width="0.0799%" height="15" fill="rgb(207,92,33)" fg:x="743" fg:w="1"/><text x="59.6425%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.3925%" y="341" width="0.0799%" height="15" fill="rgb(218,87,9)" fg:x="743" fg:w="1"/><text x="59.6425%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.3925%" y="325" width="0.0799%" height="15" fill="rgb(219,47,37)" fg:x="743" fg:w="1"/><text x="59.6425%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.3925%" y="309" width="0.0799%" height="15" fill="rgb(221,152,34)" fg:x="743" fg:w="1"/><text x="59.6425%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.3925%" y="293" width="0.0799%" height="15" fill="rgb(235,176,21)" fg:x="743" fg:w="1"/><text x="59.6425%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.3925%" y="277" width="0.0799%" height="15" fill="rgb(232,212,21)" fg:x="743" fg:w="1"/><text x="59.6425%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3925%" y="261" width="0.0799%" height="15" fill="rgb(245,82,39)" fg:x="743" fg:w="1"/><text x="59.6425%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.4724%" y="405" width="0.0799%" height="15" fill="rgb(241,52,51)" fg:x="744" fg:w="1"/><text x="59.7224%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4724%" y="389" width="0.0799%" height="15" fill="rgb(219,91,24)" fg:x="744" fg:w="1"/><text x="59.7224%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.4724%" y="373" width="0.0799%" height="15" fill="rgb(241,142,12)" fg:x="744" fg:w="1"/><text x="59.7224%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4724%" y="357" width="0.0799%" height="15" fill="rgb(230,27,9)" fg:x="744" fg:w="1"/><text x="59.7224%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4724%" y="341" width="0.0799%" height="15" fill="rgb(249,181,32)" fg:x="744" fg:w="1"/><text x="59.7224%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.4724%" y="325" width="0.0799%" height="15" fill="rgb(230,107,3)" fg:x="744" fg:w="1"/><text x="59.7224%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.4724%" y="309" width="0.0799%" height="15" fill="rgb(246,204,14)" fg:x="744" fg:w="1"/><text x="59.7224%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.4724%" y="293" width="0.0799%" height="15" fill="rgb(213,192,47)" fg:x="744" fg:w="1"/><text x="59.7224%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.4724%" y="277" width="0.0799%" height="15" fill="rgb(240,44,36)" fg:x="744" fg:w="1"/><text x="59.7224%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.4724%" y="261" width="0.0799%" height="15" fill="rgb(244,209,38)" fg:x="744" fg:w="1"/><text x="59.7224%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="59.5524%" y="405" width="0.3197%" height="15" fill="rgb(219,34,37)" fg:x="745" fg:w="4"/><text x="59.8024%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="59.6323%" y="389" width="0.2398%" height="15" fill="rgb(210,28,6)" fg:x="746" fg:w="3"/><text x="59.8823%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="59.7122%" y="373" width="0.1599%" height="15" fill="rgb(244,110,52)" fg:x="747" fg:w="2"/><text x="59.9622%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.7922%" y="357" width="0.0799%" height="15" fill="rgb(254,124,47)" fg:x="748" fg:w="1"/><text x="60.0422%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.7922%" y="341" width="0.0799%" height="15" fill="rgb(254,110,13)" fg:x="748" fg:w="1"/><text x="60.0422%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="59.7922%" y="325" width="0.0799%" height="15" fill="rgb(252,57,21)" fg:x="748" fg:w="1"/><text x="60.0422%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="59.7922%" y="309" width="0.0799%" height="15" fill="rgb(242,60,45)" fg:x="748" fg:w="1"/><text x="60.0422%" y="319.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="59.7922%" y="293" width="0.0799%" height="15" fill="rgb(234,49,30)" fg:x="748" fg:w="1"/><text x="60.0422%" y="303.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="59.7922%" y="277" width="0.0799%" height="15" fill="rgb(218,98,6)" fg:x="748" fg:w="1"/><text x="60.0422%" y="287.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="59.7922%" y="261" width="0.0799%" height="15" fill="rgb(220,174,29)" fg:x="748" fg:w="1"/><text x="60.0422%" y="271.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="59.7922%" y="245" width="0.0799%" height="15" fill="rgb(236,163,23)" fg:x="748" fg:w="1"/><text x="60.0422%" y="255.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="59.7922%" y="229" width="0.0799%" height="15" fill="rgb(242,114,45)" fg:x="748" fg:w="1"/><text x="60.0422%" y="239.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="59.7922%" y="213" width="0.0799%" height="15" fill="rgb(232,10,53)" fg:x="748" fg:w="1"/><text x="60.0422%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.7922%" y="197" width="0.0799%" height="15" fill="rgb(245,108,29)" fg:x="748" fg:w="1"/><text x="60.0422%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.7922%" y="181" width="0.0799%" height="15" fill="rgb(240,89,53)" fg:x="748" fg:w="1"/><text x="60.0422%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="59.7922%" y="165" width="0.0799%" height="15" fill="rgb(226,60,45)" fg:x="748" fg:w="1"/><text x="60.0422%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="59.7922%" y="149" width="0.0799%" height="15" fill="rgb(230,41,44)" fg:x="748" fg:w="1"/><text x="60.0422%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="59.7922%" y="133" width="0.0799%" height="15" fill="rgb(230,26,20)" fg:x="748" fg:w="1"/><text x="60.0422%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="59.7922%" y="117" width="0.0799%" height="15" fill="rgb(237,170,32)" fg:x="748" fg:w="1"/><text x="60.0422%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.7922%" y="101" width="0.0799%" height="15" fill="rgb(212,35,42)" fg:x="748" fg:w="1"/><text x="60.0422%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.8721%" y="325" width="0.0799%" height="15" fill="rgb(227,31,34)" fg:x="749" fg:w="1"/><text x="60.1221%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="59.8721%" y="357" width="0.1599%" height="15" fill="rgb(216,19,18)" fg:x="749" fg:w="2"/><text x="60.1221%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="59.8721%" y="341" width="0.1599%" height="15" fill="rgb(211,133,42)" fg:x="749" fg:w="2"/><text x="60.1221%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.9520%" y="325" width="0.0799%" height="15" fill="rgb(244,66,13)" fg:x="750" fg:w="1"/><text x="60.2020%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.9520%" y="309" width="0.0799%" height="15" fill="rgb(218,185,50)" fg:x="750" fg:w="1"/><text x="60.2020%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.0320%" y="341" width="0.0799%" height="15" fill="rgb(219,149,13)" fg:x="751" fg:w="1"/><text x="60.2820%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="59.4724%" y="453" width="0.7994%" height="15" fill="rgb(221,125,0)" fg:x="744" fg:w="10"/><text x="59.7224%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.80%)</title><rect x="59.4724%" y="437" width="0.7994%" height="15" fill="rgb(247,126,27)" fg:x="744" fg:w="10"/><text x="59.7224%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.80%)</title><rect x="59.4724%" y="421" width="0.7994%" height="15" fill="rgb(250,138,30)" fg:x="744" fg:w="10"/><text x="59.7224%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="59.8721%" y="405" width="0.3997%" height="15" fill="rgb(230,151,9)" fg:x="749" fg:w="5"/><text x="60.1221%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="59.8721%" y="389" width="0.3997%" height="15" fill="rgb(233,80,38)" fg:x="749" fg:w="5"/><text x="60.1221%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="59.8721%" y="373" width="0.3997%" height="15" fill="rgb(232,68,43)" fg:x="749" fg:w="5"/><text x="60.1221%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="60.0320%" y="357" width="0.2398%" height="15" fill="rgb(254,5,50)" fg:x="751" fg:w="3"/><text x="60.2820%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="60.1119%" y="341" width="0.1599%" height="15" fill="rgb(225,45,5)" fg:x="752" fg:w="2"/><text x="60.3619%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.1918%" y="325" width="0.0799%" height="15" fill="rgb(239,22,3)" fg:x="753" fg:w="1"/><text x="60.4418%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.3517%" y="389" width="0.0799%" height="15" fill="rgb(243,129,0)" fg:x="755" fg:w="1"/><text x="60.6017%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="60.4317%" y="373" width="0.0799%" height="15" fill="rgb(223,164,0)" fg:x="756" fg:w="1"/><text x="60.6817%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="60.4317%" y="357" width="0.0799%" height="15" fill="rgb(221,46,29)" fg:x="756" fg:w="1"/><text x="60.6817%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.4317%" y="341" width="0.0799%" height="15" fill="rgb(205,97,47)" fg:x="756" fg:w="1"/><text x="60.6817%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 1.60%)</title><rect x="58.9928%" y="501" width="1.5987%" height="15" fill="rgb(249,14,8)" fg:x="738" fg:w="20"/><text x="59.2428%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.60%)</title><rect x="58.9928%" y="485" width="1.5987%" height="15" fill="rgb(216,77,3)" fg:x="738" fg:w="20"/><text x="59.2428%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (20 samples, 1.60%)</title><rect x="58.9928%" y="469" width="1.5987%" height="15" fill="rgb(206,168,54)" fg:x="738" fg:w="20"/><text x="59.2428%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="60.2718%" y="453" width="0.3197%" height="15" fill="rgb(236,3,41)" fg:x="754" fg:w="4"/><text x="60.5218%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.2718%" y="437" width="0.3197%" height="15" fill="rgb(231,132,24)" fg:x="754" fg:w="4"/><text x="60.5218%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="60.3517%" y="421" width="0.2398%" height="15" fill="rgb(227,221,40)" fg:x="755" fg:w="3"/><text x="60.6017%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="60.3517%" y="405" width="0.2398%" height="15" fill="rgb(233,151,11)" fg:x="755" fg:w="3"/><text x="60.6017%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="60.4317%" y="389" width="0.1599%" height="15" fill="rgb(247,81,35)" fg:x="756" fg:w="2"/><text x="60.6817%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.5116%" y="373" width="0.0799%" height="15" fill="rgb(243,128,48)" fg:x="757" fg:w="1"/><text x="60.7616%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.5116%" y="357" width="0.0799%" height="15" fill="rgb(253,16,10)" fg:x="757" fg:w="1"/><text x="60.7616%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.5116%" y="341" width="0.0799%" height="15" fill="rgb(228,67,27)" fg:x="757" fg:w="1"/><text x="60.7616%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.5915%" y="501" width="0.0799%" height="15" fill="rgb(231,105,25)" fg:x="758" fg:w="1"/><text x="60.8415%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.6715%" y="469" width="0.0799%" height="15" fill="rgb(213,166,47)" fg:x="759" fg:w="1"/><text x="60.9215%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.6715%" y="453" width="0.0799%" height="15" fill="rgb(209,27,10)" fg:x="759" fg:w="1"/><text x="60.9215%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.6715%" y="437" width="0.0799%" height="15" fill="rgb(241,44,30)" fg:x="759" fg:w="1"/><text x="60.9215%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.6715%" y="421" width="0.0799%" height="15" fill="rgb(223,216,15)" fg:x="759" fg:w="1"/><text x="60.9215%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.6715%" y="405" width="0.0799%" height="15" fill="rgb(227,14,7)" fg:x="759" fg:w="1"/><text x="60.9215%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.6715%" y="389" width="0.0799%" height="15" fill="rgb(237,14,5)" fg:x="759" fg:w="1"/><text x="60.9215%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.6715%" y="373" width="0.0799%" height="15" fill="rgb(232,14,36)" fg:x="759" fg:w="1"/><text x="60.9215%" y="383.50"></text></g><g><title>engine::session::internal::Added::find_refs (27 samples, 2.16%)</title><rect x="58.7530%" y="533" width="2.1583%" height="15" fill="rgb(234,0,38)" fg:x="735" fg:w="27"/><text x="59.0030%" y="543.50">e..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (27 samples, 2.16%)</title><rect x="58.7530%" y="517" width="2.1583%" height="15" fill="rgb(207,170,14)" fg:x="735" fg:w="27"/><text x="59.0030%" y="527.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="60.6715%" y="501" width="0.2398%" height="15" fill="rgb(252,45,13)" fg:x="759" fg:w="3"/><text x="60.9215%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="60.6715%" y="485" width="0.2398%" height="15" fill="rgb(213,142,7)" fg:x="759" fg:w="3"/><text x="60.9215%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="60.7514%" y="469" width="0.1599%" height="15" fill="rgb(216,157,23)" fg:x="760" fg:w="2"/><text x="61.0014%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="60.7514%" y="453" width="0.1599%" height="15" fill="rgb(212,145,33)" fg:x="760" fg:w="2"/><text x="61.0014%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.8313%" y="437" width="0.0799%" height="15" fill="rgb(233,26,13)" fg:x="761" fg:w="1"/><text x="61.0813%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.0711%" y="453" width="0.1599%" height="15" fill="rgb(219,196,19)" fg:x="764" fg:w="2"/><text x="61.3211%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1511%" y="437" width="0.0799%" height="15" fill="rgb(246,56,21)" fg:x="765" fg:w="1"/><text x="61.4011%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.2310%" y="453" width="0.0799%" height="15" fill="rgb(222,28,53)" fg:x="766" fg:w="1"/><text x="61.4810%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.2310%" y="437" width="0.0799%" height="15" fill="rgb(224,5,27)" fg:x="766" fg:w="1"/><text x="61.4810%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.2310%" y="421" width="0.0799%" height="15" fill="rgb(220,153,33)" fg:x="766" fg:w="1"/><text x="61.4810%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.2310%" y="405" width="0.0799%" height="15" fill="rgb(226,58,19)" fg:x="766" fg:w="1"/><text x="61.4810%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.2310%" y="389" width="0.0799%" height="15" fill="rgb(239,112,23)" fg:x="766" fg:w="1"/><text x="61.4810%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.2310%" y="373" width="0.0799%" height="15" fill="rgb(251,213,20)" fg:x="766" fg:w="1"/><text x="61.4810%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.2310%" y="357" width="0.0799%" height="15" fill="rgb(215,181,21)" fg:x="766" fg:w="1"/><text x="61.4810%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.2310%" y="341" width="0.0799%" height="15" fill="rgb(240,8,35)" fg:x="766" fg:w="1"/><text x="61.4810%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.2310%" y="325" width="0.0799%" height="15" fill="rgb(232,203,3)" fg:x="766" fg:w="1"/><text x="61.4810%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.2310%" y="309" width="0.0799%" height="15" fill="rgb(214,202,43)" fg:x="766" fg:w="1"/><text x="61.4810%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.2310%" y="293" width="0.0799%" height="15" fill="rgb(254,35,11)" fg:x="766" fg:w="1"/><text x="61.4810%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.2310%" y="277" width="0.0799%" height="15" fill="rgb(239,173,13)" fg:x="766" fg:w="1"/><text x="61.4810%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.3110%" y="453" width="0.1599%" height="15" fill="rgb(220,141,0)" fg:x="767" fg:w="2"/><text x="61.5610%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="61.0711%" y="469" width="0.4796%" height="15" fill="rgb(210,98,12)" fg:x="764" fg:w="6"/><text x="61.3211%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="61.4708%" y="453" width="0.0799%" height="15" fill="rgb(254,153,22)" fg:x="769" fg:w="1"/><text x="61.7208%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="61.4708%" y="437" width="0.0799%" height="15" fill="rgb(247,223,17)" fg:x="769" fg:w="1"/><text x="61.7208%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5508%" y="469" width="0.0799%" height="15" fill="rgb(246,56,7)" fg:x="770" fg:w="1"/><text x="61.8008%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5508%" y="453" width="0.0799%" height="15" fill="rgb(240,226,12)" fg:x="770" fg:w="1"/><text x="61.8008%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.5508%" y="437" width="0.0799%" height="15" fill="rgb(205,87,46)" fg:x="770" fg:w="1"/><text x="61.8008%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.5508%" y="421" width="0.0799%" height="15" fill="rgb(245,214,51)" fg:x="770" fg:w="1"/><text x="61.8008%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.5508%" y="405" width="0.0799%" height="15" fill="rgb(223,172,33)" fg:x="770" fg:w="1"/><text x="61.8008%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.5508%" y="389" width="0.0799%" height="15" fill="rgb(227,203,34)" fg:x="770" fg:w="1"/><text x="61.8008%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.5508%" y="373" width="0.0799%" height="15" fill="rgb(248,143,44)" fg:x="770" fg:w="1"/><text x="61.8008%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.72%)</title><rect x="60.9912%" y="485" width="0.7194%" height="15" fill="rgb(226,162,5)" fg:x="763" fg:w="9"/><text x="61.2412%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6307%" y="469" width="0.0799%" height="15" fill="rgb(211,143,1)" fg:x="771" fg:w="1"/><text x="61.8807%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.6307%" y="453" width="0.0799%" height="15" fill="rgb(224,96,15)" fg:x="771" fg:w="1"/><text x="61.8807%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6307%" y="437" width="0.0799%" height="15" fill="rgb(222,4,38)" fg:x="771" fg:w="1"/><text x="61.8807%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6307%" y="421" width="0.0799%" height="15" fill="rgb(253,228,15)" fg:x="771" fg:w="1"/><text x="61.8807%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.6307%" y="405" width="0.0799%" height="15" fill="rgb(242,194,12)" fg:x="771" fg:w="1"/><text x="61.8807%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.6307%" y="389" width="0.0799%" height="15" fill="rgb(214,177,31)" fg:x="771" fg:w="1"/><text x="61.8807%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.6307%" y="373" width="0.0799%" height="15" fill="rgb(226,58,51)" fg:x="771" fg:w="1"/><text x="61.8807%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.6307%" y="357" width="0.0799%" height="15" fill="rgb(250,119,16)" fg:x="771" fg:w="1"/><text x="61.8807%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.6307%" y="341" width="0.0799%" height="15" fill="rgb(223,128,53)" fg:x="771" fg:w="1"/><text x="61.8807%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.88%)</title><rect x="60.9113%" y="517" width="0.8793%" height="15" fill="rgb(251,199,15)" fg:x="762" fg:w="11"/><text x="61.1613%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.88%)</title><rect x="60.9113%" y="501" width="0.8793%" height="15" fill="rgb(235,168,42)" fg:x="762" fg:w="11"/><text x="61.1613%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7106%" y="485" width="0.0799%" height="15" fill="rgb(250,210,17)" fg:x="772" fg:w="1"/><text x="61.9606%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7106%" y="469" width="0.0799%" height="15" fill="rgb(226,36,41)" fg:x="772" fg:w="1"/><text x="61.9606%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.7106%" y="453" width="0.0799%" height="15" fill="rgb(225,87,10)" fg:x="772" fg:w="1"/><text x="61.9606%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.7106%" y="437" width="0.0799%" height="15" fill="rgb(228,83,9)" fg:x="772" fg:w="1"/><text x="61.9606%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.7106%" y="421" width="0.0799%" height="15" fill="rgb(225,16,36)" fg:x="772" fg:w="1"/><text x="61.9606%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7106%" y="405" width="0.0799%" height="15" fill="rgb(242,198,13)" fg:x="772" fg:w="1"/><text x="61.9606%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7106%" y="389" width="0.0799%" height="15" fill="rgb(239,25,51)" fg:x="772" fg:w="1"/><text x="61.9606%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.7106%" y="373" width="0.0799%" height="15" fill="rgb(239,28,37)" fg:x="772" fg:w="1"/><text x="61.9606%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.7106%" y="357" width="0.0799%" height="15" fill="rgb(234,70,17)" fg:x="772" fg:w="1"/><text x="61.9606%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.7106%" y="341" width="0.0799%" height="15" fill="rgb(231,215,53)" fg:x="772" fg:w="1"/><text x="61.9606%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.7106%" y="325" width="0.0799%" height="15" fill="rgb(218,140,42)" fg:x="772" fg:w="1"/><text x="61.9606%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.7906%" y="421" width="0.0799%" height="15" fill="rgb(233,227,45)" fg:x="773" fg:w="1"/><text x="62.0406%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.7906%" y="405" width="0.0799%" height="15" fill="rgb(225,189,21)" fg:x="773" fg:w="1"/><text x="62.0406%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="61.7906%" y="517" width="0.2398%" height="15" fill="rgb(237,176,54)" fg:x="773" fg:w="3"/><text x="62.0406%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="61.7906%" y="501" width="0.2398%" height="15" fill="rgb(215,131,46)" fg:x="773" fg:w="3"/><text x="62.0406%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.7906%" y="485" width="0.2398%" height="15" fill="rgb(218,95,20)" fg:x="773" fg:w="3"/><text x="62.0406%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.7906%" y="469" width="0.2398%" height="15" fill="rgb(208,198,12)" fg:x="773" fg:w="3"/><text x="62.0406%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="61.7906%" y="453" width="0.2398%" height="15" fill="rgb(239,107,50)" fg:x="773" fg:w="3"/><text x="62.0406%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.7906%" y="437" width="0.2398%" height="15" fill="rgb(240,217,37)" fg:x="773" fg:w="3"/><text x="62.0406%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.8705%" y="421" width="0.1599%" height="15" fill="rgb(242,197,49)" fg:x="774" fg:w="2"/><text x="62.1205%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.8705%" y="405" width="0.1599%" height="15" fill="rgb(219,171,17)" fg:x="774" fg:w="2"/><text x="62.1205%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.1902%" y="437" width="0.0799%" height="15" fill="rgb(209,81,40)" fg:x="778" fg:w="1"/><text x="62.4402%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="62.2702%" y="421" width="0.0799%" height="15" fill="rgb(237,156,30)" fg:x="779" fg:w="1"/><text x="62.5202%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.2702%" y="405" width="0.0799%" height="15" fill="rgb(212,127,16)" fg:x="779" fg:w="1"/><text x="62.5202%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="62.2702%" y="389" width="0.0799%" height="15" fill="rgb(226,66,32)" fg:x="779" fg:w="1"/><text x="62.5202%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.2702%" y="373" width="0.0799%" height="15" fill="rgb(245,22,46)" fg:x="779" fg:w="1"/><text x="62.5202%" y="383.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="62.1902%" y="469" width="0.2398%" height="15" fill="rgb(210,112,21)" fg:x="778" fg:w="3"/><text x="62.4402%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.1902%" y="453" width="0.2398%" height="15" fill="rgb(207,118,39)" fg:x="778" fg:w="3"/><text x="62.4402%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="62.2702%" y="437" width="0.1599%" height="15" fill="rgb(205,206,35)" fg:x="779" fg:w="2"/><text x="62.5202%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.3501%" y="421" width="0.0799%" height="15" fill="rgb(222,120,2)" fg:x="780" fg:w="1"/><text x="62.6001%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.3501%" y="405" width="0.0799%" height="15" fill="rgb(205,38,18)" fg:x="780" fg:w="1"/><text x="62.6001%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.56%)</title><rect x="62.0304%" y="517" width="0.5596%" height="15" fill="rgb(226,61,2)" fg:x="776" fg:w="7"/><text x="62.2804%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="62.0304%" y="501" width="0.5596%" height="15" fill="rgb(242,161,23)" fg:x="776" fg:w="7"/><text x="62.2804%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="62.0304%" y="485" width="0.5596%" height="15" fill="rgb(213,13,52)" fg:x="776" fg:w="7"/><text x="62.2804%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.4301%" y="469" width="0.1599%" height="15" fill="rgb(246,209,47)" fg:x="781" fg:w="2"/><text x="62.6801%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.5100%" y="453" width="0.0799%" height="15" fill="rgb(214,41,3)" fg:x="782" fg:w="1"/><text x="62.7600%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="62.7498%" y="437" width="0.0799%" height="15" fill="rgb(236,119,38)" fg:x="785" fg:w="1"/><text x="62.9998%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.8297%" y="341" width="0.0799%" height="15" fill="rgb(218,50,11)" fg:x="786" fg:w="1"/><text x="63.0797%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.8297%" y="325" width="0.0799%" height="15" fill="rgb(228,38,11)" fg:x="786" fg:w="1"/><text x="63.0797%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="62.8297%" y="373" width="0.1599%" height="15" fill="rgb(212,13,9)" fg:x="786" fg:w="2"/><text x="63.0797%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="62.8297%" y="357" width="0.1599%" height="15" fill="rgb(208,211,9)" fg:x="786" fg:w="2"/><text x="63.0797%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.9097%" y="341" width="0.0799%" height="15" fill="rgb(239,39,32)" fg:x="787" fg:w="1"/><text x="63.1597%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.9097%" y="325" width="0.0799%" height="15" fill="rgb(254,179,26)" fg:x="787" fg:w="1"/><text x="63.1597%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="62.9896%" y="373" width="0.1599%" height="15" fill="rgb(249,165,28)" fg:x="788" fg:w="2"/><text x="63.2396%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.0695%" y="357" width="0.0799%" height="15" fill="rgb(225,59,50)" fg:x="789" fg:w="1"/><text x="63.3195%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.0695%" y="341" width="0.0799%" height="15" fill="rgb(209,122,5)" fg:x="789" fg:w="1"/><text x="63.3195%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.0695%" y="325" width="0.0799%" height="15" fill="rgb(214,65,34)" fg:x="789" fg:w="1"/><text x="63.3195%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="62.8297%" y="389" width="0.3997%" height="15" fill="rgb(249,183,32)" fg:x="786" fg:w="5"/><text x="63.0797%" y="399.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="63.1495%" y="373" width="0.0799%" height="15" fill="rgb(218,122,24)" fg:x="790" fg:w="1"/><text x="63.3995%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.2294%" y="389" width="0.0799%" height="15" fill="rgb(224,109,18)" fg:x="791" fg:w="1"/><text x="63.4794%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.2294%" y="373" width="0.0799%" height="15" fill="rgb(210,68,50)" fg:x="791" fg:w="1"/><text x="63.4794%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="62.7498%" y="453" width="0.6395%" height="15" fill="rgb(212,184,34)" fg:x="785" fg:w="8"/><text x="62.9998%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="62.8297%" y="437" width="0.5596%" height="15" fill="rgb(238,105,48)" fg:x="786" fg:w="7"/><text x="63.0797%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="62.8297%" y="421" width="0.5596%" height="15" fill="rgb(222,134,54)" fg:x="786" fg:w="7"/><text x="63.0797%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="62.8297%" y="405" width="0.5596%" height="15" fill="rgb(246,24,43)" fg:x="786" fg:w="7"/><text x="63.0797%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.3094%" y="389" width="0.0799%" height="15" fill="rgb(227,169,22)" fg:x="792" fg:w="1"/><text x="63.5594%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (32 samples, 2.56%)</title><rect x="60.9113%" y="533" width="2.5580%" height="15" fill="rgb(253,152,4)" fg:x="762" fg:w="32"/><text x="61.1613%" y="543.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.88%)</title><rect x="62.5899%" y="517" width="0.8793%" height="15" fill="rgb(219,158,36)" fg:x="783" fg:w="11"/><text x="62.8399%" y="527.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="62.5899%" y="501" width="0.8793%" height="15" fill="rgb(251,128,40)" fg:x="783" fg:w="11"/><text x="62.8399%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="62.5899%" y="485" width="0.8793%" height="15" fill="rgb(254,101,39)" fg:x="783" fg:w="11"/><text x="62.8399%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="62.6699%" y="469" width="0.7994%" height="15" fill="rgb(221,168,40)" fg:x="784" fg:w="10"/><text x="62.9199%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.3893%" y="453" width="0.0799%" height="15" fill="rgb(221,14,27)" fg:x="793" fg:w="1"/><text x="63.6393%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.3893%" y="437" width="0.0799%" height="15" fill="rgb(207,36,43)" fg:x="793" fg:w="1"/><text x="63.6393%" y="447.50"></text></g><g><title>engine::session::Session::load_entity (94 samples, 7.51%)</title><rect x="56.0352%" y="549" width="7.5140%" height="15" fill="rgb(240,172,53)" fg:x="701" fg:w="94"/><text x="56.2852%" y="559.50">engine::se..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="63.4692%" y="533" width="0.0799%" height="15" fill="rgb(241,138,43)" fg:x="794" fg:w="1"/><text x="63.7192%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.4692%" y="517" width="0.0799%" height="15" fill="rgb(227,78,19)" fg:x="794" fg:w="1"/><text x="63.7192%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="63.4692%" y="501" width="0.0799%" height="15" fill="rgb(215,127,44)" fg:x="794" fg:w="1"/><text x="63.7192%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.7090%" y="469" width="0.0799%" height="15" fill="rgb(227,13,10)" fg:x="797" fg:w="1"/><text x="63.9590%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.7090%" y="453" width="0.0799%" height="15" fill="rgb(249,177,6)" fg:x="797" fg:w="1"/><text x="63.9590%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.7090%" y="437" width="0.0799%" height="15" fill="rgb(215,154,26)" fg:x="797" fg:w="1"/><text x="63.9590%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.7090%" y="421" width="0.0799%" height="15" fill="rgb(250,168,20)" fg:x="797" fg:w="1"/><text x="63.9590%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.7090%" y="405" width="0.0799%" height="15" fill="rgb(222,53,38)" fg:x="797" fg:w="1"/><text x="63.9590%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.7090%" y="389" width="0.0799%" height="15" fill="rgb(245,154,5)" fg:x="797" fg:w="1"/><text x="63.9590%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.7090%" y="373" width="0.0799%" height="15" fill="rgb(214,89,50)" fg:x="797" fg:w="1"/><text x="63.9590%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.7090%" y="357" width="0.0799%" height="15" fill="rgb(232,73,14)" fg:x="797" fg:w="1"/><text x="63.9590%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.7090%" y="341" width="0.0799%" height="15" fill="rgb(230,101,20)" fg:x="797" fg:w="1"/><text x="63.9590%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.7090%" y="325" width="0.0799%" height="15" fill="rgb(208,56,28)" fg:x="797" fg:w="1"/><text x="63.9590%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.7090%" y="309" width="0.0799%" height="15" fill="rgb(247,205,22)" fg:x="797" fg:w="1"/><text x="63.9590%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.7090%" y="293" width="0.0799%" height="15" fill="rgb(252,109,51)" fg:x="797" fg:w="1"/><text x="63.9590%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.7090%" y="277" width="0.0799%" height="15" fill="rgb(220,40,24)" fg:x="797" fg:w="1"/><text x="63.9590%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.7090%" y="261" width="0.0799%" height="15" fill="rgb(251,108,7)" fg:x="797" fg:w="1"/><text x="63.9590%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.7890%" y="469" width="0.1599%" height="15" fill="rgb(238,102,51)" fg:x="798" fg:w="2"/><text x="64.0390%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.7890%" y="453" width="0.1599%" height="15" fill="rgb(219,149,34)" fg:x="798" fg:w="2"/><text x="64.0390%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="63.7890%" y="437" width="0.1599%" height="15" fill="rgb(239,70,0)" fg:x="798" fg:w="2"/><text x="64.0390%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="63.7890%" y="421" width="0.1599%" height="15" fill="rgb(246,214,23)" fg:x="798" fg:w="2"/><text x="64.0390%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="63.7890%" y="405" width="0.1599%" height="15" fill="rgb(239,221,51)" fg:x="798" fg:w="2"/><text x="64.0390%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.7890%" y="389" width="0.1599%" height="15" fill="rgb(254,62,14)" fg:x="798" fg:w="2"/><text x="64.0390%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.7890%" y="373" width="0.1599%" height="15" fill="rgb(253,57,33)" fg:x="798" fg:w="2"/><text x="64.0390%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="63.7890%" y="357" width="0.1599%" height="15" fill="rgb(229,34,6)" fg:x="798" fg:w="2"/><text x="64.0390%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="63.7890%" y="341" width="0.1599%" height="15" fill="rgb(235,191,23)" fg:x="798" fg:w="2"/><text x="64.0390%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="63.7890%" y="325" width="0.1599%" height="15" fill="rgb(217,207,27)" fg:x="798" fg:w="2"/><text x="64.0390%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="63.7890%" y="309" width="0.1599%" height="15" fill="rgb(232,41,44)" fg:x="798" fg:w="2"/><text x="64.0390%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.7890%" y="293" width="0.1599%" height="15" fill="rgb(221,188,19)" fg:x="798" fg:w="2"/><text x="64.0390%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="63.5492%" y="517" width="0.4796%" height="15" fill="rgb(245,180,45)" fg:x="795" fg:w="6"/><text x="63.7992%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="63.6291%" y="501" width="0.3997%" height="15" fill="rgb(250,220,42)" fg:x="796" fg:w="5"/><text x="63.8791%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="63.6291%" y="485" width="0.3997%" height="15" fill="rgb(234,16,34)" fg:x="796" fg:w="5"/><text x="63.8791%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9488%" y="469" width="0.0799%" height="15" fill="rgb(233,217,23)" fg:x="800" fg:w="1"/><text x="64.1988%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.9488%" y="453" width="0.0799%" height="15" fill="rgb(209,22,46)" fg:x="800" fg:w="1"/><text x="64.1988%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9488%" y="437" width="0.0799%" height="15" fill="rgb(213,101,18)" fg:x="800" fg:w="1"/><text x="64.1988%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9488%" y="421" width="0.0799%" height="15" fill="rgb(215,179,52)" fg:x="800" fg:w="1"/><text x="64.1988%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.9488%" y="405" width="0.0799%" height="15" fill="rgb(223,50,25)" fg:x="800" fg:w="1"/><text x="64.1988%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.9488%" y="389" width="0.0799%" height="15" fill="rgb(224,51,44)" fg:x="800" fg:w="1"/><text x="64.1988%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.9488%" y="373" width="0.0799%" height="15" fill="rgb(224,13,54)" fg:x="800" fg:w="1"/><text x="64.1988%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="63.9488%" y="357" width="0.0799%" height="15" fill="rgb(219,58,47)" fg:x="800" fg:w="1"/><text x="64.1988%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="63.9488%" y="341" width="0.0799%" height="15" fill="rgb(246,124,34)" fg:x="800" fg:w="1"/><text x="64.1988%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2686%" y="437" width="0.0799%" height="15" fill="rgb(245,109,25)" fg:x="804" fg:w="1"/><text x="64.5186%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2686%" y="421" width="0.0799%" height="15" fill="rgb(235,48,23)" fg:x="804" fg:w="1"/><text x="64.5186%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2686%" y="405" width="0.0799%" height="15" fill="rgb(229,203,36)" fg:x="804" fg:w="1"/><text x="64.5186%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2686%" y="389" width="0.0799%" height="15" fill="rgb(234,180,9)" fg:x="804" fg:w="1"/><text x="64.5186%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.2686%" y="373" width="0.0799%" height="15" fill="rgb(228,98,45)" fg:x="804" fg:w="1"/><text x="64.5186%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.2686%" y="357" width="0.0799%" height="15" fill="rgb(240,24,36)" fg:x="804" fg:w="1"/><text x="64.5186%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.2686%" y="341" width="0.0799%" height="15" fill="rgb(227,154,19)" fg:x="804" fg:w="1"/><text x="64.5186%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.2686%" y="325" width="0.0799%" height="15" fill="rgb(231,2,48)" fg:x="804" fg:w="1"/><text x="64.5186%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.2686%" y="309" width="0.0799%" height="15" fill="rgb(219,216,0)" fg:x="804" fg:w="1"/><text x="64.5186%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.1886%" y="453" width="0.2398%" height="15" fill="rgb(251,88,0)" fg:x="803" fg:w="3"/><text x="64.4386%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.3485%" y="437" width="0.0799%" height="15" fill="rgb(242,45,45)" fg:x="805" fg:w="1"/><text x="64.5985%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.3485%" y="421" width="0.0799%" height="15" fill="rgb(218,149,45)" fg:x="805" fg:w="1"/><text x="64.5985%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.3485%" y="405" width="0.0799%" height="15" fill="rgb(247,194,10)" fg:x="805" fg:w="1"/><text x="64.5985%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.3485%" y="389" width="0.0799%" height="15" fill="rgb(234,33,37)" fg:x="805" fg:w="1"/><text x="64.5985%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.3485%" y="373" width="0.0799%" height="15" fill="rgb(218,61,13)" fg:x="805" fg:w="1"/><text x="64.5985%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.3485%" y="357" width="0.0799%" height="15" fill="rgb(210,80,52)" fg:x="805" fg:w="1"/><text x="64.5985%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.3485%" y="341" width="0.0799%" height="15" fill="rgb(218,203,27)" fg:x="805" fg:w="1"/><text x="64.5985%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.3485%" y="325" width="0.0799%" height="15" fill="rgb(209,126,33)" fg:x="805" fg:w="1"/><text x="64.5985%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.3485%" y="309" width="0.0799%" height="15" fill="rgb(234,173,41)" fg:x="805" fg:w="1"/><text x="64.5985%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.3485%" y="293" width="0.0799%" height="15" fill="rgb(228,166,9)" fg:x="805" fg:w="1"/><text x="64.5985%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.3485%" y="277" width="0.0799%" height="15" fill="rgb(208,124,43)" fg:x="805" fg:w="1"/><text x="64.5985%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.3485%" y="261" width="0.0799%" height="15" fill="rgb(212,154,38)" fg:x="805" fg:w="1"/><text x="64.5985%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="64.1087%" y="469" width="0.3997%" height="15" fill="rgb(246,179,35)" fg:x="802" fg:w="5"/><text x="64.3587%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4285%" y="453" width="0.0799%" height="15" fill="rgb(251,3,50)" fg:x="806" fg:w="1"/><text x="64.6785%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4285%" y="437" width="0.0799%" height="15" fill="rgb(219,96,8)" fg:x="806" fg:w="1"/><text x="64.6785%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.4285%" y="421" width="0.0799%" height="15" fill="rgb(251,216,33)" fg:x="806" fg:w="1"/><text x="64.6785%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.4285%" y="405" width="0.0799%" height="15" fill="rgb(243,145,29)" fg:x="806" fg:w="1"/><text x="64.6785%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.4285%" y="389" width="0.0799%" height="15" fill="rgb(210,75,20)" fg:x="806" fg:w="1"/><text x="64.6785%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.4285%" y="373" width="0.0799%" height="15" fill="rgb(235,56,8)" fg:x="806" fg:w="1"/><text x="64.6785%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.4285%" y="357" width="0.0799%" height="15" fill="rgb(226,175,49)" fg:x="806" fg:w="1"/><text x="64.6785%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.4285%" y="341" width="0.0799%" height="15" fill="rgb(242,204,23)" fg:x="806" fg:w="1"/><text x="64.6785%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.4285%" y="325" width="0.0799%" height="15" fill="rgb(225,104,24)" fg:x="806" fg:w="1"/><text x="64.6785%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.4285%" y="309" width="0.0799%" height="15" fill="rgb(253,34,1)" fg:x="806" fg:w="1"/><text x="64.6785%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.4285%" y="293" width="0.0799%" height="15" fill="rgb(233,199,23)" fg:x="806" fg:w="1"/><text x="64.6785%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.4285%" y="277" width="0.0799%" height="15" fill="rgb(247,7,51)" fg:x="806" fg:w="1"/><text x="64.6785%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.5883%" y="421" width="0.2398%" height="15" fill="rgb(214,146,12)" fg:x="808" fg:w="3"/><text x="64.8383%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.9081%" y="373" width="0.0799%" height="15" fill="rgb(234,181,43)" fg:x="812" fg:w="1"/><text x="65.1581%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9081%" y="357" width="0.0799%" height="15" fill="rgb(239,148,6)" fg:x="812" fg:w="1"/><text x="65.1581%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9081%" y="341" width="0.0799%" height="15" fill="rgb(206,151,17)" fg:x="812" fg:w="1"/><text x="65.1581%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.9081%" y="325" width="0.0799%" height="15" fill="rgb(213,215,10)" fg:x="812" fg:w="1"/><text x="65.1581%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.9081%" y="309" width="0.0799%" height="15" fill="rgb(215,220,44)" fg:x="812" fg:w="1"/><text x="65.1581%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.9081%" y="293" width="0.0799%" height="15" fill="rgb(245,205,37)" fg:x="812" fg:w="1"/><text x="65.1581%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.9081%" y="277" width="0.0799%" height="15" fill="rgb(245,130,43)" fg:x="812" fg:w="1"/><text x="65.1581%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.9081%" y="261" width="0.0799%" height="15" fill="rgb(231,227,38)" fg:x="812" fg:w="1"/><text x="65.1581%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.9081%" y="245" width="0.0799%" height="15" fill="rgb(233,185,4)" fg:x="812" fg:w="1"/><text x="65.1581%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.9081%" y="229" width="0.0799%" height="15" fill="rgb(224,154,43)" fg:x="812" fg:w="1"/><text x="65.1581%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.9081%" y="213" width="0.0799%" height="15" fill="rgb(235,156,15)" fg:x="812" fg:w="1"/><text x="65.1581%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.9081%" y="197" width="0.0799%" height="15" fill="rgb(211,55,43)" fg:x="812" fg:w="1"/><text x="65.1581%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9081%" y="181" width="0.0799%" height="15" fill="rgb(247,149,40)" fg:x="812" fg:w="1"/><text x="65.1581%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.1479%" y="325" width="0.0799%" height="15" fill="rgb(232,171,16)" fg:x="815" fg:w="1"/><text x="65.3979%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1479%" y="309" width="0.0799%" height="15" fill="rgb(215,117,49)" fg:x="815" fg:w="1"/><text x="65.3979%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1479%" y="293" width="0.0799%" height="15" fill="rgb(246,194,11)" fg:x="815" fg:w="1"/><text x="65.3979%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.1479%" y="277" width="0.0799%" height="15" fill="rgb(242,101,44)" fg:x="815" fg:w="1"/><text x="65.3979%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.1479%" y="261" width="0.0799%" height="15" fill="rgb(226,174,6)" fg:x="815" fg:w="1"/><text x="65.3979%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.1479%" y="245" width="0.0799%" height="15" fill="rgb(213,150,20)" fg:x="815" fg:w="1"/><text x="65.3979%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.1479%" y="229" width="0.0799%" height="15" fill="rgb(222,124,42)" fg:x="815" fg:w="1"/><text x="65.3979%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.1479%" y="213" width="0.0799%" height="15" fill="rgb(250,19,47)" fg:x="815" fg:w="1"/><text x="65.3979%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.1479%" y="197" width="0.0799%" height="15" fill="rgb(241,217,19)" fg:x="815" fg:w="1"/><text x="65.3979%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.1479%" y="181" width="0.0799%" height="15" fill="rgb(207,210,34)" fg:x="815" fg:w="1"/><text x="65.3979%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.1479%" y="165" width="0.0799%" height="15" fill="rgb(244,45,4)" fg:x="815" fg:w="1"/><text x="65.3979%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.1479%" y="149" width="0.0799%" height="15" fill="rgb(252,134,50)" fg:x="815" fg:w="1"/><text x="65.3979%" y="159.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="65.1479%" y="133" width="0.0799%" height="15" fill="rgb(238,74,2)" fg:x="815" fg:w="1"/><text x="65.3979%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.2278%" y="325" width="0.0799%" height="15" fill="rgb(226,58,46)" fg:x="816" fg:w="1"/><text x="65.4778%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="65.2278%" y="309" width="0.0799%" height="15" fill="rgb(232,83,35)" fg:x="816" fg:w="1"/><text x="65.4778%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="65.2278%" y="293" width="0.0799%" height="15" fill="rgb(212,148,47)" fg:x="816" fg:w="1"/><text x="65.4778%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.3078%" y="293" width="0.0799%" height="15" fill="rgb(235,29,1)" fg:x="817" fg:w="1"/><text x="65.5578%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="64.9880%" y="373" width="0.4796%" height="15" fill="rgb(247,55,37)" fg:x="813" fg:w="6"/><text x="65.2380%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="65.0679%" y="357" width="0.3997%" height="15" fill="rgb(222,48,3)" fg:x="814" fg:w="5"/><text x="65.3179%" y="367.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.40%)</title><rect x="65.0679%" y="341" width="0.3997%" height="15" fill="rgb(234,21,33)" fg:x="814" fg:w="5"/><text x="65.3179%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.3078%" y="325" width="0.1599%" height="15" fill="rgb(247,178,53)" fg:x="817" fg:w="2"/><text x="65.5578%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.3078%" y="309" width="0.1599%" height="15" fill="rgb(225,75,7)" fg:x="817" fg:w="2"/><text x="65.5578%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.3877%" y="293" width="0.0799%" height="15" fill="rgb(219,199,7)" fg:x="818" fg:w="1"/><text x="65.6377%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.4676%" y="325" width="0.0799%" height="15" fill="rgb(209,93,42)" fg:x="819" fg:w="1"/><text x="65.7176%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="65.4676%" y="309" width="0.0799%" height="15" fill="rgb(240,175,17)" fg:x="819" fg:w="1"/><text x="65.7176%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.4676%" y="293" width="0.0799%" height="15" fill="rgb(232,106,7)" fg:x="819" fg:w="1"/><text x="65.7176%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.12%)</title><rect x="64.5084%" y="469" width="1.1191%" height="15" fill="rgb(242,106,43)" fg:x="807" fg:w="14"/><text x="64.7584%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.12%)</title><rect x="64.5084%" y="453" width="1.1191%" height="15" fill="rgb(242,61,37)" fg:x="807" fg:w="14"/><text x="64.7584%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (14 samples, 1.12%)</title><rect x="64.5084%" y="437" width="1.1191%" height="15" fill="rgb(205,72,10)" fg:x="807" fg:w="14"/><text x="64.7584%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="64.8281%" y="421" width="0.7994%" height="15" fill="rgb(214,184,36)" fg:x="811" fg:w="10"/><text x="65.0781%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.80%)</title><rect x="64.8281%" y="405" width="0.7994%" height="15" fill="rgb(206,107,18)" fg:x="811" fg:w="10"/><text x="65.0781%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (9 samples, 0.72%)</title><rect x="64.9081%" y="389" width="0.7194%" height="15" fill="rgb(210,75,5)" fg:x="812" fg:w="9"/><text x="65.1581%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.4676%" y="373" width="0.1599%" height="15" fill="rgb(205,3,19)" fg:x="819" fg:w="2"/><text x="65.7176%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.4676%" y="357" width="0.1599%" height="15" fill="rgb(207,181,42)" fg:x="819" fg:w="2"/><text x="65.7176%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (2 samples, 0.16%)</title><rect x="65.4676%" y="341" width="0.1599%" height="15" fill="rgb(229,179,43)" fg:x="819" fg:w="2"/><text x="65.7176%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="65.5476%" y="325" width="0.0799%" height="15" fill="rgb(246,95,30)" fg:x="820" fg:w="1"/><text x="65.7976%" y="335.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="65.5476%" y="309" width="0.0799%" height="15" fill="rgb(234,144,45)" fg:x="820" fg:w="1"/><text x="65.7976%" y="319.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="65.5476%" y="293" width="0.0799%" height="15" fill="rgb(250,54,25)" fg:x="820" fg:w="1"/><text x="65.7976%" y="303.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="65.5476%" y="277" width="0.0799%" height="15" fill="rgb(215,195,40)" fg:x="820" fg:w="1"/><text x="65.7976%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.08%)</title><rect x="65.5476%" y="261" width="0.0799%" height="15" fill="rgb(233,188,42)" fg:x="820" fg:w="1"/><text x="65.7976%" y="271.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="65.5476%" y="245" width="0.0799%" height="15" fill="rgb(247,227,35)" fg:x="820" fg:w="1"/><text x="65.7976%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.7074%" y="437" width="0.0799%" height="15" fill="rgb(249,124,27)" fg:x="822" fg:w="1"/><text x="65.9574%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 1.84%)</title><rect x="64.0288%" y="517" width="1.8385%" height="15" fill="rgb(219,207,25)" fg:x="801" fg:w="23"/><text x="64.2788%" y="527.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 1.84%)</title><rect x="64.0288%" y="501" width="1.8385%" height="15" fill="rgb(241,216,47)" fg:x="801" fg:w="23"/><text x="64.2788%" y="511.50">&lt;..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (22 samples, 1.76%)</title><rect x="64.1087%" y="485" width="1.7586%" height="15" fill="rgb(233,82,50)" fg:x="802" fg:w="22"/><text x="64.3587%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="65.6275%" y="469" width="0.2398%" height="15" fill="rgb(232,63,2)" fg:x="821" fg:w="3"/><text x="65.8775%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.6275%" y="453" width="0.2398%" height="15" fill="rgb(236,184,28)" fg:x="821" fg:w="3"/><text x="65.8775%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.7874%" y="437" width="0.0799%" height="15" fill="rgb(254,63,27)" fg:x="823" fg:w="1"/><text x="66.0374%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="65.7874%" y="421" width="0.0799%" height="15" fill="rgb(253,106,28)" fg:x="823" fg:w="1"/><text x="66.0374%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.7874%" y="405" width="0.0799%" height="15" fill="rgb(225,141,39)" fg:x="823" fg:w="1"/><text x="66.0374%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.7874%" y="389" width="0.0799%" height="15" fill="rgb(222,157,20)" fg:x="823" fg:w="1"/><text x="66.0374%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.9472%" y="485" width="0.0799%" height="15" fill="rgb(210,190,9)" fg:x="825" fg:w="1"/><text x="66.1972%" y="495.50"></text></g><g><title>&lt;dyn serde::de::Expected as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="66.0272%" y="357" width="0.0799%" height="15" fill="rgb(242,167,7)" fg:x="826" fg:w="1"/><text x="66.2772%" y="367.50"></text></g><g><title>engine::session::internal::Added::find_refs (33 samples, 2.64%)</title><rect x="63.5492%" y="549" width="2.6379%" height="15" fill="rgb(227,82,41)" fg:x="795" fg:w="33"/><text x="63.7992%" y="559.50">en..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (33 samples, 2.64%)</title><rect x="63.5492%" y="533" width="2.6379%" height="15" fill="rgb(222,131,13)" fg:x="795" fg:w="33"/><text x="63.7992%" y="543.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="65.8673%" y="517" width="0.3197%" height="15" fill="rgb(221,98,26)" fg:x="824" fg:w="4"/><text x="66.1173%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.8673%" y="501" width="0.3197%" height="15" fill="rgb(251,63,52)" fg:x="824" fg:w="4"/><text x="66.1173%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (2 samples, 0.16%)</title><rect x="66.0272%" y="485" width="0.1599%" height="15" fill="rgb(246,25,43)" fg:x="826" fg:w="2"/><text x="66.2772%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (2 samples, 0.16%)</title><rect x="66.0272%" y="469" width="0.1599%" height="15" fill="rgb(247,167,15)" fg:x="826" fg:w="2"/><text x="66.2772%" y="479.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (2 samples, 0.16%)</title><rect x="66.0272%" y="453" width="0.1599%" height="15" fill="rgb(240,104,42)" fg:x="826" fg:w="2"/><text x="66.2772%" y="463.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (2 samples, 0.16%)</title><rect x="66.0272%" y="437" width="0.1599%" height="15" fill="rgb(224,54,6)" fg:x="826" fg:w="2"/><text x="66.2772%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="66.0272%" y="421" width="0.1599%" height="15" fill="rgb(244,108,35)" fg:x="826" fg:w="2"/><text x="66.2772%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="66.0272%" y="405" width="0.1599%" height="15" fill="rgb(216,154,2)" fg:x="826" fg:w="2"/><text x="66.2772%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.0272%" y="389" width="0.1599%" height="15" fill="rgb(222,8,47)" fg:x="826" fg:w="2"/><text x="66.2772%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.0272%" y="373" width="0.1599%" height="15" fill="rgb(252,93,1)" fg:x="826" fg:w="2"/><text x="66.2772%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="66.1071%" y="357" width="0.0799%" height="15" fill="rgb(223,226,51)" fg:x="827" fg:w="1"/><text x="66.3571%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.2670%" y="469" width="0.0799%" height="15" fill="rgb(206,147,9)" fg:x="829" fg:w="1"/><text x="66.5170%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.2670%" y="453" width="0.0799%" height="15" fill="rgb(248,180,41)" fg:x="829" fg:w="1"/><text x="66.5170%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.2670%" y="437" width="0.0799%" height="15" fill="rgb(209,47,50)" fg:x="829" fg:w="1"/><text x="66.5170%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.2670%" y="421" width="0.0799%" height="15" fill="rgb(243,65,31)" fg:x="829" fg:w="1"/><text x="66.5170%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.2670%" y="405" width="0.0799%" height="15" fill="rgb(228,128,1)" fg:x="829" fg:w="1"/><text x="66.5170%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.2670%" y="389" width="0.0799%" height="15" fill="rgb(231,192,16)" fg:x="829" fg:w="1"/><text x="66.5170%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.2670%" y="373" width="0.0799%" height="15" fill="rgb(224,26,40)" fg:x="829" fg:w="1"/><text x="66.5170%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.2670%" y="357" width="0.0799%" height="15" fill="rgb(214,192,17)" fg:x="829" fg:w="1"/><text x="66.5170%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.2670%" y="341" width="0.0799%" height="15" fill="rgb(225,147,18)" fg:x="829" fg:w="1"/><text x="66.5170%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.2670%" y="325" width="0.0799%" height="15" fill="rgb(205,35,11)" fg:x="829" fg:w="1"/><text x="66.5170%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.2670%" y="309" width="0.0799%" height="15" fill="rgb(242,40,42)" fg:x="829" fg:w="1"/><text x="66.5170%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.2670%" y="293" width="0.0799%" height="15" fill="rgb(250,170,13)" fg:x="829" fg:w="1"/><text x="66.5170%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.2670%" y="277" width="0.0799%" height="15" fill="rgb(240,161,28)" fg:x="829" fg:w="1"/><text x="66.5170%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.2670%" y="485" width="0.1599%" height="15" fill="rgb(245,179,12)" fg:x="829" fg:w="2"/><text x="66.5170%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.3469%" y="469" width="0.0799%" height="15" fill="rgb(250,92,32)" fg:x="830" fg:w="1"/><text x="66.5969%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="66.1871%" y="501" width="0.3197%" height="15" fill="rgb(233,10,40)" fg:x="828" fg:w="4"/><text x="66.4371%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4269%" y="485" width="0.0799%" height="15" fill="rgb(217,98,1)" fg:x="831" fg:w="1"/><text x="66.6769%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.4269%" y="469" width="0.0799%" height="15" fill="rgb(238,202,7)" fg:x="831" fg:w="1"/><text x="66.6769%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.4269%" y="453" width="0.0799%" height="15" fill="rgb(222,91,3)" fg:x="831" fg:w="1"/><text x="66.6769%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="66.1871%" y="517" width="0.3997%" height="15" fill="rgb(211,170,49)" fg:x="828" fg:w="5"/><text x="66.4371%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.5068%" y="501" width="0.0799%" height="15" fill="rgb(253,139,18)" fg:x="832" fg:w="1"/><text x="66.7568%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.5068%" y="485" width="0.0799%" height="15" fill="rgb(222,4,43)" fg:x="832" fg:w="1"/><text x="66.7568%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.5068%" y="469" width="0.0799%" height="15" fill="rgb(207,205,12)" fg:x="832" fg:w="1"/><text x="66.7568%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.5068%" y="453" width="0.0799%" height="15" fill="rgb(216,159,46)" fg:x="832" fg:w="1"/><text x="66.7568%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.5068%" y="437" width="0.0799%" height="15" fill="rgb(236,115,1)" fg:x="832" fg:w="1"/><text x="66.7568%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.5068%" y="421" width="0.0799%" height="15" fill="rgb(251,35,33)" fg:x="832" fg:w="1"/><text x="66.7568%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.5068%" y="405" width="0.0799%" height="15" fill="rgb(248,62,51)" fg:x="832" fg:w="1"/><text x="66.7568%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.5068%" y="389" width="0.0799%" height="15" fill="rgb(254,180,19)" fg:x="832" fg:w="1"/><text x="66.7568%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.5068%" y="373" width="0.0799%" height="15" fill="rgb(217,100,32)" fg:x="832" fg:w="1"/><text x="66.7568%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.5068%" y="357" width="0.0799%" height="15" fill="rgb(224,71,22)" fg:x="832" fg:w="1"/><text x="66.7568%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.5068%" y="341" width="0.0799%" height="15" fill="rgb(251,185,33)" fg:x="832" fg:w="1"/><text x="66.7568%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.5068%" y="325" width="0.0799%" height="15" fill="rgb(209,75,48)" fg:x="832" fg:w="1"/><text x="66.7568%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="66.1871%" y="533" width="0.5596%" height="15" fill="rgb(253,190,16)" fg:x="828" fg:w="7"/><text x="66.4371%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.5867%" y="517" width="0.1599%" height="15" fill="rgb(226,140,1)" fg:x="833" fg:w="2"/><text x="66.8367%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.5867%" y="501" width="0.1599%" height="15" fill="rgb(206,75,30)" fg:x="833" fg:w="2"/><text x="66.8367%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="66.5867%" y="485" width="0.1599%" height="15" fill="rgb(231,208,37)" fg:x="833" fg:w="2"/><text x="66.8367%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="66.5867%" y="469" width="0.1599%" height="15" fill="rgb(238,136,40)" fg:x="833" fg:w="2"/><text x="66.8367%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="66.5867%" y="453" width="0.1599%" height="15" fill="rgb(247,137,17)" fg:x="833" fg:w="2"/><text x="66.8367%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="66.5867%" y="437" width="0.1599%" height="15" fill="rgb(240,60,40)" fg:x="833" fg:w="2"/><text x="66.8367%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="66.5867%" y="421" width="0.1599%" height="15" fill="rgb(236,68,50)" fg:x="833" fg:w="2"/><text x="66.8367%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="66.5867%" y="405" width="0.1599%" height="15" fill="rgb(230,42,12)" fg:x="833" fg:w="2"/><text x="66.8367%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="66.5867%" y="389" width="0.1599%" height="15" fill="rgb(219,16,16)" fg:x="833" fg:w="2"/><text x="66.8367%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="66.5867%" y="373" width="0.1599%" height="15" fill="rgb(220,38,35)" fg:x="833" fg:w="2"/><text x="66.8367%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="66.5867%" y="357" width="0.1599%" height="15" fill="rgb(228,33,1)" fg:x="833" fg:w="2"/><text x="66.8367%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.5867%" y="341" width="0.1599%" height="15" fill="rgb(241,46,31)" fg:x="833" fg:w="2"/><text x="66.8367%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="66.7466%" y="533" width="0.0799%" height="15" fill="rgb(232,58,20)" fg:x="835" fg:w="1"/><text x="66.9966%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="66.7466%" y="517" width="0.0799%" height="15" fill="rgb(206,228,53)" fg:x="835" fg:w="1"/><text x="66.9966%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.7466%" y="501" width="0.0799%" height="15" fill="rgb(206,88,33)" fg:x="835" fg:w="1"/><text x="66.9966%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7466%" y="485" width="0.0799%" height="15" fill="rgb(238,69,7)" fg:x="835" fg:w="1"/><text x="66.9966%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="66.7466%" y="469" width="0.0799%" height="15" fill="rgb(250,21,46)" fg:x="835" fg:w="1"/><text x="66.9966%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7466%" y="453" width="0.0799%" height="15" fill="rgb(215,212,21)" fg:x="835" fg:w="1"/><text x="66.9966%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.7466%" y="437" width="0.0799%" height="15" fill="rgb(211,35,12)" fg:x="835" fg:w="1"/><text x="66.9966%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7466%" y="421" width="0.0799%" height="15" fill="rgb(231,184,16)" fg:x="835" fg:w="1"/><text x="66.9966%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.7466%" y="405" width="0.0799%" height="15" fill="rgb(242,140,15)" fg:x="835" fg:w="1"/><text x="66.9966%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.8265%" y="453" width="0.1599%" height="15" fill="rgb(220,37,14)" fg:x="836" fg:w="2"/><text x="67.0765%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.9065%" y="437" width="0.0799%" height="15" fill="rgb(223,146,22)" fg:x="837" fg:w="1"/><text x="67.1565%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.0663%" y="405" width="0.0799%" height="15" fill="rgb(216,132,15)" fg:x="839" fg:w="1"/><text x="67.3163%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.0663%" y="389" width="0.0799%" height="15" fill="rgb(248,83,5)" fg:x="839" fg:w="1"/><text x="67.3163%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.0663%" y="373" width="0.0799%" height="15" fill="rgb(231,206,48)" fg:x="839" fg:w="1"/><text x="67.3163%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.0663%" y="357" width="0.0799%" height="15" fill="rgb(253,185,37)" fg:x="839" fg:w="1"/><text x="67.3163%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.0663%" y="341" width="0.0799%" height="15" fill="rgb(208,21,44)" fg:x="839" fg:w="1"/><text x="67.3163%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="67.0663%" y="325" width="0.0799%" height="15" fill="rgb(236,125,4)" fg:x="839" fg:w="1"/><text x="67.3163%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="66.9864%" y="437" width="0.2398%" height="15" fill="rgb(226,134,25)" fg:x="838" fg:w="3"/><text x="67.2364%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="66.9864%" y="421" width="0.2398%" height="15" fill="rgb(250,201,12)" fg:x="838" fg:w="3"/><text x="67.2364%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.1463%" y="405" width="0.0799%" height="15" fill="rgb(225,92,18)" fg:x="840" fg:w="1"/><text x="67.3963%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.2262%" y="405" width="0.0799%" height="15" fill="rgb(227,35,22)" fg:x="841" fg:w="1"/><text x="67.4762%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="67.3062%" y="389" width="0.0799%" height="15" fill="rgb(214,180,52)" fg:x="842" fg:w="1"/><text x="67.5562%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (8 samples, 0.64%)</title><rect x="66.8265%" y="485" width="0.6395%" height="15" fill="rgb(233,55,38)" fg:x="836" fg:w="8"/><text x="67.0765%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="66.8265%" y="469" width="0.6395%" height="15" fill="rgb(249,171,43)" fg:x="836" fg:w="8"/><text x="67.0765%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="66.9864%" y="453" width="0.4796%" height="15" fill="rgb(239,87,2)" fg:x="838" fg:w="6"/><text x="67.2364%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.2262%" y="437" width="0.2398%" height="15" fill="rgb(248,141,5)" fg:x="841" fg:w="3"/><text x="67.4762%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="67.2262%" y="421" width="0.2398%" height="15" fill="rgb(238,33,42)" fg:x="841" fg:w="3"/><text x="67.4762%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="67.3062%" y="405" width="0.1599%" height="15" fill="rgb(231,57,19)" fg:x="842" fg:w="2"/><text x="67.5562%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.3861%" y="389" width="0.0799%" height="15" fill="rgb(214,78,53)" fg:x="843" fg:w="1"/><text x="67.6361%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.3861%" y="373" width="0.0799%" height="15" fill="rgb(206,132,29)" fg:x="843" fg:w="1"/><text x="67.6361%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.72%)</title><rect x="66.8265%" y="533" width="0.7194%" height="15" fill="rgb(248,174,31)" fg:x="836" fg:w="9"/><text x="67.0765%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="66.8265%" y="517" width="0.7194%" height="15" fill="rgb(221,87,13)" fg:x="836" fg:w="9"/><text x="67.0765%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="66.8265%" y="501" width="0.7194%" height="15" fill="rgb(223,197,17)" fg:x="836" fg:w="9"/><text x="67.0765%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.4660%" y="485" width="0.0799%" height="15" fill="rgb(220,144,50)" fg:x="844" fg:w="1"/><text x="67.7160%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.4660%" y="469" width="0.0799%" height="15" fill="rgb(244,201,11)" fg:x="844" fg:w="1"/><text x="67.7160%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="67.4660%" y="453" width="0.0799%" height="15" fill="rgb(249,81,34)" fg:x="844" fg:w="1"/><text x="67.7160%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="67.5460%" y="453" width="0.0799%" height="15" fill="rgb(205,161,12)" fg:x="845" fg:w="1"/><text x="67.7960%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.8657%" y="357" width="0.0799%" height="15" fill="rgb(252,139,50)" fg:x="849" fg:w="1"/><text x="68.1157%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8657%" y="341" width="0.0799%" height="15" fill="rgb(205,169,14)" fg:x="849" fg:w="1"/><text x="68.1157%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.8657%" y="389" width="0.1599%" height="15" fill="rgb(248,198,33)" fg:x="849" fg:w="2"/><text x="68.1157%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.8657%" y="373" width="0.1599%" height="15" fill="rgb(236,23,21)" fg:x="849" fg:w="2"/><text x="68.1157%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.9456%" y="357" width="0.0799%" height="15" fill="rgb(231,13,38)" fg:x="850" fg:w="1"/><text x="68.1956%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.9456%" y="341" width="0.0799%" height="15" fill="rgb(239,139,21)" fg:x="850" fg:w="1"/><text x="68.1956%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="67.9456%" y="325" width="0.0799%" height="15" fill="rgb(222,164,45)" fg:x="850" fg:w="1"/><text x="68.1956%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.0256%" y="357" width="0.0799%" height="15" fill="rgb(230,52,27)" fg:x="851" fg:w="1"/><text x="68.2756%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.0256%" y="341" width="0.0799%" height="15" fill="rgb(227,143,42)" fg:x="851" fg:w="1"/><text x="68.2756%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.0256%" y="325" width="0.0799%" height="15" fill="rgb(249,127,1)" fg:x="851" fg:w="1"/><text x="68.2756%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="67.5460%" y="469" width="0.6395%" height="15" fill="rgb(243,107,26)" fg:x="845" fg:w="8"/><text x="67.7960%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="67.6259%" y="453" width="0.5596%" height="15" fill="rgb(225,7,45)" fg:x="846" fg:w="7"/><text x="67.8759%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="67.7058%" y="437" width="0.4796%" height="15" fill="rgb(241,88,38)" fg:x="847" fg:w="6"/><text x="67.9558%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="67.7058%" y="421" width="0.4796%" height="15" fill="rgb(226,121,9)" fg:x="847" fg:w="6"/><text x="67.9558%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="67.8657%" y="405" width="0.3197%" height="15" fill="rgb(253,60,29)" fg:x="849" fg:w="4"/><text x="68.1157%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.0256%" y="389" width="0.1599%" height="15" fill="rgb(244,181,39)" fg:x="851" fg:w="2"/><text x="68.2756%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.0256%" y="373" width="0.1599%" height="15" fill="rgb(252,203,31)" fg:x="851" fg:w="2"/><text x="68.2756%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1055%" y="357" width="0.0799%" height="15" fill="rgb(224,120,8)" fg:x="852" fg:w="1"/><text x="68.3555%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (154 samples, 12.31%)</title><rect x="55.9552%" y="565" width="12.3102%" height="15" fill="rgb(205,171,54)" fg:x="700" fg:w="154"/><text x="56.2052%" y="575.50">engine::session::S..</text></g><g><title>engine::session::internal::Entities::add_persisted (26 samples, 2.08%)</title><rect x="66.1871%" y="549" width="2.0783%" height="15" fill="rgb(235,89,11)" fg:x="828" fg:w="26"/><text x="66.4371%" y="559.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="67.5460%" y="533" width="0.7194%" height="15" fill="rgb(212,180,28)" fg:x="845" fg:w="9"/><text x="67.7960%" y="543.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="67.5460%" y="517" width="0.7194%" height="15" fill="rgb(247,84,49)" fg:x="845" fg:w="9"/><text x="67.7960%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="67.5460%" y="501" width="0.7194%" height="15" fill="rgb(236,187,52)" fg:x="845" fg:w="9"/><text x="67.7960%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="67.5460%" y="485" width="0.7194%" height="15" fill="rgb(227,24,15)" fg:x="845" fg:w="9"/><text x="67.7960%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.1855%" y="469" width="0.0799%" height="15" fill="rgb(227,211,13)" fg:x="853" fg:w="1"/><text x="68.4355%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.1855%" y="453" width="0.0799%" height="15" fill="rgb(245,52,14)" fg:x="853" fg:w="1"/><text x="68.4355%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.2654%" y="517" width="0.0799%" height="15" fill="rgb(225,185,13)" fg:x="854" fg:w="1"/><text x="68.5154%" y="527.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="68.2654%" y="565" width="0.1599%" height="15" fill="rgb(217,160,29)" fg:x="854" fg:w="2"/><text x="68.5154%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="68.2654%" y="549" width="0.1599%" height="15" fill="rgb(216,115,53)" fg:x="854" fg:w="2"/><text x="68.5154%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="68.2654%" y="533" width="0.1599%" height="15" fill="rgb(236,99,5)" fg:x="854" fg:w="2"/><text x="68.5154%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.3453%" y="517" width="0.0799%" height="15" fill="rgb(222,60,38)" fg:x="855" fg:w="1"/><text x="68.5953%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.3453%" y="501" width="0.0799%" height="15" fill="rgb(212,82,22)" fg:x="855" fg:w="1"/><text x="68.5953%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.3453%" y="485" width="0.0799%" height="15" fill="rgb(214,48,28)" fg:x="855" fg:w="1"/><text x="68.5953%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.3453%" y="469" width="0.0799%" height="15" fill="rgb(245,196,50)" fg:x="855" fg:w="1"/><text x="68.5953%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.4253%" y="517" width="0.0799%" height="15" fill="rgb(225,159,46)" fg:x="856" fg:w="1"/><text x="68.6753%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.4253%" y="501" width="0.0799%" height="15" fill="rgb(207,195,48)" fg:x="856" fg:w="1"/><text x="68.6753%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.4253%" y="485" width="0.0799%" height="15" fill="rgb(240,73,3)" fg:x="856" fg:w="1"/><text x="68.6753%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.4253%" y="469" width="0.0799%" height="15" fill="rgb(245,57,23)" fg:x="856" fg:w="1"/><text x="68.6753%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.4253%" y="453" width="0.0799%" height="15" fill="rgb(240,75,18)" fg:x="856" fg:w="1"/><text x="68.6753%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.4253%" y="437" width="0.0799%" height="15" fill="rgb(238,168,12)" fg:x="856" fg:w="1"/><text x="68.6753%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.4253%" y="421" width="0.0799%" height="15" fill="rgb(226,20,40)" fg:x="856" fg:w="1"/><text x="68.6753%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.4253%" y="405" width="0.0799%" height="15" fill="rgb(224,130,35)" fg:x="856" fg:w="1"/><text x="68.6753%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.4253%" y="389" width="0.0799%" height="15" fill="rgb(225,63,41)" fg:x="856" fg:w="1"/><text x="68.6753%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.4253%" y="373" width="0.0799%" height="15" fill="rgb(219,3,3)" fg:x="856" fg:w="1"/><text x="68.6753%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="68.4253%" y="549" width="0.1599%" height="15" fill="rgb(218,157,4)" fg:x="856" fg:w="2"/><text x="68.6753%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="68.4253%" y="533" width="0.1599%" height="15" fill="rgb(232,76,36)" fg:x="856" fg:w="2"/><text x="68.6753%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.5052%" y="517" width="0.0799%" height="15" fill="rgb(247,36,0)" fg:x="857" fg:w="1"/><text x="68.7552%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.5052%" y="501" width="0.0799%" height="15" fill="rgb(205,2,34)" fg:x="857" fg:w="1"/><text x="68.7552%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.5052%" y="485" width="0.0799%" height="15" fill="rgb(239,136,13)" fg:x="857" fg:w="1"/><text x="68.7552%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.5052%" y="469" width="0.0799%" height="15" fill="rgb(253,122,12)" fg:x="857" fg:w="1"/><text x="68.7552%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.5052%" y="453" width="0.0799%" height="15" fill="rgb(222,174,7)" fg:x="857" fg:w="1"/><text x="68.7552%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.5052%" y="437" width="0.0799%" height="15" fill="rgb(208,191,42)" fg:x="857" fg:w="1"/><text x="68.7552%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="68.5052%" y="421" width="0.0799%" height="15" fill="rgb(237,212,15)" fg:x="857" fg:w="1"/><text x="68.7552%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="68.5851%" y="533" width="0.0799%" height="15" fill="rgb(215,65,20)" fg:x="858" fg:w="1"/><text x="68.8351%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.6651%" y="485" width="0.0799%" height="15" fill="rgb(232,103,11)" fg:x="859" fg:w="1"/><text x="68.9151%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.6651%" y="469" width="0.0799%" height="15" fill="rgb(235,148,18)" fg:x="859" fg:w="1"/><text x="68.9151%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.6651%" y="517" width="0.1599%" height="15" fill="rgb(240,173,7)" fg:x="859" fg:w="2"/><text x="68.9151%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.6651%" y="501" width="0.1599%" height="15" fill="rgb(228,182,25)" fg:x="859" fg:w="2"/><text x="68.9151%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7450%" y="485" width="0.0799%" height="15" fill="rgb(247,3,52)" fg:x="860" fg:w="1"/><text x="68.9950%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7450%" y="469" width="0.0799%" height="15" fill="rgb(226,155,8)" fg:x="860" fg:w="1"/><text x="68.9950%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.7450%" y="453" width="0.0799%" height="15" fill="rgb(243,195,38)" fg:x="860" fg:w="1"/><text x="68.9950%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.7450%" y="437" width="0.0799%" height="15" fill="rgb(254,181,33)" fg:x="860" fg:w="1"/><text x="68.9950%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.7450%" y="421" width="0.0799%" height="15" fill="rgb(232,98,23)" fg:x="860" fg:w="1"/><text x="68.9950%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.7450%" y="405" width="0.0799%" height="15" fill="rgb(205,23,10)" fg:x="860" fg:w="1"/><text x="68.9950%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.7450%" y="389" width="0.0799%" height="15" fill="rgb(212,124,38)" fg:x="860" fg:w="1"/><text x="68.9950%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.7450%" y="373" width="0.0799%" height="15" fill="rgb(228,207,2)" fg:x="860" fg:w="1"/><text x="68.9950%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.7450%" y="357" width="0.0799%" height="15" fill="rgb(215,120,22)" fg:x="860" fg:w="1"/><text x="68.9950%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.7450%" y="341" width="0.0799%" height="15" fill="rgb(251,172,33)" fg:x="860" fg:w="1"/><text x="68.9950%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.7450%" y="325" width="0.0799%" height="15" fill="rgb(250,83,2)" fg:x="860" fg:w="1"/><text x="68.9950%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.7450%" y="309" width="0.0799%" height="15" fill="rgb(210,132,53)" fg:x="860" fg:w="1"/><text x="68.9950%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.8249%" y="469" width="0.0799%" height="15" fill="rgb(221,208,36)" fg:x="861" fg:w="1"/><text x="69.0749%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.8249%" y="517" width="0.1599%" height="15" fill="rgb(205,192,46)" fg:x="861" fg:w="2"/><text x="69.0749%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="68.8249%" y="501" width="0.1599%" height="15" fill="rgb(223,163,14)" fg:x="861" fg:w="2"/><text x="69.0749%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.8249%" y="485" width="0.1599%" height="15" fill="rgb(218,41,28)" fg:x="861" fg:w="2"/><text x="69.0749%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.9049%" y="469" width="0.0799%" height="15" fill="rgb(235,104,10)" fg:x="862" fg:w="1"/><text x="69.1549%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.9049%" y="453" width="0.0799%" height="15" fill="rgb(246,17,4)" fg:x="862" fg:w="1"/><text x="69.1549%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="69.0647%" y="453" width="0.1599%" height="15" fill="rgb(240,7,16)" fg:x="864" fg:w="2"/><text x="69.3147%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (11 samples, 0.88%)</title><rect x="68.4253%" y="565" width="0.8793%" height="15" fill="rgb(213,160,23)" fg:x="856" fg:w="11"/><text x="68.6753%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="68.5851%" y="549" width="0.7194%" height="15" fill="rgb(251,179,49)" fg:x="858" fg:w="9"/><text x="68.8351%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="68.6651%" y="533" width="0.6395%" height="15" fill="rgb(247,198,10)" fg:x="859" fg:w="8"/><text x="68.9151%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="68.9848%" y="517" width="0.3197%" height="15" fill="rgb(220,65,29)" fg:x="863" fg:w="4"/><text x="69.2348%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="68.9848%" y="501" width="0.3197%" height="15" fill="rgb(237,171,28)" fg:x="863" fg:w="4"/><text x="69.2348%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="69.0647%" y="485" width="0.2398%" height="15" fill="rgb(228,44,26)" fg:x="864" fg:w="3"/><text x="69.3147%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.0647%" y="469" width="0.2398%" height="15" fill="rgb(216,210,27)" fg:x="864" fg:w="3"/><text x="69.3147%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.2246%" y="453" width="0.0799%" height="15" fill="rgb(252,10,17)" fg:x="866" fg:w="1"/><text x="69.4746%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.2246%" y="437" width="0.0799%" height="15" fill="rgb(214,172,30)" fg:x="866" fg:w="1"/><text x="69.4746%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.2246%" y="421" width="0.0799%" height="15" fill="rgb(253,130,48)" fg:x="866" fg:w="1"/><text x="69.4746%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="69.3046%" y="533" width="0.0799%" height="15" fill="rgb(226,99,43)" fg:x="867" fg:w="1"/><text x="69.5546%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3845%" y="485" width="0.0799%" height="15" fill="rgb(239,111,26)" fg:x="868" fg:w="1"/><text x="69.6345%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3845%" y="469" width="0.0799%" height="15" fill="rgb(240,27,53)" fg:x="868" fg:w="1"/><text x="69.6345%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3845%" y="453" width="0.0799%" height="15" fill="rgb(254,163,12)" fg:x="868" fg:w="1"/><text x="69.6345%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.3845%" y="437" width="0.0799%" height="15" fill="rgb(225,51,48)" fg:x="868" fg:w="1"/><text x="69.6345%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.3845%" y="421" width="0.0799%" height="15" fill="rgb(205,19,32)" fg:x="868" fg:w="1"/><text x="69.6345%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.3845%" y="405" width="0.0799%" height="15" fill="rgb(218,119,26)" fg:x="868" fg:w="1"/><text x="69.6345%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.3845%" y="389" width="0.0799%" height="15" fill="rgb(231,173,33)" fg:x="868" fg:w="1"/><text x="69.6345%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.3845%" y="373" width="0.0799%" height="15" fill="rgb(241,100,29)" fg:x="868" fg:w="1"/><text x="69.6345%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3845%" y="357" width="0.0799%" height="15" fill="rgb(250,194,34)" fg:x="868" fg:w="1"/><text x="69.6345%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3845%" y="341" width="0.0799%" height="15" fill="rgb(215,23,50)" fg:x="868" fg:w="1"/><text x="69.6345%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.3845%" y="325" width="0.0799%" height="15" fill="rgb(206,49,37)" fg:x="868" fg:w="1"/><text x="69.6345%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.3845%" y="309" width="0.0799%" height="15" fill="rgb(247,39,21)" fg:x="868" fg:w="1"/><text x="69.6345%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.3845%" y="293" width="0.0799%" height="15" fill="rgb(209,220,15)" fg:x="868" fg:w="1"/><text x="69.6345%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.3845%" y="277" width="0.0799%" height="15" fill="rgb(206,41,33)" fg:x="868" fg:w="1"/><text x="69.6345%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.3845%" y="261" width="0.0799%" height="15" fill="rgb(221,225,45)" fg:x="868" fg:w="1"/><text x="69.6345%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="69.3845%" y="517" width="0.1599%" height="15" fill="rgb(216,27,18)" fg:x="868" fg:w="2"/><text x="69.6345%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="69.3845%" y="501" width="0.1599%" height="15" fill="rgb(250,193,34)" fg:x="868" fg:w="2"/><text x="69.6345%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.4644%" y="485" width="0.0799%" height="15" fill="rgb(227,215,20)" fg:x="869" fg:w="1"/><text x="69.7144%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.4644%" y="469" width="0.0799%" height="15" fill="rgb(242,211,27)" fg:x="869" fg:w="1"/><text x="69.7144%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="69.4644%" y="453" width="0.0799%" height="15" fill="rgb(229,190,30)" fg:x="869" fg:w="1"/><text x="69.7144%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.4644%" y="437" width="0.0799%" height="15" fill="rgb(253,31,29)" fg:x="869" fg:w="1"/><text x="69.7144%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.5444%" y="437" width="0.0799%" height="15" fill="rgb(229,177,52)" fg:x="870" fg:w="1"/><text x="69.7944%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.5444%" y="421" width="0.0799%" height="15" fill="rgb(226,88,8)" fg:x="870" fg:w="1"/><text x="69.7944%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.6243%" y="389" width="0.0799%" height="15" fill="rgb(214,55,27)" fg:x="871" fg:w="1"/><text x="69.8743%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.6243%" y="373" width="0.0799%" height="15" fill="rgb(233,202,5)" fg:x="871" fg:w="1"/><text x="69.8743%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.6243%" y="421" width="0.1599%" height="15" fill="rgb(251,49,30)" fg:x="871" fg:w="2"/><text x="69.8743%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.6243%" y="405" width="0.1599%" height="15" fill="rgb(235,18,52)" fg:x="871" fg:w="2"/><text x="69.8743%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7042%" y="389" width="0.0799%" height="15" fill="rgb(250,111,51)" fg:x="872" fg:w="1"/><text x="69.9542%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7042%" y="373" width="0.0799%" height="15" fill="rgb(218,13,25)" fg:x="872" fg:w="1"/><text x="69.9542%" y="383.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.32%)</title><rect x="69.5444%" y="469" width="0.3197%" height="15" fill="rgb(248,96,7)" fg:x="870" fg:w="4"/><text x="69.7944%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="69.5444%" y="453" width="0.3197%" height="15" fill="rgb(217,31,15)" fg:x="870" fg:w="4"/><text x="69.7944%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="69.6243%" y="437" width="0.2398%" height="15" fill="rgb(228,59,49)" fg:x="871" fg:w="3"/><text x="69.8743%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.7842%" y="421" width="0.0799%" height="15" fill="rgb(210,152,38)" fg:x="873" fg:w="1"/><text x="70.0342%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.7842%" y="405" width="0.0799%" height="15" fill="rgb(206,71,11)" fg:x="873" fg:w="1"/><text x="70.0342%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.7842%" y="389" width="0.0799%" height="15" fill="rgb(244,199,5)" fg:x="873" fg:w="1"/><text x="70.0342%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.7842%" y="373" width="0.0799%" height="15" fill="rgb(253,49,1)" fg:x="873" fg:w="1"/><text x="70.0342%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="69.5444%" y="517" width="0.3997%" height="15" fill="rgb(225,206,40)" fg:x="870" fg:w="5"/><text x="69.7944%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="69.5444%" y="501" width="0.3997%" height="15" fill="rgb(243,116,47)" fg:x="870" fg:w="5"/><text x="69.7944%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="69.5444%" y="485" width="0.3997%" height="15" fill="rgb(219,225,16)" fg:x="870" fg:w="5"/><text x="69.7944%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.8641%" y="469" width="0.0799%" height="15" fill="rgb(233,29,47)" fg:x="874" fg:w="1"/><text x="70.1141%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8641%" y="453" width="0.0799%" height="15" fill="rgb(250,179,18)" fg:x="874" fg:w="1"/><text x="70.1141%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.9440%" y="453" width="0.1599%" height="15" fill="rgb(215,176,6)" fg:x="875" fg:w="2"/><text x="70.1940%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.9440%" y="437" width="0.1599%" height="15" fill="rgb(214,117,39)" fg:x="875" fg:w="2"/><text x="70.1940%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.9440%" y="421" width="0.1599%" height="15" fill="rgb(247,183,36)" fg:x="875" fg:w="2"/><text x="70.1940%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.9440%" y="405" width="0.1599%" height="15" fill="rgb(237,200,3)" fg:x="875" fg:w="2"/><text x="70.1940%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.9440%" y="389" width="0.1599%" height="15" fill="rgb(212,220,24)" fg:x="875" fg:w="2"/><text x="70.1940%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.9440%" y="373" width="0.1599%" height="15" fill="rgb(245,216,20)" fg:x="875" fg:w="2"/><text x="70.1940%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.9440%" y="357" width="0.1599%" height="15" fill="rgb(219,124,7)" fg:x="875" fg:w="2"/><text x="70.1940%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.9440%" y="341" width="0.1599%" height="15" fill="rgb(227,167,8)" fg:x="875" fg:w="2"/><text x="70.1940%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.0240%" y="325" width="0.0799%" height="15" fill="rgb(241,37,2)" fg:x="876" fg:w="1"/><text x="70.2740%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.0240%" y="309" width="0.0799%" height="15" fill="rgb(238,134,33)" fg:x="876" fg:w="1"/><text x="70.2740%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.80%)</title><rect x="69.3845%" y="533" width="0.7994%" height="15" fill="rgb(248,48,27)" fg:x="868" fg:w="10"/><text x="69.6345%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="69.9440%" y="517" width="0.2398%" height="15" fill="rgb(212,14,16)" fg:x="875" fg:w="3"/><text x="70.1940%" y="527.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="69.9440%" y="501" width="0.2398%" height="15" fill="rgb(217,205,37)" fg:x="875" fg:w="3"/><text x="70.1940%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="69.9440%" y="485" width="0.2398%" height="15" fill="rgb(233,185,47)" fg:x="875" fg:w="3"/><text x="70.1940%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.9440%" y="469" width="0.2398%" height="15" fill="rgb(244,88,8)" fg:x="875" fg:w="3"/><text x="70.1940%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.1039%" y="453" width="0.0799%" height="15" fill="rgb(213,0,20)" fg:x="877" fg:w="1"/><text x="70.3539%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (12 samples, 0.96%)</title><rect x="69.3046%" y="549" width="0.9592%" height="15" fill="rgb(238,159,36)" fg:x="867" fg:w="12"/><text x="69.5546%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="70.1839%" y="533" width="0.0799%" height="15" fill="rgb(253,173,17)" fg:x="878" fg:w="1"/><text x="70.4339%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.1839%" y="517" width="0.0799%" height="15" fill="rgb(221,23,28)" fg:x="878" fg:w="1"/><text x="70.4339%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.2638%" y="517" width="0.0799%" height="15" fill="rgb(218,113,15)" fg:x="879" fg:w="1"/><text x="70.5138%" y="527.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="70.3437%" y="517" width="0.0799%" height="15" fill="rgb(233,58,3)" fg:x="880" fg:w="1"/><text x="70.5937%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4237%" y="501" width="0.0799%" height="15" fill="rgb(250,46,35)" fg:x="881" fg:w="1"/><text x="70.6737%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4237%" y="485" width="0.0799%" height="15" fill="rgb(210,169,11)" fg:x="881" fg:w="1"/><text x="70.6737%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4237%" y="469" width="0.0799%" height="15" fill="rgb(246,88,19)" fg:x="881" fg:w="1"/><text x="70.6737%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.5036%" y="501" width="0.0799%" height="15" fill="rgb(206,81,49)" fg:x="882" fg:w="1"/><text x="70.7536%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.5835%" y="501" width="0.0799%" height="15" fill="rgb(232,144,18)" fg:x="883" fg:w="1"/><text x="70.8335%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.5835%" y="485" width="0.0799%" height="15" fill="rgb(235,2,27)" fg:x="883" fg:w="1"/><text x="70.8335%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.5835%" y="469" width="0.0799%" height="15" fill="rgb(239,157,39)" fg:x="883" fg:w="1"/><text x="70.8335%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.7434%" y="469" width="0.0799%" height="15" fill="rgb(220,11,17)" fg:x="885" fg:w="1"/><text x="70.9934%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.7434%" y="453" width="0.0799%" height="15" fill="rgb(243,94,50)" fg:x="885" fg:w="1"/><text x="70.9934%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.9033%" y="405" width="0.0799%" height="15" fill="rgb(218,22,0)" fg:x="887" fg:w="1"/><text x="71.1533%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.80%)</title><rect x="70.2638%" y="533" width="0.7994%" height="15" fill="rgb(249,70,21)" fg:x="879" fg:w="10"/><text x="70.5138%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="70.4237%" y="517" width="0.6395%" height="15" fill="rgb(245,111,46)" fg:x="881" fg:w="8"/><text x="70.6737%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="70.6635%" y="501" width="0.3997%" height="15" fill="rgb(244,183,12)" fg:x="884" fg:w="5"/><text x="70.9135%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="70.6635%" y="485" width="0.3997%" height="15" fill="rgb(207,117,0)" fg:x="884" fg:w="5"/><text x="70.9135%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="70.8233%" y="469" width="0.2398%" height="15" fill="rgb(206,20,43)" fg:x="886" fg:w="3"/><text x="71.0733%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.8233%" y="453" width="0.2398%" height="15" fill="rgb(221,104,11)" fg:x="886" fg:w="3"/><text x="71.0733%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.8233%" y="437" width="0.2398%" height="15" fill="rgb(254,36,50)" fg:x="886" fg:w="3"/><text x="71.0733%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.8233%" y="421" width="0.2398%" height="15" fill="rgb(252,17,15)" fg:x="886" fg:w="3"/><text x="71.0733%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.9832%" y="405" width="0.0799%" height="15" fill="rgb(219,129,43)" fg:x="888" fg:w="1"/><text x="71.2332%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.0631%" y="501" width="0.1599%" height="15" fill="rgb(205,34,45)" fg:x="889" fg:w="2"/><text x="71.3131%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.0631%" y="485" width="0.1599%" height="15" fill="rgb(251,201,32)" fg:x="889" fg:w="2"/><text x="71.3131%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.0631%" y="469" width="0.1599%" height="15" fill="rgb(205,56,0)" fg:x="889" fg:w="2"/><text x="71.3131%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="71.1431%" y="453" width="0.0799%" height="15" fill="rgb(211,193,27)" fg:x="890" fg:w="1"/><text x="71.3931%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.3030%" y="469" width="0.0799%" height="15" fill="rgb(231,100,42)" fg:x="892" fg:w="1"/><text x="71.5530%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.3829%" y="437" width="0.0799%" height="15" fill="rgb(245,85,27)" fg:x="893" fg:w="1"/><text x="71.6329%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.3829%" y="421" width="0.0799%" height="15" fill="rgb(241,76,24)" fg:x="893" fg:w="1"/><text x="71.6329%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.4628%" y="437" width="0.0799%" height="15" fill="rgb(249,157,15)" fg:x="894" fg:w="1"/><text x="71.7128%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.4628%" y="421" width="0.0799%" height="15" fill="rgb(222,218,25)" fg:x="894" fg:w="1"/><text x="71.7128%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="71.0631%" y="533" width="0.5596%" height="15" fill="rgb(252,156,52)" fg:x="889" fg:w="7"/><text x="71.3131%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="71.0631%" y="517" width="0.5596%" height="15" fill="rgb(211,185,7)" fg:x="889" fg:w="7"/><text x="71.3131%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="71.2230%" y="501" width="0.3997%" height="15" fill="rgb(234,108,24)" fg:x="891" fg:w="5"/><text x="71.4730%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="71.2230%" y="485" width="0.3997%" height="15" fill="rgb(227,218,2)" fg:x="891" fg:w="5"/><text x="71.4730%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="71.3829%" y="469" width="0.2398%" height="15" fill="rgb(224,0,36)" fg:x="893" fg:w="3"/><text x="71.6329%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="71.3829%" y="453" width="0.2398%" height="15" fill="rgb(233,201,10)" fg:x="893" fg:w="3"/><text x="71.6329%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.5428%" y="437" width="0.0799%" height="15" fill="rgb(252,209,14)" fg:x="895" fg:w="1"/><text x="71.7928%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5428%" y="421" width="0.0799%" height="15" fill="rgb(205,93,49)" fg:x="895" fg:w="1"/><text x="71.7928%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (897 samples, 71.70%)</title><rect x="0.0000%" y="645" width="71.7026%" height="15" fill="rgb(234,116,45)" fg:x="0" fg:w="897"/><text x="0.2500%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (897 samples, 71.70%)</title><rect x="0.0000%" y="629" width="71.7026%" height="15" fill="rgb(248,89,35)" fg:x="0" fg:w="897"/><text x="0.2500%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (897 samples, 71.70%)</title><rect x="0.0000%" y="613" width="71.7026%" height="15" fill="rgb(233,167,45)" fg:x="0" fg:w="897"/><text x="0.2500%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (307 samples, 24.54%)</title><rect x="47.1623%" y="597" width="24.5404%" height="15" fill="rgb(248,228,14)" fg:x="590" fg:w="307"/><text x="47.4123%" y="607.50">engine::session::Session::evaluate_and_..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (307 samples, 24.54%)</title><rect x="47.1623%" y="581" width="24.5404%" height="15" fill="rgb(246,91,14)" fg:x="590" fg:w="307"/><text x="47.4123%" y="591.50">engine::session::Session::evaluate_and_..</text></g><g><title>kernel::model::entry::EntryResolver::world (30 samples, 2.40%)</title><rect x="69.3046%" y="565" width="2.3981%" height="15" fill="rgb(227,142,5)" fg:x="867" fg:w="30"/><text x="69.5546%" y="575.50">ke..</text></g><g><title>kernel::model::entry::Entry::new (18 samples, 1.44%)</title><rect x="70.2638%" y="549" width="1.4388%" height="15" fill="rgb(221,63,33)" fg:x="879" fg:w="18"/><text x="70.5138%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="71.6227%" y="533" width="0.0799%" height="15" fill="rgb(233,49,0)" fg:x="896" fg:w="1"/><text x="71.8727%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="71.6227%" y="517" width="0.0799%" height="15" fill="rgb(251,115,38)" fg:x="896" fg:w="1"/><text x="71.8727%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7026%" y="581" width="0.0799%" height="15" fill="rgb(231,214,32)" fg:x="897" fg:w="1"/><text x="71.9526%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="71.7026%" y="597" width="0.2398%" height="15" fill="rgb(248,73,46)" fg:x="897" fg:w="3"/><text x="71.9526%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.7826%" y="581" width="0.1599%" height="15" fill="rgb(237,156,4)" fg:x="898" fg:w="2"/><text x="72.0326%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.8625%" y="565" width="0.0799%" height="15" fill="rgb(227,132,2)" fg:x="899" fg:w="1"/><text x="72.1125%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.8625%" y="549" width="0.0799%" height="15" fill="rgb(248,161,9)" fg:x="899" fg:w="1"/><text x="72.1125%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="71.9424%" y="581" width="0.0799%" height="15" fill="rgb(238,77,38)" fg:x="900" fg:w="1"/><text x="72.1924%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.9424%" y="565" width="0.0799%" height="15" fill="rgb(222,166,40)" fg:x="900" fg:w="1"/><text x="72.1924%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0224%" y="549" width="0.0799%" height="15" fill="rgb(214,168,45)" fg:x="901" fg:w="1"/><text x="72.2724%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2622%" y="485" width="0.0799%" height="15" fill="rgb(226,64,37)" fg:x="904" fg:w="1"/><text x="72.5122%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="72.3421%" y="485" width="0.2398%" height="15" fill="rgb(232,210,43)" fg:x="905" fg:w="3"/><text x="72.5921%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="72.1023%" y="517" width="0.5596%" height="15" fill="rgb(214,76,33)" fg:x="902" fg:w="7"/><text x="72.3523%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="72.1023%" y="501" width="0.5596%" height="15" fill="rgb(210,78,5)" fg:x="902" fg:w="7"/><text x="72.3523%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5819%" y="485" width="0.0799%" height="15" fill="rgb(211,107,37)" fg:x="908" fg:w="1"/><text x="72.8319%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5819%" y="469" width="0.0799%" height="15" fill="rgb(249,67,16)" fg:x="908" fg:w="1"/><text x="72.8319%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.5819%" y="453" width="0.0799%" height="15" fill="rgb(222,114,31)" fg:x="908" fg:w="1"/><text x="72.8319%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="72.6619%" y="517" width="0.3197%" height="15" fill="rgb(242,118,19)" fg:x="909" fg:w="4"/><text x="72.9119%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="72.7418%" y="501" width="0.2398%" height="15" fill="rgb(223,115,1)" fg:x="910" fg:w="3"/><text x="72.9918%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="72.7418%" y="485" width="0.2398%" height="15" fill="rgb(241,182,54)" fg:x="910" fg:w="3"/><text x="72.9918%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="72.8217%" y="469" width="0.1599%" height="15" fill="rgb(244,166,36)" fg:x="911" fg:w="2"/><text x="73.0717%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.9017%" y="453" width="0.0799%" height="15" fill="rgb(241,52,43)" fg:x="912" fg:w="1"/><text x="73.1517%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.9017%" y="437" width="0.0799%" height="15" fill="rgb(236,82,9)" fg:x="912" fg:w="1"/><text x="73.1517%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="71.9424%" y="597" width="1.1191%" height="15" fill="rgb(241,119,0)" fg:x="900" fg:w="14"/><text x="72.1924%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (13 samples, 1.04%)</title><rect x="72.0224%" y="581" width="1.0392%" height="15" fill="rgb(221,19,22)" fg:x="901" fg:w="13"/><text x="72.2724%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="72.0224%" y="565" width="1.0392%" height="15" fill="rgb(254,144,35)" fg:x="901" fg:w="13"/><text x="72.2724%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (12 samples, 0.96%)</title><rect x="72.1023%" y="549" width="0.9592%" height="15" fill="rgb(246,132,30)" fg:x="902" fg:w="12"/><text x="72.3523%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="72.1023%" y="533" width="0.9592%" height="15" fill="rgb(234,69,28)" fg:x="902" fg:w="12"/><text x="72.3523%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.9816%" y="517" width="0.0799%" height="15" fill="rgb(219,106,47)" fg:x="913" fg:w="1"/><text x="73.2316%" y="527.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.1415%" y="533" width="0.0799%" height="15" fill="rgb(218,79,24)" fg:x="915" fg:w="1"/><text x="73.3915%" y="543.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="73.3014%" y="469" width="0.1599%" height="15" fill="rgb(225,26,21)" fg:x="917" fg:w="2"/><text x="73.5514%" y="479.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="73.3813%" y="453" width="0.0799%" height="15" fill="rgb(217,68,49)" fg:x="918" fg:w="1"/><text x="73.6313%" y="463.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="73.2214%" y="485" width="0.3197%" height="15" fill="rgb(220,204,28)" fg:x="916" fg:w="4"/><text x="73.4714%" y="495.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="73.4612%" y="469" width="0.0799%" height="15" fill="rgb(237,208,43)" fg:x="919" fg:w="1"/><text x="73.7112%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (8 samples, 0.64%)</title><rect x="73.2214%" y="517" width="0.6395%" height="15" fill="rgb(213,97,42)" fg:x="916" fg:w="8"/><text x="73.4714%" y="527.50"></text></g><g><title>libloading::safe::Library::new (8 samples, 0.64%)</title><rect x="73.2214%" y="501" width="0.6395%" height="15" fill="rgb(238,96,52)" fg:x="916" fg:w="8"/><text x="73.4714%" y="511.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="73.5412%" y="485" width="0.3197%" height="15" fill="rgb(228,14,13)" fg:x="920" fg:w="4"/><text x="73.7912%" y="495.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="73.5412%" y="469" width="0.3197%" height="15" fill="rgb(219,123,13)" fg:x="920" fg:w="4"/><text x="73.7912%" y="479.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="73.5412%" y="453" width="0.3197%" height="15" fill="rgb(216,144,17)" fg:x="920" fg:w="4"/><text x="73.7912%" y="463.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="73.5412%" y="437" width="0.3197%" height="15" fill="rgb(230,228,29)" fg:x="920" fg:w="4"/><text x="73.7912%" y="447.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="73.5412%" y="421" width="0.3197%" height="15" fill="rgb(233,18,5)" fg:x="920" fg:w="4"/><text x="73.7912%" y="431.50"></text></g><g><title>engine::session::Session::initialize (10 samples, 0.80%)</title><rect x="73.1415%" y="549" width="0.7994%" height="15" fill="rgb(233,197,12)" fg:x="915" fg:w="10"/><text x="73.3915%" y="559.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (9 samples, 0.72%)</title><rect x="73.2214%" y="533" width="0.7194%" height="15" fill="rgb(234,140,29)" fg:x="916" fg:w="9"/><text x="73.4714%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="73.8609%" y="517" width="0.0799%" height="15" fill="rgb(233,113,19)" fg:x="924" fg:w="1"/><text x="74.1109%" y="527.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="73.8609%" y="501" width="0.0799%" height="15" fill="rgb(246,209,13)" fg:x="924" fg:w="1"/><text x="74.1109%" y="511.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (12 samples, 0.96%)</title><rect x="73.0616%" y="597" width="0.9592%" height="15" fill="rgb(242,79,54)" fg:x="914" fg:w="12"/><text x="73.3116%" y="607.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (12 samples, 0.96%)</title><rect x="73.0616%" y="581" width="0.9592%" height="15" fill="rgb(219,73,16)" fg:x="914" fg:w="12"/><text x="73.3116%" y="591.50"></text></g><g><title>engine::session::Session::new (11 samples, 0.88%)</title><rect x="73.1415%" y="565" width="0.8793%" height="15" fill="rgb(224,52,10)" fg:x="915" fg:w="11"/><text x="73.3915%" y="575.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="73.9408%" y="549" width="0.0799%" height="15" fill="rgb(237,179,5)" fg:x="925" fg:w="1"/><text x="74.1908%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="73.9408%" y="533" width="0.0799%" height="15" fill="rgb(231,20,6)" fg:x="925" fg:w="1"/><text x="74.1908%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="73.9408%" y="517" width="0.0799%" height="15" fill="rgb(253,171,45)" fg:x="925" fg:w="1"/><text x="74.1908%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="74.0208%" y="581" width="0.0799%" height="15" fill="rgb(230,75,49)" fg:x="926" fg:w="1"/><text x="74.2708%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="74.0208%" y="565" width="0.0799%" height="15" fill="rgb(216,83,46)" fg:x="926" fg:w="1"/><text x="74.2708%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.0208%" y="549" width="0.0799%" height="15" fill="rgb(236,56,9)" fg:x="926" fg:w="1"/><text x="74.2708%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="74.1807%" y="469" width="0.0799%" height="15" fill="rgb(215,28,34)" fg:x="928" fg:w="1"/><text x="74.4307%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.1807%" y="453" width="0.0799%" height="15" fill="rgb(230,222,20)" fg:x="928" fg:w="1"/><text x="74.4307%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.1807%" y="437" width="0.0799%" height="15" fill="rgb(235,209,51)" fg:x="928" fg:w="1"/><text x="74.4307%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.1807%" y="421" width="0.0799%" height="15" fill="rgb(235,167,1)" fg:x="928" fg:w="1"/><text x="74.4307%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="74.1807%" y="405" width="0.0799%" height="15" fill="rgb(248,220,0)" fg:x="928" fg:w="1"/><text x="74.4307%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.2606%" y="453" width="0.0799%" height="15" fill="rgb(239,0,18)" fg:x="929" fg:w="1"/><text x="74.5106%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="74.3405%" y="437" width="0.1599%" height="15" fill="rgb(229,179,11)" fg:x="930" fg:w="2"/><text x="74.5905%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="74.3405%" y="421" width="0.1599%" height="15" fill="rgb(226,116,53)" fg:x="930" fg:w="2"/><text x="74.5905%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="74.3405%" y="405" width="0.1599%" height="15" fill="rgb(218,1,49)" fg:x="930" fg:w="2"/><text x="74.5905%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="74.3405%" y="389" width="0.1599%" height="15" fill="rgb(208,184,47)" fg:x="930" fg:w="2"/><text x="74.5905%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.3405%" y="373" width="0.1599%" height="15" fill="rgb(238,174,3)" fg:x="930" fg:w="2"/><text x="74.5905%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.5004%" y="421" width="0.0799%" height="15" fill="rgb(247,188,6)" fg:x="932" fg:w="1"/><text x="74.7504%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="74.5803%" y="421" width="0.1599%" height="15" fill="rgb(211,165,46)" fg:x="933" fg:w="2"/><text x="74.8303%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.6603%" y="405" width="0.0799%" height="15" fill="rgb(222,190,10)" fg:x="934" fg:w="1"/><text x="74.9103%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.6603%" y="389" width="0.0799%" height="15" fill="rgb(206,185,3)" fg:x="934" fg:w="1"/><text x="74.9103%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="74.5004%" y="437" width="0.3197%" height="15" fill="rgb(244,125,37)" fg:x="932" fg:w="4"/><text x="74.7504%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.7402%" y="421" width="0.0799%" height="15" fill="rgb(211,43,7)" fg:x="935" fg:w="1"/><text x="74.9902%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="74.3405%" y="453" width="0.5596%" height="15" fill="rgb(250,41,42)" fg:x="930" fg:w="7"/><text x="74.5905%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.8201%" y="437" width="0.0799%" height="15" fill="rgb(254,54,42)" fg:x="936" fg:w="1"/><text x="75.0701%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="74.1007%" y="485" width="0.9592%" height="15" fill="rgb(213,71,43)" fg:x="927" fg:w="12"/><text x="74.3507%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="74.2606%" y="469" width="0.7994%" height="15" fill="rgb(249,3,44)" fg:x="929" fg:w="10"/><text x="74.5106%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.9001%" y="453" width="0.1599%" height="15" fill="rgb(229,80,41)" fg:x="937" fg:w="2"/><text x="75.1501%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.9001%" y="437" width="0.1599%" height="15" fill="rgb(231,25,28)" fg:x="937" fg:w="2"/><text x="75.1501%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.9800%" y="421" width="0.0799%" height="15" fill="rgb(208,79,48)" fg:x="938" fg:w="1"/><text x="75.2300%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.9800%" y="405" width="0.0799%" height="15" fill="rgb(207,196,38)" fg:x="938" fg:w="1"/><text x="75.2300%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.9800%" y="389" width="0.0799%" height="15" fill="rgb(228,105,49)" fg:x="938" fg:w="1"/><text x="75.2300%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.9800%" y="373" width="0.0799%" height="15" fill="rgb(237,99,15)" fg:x="938" fg:w="1"/><text x="75.2300%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.0600%" y="453" width="0.0799%" height="15" fill="rgb(224,207,46)" fg:x="939" fg:w="1"/><text x="75.3100%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.1399%" y="453" width="0.0799%" height="15" fill="rgb(249,117,50)" fg:x="940" fg:w="1"/><text x="75.3899%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.1399%" y="437" width="0.0799%" height="15" fill="rgb(248,17,13)" fg:x="940" fg:w="1"/><text x="75.3899%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="75.2198%" y="437" width="0.2398%" height="15" fill="rgb(228,187,36)" fg:x="941" fg:w="3"/><text x="75.4698%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.4596%" y="405" width="0.0799%" height="15" fill="rgb(234,132,20)" fg:x="944" fg:w="1"/><text x="75.7096%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="75.0600%" y="485" width="0.5596%" height="15" fill="rgb(209,170,46)" fg:x="939" fg:w="7"/><text x="75.3100%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="75.0600%" y="469" width="0.5596%" height="15" fill="rgb(237,23,19)" fg:x="939" fg:w="7"/><text x="75.3100%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="75.2198%" y="453" width="0.3997%" height="15" fill="rgb(227,21,26)" fg:x="941" fg:w="5"/><text x="75.4698%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.4596%" y="437" width="0.1599%" height="15" fill="rgb(222,220,48)" fg:x="944" fg:w="2"/><text x="75.7096%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.4596%" y="421" width="0.1599%" height="15" fill="rgb(214,9,16)" fg:x="944" fg:w="2"/><text x="75.7096%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="75.5396%" y="405" width="0.0799%" height="15" fill="rgb(209,73,30)" fg:x="945" fg:w="1"/><text x="75.7896%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.5396%" y="389" width="0.0799%" height="15" fill="rgb(207,20,33)" fg:x="945" fg:w="1"/><text x="75.7896%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5396%" y="373" width="0.0799%" height="15" fill="rgb(219,153,12)" fg:x="945" fg:w="1"/><text x="75.7896%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.6195%" y="437" width="0.1599%" height="15" fill="rgb(235,97,25)" fg:x="946" fg:w="2"/><text x="75.8695%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.6994%" y="421" width="0.0799%" height="15" fill="rgb(244,30,34)" fg:x="947" fg:w="1"/><text x="75.9494%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="75.6994%" y="405" width="0.0799%" height="15" fill="rgb(214,106,45)" fg:x="947" fg:w="1"/><text x="75.9494%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="75.7794%" y="437" width="0.0799%" height="15" fill="rgb(226,41,9)" fg:x="948" fg:w="1"/><text x="76.0294%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.7794%" y="421" width="0.0799%" height="15" fill="rgb(253,139,29)" fg:x="948" fg:w="1"/><text x="76.0294%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="75.8593%" y="437" width="0.0799%" height="15" fill="rgb(213,205,39)" fg:x="949" fg:w="1"/><text x="76.1093%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="75.8593%" y="421" width="0.0799%" height="15" fill="rgb(209,27,10)" fg:x="949" fg:w="1"/><text x="76.1093%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9392%" y="389" width="0.0799%" height="15" fill="rgb(249,142,16)" fg:x="950" fg:w="1"/><text x="76.1892%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9392%" y="373" width="0.0799%" height="15" fill="rgb(242,65,12)" fg:x="950" fg:w="1"/><text x="76.1892%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9392%" y="357" width="0.0799%" height="15" fill="rgb(232,48,10)" fg:x="950" fg:w="1"/><text x="76.1892%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.0192%" y="389" width="0.0799%" height="15" fill="rgb(253,67,19)" fg:x="951" fg:w="1"/><text x="76.2692%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.0192%" y="373" width="0.0799%" height="15" fill="rgb(227,93,29)" fg:x="951" fg:w="1"/><text x="76.2692%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.0192%" y="357" width="0.0799%" height="15" fill="rgb(226,189,53)" fg:x="951" fg:w="1"/><text x="76.2692%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.0192%" y="341" width="0.0799%" height="15" fill="rgb(223,224,1)" fg:x="951" fg:w="1"/><text x="76.2692%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.1791%" y="373" width="0.0799%" height="15" fill="rgb(221,84,32)" fg:x="953" fg:w="1"/><text x="76.4291%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="76.2590%" y="357" width="0.2398%" height="15" fill="rgb(214,189,28)" fg:x="954" fg:w="3"/><text x="76.5090%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.3389%" y="341" width="0.1599%" height="15" fill="rgb(234,7,52)" fg:x="955" fg:w="2"/><text x="76.5889%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4189%" y="325" width="0.0799%" height="15" fill="rgb(249,73,31)" fg:x="956" fg:w="1"/><text x="76.6689%" y="335.50"></text></g><g><title>engine::session::Session::flush (31 samples, 2.48%)</title><rect x="74.1007%" y="581" width="2.4780%" height="15" fill="rgb(253,153,41)" fg:x="927" fg:w="31"/><text x="74.3507%" y="591.50">en..</text></g><g><title>engine::session::state::State::close (31 samples, 2.48%)</title><rect x="74.1007%" y="565" width="2.4780%" height="15" fill="rgb(249,52,34)" fg:x="927" fg:w="31"/><text x="74.3507%" y="575.50">en..</text></g><g><title>engine::session::state::State::flush_entities (31 samples, 2.48%)</title><rect x="74.1007%" y="549" width="2.4780%" height="15" fill="rgb(236,177,47)" fg:x="927" fg:w="31"/><text x="74.3507%" y="559.50">en..</text></g><g><title>core::iter::adapters::try_process (31 samples, 2.48%)</title><rect x="74.1007%" y="533" width="2.4780%" height="15" fill="rgb(252,185,45)" fg:x="927" fg:w="31"/><text x="74.3507%" y="543.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 2.48%)</title><rect x="74.1007%" y="517" width="2.4780%" height="15" fill="rgb(251,15,30)" fg:x="927" fg:w="31"/><text x="74.3507%" y="527.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (31 samples, 2.48%)</title><rect x="74.1007%" y="501" width="2.4780%" height="15" fill="rgb(233,31,4)" fg:x="927" fg:w="31"/><text x="74.3507%" y="511.50">en..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.96%)</title><rect x="75.6195%" y="485" width="0.9592%" height="15" fill="rgb(254,44,24)" fg:x="946" fg:w="12"/><text x="75.8695%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="75.6195%" y="469" width="0.9592%" height="15" fill="rgb(218,54,1)" fg:x="946" fg:w="12"/><text x="75.8695%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.96%)</title><rect x="75.6195%" y="453" width="0.9592%" height="15" fill="rgb(243,209,39)" fg:x="946" fg:w="12"/><text x="75.8695%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="75.9392%" y="437" width="0.6395%" height="15" fill="rgb(206,75,33)" fg:x="950" fg:w="8"/><text x="76.1892%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="75.9392%" y="421" width="0.6395%" height="15" fill="rgb(223,108,18)" fg:x="950" fg:w="8"/><text x="76.1892%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="75.9392%" y="405" width="0.6395%" height="15" fill="rgb(244,89,31)" fg:x="950" fg:w="8"/><text x="76.1892%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="76.0991%" y="389" width="0.4796%" height="15" fill="rgb(222,167,27)" fg:x="952" fg:w="6"/><text x="76.3491%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="76.2590%" y="373" width="0.3197%" height="15" fill="rgb(247,41,16)" fg:x="954" fg:w="4"/><text x="76.5090%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.4988%" y="357" width="0.0799%" height="15" fill="rgb(233,168,40)" fg:x="957" fg:w="1"/><text x="76.7488%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.4988%" y="341" width="0.0799%" height="15" fill="rgb(205,211,8)" fg:x="957" fg:w="1"/><text x="76.7488%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.5787%" y="533" width="0.0799%" height="15" fill="rgb(238,105,11)" fg:x="958" fg:w="1"/><text x="76.8287%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.5787%" y="517" width="0.0799%" height="15" fill="rgb(223,142,52)" fg:x="958" fg:w="1"/><text x="76.8287%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.5787%" y="501" width="0.0799%" height="15" fill="rgb(238,51,33)" fg:x="958" fg:w="1"/><text x="76.8287%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5787%" y="485" width="0.0799%" height="15" fill="rgb(231,188,43)" fg:x="958" fg:w="1"/><text x="76.8287%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.5787%" y="469" width="0.0799%" height="15" fill="rgb(216,92,17)" fg:x="958" fg:w="1"/><text x="76.8287%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5787%" y="453" width="0.0799%" height="15" fill="rgb(228,2,40)" fg:x="958" fg:w="1"/><text x="76.8287%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.5787%" y="437" width="0.0799%" height="15" fill="rgb(226,73,15)" fg:x="958" fg:w="1"/><text x="76.8287%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5787%" y="421" width="0.0799%" height="15" fill="rgb(227,66,46)" fg:x="958" fg:w="1"/><text x="76.8287%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="76.6587%" y="485" width="0.1599%" height="15" fill="rgb(209,71,6)" fg:x="959" fg:w="2"/><text x="76.9087%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="76.7386%" y="469" width="0.0799%" height="15" fill="rgb(246,100,25)" fg:x="960" fg:w="1"/><text x="76.9886%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="76.7386%" y="453" width="0.0799%" height="15" fill="rgb(248,185,27)" fg:x="960" fg:w="1"/><text x="76.9886%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.7386%" y="437" width="0.0799%" height="15" fill="rgb(225,118,47)" fg:x="960" fg:w="1"/><text x="76.9886%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="76.7386%" y="421" width="0.0799%" height="15" fill="rgb(220,185,44)" fg:x="960" fg:w="1"/><text x="76.9886%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.7386%" y="405" width="0.0799%" height="15" fill="rgb(227,95,24)" fg:x="960" fg:w="1"/><text x="76.9886%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="76.7386%" y="389" width="0.0799%" height="15" fill="rgb(252,84,24)" fg:x="960" fg:w="1"/><text x="76.9886%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7386%" y="373" width="0.0799%" height="15" fill="rgb(240,34,44)" fg:x="960" fg:w="1"/><text x="76.9886%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7386%" y="357" width="0.0799%" height="15" fill="rgb(209,72,54)" fg:x="960" fg:w="1"/><text x="76.9886%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7386%" y="341" width="0.0799%" height="15" fill="rgb(226,19,45)" fg:x="960" fg:w="1"/><text x="76.9886%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="76.6587%" y="533" width="0.2398%" height="15" fill="rgb(246,7,45)" fg:x="959" fg:w="3"/><text x="76.9087%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="76.6587%" y="517" width="0.2398%" height="15" fill="rgb(225,45,2)" fg:x="959" fg:w="3"/><text x="76.9087%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="76.6587%" y="501" width="0.2398%" height="15" fill="rgb(221,80,29)" fg:x="959" fg:w="3"/><text x="76.9087%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="76.8185%" y="485" width="0.0799%" height="15" fill="rgb(228,11,19)" fg:x="961" fg:w="1"/><text x="77.0685%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.8185%" y="469" width="0.0799%" height="15" fill="rgb(243,17,21)" fg:x="961" fg:w="1"/><text x="77.0685%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8185%" y="453" width="0.0799%" height="15" fill="rgb(243,88,8)" fg:x="961" fg:w="1"/><text x="77.0685%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="76.8985%" y="533" width="0.0799%" height="15" fill="rgb(214,17,9)" fg:x="962" fg:w="1"/><text x="77.1485%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.8985%" y="517" width="0.0799%" height="15" fill="rgb(232,169,15)" fg:x="962" fg:w="1"/><text x="77.1485%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.9784%" y="501" width="0.0799%" height="15" fill="rgb(232,86,53)" fg:x="963" fg:w="1"/><text x="77.2284%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.9784%" y="485" width="0.0799%" height="15" fill="rgb(222,100,4)" fg:x="963" fg:w="1"/><text x="77.2284%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.9784%" y="469" width="0.0799%" height="15" fill="rgb(253,151,38)" fg:x="963" fg:w="1"/><text x="77.2284%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9784%" y="453" width="0.0799%" height="15" fill="rgb(238,215,29)" fg:x="963" fg:w="1"/><text x="77.2284%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="76.5787%" y="549" width="0.5596%" height="15" fill="rgb(205,128,53)" fg:x="958" fg:w="7"/><text x="76.8287%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="76.9784%" y="533" width="0.1599%" height="15" fill="rgb(248,183,14)" fg:x="963" fg:w="2"/><text x="77.2284%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="76.9784%" y="517" width="0.1599%" height="15" fill="rgb(244,172,35)" fg:x="963" fg:w="2"/><text x="77.2284%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.0584%" y="501" width="0.0799%" height="15" fill="rgb(234,93,19)" fg:x="964" fg:w="1"/><text x="77.3084%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.0584%" y="485" width="0.0799%" height="15" fill="rgb(227,109,7)" fg:x="964" fg:w="1"/><text x="77.3084%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.0584%" y="469" width="0.0799%" height="15" fill="rgb(233,136,54)" fg:x="964" fg:w="1"/><text x="77.3084%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.0584%" y="453" width="0.0799%" height="15" fill="rgb(233,19,40)" fg:x="964" fg:w="1"/><text x="77.3084%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.0584%" y="437" width="0.0799%" height="15" fill="rgb(247,41,18)" fg:x="964" fg:w="1"/><text x="77.3084%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="76.5787%" y="565" width="0.7194%" height="15" fill="rgb(220,34,34)" fg:x="958" fg:w="9"/><text x="76.8287%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="77.1383%" y="549" width="0.1599%" height="15" fill="rgb(222,135,32)" fg:x="965" fg:w="2"/><text x="77.3883%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.1383%" y="533" width="0.1599%" height="15" fill="rgb(214,80,19)" fg:x="965" fg:w="2"/><text x="77.3883%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.2182%" y="517" width="0.0799%" height="15" fill="rgb(234,54,46)" fg:x="966" fg:w="1"/><text x="77.4682%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.2182%" y="501" width="0.0799%" height="15" fill="rgb(251,48,23)" fg:x="966" fg:w="1"/><text x="77.4682%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.2182%" y="485" width="0.0799%" height="15" fill="rgb(254,109,52)" fg:x="966" fg:w="1"/><text x="77.4682%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2182%" y="469" width="0.0799%" height="15" fill="rgb(240,186,19)" fg:x="966" fg:w="1"/><text x="77.4682%" y="479.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="77.2982%" y="549" width="0.0799%" height="15" fill="rgb(246,187,17)" fg:x="967" fg:w="1"/><text x="77.5482%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.3781%" y="549" width="0.0799%" height="15" fill="rgb(212,21,5)" fg:x="968" fg:w="1"/><text x="77.6281%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.3781%" y="533" width="0.0799%" height="15" fill="rgb(225,185,18)" fg:x="968" fg:w="1"/><text x="77.6281%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.3781%" y="517" width="0.0799%" height="15" fill="rgb(245,114,17)" fg:x="968" fg:w="1"/><text x="77.6281%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.3781%" y="501" width="0.0799%" height="15" fill="rgb(223,164,24)" fg:x="968" fg:w="1"/><text x="77.6281%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3781%" y="485" width="0.0799%" height="15" fill="rgb(211,228,3)" fg:x="968" fg:w="1"/><text x="77.6281%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3781%" y="469" width="0.0799%" height="15" fill="rgb(223,16,38)" fg:x="968" fg:w="1"/><text x="77.6281%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3781%" y="453" width="0.0799%" height="15" fill="rgb(207,31,54)" fg:x="968" fg:w="1"/><text x="77.6281%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.4580%" y="549" width="0.0799%" height="15" fill="rgb(220,39,11)" fg:x="969" fg:w="1"/><text x="77.7080%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="77.4580%" y="533" width="0.0799%" height="15" fill="rgb(235,185,0)" fg:x="969" fg:w="1"/><text x="77.7080%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.4580%" y="517" width="0.0799%" height="15" fill="rgb(249,39,18)" fg:x="969" fg:w="1"/><text x="77.7080%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.4580%" y="501" width="0.0799%" height="15" fill="rgb(240,110,33)" fg:x="969" fg:w="1"/><text x="77.7080%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="77.4580%" y="485" width="0.0799%" height="15" fill="rgb(210,92,42)" fg:x="969" fg:w="1"/><text x="77.7080%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.4580%" y="469" width="0.0799%" height="15" fill="rgb(218,215,28)" fg:x="969" fg:w="1"/><text x="77.7080%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.4580%" y="453" width="0.0799%" height="15" fill="rgb(238,215,36)" fg:x="969" fg:w="1"/><text x="77.7080%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="77.5380%" y="533" width="0.0799%" height="15" fill="rgb(220,31,10)" fg:x="970" fg:w="1"/><text x="77.7880%" y="543.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="77.5380%" y="549" width="0.1599%" height="15" fill="rgb(212,93,14)" fg:x="970" fg:w="2"/><text x="77.7880%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.6179%" y="533" width="0.0799%" height="15" fill="rgb(254,207,2)" fg:x="971" fg:w="1"/><text x="77.8679%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.6179%" y="517" width="0.0799%" height="15" fill="rgb(205,57,44)" fg:x="971" fg:w="1"/><text x="77.8679%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.6179%" y="501" width="0.0799%" height="15" fill="rgb(226,151,19)" fg:x="971" fg:w="1"/><text x="77.8679%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.6179%" y="485" width="0.0799%" height="15" fill="rgb(230,72,30)" fg:x="971" fg:w="1"/><text x="77.8679%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.6179%" y="469" width="0.0799%" height="15" fill="rgb(244,0,8)" fg:x="971" fg:w="1"/><text x="77.8679%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6179%" y="453" width="0.0799%" height="15" fill="rgb(230,192,6)" fg:x="971" fg:w="1"/><text x="77.8679%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.6179%" y="437" width="0.0799%" height="15" fill="rgb(233,207,13)" fg:x="971" fg:w="1"/><text x="77.8679%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.6179%" y="421" width="0.0799%" height="15" fill="rgb(206,227,7)" fg:x="971" fg:w="1"/><text x="77.8679%" y="431.50"></text></g><g><title>plugins_core::build::Build::holding (15 samples, 1.20%)</title><rect x="76.5787%" y="581" width="1.1990%" height="15" fill="rgb(213,217,25)" fg:x="958" fg:w="15"/><text x="76.8287%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="77.2982%" y="565" width="0.4796%" height="15" fill="rgb(249,75,4)" fg:x="967" fg:w="6"/><text x="77.5482%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="77.6978%" y="549" width="0.0799%" height="15" fill="rgb(225,114,18)" fg:x="972" fg:w="1"/><text x="77.9478%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="77.6978%" y="533" width="0.0799%" height="15" fill="rgb(211,162,40)" fg:x="972" fg:w="1"/><text x="77.9478%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.7778%" y="549" width="0.0799%" height="15" fill="rgb(206,49,29)" fg:x="973" fg:w="1"/><text x="78.0278%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.7778%" y="533" width="0.0799%" height="15" fill="rgb(244,8,6)" fg:x="973" fg:w="1"/><text x="78.0278%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7778%" y="517" width="0.0799%" height="15" fill="rgb(231,194,28)" fg:x="973" fg:w="1"/><text x="78.0278%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7778%" y="501" width="0.0799%" height="15" fill="rgb(210,69,5)" fg:x="973" fg:w="1"/><text x="78.0278%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="77.8577%" y="549" width="0.0799%" height="15" fill="rgb(216,186,12)" fg:x="974" fg:w="1"/><text x="78.1077%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.8577%" y="533" width="0.0799%" height="15" fill="rgb(238,61,15)" fg:x="974" fg:w="1"/><text x="78.1077%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="77.9376%" y="549" width="0.0799%" height="15" fill="rgb(226,104,1)" fg:x="975" fg:w="1"/><text x="78.1876%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="77.9376%" y="533" width="0.0799%" height="15" fill="rgb(229,128,15)" fg:x="975" fg:w="1"/><text x="78.1876%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="77.9376%" y="517" width="0.0799%" height="15" fill="rgb(247,110,15)" fg:x="975" fg:w="1"/><text x="78.1876%" y="527.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="77.9376%" y="501" width="0.0799%" height="15" fill="rgb(210,74,48)" fg:x="975" fg:w="1"/><text x="78.1876%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.9376%" y="485" width="0.0799%" height="15" fill="rgb(246,121,10)" fg:x="975" fg:w="1"/><text x="78.1876%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="77.9376%" y="469" width="0.0799%" height="15" fill="rgb(214,156,37)" fg:x="975" fg:w="1"/><text x="78.1876%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.9376%" y="453" width="0.0799%" height="15" fill="rgb(214,210,34)" fg:x="975" fg:w="1"/><text x="78.1876%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="77.9376%" y="437" width="0.0799%" height="15" fill="rgb(237,93,35)" fg:x="975" fg:w="1"/><text x="78.1876%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.0176%" y="533" width="0.0799%" height="15" fill="rgb(206,36,8)" fg:x="976" fg:w="1"/><text x="78.2676%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.0176%" y="517" width="0.0799%" height="15" fill="rgb(208,151,12)" fg:x="976" fg:w="1"/><text x="78.2676%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0176%" y="501" width="0.0799%" height="15" fill="rgb(225,133,52)" fg:x="976" fg:w="1"/><text x="78.2676%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.0975%" y="325" width="0.0799%" height="15" fill="rgb(231,71,53)" fg:x="977" fg:w="1"/><text x="78.3475%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.0975%" y="309" width="0.0799%" height="15" fill="rgb(243,76,21)" fg:x="977" fg:w="1"/><text x="78.3475%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.0975%" y="293" width="0.0799%" height="15" fill="rgb(252,144,3)" fg:x="977" fg:w="1"/><text x="78.3475%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0975%" y="277" width="0.0799%" height="15" fill="rgb(231,199,10)" fg:x="977" fg:w="1"/><text x="78.3475%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="78.0176%" y="549" width="0.2398%" height="15" fill="rgb(215,18,11)" fg:x="976" fg:w="3"/><text x="78.2676%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="78.0975%" y="533" width="0.1599%" height="15" fill="rgb(241,65,24)" fg:x="977" fg:w="2"/><text x="78.3475%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.0975%" y="517" width="0.1599%" height="15" fill="rgb(251,192,38)" fg:x="977" fg:w="2"/><text x="78.3475%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.0975%" y="501" width="0.1599%" height="15" fill="rgb(205,9,35)" fg:x="977" fg:w="2"/><text x="78.3475%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.0975%" y="485" width="0.1599%" height="15" fill="rgb(229,225,49)" fg:x="977" fg:w="2"/><text x="78.3475%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.0975%" y="469" width="0.1599%" height="15" fill="rgb(207,125,39)" fg:x="977" fg:w="2"/><text x="78.3475%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="78.0975%" y="453" width="0.1599%" height="15" fill="rgb(222,78,19)" fg:x="977" fg:w="2"/><text x="78.3475%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="78.0975%" y="437" width="0.1599%" height="15" fill="rgb(248,207,20)" fg:x="977" fg:w="2"/><text x="78.3475%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="78.0975%" y="421" width="0.1599%" height="15" fill="rgb(205,103,49)" fg:x="977" fg:w="2"/><text x="78.3475%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="78.0975%" y="405" width="0.1599%" height="15" fill="rgb(216,42,28)" fg:x="977" fg:w="2"/><text x="78.3475%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="78.0975%" y="389" width="0.1599%" height="15" fill="rgb(213,205,53)" fg:x="977" fg:w="2"/><text x="78.3475%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="78.0975%" y="373" width="0.1599%" height="15" fill="rgb(239,140,53)" fg:x="977" fg:w="2"/><text x="78.3475%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="78.0975%" y="357" width="0.1599%" height="15" fill="rgb(248,95,9)" fg:x="977" fg:w="2"/><text x="78.3475%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="78.0975%" y="341" width="0.1599%" height="15" fill="rgb(254,58,47)" fg:x="977" fg:w="2"/><text x="78.3475%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="78.1775%" y="325" width="0.0799%" height="15" fill="rgb(234,227,14)" fg:x="978" fg:w="1"/><text x="78.4275%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="78.1775%" y="309" width="0.0799%" height="15" fill="rgb(205,192,45)" fg:x="978" fg:w="1"/><text x="78.4275%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.2574%" y="517" width="0.0799%" height="15" fill="rgb(253,187,31)" fg:x="979" fg:w="1"/><text x="78.5074%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.2574%" y="501" width="0.0799%" height="15" fill="rgb(222,6,32)" fg:x="979" fg:w="1"/><text x="78.5074%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2574%" y="485" width="0.0799%" height="15" fill="rgb(249,190,19)" fg:x="979" fg:w="1"/><text x="78.5074%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2574%" y="469" width="0.0799%" height="15" fill="rgb(251,28,20)" fg:x="979" fg:w="1"/><text x="78.5074%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.2574%" y="453" width="0.0799%" height="15" fill="rgb(210,223,40)" fg:x="979" fg:w="1"/><text x="78.5074%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2574%" y="437" width="0.0799%" height="15" fill="rgb(216,137,22)" fg:x="979" fg:w="1"/><text x="78.5074%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2574%" y="421" width="0.0799%" height="15" fill="rgb(247,39,34)" fg:x="979" fg:w="1"/><text x="78.5074%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.3373%" y="517" width="0.0799%" height="15" fill="rgb(239,43,50)" fg:x="980" fg:w="1"/><text x="78.5873%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.3373%" y="501" width="0.0799%" height="15" fill="rgb(241,212,9)" fg:x="980" fg:w="1"/><text x="78.5873%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3373%" y="485" width="0.0799%" height="15" fill="rgb(205,8,2)" fg:x="980" fg:w="1"/><text x="78.5873%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3373%" y="469" width="0.0799%" height="15" fill="rgb(217,173,54)" fg:x="980" fg:w="1"/><text x="78.5873%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3373%" y="453" width="0.0799%" height="15" fill="rgb(208,149,52)" fg:x="980" fg:w="1"/><text x="78.5873%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.3373%" y="437" width="0.0799%" height="15" fill="rgb(239,99,40)" fg:x="980" fg:w="1"/><text x="78.5873%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.3373%" y="421" width="0.0799%" height="15" fill="rgb(233,214,26)" fg:x="980" fg:w="1"/><text x="78.5873%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.3373%" y="405" width="0.0799%" height="15" fill="rgb(231,225,37)" fg:x="980" fg:w="1"/><text x="78.5873%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.3373%" y="389" width="0.0799%" height="15" fill="rgb(252,55,35)" fg:x="980" fg:w="1"/><text x="78.5873%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.3373%" y="373" width="0.0799%" height="15" fill="rgb(239,43,18)" fg:x="980" fg:w="1"/><text x="78.5873%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.3373%" y="357" width="0.0799%" height="15" fill="rgb(251,125,49)" fg:x="980" fg:w="1"/><text x="78.5873%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.3373%" y="341" width="0.0799%" height="15" fill="rgb(212,83,54)" fg:x="980" fg:w="1"/><text x="78.5873%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.3373%" y="325" width="0.0799%" height="15" fill="rgb(250,75,6)" fg:x="980" fg:w="1"/><text x="78.5873%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="78.3373%" y="309" width="0.0799%" height="15" fill="rgb(252,36,40)" fg:x="980" fg:w="1"/><text x="78.5873%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="78.3373%" y="293" width="0.0799%" height="15" fill="rgb(230,91,51)" fg:x="980" fg:w="1"/><text x="78.5873%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="77.7778%" y="565" width="0.7194%" height="15" fill="rgb(212,92,28)" fg:x="973" fg:w="9"/><text x="78.0278%" y="575.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="78.2574%" y="549" width="0.2398%" height="15" fill="rgb(227,13,22)" fg:x="979" fg:w="3"/><text x="78.5074%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="78.2574%" y="533" width="0.2398%" height="15" fill="rgb(239,204,32)" fg:x="979" fg:w="3"/><text x="78.5074%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.4173%" y="517" width="0.0799%" height="15" fill="rgb(228,49,41)" fg:x="981" fg:w="1"/><text x="78.6673%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.4173%" y="501" width="0.0799%" height="15" fill="rgb(206,95,6)" fg:x="981" fg:w="1"/><text x="78.6673%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.4173%" y="485" width="0.0799%" height="15" fill="rgb(251,20,14)" fg:x="981" fg:w="1"/><text x="78.6673%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.4173%" y="469" width="0.0799%" height="15" fill="rgb(214,99,28)" fg:x="981" fg:w="1"/><text x="78.6673%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="78.4173%" y="453" width="0.0799%" height="15" fill="rgb(239,122,54)" fg:x="981" fg:w="1"/><text x="78.6673%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.4173%" y="437" width="0.0799%" height="15" fill="rgb(218,217,46)" fg:x="981" fg:w="1"/><text x="78.6673%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.4173%" y="421" width="0.0799%" height="15" fill="rgb(249,106,28)" fg:x="981" fg:w="1"/><text x="78.6673%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.4173%" y="405" width="0.0799%" height="15" fill="rgb(250,158,18)" fg:x="981" fg:w="1"/><text x="78.6673%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="78.4173%" y="389" width="0.0799%" height="15" fill="rgb(226,137,29)" fg:x="981" fg:w="1"/><text x="78.6673%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="78.4173%" y="373" width="0.0799%" height="15" fill="rgb(210,188,1)" fg:x="981" fg:w="1"/><text x="78.6673%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4173%" y="357" width="0.0799%" height="15" fill="rgb(227,84,42)" fg:x="981" fg:w="1"/><text x="78.6673%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4173%" y="341" width="0.0799%" height="15" fill="rgb(222,147,48)" fg:x="981" fg:w="1"/><text x="78.6673%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.4173%" y="325" width="0.0799%" height="15" fill="rgb(241,150,43)" fg:x="981" fg:w="1"/><text x="78.6673%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.4173%" y="309" width="0.0799%" height="15" fill="rgb(206,139,52)" fg:x="981" fg:w="1"/><text x="78.6673%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.4173%" y="293" width="0.0799%" height="15" fill="rgb(230,63,14)" fg:x="981" fg:w="1"/><text x="78.6673%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.4173%" y="277" width="0.0799%" height="15" fill="rgb(247,8,20)" fg:x="981" fg:w="1"/><text x="78.6673%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.4173%" y="261" width="0.0799%" height="15" fill="rgb(213,115,4)" fg:x="981" fg:w="1"/><text x="78.6673%" y="271.50"></text></g><g><title>plugins_core::build::Build::into_entry (10 samples, 0.80%)</title><rect x="77.7778%" y="581" width="0.7994%" height="15" fill="rgb(241,79,49)" fg:x="973" fg:w="10"/><text x="78.0278%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.4972%" y="565" width="0.0799%" height="15" fill="rgb(222,42,35)" fg:x="982" fg:w="1"/><text x="78.7472%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.4972%" y="549" width="0.0799%" height="15" fill="rgb(247,59,23)" fg:x="982" fg:w="1"/><text x="78.7472%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.4972%" y="533" width="0.0799%" height="15" fill="rgb(247,93,18)" fg:x="982" fg:w="1"/><text x="78.7472%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.4972%" y="517" width="0.0799%" height="15" fill="rgb(249,107,47)" fg:x="982" fg:w="1"/><text x="78.7472%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.4972%" y="501" width="0.0799%" height="15" fill="rgb(219,27,1)" fg:x="982" fg:w="1"/><text x="78.7472%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="78.5771%" y="581" width="0.0799%" height="15" fill="rgb(217,82,32)" fg:x="983" fg:w="1"/><text x="78.8271%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="78.5771%" y="565" width="0.0799%" height="15" fill="rgb(250,129,47)" fg:x="983" fg:w="1"/><text x="78.8271%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.5771%" y="549" width="0.0799%" height="15" fill="rgb(253,88,35)" fg:x="983" fg:w="1"/><text x="78.8271%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="78.6571%" y="565" width="0.0799%" height="15" fill="rgb(245,221,14)" fg:x="984" fg:w="1"/><text x="78.9071%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.6571%" y="549" width="0.0799%" height="15" fill="rgb(217,119,54)" fg:x="984" fg:w="1"/><text x="78.9071%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.6571%" y="533" width="0.0799%" height="15" fill="rgb(247,128,31)" fg:x="984" fg:w="1"/><text x="78.9071%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="78.6571%" y="517" width="0.0799%" height="15" fill="rgb(211,99,22)" fg:x="984" fg:w="1"/><text x="78.9071%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.6571%" y="501" width="0.0799%" height="15" fill="rgb(212,20,17)" fg:x="984" fg:w="1"/><text x="78.9071%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="78.6571%" y="485" width="0.0799%" height="15" fill="rgb(209,159,29)" fg:x="984" fg:w="1"/><text x="78.9071%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="78.7370%" y="565" width="0.0799%" height="15" fill="rgb(222,177,53)" fg:x="985" fg:w="1"/><text x="78.9870%" y="575.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="78.7370%" y="549" width="0.0799%" height="15" fill="rgb(234,46,43)" fg:x="985" fg:w="1"/><text x="78.9870%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.7370%" y="533" width="0.0799%" height="15" fill="rgb(208,108,14)" fg:x="985" fg:w="1"/><text x="78.9870%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.7370%" y="517" width="0.0799%" height="15" fill="rgb(226,78,53)" fg:x="985" fg:w="1"/><text x="78.9870%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="78.7370%" y="501" width="0.0799%" height="15" fill="rgb(230,20,41)" fg:x="985" fg:w="1"/><text x="78.9870%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.7370%" y="485" width="0.0799%" height="15" fill="rgb(213,195,35)" fg:x="985" fg:w="1"/><text x="78.9870%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="78.8169%" y="517" width="0.0799%" height="15" fill="rgb(242,62,36)" fg:x="986" fg:w="1"/><text x="79.0669%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.8169%" y="501" width="0.0799%" height="15" fill="rgb(222,210,37)" fg:x="986" fg:w="1"/><text x="79.0669%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.8169%" y="485" width="0.0799%" height="15" fill="rgb(232,107,19)" fg:x="986" fg:w="1"/><text x="79.0669%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.8169%" y="469" width="0.0799%" height="15" fill="rgb(235,85,17)" fg:x="986" fg:w="1"/><text x="79.0669%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.8169%" y="453" width="0.0799%" height="15" fill="rgb(219,195,31)" fg:x="986" fg:w="1"/><text x="79.0669%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.8169%" y="437" width="0.0799%" height="15" fill="rgb(231,183,30)" fg:x="986" fg:w="1"/><text x="79.0669%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="78.8169%" y="421" width="0.0799%" height="15" fill="rgb(212,0,11)" fg:x="986" fg:w="1"/><text x="79.0669%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.8969%" y="469" width="0.0799%" height="15" fill="rgb(249,53,54)" fg:x="987" fg:w="1"/><text x="79.1469%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.8969%" y="453" width="0.0799%" height="15" fill="rgb(211,118,13)" fg:x="987" fg:w="1"/><text x="79.1469%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.8969%" y="437" width="0.0799%" height="15" fill="rgb(237,42,9)" fg:x="987" fg:w="1"/><text x="79.1469%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.8969%" y="421" width="0.0799%" height="15" fill="rgb(227,68,32)" fg:x="987" fg:w="1"/><text x="79.1469%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.8969%" y="405" width="0.0799%" height="15" fill="rgb(238,10,7)" fg:x="987" fg:w="1"/><text x="79.1469%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.8969%" y="389" width="0.0799%" height="15" fill="rgb(224,42,12)" fg:x="987" fg:w="1"/><text x="79.1469%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.8969%" y="373" width="0.0799%" height="15" fill="rgb(252,190,5)" fg:x="987" fg:w="1"/><text x="79.1469%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.8969%" y="357" width="0.0799%" height="15" fill="rgb(220,214,39)" fg:x="987" fg:w="1"/><text x="79.1469%" y="367.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="78.9768%" y="469" width="0.0799%" height="15" fill="rgb(247,98,4)" fg:x="988" fg:w="1"/><text x="79.2268%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="78.9768%" y="453" width="0.0799%" height="15" fill="rgb(211,60,12)" fg:x="988" fg:w="1"/><text x="79.2268%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.9768%" y="437" width="0.0799%" height="15" fill="rgb(224,42,10)" fg:x="988" fg:w="1"/><text x="79.2268%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.9768%" y="421" width="0.0799%" height="15" fill="rgb(217,167,4)" fg:x="988" fg:w="1"/><text x="79.2268%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9768%" y="405" width="0.0799%" height="15" fill="rgb(253,18,17)" fg:x="988" fg:w="1"/><text x="79.2268%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="79.0568%" y="453" width="0.0799%" height="15" fill="rgb(249,186,44)" fg:x="989" fg:w="1"/><text x="79.3068%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="79.0568%" y="437" width="0.0799%" height="15" fill="rgb(254,124,54)" fg:x="989" fg:w="1"/><text x="79.3068%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="79.0568%" y="421" width="0.0799%" height="15" fill="rgb(220,124,39)" fg:x="989" fg:w="1"/><text x="79.3068%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.0568%" y="405" width="0.0799%" height="15" fill="rgb(225,96,46)" fg:x="989" fg:w="1"/><text x="79.3068%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0568%" y="389" width="0.0799%" height="15" fill="rgb(221,106,12)" fg:x="989" fg:w="1"/><text x="79.3068%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.0568%" y="373" width="0.0799%" height="15" fill="rgb(227,133,23)" fg:x="989" fg:w="1"/><text x="79.3068%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.0568%" y="357" width="0.0799%" height="15" fill="rgb(216,44,52)" fg:x="989" fg:w="1"/><text x="79.3068%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0568%" y="341" width="0.0799%" height="15" fill="rgb(239,149,7)" fg:x="989" fg:w="1"/><text x="79.3068%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="79.0568%" y="469" width="0.1599%" height="15" fill="rgb(211,157,31)" fg:x="989" fg:w="2"/><text x="79.3068%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="79.1367%" y="453" width="0.0799%" height="15" fill="rgb(206,215,22)" fg:x="990" fg:w="1"/><text x="79.3867%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.1367%" y="437" width="0.0799%" height="15" fill="rgb(208,113,15)" fg:x="990" fg:w="1"/><text x="79.3867%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.1367%" y="421" width="0.0799%" height="15" fill="rgb(207,189,15)" fg:x="990" fg:w="1"/><text x="79.3867%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="79.1367%" y="405" width="0.0799%" height="15" fill="rgb(231,115,4)" fg:x="990" fg:w="1"/><text x="79.3867%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.1367%" y="389" width="0.0799%" height="15" fill="rgb(253,117,2)" fg:x="990" fg:w="1"/><text x="79.3867%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="79.2166%" y="469" width="0.0799%" height="15" fill="rgb(248,48,24)" fg:x="991" fg:w="1"/><text x="79.4666%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.2166%" y="453" width="0.0799%" height="15" fill="rgb(241,28,46)" fg:x="991" fg:w="1"/><text x="79.4666%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.2166%" y="437" width="0.0799%" height="15" fill="rgb(216,165,52)" fg:x="991" fg:w="1"/><text x="79.4666%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.2166%" y="421" width="0.0799%" height="15" fill="rgb(220,222,34)" fg:x="991" fg:w="1"/><text x="79.4666%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.2166%" y="405" width="0.0799%" height="15" fill="rgb(247,222,49)" fg:x="991" fg:w="1"/><text x="79.4666%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.2166%" y="389" width="0.0799%" height="15" fill="rgb(240,10,31)" fg:x="991" fg:w="1"/><text x="79.4666%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.2166%" y="373" width="0.0799%" height="15" fill="rgb(221,199,35)" fg:x="991" fg:w="1"/><text x="79.4666%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.2966%" y="437" width="0.0799%" height="15" fill="rgb(230,223,11)" fg:x="992" fg:w="1"/><text x="79.5466%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.2966%" y="421" width="0.0799%" height="15" fill="rgb(218,82,45)" fg:x="992" fg:w="1"/><text x="79.5466%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.2966%" y="405" width="0.0799%" height="15" fill="rgb(233,213,33)" fg:x="992" fg:w="1"/><text x="79.5466%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.2966%" y="389" width="0.0799%" height="15" fill="rgb(210,143,52)" fg:x="992" fg:w="1"/><text x="79.5466%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.2966%" y="373" width="0.0799%" height="15" fill="rgb(206,95,4)" fg:x="992" fg:w="1"/><text x="79.5466%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.2966%" y="357" width="0.0799%" height="15" fill="rgb(246,164,46)" fg:x="992" fg:w="1"/><text x="79.5466%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="78.8969%" y="485" width="0.5596%" height="15" fill="rgb(213,210,47)" fg:x="987" fg:w="7"/><text x="79.1469%" y="495.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="79.2966%" y="469" width="0.1599%" height="15" fill="rgb(210,12,38)" fg:x="992" fg:w="2"/><text x="79.5466%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="79.2966%" y="453" width="0.1599%" height="15" fill="rgb(252,192,54)" fg:x="992" fg:w="2"/><text x="79.5466%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.3765%" y="437" width="0.0799%" height="15" fill="rgb(242,92,6)" fg:x="993" fg:w="1"/><text x="79.6265%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.3765%" y="421" width="0.0799%" height="15" fill="rgb(253,154,15)" fg:x="993" fg:w="1"/><text x="79.6265%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.3765%" y="405" width="0.0799%" height="15" fill="rgb(209,20,43)" fg:x="993" fg:w="1"/><text x="79.6265%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.3765%" y="389" width="0.0799%" height="15" fill="rgb(232,28,49)" fg:x="993" fg:w="1"/><text x="79.6265%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="78.8969%" y="501" width="0.6395%" height="15" fill="rgb(248,131,53)" fg:x="987" fg:w="8"/><text x="79.1469%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.4564%" y="485" width="0.0799%" height="15" fill="rgb(214,16,30)" fg:x="994" fg:w="1"/><text x="79.7064%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="79.4564%" y="469" width="0.0799%" height="15" fill="rgb(245,16,0)" fg:x="994" fg:w="1"/><text x="79.7064%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4564%" y="453" width="0.0799%" height="15" fill="rgb(245,17,35)" fg:x="994" fg:w="1"/><text x="79.7064%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.5364%" y="453" width="0.0799%" height="15" fill="rgb(249,27,53)" fg:x="995" fg:w="1"/><text x="79.7864%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.5364%" y="437" width="0.0799%" height="15" fill="rgb(214,73,24)" fg:x="995" fg:w="1"/><text x="79.7864%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.5364%" y="421" width="0.0799%" height="15" fill="rgb(223,84,37)" fg:x="995" fg:w="1"/><text x="79.7864%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.5364%" y="405" width="0.0799%" height="15" fill="rgb(210,109,28)" fg:x="995" fg:w="1"/><text x="79.7864%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.5364%" y="389" width="0.0799%" height="15" fill="rgb(208,186,6)" fg:x="995" fg:w="1"/><text x="79.7864%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.88%)</title><rect x="78.8169%" y="565" width="0.8793%" height="15" fill="rgb(235,201,30)" fg:x="986" fg:w="11"/><text x="79.0669%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="78.8169%" y="549" width="0.8793%" height="15" fill="rgb(216,198,48)" fg:x="986" fg:w="11"/><text x="79.0669%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.88%)</title><rect x="78.8169%" y="533" width="0.8793%" height="15" fill="rgb(254,186,25)" fg:x="986" fg:w="11"/><text x="79.0669%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (10 samples, 0.80%)</title><rect x="78.8969%" y="517" width="0.7994%" height="15" fill="rgb(227,87,5)" fg:x="987" fg:w="10"/><text x="79.1469%" y="527.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="79.5364%" y="501" width="0.1599%" height="15" fill="rgb(236,205,25)" fg:x="995" fg:w="2"/><text x="79.7864%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="79.5364%" y="485" width="0.1599%" height="15" fill="rgb(229,99,32)" fg:x="995" fg:w="2"/><text x="79.7864%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="79.5364%" y="469" width="0.1599%" height="15" fill="rgb(231,177,31)" fg:x="995" fg:w="2"/><text x="79.7864%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.6163%" y="453" width="0.0799%" height="15" fill="rgb(246,15,2)" fg:x="996" fg:w="1"/><text x="79.8663%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.6163%" y="437" width="0.0799%" height="15" fill="rgb(207,39,15)" fg:x="996" fg:w="1"/><text x="79.8663%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="79.6962%" y="549" width="0.0799%" height="15" fill="rgb(207,44,9)" fg:x="997" fg:w="1"/><text x="79.9462%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.6962%" y="533" width="0.0799%" height="15" fill="rgb(225,224,33)" fg:x="997" fg:w="1"/><text x="79.9462%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.6962%" y="517" width="0.0799%" height="15" fill="rgb(252,151,3)" fg:x="997" fg:w="1"/><text x="79.9462%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.6962%" y="501" width="0.0799%" height="15" fill="rgb(211,140,13)" fg:x="997" fg:w="1"/><text x="79.9462%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.6962%" y="485" width="0.0799%" height="15" fill="rgb(239,225,17)" fg:x="997" fg:w="1"/><text x="79.9462%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.6962%" y="469" width="0.0799%" height="15" fill="rgb(223,170,52)" fg:x="997" fg:w="1"/><text x="79.9462%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.6962%" y="453" width="0.0799%" height="15" fill="rgb(212,64,21)" fg:x="997" fg:w="1"/><text x="79.9462%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.6962%" y="437" width="0.0799%" height="15" fill="rgb(236,126,48)" fg:x="997" fg:w="1"/><text x="79.9462%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.6962%" y="421" width="0.0799%" height="15" fill="rgb(209,135,11)" fg:x="997" fg:w="1"/><text x="79.9462%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.6962%" y="405" width="0.0799%" height="15" fill="rgb(228,126,40)" fg:x="997" fg:w="1"/><text x="79.9462%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.6962%" y="389" width="0.0799%" height="15" fill="rgb(205,196,36)" fg:x="997" fg:w="1"/><text x="79.9462%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.6962%" y="373" width="0.0799%" height="15" fill="rgb(243,160,33)" fg:x="997" fg:w="1"/><text x="79.9462%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.6962%" y="357" width="0.0799%" height="15" fill="rgb(210,84,20)" fg:x="997" fg:w="1"/><text x="79.9462%" y="367.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="79.7762%" y="533" width="0.0799%" height="15" fill="rgb(228,213,30)" fg:x="998" fg:w="1"/><text x="80.0262%" y="543.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="79.7762%" y="517" width="0.0799%" height="15" fill="rgb(252,33,45)" fg:x="998" fg:w="1"/><text x="80.0262%" y="527.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="79.7762%" y="501" width="0.0799%" height="15" fill="rgb(254,227,20)" fg:x="998" fg:w="1"/><text x="80.0262%" y="511.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="79.7762%" y="485" width="0.0799%" height="15" fill="rgb(228,192,2)" fg:x="998" fg:w="1"/><text x="80.0262%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.9361%" y="421" width="0.0799%" height="15" fill="rgb(233,32,8)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.9361%" y="405" width="0.0799%" height="15" fill="rgb(220,146,47)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.9361%" y="389" width="0.0799%" height="15" fill="rgb(246,194,1)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.9361%" y="373" width="0.0799%" height="15" fill="rgb(218,203,9)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.0959%" y="373" width="0.0799%" height="15" fill="rgb(237,97,14)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.0959%" y="357" width="0.0799%" height="15" fill="rgb(239,76,15)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.0959%" y="341" width="0.0799%" height="15" fill="rgb(222,53,45)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.0959%" y="325" width="0.0799%" height="15" fill="rgb(237,88,5)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.0959%" y="309" width="0.0799%" height="15" fill="rgb(218,223,35)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.0959%" y="293" width="0.0799%" height="15" fill="rgb(243,229,38)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.0959%" y="277" width="0.0799%" height="15" fill="rgb(240,75,41)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="80.0959%" y="405" width="0.1599%" height="15" fill="rgb(209,110,37)" fg:x="1002" fg:w="2"/><text x="80.3459%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.0959%" y="389" width="0.1599%" height="15" fill="rgb(221,130,46)" fg:x="1002" fg:w="2"/><text x="80.3459%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.1759%" y="373" width="0.0799%" height="15" fill="rgb(237,160,20)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.2558%" y="405" width="0.1599%" height="15" fill="rgb(234,126,24)" fg:x="1004" fg:w="2"/><text x="80.5058%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.3357%" y="389" width="0.0799%" height="15" fill="rgb(207,177,9)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.3357%" y="373" width="0.0799%" height="15" fill="rgb(231,191,33)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.3357%" y="357" width="0.0799%" height="15" fill="rgb(207,42,1)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.4157%" y="389" width="0.0799%" height="15" fill="rgb(218,34,50)" fg:x="1006" fg:w="1"/><text x="80.6657%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4157%" y="373" width="0.0799%" height="15" fill="rgb(254,126,39)" fg:x="1006" fg:w="1"/><text x="80.6657%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.4157%" y="357" width="0.0799%" height="15" fill="rgb(251,17,26)" fg:x="1006" fg:w="1"/><text x="80.6657%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.4157%" y="341" width="0.0799%" height="15" fill="rgb(252,215,34)" fg:x="1006" fg:w="1"/><text x="80.6657%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.4157%" y="405" width="0.1599%" height="15" fill="rgb(217,120,44)" fg:x="1006" fg:w="2"/><text x="80.6657%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4956%" y="389" width="0.0799%" height="15" fill="rgb(211,31,11)" fg:x="1007" fg:w="1"/><text x="80.7456%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.4956%" y="373" width="0.0799%" height="15" fill="rgb(222,69,51)" fg:x="1007" fg:w="1"/><text x="80.7456%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="80.0160%" y="421" width="0.7994%" height="15" fill="rgb(215,229,42)" fg:x="1001" fg:w="10"/><text x="80.2660%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="80.5755%" y="405" width="0.2398%" height="15" fill="rgb(212,102,15)" fg:x="1008" fg:w="3"/><text x="80.8255%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7354%" y="389" width="0.0799%" height="15" fill="rgb(205,179,41)" fg:x="1010" fg:w="1"/><text x="80.9854%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7354%" y="373" width="0.0799%" height="15" fill="rgb(219,148,46)" fg:x="1010" fg:w="1"/><text x="80.9854%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.04%)</title><rect x="79.9361%" y="453" width="1.0392%" height="15" fill="rgb(243,40,19)" fg:x="1000" fg:w="13"/><text x="80.1861%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="79.9361%" y="437" width="1.0392%" height="15" fill="rgb(208,206,34)" fg:x="1000" fg:w="13"/><text x="80.1861%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.8153%" y="421" width="0.1599%" height="15" fill="rgb(244,184,38)" fg:x="1011" fg:w="2"/><text x="81.0653%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.8153%" y="405" width="0.1599%" height="15" fill="rgb(244,151,47)" fg:x="1011" fg:w="2"/><text x="81.0653%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="80.8153%" y="389" width="0.1599%" height="15" fill="rgb(236,134,42)" fg:x="1011" fg:w="2"/><text x="81.0653%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.8953%" y="373" width="0.0799%" height="15" fill="rgb(233,93,22)" fg:x="1012" fg:w="1"/><text x="81.1453%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.8953%" y="357" width="0.0799%" height="15" fill="rgb(211,202,10)" fg:x="1012" fg:w="1"/><text x="81.1453%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.8953%" y="341" width="0.0799%" height="15" fill="rgb(240,63,8)" fg:x="1012" fg:w="1"/><text x="81.1453%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.9752%" y="453" width="0.0799%" height="15" fill="rgb(214,9,4)" fg:x="1013" fg:w="1"/><text x="81.2252%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.9752%" y="437" width="0.0799%" height="15" fill="rgb(243,66,45)" fg:x="1013" fg:w="1"/><text x="81.2252%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.9752%" y="421" width="0.0799%" height="15" fill="rgb(220,50,42)" fg:x="1013" fg:w="1"/><text x="81.2252%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9752%" y="405" width="0.0799%" height="15" fill="rgb(220,134,27)" fg:x="1013" fg:w="1"/><text x="81.2252%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.0552%" y="405" width="0.0799%" height="15" fill="rgb(246,151,50)" fg:x="1014" fg:w="1"/><text x="81.3052%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.1351%" y="405" width="0.0799%" height="15" fill="rgb(238,216,27)" fg:x="1015" fg:w="1"/><text x="81.3851%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.3749%" y="309" width="0.1599%" height="15" fill="rgb(250,92,11)" fg:x="1018" fg:w="2"/><text x="81.6249%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.3749%" y="293" width="0.1599%" height="15" fill="rgb(248,183,6)" fg:x="1018" fg:w="2"/><text x="81.6249%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.3749%" y="277" width="0.1599%" height="15" fill="rgb(211,204,50)" fg:x="1018" fg:w="2"/><text x="81.6249%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4548%" y="261" width="0.0799%" height="15" fill="rgb(252,55,47)" fg:x="1019" fg:w="1"/><text x="81.7048%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="81.2950%" y="389" width="0.3197%" height="15" fill="rgb(240,198,32)" fg:x="1017" fg:w="4"/><text x="81.5450%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="81.2950%" y="373" width="0.3197%" height="15" fill="rgb(224,203,19)" fg:x="1017" fg:w="4"/><text x="81.5450%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="81.2950%" y="357" width="0.3197%" height="15" fill="rgb(205,27,16)" fg:x="1017" fg:w="4"/><text x="81.5450%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="81.3749%" y="341" width="0.2398%" height="15" fill="rgb(224,226,17)" fg:x="1018" fg:w="3"/><text x="81.6249%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="81.3749%" y="325" width="0.2398%" height="15" fill="rgb(205,216,54)" fg:x="1018" fg:w="3"/><text x="81.6249%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.5348%" y="309" width="0.0799%" height="15" fill="rgb(248,168,46)" fg:x="1020" fg:w="1"/><text x="81.7848%" y="319.50"></text></g><g><title>engine::session::Session::flush (25 samples, 2.00%)</title><rect x="79.6962%" y="565" width="1.9984%" height="15" fill="rgb(226,111,45)" fg:x="997" fg:w="25"/><text x="79.9462%" y="575.50">e..</text></g><g><title>engine::session::Session::save_changes (24 samples, 1.92%)</title><rect x="79.7762%" y="549" width="1.9185%" height="15" fill="rgb(231,15,9)" fg:x="998" fg:w="24"/><text x="80.0262%" y="559.50">e..</text></g><g><title>engine::session::state::State::close (23 samples, 1.84%)</title><rect x="79.8561%" y="533" width="1.8385%" height="15" fill="rgb(243,168,3)" fg:x="999" fg:w="23"/><text x="80.1061%" y="543.50">e..</text></g><g><title>engine::session::state::State::flush_entities (23 samples, 1.84%)</title><rect x="79.8561%" y="517" width="1.8385%" height="15" fill="rgb(221,220,54)" fg:x="999" fg:w="23"/><text x="80.1061%" y="527.50">e..</text></g><g><title>core::iter::adapters::try_process (23 samples, 1.84%)</title><rect x="79.8561%" y="501" width="1.8385%" height="15" fill="rgb(232,174,38)" fg:x="999" fg:w="23"/><text x="80.1061%" y="511.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 1.84%)</title><rect x="79.8561%" y="485" width="1.8385%" height="15" fill="rgb(205,14,38)" fg:x="999" fg:w="23"/><text x="80.1061%" y="495.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (22 samples, 1.76%)</title><rect x="79.9361%" y="469" width="1.7586%" height="15" fill="rgb(234,89,19)" fg:x="1000" fg:w="22"/><text x="80.1861%" y="479.50"></text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.64%)</title><rect x="81.0552%" y="453" width="0.6395%" height="15" fill="rgb(216,68,51)" fg:x="1014" fg:w="8"/><text x="81.3052%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="81.0552%" y="437" width="0.6395%" height="15" fill="rgb(213,49,2)" fg:x="1014" fg:w="8"/><text x="81.3052%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="81.0552%" y="421" width="0.6395%" height="15" fill="rgb(242,146,30)" fg:x="1014" fg:w="8"/><text x="81.3052%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="81.2150%" y="405" width="0.4796%" height="15" fill="rgb(224,188,11)" fg:x="1016" fg:w="6"/><text x="81.4650%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6147%" y="389" width="0.0799%" height="15" fill="rgb(213,159,11)" fg:x="1021" fg:w="1"/><text x="81.8647%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="81.6946%" y="533" width="0.0799%" height="15" fill="rgb(229,13,31)" fg:x="1022" fg:w="1"/><text x="81.9446%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="81.6946%" y="517" width="0.0799%" height="15" fill="rgb(209,103,11)" fg:x="1022" fg:w="1"/><text x="81.9446%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.6946%" y="501" width="0.0799%" height="15" fill="rgb(206,3,4)" fg:x="1022" fg:w="1"/><text x="81.9446%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="81.6946%" y="485" width="0.0799%" height="15" fill="rgb(252,10,49)" fg:x="1022" fg:w="1"/><text x="81.9446%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6946%" y="469" width="0.0799%" height="15" fill="rgb(217,160,32)" fg:x="1022" fg:w="1"/><text x="81.9446%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.7746%" y="517" width="0.0799%" height="15" fill="rgb(249,196,0)" fg:x="1023" fg:w="1"/><text x="82.0246%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8545%" y="453" width="0.0799%" height="15" fill="rgb(213,17,48)" fg:x="1024" fg:w="1"/><text x="82.1045%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8545%" y="437" width="0.0799%" height="15" fill="rgb(206,42,46)" fg:x="1024" fg:w="1"/><text x="82.1045%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="81.8545%" y="485" width="0.2398%" height="15" fill="rgb(212,105,24)" fg:x="1024" fg:w="3"/><text x="82.1045%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.8545%" y="469" width="0.2398%" height="15" fill="rgb(243,216,30)" fg:x="1024" fg:w="3"/><text x="82.1045%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="81.9345%" y="453" width="0.1599%" height="15" fill="rgb(207,121,3)" fg:x="1025" fg:w="2"/><text x="82.1845%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.9345%" y="437" width="0.1599%" height="15" fill="rgb(249,78,0)" fg:x="1025" fg:w="2"/><text x="82.1845%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="81.9345%" y="421" width="0.1599%" height="15" fill="rgb(244,151,32)" fg:x="1025" fg:w="2"/><text x="82.1845%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.9345%" y="405" width="0.1599%" height="15" fill="rgb(228,63,25)" fg:x="1025" fg:w="2"/><text x="82.1845%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="81.9345%" y="389" width="0.1599%" height="15" fill="rgb(231,158,23)" fg:x="1025" fg:w="2"/><text x="82.1845%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.9345%" y="373" width="0.1599%" height="15" fill="rgb(248,107,23)" fg:x="1025" fg:w="2"/><text x="82.1845%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.0144%" y="357" width="0.0799%" height="15" fill="rgb(215,168,21)" fg:x="1026" fg:w="1"/><text x="82.2644%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.0144%" y="341" width="0.0799%" height="15" fill="rgb(227,83,22)" fg:x="1026" fg:w="1"/><text x="82.2644%" y="351.50"></text></g><g><title>plugins_core::build::Build::holding (6 samples, 0.48%)</title><rect x="81.6946%" y="565" width="0.4796%" height="15" fill="rgb(217,118,43)" fg:x="1022" fg:w="6"/><text x="81.9446%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="81.6946%" y="549" width="0.4796%" height="15" fill="rgb(229,220,41)" fg:x="1022" fg:w="6"/><text x="81.9446%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="81.7746%" y="533" width="0.3997%" height="15" fill="rgb(254,146,46)" fg:x="1023" fg:w="5"/><text x="82.0246%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="81.8545%" y="517" width="0.3197%" height="15" fill="rgb(233,208,31)" fg:x="1024" fg:w="4"/><text x="82.1045%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="81.8545%" y="501" width="0.3197%" height="15" fill="rgb(222,162,7)" fg:x="1024" fg:w="4"/><text x="82.1045%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.0943%" y="485" width="0.0799%" height="15" fill="rgb(230,117,45)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.0943%" y="469" width="0.0799%" height="15" fill="rgb(239,163,6)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.0943%" y="453" width="0.0799%" height="15" fill="rgb(246,130,17)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0943%" y="437" width="0.0799%" height="15" fill="rgb(216,84,5)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.0943%" y="421" width="0.0799%" height="15" fill="rgb(230,200,21)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0943%" y="405" width="0.0799%" height="15" fill="rgb(224,2,8)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1743%" y="501" width="0.0799%" height="15" fill="rgb(238,178,10)" fg:x="1028" fg:w="1"/><text x="82.4243%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="82.1743%" y="565" width="0.1599%" height="15" fill="rgb(242,153,24)" fg:x="1028" fg:w="2"/><text x="82.4243%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="82.1743%" y="549" width="0.1599%" height="15" fill="rgb(242,32,48)" fg:x="1028" fg:w="2"/><text x="82.4243%" y="559.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="82.1743%" y="533" width="0.1599%" height="15" fill="rgb(227,36,0)" fg:x="1028" fg:w="2"/><text x="82.4243%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="82.1743%" y="517" width="0.1599%" height="15" fill="rgb(251,33,35)" fg:x="1028" fg:w="2"/><text x="82.4243%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2542%" y="501" width="0.0799%" height="15" fill="rgb(232,168,51)" fg:x="1029" fg:w="1"/><text x="82.5042%" y="511.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="82.3341%" y="565" width="0.0799%" height="15" fill="rgb(228,56,10)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="82.3341%" y="549" width="0.0799%" height="15" fill="rgb(231,10,26)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="82.3341%" y="533" width="0.0799%" height="15" fill="rgb(226,202,12)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="82.3341%" y="517" width="0.0799%" height="15" fill="rgb(251,49,21)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="82.3341%" y="501" width="0.0799%" height="15" fill="rgb(206,228,28)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.3341%" y="485" width="0.0799%" height="15" fill="rgb(205,198,31)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.3341%" y="469" width="0.0799%" height="15" fill="rgb(213,69,1)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.3341%" y="453" width="0.0799%" height="15" fill="rgb(209,177,9)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="82.3341%" y="437" width="0.0799%" height="15" fill="rgb(227,119,30)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="82.3341%" y="421" width="0.0799%" height="15" fill="rgb(234,106,41)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.3341%" y="405" width="0.0799%" height="15" fill="rgb(244,103,47)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.3341%" y="389" width="0.0799%" height="15" fill="rgb(212,211,25)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="82.3341%" y="373" width="0.0799%" height="15" fill="rgb(208,63,53)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="82.3341%" y="357" width="0.0799%" height="15" fill="rgb(213,176,21)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="82.3341%" y="341" width="0.0799%" height="15" fill="rgb(243,124,12)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="82.3341%" y="325" width="0.0799%" height="15" fill="rgb(239,2,35)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="82.3341%" y="309" width="0.0799%" height="15" fill="rgb(253,169,22)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4141%" y="485" width="0.0799%" height="15" fill="rgb(254,51,12)" fg:x="1031" fg:w="1"/><text x="82.6641%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4141%" y="469" width="0.0799%" height="15" fill="rgb(244,17,47)" fg:x="1031" fg:w="1"/><text x="82.6641%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4141%" y="453" width="0.0799%" height="15" fill="rgb(251,45,46)" fg:x="1031" fg:w="1"/><text x="82.6641%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.4141%" y="517" width="0.1599%" height="15" fill="rgb(223,87,43)" fg:x="1031" fg:w="2"/><text x="82.6641%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.4141%" y="501" width="0.1599%" height="15" fill="rgb(230,132,31)" fg:x="1031" fg:w="2"/><text x="82.6641%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.4940%" y="485" width="0.0799%" height="15" fill="rgb(206,99,1)" fg:x="1032" fg:w="1"/><text x="82.7440%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.5739%" y="437" width="0.1599%" height="15" fill="rgb(227,110,25)" fg:x="1033" fg:w="2"/><text x="82.8239%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6539%" y="421" width="0.0799%" height="15" fill="rgb(217,182,7)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6539%" y="405" width="0.0799%" height="15" fill="rgb(250,176,4)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.6539%" y="389" width="0.0799%" height="15" fill="rgb(244,98,30)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.6539%" y="373" width="0.0799%" height="15" fill="rgb(228,150,42)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.6539%" y="357" width="0.0799%" height="15" fill="rgb(231,91,46)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.6539%" y="341" width="0.0799%" height="15" fill="rgb(252,161,32)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.6539%" y="325" width="0.0799%" height="15" fill="rgb(236,69,41)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.6539%" y="309" width="0.0799%" height="15" fill="rgb(212,160,3)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="82.6539%" y="293" width="0.0799%" height="15" fill="rgb(216,5,50)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="82.6539%" y="277" width="0.0799%" height="15" fill="rgb(241,138,25)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="82.5739%" y="501" width="0.2398%" height="15" fill="rgb(239,42,18)" fg:x="1033" fg:w="3"/><text x="82.8239%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="82.5739%" y="485" width="0.2398%" height="15" fill="rgb(239,40,7)" fg:x="1033" fg:w="3"/><text x="82.8239%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="82.5739%" y="469" width="0.2398%" height="15" fill="rgb(239,11,31)" fg:x="1033" fg:w="3"/><text x="82.8239%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="82.5739%" y="453" width="0.2398%" height="15" fill="rgb(224,77,40)" fg:x="1033" fg:w="3"/><text x="82.8239%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7338%" y="437" width="0.0799%" height="15" fill="rgb(226,15,5)" fg:x="1035" fg:w="1"/><text x="82.9838%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7338%" y="421" width="0.0799%" height="15" fill="rgb(254,188,5)" fg:x="1035" fg:w="1"/><text x="82.9838%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.7338%" y="405" width="0.0799%" height="15" fill="rgb(241,148,52)" fg:x="1035" fg:w="1"/><text x="82.9838%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.7338%" y="389" width="0.0799%" height="15" fill="rgb(251,48,36)" fg:x="1035" fg:w="1"/><text x="82.9838%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.7338%" y="373" width="0.0799%" height="15" fill="rgb(243,83,13)" fg:x="1035" fg:w="1"/><text x="82.9838%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="82.5739%" y="517" width="0.3197%" height="15" fill="rgb(210,105,0)" fg:x="1033" fg:w="4"/><text x="82.8239%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.8137%" y="501" width="0.0799%" height="15" fill="rgb(239,60,36)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.8137%" y="485" width="0.0799%" height="15" fill="rgb(210,20,0)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.8137%" y="469" width="0.0799%" height="15" fill="rgb(244,26,53)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8137%" y="453" width="0.0799%" height="15" fill="rgb(240,100,49)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.8137%" y="437" width="0.0799%" height="15" fill="rgb(250,46,45)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8137%" y="421" width="0.0799%" height="15" fill="rgb(220,181,29)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.8137%" y="405" width="0.0799%" height="15" fill="rgb(213,137,33)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="82.4141%" y="533" width="0.5596%" height="15" fill="rgb(213,27,48)" fg:x="1031" fg:w="7"/><text x="82.6641%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="82.8937%" y="517" width="0.0799%" height="15" fill="rgb(245,180,39)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="82.8937%" y="501" width="0.0799%" height="15" fill="rgb(212,158,42)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.8937%" y="485" width="0.0799%" height="15" fill="rgb(228,193,18)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.8937%" y="469" width="0.0799%" height="15" fill="rgb(245,172,29)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.8937%" y="453" width="0.0799%" height="15" fill="rgb(207,98,24)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8937%" y="437" width="0.0799%" height="15" fill="rgb(249,92,26)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.8937%" y="421" width="0.0799%" height="15" fill="rgb(217,176,26)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8937%" y="405" width="0.0799%" height="15" fill="rgb(221,8,39)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.8937%" y="389" width="0.0799%" height="15" fill="rgb(208,90,18)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8937%" y="373" width="0.0799%" height="15" fill="rgb(207,202,30)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9736%" y="469" width="0.0799%" height="15" fill="rgb(231,124,22)" fg:x="1038" fg:w="1"/><text x="83.2236%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="82.4141%" y="549" width="0.7194%" height="15" fill="rgb(206,15,5)" fg:x="1031" fg:w="9"/><text x="82.6641%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.9736%" y="533" width="0.1599%" height="15" fill="rgb(239,16,52)" fg:x="1038" fg:w="2"/><text x="83.2236%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.9736%" y="517" width="0.1599%" height="15" fill="rgb(245,213,29)" fg:x="1038" fg:w="2"/><text x="83.2236%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.9736%" y="501" width="0.1599%" height="15" fill="rgb(213,203,36)" fg:x="1038" fg:w="2"/><text x="83.2236%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.9736%" y="485" width="0.1599%" height="15" fill="rgb(209,55,18)" fg:x="1038" fg:w="2"/><text x="83.2236%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.0536%" y="469" width="0.0799%" height="15" fill="rgb(207,133,49)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.0536%" y="453" width="0.0799%" height="15" fill="rgb(240,33,46)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.0536%" y="437" width="0.0799%" height="15" fill="rgb(212,35,2)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.0536%" y="421" width="0.0799%" height="15" fill="rgb(231,119,28)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.0536%" y="405" width="0.0799%" height="15" fill="rgb(252,178,7)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.0536%" y="389" width="0.0799%" height="15" fill="rgb(251,91,4)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.0536%" y="373" width="0.0799%" height="15" fill="rgb(233,122,19)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.0536%" y="357" width="0.0799%" height="15" fill="rgb(231,208,46)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.0536%" y="341" width="0.0799%" height="15" fill="rgb(243,15,41)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.0536%" y="325" width="0.0799%" height="15" fill="rgb(210,32,43)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.0536%" y="309" width="0.0799%" height="15" fill="rgb(222,177,15)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0536%" y="293" width="0.0799%" height="15" fill="rgb(244,121,34)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="83.1335%" y="533" width="0.0799%" height="15" fill="rgb(234,138,4)" fg:x="1040" fg:w="1"/><text x="83.3835%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.1335%" y="517" width="0.0799%" height="15" fill="rgb(240,97,48)" fg:x="1040" fg:w="1"/><text x="83.3835%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="83.2134%" y="533" width="0.0799%" height="15" fill="rgb(237,65,54)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="83.2134%" y="517" width="0.0799%" height="15" fill="rgb(214,25,24)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.2134%" y="501" width="0.0799%" height="15" fill="rgb(213,5,3)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.2134%" y="485" width="0.0799%" height="15" fill="rgb(219,81,29)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.2134%" y="469" width="0.0799%" height="15" fill="rgb(220,43,48)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.2134%" y="453" width="0.0799%" height="15" fill="rgb(239,157,2)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.2134%" y="437" width="0.0799%" height="15" fill="rgb(213,104,43)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.2134%" y="421" width="0.0799%" height="15" fill="rgb(237,84,9)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="431.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2934%" y="517" width="0.0799%" height="15" fill="rgb(252,6,33)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2934%" y="501" width="0.0799%" height="15" fill="rgb(251,172,22)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.2934%" y="485" width="0.0799%" height="15" fill="rgb(244,91,53)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2934%" y="469" width="0.0799%" height="15" fill="rgb(219,29,30)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2934%" y="453" width="0.0799%" height="15" fill="rgb(213,3,15)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2934%" y="437" width="0.0799%" height="15" fill="rgb(208,25,28)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2934%" y="421" width="0.0799%" height="15" fill="rgb(252,144,25)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.2934%" y="405" width="0.0799%" height="15" fill="rgb(226,220,25)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="83.2934%" y="533" width="0.1599%" height="15" fill="rgb(212,131,28)" fg:x="1042" fg:w="2"/><text x="83.5434%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="83.3733%" y="517" width="0.0799%" height="15" fill="rgb(219,143,52)" fg:x="1043" fg:w="1"/><text x="83.6233%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.3733%" y="501" width="0.0799%" height="15" fill="rgb(215,56,7)" fg:x="1043" fg:w="1"/><text x="83.6233%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="83.3733%" y="485" width="0.0799%" height="15" fill="rgb(239,59,51)" fg:x="1043" fg:w="1"/><text x="83.6233%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.3733%" y="469" width="0.0799%" height="15" fill="rgb(209,215,4)" fg:x="1043" fg:w="1"/><text x="83.6233%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.3733%" y="453" width="0.0799%" height="15" fill="rgb(221,118,39)" fg:x="1043" fg:w="1"/><text x="83.6233%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.3733%" y="437" width="0.0799%" height="15" fill="rgb(236,6,44)" fg:x="1043" fg:w="1"/><text x="83.6233%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.3733%" y="421" width="0.0799%" height="15" fill="rgb(216,122,9)" fg:x="1043" fg:w="1"/><text x="83.6233%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.4532%" y="485" width="0.0799%" height="15" fill="rgb(244,134,42)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.4532%" y="469" width="0.0799%" height="15" fill="rgb(209,189,35)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4532%" y="453" width="0.0799%" height="15" fill="rgb(250,47,36)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4532%" y="437" width="0.0799%" height="15" fill="rgb(252,112,4)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.4532%" y="421" width="0.0799%" height="15" fill="rgb(221,79,51)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4532%" y="405" width="0.0799%" height="15" fill="rgb(232,65,53)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4532%" y="389" width="0.0799%" height="15" fill="rgb(211,37,7)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4532%" y="373" width="0.0799%" height="15" fill="rgb(234,221,18)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="383.50"></text></g><g><title>plugins_core::build::Build::occupying (15 samples, 1.20%)</title><rect x="82.4141%" y="565" width="1.1990%" height="15" fill="rgb(220,158,26)" fg:x="1031" fg:w="15"/><text x="82.6641%" y="575.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.48%)</title><rect x="83.1335%" y="549" width="0.4796%" height="15" fill="rgb(220,70,6)" fg:x="1040" fg:w="6"/><text x="83.3835%" y="559.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="83.4532%" y="533" width="0.1599%" height="15" fill="rgb(250,39,48)" fg:x="1044" fg:w="2"/><text x="83.7032%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="83.4532%" y="517" width="0.1599%" height="15" fill="rgb(206,40,27)" fg:x="1044" fg:w="2"/><text x="83.7032%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="83.4532%" y="501" width="0.1599%" height="15" fill="rgb(247,80,36)" fg:x="1044" fg:w="2"/><text x="83.7032%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.5332%" y="485" width="0.0799%" height="15" fill="rgb(222,9,20)" fg:x="1045" fg:w="1"/><text x="83.7832%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.5332%" y="469" width="0.0799%" height="15" fill="rgb(217,26,45)" fg:x="1045" fg:w="1"/><text x="83.7832%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5332%" y="453" width="0.0799%" height="15" fill="rgb(221,67,14)" fg:x="1045" fg:w="1"/><text x="83.7832%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5332%" y="437" width="0.0799%" height="15" fill="rgb(248,100,24)" fg:x="1045" fg:w="1"/><text x="83.7832%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.5332%" y="421" width="0.0799%" height="15" fill="rgb(230,187,16)" fg:x="1045" fg:w="1"/><text x="83.7832%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5332%" y="405" width="0.0799%" height="15" fill="rgb(205,108,13)" fg:x="1045" fg:w="1"/><text x="83.7832%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5332%" y="389" width="0.0799%" height="15" fill="rgb(235,71,51)" fg:x="1045" fg:w="1"/><text x="83.7832%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5332%" y="373" width="0.0799%" height="15" fill="rgb(251,172,48)" fg:x="1045" fg:w="1"/><text x="83.7832%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.5332%" y="357" width="0.0799%" height="15" fill="rgb(240,96,49)" fg:x="1045" fg:w="1"/><text x="83.7832%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.5332%" y="341" width="0.0799%" height="15" fill="rgb(235,46,36)" fg:x="1045" fg:w="1"/><text x="83.7832%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="83.6131%" y="501" width="0.0799%" height="15" fill="rgb(244,3,49)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="83.6131%" y="485" width="0.0799%" height="15" fill="rgb(206,78,54)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="495.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.6131%" y="469" width="0.0799%" height="15" fill="rgb(208,85,42)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.6131%" y="453" width="0.0799%" height="15" fill="rgb(219,196,21)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6131%" y="437" width="0.0799%" height="15" fill="rgb(238,19,9)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.6131%" y="421" width="0.0799%" height="15" fill="rgb(206,86,13)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.6131%" y="405" width="0.0799%" height="15" fill="rgb(214,123,40)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="83.6131%" y="517" width="0.1599%" height="15" fill="rgb(243,53,5)" fg:x="1046" fg:w="2"/><text x="83.8631%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6930%" y="501" width="0.0799%" height="15" fill="rgb(254,186,31)" fg:x="1047" fg:w="1"/><text x="83.9430%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.6930%" y="485" width="0.0799%" height="15" fill="rgb(221,216,25)" fg:x="1047" fg:w="1"/><text x="83.9430%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6930%" y="469" width="0.0799%" height="15" fill="rgb(248,107,42)" fg:x="1047" fg:w="1"/><text x="83.9430%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6930%" y="453" width="0.0799%" height="15" fill="rgb(221,85,43)" fg:x="1047" fg:w="1"/><text x="83.9430%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.7730%" y="501" width="0.0799%" height="15" fill="rgb(225,34,24)" fg:x="1048" fg:w="1"/><text x="84.0230%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="83.7730%" y="485" width="0.0799%" height="15" fill="rgb(211,119,1)" fg:x="1048" fg:w="1"/><text x="84.0230%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.7730%" y="469" width="0.0799%" height="15" fill="rgb(254,216,46)" fg:x="1048" fg:w="1"/><text x="84.0230%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="83.7730%" y="517" width="0.1599%" height="15" fill="rgb(238,11,38)" fg:x="1048" fg:w="2"/><text x="84.0230%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="83.8529%" y="501" width="0.0799%" height="15" fill="rgb(233,50,15)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.8529%" y="485" width="0.0799%" height="15" fill="rgb(217,181,29)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.8529%" y="469" width="0.0799%" height="15" fill="rgb(214,56,3)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.8529%" y="453" width="0.0799%" height="15" fill="rgb(230,69,45)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="83.8529%" y="437" width="0.0799%" height="15" fill="rgb(224,201,50)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.8529%" y="421" width="0.0799%" height="15" fill="rgb(217,228,18)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.8529%" y="405" width="0.0799%" height="15" fill="rgb(239,33,44)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.8529%" y="389" width="0.0799%" height="15" fill="rgb(248,210,23)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="399.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="83.8529%" y="373" width="0.0799%" height="15" fill="rgb(253,135,8)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="383.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="83.8529%" y="357" width="0.0799%" height="15" fill="rgb(217,98,21)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="83.8529%" y="341" width="0.0799%" height="15" fill="rgb(253,130,21)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="351.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="83.8529%" y="325" width="0.0799%" height="15" fill="rgb(207,81,54)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="83.9329%" y="469" width="0.0799%" height="15" fill="rgb(232,48,33)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="83.6131%" y="549" width="0.4796%" height="15" fill="rgb(211,9,35)" fg:x="1046" fg:w="6"/><text x="83.8631%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="83.6131%" y="533" width="0.4796%" height="15" fill="rgb(205,152,21)" fg:x="1046" fg:w="6"/><text x="83.8631%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="83.9329%" y="517" width="0.1599%" height="15" fill="rgb(249,21,27)" fg:x="1050" fg:w="2"/><text x="84.1829%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="83.9329%" y="501" width="0.1599%" height="15" fill="rgb(252,29,24)" fg:x="1050" fg:w="2"/><text x="84.1829%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="83.9329%" y="485" width="0.1599%" height="15" fill="rgb(230,130,50)" fg:x="1050" fg:w="2"/><text x="84.1829%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.0128%" y="469" width="0.0799%" height="15" fill="rgb(239,144,14)" fg:x="1051" fg:w="1"/><text x="84.2628%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.0128%" y="453" width="0.0799%" height="15" fill="rgb(227,111,50)" fg:x="1051" fg:w="1"/><text x="84.2628%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.0128%" y="437" width="0.0799%" height="15" fill="rgb(254,84,20)" fg:x="1051" fg:w="1"/><text x="84.2628%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.0128%" y="421" width="0.0799%" height="15" fill="rgb(232,90,48)" fg:x="1051" fg:w="1"/><text x="84.2628%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (69 samples, 5.52%)</title><rect x="78.6571%" y="581" width="5.5156%" height="15" fill="rgb(253,63,47)" fg:x="984" fg:w="69"/><text x="78.9071%" y="591.50">plugins..</text></g><g><title>plugins_core::build::Build::wearing (7 samples, 0.56%)</title><rect x="83.6131%" y="565" width="0.5596%" height="15" fill="rgb(251,146,35)" fg:x="1046" fg:w="7"/><text x="83.8631%" y="575.50"></text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="84.0927%" y="549" width="0.0799%" height="15" fill="rgb(229,192,35)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.0927%" y="533" width="0.0799%" height="15" fill="rgb(225,68,9)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="543.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (1 samples, 0.08%)</title><rect x="84.0927%" y="517" width="0.0799%" height="15" fill="rgb(214,97,34)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.0927%" y="501" width="0.0799%" height="15" fill="rgb(253,31,26)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0927%" y="485" width="0.0799%" height="15" fill="rgb(225,151,47)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="84.1727%" y="517" width="0.0799%" height="15" fill="rgb(206,185,9)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="84.1727%" y="501" width="0.0799%" height="15" fill="rgb(249,65,17)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="84.1727%" y="485" width="0.0799%" height="15" fill="rgb(220,110,10)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.1727%" y="469" width="0.0799%" height="15" fill="rgb(222,198,49)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.1727%" y="453" width="0.0799%" height="15" fill="rgb(239,81,13)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="84.2526%" y="517" width="0.0799%" height="15" fill="rgb(216,128,11)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.2526%" y="501" width="0.0799%" height="15" fill="rgb(247,156,8)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.2526%" y="485" width="0.0799%" height="15" fill="rgb(219,173,1)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2526%" y="469" width="0.0799%" height="15" fill="rgb(227,42,24)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2526%" y="453" width="0.0799%" height="15" fill="rgb(253,219,50)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2526%" y="437" width="0.0799%" height="15" fill="rgb(215,191,54)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.24%)</title><rect x="84.1727%" y="581" width="0.2398%" height="15" fill="rgb(238,83,12)" fg:x="1053" fg:w="3"/><text x="84.4227%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="84.1727%" y="565" width="0.2398%" height="15" fill="rgb(205,124,9)" fg:x="1053" fg:w="3"/><text x="84.4227%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="84.1727%" y="549" width="0.2398%" height="15" fill="rgb(253,174,7)" fg:x="1053" fg:w="3"/><text x="84.4227%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="84.1727%" y="533" width="0.2398%" height="15" fill="rgb(206,134,49)" fg:x="1053" fg:w="3"/><text x="84.4227%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="84.3325%" y="517" width="0.0799%" height="15" fill="rgb(221,89,20)" fg:x="1055" fg:w="1"/><text x="84.5825%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="84.3325%" y="501" width="0.0799%" height="15" fill="rgb(240,205,13)" fg:x="1055" fg:w="1"/><text x="84.5825%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.3325%" y="485" width="0.0799%" height="15" fill="rgb(237,174,32)" fg:x="1055" fg:w="1"/><text x="84.5825%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.3325%" y="469" width="0.0799%" height="15" fill="rgb(226,12,15)" fg:x="1055" fg:w="1"/><text x="84.5825%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3325%" y="453" width="0.0799%" height="15" fill="rgb(245,160,52)" fg:x="1055" fg:w="1"/><text x="84.5825%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3325%" y="437" width="0.0799%" height="15" fill="rgb(253,80,21)" fg:x="1055" fg:w="1"/><text x="84.5825%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.4125%" y="485" width="0.0799%" height="15" fill="rgb(231,225,22)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.4125%" y="469" width="0.0799%" height="15" fill="rgb(253,185,12)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4125%" y="453" width="0.0799%" height="15" fill="rgb(234,197,21)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4125%" y="437" width="0.0799%" height="15" fill="rgb(210,47,30)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4125%" y="421" width="0.0799%" height="15" fill="rgb(246,139,27)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4924%" y="469" width="0.0799%" height="15" fill="rgb(226,130,16)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4924%" y="453" width="0.0799%" height="15" fill="rgb(237,208,20)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4924%" y="437" width="0.0799%" height="15" fill="rgb(245,186,28)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4924%" y="421" width="0.0799%" height="15" fill="rgb(238,105,39)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.4924%" y="405" width="0.0799%" height="15" fill="rgb(253,228,11)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.4924%" y="389" width="0.0799%" height="15" fill="rgb(224,136,38)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.4924%" y="373" width="0.0799%" height="15" fill="rgb(211,3,25)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4924%" y="357" width="0.0799%" height="15" fill="rgb(238,66,34)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4924%" y="341" width="0.0799%" height="15" fill="rgb(223,188,11)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.4924%" y="325" width="0.0799%" height="15" fill="rgb(221,10,35)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.4924%" y="309" width="0.0799%" height="15" fill="rgb(223,18,44)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.4924%" y="293" width="0.0799%" height="15" fill="rgb(220,97,41)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.4924%" y="277" width="0.0799%" height="15" fill="rgb(206,95,45)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4924%" y="261" width="0.0799%" height="15" fill="rgb(209,96,13)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="271.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="84.4125%" y="533" width="0.2398%" height="15" fill="rgb(237,39,34)" fg:x="1056" fg:w="3"/><text x="84.6625%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="84.4125%" y="517" width="0.2398%" height="15" fill="rgb(213,49,47)" fg:x="1056" fg:w="3"/><text x="84.6625%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="84.4125%" y="501" width="0.2398%" height="15" fill="rgb(205,107,27)" fg:x="1056" fg:w="3"/><text x="84.6625%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.4924%" y="485" width="0.1599%" height="15" fill="rgb(212,142,9)" fg:x="1057" fg:w="2"/><text x="84.7424%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5723%" y="469" width="0.0799%" height="15" fill="rgb(226,182,0)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5723%" y="453" width="0.0799%" height="15" fill="rgb(231,3,53)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.5723%" y="437" width="0.0799%" height="15" fill="rgb(246,111,28)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5723%" y="421" width="0.0799%" height="15" fill="rgb(254,183,7)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.5723%" y="405" width="0.0799%" height="15" fill="rgb(247,177,28)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="84.4125%" y="549" width="0.3197%" height="15" fill="rgb(244,43,1)" fg:x="1056" fg:w="4"/><text x="84.6625%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="84.6523%" y="533" width="0.0799%" height="15" fill="rgb(207,2,35)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.6523%" y="517" width="0.0799%" height="15" fill="rgb(213,83,22)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.6523%" y="501" width="0.0799%" height="15" fill="rgb(246,212,13)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6523%" y="485" width="0.0799%" height="15" fill="rgb(213,127,46)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6523%" y="469" width="0.0799%" height="15" fill="rgb(219,215,39)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.6523%" y="453" width="0.0799%" height="15" fill="rgb(227,99,17)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6523%" y="437" width="0.0799%" height="15" fill="rgb(208,155,18)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6523%" y="421" width="0.0799%" height="15" fill="rgb(223,204,38)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7322%" y="517" width="0.0799%" height="15" fill="rgb(212,114,21)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7322%" y="501" width="0.0799%" height="15" fill="rgb(250,74,13)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7322%" y="485" width="0.0799%" height="15" fill="rgb(234,7,1)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="84.4125%" y="565" width="0.4796%" height="15" fill="rgb(207,138,31)" fg:x="1056" fg:w="6"/><text x="84.6625%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.7322%" y="549" width="0.1599%" height="15" fill="rgb(215,186,42)" fg:x="1060" fg:w="2"/><text x="84.9822%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.7322%" y="533" width="0.1599%" height="15" fill="rgb(229,205,49)" fg:x="1060" fg:w="2"/><text x="84.9822%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8122%" y="517" width="0.0799%" height="15" fill="rgb(216,156,32)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8122%" y="501" width="0.0799%" height="15" fill="rgb(238,7,21)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.8122%" y="485" width="0.0799%" height="15" fill="rgb(249,190,22)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8122%" y="469" width="0.0799%" height="15" fill="rgb(253,51,31)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="84.8921%" y="533" width="0.0799%" height="15" fill="rgb(237,90,54)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="84.8921%" y="517" width="0.0799%" height="15" fill="rgb(250,214,33)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="84.8921%" y="501" width="0.0799%" height="15" fill="rgb(237,10,49)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="84.8921%" y="485" width="0.0799%" height="15" fill="rgb(241,56,36)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.8921%" y="469" width="0.0799%" height="15" fill="rgb(227,164,12)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="84.8921%" y="453" width="0.0799%" height="15" fill="rgb(249,149,35)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="463.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (138 samples, 11.03%)</title><rect x="74.0208%" y="597" width="11.0312%" height="15" fill="rgb(238,227,50)" fg:x="926" fg:w="138"/><text x="74.2708%" y="607.50">&lt;tests::HoldingK..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (8 samples, 0.64%)</title><rect x="84.4125%" y="581" width="0.6395%" height="15" fill="rgb(235,102,45)" fg:x="1056" fg:w="8"/><text x="84.6625%" y="591.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="84.8921%" y="565" width="0.1599%" height="15" fill="rgb(211,10,38)" fg:x="1062" fg:w="2"/><text x="85.1421%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="84.8921%" y="549" width="0.1599%" height="15" fill="rgb(219,77,48)" fg:x="1062" fg:w="2"/><text x="85.1421%" y="559.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="84.9720%" y="533" width="0.0799%" height="15" fill="rgb(246,6,15)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9720%" y="517" width="0.0799%" height="15" fill="rgb(207,220,2)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.9720%" y="501" width="0.0799%" height="15" fill="rgb(242,48,14)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.9720%" y="485" width="0.0799%" height="15" fill="rgb(218,19,27)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1319%" y="565" width="0.0799%" height="15" fill="rgb(228,0,35)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="85.0520%" y="581" width="0.2398%" height="15" fill="rgb(244,142,54)" fg:x="1064" fg:w="3"/><text x="85.3020%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.2118%" y="565" width="0.0799%" height="15" fill="rgb(243,217,40)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="85.2918%" y="549" width="0.0799%" height="15" fill="rgb(207,114,16)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="85.2918%" y="533" width="0.0799%" height="15" fill="rgb(224,33,25)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="85.2918%" y="517" width="0.0799%" height="15" fill="rgb(230,93,54)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.5316%" y="517" width="0.0799%" height="15" fill="rgb(224,56,24)" fg:x="1070" fg:w="1"/><text x="85.7816%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.5316%" y="501" width="0.0799%" height="15" fill="rgb(235,189,50)" fg:x="1070" fg:w="1"/><text x="85.7816%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="85.6115%" y="485" width="0.2398%" height="15" fill="rgb(242,173,8)" fg:x="1071" fg:w="3"/><text x="85.8615%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="85.6115%" y="469" width="0.2398%" height="15" fill="rgb(209,206,10)" fg:x="1071" fg:w="3"/><text x="85.8615%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="85.6115%" y="453" width="0.2398%" height="15" fill="rgb(213,182,44)" fg:x="1071" fg:w="3"/><text x="85.8615%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.7714%" y="437" width="0.0799%" height="15" fill="rgb(243,51,15)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="85.8513%" y="469" width="0.1599%" height="15" fill="rgb(241,13,14)" fg:x="1074" fg:w="2"/><text x="86.1013%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.8513%" y="453" width="0.1599%" height="15" fill="rgb(239,147,24)" fg:x="1074" fg:w="2"/><text x="86.1013%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.8513%" y="437" width="0.1599%" height="15" fill="rgb(223,129,16)" fg:x="1074" fg:w="2"/><text x="86.1013%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.9313%" y="421" width="0.0799%" height="15" fill="rgb(209,169,13)" fg:x="1075" fg:w="1"/><text x="86.1813%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.0112%" y="453" width="0.0799%" height="15" fill="rgb(235,159,41)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.0112%" y="437" width="0.0799%" height="15" fill="rgb(223,219,48)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.0112%" y="421" width="0.0799%" height="15" fill="rgb(236,80,13)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.0112%" y="405" width="0.0799%" height="15" fill="rgb(213,5,6)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.0112%" y="389" width="0.0799%" height="15" fill="rgb(205,59,21)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.0911%" y="453" width="0.1599%" height="15" fill="rgb(247,137,35)" fg:x="1077" fg:w="2"/><text x="86.3411%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.0911%" y="437" width="0.1599%" height="15" fill="rgb(242,208,28)" fg:x="1077" fg:w="2"/><text x="86.3411%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.0911%" y="421" width="0.1599%" height="15" fill="rgb(245,62,25)" fg:x="1077" fg:w="2"/><text x="86.3411%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="86.0911%" y="405" width="0.1599%" height="15" fill="rgb(233,99,54)" fg:x="1077" fg:w="2"/><text x="86.3411%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.1711%" y="389" width="0.0799%" height="15" fill="rgb(213,10,37)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.1711%" y="373" width="0.0799%" height="15" fill="rgb(235,143,30)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.1711%" y="357" width="0.0799%" height="15" fill="rgb(250,146,33)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.2510%" y="421" width="0.0799%" height="15" fill="rgb(226,198,42)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.2510%" y="405" width="0.0799%" height="15" fill="rgb(222,55,6)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3309%" y="421" width="0.0799%" height="15" fill="rgb(213,224,31)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.3309%" y="405" width="0.0799%" height="15" fill="rgb(226,103,35)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="86.2510%" y="437" width="0.3197%" height="15" fill="rgb(205,66,45)" fg:x="1079" fg:w="4"/><text x="86.5010%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.4109%" y="421" width="0.1599%" height="15" fill="rgb(226,51,42)" fg:x="1081" fg:w="2"/><text x="86.6609%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.04%)</title><rect x="85.6115%" y="501" width="1.0392%" height="15" fill="rgb(206,69,1)" fg:x="1071" fg:w="13"/><text x="85.8615%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="85.8513%" y="485" width="0.7994%" height="15" fill="rgb(213,228,47)" fg:x="1074" fg:w="10"/><text x="86.1013%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="86.0112%" y="469" width="0.6395%" height="15" fill="rgb(224,204,18)" fg:x="1076" fg:w="8"/><text x="86.2612%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="86.2510%" y="453" width="0.3997%" height="15" fill="rgb(253,187,47)" fg:x="1079" fg:w="5"/><text x="86.5010%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.5707%" y="437" width="0.0799%" height="15" fill="rgb(232,61,2)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.5707%" y="421" width="0.0799%" height="15" fill="rgb(213,132,35)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.6507%" y="501" width="0.0799%" height="15" fill="rgb(247,33,21)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.6507%" y="485" width="0.0799%" height="15" fill="rgb(233,71,46)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.6507%" y="469" width="0.0799%" height="15" fill="rgb(222,173,43)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.6507%" y="453" width="0.0799%" height="15" fill="rgb(249,218,47)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.6507%" y="437" width="0.0799%" height="15" fill="rgb(254,185,48)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.6507%" y="421" width="0.0799%" height="15" fill="rgb(252,165,50)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8106%" y="421" width="0.0799%" height="15" fill="rgb(206,219,6)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="86.8905%" y="421" width="0.1599%" height="15" fill="rgb(212,212,45)" fg:x="1087" fg:w="2"/><text x="87.1405%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.9704%" y="405" width="0.0799%" height="15" fill="rgb(221,31,9)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.1303%" y="389" width="0.0799%" height="15" fill="rgb(234,198,39)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.2102%" y="389" width="0.0799%" height="15" fill="rgb(252,145,46)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2102%" y="373" width="0.0799%" height="15" fill="rgb(237,149,0)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="86.7306%" y="469" width="0.6395%" height="15" fill="rgb(229,65,5)" fg:x="1085" fg:w="8"/><text x="86.9806%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="86.7306%" y="453" width="0.6395%" height="15" fill="rgb(235,60,36)" fg:x="1085" fg:w="8"/><text x="86.9806%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="86.8106%" y="437" width="0.5596%" height="15" fill="rgb(222,47,18)" fg:x="1086" fg:w="7"/><text x="87.0606%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="87.0504%" y="421" width="0.3197%" height="15" fill="rgb(235,114,22)" fg:x="1089" fg:w="4"/><text x="87.3004%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="87.0504%" y="405" width="0.3197%" height="15" fill="rgb(209,167,11)" fg:x="1089" fg:w="4"/><text x="87.3004%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.2902%" y="389" width="0.0799%" height="15" fill="rgb(251,73,18)" fg:x="1092" fg:w="1"/><text x="87.5402%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.2902%" y="373" width="0.0799%" height="15" fill="rgb(217,60,17)" fg:x="1092" fg:w="1"/><text x="87.5402%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="87.3701%" y="453" width="0.1599%" height="15" fill="rgb(224,36,37)" fg:x="1093" fg:w="2"/><text x="87.6201%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="87.3701%" y="437" width="0.1599%" height="15" fill="rgb(211,21,32)" fg:x="1093" fg:w="2"/><text x="87.6201%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.4500%" y="421" width="0.0799%" height="15" fill="rgb(231,55,48)" fg:x="1094" fg:w="1"/><text x="87.7000%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="87.5300%" y="453" width="0.0799%" height="15" fill="rgb(227,42,18)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (12 samples, 0.96%)</title><rect x="86.7306%" y="485" width="0.9592%" height="15" fill="rgb(217,2,27)" fg:x="1085" fg:w="12"/><text x="86.9806%" y="495.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="87.3701%" y="469" width="0.3197%" height="15" fill="rgb(251,138,23)" fg:x="1093" fg:w="4"/><text x="87.6201%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="87.6099%" y="453" width="0.0799%" height="15" fill="rgb(226,184,11)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.6099%" y="437" width="0.0799%" height="15" fill="rgb(242,142,12)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.6099%" y="421" width="0.0799%" height="15" fill="rgb(234,187,18)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.8497%" y="453" width="0.0799%" height="15" fill="rgb(237,44,42)" fg:x="1099" fg:w="1"/><text x="88.0997%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="87.9297%" y="453" width="0.2398%" height="15" fill="rgb(211,90,23)" fg:x="1100" fg:w="3"/><text x="88.1797%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.0895%" y="437" width="0.0799%" height="15" fill="rgb(207,81,18)" fg:x="1102" fg:w="1"/><text x="88.3395%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="88.0895%" y="421" width="0.0799%" height="15" fill="rgb(222,107,28)" fg:x="1102" fg:w="1"/><text x="88.3395%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1695%" y="453" width="0.0799%" height="15" fill="rgb(237,83,52)" fg:x="1103" fg:w="1"/><text x="88.4195%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.1695%" y="437" width="0.0799%" height="15" fill="rgb(208,67,11)" fg:x="1103" fg:w="1"/><text x="88.4195%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1695%" y="421" width="0.0799%" height="15" fill="rgb(249,157,49)" fg:x="1103" fg:w="1"/><text x="88.4195%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.4093%" y="405" width="0.1599%" height="15" fill="rgb(243,200,1)" fg:x="1106" fg:w="2"/><text x="88.6593%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.4093%" y="389" width="0.1599%" height="15" fill="rgb(225,162,37)" fg:x="1106" fg:w="2"/><text x="88.6593%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.4093%" y="373" width="0.1599%" height="15" fill="rgb(242,92,13)" fg:x="1106" fg:w="2"/><text x="88.6593%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.5691%" y="405" width="0.0799%" height="15" fill="rgb(220,43,36)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.5691%" y="389" width="0.0799%" height="15" fill="rgb(213,165,48)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.5691%" y="373" width="0.0799%" height="15" fill="rgb(227,200,9)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.7290%" y="389" width="0.0799%" height="15" fill="rgb(221,222,28)" fg:x="1110" fg:w="1"/><text x="88.9790%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.8090%" y="373" width="0.1599%" height="15" fill="rgb(223,142,26)" fg:x="1111" fg:w="2"/><text x="89.0590%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.9688%" y="357" width="0.0799%" height="15" fill="rgb(243,46,9)" fg:x="1113" fg:w="1"/><text x="89.2188%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="89.0488%" y="357" width="0.0799%" height="15" fill="rgb(250,56,11)" fg:x="1114" fg:w="1"/><text x="89.2988%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="88.8090%" y="389" width="0.3997%" height="15" fill="rgb(229,113,5)" fg:x="1111" fg:w="5"/><text x="89.0590%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="88.9688%" y="373" width="0.2398%" height="15" fill="rgb(244,108,28)" fg:x="1113" fg:w="3"/><text x="89.2188%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.1287%" y="357" width="0.0799%" height="15" fill="rgb(242,119,50)" fg:x="1115" fg:w="1"/><text x="89.3787%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="88.4093%" y="421" width="0.8793%" height="15" fill="rgb(224,164,23)" fg:x="1106" fg:w="11"/><text x="88.6593%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="88.6491%" y="405" width="0.6395%" height="15" fill="rgb(214,227,44)" fg:x="1109" fg:w="8"/><text x="88.8991%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.2086%" y="389" width="0.0799%" height="15" fill="rgb(238,202,4)" fg:x="1116" fg:w="1"/><text x="89.4586%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.12%)</title><rect x="88.2494%" y="437" width="1.1191%" height="15" fill="rgb(213,190,30)" fg:x="1104" fg:w="14"/><text x="88.4994%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="89.2886%" y="421" width="0.0799%" height="15" fill="rgb(239,15,2)" fg:x="1117" fg:w="1"/><text x="89.5386%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.2886%" y="405" width="0.0799%" height="15" fill="rgb(249,229,4)" fg:x="1117" fg:w="1"/><text x="89.5386%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (22 samples, 1.76%)</title><rect x="87.6898%" y="485" width="1.7586%" height="15" fill="rgb(239,75,44)" fg:x="1097" fg:w="22"/><text x="87.9398%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 1.68%)</title><rect x="87.7698%" y="469" width="1.6787%" height="15" fill="rgb(251,206,23)" fg:x="1098" fg:w="21"/><text x="88.0198%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.20%)</title><rect x="88.2494%" y="453" width="1.1990%" height="15" fill="rgb(215,208,0)" fg:x="1104" fg:w="15"/><text x="88.4994%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3685%" y="437" width="0.0799%" height="15" fill="rgb(230,75,50)" fg:x="1118" fg:w="1"/><text x="89.6185%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.5284%" y="309" width="0.0799%" height="15" fill="rgb(246,180,39)" fg:x="1120" fg:w="1"/><text x="89.7784%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.5284%" y="293" width="0.0799%" height="15" fill="rgb(249,175,24)" fg:x="1120" fg:w="1"/><text x="89.7784%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="89.5284%" y="341" width="0.1599%" height="15" fill="rgb(247,176,22)" fg:x="1120" fg:w="2"/><text x="89.7784%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="89.5284%" y="325" width="0.1599%" height="15" fill="rgb(241,100,24)" fg:x="1120" fg:w="2"/><text x="89.7784%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.6083%" y="309" width="0.0799%" height="15" fill="rgb(233,4,35)" fg:x="1121" fg:w="1"/><text x="89.8583%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.6083%" y="293" width="0.0799%" height="15" fill="rgb(211,164,46)" fg:x="1121" fg:w="1"/><text x="89.8583%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.7682%" y="325" width="0.0799%" height="15" fill="rgb(242,99,53)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.7682%" y="309" width="0.0799%" height="15" fill="rgb(243,45,33)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7682%" y="293" width="0.0799%" height="15" fill="rgb(217,55,21)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7682%" y="277" width="0.0799%" height="15" fill="rgb(245,145,46)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7682%" y="261" width="0.0799%" height="15" fill="rgb(215,112,45)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="89.5284%" y="357" width="0.4796%" height="15" fill="rgb(228,104,16)" fg:x="1120" fg:w="6"/><text x="89.7784%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="89.6882%" y="341" width="0.3197%" height="15" fill="rgb(239,186,38)" fg:x="1122" fg:w="4"/><text x="89.9382%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="89.8481%" y="325" width="0.1599%" height="15" fill="rgb(228,38,35)" fg:x="1124" fg:w="2"/><text x="90.0981%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="89.9281%" y="309" width="0.0799%" height="15" fill="rgb(251,42,40)" fg:x="1125" fg:w="1"/><text x="90.1781%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.0080%" y="357" width="0.0799%" height="15" fill="rgb(210,51,19)" fg:x="1126" fg:w="1"/><text x="90.2580%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.0080%" y="341" width="0.0799%" height="15" fill="rgb(236,94,42)" fg:x="1126" fg:w="1"/><text x="90.2580%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="89.5284%" y="389" width="0.6395%" height="15" fill="rgb(239,167,16)" fg:x="1120" fg:w="8"/><text x="89.7784%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="89.5284%" y="373" width="0.6395%" height="15" fill="rgb(252,175,31)" fg:x="1120" fg:w="8"/><text x="89.7784%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0879%" y="357" width="0.0799%" height="15" fill="rgb(206,166,30)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="90.1679%" y="373" width="0.1599%" height="15" fill="rgb(206,209,37)" fg:x="1128" fg:w="2"/><text x="90.4179%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="90.1679%" y="389" width="0.2398%" height="15" fill="rgb(226,91,4)" fg:x="1128" fg:w="3"/><text x="90.4179%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3277%" y="373" width="0.0799%" height="15" fill="rgb(222,167,0)" fg:x="1130" fg:w="1"/><text x="90.5777%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="89.4484%" y="421" width="1.0392%" height="15" fill="rgb(211,70,14)" fg:x="1119" fg:w="13"/><text x="89.6984%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="89.4484%" y="405" width="1.0392%" height="15" fill="rgb(214,84,42)" fg:x="1119" fg:w="13"/><text x="89.6984%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4077%" y="389" width="0.0799%" height="15" fill="rgb(235,157,37)" fg:x="1131" fg:w="1"/><text x="90.6577%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4077%" y="373" width="0.0799%" height="15" fill="rgb(225,13,6)" fg:x="1131" fg:w="1"/><text x="90.6577%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.4077%" y="357" width="0.0799%" height="15" fill="rgb(205,202,1)" fg:x="1131" fg:w="1"/><text x="90.6577%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.4876%" y="421" width="0.0799%" height="15" fill="rgb(232,195,26)" fg:x="1132" fg:w="1"/><text x="90.7376%" y="431.50"></text></g><g><title>engine::session::state::State::flush_entities (69 samples, 5.52%)</title><rect x="85.2918%" y="565" width="5.5156%" height="15" fill="rgb(208,102,26)" fg:x="1067" fg:w="69"/><text x="85.5418%" y="575.50">engine:..</text></g><g><title>core::iter::adapters::try_process (68 samples, 5.44%)</title><rect x="85.3717%" y="549" width="5.4357%" height="15" fill="rgb(215,41,39)" fg:x="1068" fg:w="68"/><text x="85.6217%" y="559.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (68 samples, 5.44%)</title><rect x="85.3717%" y="533" width="5.4357%" height="15" fill="rgb(247,139,11)" fg:x="1068" fg:w="68"/><text x="85.6217%" y="543.50">&lt;alloc:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (65 samples, 5.20%)</title><rect x="85.6115%" y="517" width="5.1958%" height="15" fill="rgb(243,99,6)" fg:x="1071" fg:w="65"/><text x="85.8615%" y="527.50">engine..</text></g><g><title>kernel::model::any_entity_changes (51 samples, 4.08%)</title><rect x="86.7306%" y="501" width="4.0767%" height="15" fill="rgb(230,168,48)" fg:x="1085" fg:w="51"/><text x="86.9806%" y="511.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (17 samples, 1.36%)</title><rect x="89.4484%" y="485" width="1.3589%" height="15" fill="rgb(238,227,13)" fg:x="1119" fg:w="17"/><text x="89.6984%" y="495.50"></text></g><g><title>serde_json::de::from_trait (17 samples, 1.36%)</title><rect x="89.4484%" y="469" width="1.3589%" height="15" fill="rgb(209,109,13)" fg:x="1119" fg:w="17"/><text x="89.6984%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.36%)</title><rect x="89.4484%" y="453" width="1.3589%" height="15" fill="rgb(228,195,1)" fg:x="1119" fg:w="17"/><text x="89.6984%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.36%)</title><rect x="89.4484%" y="437" width="1.3589%" height="15" fill="rgb(230,218,0)" fg:x="1119" fg:w="17"/><text x="89.6984%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="90.5675%" y="421" width="0.2398%" height="15" fill="rgb(206,1,45)" fg:x="1133" fg:w="3"/><text x="90.8175%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7274%" y="405" width="0.0799%" height="15" fill="rgb(209,124,26)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.7274%" y="389" width="0.0799%" height="15" fill="rgb(220,59,8)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="399.50"></text></g><g><title>engine::session::Session::close (73 samples, 5.84%)</title><rect x="85.0520%" y="597" width="5.8353%" height="15" fill="rgb(251,41,37)" fg:x="1064" fg:w="73"/><text x="85.3020%" y="607.50">engine:..</text></g><g><title>engine::session::state::State::close (70 samples, 5.60%)</title><rect x="85.2918%" y="581" width="5.5955%" height="15" fill="rgb(239,152,21)" fg:x="1067" fg:w="70"/><text x="85.5418%" y="591.50">engine:..</text></g><g><title>engine::session::state::State::flush_futures (1 samples, 0.08%)</title><rect x="90.8074%" y="565" width="0.0799%" height="15" fill="rgb(226,32,1)" fg:x="1136" fg:w="1"/><text x="91.0574%" y="575.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="91.0472%" y="469" width="0.0799%" height="15" fill="rgb(230,154,36)" fg:x="1139" fg:w="1"/><text x="91.2972%" y="479.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (1 samples, 0.08%)</title><rect x="91.0472%" y="453" width="0.0799%" height="15" fill="rgb(208,228,43)" fg:x="1139" fg:w="1"/><text x="91.2972%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="91.0472%" y="437" width="0.0799%" height="15" fill="rgb(214,203,3)" fg:x="1139" fg:w="1"/><text x="91.2972%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="91.0472%" y="421" width="0.0799%" height="15" fill="rgb(207,149,29)" fg:x="1139" fg:w="1"/><text x="91.2972%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.0472%" y="405" width="0.0799%" height="15" fill="rgb(250,105,7)" fg:x="1139" fg:w="1"/><text x="91.2972%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0472%" y="389" width="0.0799%" height="15" fill="rgb(232,222,16)" fg:x="1139" fg:w="1"/><text x="91.2972%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0472%" y="373" width="0.0799%" height="15" fill="rgb(209,32,24)" fg:x="1139" fg:w="1"/><text x="91.2972%" y="383.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="91.0472%" y="501" width="0.1599%" height="15" fill="rgb(225,13,6)" fg:x="1139" fg:w="2"/><text x="91.2972%" y="511.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (2 samples, 0.16%)</title><rect x="91.0472%" y="485" width="0.1599%" height="15" fill="rgb(245,226,26)" fg:x="1139" fg:w="2"/><text x="91.2972%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="91.1271%" y="469" width="0.0799%" height="15" fill="rgb(229,178,27)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.1271%" y="453" width="0.0799%" height="15" fill="rgb(205,227,28)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1271%" y="437" width="0.0799%" height="15" fill="rgb(210,191,45)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1271%" y="421" width="0.0799%" height="15" fill="rgb(206,124,16)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1271%" y="405" width="0.0799%" height="15" fill="rgb(210,162,0)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1271%" y="389" width="0.0799%" height="15" fill="rgb(211,54,38)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1271%" y="373" width="0.0799%" height="15" fill="rgb(248,192,3)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.1271%" y="357" width="0.0799%" height="15" fill="rgb(233,187,18)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.1271%" y="341" width="0.0799%" height="15" fill="rgb(237,208,14)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.1271%" y="325" width="0.0799%" height="15" fill="rgb(212,77,1)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1271%" y="309" width="0.0799%" height="15" fill="rgb(210,163,22)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1271%" y="293" width="0.0799%" height="15" fill="rgb(250,58,28)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.1271%" y="277" width="0.0799%" height="15" fill="rgb(254,28,41)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.1271%" y="261" width="0.0799%" height="15" fill="rgb(237,162,36)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.1271%" y="245" width="0.0799%" height="15" fill="rgb(232,56,6)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.1271%" y="229" width="0.0799%" height="15" fill="rgb(216,127,42)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1271%" y="213" width="0.0799%" height="15" fill="rgb(241,69,15)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.2870%" y="325" width="0.0799%" height="15" fill="rgb(227,180,19)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="335.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.08%)</title><rect x="91.2870%" y="309" width="0.0799%" height="15" fill="rgb(231,188,29)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="319.50"></text></g><g><title>&lt;core::char::CaseMappingIter as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.08%)</title><rect x="91.2870%" y="293" width="0.0799%" height="15" fill="rgb(224,176,27)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.3669%" y="293" width="0.0799%" height="15" fill="rgb(249,214,19)" fg:x="1143" fg:w="1"/><text x="91.6169%" y="303.50"></text></g><g><title>&lt;replies::AreaObservation as replies::ToTaggedJson&gt;::to_tagged_json (3 samples, 0.24%)</title><rect x="91.2870%" y="341" width="0.2398%" height="15" fill="rgb(240,0,4)" fg:x="1142" fg:w="3"/><text x="91.5370%" y="351.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::AreaObservation&gt;::serialize (2 samples, 0.16%)</title><rect x="91.3669%" y="325" width="0.1599%" height="15" fill="rgb(233,28,41)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="91.3669%" y="309" width="0.1599%" height="15" fill="rgb(220,90,51)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="319.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (1 samples, 0.08%)</title><rect x="91.4468%" y="293" width="0.0799%" height="15" fill="rgb(250,52,22)" fg:x="1144" fg:w="1"/><text x="91.6968%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.4468%" y="277" width="0.0799%" height="15" fill="rgb(231,152,36)" fg:x="1144" fg:w="1"/><text x="91.6968%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4468%" y="261" width="0.0799%" height="15" fill="rgb(250,218,4)" fg:x="1144" fg:w="1"/><text x="91.6968%" y="271.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::AreaObservation&gt;&gt;::try_from (4 samples, 0.32%)</title><rect x="91.2870%" y="357" width="0.3197%" height="15" fill="rgb(210,38,21)" fg:x="1142" fg:w="4"/><text x="91.5370%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (1 samples, 0.08%)</title><rect x="91.5268%" y="341" width="0.0799%" height="15" fill="rgb(230,75,13)" fg:x="1145" fg:w="1"/><text x="91.7768%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="91.5268%" y="325" width="0.0799%" height="15" fill="rgb(250,68,53)" fg:x="1145" fg:w="1"/><text x="91.7768%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5268%" y="309" width="0.0799%" height="15" fill="rgb(250,210,16)" fg:x="1145" fg:w="1"/><text x="91.7768%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.6067%" y="357" width="0.0799%" height="15" fill="rgb(240,132,5)" fg:x="1146" fg:w="1"/><text x="91.8567%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="92.0064%" y="293" width="0.2398%" height="15" fill="rgb(222,148,48)" fg:x="1151" fg:w="3"/><text x="92.2564%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.0863%" y="277" width="0.1599%" height="15" fill="rgb(247,181,24)" fg:x="1152" fg:w="2"/><text x="92.3363%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.0863%" y="261" width="0.1599%" height="15" fill="rgb(239,5,31)" fg:x="1152" fg:w="2"/><text x="92.3363%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.2462%" y="229" width="0.0799%" height="15" fill="rgb(241,152,38)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.2462%" y="213" width="0.0799%" height="15" fill="rgb(246,200,37)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (7 samples, 0.56%)</title><rect x="91.8465%" y="325" width="0.5596%" height="15" fill="rgb(243,210,26)" fg:x="1149" fg:w="7"/><text x="92.0965%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="91.9265%" y="309" width="0.4796%" height="15" fill="rgb(222,22,22)" fg:x="1150" fg:w="6"/><text x="92.1765%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.2462%" y="293" width="0.1599%" height="15" fill="rgb(208,129,28)" fg:x="1154" fg:w="2"/><text x="92.4962%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.2462%" y="277" width="0.1599%" height="15" fill="rgb(254,169,28)" fg:x="1154" fg:w="2"/><text x="92.4962%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="92.2462%" y="261" width="0.1599%" height="15" fill="rgb(225,45,17)" fg:x="1154" fg:w="2"/><text x="92.4962%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.2462%" y="245" width="0.1599%" height="15" fill="rgb(232,199,2)" fg:x="1154" fg:w="2"/><text x="92.4962%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3261%" y="229" width="0.0799%" height="15" fill="rgb(235,33,40)" fg:x="1155" fg:w="1"/><text x="92.5761%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3261%" y="213" width="0.0799%" height="15" fill="rgb(237,89,50)" fg:x="1155" fg:w="1"/><text x="92.5761%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.4061%" y="229" width="0.0799%" height="15" fill="rgb(238,126,5)" fg:x="1156" fg:w="1"/><text x="92.6561%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.4061%" y="213" width="0.0799%" height="15" fill="rgb(247,214,42)" fg:x="1156" fg:w="1"/><text x="92.6561%" y="223.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (10 samples, 0.80%)</title><rect x="91.7666%" y="341" width="0.7994%" height="15" fill="rgb(238,60,45)" fg:x="1148" fg:w="10"/><text x="92.0166%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="92.4061%" y="325" width="0.1599%" height="15" fill="rgb(225,69,44)" fg:x="1156" fg:w="2"/><text x="92.6561%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="92.4061%" y="309" width="0.1599%" height="15" fill="rgb(241,13,44)" fg:x="1156" fg:w="2"/><text x="92.6561%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.4061%" y="293" width="0.1599%" height="15" fill="rgb(227,121,22)" fg:x="1156" fg:w="2"/><text x="92.6561%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.4061%" y="277" width="0.1599%" height="15" fill="rgb(231,160,23)" fg:x="1156" fg:w="2"/><text x="92.6561%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="92.4061%" y="261" width="0.1599%" height="15" fill="rgb(250,179,43)" fg:x="1156" fg:w="2"/><text x="92.6561%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.4061%" y="245" width="0.1599%" height="15" fill="rgb(233,54,46)" fg:x="1156" fg:w="2"/><text x="92.6561%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.4860%" y="229" width="0.0799%" height="15" fill="rgb(247,120,42)" fg:x="1157" fg:w="1"/><text x="92.7360%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4860%" y="213" width="0.0799%" height="15" fill="rgb(221,219,12)" fg:x="1157" fg:w="1"/><text x="92.7360%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.5659%" y="341" width="0.0799%" height="15" fill="rgb(211,126,8)" fg:x="1158" fg:w="1"/><text x="92.8159%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5659%" y="325" width="0.0799%" height="15" fill="rgb(218,154,33)" fg:x="1158" fg:w="1"/><text x="92.8159%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="92.6459%" y="277" width="0.0799%" height="15" fill="rgb(212,199,16)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.6459%" y="261" width="0.0799%" height="15" fill="rgb(236,215,46)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.7258%" y="261" width="0.1599%" height="15" fill="rgb(232,32,22)" fg:x="1160" fg:w="2"/><text x="92.9758%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.7258%" y="245" width="0.1599%" height="15" fill="rgb(234,79,15)" fg:x="1160" fg:w="2"/><text x="92.9758%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.7258%" y="229" width="0.1599%" height="15" fill="rgb(235,187,47)" fg:x="1160" fg:w="2"/><text x="92.9758%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.8058%" y="213" width="0.0799%" height="15" fill="rgb(244,69,37)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.8058%" y="197" width="0.0799%" height="15" fill="rgb(249,140,25)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.8058%" y="181" width="0.0799%" height="15" fill="rgb(213,69,8)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.8058%" y="165" width="0.0799%" height="15" fill="rgb(220,136,2)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.8058%" y="149" width="0.0799%" height="15" fill="rgb(237,50,36)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.8058%" y="133" width="0.0799%" height="15" fill="rgb(226,18,11)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.8058%" y="117" width="0.0799%" height="15" fill="rgb(243,156,2)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.8058%" y="101" width="0.0799%" height="15" fill="rgb(218,8,34)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.8058%" y="85" width="0.0799%" height="15" fill="rgb(250,94,35)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.8058%" y="69" width="0.0799%" height="15" fill="rgb(229,127,21)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.8058%" y="53" width="0.0799%" height="15" fill="rgb(234,49,5)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.8058%" y="37" width="0.0799%" height="15" fill="rgb(248,12,16)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="47.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.8857%" y="197" width="0.0799%" height="15" fill="rgb(208,220,31)" fg:x="1162" fg:w="1"/><text x="93.1357%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9656%" y="197" width="0.0799%" height="15" fill="rgb(243,184,0)" fg:x="1163" fg:w="1"/><text x="93.2156%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.9656%" y="181" width="0.0799%" height="15" fill="rgb(217,38,21)" fg:x="1163" fg:w="1"/><text x="93.2156%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="92.6459%" y="293" width="0.4796%" height="15" fill="rgb(239,120,45)" fg:x="1159" fg:w="6"/><text x="92.8959%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="92.7258%" y="277" width="0.3997%" height="15" fill="rgb(235,33,2)" fg:x="1160" fg:w="5"/><text x="92.9758%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="92.8857%" y="261" width="0.2398%" height="15" fill="rgb(249,161,5)" fg:x="1162" fg:w="3"/><text x="93.1357%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.8857%" y="245" width="0.2398%" height="15" fill="rgb(250,165,48)" fg:x="1162" fg:w="3"/><text x="93.1357%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="92.8857%" y="229" width="0.2398%" height="15" fill="rgb(221,23,45)" fg:x="1162" fg:w="3"/><text x="93.1357%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.8857%" y="213" width="0.2398%" height="15" fill="rgb(217,108,46)" fg:x="1162" fg:w="3"/><text x="93.1357%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.0456%" y="197" width="0.0799%" height="15" fill="rgb(254,26,35)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0456%" y="181" width="0.0799%" height="15" fill="rgb(218,223,28)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="191.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="93.1255%" y="277" width="0.0799%" height="15" fill="rgb(242,27,47)" fg:x="1165" fg:w="1"/><text x="93.3755%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.2854%" y="261" width="0.1599%" height="15" fill="rgb(218,39,35)" fg:x="1167" fg:w="2"/><text x="93.5354%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.2854%" y="245" width="0.1599%" height="15" fill="rgb(232,127,16)" fg:x="1167" fg:w="2"/><text x="93.5354%" y="255.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (11 samples, 0.88%)</title><rect x="92.6459%" y="341" width="0.8793%" height="15" fill="rgb(231,219,51)" fg:x="1159" fg:w="11"/><text x="92.8959%" y="351.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (11 samples, 0.88%)</title><rect x="92.6459%" y="325" width="0.8793%" height="15" fill="rgb(217,220,46)" fg:x="1159" fg:w="11"/><text x="92.8959%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::new (11 samples, 0.88%)</title><rect x="92.6459%" y="309" width="0.8793%" height="15" fill="rgb(230,75,1)" fg:x="1159" fg:w="11"/><text x="92.8959%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="93.1255%" y="293" width="0.3997%" height="15" fill="rgb(218,2,8)" fg:x="1165" fg:w="5"/><text x="93.3755%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="93.2054%" y="277" width="0.3197%" height="15" fill="rgb(206,111,30)" fg:x="1166" fg:w="4"/><text x="93.4554%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4452%" y="261" width="0.0799%" height="15" fill="rgb(209,135,6)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4452%" y="245" width="0.0799%" height="15" fill="rgb(205,169,10)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.4452%" y="229" width="0.0799%" height="15" fill="rgb(212,204,38)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4452%" y="213" width="0.0799%" height="15" fill="rgb(205,199,14)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4452%" y="197" width="0.0799%" height="15" fill="rgb(212,4,6)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4452%" y="181" width="0.0799%" height="15" fill="rgb(250,15,10)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.4452%" y="165" width="0.0799%" height="15" fill="rgb(212,49,51)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="175.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5252%" y="309" width="0.0799%" height="15" fill="rgb(235,21,9)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.5252%" y="293" width="0.0799%" height="15" fill="rgb(251,31,32)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5252%" y="277" width="0.0799%" height="15" fill="rgb(246,23,9)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.5252%" y="261" width="0.0799%" height="15" fill="rgb(225,216,14)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5252%" y="245" width="0.0799%" height="15" fill="rgb(215,200,26)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5252%" y="229" width="0.0799%" height="15" fill="rgb(237,130,47)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.5252%" y="213" width="0.0799%" height="15" fill="rgb(247,74,14)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.5252%" y="197" width="0.0799%" height="15" fill="rgb(254,97,46)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.5252%" y="181" width="0.0799%" height="15" fill="rgb(234,191,1)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.5252%" y="165" width="0.0799%" height="15" fill="rgb(215,165,14)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.5252%" y="149" width="0.0799%" height="15" fill="rgb(230,182,6)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.5252%" y="133" width="0.0799%" height="15" fill="rgb(210,127,39)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.5252%" y="117" width="0.0799%" height="15" fill="rgb(223,212,51)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.5252%" y="101" width="0.0799%" height="15" fill="rgb(226,176,43)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.5252%" y="85" width="0.0799%" height="15" fill="rgb(222,155,4)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="95.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="93.5252%" y="69" width="0.0799%" height="15" fill="rgb(215,149,7)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="79.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="93.5252%" y="53" width="0.0799%" height="15" fill="rgb(252,199,23)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="63.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.6051%" y="277" width="0.0799%" height="15" fill="rgb(245,52,29)" fg:x="1171" fg:w="1"/><text x="93.8551%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.6051%" y="261" width="0.0799%" height="15" fill="rgb(221,228,19)" fg:x="1171" fg:w="1"/><text x="93.8551%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6051%" y="245" width="0.0799%" height="15" fill="rgb(253,101,6)" fg:x="1171" fg:w="1"/><text x="93.8551%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.6851%" y="277" width="0.0799%" height="15" fill="rgb(211,130,8)" fg:x="1172" fg:w="1"/><text x="93.9351%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.6851%" y="261" width="0.0799%" height="15" fill="rgb(238,37,53)" fg:x="1172" fg:w="1"/><text x="93.9351%" y="271.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.6851%" y="245" width="0.0799%" height="15" fill="rgb(235,145,5)" fg:x="1172" fg:w="1"/><text x="93.9351%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.6851%" y="229" width="0.0799%" height="15" fill="rgb(244,12,43)" fg:x="1172" fg:w="1"/><text x="93.9351%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.6851%" y="213" width="0.0799%" height="15" fill="rgb(246,195,24)" fg:x="1172" fg:w="1"/><text x="93.9351%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (37 samples, 2.96%)</title><rect x="90.8873%" y="565" width="2.9576%" height="15" fill="rgb(235,163,6)" fg:x="1137" fg:w="37"/><text x="91.1373%" y="575.50">&lt;en..</text></g><g><title>kernel::plugins::mw::apply_middleware (37 samples, 2.96%)</title><rect x="90.8873%" y="549" width="2.9576%" height="15" fill="rgb(236,218,17)" fg:x="1137" fg:w="37"/><text x="91.1373%" y="559.50">ker..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (37 samples, 2.96%)</title><rect x="90.8873%" y="533" width="2.9576%" height="15" fill="rgb(235,12,38)" fg:x="1137" fg:w="37"/><text x="91.1373%" y="543.50">ker..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (37 samples, 2.96%)</title><rect x="90.8873%" y="517" width="2.9576%" height="15" fill="rgb(225,195,33)" fg:x="1137" fg:w="37"/><text x="91.1373%" y="527.50">&lt;en..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (33 samples, 2.64%)</title><rect x="91.2070%" y="501" width="2.6379%" height="15" fill="rgb(238,54,35)" fg:x="1141" fg:w="33"/><text x="91.4570%" y="511.50">ke..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (33 samples, 2.64%)</title><rect x="91.2070%" y="485" width="2.6379%" height="15" fill="rgb(238,33,7)" fg:x="1141" fg:w="33"/><text x="91.4570%" y="495.50">&lt;p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (33 samples, 2.64%)</title><rect x="91.2070%" y="469" width="2.6379%" height="15" fill="rgb(245,5,14)" fg:x="1141" fg:w="33"/><text x="91.4570%" y="479.50">ke..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (33 samples, 2.64%)</title><rect x="91.2070%" y="453" width="2.6379%" height="15" fill="rgb(251,95,31)" fg:x="1141" fg:w="33"/><text x="91.4570%" y="463.50">co..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (33 samples, 2.64%)</title><rect x="91.2070%" y="437" width="2.6379%" height="15" fill="rgb(222,15,46)" fg:x="1141" fg:w="33"/><text x="91.4570%" y="447.50">ke..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (33 samples, 2.64%)</title><rect x="91.2070%" y="421" width="2.6379%" height="15" fill="rgb(226,182,24)" fg:x="1141" fg:w="33"/><text x="91.4570%" y="431.50">co..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (33 samples, 2.64%)</title><rect x="91.2070%" y="405" width="2.6379%" height="15" fill="rgb(229,105,41)" fg:x="1141" fg:w="33"/><text x="91.4570%" y="415.50">&lt;a..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (33 samples, 2.64%)</title><rect x="91.2070%" y="389" width="2.6379%" height="15" fill="rgb(216,99,53)" fg:x="1141" fg:w="33"/><text x="91.4570%" y="399.50">&lt;e..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (32 samples, 2.56%)</title><rect x="91.2870%" y="373" width="2.5580%" height="15" fill="rgb(253,26,20)" fg:x="1142" fg:w="32"/><text x="91.5370%" y="383.50">&lt;p..</text></g><g><title>plugins_core::looking::model::new_area_observation (27 samples, 2.16%)</title><rect x="91.6867%" y="357" width="2.1583%" height="15" fill="rgb(249,155,28)" fg:x="1147" fg:w="27"/><text x="91.9367%" y="367.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="93.5252%" y="341" width="0.3197%" height="15" fill="rgb(241,221,2)" fg:x="1170" fg:w="4"/><text x="93.7752%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="93.5252%" y="325" width="0.3197%" height="15" fill="rgb(219,124,6)" fg:x="1170" fg:w="4"/><text x="93.7752%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.6051%" y="309" width="0.2398%" height="15" fill="rgb(233,37,6)" fg:x="1171" fg:w="3"/><text x="93.8551%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.6051%" y="293" width="0.2398%" height="15" fill="rgb(238,20,14)" fg:x="1171" fg:w="3"/><text x="93.8551%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7650%" y="277" width="0.0799%" height="15" fill="rgb(232,106,27)" fg:x="1173" fg:w="1"/><text x="94.0150%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7650%" y="261" width="0.0799%" height="15" fill="rgb(246,157,24)" fg:x="1173" fg:w="1"/><text x="94.0150%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.7650%" y="245" width="0.0799%" height="15" fill="rgb(214,153,10)" fg:x="1173" fg:w="1"/><text x="94.0150%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.7650%" y="229" width="0.0799%" height="15" fill="rgb(212,94,6)" fg:x="1173" fg:w="1"/><text x="94.0150%" y="239.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="93.7650%" y="213" width="0.0799%" height="15" fill="rgb(254,25,27)" fg:x="1173" fg:w="1"/><text x="94.0150%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.8449%" y="501" width="0.2398%" height="15" fill="rgb(250,43,52)" fg:x="1174" fg:w="3"/><text x="94.0949%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.8449%" y="485" width="0.2398%" height="15" fill="rgb(221,226,40)" fg:x="1174" fg:w="3"/><text x="94.0949%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.8449%" y="469" width="0.2398%" height="15" fill="rgb(235,162,34)" fg:x="1174" fg:w="3"/><text x="94.0949%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.8449%" y="453" width="0.2398%" height="15" fill="rgb(239,24,26)" fg:x="1174" fg:w="3"/><text x="94.0949%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.9249%" y="437" width="0.1599%" height="15" fill="rgb(244,226,11)" fg:x="1175" fg:w="2"/><text x="94.1749%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.9249%" y="421" width="0.1599%" height="15" fill="rgb(225,23,10)" fg:x="1175" fg:w="2"/><text x="94.1749%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="93.9249%" y="405" width="0.1599%" height="15" fill="rgb(249,125,6)" fg:x="1175" fg:w="2"/><text x="94.1749%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="93.9249%" y="389" width="0.1599%" height="15" fill="rgb(246,212,12)" fg:x="1175" fg:w="2"/><text x="94.1749%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="93.9249%" y="373" width="0.1599%" height="15" fill="rgb(230,43,32)" fg:x="1175" fg:w="2"/><text x="94.1749%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0048%" y="357" width="0.0799%" height="15" fill="rgb(210,95,23)" fg:x="1176" fg:w="1"/><text x="94.2548%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0048%" y="341" width="0.0799%" height="15" fill="rgb(229,103,33)" fg:x="1176" fg:w="1"/><text x="94.2548%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.0048%" y="325" width="0.0799%" height="15" fill="rgb(222,104,27)" fg:x="1176" fg:w="1"/><text x="94.2548%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.0048%" y="309" width="0.0799%" height="15" fill="rgb(239,221,23)" fg:x="1176" fg:w="1"/><text x="94.2548%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.0048%" y="293" width="0.0799%" height="15" fill="rgb(222,98,21)" fg:x="1176" fg:w="1"/><text x="94.2548%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.0048%" y="277" width="0.0799%" height="15" fill="rgb(231,101,20)" fg:x="1176" fg:w="1"/><text x="94.2548%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="94.0048%" y="261" width="0.0799%" height="15" fill="rgb(215,150,22)" fg:x="1176" fg:w="1"/><text x="94.2548%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="94.0048%" y="245" width="0.0799%" height="15" fill="rgb(248,3,34)" fg:x="1176" fg:w="1"/><text x="94.2548%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.0847%" y="421" width="0.0799%" height="15" fill="rgb(220,141,21)" fg:x="1177" fg:w="1"/><text x="94.3347%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.0847%" y="405" width="0.0799%" height="15" fill="rgb(223,41,48)" fg:x="1177" fg:w="1"/><text x="94.3347%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.0847%" y="389" width="0.0799%" height="15" fill="rgb(247,12,5)" fg:x="1177" fg:w="1"/><text x="94.3347%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1647%" y="421" width="0.0799%" height="15" fill="rgb(206,173,10)" fg:x="1178" fg:w="1"/><text x="94.4147%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.1647%" y="405" width="0.0799%" height="15" fill="rgb(233,214,37)" fg:x="1178" fg:w="1"/><text x="94.4147%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.2446%" y="405" width="0.1599%" height="15" fill="rgb(238,86,43)" fg:x="1179" fg:w="2"/><text x="94.4946%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.2446%" y="389" width="0.1599%" height="15" fill="rgb(212,182,8)" fg:x="1179" fg:w="2"/><text x="94.4946%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.2446%" y="373" width="0.1599%" height="15" fill="rgb(240,91,47)" fg:x="1179" fg:w="2"/><text x="94.4946%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.2446%" y="357" width="0.1599%" height="15" fill="rgb(209,138,26)" fg:x="1179" fg:w="2"/><text x="94.4946%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.3245%" y="341" width="0.0799%" height="15" fill="rgb(231,163,20)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3245%" y="325" width="0.0799%" height="15" fill="rgb(214,91,54)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3245%" y="309" width="0.0799%" height="15" fill="rgb(230,32,17)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.3245%" y="293" width="0.0799%" height="15" fill="rgb(231,34,34)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3245%" y="277" width="0.0799%" height="15" fill="rgb(224,228,27)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="287.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="94.0847%" y="501" width="0.3997%" height="15" fill="rgb(219,35,40)" fg:x="1177" fg:w="5"/><text x="94.3347%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="94.0847%" y="485" width="0.3997%" height="15" fill="rgb(234,42,8)" fg:x="1177" fg:w="5"/><text x="94.3347%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="94.0847%" y="469" width="0.3997%" height="15" fill="rgb(226,75,22)" fg:x="1177" fg:w="5"/><text x="94.3347%" y="479.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (5 samples, 0.40%)</title><rect x="94.0847%" y="453" width="0.3997%" height="15" fill="rgb(242,203,28)" fg:x="1177" fg:w="5"/><text x="94.3347%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="94.0847%" y="437" width="0.3997%" height="15" fill="rgb(221,3,9)" fg:x="1177" fg:w="5"/><text x="94.3347%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.2446%" y="421" width="0.2398%" height="15" fill="rgb(214,34,31)" fg:x="1179" fg:w="3"/><text x="94.4946%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4045%" y="405" width="0.0799%" height="15" fill="rgb(252,119,15)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4045%" y="389" width="0.0799%" height="15" fill="rgb(244,224,31)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.4045%" y="373" width="0.0799%" height="15" fill="rgb(215,8,51)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4045%" y="357" width="0.0799%" height="15" fill="rgb(207,24,1)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4045%" y="341" width="0.0799%" height="15" fill="rgb(245,90,0)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (11 samples, 0.88%)</title><rect x="93.8449%" y="533" width="0.8793%" height="15" fill="rgb(246,43,48)" fg:x="1174" fg:w="11"/><text x="94.0949%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="93.8449%" y="517" width="0.8793%" height="15" fill="rgb(252,218,10)" fg:x="1174" fg:w="11"/><text x="94.0949%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="94.4844%" y="501" width="0.2398%" height="15" fill="rgb(231,24,35)" fg:x="1182" fg:w="3"/><text x="94.7344%" y="511.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="94.4844%" y="485" width="0.2398%" height="15" fill="rgb(225,66,19)" fg:x="1182" fg:w="3"/><text x="94.7344%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.4844%" y="469" width="0.2398%" height="15" fill="rgb(214,96,51)" fg:x="1182" fg:w="3"/><text x="94.7344%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.4844%" y="453" width="0.2398%" height="15" fill="rgb(251,151,47)" fg:x="1182" fg:w="3"/><text x="94.7344%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.4844%" y="437" width="0.2398%" height="15" fill="rgb(236,79,14)" fg:x="1182" fg:w="3"/><text x="94.7344%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.4844%" y="421" width="0.2398%" height="15" fill="rgb(210,205,11)" fg:x="1182" fg:w="3"/><text x="94.7344%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.4844%" y="405" width="0.2398%" height="15" fill="rgb(233,142,53)" fg:x="1182" fg:w="3"/><text x="94.7344%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.6443%" y="389" width="0.0799%" height="15" fill="rgb(212,116,48)" fg:x="1184" fg:w="1"/><text x="94.8943%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.6443%" y="373" width="0.0799%" height="15" fill="rgb(234,55,33)" fg:x="1184" fg:w="1"/><text x="94.8943%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.6443%" y="357" width="0.0799%" height="15" fill="rgb(253,92,27)" fg:x="1184" fg:w="1"/><text x="94.8943%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.6443%" y="341" width="0.0799%" height="15" fill="rgb(220,7,35)" fg:x="1184" fg:w="1"/><text x="94.8943%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="94.6443%" y="325" width="0.0799%" height="15" fill="rgb(246,124,6)" fg:x="1184" fg:w="1"/><text x="94.8943%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.7242%" y="501" width="0.1599%" height="15" fill="rgb(212,111,51)" fg:x="1185" fg:w="2"/><text x="94.9742%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.8042%" y="485" width="0.0799%" height="15" fill="rgb(253,116,7)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.8042%" y="469" width="0.0799%" height="15" fill="rgb(213,145,18)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.8042%" y="453" width="0.0799%" height="15" fill="rgb(219,149,7)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8042%" y="437" width="0.0799%" height="15" fill="rgb(225,156,20)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9640%" y="421" width="0.0799%" height="15" fill="rgb(211,98,19)" fg:x="1188" fg:w="1"/><text x="95.2140%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0440%" y="421" width="0.0799%" height="15" fill="rgb(231,192,31)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0440%" y="405" width="0.0799%" height="15" fill="rgb(249,95,19)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.0440%" y="389" width="0.0799%" height="15" fill="rgb(247,101,36)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.0440%" y="373" width="0.0799%" height="15" fill="rgb(221,45,43)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.0440%" y="357" width="0.0799%" height="15" fill="rgb(220,42,1)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.0440%" y="341" width="0.0799%" height="15" fill="rgb(236,19,24)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.0440%" y="325" width="0.0799%" height="15" fill="rgb(225,192,6)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="94.8841%" y="453" width="0.3197%" height="15" fill="rgb(242,30,19)" fg:x="1187" fg:w="4"/><text x="95.1341%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="94.8841%" y="437" width="0.3197%" height="15" fill="rgb(240,36,6)" fg:x="1187" fg:w="4"/><text x="95.1341%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1239%" y="421" width="0.0799%" height="15" fill="rgb(246,40,28)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1239%" y="405" width="0.0799%" height="15" fill="rgb(225,155,33)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1239%" y="389" width="0.0799%" height="15" fill="rgb(240,65,18)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1239%" y="373" width="0.0799%" height="15" fill="rgb(217,0,48)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.1239%" y="357" width="0.0799%" height="15" fill="rgb(217,80,15)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.1239%" y="341" width="0.0799%" height="15" fill="rgb(253,43,51)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.1239%" y="325" width="0.0799%" height="15" fill="rgb(246,60,4)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1239%" y="309" width="0.0799%" height="15" fill="rgb(230,40,54)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1239%" y="293" width="0.0799%" height="15" fill="rgb(208,20,44)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.1239%" y="277" width="0.0799%" height="15" fill="rgb(230,22,22)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.1239%" y="261" width="0.0799%" height="15" fill="rgb(207,57,4)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.1239%" y="245" width="0.0799%" height="15" fill="rgb(242,130,33)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.1239%" y="229" width="0.0799%" height="15" fill="rgb(218,66,43)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="95.1239%" y="213" width="0.0799%" height="15" fill="rgb(236,105,16)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.3637%" y="357" width="0.0799%" height="15" fill="rgb(230,46,15)" fg:x="1193" fg:w="1"/><text x="95.6137%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.3637%" y="341" width="0.0799%" height="15" fill="rgb(251,172,40)" fg:x="1193" fg:w="1"/><text x="95.6137%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="95.3637%" y="325" width="0.0799%" height="15" fill="rgb(225,217,32)" fg:x="1193" fg:w="1"/><text x="95.6137%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.3637%" y="309" width="0.0799%" height="15" fill="rgb(243,10,29)" fg:x="1193" fg:w="1"/><text x="95.6137%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3637%" y="293" width="0.0799%" height="15" fill="rgb(207,102,10)" fg:x="1193" fg:w="1"/><text x="95.6137%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="95.2838%" y="405" width="0.2398%" height="15" fill="rgb(241,125,5)" fg:x="1192" fg:w="3"/><text x="95.5338%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="95.2838%" y="389" width="0.2398%" height="15" fill="rgb(230,125,29)" fg:x="1192" fg:w="3"/><text x="95.5338%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="95.3637%" y="373" width="0.1599%" height="15" fill="rgb(223,65,44)" fg:x="1193" fg:w="2"/><text x="95.6137%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.4436%" y="357" width="0.0799%" height="15" fill="rgb(224,188,28)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4436%" y="341" width="0.0799%" height="15" fill="rgb(254,197,27)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="95.4436%" y="325" width="0.0799%" height="15" fill="rgb(220,200,25)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="95.4436%" y="309" width="0.0799%" height="15" fill="rgb(239,225,54)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="319.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="95.4436%" y="293" width="0.0799%" height="15" fill="rgb(211,59,40)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="303.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="95.4436%" y="277" width="0.0799%" height="15" fill="rgb(213,176,46)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="287.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="95.4436%" y="261" width="0.0799%" height="15" fill="rgb(226,99,4)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.6035%" y="373" width="0.0799%" height="15" fill="rgb(239,203,43)" fg:x="1196" fg:w="1"/><text x="95.8535%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="95.2038%" y="453" width="0.6395%" height="15" fill="rgb(246,1,45)" fg:x="1191" fg:w="8"/><text x="95.4538%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.56%)</title><rect x="95.2838%" y="437" width="0.5596%" height="15" fill="rgb(231,42,52)" fg:x="1192" fg:w="7"/><text x="95.5338%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="95.2838%" y="421" width="0.5596%" height="15" fill="rgb(240,13,50)" fg:x="1192" fg:w="7"/><text x="95.5338%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="95.5236%" y="405" width="0.3197%" height="15" fill="rgb(225,81,14)" fg:x="1195" fg:w="4"/><text x="95.7736%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="95.5236%" y="389" width="0.3197%" height="15" fill="rgb(216,182,23)" fg:x="1195" fg:w="4"/><text x="95.7736%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="95.6835%" y="373" width="0.1599%" height="15" fill="rgb(233,137,19)" fg:x="1197" fg:w="2"/><text x="95.9335%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="95.6835%" y="357" width="0.1599%" height="15" fill="rgb(242,61,46)" fg:x="1197" fg:w="2"/><text x="95.9335%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="95.6835%" y="341" width="0.1599%" height="15" fill="rgb(221,168,51)" fg:x="1197" fg:w="2"/><text x="95.9335%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="95.6835%" y="325" width="0.1599%" height="15" fill="rgb(238,48,15)" fg:x="1197" fg:w="2"/><text x="95.9335%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="95.6835%" y="309" width="0.1599%" height="15" fill="rgb(216,13,16)" fg:x="1197" fg:w="2"/><text x="95.9335%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.12%)</title><rect x="94.8841%" y="501" width="1.1191%" height="15" fill="rgb(223,185,34)" fg:x="1187" fg:w="14"/><text x="95.1341%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.12%)</title><rect x="94.8841%" y="485" width="1.1191%" height="15" fill="rgb(228,94,42)" fg:x="1187" fg:w="14"/><text x="95.1341%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (14 samples, 1.12%)</title><rect x="94.8841%" y="469" width="1.1191%" height="15" fill="rgb(218,166,43)" fg:x="1187" fg:w="14"/><text x="95.1341%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.8433%" y="453" width="0.1599%" height="15" fill="rgb(232,30,50)" fg:x="1199" fg:w="2"/><text x="96.0933%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.8433%" y="437" width="0.1599%" height="15" fill="rgb(245,206,45)" fg:x="1199" fg:w="2"/><text x="96.0933%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.9233%" y="421" width="0.0799%" height="15" fill="rgb(220,56,22)" fg:x="1200" fg:w="1"/><text x="96.1733%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.9233%" y="405" width="0.0799%" height="15" fill="rgb(239,129,38)" fg:x="1200" fg:w="1"/><text x="96.1733%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.9233%" y="389" width="0.0799%" height="15" fill="rgb(207,68,41)" fg:x="1200" fg:w="1"/><text x="96.1733%" y="399.50"></text></g><g><title>engine::session::internal::Added::find_refs (17 samples, 1.36%)</title><rect x="94.7242%" y="533" width="1.3589%" height="15" fill="rgb(221,21,7)" fg:x="1185" fg:w="17"/><text x="94.9742%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (17 samples, 1.36%)</title><rect x="94.7242%" y="517" width="1.3589%" height="15" fill="rgb(240,33,25)" fg:x="1185" fg:w="17"/><text x="94.9742%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.0032%" y="501" width="0.0799%" height="15" fill="rgb(242,119,10)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0032%" y="485" width="0.0799%" height="15" fill="rgb(214,149,40)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0032%" y="469" width="0.0799%" height="15" fill="rgb(228,25,36)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.0032%" y="453" width="0.0799%" height="15" fill="rgb(222,59,15)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0032%" y="437" width="0.0799%" height="15" fill="rgb(218,170,0)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.0831%" y="485" width="0.0799%" height="15" fill="rgb(232,173,23)" fg:x="1202" fg:w="1"/><text x="96.3331%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.0831%" y="469" width="0.0799%" height="15" fill="rgb(218,116,1)" fg:x="1202" fg:w="1"/><text x="96.3331%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.0831%" y="517" width="0.1599%" height="15" fill="rgb(207,34,4)" fg:x="1202" fg:w="2"/><text x="96.3331%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.0831%" y="501" width="0.1599%" height="15" fill="rgb(229,54,52)" fg:x="1202" fg:w="2"/><text x="96.3331%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1631%" y="485" width="0.0799%" height="15" fill="rgb(211,86,23)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1631%" y="469" width="0.0799%" height="15" fill="rgb(254,153,34)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.1631%" y="453" width="0.0799%" height="15" fill="rgb(219,220,14)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.1631%" y="437" width="0.0799%" height="15" fill="rgb(247,8,26)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.1631%" y="421" width="0.0799%" height="15" fill="rgb(213,129,42)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1631%" y="405" width="0.0799%" height="15" fill="rgb(225,95,41)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1631%" y="389" width="0.0799%" height="15" fill="rgb(215,134,24)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.1631%" y="373" width="0.0799%" height="15" fill="rgb(235,23,54)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.1631%" y="357" width="0.0799%" height="15" fill="rgb(229,96,31)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.1631%" y="341" width="0.0799%" height="15" fill="rgb(206,111,12)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.1631%" y="325" width="0.0799%" height="15" fill="rgb(222,177,8)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1631%" y="309" width="0.0799%" height="15" fill="rgb(251,36,52)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2430%" y="485" width="0.0799%" height="15" fill="rgb(216,182,29)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2430%" y="469" width="0.0799%" height="15" fill="rgb(241,145,50)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2430%" y="453" width="0.0799%" height="15" fill="rgb(231,71,35)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2430%" y="437" width="0.0799%" height="15" fill="rgb(218,22,17)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2430%" y="421" width="0.0799%" height="15" fill="rgb(225,227,6)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.2430%" y="405" width="0.0799%" height="15" fill="rgb(224,204,17)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.2430%" y="389" width="0.0799%" height="15" fill="rgb(227,61,28)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.2430%" y="373" width="0.0799%" height="15" fill="rgb(242,148,23)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.2430%" y="357" width="0.0799%" height="15" fill="rgb(237,105,33)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.2430%" y="341" width="0.0799%" height="15" fill="rgb(238,218,40)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.2430%" y="325" width="0.0799%" height="15" fill="rgb(209,126,11)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.2430%" y="309" width="0.0799%" height="15" fill="rgb(245,90,11)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.2430%" y="293" width="0.0799%" height="15" fill="rgb(211,195,10)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.2430%" y="277" width="0.0799%" height="15" fill="rgb(231,45,45)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.2430%" y="261" width="0.0799%" height="15" fill="rgb(246,100,43)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="96.2430%" y="517" width="0.1599%" height="15" fill="rgb(241,193,8)" fg:x="1204" fg:w="2"/><text x="96.4930%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.2430%" y="501" width="0.1599%" height="15" fill="rgb(208,76,19)" fg:x="1204" fg:w="2"/><text x="96.4930%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.3229%" y="485" width="0.0799%" height="15" fill="rgb(223,69,40)" fg:x="1205" fg:w="1"/><text x="96.5729%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3229%" y="469" width="0.0799%" height="15" fill="rgb(207,120,39)" fg:x="1205" fg:w="1"/><text x="96.5729%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4029%" y="437" width="0.0799%" height="15" fill="rgb(212,209,28)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.4029%" y="421" width="0.0799%" height="15" fill="rgb(246,82,29)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.4828%" y="421" width="0.1599%" height="15" fill="rgb(239,6,40)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.5627%" y="405" width="0.0799%" height="15" fill="rgb(228,181,35)" fg:x="1208" fg:w="1"/><text x="96.8127%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.5627%" y="389" width="0.0799%" height="15" fill="rgb(238,151,2)" fg:x="1208" fg:w="1"/><text x="96.8127%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.5627%" y="373" width="0.0799%" height="15" fill="rgb(236,94,18)" fg:x="1208" fg:w="1"/><text x="96.8127%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5627%" y="357" width="0.0799%" height="15" fill="rgb(208,38,14)" fg:x="1208" fg:w="1"/><text x="96.8127%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="96.4029%" y="517" width="0.3197%" height="15" fill="rgb(234,215,27)" fg:x="1206" fg:w="4"/><text x="96.6529%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="96.4029%" y="501" width="0.3197%" height="15" fill="rgb(254,211,53)" fg:x="1206" fg:w="4"/><text x="96.6529%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.4029%" y="485" width="0.3197%" height="15" fill="rgb(216,175,11)" fg:x="1206" fg:w="4"/><text x="96.6529%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.32%)</title><rect x="96.4029%" y="469" width="0.3197%" height="15" fill="rgb(246,179,26)" fg:x="1206" fg:w="4"/><text x="96.6529%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.4029%" y="453" width="0.3197%" height="15" fill="rgb(249,19,52)" fg:x="1206" fg:w="4"/><text x="96.6529%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="96.4828%" y="437" width="0.2398%" height="15" fill="rgb(230,42,52)" fg:x="1207" fg:w="3"/><text x="96.7328%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6427%" y="421" width="0.0799%" height="15" fill="rgb(221,171,0)" fg:x="1209" fg:w="1"/><text x="96.8927%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6427%" y="405" width="0.0799%" height="15" fill="rgb(222,177,40)" fg:x="1209" fg:w="1"/><text x="96.8927%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.6427%" y="389" width="0.0799%" height="15" fill="rgb(247,34,16)" fg:x="1209" fg:w="1"/><text x="96.8927%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6427%" y="373" width="0.0799%" height="15" fill="rgb(213,217,37)" fg:x="1209" fg:w="1"/><text x="96.8927%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6427%" y="357" width="0.0799%" height="15" fill="rgb(231,189,24)" fg:x="1209" fg:w="1"/><text x="96.8927%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.7226%" y="453" width="0.1599%" height="15" fill="rgb(214,22,9)" fg:x="1210" fg:w="2"/><text x="96.9726%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.7226%" y="437" width="0.1599%" height="15" fill="rgb(212,70,22)" fg:x="1210" fg:w="2"/><text x="96.9726%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.7226%" y="421" width="0.1599%" height="15" fill="rgb(249,64,51)" fg:x="1210" fg:w="2"/><text x="96.9726%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.7226%" y="405" width="0.1599%" height="15" fill="rgb(249,148,20)" fg:x="1210" fg:w="2"/><text x="96.9726%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.7226%" y="389" width="0.1599%" height="15" fill="rgb(246,46,48)" fg:x="1210" fg:w="2"/><text x="96.9726%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8026%" y="373" width="0.0799%" height="15" fill="rgb(217,34,48)" fg:x="1211" fg:w="1"/><text x="97.0526%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.8026%" y="357" width="0.0799%" height="15" fill="rgb(222,45,26)" fg:x="1211" fg:w="1"/><text x="97.0526%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.8026%" y="341" width="0.0799%" height="15" fill="rgb(230,201,36)" fg:x="1211" fg:w="1"/><text x="97.0526%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (40 samples, 3.20%)</title><rect x="93.8449%" y="549" width="3.1974%" height="15" fill="rgb(217,30,43)" fg:x="1174" fg:w="40"/><text x="94.0949%" y="559.50">eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.96%)</title><rect x="96.0831%" y="533" width="0.9592%" height="15" fill="rgb(230,197,40)" fg:x="1202" fg:w="12"/><text x="96.3331%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="96.7226%" y="517" width="0.3197%" height="15" fill="rgb(239,181,18)" fg:x="1210" fg:w="4"/><text x="96.9726%" y="527.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="96.7226%" y="501" width="0.3197%" height="15" fill="rgb(222,60,39)" fg:x="1210" fg:w="4"/><text x="96.9726%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.7226%" y="485" width="0.3197%" height="15" fill="rgb(210,60,22)" fg:x="1210" fg:w="4"/><text x="96.9726%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.7226%" y="469" width="0.3197%" height="15" fill="rgb(239,213,48)" fg:x="1210" fg:w="4"/><text x="96.9726%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="96.8825%" y="453" width="0.1599%" height="15" fill="rgb(253,214,23)" fg:x="1212" fg:w="2"/><text x="97.1325%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.8825%" y="437" width="0.1599%" height="15" fill="rgb(211,98,45)" fg:x="1212" fg:w="2"/><text x="97.1325%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.0424%" y="485" width="0.0799%" height="15" fill="rgb(239,130,44)" fg:x="1214" fg:w="1"/><text x="97.2924%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.0424%" y="517" width="0.1599%" height="15" fill="rgb(222,181,35)" fg:x="1214" fg:w="2"/><text x="97.2924%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.0424%" y="501" width="0.1599%" height="15" fill="rgb(219,219,49)" fg:x="1214" fg:w="2"/><text x="97.2924%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1223%" y="485" width="0.0799%" height="15" fill="rgb(227,161,51)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1223%" y="469" width="0.0799%" height="15" fill="rgb(239,112,27)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.1223%" y="453" width="0.0799%" height="15" fill="rgb(248,122,18)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.1223%" y="437" width="0.0799%" height="15" fill="rgb(245,130,23)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.1223%" y="421" width="0.0799%" height="15" fill="rgb(211,225,28)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1223%" y="405" width="0.0799%" height="15" fill="rgb(242,105,44)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1223%" y="389" width="0.0799%" height="15" fill="rgb(216,183,46)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.1223%" y="373" width="0.0799%" height="15" fill="rgb(227,112,9)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.1223%" y="357" width="0.0799%" height="15" fill="rgb(244,21,0)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.1223%" y="341" width="0.0799%" height="15" fill="rgb(236,185,14)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.1223%" y="325" width="0.0799%" height="15" fill="rgb(236,170,30)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1223%" y="309" width="0.0799%" height="15" fill="rgb(209,198,51)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2022%" y="469" width="0.0799%" height="15" fill="rgb(205,171,26)" fg:x="1216" fg:w="1"/><text x="97.4522%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2022%" y="453" width="0.0799%" height="15" fill="rgb(246,41,49)" fg:x="1216" fg:w="1"/><text x="97.4522%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2022%" y="437" width="0.0799%" height="15" fill="rgb(240,229,12)" fg:x="1216" fg:w="1"/><text x="97.4522%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2822%" y="421" width="0.0799%" height="15" fill="rgb(212,8,54)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2822%" y="405" width="0.0799%" height="15" fill="rgb(230,114,13)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2822%" y="389" width="0.0799%" height="15" fill="rgb(229,130,28)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2822%" y="373" width="0.0799%" height="15" fill="rgb(206,139,15)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2822%" y="357" width="0.0799%" height="15" fill="rgb(241,188,35)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.2822%" y="341" width="0.0799%" height="15" fill="rgb(208,224,26)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.2822%" y="325" width="0.0799%" height="15" fill="rgb(251,131,28)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.2822%" y="309" width="0.0799%" height="15" fill="rgb(208,153,1)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2822%" y="293" width="0.0799%" height="15" fill="rgb(234,33,36)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2822%" y="277" width="0.0799%" height="15" fill="rgb(246,42,29)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.2822%" y="261" width="0.0799%" height="15" fill="rgb(251,114,16)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.2822%" y="245" width="0.0799%" height="15" fill="rgb(233,13,38)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.2822%" y="229" width="0.0799%" height="15" fill="rgb(247,120,19)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.2822%" y="213" width="0.0799%" height="15" fill="rgb(205,11,16)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2822%" y="197" width="0.0799%" height="15" fill="rgb(228,185,19)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.3621%" y="421" width="0.1599%" height="15" fill="rgb(239,88,52)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.3621%" y="405" width="0.1599%" height="15" fill="rgb(219,23,1)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.3621%" y="389" width="0.1599%" height="15" fill="rgb(253,177,16)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.3621%" y="373" width="0.1599%" height="15" fill="rgb(225,150,40)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.3621%" y="357" width="0.1599%" height="15" fill="rgb(208,108,30)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="367.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.3621%" y="341" width="0.1599%" height="15" fill="rgb(214,122,4)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.3621%" y="325" width="0.1599%" height="15" fill="rgb(229,74,37)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4420%" y="309" width="0.0799%" height="15" fill="rgb(233,61,41)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4420%" y="293" width="0.0799%" height="15" fill="rgb(238,191,5)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.4420%" y="277" width="0.0799%" height="15" fill="rgb(233,78,24)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.4420%" y="261" width="0.0799%" height="15" fill="rgb(211,142,8)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.4420%" y="245" width="0.0799%" height="15" fill="rgb(253,38,53)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.4420%" y="229" width="0.0799%" height="15" fill="rgb(234,63,51)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.4420%" y="213" width="0.0799%" height="15" fill="rgb(205,23,31)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.4420%" y="197" width="0.0799%" height="15" fill="rgb(210,184,50)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.4420%" y="181" width="0.0799%" height="15" fill="rgb(222,112,26)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.4420%" y="165" width="0.0799%" height="15" fill="rgb(250,98,18)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.4420%" y="149" width="0.0799%" height="15" fill="rgb(250,34,12)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.4420%" y="133" width="0.0799%" height="15" fill="rgb(236,141,30)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="97.5220%" y="373" width="0.0799%" height="15" fill="rgb(246,134,38)" fg:x="1220" fg:w="1"/><text x="97.7720%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.5220%" y="357" width="0.0799%" height="15" fill="rgb(240,114,4)" fg:x="1220" fg:w="1"/><text x="97.7720%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.5220%" y="341" width="0.0799%" height="15" fill="rgb(243,113,39)" fg:x="1220" fg:w="1"/><text x="97.7720%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="97.2822%" y="469" width="0.3997%" height="15" fill="rgb(239,215,4)" fg:x="1217" fg:w="5"/><text x="97.5322%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="97.2822%" y="453" width="0.3997%" height="15" fill="rgb(236,229,45)" fg:x="1217" fg:w="5"/><text x="97.5322%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.40%)</title><rect x="97.2822%" y="437" width="0.3997%" height="15" fill="rgb(242,2,6)" fg:x="1217" fg:w="5"/><text x="97.5322%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.5220%" y="421" width="0.1599%" height="15" fill="rgb(239,108,21)" fg:x="1220" fg:w="2"/><text x="97.7720%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.5220%" y="405" width="0.1599%" height="15" fill="rgb(215,168,34)" fg:x="1220" fg:w="2"/><text x="97.7720%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="97.5220%" y="389" width="0.1599%" height="15" fill="rgb(238,31,17)" fg:x="1220" fg:w="2"/><text x="97.7720%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.6019%" y="373" width="0.0799%" height="15" fill="rgb(220,133,11)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.6019%" y="357" width="0.0799%" height="15" fill="rgb(212,158,23)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.6019%" y="341" width="0.0799%" height="15" fill="rgb(223,172,7)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.6819%" y="405" width="0.0799%" height="15" fill="rgb(244,3,52)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="97.2022%" y="517" width="0.6395%" height="15" fill="rgb(207,69,27)" fg:x="1216" fg:w="8"/><text x="97.4522%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="97.2022%" y="501" width="0.6395%" height="15" fill="rgb(213,136,45)" fg:x="1216" fg:w="8"/><text x="97.4522%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.64%)</title><rect x="97.2022%" y="485" width="0.6395%" height="15" fill="rgb(218,79,17)" fg:x="1216" fg:w="8"/><text x="97.4522%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.6819%" y="469" width="0.1599%" height="15" fill="rgb(216,106,36)" fg:x="1222" fg:w="2"/><text x="97.9319%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.6819%" y="453" width="0.1599%" height="15" fill="rgb(251,27,45)" fg:x="1222" fg:w="2"/><text x="97.9319%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="97.6819%" y="437" width="0.1599%" height="15" fill="rgb(232,21,34)" fg:x="1222" fg:w="2"/><text x="97.9319%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="97.6819%" y="421" width="0.1599%" height="15" fill="rgb(249,191,16)" fg:x="1222" fg:w="2"/><text x="97.9319%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.7618%" y="405" width="0.0799%" height="15" fill="rgb(224,88,20)" fg:x="1223" fg:w="1"/><text x="98.0118%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="97.7618%" y="389" width="0.0799%" height="15" fill="rgb(237,93,27)" fg:x="1223" fg:w="1"/><text x="98.0118%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.7618%" y="373" width="0.0799%" height="15" fill="rgb(226,198,48)" fg:x="1223" fg:w="1"/><text x="98.0118%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.7618%" y="357" width="0.0799%" height="15" fill="rgb(207,162,53)" fg:x="1223" fg:w="1"/><text x="98.0118%" y="367.50"></text></g><g><title>engine::session::internal::Added::find_refs (11 samples, 0.88%)</title><rect x="97.0424%" y="549" width="0.8793%" height="15" fill="rgb(207,169,9)" fg:x="1214" fg:w="11"/><text x="97.2924%" y="559.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (11 samples, 0.88%)</title><rect x="97.0424%" y="533" width="0.8793%" height="15" fill="rgb(224,166,46)" fg:x="1214" fg:w="11"/><text x="97.2924%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8417%" y="517" width="0.0799%" height="15" fill="rgb(233,26,6)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8417%" y="501" width="0.0799%" height="15" fill="rgb(218,106,45)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9217%" y="533" width="0.0799%" height="15" fill="rgb(240,217,4)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9217%" y="517" width="0.0799%" height="15" fill="rgb(246,171,10)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9217%" y="501" width="0.0799%" height="15" fill="rgb(223,197,30)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9217%" y="485" width="0.0799%" height="15" fill="rgb(207,92,16)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0016%" y="501" width="0.0799%" height="15" fill="rgb(211,6,44)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0016%" y="485" width="0.0799%" height="15" fill="rgb(219,139,2)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.0016%" y="533" width="0.1599%" height="15" fill="rgb(224,103,21)" fg:x="1226" fg:w="2"/><text x="98.2516%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.0016%" y="517" width="0.1599%" height="15" fill="rgb(254,110,48)" fg:x="1226" fg:w="2"/><text x="98.2516%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0815%" y="501" width="0.0799%" height="15" fill="rgb(212,88,19)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0815%" y="485" width="0.0799%" height="15" fill="rgb(248,103,6)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.0815%" y="469" width="0.0799%" height="15" fill="rgb(214,53,46)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0815%" y="453" width="0.0799%" height="15" fill="rgb(236,190,24)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0815%" y="437" width="0.0799%" height="15" fill="rgb(254,58,28)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0815%" y="421" width="0.0799%" height="15" fill="rgb(243,63,27)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.0815%" y="405" width="0.0799%" height="15" fill="rgb(206,81,20)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1615%" y="453" width="0.0799%" height="15" fill="rgb(252,69,51)" fg:x="1228" fg:w="1"/><text x="98.4115%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1615%" y="437" width="0.0799%" height="15" fill="rgb(222,213,4)" fg:x="1228" fg:w="1"/><text x="98.4115%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.1615%" y="485" width="0.1599%" height="15" fill="rgb(226,198,12)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.1615%" y="469" width="0.1599%" height="15" fill="rgb(248,115,11)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.2414%" y="453" width="0.0799%" height="15" fill="rgb(221,148,54)" fg:x="1229" fg:w="1"/><text x="98.4914%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2414%" y="437" width="0.0799%" height="15" fill="rgb(214,209,51)" fg:x="1229" fg:w="1"/><text x="98.4914%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2414%" y="421" width="0.0799%" height="15" fill="rgb(249,116,53)" fg:x="1229" fg:w="1"/><text x="98.4914%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="98.1615%" y="533" width="0.2398%" height="15" fill="rgb(248,170,1)" fg:x="1228" fg:w="3"/><text x="98.4115%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.1615%" y="517" width="0.2398%" height="15" fill="rgb(244,105,10)" fg:x="1228" fg:w="3"/><text x="98.4115%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.1615%" y="501" width="0.2398%" height="15" fill="rgb(229,100,5)" fg:x="1228" fg:w="3"/><text x="98.4115%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3213%" y="485" width="0.0799%" height="15" fill="rgb(233,221,39)" fg:x="1230" fg:w="1"/><text x="98.5713%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3213%" y="469" width="0.0799%" height="15" fill="rgb(233,88,21)" fg:x="1230" fg:w="1"/><text x="98.5713%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.3213%" y="453" width="0.0799%" height="15" fill="rgb(206,13,0)" fg:x="1230" fg:w="1"/><text x="98.5713%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4013%" y="437" width="0.0799%" height="15" fill="rgb(242,15,35)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4013%" y="421" width="0.0799%" height="15" fill="rgb(247,142,41)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4013%" y="405" width="0.0799%" height="15" fill="rgb(245,51,29)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4013%" y="389" width="0.0799%" height="15" fill="rgb(228,209,43)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4013%" y="373" width="0.0799%" height="15" fill="rgb(233,185,9)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4013%" y="357" width="0.0799%" height="15" fill="rgb(226,93,0)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.4013%" y="469" width="0.1599%" height="15" fill="rgb(245,194,43)" fg:x="1231" fg:w="2"/><text x="98.6513%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.4013%" y="453" width="0.1599%" height="15" fill="rgb(211,145,34)" fg:x="1231" fg:w="2"/><text x="98.6513%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4812%" y="437" width="0.0799%" height="15" fill="rgb(231,228,28)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4812%" y="421" width="0.0799%" height="15" fill="rgb(236,149,4)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4812%" y="405" width="0.0799%" height="15" fill="rgb(234,114,38)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="415.50"></text></g><g><title>engine::session::Session::load_entity (60 samples, 4.80%)</title><rect x="93.8449%" y="565" width="4.7962%" height="15" fill="rgb(246,132,51)" fg:x="1174" fg:w="60"/><text x="94.0949%" y="575.50">engine..</text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="97.9217%" y="549" width="0.7194%" height="15" fill="rgb(251,137,22)" fg:x="1225" fg:w="9"/><text x="98.1717%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="98.4013%" y="533" width="0.2398%" height="15" fill="rgb(243,59,52)" fg:x="1231" fg:w="3"/><text x="98.6513%" y="543.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="98.4013%" y="517" width="0.2398%" height="15" fill="rgb(239,56,28)" fg:x="1231" fg:w="3"/><text x="98.6513%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.4013%" y="501" width="0.2398%" height="15" fill="rgb(218,168,27)" fg:x="1231" fg:w="3"/><text x="98.6513%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.4013%" y="485" width="0.2398%" height="15" fill="rgb(232,165,11)" fg:x="1231" fg:w="3"/><text x="98.6513%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5612%" y="469" width="0.0799%" height="15" fill="rgb(253,55,41)" fg:x="1233" fg:w="1"/><text x="98.8112%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.6411%" y="517" width="0.0799%" height="15" fill="rgb(233,206,24)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6411%" y="501" width="0.0799%" height="15" fill="rgb(220,199,8)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6411%" y="485" width="0.0799%" height="15" fill="rgb(254,65,26)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.6411%" y="469" width="0.0799%" height="15" fill="rgb(253,102,23)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.6411%" y="453" width="0.0799%" height="15" fill="rgb(231,103,35)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.6411%" y="437" width="0.0799%" height="15" fill="rgb(238,26,10)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.6411%" y="421" width="0.0799%" height="15" fill="rgb(234,191,34)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.6411%" y="405" width="0.0799%" height="15" fill="rgb(206,210,9)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="98.6411%" y="389" width="0.0799%" height="15" fill="rgb(219,155,3)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="98.6411%" y="373" width="0.0799%" height="15" fill="rgb(221,62,52)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="383.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="98.6411%" y="565" width="0.1599%" height="15" fill="rgb(215,197,36)" fg:x="1234" fg:w="2"/><text x="98.8911%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="98.6411%" y="549" width="0.1599%" height="15" fill="rgb(226,222,6)" fg:x="1234" fg:w="2"/><text x="98.8911%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.6411%" y="533" width="0.1599%" height="15" fill="rgb(215,58,28)" fg:x="1234" fg:w="2"/><text x="98.8911%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.7210%" y="517" width="0.0799%" height="15" fill="rgb(212,148,2)" fg:x="1235" fg:w="1"/><text x="98.9710%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="98.8010%" y="565" width="0.1599%" height="15" fill="rgb(208,21,42)" fg:x="1236" fg:w="2"/><text x="99.0510%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.8010%" y="549" width="0.1599%" height="15" fill="rgb(209,107,26)" fg:x="1236" fg:w="2"/><text x="99.0510%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.8010%" y="533" width="0.1599%" height="15" fill="rgb(254,60,47)" fg:x="1236" fg:w="2"/><text x="99.0510%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8809%" y="517" width="0.0799%" height="15" fill="rgb(207,226,45)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8809%" y="501" width="0.0799%" height="15" fill="rgb(223,124,22)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.8809%" y="485" width="0.0799%" height="15" fill="rgb(240,162,13)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8809%" y="469" width="0.0799%" height="15" fill="rgb(244,199,31)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8809%" y="453" width="0.0799%" height="15" fill="rgb(207,92,16)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8809%" y="437" width="0.0799%" height="15" fill="rgb(215,31,19)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9608%" y="517" width="0.0799%" height="15" fill="rgb(245,118,14)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9608%" y="501" width="0.0799%" height="15" fill="rgb(248,12,46)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9608%" y="485" width="0.0799%" height="15" fill="rgb(209,119,0)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.0408%" y="469" width="0.0799%" height="15" fill="rgb(254,51,44)" fg:x="1239" fg:w="1"/><text x="99.2908%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1207%" y="421" width="0.0799%" height="15" fill="rgb(253,182,35)" fg:x="1240" fg:w="1"/><text x="99.3707%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1207%" y="405" width="0.0799%" height="15" fill="rgb(205,198,39)" fg:x="1240" fg:w="1"/><text x="99.3707%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1207%" y="389" width="0.0799%" height="15" fill="rgb(251,175,48)" fg:x="1240" fg:w="1"/><text x="99.3707%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1207%" y="373" width="0.0799%" height="15" fill="rgb(239,38,17)" fg:x="1240" fg:w="1"/><text x="99.3707%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="99.0408%" y="517" width="0.2398%" height="15" fill="rgb(212,101,8)" fg:x="1239" fg:w="3"/><text x="99.2908%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.0408%" y="501" width="0.2398%" height="15" fill="rgb(228,35,17)" fg:x="1239" fg:w="3"/><text x="99.2908%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.0408%" y="485" width="0.2398%" height="15" fill="rgb(214,95,8)" fg:x="1239" fg:w="3"/><text x="99.2908%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.1207%" y="469" width="0.1599%" height="15" fill="rgb(210,176,35)" fg:x="1240" fg:w="2"/><text x="99.3707%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1207%" y="453" width="0.1599%" height="15" fill="rgb(226,4,3)" fg:x="1240" fg:w="2"/><text x="99.3707%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.1207%" y="437" width="0.1599%" height="15" fill="rgb(232,133,14)" fg:x="1240" fg:w="2"/><text x="99.3707%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.2006%" y="421" width="0.0799%" height="15" fill="rgb(250,191,8)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.2006%" y="405" width="0.0799%" height="15" fill="rgb(213,12,45)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.2006%" y="389" width="0.0799%" height="15" fill="rgb(233,78,26)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (6 samples, 0.48%)</title><rect x="98.9608%" y="549" width="0.4796%" height="15" fill="rgb(245,222,11)" fg:x="1238" fg:w="6"/><text x="99.2108%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="98.9608%" y="533" width="0.4796%" height="15" fill="rgb(216,174,12)" fg:x="1238" fg:w="6"/><text x="99.2108%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="99.2806%" y="517" width="0.1599%" height="15" fill="rgb(213,15,9)" fg:x="1242" fg:w="2"/><text x="99.5306%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.2806%" y="501" width="0.1599%" height="15" fill="rgb(238,103,32)" fg:x="1242" fg:w="2"/><text x="99.5306%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.2806%" y="485" width="0.1599%" height="15" fill="rgb(245,85,15)" fg:x="1242" fg:w="2"/><text x="99.5306%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2806%" y="469" width="0.1599%" height="15" fill="rgb(254,204,5)" fg:x="1242" fg:w="2"/><text x="99.5306%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.2806%" y="453" width="0.1599%" height="15" fill="rgb(231,178,15)" fg:x="1242" fg:w="2"/><text x="99.5306%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3605%" y="437" width="0.0799%" height="15" fill="rgb(248,151,3)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3605%" y="421" width="0.0799%" height="15" fill="rgb(250,139,13)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3605%" y="405" width="0.0799%" height="15" fill="rgb(243,107,53)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="99.3605%" y="389" width="0.0799%" height="15" fill="rgb(232,81,15)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="399.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="99.4404%" y="549" width="0.0799%" height="15" fill="rgb(225,187,48)" fg:x="1244" fg:w="1"/><text x="99.6904%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4404%" y="533" width="0.0799%" height="15" fill="rgb(205,116,12)" fg:x="1244" fg:w="1"/><text x="99.6904%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.5204%" y="533" width="0.0799%" height="15" fill="rgb(220,222,31)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.5204%" y="517" width="0.0799%" height="15" fill="rgb(233,187,49)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5204%" y="501" width="0.0799%" height="15" fill="rgb(211,168,53)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5204%" y="485" width="0.0799%" height="15" fill="rgb(206,160,16)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5204%" y="469" width="0.0799%" height="15" fill="rgb(254,164,13)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6003%" y="453" width="0.0799%" height="15" fill="rgb(229,45,30)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6003%" y="437" width="0.0799%" height="15" fill="rgb(237,32,10)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.6003%" y="421" width="0.0799%" height="15" fill="rgb(251,20,47)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.6003%" y="405" width="0.0799%" height="15" fill="rgb(251,116,12)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.6003%" y="389" width="0.0799%" height="15" fill="rgb(214,227,27)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="99.6003%" y="373" width="0.0799%" height="15" fill="rgb(248,10,53)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.6003%" y="357" width="0.0799%" height="15" fill="rgb(221,176,25)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6003%" y="501" width="0.1599%" height="15" fill="rgb(205,70,46)" fg:x="1246" fg:w="2"/><text x="99.8503%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6003%" y="485" width="0.1599%" height="15" fill="rgb(217,45,38)" fg:x="1246" fg:w="2"/><text x="99.8503%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6003%" y="469" width="0.1599%" height="15" fill="rgb(243,6,54)" fg:x="1246" fg:w="2"/><text x="99.8503%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6803%" y="453" width="0.0799%" height="15" fill="rgb(242,76,23)" fg:x="1247" fg:w="1"/><text x="99.9303%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.7602%" y="501" width="0.0799%" height="15" fill="rgb(239,166,0)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="511.50"></text></g><g><title>all (1,251 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(238,174,32)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="959.50"></text></g><g><title>simple-d0356034 (1,251 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(238,124,44)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="943.50">simple-d0356034</text></g><g><title>_start (1,251 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(206,185,9)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="927.50">_start</text></g><g><title>__libc_start_main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(215,157,17)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="911.50">__libc_start_main</text></g><g><title>main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(251,17,29)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (1,251 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(227,113,27)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,251 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(217,226,24)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,251 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(251,99,38)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,251 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(231,147,19)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,251 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(230,86,8)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="815.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,251 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(237,159,39)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,251 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(247,179,47)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,251 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(253,152,26)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,251 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(222,211,15)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,251 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(236,193,6)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="735.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,251 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(226,206,10)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(213,125,22)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="703.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,251 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(221,66,28)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="687.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,251 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(222,84,53)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="671.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (354 samples, 28.30%)</title><rect x="71.7026%" y="645" width="28.2974%" height="15" fill="rgb(243,50,15)" fg:x="897" fg:w="354"/><text x="71.9526%" y="655.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as crite..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (354 samples, 28.30%)</title><rect x="71.7026%" y="629" width="28.2974%" height="15" fill="rgb(208,184,23)" fg:x="897" fg:w="354"/><text x="71.9526%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (354 samples, 28.30%)</title><rect x="71.7026%" y="613" width="28.2974%" height="15" fill="rgb(221,83,2)" fg:x="897" fg:w="354"/><text x="71.9526%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (114 samples, 9.11%)</title><rect x="90.8873%" y="597" width="9.1127%" height="15" fill="rgb(236,53,24)" fg:x="1137" fg:w="114"/><text x="91.1373%" y="607.50">engine::sessi..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (114 samples, 9.11%)</title><rect x="90.8873%" y="581" width="9.1127%" height="15" fill="rgb(244,171,29)" fg:x="1137" fg:w="114"/><text x="91.1373%" y="591.50">engine::sessi..</text></g><g><title>kernel::model::entry::EntryResolver::world (13 samples, 1.04%)</title><rect x="98.9608%" y="565" width="1.0392%" height="15" fill="rgb(205,19,11)" fg:x="1238" fg:w="13"/><text x="99.2108%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="99.5204%" y="549" width="0.4796%" height="15" fill="rgb(207,108,29)" fg:x="1245" fg:w="6"/><text x="99.7704%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="99.6003%" y="533" width="0.3997%" height="15" fill="rgb(236,215,43)" fg:x="1246" fg:w="5"/><text x="99.8503%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="99.6003%" y="517" width="0.3997%" height="15" fill="rgb(213,58,35)" fg:x="1246" fg:w="5"/><text x="99.8503%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.8401%" y="501" width="0.1599%" height="15" fill="rgb(220,211,46)" fg:x="1249" fg:w="2"/><text x="100.0901%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.8401%" y="485" width="0.1599%" height="15" fill="rgb(212,134,16)" fg:x="1249" fg:w="2"/><text x="100.0901%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.8401%" y="469" width="0.1599%" height="15" fill="rgb(232,90,44)" fg:x="1249" fg:w="2"/><text x="100.0901%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.8401%" y="453" width="0.1599%" height="15" fill="rgb(212,18,36)" fg:x="1249" fg:w="2"/><text x="100.0901%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.8401%" y="437" width="0.1599%" height="15" fill="rgb(206,112,24)" fg:x="1249" fg:w="2"/><text x="100.0901%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.8401%" y="421" width="0.1599%" height="15" fill="rgb(238,223,40)" fg:x="1249" fg:w="2"/><text x="100.0901%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.9201%" y="405" width="0.0799%" height="15" fill="rgb(226,169,20)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="415.50"></text></g></svg></svg>