<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1142" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1125.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1125.00"> </text><svg id="frames" x="10" width="1180" total_samples="1249"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.1601%" y="709" width="0.1601%" height="15" fill="rgb(222,172,16)" fg:x="2" fg:w="2"/><text x="0.4101%" y="719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.2402%" y="693" width="0.0801%" height="15" fill="rgb(233,192,5)" fg:x="3" fg:w="1"/><text x="0.4902%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="0.1601%" y="725" width="0.2402%" height="15" fill="rgb(247,189,41)" fg:x="2" fg:w="3"/><text x="0.4101%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3203%" y="709" width="0.0801%" height="15" fill="rgb(218,134,47)" fg:x="4" fg:w="1"/><text x="0.5703%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6405%" y="629" width="0.0801%" height="15" fill="rgb(216,29,3)" fg:x="8" fg:w="1"/><text x="0.8905%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.56%)</title><rect x="0.7206%" y="629" width="0.5604%" height="15" fill="rgb(246,140,12)" fg:x="9" fg:w="7"/><text x="0.9706%" y="639.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="0.9608%" y="613" width="0.3203%" height="15" fill="rgb(230,136,11)" fg:x="12" fg:w="4"/><text x="1.2108%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="1.5212%" y="613" width="0.2402%" height="15" fill="rgb(247,22,47)" fg:x="19" fg:w="3"/><text x="1.7712%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.6013%" y="597" width="0.1601%" height="15" fill="rgb(218,84,22)" fg:x="20" fg:w="2"/><text x="1.8513%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7614%" y="613" width="0.0801%" height="15" fill="rgb(216,87,39)" fg:x="22" fg:w="1"/><text x="2.0114%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.8415%" y="613" width="0.1601%" height="15" fill="rgb(221,178,8)" fg:x="23" fg:w="2"/><text x="2.0915%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9215%" y="597" width="0.0801%" height="15" fill="rgb(230,42,11)" fg:x="24" fg:w="1"/><text x="2.1715%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.68%)</title><rect x="0.4804%" y="645" width="1.6813%" height="15" fill="rgb(237,229,4)" fg:x="6" fg:w="21"/><text x="0.7304%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="1.2810%" y="629" width="0.8807%" height="15" fill="rgb(222,31,33)" fg:x="16" fg:w="11"/><text x="1.5310%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="2.0016%" y="613" width="0.1601%" height="15" fill="rgb(210,17,39)" fg:x="25" fg:w="2"/><text x="2.2516%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.0817%" y="597" width="0.0801%" height="15" fill="rgb(244,93,20)" fg:x="26" fg:w="1"/><text x="2.3317%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0817%" y="581" width="0.0801%" height="15" fill="rgb(210,40,47)" fg:x="26" fg:w="1"/><text x="2.3317%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.92%)</title><rect x="0.4804%" y="661" width="1.9215%" height="15" fill="rgb(239,211,47)" fg:x="6" fg:w="24"/><text x="0.7304%" y="671.50">&lt;..</text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.1617%" y="645" width="0.2402%" height="15" fill="rgb(251,223,49)" fg:x="27" fg:w="3"/><text x="2.4117%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.00%)</title><rect x="0.4804%" y="677" width="2.0016%" height="15" fill="rgb(221,149,5)" fg:x="6" fg:w="25"/><text x="0.7304%" y="687.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.4019%" y="661" width="0.0801%" height="15" fill="rgb(219,224,51)" fg:x="30" fg:w="1"/><text x="2.6519%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.4820%" y="677" width="0.0801%" height="15" fill="rgb(223,7,8)" fg:x="31" fg:w="1"/><text x="2.7320%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (28 samples, 2.24%)</title><rect x="0.4003%" y="725" width="2.2418%" height="15" fill="rgb(241,217,22)" fg:x="5" fg:w="28"/><text x="0.6503%" y="735.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 2.24%)</title><rect x="0.4003%" y="709" width="2.2418%" height="15" fill="rgb(248,209,0)" fg:x="5" fg:w="28"/><text x="0.6503%" y="719.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (27 samples, 2.16%)</title><rect x="0.4804%" y="693" width="2.1617%" height="15" fill="rgb(217,205,4)" fg:x="6" fg:w="27"/><text x="0.7304%" y="703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="2.5620%" y="677" width="0.0801%" height="15" fill="rgb(228,124,39)" fg:x="32" fg:w="1"/><text x="2.8120%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.5620%" y="661" width="0.0801%" height="15" fill="rgb(250,116,42)" fg:x="32" fg:w="1"/><text x="2.8120%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 2.56%)</title><rect x="0.1601%" y="741" width="2.5620%" height="15" fill="rgb(223,202,9)" fg:x="2" fg:w="32"/><text x="0.4101%" y="751.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="2.6421%" y="725" width="0.0801%" height="15" fill="rgb(242,222,40)" fg:x="33" fg:w="1"/><text x="2.8921%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.6421%" y="709" width="0.0801%" height="15" fill="rgb(229,99,46)" fg:x="33" fg:w="1"/><text x="2.8921%" y="719.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="2.7222%" y="693" width="0.0801%" height="15" fill="rgb(225,56,46)" fg:x="34" fg:w="1"/><text x="2.9722%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.7222%" y="677" width="0.0801%" height="15" fill="rgb(227,94,5)" fg:x="34" fg:w="1"/><text x="2.9722%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.8823%" y="645" width="0.0801%" height="15" fill="rgb(205,112,38)" fg:x="36" fg:w="1"/><text x="3.1323%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.9624%" y="645" width="0.0801%" height="15" fill="rgb(231,133,46)" fg:x="37" fg:w="1"/><text x="3.2124%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.9624%" y="629" width="0.0801%" height="15" fill="rgb(217,16,9)" fg:x="37" fg:w="1"/><text x="3.2124%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.9624%" y="613" width="0.0801%" height="15" fill="rgb(249,173,9)" fg:x="37" fg:w="1"/><text x="3.2124%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.9624%" y="597" width="0.0801%" height="15" fill="rgb(205,163,53)" fg:x="37" fg:w="1"/><text x="3.2124%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.9624%" y="581" width="0.0801%" height="15" fill="rgb(217,54,41)" fg:x="37" fg:w="1"/><text x="3.2124%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.9624%" y="565" width="0.0801%" height="15" fill="rgb(228,216,12)" fg:x="37" fg:w="1"/><text x="3.2124%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="2.9624%" y="549" width="0.0801%" height="15" fill="rgb(244,228,15)" fg:x="37" fg:w="1"/><text x="3.2124%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.9624%" y="533" width="0.0801%" height="15" fill="rgb(221,176,53)" fg:x="37" fg:w="1"/><text x="3.2124%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.9624%" y="517" width="0.0801%" height="15" fill="rgb(205,94,34)" fg:x="37" fg:w="1"/><text x="3.2124%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.9624%" y="501" width="0.0801%" height="15" fill="rgb(213,110,48)" fg:x="37" fg:w="1"/><text x="3.2124%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.9624%" y="485" width="0.0801%" height="15" fill="rgb(236,142,28)" fg:x="37" fg:w="1"/><text x="3.2124%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.9624%" y="469" width="0.0801%" height="15" fill="rgb(225,135,29)" fg:x="37" fg:w="1"/><text x="3.2124%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.9624%" y="453" width="0.0801%" height="15" fill="rgb(252,45,31)" fg:x="37" fg:w="1"/><text x="3.2124%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="2.9624%" y="437" width="0.0801%" height="15" fill="rgb(211,187,50)" fg:x="37" fg:w="1"/><text x="3.2124%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.9624%" y="421" width="0.0801%" height="15" fill="rgb(229,109,7)" fg:x="37" fg:w="1"/><text x="3.2124%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="2.9624%" y="405" width="0.0801%" height="15" fill="rgb(251,131,51)" fg:x="37" fg:w="1"/><text x="3.2124%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="2.9624%" y="389" width="0.0801%" height="15" fill="rgb(251,180,35)" fg:x="37" fg:w="1"/><text x="3.2124%" y="399.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="2.9624%" y="373" width="0.0801%" height="15" fill="rgb(211,46,32)" fg:x="37" fg:w="1"/><text x="3.2124%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.9624%" y="357" width="0.0801%" height="15" fill="rgb(248,123,17)" fg:x="37" fg:w="1"/><text x="3.2124%" y="367.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="3.1225%" y="629" width="0.0801%" height="15" fill="rgb(227,141,18)" fg:x="39" fg:w="1"/><text x="3.3725%" y="639.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="3.1225%" y="613" width="0.0801%" height="15" fill="rgb(216,102,9)" fg:x="39" fg:w="1"/><text x="3.3725%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="3.1225%" y="597" width="0.0801%" height="15" fill="rgb(253,47,13)" fg:x="39" fg:w="1"/><text x="3.3725%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="3.1225%" y="581" width="0.0801%" height="15" fill="rgb(226,93,23)" fg:x="39" fg:w="1"/><text x="3.3725%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="3.1225%" y="565" width="0.0801%" height="15" fill="rgb(247,104,17)" fg:x="39" fg:w="1"/><text x="3.3725%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="3.1225%" y="549" width="0.0801%" height="15" fill="rgb(233,203,26)" fg:x="39" fg:w="1"/><text x="3.3725%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.2026%" y="629" width="0.0801%" height="15" fill="rgb(244,98,49)" fg:x="40" fg:w="1"/><text x="3.4526%" y="639.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="3.2826%" y="629" width="0.0801%" height="15" fill="rgb(235,134,22)" fg:x="41" fg:w="1"/><text x="3.5326%" y="639.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="3.2826%" y="613" width="0.0801%" height="15" fill="rgb(221,70,32)" fg:x="41" fg:w="1"/><text x="3.5326%" y="623.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="3.2826%" y="597" width="0.0801%" height="15" fill="rgb(238,15,50)" fg:x="41" fg:w="1"/><text x="3.5326%" y="607.50"></text></g><g><title>__sigsetjmp (1 samples, 0.08%)</title><rect x="3.4428%" y="581" width="0.0801%" height="15" fill="rgb(215,221,48)" fg:x="43" fg:w="1"/><text x="3.6928%" y="591.50"></text></g><g><title>libloading::safe::Library::new (15 samples, 1.20%)</title><rect x="3.0424%" y="645" width="1.2010%" height="15" fill="rgb(236,73,3)" fg:x="38" fg:w="15"/><text x="3.2924%" y="655.50"></text></g><g><title>dlopen (11 samples, 0.88%)</title><rect x="3.3627%" y="629" width="0.8807%" height="15" fill="rgb(250,107,11)" fg:x="42" fg:w="11"/><text x="3.6127%" y="639.50"></text></g><g><title>_dl_catch_error (10 samples, 0.80%)</title><rect x="3.4428%" y="613" width="0.8006%" height="15" fill="rgb(242,39,14)" fg:x="43" fg:w="10"/><text x="3.6928%" y="623.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.80%)</title><rect x="3.4428%" y="597" width="0.8006%" height="15" fill="rgb(248,164,37)" fg:x="43" fg:w="10"/><text x="3.6928%" y="607.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="3.5228%" y="581" width="0.7206%" height="15" fill="rgb(217,60,12)" fg:x="44" fg:w="9"/><text x="3.7728%" y="591.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="3.5228%" y="565" width="0.7206%" height="15" fill="rgb(240,125,29)" fg:x="44" fg:w="9"/><text x="3.7728%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (19 samples, 1.52%)</title><rect x="2.8022%" y="661" width="1.5212%" height="15" fill="rgb(208,207,28)" fg:x="35" fg:w="19"/><text x="3.0522%" y="671.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="4.2434%" y="645" width="0.0801%" height="15" fill="rgb(209,159,27)" fg:x="53" fg:w="1"/><text x="4.4934%" y="655.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="4.2434%" y="629" width="0.0801%" height="15" fill="rgb(251,176,53)" fg:x="53" fg:w="1"/><text x="4.4934%" y="639.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.2434%" y="613" width="0.0801%" height="15" fill="rgb(211,85,7)" fg:x="53" fg:w="1"/><text x="4.4934%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (20 samples, 1.60%)</title><rect x="2.8022%" y="677" width="1.6013%" height="15" fill="rgb(216,64,54)" fg:x="35" fg:w="20"/><text x="3.0522%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="4.3235%" y="661" width="0.0801%" height="15" fill="rgb(217,54,24)" fg:x="54" fg:w="1"/><text x="4.5735%" y="671.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="4.3235%" y="645" width="0.0801%" height="15" fill="rgb(208,206,53)" fg:x="54" fg:w="1"/><text x="4.5735%" y="655.50"></text></g><g><title>engine::session::Session::initialize (26 samples, 2.08%)</title><rect x="2.8022%" y="693" width="2.0817%" height="15" fill="rgb(251,74,39)" fg:x="35" fg:w="26"/><text x="3.0522%" y="703.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (6 samples, 0.48%)</title><rect x="4.4035%" y="677" width="0.4804%" height="15" fill="rgb(226,47,5)" fg:x="55" fg:w="6"/><text x="4.6535%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="4.4035%" y="661" width="0.4804%" height="15" fill="rgb(234,111,33)" fg:x="55" fg:w="6"/><text x="4.6535%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="4.4035%" y="645" width="0.4804%" height="15" fill="rgb(251,14,10)" fg:x="55" fg:w="6"/><text x="4.6535%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="4.4836%" y="629" width="0.4003%" height="15" fill="rgb(232,43,0)" fg:x="56" fg:w="5"/><text x="4.7336%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="4.4836%" y="613" width="0.4003%" height="15" fill="rgb(222,68,43)" fg:x="56" fg:w="5"/><text x="4.7336%" y="623.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="4.5637%" y="597" width="0.3203%" height="15" fill="rgb(217,24,23)" fg:x="57" fg:w="4"/><text x="4.8137%" y="607.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (28 samples, 2.24%)</title><rect x="2.7222%" y="741" width="2.2418%" height="15" fill="rgb(229,209,14)" fg:x="34" fg:w="28"/><text x="2.9722%" y="751.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (28 samples, 2.24%)</title><rect x="2.7222%" y="725" width="2.2418%" height="15" fill="rgb(250,149,48)" fg:x="34" fg:w="28"/><text x="2.9722%" y="735.50">e..</text></g><g><title>engine::session::Session::new (28 samples, 2.24%)</title><rect x="2.7222%" y="709" width="2.2418%" height="15" fill="rgb(210,120,37)" fg:x="34" fg:w="28"/><text x="2.9722%" y="719.50">e..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="4.8839%" y="693" width="0.0801%" height="15" fill="rgb(210,21,8)" fg:x="61" fg:w="1"/><text x="5.1339%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="4.9640%" y="725" width="0.1601%" height="15" fill="rgb(243,145,7)" fg:x="62" fg:w="2"/><text x="5.2140%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="4.9640%" y="709" width="0.1601%" height="15" fill="rgb(238,178,32)" fg:x="62" fg:w="2"/><text x="5.2140%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.0440%" y="693" width="0.0801%" height="15" fill="rgb(222,4,10)" fg:x="63" fg:w="1"/><text x="5.2940%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.0440%" y="677" width="0.0801%" height="15" fill="rgb(239,7,37)" fg:x="63" fg:w="1"/><text x="5.2940%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.0440%" y="661" width="0.0801%" height="15" fill="rgb(215,31,37)" fg:x="63" fg:w="1"/><text x="5.2940%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.0440%" y="645" width="0.0801%" height="15" fill="rgb(224,83,33)" fg:x="63" fg:w="1"/><text x="5.2940%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.0440%" y="629" width="0.0801%" height="15" fill="rgb(239,55,3)" fg:x="63" fg:w="1"/><text x="5.2940%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.0440%" y="613" width="0.0801%" height="15" fill="rgb(247,92,11)" fg:x="63" fg:w="1"/><text x="5.2940%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.0440%" y="597" width="0.0801%" height="15" fill="rgb(239,200,7)" fg:x="63" fg:w="1"/><text x="5.2940%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.0440%" y="581" width="0.0801%" height="15" fill="rgb(227,115,8)" fg:x="63" fg:w="1"/><text x="5.2940%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.0440%" y="565" width="0.0801%" height="15" fill="rgb(215,189,27)" fg:x="63" fg:w="1"/><text x="5.2940%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.0440%" y="549" width="0.0801%" height="15" fill="rgb(251,216,39)" fg:x="63" fg:w="1"/><text x="5.2940%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.0440%" y="533" width="0.0801%" height="15" fill="rgb(207,29,47)" fg:x="63" fg:w="1"/><text x="5.2940%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.1241%" y="709" width="0.0801%" height="15" fill="rgb(210,71,34)" fg:x="64" fg:w="1"/><text x="5.3741%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="5.1241%" y="725" width="0.1601%" height="15" fill="rgb(253,217,51)" fg:x="64" fg:w="2"/><text x="5.3741%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="5.2042%" y="709" width="0.0801%" height="15" fill="rgb(222,117,46)" fg:x="65" fg:w="1"/><text x="5.4542%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="5.2842%" y="725" width="0.0801%" height="15" fill="rgb(226,132,6)" fg:x="66" fg:w="1"/><text x="5.5342%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="5.2842%" y="709" width="0.0801%" height="15" fill="rgb(254,145,51)" fg:x="66" fg:w="1"/><text x="5.5342%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="5.2842%" y="693" width="0.0801%" height="15" fill="rgb(231,199,27)" fg:x="66" fg:w="1"/><text x="5.5342%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.2842%" y="677" width="0.0801%" height="15" fill="rgb(245,158,14)" fg:x="66" fg:w="1"/><text x="5.5342%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="5.3643%" y="709" width="0.0801%" height="15" fill="rgb(240,113,14)" fg:x="67" fg:w="1"/><text x="5.6143%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="5.4444%" y="709" width="0.1601%" height="15" fill="rgb(210,20,13)" fg:x="68" fg:w="2"/><text x="5.6944%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.4444%" y="693" width="0.1601%" height="15" fill="rgb(241,144,13)" fg:x="68" fg:w="2"/><text x="5.6944%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.4444%" y="677" width="0.1601%" height="15" fill="rgb(235,43,34)" fg:x="68" fg:w="2"/><text x="5.6944%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="5.4444%" y="661" width="0.1601%" height="15" fill="rgb(208,36,20)" fg:x="68" fg:w="2"/><text x="5.6944%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="5.4444%" y="645" width="0.1601%" height="15" fill="rgb(239,204,10)" fg:x="68" fg:w="2"/><text x="5.6944%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="5.4444%" y="629" width="0.1601%" height="15" fill="rgb(217,84,43)" fg:x="68" fg:w="2"/><text x="5.6944%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="5.4444%" y="613" width="0.1601%" height="15" fill="rgb(241,170,50)" fg:x="68" fg:w="2"/><text x="5.6944%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="5.4444%" y="597" width="0.1601%" height="15" fill="rgb(226,205,29)" fg:x="68" fg:w="2"/><text x="5.6944%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="5.4444%" y="581" width="0.1601%" height="15" fill="rgb(233,113,1)" fg:x="68" fg:w="2"/><text x="5.6944%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="5.4444%" y="565" width="0.1601%" height="15" fill="rgb(253,98,13)" fg:x="68" fg:w="2"/><text x="5.6944%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="5.4444%" y="549" width="0.1601%" height="15" fill="rgb(211,115,12)" fg:x="68" fg:w="2"/><text x="5.6944%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="5.4444%" y="533" width="0.1601%" height="15" fill="rgb(208,12,16)" fg:x="68" fg:w="2"/><text x="5.6944%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.5244%" y="517" width="0.0801%" height="15" fill="rgb(237,193,54)" fg:x="69" fg:w="1"/><text x="5.7744%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="5.6045%" y="645" width="0.0801%" height="15" fill="rgb(243,22,42)" fg:x="70" fg:w="1"/><text x="5.8545%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.6045%" y="677" width="0.1601%" height="15" fill="rgb(233,151,36)" fg:x="70" fg:w="2"/><text x="5.8545%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="5.6045%" y="661" width="0.1601%" height="15" fill="rgb(237,57,45)" fg:x="70" fg:w="2"/><text x="5.8545%" y="671.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="5.6845%" y="645" width="0.0801%" height="15" fill="rgb(221,88,17)" fg:x="71" fg:w="1"/><text x="5.9345%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="5.8447%" y="645" width="0.1601%" height="15" fill="rgb(230,79,15)" fg:x="73" fg:w="2"/><text x="6.0947%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="5.8447%" y="629" width="0.1601%" height="15" fill="rgb(213,57,13)" fg:x="73" fg:w="2"/><text x="6.0947%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="5.9247%" y="613" width="0.0801%" height="15" fill="rgb(222,116,39)" fg:x="74" fg:w="1"/><text x="6.1747%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="5.9247%" y="597" width="0.0801%" height="15" fill="rgb(245,107,2)" fg:x="74" fg:w="1"/><text x="6.1747%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.9247%" y="581" width="0.0801%" height="15" fill="rgb(238,1,10)" fg:x="74" fg:w="1"/><text x="6.1747%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="6.0048%" y="613" width="0.6405%" height="15" fill="rgb(249,4,48)" fg:x="75" fg:w="8"/><text x="6.2548%" y="623.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="6.1649%" y="597" width="0.4804%" height="15" fill="rgb(223,151,18)" fg:x="77" fg:w="6"/><text x="6.4149%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="6.2450%" y="581" width="0.4003%" height="15" fill="rgb(227,65,43)" fg:x="78" fg:w="5"/><text x="6.4950%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="6.4051%" y="565" width="0.2402%" height="15" fill="rgb(218,40,45)" fg:x="80" fg:w="3"/><text x="6.6551%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.80%)</title><rect x="6.0048%" y="629" width="0.8006%" height="15" fill="rgb(252,121,31)" fg:x="75" fg:w="10"/><text x="6.2548%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.6453%" y="613" width="0.1601%" height="15" fill="rgb(219,158,43)" fg:x="83" fg:w="2"/><text x="6.8953%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.7254%" y="597" width="0.0801%" height="15" fill="rgb(231,162,42)" fg:x="84" fg:w="1"/><text x="6.9754%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.7254%" y="581" width="0.0801%" height="15" fill="rgb(217,179,25)" fg:x="84" fg:w="1"/><text x="6.9754%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.8855%" y="613" width="0.2402%" height="15" fill="rgb(206,212,31)" fg:x="86" fg:w="3"/><text x="7.1355%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.8855%" y="597" width="0.2402%" height="15" fill="rgb(235,144,12)" fg:x="86" fg:w="3"/><text x="7.1355%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="6.8855%" y="581" width="0.2402%" height="15" fill="rgb(213,51,10)" fg:x="86" fg:w="3"/><text x="7.1355%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="6.8855%" y="565" width="0.2402%" height="15" fill="rgb(231,145,14)" fg:x="86" fg:w="3"/><text x="7.1355%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.2058%" y="597" width="0.0801%" height="15" fill="rgb(235,15,28)" fg:x="90" fg:w="1"/><text x="7.4558%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="7.4460%" y="565" width="0.2402%" height="15" fill="rgb(237,206,10)" fg:x="93" fg:w="3"/><text x="7.6960%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.4460%" y="549" width="0.2402%" height="15" fill="rgb(236,227,27)" fg:x="93" fg:w="3"/><text x="7.6960%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.4460%" y="533" width="0.2402%" height="15" fill="rgb(246,83,35)" fg:x="93" fg:w="3"/><text x="7.6960%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="7.4460%" y="517" width="0.2402%" height="15" fill="rgb(220,136,24)" fg:x="93" fg:w="3"/><text x="7.6960%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.6061%" y="501" width="0.0801%" height="15" fill="rgb(217,3,25)" fg:x="95" fg:w="1"/><text x="7.8561%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.6061%" y="485" width="0.0801%" height="15" fill="rgb(239,24,14)" fg:x="95" fg:w="1"/><text x="7.8561%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.6061%" y="469" width="0.0801%" height="15" fill="rgb(244,16,53)" fg:x="95" fg:w="1"/><text x="7.8561%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.6861%" y="565" width="0.0801%" height="15" fill="rgb(208,175,44)" fg:x="96" fg:w="1"/><text x="7.9361%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.6861%" y="549" width="0.0801%" height="15" fill="rgb(252,18,48)" fg:x="96" fg:w="1"/><text x="7.9361%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="7.2858%" y="597" width="0.5604%" height="15" fill="rgb(234,199,32)" fg:x="91" fg:w="7"/><text x="7.5358%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="7.3659%" y="581" width="0.4804%" height="15" fill="rgb(225,77,54)" fg:x="92" fg:w="6"/><text x="7.6159%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.7662%" y="565" width="0.0801%" height="15" fill="rgb(225,42,25)" fg:x="97" fg:w="1"/><text x="8.0162%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="7.8463%" y="597" width="0.5604%" height="15" fill="rgb(242,227,46)" fg:x="98" fg:w="7"/><text x="8.0963%" y="607.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="8.0064%" y="581" width="0.4003%" height="15" fill="rgb(246,197,35)" fg:x="100" fg:w="5"/><text x="8.2564%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="8.1665%" y="565" width="0.2402%" height="15" fill="rgb(215,159,26)" fg:x="102" fg:w="3"/><text x="8.4165%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="8.1665%" y="549" width="0.2402%" height="15" fill="rgb(212,194,50)" fg:x="102" fg:w="3"/><text x="8.4165%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="8.4868%" y="565" width="0.4003%" height="15" fill="rgb(246,132,1)" fg:x="106" fg:w="5"/><text x="8.7368%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.6469%" y="549" width="0.2402%" height="15" fill="rgb(217,71,7)" fg:x="108" fg:w="3"/><text x="8.8969%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.7270%" y="533" width="0.1601%" height="15" fill="rgb(252,59,32)" fg:x="109" fg:w="2"/><text x="8.9770%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.8070%" y="517" width="0.0801%" height="15" fill="rgb(253,204,25)" fg:x="110" fg:w="1"/><text x="9.0570%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.9672%" y="549" width="0.0801%" height="15" fill="rgb(232,21,16)" fg:x="112" fg:w="1"/><text x="9.2172%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.9672%" y="533" width="0.0801%" height="15" fill="rgb(248,90,29)" fg:x="112" fg:w="1"/><text x="9.2172%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.9672%" y="517" width="0.0801%" height="15" fill="rgb(249,223,7)" fg:x="112" fg:w="1"/><text x="9.2172%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="8.8871%" y="565" width="0.2402%" height="15" fill="rgb(231,119,42)" fg:x="111" fg:w="3"/><text x="9.1371%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.0472%" y="549" width="0.0801%" height="15" fill="rgb(215,41,35)" fg:x="113" fg:w="1"/><text x="9.2972%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.0472%" y="533" width="0.0801%" height="15" fill="rgb(220,44,45)" fg:x="113" fg:w="1"/><text x="9.2972%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.0472%" y="517" width="0.0801%" height="15" fill="rgb(253,197,36)" fg:x="113" fg:w="1"/><text x="9.2972%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="8.4067%" y="581" width="0.8006%" height="15" fill="rgb(245,225,54)" fg:x="105" fg:w="10"/><text x="8.6567%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.1273%" y="565" width="0.0801%" height="15" fill="rgb(239,94,37)" fg:x="114" fg:w="1"/><text x="9.3773%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.1273%" y="549" width="0.0801%" height="15" fill="rgb(242,217,10)" fg:x="114" fg:w="1"/><text x="9.3773%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.1273%" y="533" width="0.0801%" height="15" fill="rgb(250,193,7)" fg:x="114" fg:w="1"/><text x="9.3773%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="8.4067%" y="597" width="0.8807%" height="15" fill="rgb(230,104,19)" fg:x="105" fg:w="11"/><text x="8.6567%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.2074%" y="581" width="0.0801%" height="15" fill="rgb(230,181,4)" fg:x="115" fg:w="1"/><text x="9.4574%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.2074%" y="565" width="0.0801%" height="15" fill="rgb(216,219,49)" fg:x="115" fg:w="1"/><text x="9.4574%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.2074%" y="549" width="0.0801%" height="15" fill="rgb(254,144,0)" fg:x="115" fg:w="1"/><text x="9.4574%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.24%)</title><rect x="7.1257%" y="613" width="2.2418%" height="15" fill="rgb(205,209,38)" fg:x="89" fg:w="28"/><text x="7.3757%" y="623.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.2874%" y="597" width="0.0801%" height="15" fill="rgb(240,21,42)" fg:x="116" fg:w="1"/><text x="9.5374%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.2874%" y="581" width="0.0801%" height="15" fill="rgb(241,132,3)" fg:x="116" fg:w="1"/><text x="9.5374%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.2874%" y="565" width="0.0801%" height="15" fill="rgb(225,14,2)" fg:x="116" fg:w="1"/><text x="9.5374%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (48 samples, 3.84%)</title><rect x="6.0048%" y="645" width="3.8431%" height="15" fill="rgb(210,141,35)" fg:x="75" fg:w="48"/><text x="6.2548%" y="655.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.04%)</title><rect x="6.8054%" y="629" width="3.0424%" height="15" fill="rgb(251,14,44)" fg:x="85" fg:w="38"/><text x="7.0554%" y="639.50">ser..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="9.3675%" y="613" width="0.4804%" height="15" fill="rgb(247,48,18)" fg:x="117" fg:w="6"/><text x="9.6175%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="9.4476%" y="597" width="0.4003%" height="15" fill="rgb(225,0,40)" fg:x="118" fg:w="5"/><text x="9.6976%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="9.4476%" y="581" width="0.4003%" height="15" fill="rgb(221,31,33)" fg:x="118" fg:w="5"/><text x="9.6976%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="9.5276%" y="565" width="0.3203%" height="15" fill="rgb(237,42,40)" fg:x="119" fg:w="4"/><text x="9.7776%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="9.6077%" y="549" width="0.2402%" height="15" fill="rgb(233,51,29)" fg:x="120" fg:w="3"/><text x="9.8577%" y="559.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="9.6878%" y="533" width="0.1601%" height="15" fill="rgb(226,58,20)" fg:x="121" fg:w="2"/><text x="9.9378%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="9.9279%" y="613" width="0.1601%" height="15" fill="rgb(208,98,7)" fg:x="124" fg:w="2"/><text x="10.1779%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="10.0881%" y="613" width="0.1601%" height="15" fill="rgb(228,143,44)" fg:x="126" fg:w="2"/><text x="10.3381%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.3283%" y="597" width="0.0801%" height="15" fill="rgb(246,55,38)" fg:x="129" fg:w="1"/><text x="10.5783%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.3283%" y="581" width="0.0801%" height="15" fill="rgb(247,87,16)" fg:x="129" fg:w="1"/><text x="10.5783%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.4884%" y="581" width="0.0801%" height="15" fill="rgb(234,129,42)" fg:x="131" fg:w="1"/><text x="10.7384%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.7286%" y="565" width="0.0801%" height="15" fill="rgb(220,82,16)" fg:x="134" fg:w="1"/><text x="10.9786%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.7286%" y="549" width="0.0801%" height="15" fill="rgb(211,88,4)" fg:x="134" fg:w="1"/><text x="10.9786%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="9.8479%" y="645" width="1.1209%" height="15" fill="rgb(248,151,21)" fg:x="123" fg:w="14"/><text x="10.0979%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.12%)</title><rect x="9.8479%" y="629" width="1.1209%" height="15" fill="rgb(238,163,6)" fg:x="123" fg:w="14"/><text x="10.0979%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="10.2482%" y="613" width="0.7206%" height="15" fill="rgb(209,183,11)" fg:x="128" fg:w="9"/><text x="10.4982%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="10.4083%" y="597" width="0.5604%" height="15" fill="rgb(219,37,20)" fg:x="130" fg:w="7"/><text x="10.6583%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="10.5685%" y="581" width="0.4003%" height="15" fill="rgb(210,158,4)" fg:x="132" fg:w="5"/><text x="10.8185%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.8086%" y="565" width="0.1601%" height="15" fill="rgb(221,167,53)" fg:x="135" fg:w="2"/><text x="11.0586%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.8887%" y="549" width="0.0801%" height="15" fill="rgb(237,151,45)" fg:x="136" fg:w="1"/><text x="11.1387%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="11.0488%" y="613" width="0.0801%" height="15" fill="rgb(231,39,3)" fg:x="138" fg:w="1"/><text x="11.2988%" y="623.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="10.9688%" y="629" width="0.2402%" height="15" fill="rgb(212,167,28)" fg:x="137" fg:w="3"/><text x="11.2188%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.1289%" y="613" width="0.0801%" height="15" fill="rgb(232,178,8)" fg:x="139" fg:w="1"/><text x="11.3789%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.2890%" y="597" width="0.0801%" height="15" fill="rgb(225,151,20)" fg:x="141" fg:w="1"/><text x="11.5390%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.2890%" y="581" width="0.0801%" height="15" fill="rgb(238,3,37)" fg:x="141" fg:w="1"/><text x="11.5390%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.2890%" y="565" width="0.0801%" height="15" fill="rgb(251,147,42)" fg:x="141" fg:w="1"/><text x="11.5390%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="11.3691%" y="597" width="0.0801%" height="15" fill="rgb(208,173,10)" fg:x="142" fg:w="1"/><text x="11.6191%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="11.6093%" y="581" width="0.0801%" height="15" fill="rgb(246,225,4)" fg:x="145" fg:w="1"/><text x="11.8593%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="11.4492%" y="597" width="0.3203%" height="15" fill="rgb(248,102,6)" fg:x="143" fg:w="4"/><text x="11.6992%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.6894%" y="581" width="0.0801%" height="15" fill="rgb(232,6,21)" fg:x="146" fg:w="1"/><text x="11.9394%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.6894%" y="565" width="0.0801%" height="15" fill="rgb(221,179,22)" fg:x="146" fg:w="1"/><text x="11.9394%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.6894%" y="549" width="0.0801%" height="15" fill="rgb(252,50,20)" fg:x="146" fg:w="1"/><text x="11.9394%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.6894%" y="533" width="0.0801%" height="15" fill="rgb(222,56,38)" fg:x="146" fg:w="1"/><text x="11.9394%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="11.9295%" y="549" width="0.2402%" height="15" fill="rgb(206,193,29)" fg:x="149" fg:w="3"/><text x="12.1795%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="11.9295%" y="533" width="0.2402%" height="15" fill="rgb(239,192,45)" fg:x="149" fg:w="3"/><text x="12.1795%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="12.0096%" y="517" width="0.1601%" height="15" fill="rgb(254,18,36)" fg:x="150" fg:w="2"/><text x="12.2596%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="12.0096%" y="501" width="0.1601%" height="15" fill="rgb(221,127,11)" fg:x="150" fg:w="2"/><text x="12.2596%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="12.0096%" y="485" width="0.1601%" height="15" fill="rgb(234,146,35)" fg:x="150" fg:w="2"/><text x="12.2596%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.2498%" y="517" width="0.1601%" height="15" fill="rgb(254,201,37)" fg:x="153" fg:w="2"/><text x="12.4998%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="12.1697%" y="533" width="0.6405%" height="15" fill="rgb(211,202,23)" fg:x="152" fg:w="8"/><text x="12.4197%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="12.4099%" y="517" width="0.4003%" height="15" fill="rgb(237,91,2)" fg:x="155" fg:w="5"/><text x="12.6599%" y="527.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="12.5701%" y="501" width="0.2402%" height="15" fill="rgb(226,228,36)" fg:x="157" fg:w="3"/><text x="12.8201%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.28%)</title><rect x="11.8495%" y="565" width="1.2810%" height="15" fill="rgb(213,63,50)" fg:x="148" fg:w="16"/><text x="12.0995%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.96%)</title><rect x="12.1697%" y="549" width="0.9608%" height="15" fill="rgb(235,194,19)" fg:x="152" fg:w="12"/><text x="12.4197%" y="559.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="12.8102%" y="533" width="0.3203%" height="15" fill="rgb(207,204,18)" fg:x="160" fg:w="4"/><text x="13.0602%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.36%)</title><rect x="11.8495%" y="581" width="1.3611%" height="15" fill="rgb(248,8,7)" fg:x="148" fg:w="17"/><text x="12.0995%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="13.1305%" y="565" width="0.0801%" height="15" fill="rgb(223,145,47)" fg:x="164" fg:w="1"/><text x="13.3805%" y="575.50"></text></g><g><title>engine::session::Session::flush (99 samples, 7.93%)</title><rect x="5.3643%" y="725" width="7.9263%" height="15" fill="rgb(228,84,11)" fg:x="67" fg:w="99"/><text x="5.6143%" y="735.50">engine::ses..</text></g><g><title>engine::session::state::State::close (96 samples, 7.69%)</title><rect x="5.6045%" y="709" width="7.6861%" height="15" fill="rgb(218,76,45)" fg:x="70" fg:w="96"/><text x="5.8545%" y="719.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_entities (96 samples, 7.69%)</title><rect x="5.6045%" y="693" width="7.6861%" height="15" fill="rgb(223,80,15)" fg:x="70" fg:w="96"/><text x="5.8545%" y="703.50">engine::ses..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (94 samples, 7.53%)</title><rect x="5.7646%" y="677" width="7.5260%" height="15" fill="rgb(219,218,33)" fg:x="72" fg:w="94"/><text x="6.0146%" y="687.50">engine::se..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (94 samples, 7.53%)</title><rect x="5.7646%" y="661" width="7.5260%" height="15" fill="rgb(208,51,11)" fg:x="72" fg:w="94"/><text x="6.0146%" y="671.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (29 samples, 2.32%)</title><rect x="10.9688%" y="645" width="2.3219%" height="15" fill="rgb(229,165,39)" fg:x="137" fg:w="29"/><text x="11.2188%" y="655.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (26 samples, 2.08%)</title><rect x="11.2090%" y="629" width="2.0817%" height="15" fill="rgb(241,100,24)" fg:x="140" fg:w="26"/><text x="11.4590%" y="639.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (26 samples, 2.08%)</title><rect x="11.2090%" y="613" width="2.0817%" height="15" fill="rgb(228,14,23)" fg:x="140" fg:w="26"/><text x="11.4590%" y="623.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.52%)</title><rect x="11.7694%" y="597" width="1.5212%" height="15" fill="rgb(247,116,52)" fg:x="147" fg:w="19"/><text x="12.0194%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.2106%" y="581" width="0.0801%" height="15" fill="rgb(216,149,33)" fg:x="165" fg:w="1"/><text x="13.4606%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="13.2906%" y="469" width="0.0801%" height="15" fill="rgb(238,142,29)" fg:x="166" fg:w="1"/><text x="13.5406%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.2906%" y="453" width="0.0801%" height="15" fill="rgb(224,83,40)" fg:x="166" fg:w="1"/><text x="13.5406%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.2906%" y="437" width="0.0801%" height="15" fill="rgb(234,165,11)" fg:x="166" fg:w="1"/><text x="13.5406%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.2906%" y="421" width="0.0801%" height="15" fill="rgb(215,96,23)" fg:x="166" fg:w="1"/><text x="13.5406%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.2906%" y="405" width="0.0801%" height="15" fill="rgb(233,179,26)" fg:x="166" fg:w="1"/><text x="13.5406%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.2906%" y="389" width="0.0801%" height="15" fill="rgb(225,129,33)" fg:x="166" fg:w="1"/><text x="13.5406%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.2906%" y="373" width="0.0801%" height="15" fill="rgb(237,49,13)" fg:x="166" fg:w="1"/><text x="13.5406%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.2906%" y="357" width="0.0801%" height="15" fill="rgb(211,3,31)" fg:x="166" fg:w="1"/><text x="13.5406%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.2906%" y="341" width="0.0801%" height="15" fill="rgb(216,152,19)" fg:x="166" fg:w="1"/><text x="13.5406%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.2906%" y="325" width="0.0801%" height="15" fill="rgb(251,121,35)" fg:x="166" fg:w="1"/><text x="13.5406%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.2906%" y="309" width="0.0801%" height="15" fill="rgb(210,217,47)" fg:x="166" fg:w="1"/><text x="13.5406%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.2906%" y="293" width="0.0801%" height="15" fill="rgb(244,116,22)" fg:x="166" fg:w="1"/><text x="13.5406%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.2906%" y="277" width="0.0801%" height="15" fill="rgb(228,17,21)" fg:x="166" fg:w="1"/><text x="13.5406%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="13.2906%" y="261" width="0.0801%" height="15" fill="rgb(240,149,34)" fg:x="166" fg:w="1"/><text x="13.5406%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.2906%" y="245" width="0.0801%" height="15" fill="rgb(208,125,47)" fg:x="166" fg:w="1"/><text x="13.5406%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="13.2906%" y="229" width="0.0801%" height="15" fill="rgb(249,186,39)" fg:x="166" fg:w="1"/><text x="13.5406%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="13.2906%" y="213" width="0.0801%" height="15" fill="rgb(240,220,33)" fg:x="166" fg:w="1"/><text x="13.5406%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="13.2906%" y="197" width="0.0801%" height="15" fill="rgb(243,110,23)" fg:x="166" fg:w="1"/><text x="13.5406%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.2906%" y="181" width="0.0801%" height="15" fill="rgb(219,163,46)" fg:x="166" fg:w="1"/><text x="13.5406%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="13.2906%" y="693" width="0.2402%" height="15" fill="rgb(216,126,30)" fg:x="166" fg:w="3"/><text x="13.5406%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="13.2906%" y="677" width="0.2402%" height="15" fill="rgb(208,139,11)" fg:x="166" fg:w="3"/><text x="13.5406%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="13.2906%" y="661" width="0.2402%" height="15" fill="rgb(213,118,36)" fg:x="166" fg:w="3"/><text x="13.5406%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="13.2906%" y="645" width="0.2402%" height="15" fill="rgb(226,43,17)" fg:x="166" fg:w="3"/><text x="13.5406%" y="655.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="13.2906%" y="629" width="0.2402%" height="15" fill="rgb(254,217,4)" fg:x="166" fg:w="3"/><text x="13.5406%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="13.2906%" y="613" width="0.2402%" height="15" fill="rgb(210,134,47)" fg:x="166" fg:w="3"/><text x="13.5406%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="13.2906%" y="597" width="0.2402%" height="15" fill="rgb(237,24,49)" fg:x="166" fg:w="3"/><text x="13.5406%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="13.2906%" y="581" width="0.2402%" height="15" fill="rgb(251,39,46)" fg:x="166" fg:w="3"/><text x="13.5406%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="13.2906%" y="565" width="0.2402%" height="15" fill="rgb(251,220,3)" fg:x="166" fg:w="3"/><text x="13.5406%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="13.2906%" y="549" width="0.2402%" height="15" fill="rgb(228,105,12)" fg:x="166" fg:w="3"/><text x="13.5406%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="13.2906%" y="533" width="0.2402%" height="15" fill="rgb(215,196,1)" fg:x="166" fg:w="3"/><text x="13.5406%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="13.2906%" y="517" width="0.2402%" height="15" fill="rgb(214,33,39)" fg:x="166" fg:w="3"/><text x="13.5406%" y="527.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="13.2906%" y="501" width="0.2402%" height="15" fill="rgb(220,19,52)" fg:x="166" fg:w="3"/><text x="13.5406%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="13.2906%" y="485" width="0.2402%" height="15" fill="rgb(221,78,38)" fg:x="166" fg:w="3"/><text x="13.5406%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.3707%" y="469" width="0.1601%" height="15" fill="rgb(253,30,16)" fg:x="167" fg:w="2"/><text x="13.6207%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.3707%" y="453" width="0.1601%" height="15" fill="rgb(242,65,0)" fg:x="167" fg:w="2"/><text x="13.6207%" y="463.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="13.3707%" y="437" width="0.1601%" height="15" fill="rgb(235,201,12)" fg:x="167" fg:w="2"/><text x="13.6207%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="13.3707%" y="421" width="0.1601%" height="15" fill="rgb(233,161,9)" fg:x="167" fg:w="2"/><text x="13.6207%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="13.3707%" y="405" width="0.1601%" height="15" fill="rgb(241,207,41)" fg:x="167" fg:w="2"/><text x="13.6207%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="13.3707%" y="389" width="0.1601%" height="15" fill="rgb(212,69,46)" fg:x="167" fg:w="2"/><text x="13.6207%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="13.3707%" y="373" width="0.1601%" height="15" fill="rgb(239,69,45)" fg:x="167" fg:w="2"/><text x="13.6207%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="13.3707%" y="357" width="0.1601%" height="15" fill="rgb(242,117,48)" fg:x="167" fg:w="2"/><text x="13.6207%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="13.3707%" y="341" width="0.1601%" height="15" fill="rgb(228,41,36)" fg:x="167" fg:w="2"/><text x="13.6207%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="13.3707%" y="325" width="0.1601%" height="15" fill="rgb(212,3,32)" fg:x="167" fg:w="2"/><text x="13.6207%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.16%)</title><rect x="13.3707%" y="309" width="0.1601%" height="15" fill="rgb(233,41,49)" fg:x="167" fg:w="2"/><text x="13.6207%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="13.5308%" y="693" width="0.2402%" height="15" fill="rgb(252,170,49)" fg:x="169" fg:w="3"/><text x="13.7808%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.5308%" y="677" width="0.2402%" height="15" fill="rgb(229,53,26)" fg:x="169" fg:w="3"/><text x="13.7808%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="13.5308%" y="661" width="0.2402%" height="15" fill="rgb(217,157,12)" fg:x="169" fg:w="3"/><text x="13.7808%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="13.5308%" y="645" width="0.2402%" height="15" fill="rgb(227,17,9)" fg:x="169" fg:w="3"/><text x="13.7808%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="13.5308%" y="629" width="0.2402%" height="15" fill="rgb(218,84,12)" fg:x="169" fg:w="3"/><text x="13.7808%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="13.5308%" y="613" width="0.2402%" height="15" fill="rgb(212,79,24)" fg:x="169" fg:w="3"/><text x="13.7808%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="13.5308%" y="597" width="0.2402%" height="15" fill="rgb(217,222,37)" fg:x="169" fg:w="3"/><text x="13.7808%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.6109%" y="581" width="0.1601%" height="15" fill="rgb(246,208,8)" fg:x="170" fg:w="2"/><text x="13.8609%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.7710%" y="645" width="0.0801%" height="15" fill="rgb(244,133,10)" fg:x="172" fg:w="1"/><text x="14.0210%" y="655.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.8511%" y="645" width="0.0801%" height="15" fill="rgb(209,219,41)" fg:x="173" fg:w="1"/><text x="14.1011%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8511%" y="629" width="0.0801%" height="15" fill="rgb(253,175,45)" fg:x="173" fg:w="1"/><text x="14.1011%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8511%" y="613" width="0.0801%" height="15" fill="rgb(235,100,37)" fg:x="173" fg:w="1"/><text x="14.1011%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="13.7710%" y="677" width="0.2402%" height="15" fill="rgb(225,87,19)" fg:x="172" fg:w="3"/><text x="14.0210%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.7710%" y="661" width="0.2402%" height="15" fill="rgb(217,152,17)" fg:x="172" fg:w="3"/><text x="14.0210%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="13.9311%" y="645" width="0.0801%" height="15" fill="rgb(235,72,13)" fg:x="174" fg:w="1"/><text x="14.1811%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.9311%" y="629" width="0.0801%" height="15" fill="rgb(233,140,18)" fg:x="174" fg:w="1"/><text x="14.1811%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.9311%" y="613" width="0.0801%" height="15" fill="rgb(207,212,28)" fg:x="174" fg:w="1"/><text x="14.1811%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.9311%" y="597" width="0.0801%" height="15" fill="rgb(220,130,25)" fg:x="174" fg:w="1"/><text x="14.1811%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0913%" y="661" width="0.0801%" height="15" fill="rgb(205,55,34)" fg:x="176" fg:w="1"/><text x="14.3413%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0913%" y="645" width="0.0801%" height="15" fill="rgb(237,54,35)" fg:x="176" fg:w="1"/><text x="14.3413%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0913%" y="629" width="0.0801%" height="15" fill="rgb(208,67,23)" fg:x="176" fg:w="1"/><text x="14.3413%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.0913%" y="613" width="0.0801%" height="15" fill="rgb(206,207,50)" fg:x="176" fg:w="1"/><text x="14.3413%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.0913%" y="597" width="0.0801%" height="15" fill="rgb(213,211,42)" fg:x="176" fg:w="1"/><text x="14.3413%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.0913%" y="581" width="0.0801%" height="15" fill="rgb(252,197,50)" fg:x="176" fg:w="1"/><text x="14.3413%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.0913%" y="565" width="0.0801%" height="15" fill="rgb(251,211,41)" fg:x="176" fg:w="1"/><text x="14.3413%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.0913%" y="549" width="0.0801%" height="15" fill="rgb(229,211,5)" fg:x="176" fg:w="1"/><text x="14.3413%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.0913%" y="533" width="0.0801%" height="15" fill="rgb(239,36,31)" fg:x="176" fg:w="1"/><text x="14.3413%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.0913%" y="517" width="0.0801%" height="15" fill="rgb(248,67,31)" fg:x="176" fg:w="1"/><text x="14.3413%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.0913%" y="501" width="0.0801%" height="15" fill="rgb(249,55,44)" fg:x="176" fg:w="1"/><text x="14.3413%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.0913%" y="485" width="0.0801%" height="15" fill="rgb(216,82,12)" fg:x="176" fg:w="1"/><text x="14.3413%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0913%" y="469" width="0.0801%" height="15" fill="rgb(242,174,1)" fg:x="176" fg:w="1"/><text x="14.3413%" y="479.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="14.1713%" y="661" width="0.1601%" height="15" fill="rgb(208,120,29)" fg:x="177" fg:w="2"/><text x="14.4213%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.2514%" y="645" width="0.0801%" height="15" fill="rgb(221,105,43)" fg:x="178" fg:w="1"/><text x="14.5014%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.2514%" y="629" width="0.0801%" height="15" fill="rgb(234,124,22)" fg:x="178" fg:w="1"/><text x="14.5014%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.2514%" y="613" width="0.0801%" height="15" fill="rgb(212,23,30)" fg:x="178" fg:w="1"/><text x="14.5014%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (10 samples, 0.80%)</title><rect x="13.7710%" y="693" width="0.8006%" height="15" fill="rgb(219,122,53)" fg:x="172" fg:w="10"/><text x="14.0210%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="14.0112%" y="677" width="0.5604%" height="15" fill="rgb(248,84,24)" fg:x="175" fg:w="7"/><text x="14.2612%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="14.3315%" y="661" width="0.2402%" height="15" fill="rgb(245,115,18)" fg:x="179" fg:w="3"/><text x="14.5815%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="14.4115%" y="645" width="0.1601%" height="15" fill="rgb(227,176,51)" fg:x="180" fg:w="2"/><text x="14.6615%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.4916%" y="629" width="0.0801%" height="15" fill="rgb(229,63,42)" fg:x="181" fg:w="1"/><text x="14.7416%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5717%" y="613" width="0.0801%" height="15" fill="rgb(247,202,24)" fg:x="182" fg:w="1"/><text x="14.8217%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5717%" y="597" width="0.0801%" height="15" fill="rgb(244,173,20)" fg:x="182" fg:w="1"/><text x="14.8217%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="14.5717%" y="645" width="0.1601%" height="15" fill="rgb(242,81,47)" fg:x="182" fg:w="2"/><text x="14.8217%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.5717%" y="629" width="0.1601%" height="15" fill="rgb(231,185,54)" fg:x="182" fg:w="2"/><text x="14.8217%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.6517%" y="613" width="0.0801%" height="15" fill="rgb(243,55,32)" fg:x="183" fg:w="1"/><text x="14.9017%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.6517%" y="597" width="0.0801%" height="15" fill="rgb(208,167,19)" fg:x="183" fg:w="1"/><text x="14.9017%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.6517%" y="581" width="0.0801%" height="15" fill="rgb(231,72,35)" fg:x="183" fg:w="1"/><text x="14.9017%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.6517%" y="565" width="0.0801%" height="15" fill="rgb(250,173,51)" fg:x="183" fg:w="1"/><text x="14.9017%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.6517%" y="549" width="0.0801%" height="15" fill="rgb(209,5,22)" fg:x="183" fg:w="1"/><text x="14.9017%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="14.5717%" y="677" width="0.2402%" height="15" fill="rgb(250,174,19)" fg:x="182" fg:w="3"/><text x="14.8217%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="14.5717%" y="661" width="0.2402%" height="15" fill="rgb(217,3,49)" fg:x="182" fg:w="3"/><text x="14.8217%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.7318%" y="645" width="0.0801%" height="15" fill="rgb(218,225,5)" fg:x="184" fg:w="1"/><text x="14.9818%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.7318%" y="629" width="0.0801%" height="15" fill="rgb(236,89,11)" fg:x="184" fg:w="1"/><text x="14.9818%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.7318%" y="613" width="0.0801%" height="15" fill="rgb(206,33,28)" fg:x="184" fg:w="1"/><text x="14.9818%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.7318%" y="597" width="0.0801%" height="15" fill="rgb(241,56,42)" fg:x="184" fg:w="1"/><text x="14.9818%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.7318%" y="581" width="0.0801%" height="15" fill="rgb(222,44,11)" fg:x="184" fg:w="1"/><text x="14.9818%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="14.7318%" y="565" width="0.0801%" height="15" fill="rgb(234,111,20)" fg:x="184" fg:w="1"/><text x="14.9818%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (26 samples, 2.08%)</title><rect x="13.2906%" y="709" width="2.0817%" height="15" fill="rgb(237,77,6)" fg:x="166" fg:w="26"/><text x="13.5406%" y="719.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="14.5717%" y="693" width="0.8006%" height="15" fill="rgb(235,111,23)" fg:x="182" fg:w="10"/><text x="14.8217%" y="703.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="14.8118%" y="677" width="0.5604%" height="15" fill="rgb(251,135,29)" fg:x="185" fg:w="7"/><text x="15.0618%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.56%)</title><rect x="14.8118%" y="661" width="0.5604%" height="15" fill="rgb(217,57,1)" fg:x="185" fg:w="7"/><text x="15.0618%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.56%)</title><rect x="14.8118%" y="645" width="0.5604%" height="15" fill="rgb(249,119,31)" fg:x="185" fg:w="7"/><text x="15.0618%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.56%)</title><rect x="14.8118%" y="629" width="0.5604%" height="15" fill="rgb(233,164,33)" fg:x="185" fg:w="7"/><text x="15.0618%" y="639.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="14.8118%" y="613" width="0.5604%" height="15" fill="rgb(250,217,43)" fg:x="185" fg:w="7"/><text x="15.0618%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="15.4524%" y="693" width="0.0801%" height="15" fill="rgb(232,154,50)" fg:x="193" fg:w="1"/><text x="15.7024%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="15.4524%" y="677" width="0.0801%" height="15" fill="rgb(227,190,8)" fg:x="193" fg:w="1"/><text x="15.7024%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.5324%" y="661" width="0.0801%" height="15" fill="rgb(209,217,32)" fg:x="194" fg:w="1"/><text x="15.7824%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.5324%" y="645" width="0.0801%" height="15" fill="rgb(243,203,50)" fg:x="194" fg:w="1"/><text x="15.7824%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.5324%" y="629" width="0.0801%" height="15" fill="rgb(232,152,27)" fg:x="194" fg:w="1"/><text x="15.7824%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5324%" y="613" width="0.0801%" height="15" fill="rgb(240,34,29)" fg:x="194" fg:w="1"/><text x="15.7824%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.5324%" y="597" width="0.0801%" height="15" fill="rgb(215,185,52)" fg:x="194" fg:w="1"/><text x="15.7824%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5324%" y="581" width="0.0801%" height="15" fill="rgb(240,89,49)" fg:x="194" fg:w="1"/><text x="15.7824%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.5324%" y="565" width="0.0801%" height="15" fill="rgb(225,12,52)" fg:x="194" fg:w="1"/><text x="15.7824%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5324%" y="549" width="0.0801%" height="15" fill="rgb(239,128,45)" fg:x="194" fg:w="1"/><text x="15.7824%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="15.6125%" y="661" width="0.0801%" height="15" fill="rgb(211,78,47)" fg:x="195" fg:w="1"/><text x="15.8625%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.6125%" y="645" width="0.0801%" height="15" fill="rgb(232,31,21)" fg:x="195" fg:w="1"/><text x="15.8625%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.6125%" y="629" width="0.0801%" height="15" fill="rgb(222,168,14)" fg:x="195" fg:w="1"/><text x="15.8625%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.6125%" y="613" width="0.0801%" height="15" fill="rgb(209,128,24)" fg:x="195" fg:w="1"/><text x="15.8625%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.6125%" y="597" width="0.0801%" height="15" fill="rgb(249,35,13)" fg:x="195" fg:w="1"/><text x="15.8625%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.6125%" y="581" width="0.0801%" height="15" fill="rgb(218,7,2)" fg:x="195" fg:w="1"/><text x="15.8625%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.6125%" y="565" width="0.0801%" height="15" fill="rgb(238,107,27)" fg:x="195" fg:w="1"/><text x="15.8625%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.6125%" y="549" width="0.0801%" height="15" fill="rgb(217,88,38)" fg:x="195" fg:w="1"/><text x="15.8625%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.6125%" y="533" width="0.0801%" height="15" fill="rgb(230,207,0)" fg:x="195" fg:w="1"/><text x="15.8625%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.6125%" y="517" width="0.0801%" height="15" fill="rgb(249,64,54)" fg:x="195" fg:w="1"/><text x="15.8625%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.6125%" y="501" width="0.0801%" height="15" fill="rgb(231,7,11)" fg:x="195" fg:w="1"/><text x="15.8625%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.6125%" y="485" width="0.0801%" height="15" fill="rgb(205,149,21)" fg:x="195" fg:w="1"/><text x="15.8625%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.6125%" y="469" width="0.0801%" height="15" fill="rgb(215,126,34)" fg:x="195" fg:w="1"/><text x="15.8625%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.6125%" y="453" width="0.0801%" height="15" fill="rgb(241,132,45)" fg:x="195" fg:w="1"/><text x="15.8625%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.6125%" y="437" width="0.0801%" height="15" fill="rgb(252,69,32)" fg:x="195" fg:w="1"/><text x="15.8625%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6125%" y="421" width="0.0801%" height="15" fill="rgb(232,204,19)" fg:x="195" fg:w="1"/><text x="15.8625%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="15.5324%" y="693" width="0.2402%" height="15" fill="rgb(249,15,47)" fg:x="194" fg:w="3"/><text x="15.7824%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="15.5324%" y="677" width="0.2402%" height="15" fill="rgb(209,227,23)" fg:x="194" fg:w="3"/><text x="15.7824%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6926%" y="661" width="0.0801%" height="15" fill="rgb(248,92,24)" fg:x="196" fg:w="1"/><text x="15.9426%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0128%" y="645" width="0.0801%" height="15" fill="rgb(247,59,2)" fg:x="200" fg:w="1"/><text x="16.2628%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="15.7726%" y="693" width="0.4003%" height="15" fill="rgb(221,30,5)" fg:x="197" fg:w="5"/><text x="16.0226%" y="703.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="16.0128%" y="677" width="0.1601%" height="15" fill="rgb(208,108,53)" fg:x="200" fg:w="2"/><text x="16.2628%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.0128%" y="661" width="0.1601%" height="15" fill="rgb(211,183,26)" fg:x="200" fg:w="2"/><text x="16.2628%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.0929%" y="645" width="0.0801%" height="15" fill="rgb(232,132,4)" fg:x="201" fg:w="1"/><text x="16.3429%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.1729%" y="629" width="0.0801%" height="15" fill="rgb(253,128,37)" fg:x="202" fg:w="1"/><text x="16.4229%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="16.1729%" y="645" width="0.1601%" height="15" fill="rgb(221,58,24)" fg:x="202" fg:w="2"/><text x="16.4229%" y="655.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="16.2530%" y="629" width="0.0801%" height="15" fill="rgb(230,54,45)" fg:x="203" fg:w="1"/><text x="16.5030%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="16.1729%" y="677" width="0.3203%" height="15" fill="rgb(254,21,18)" fg:x="202" fg:w="4"/><text x="16.4229%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="16.1729%" y="661" width="0.3203%" height="15" fill="rgb(221,108,0)" fg:x="202" fg:w="4"/><text x="16.4229%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="16.3331%" y="645" width="0.1601%" height="15" fill="rgb(206,95,1)" fg:x="204" fg:w="2"/><text x="16.5831%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.3331%" y="629" width="0.1601%" height="15" fill="rgb(237,52,5)" fg:x="204" fg:w="2"/><text x="16.5831%" y="639.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="16.4131%" y="613" width="0.0801%" height="15" fill="rgb(218,150,34)" fg:x="205" fg:w="1"/><text x="16.6631%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="16.1729%" y="693" width="0.4804%" height="15" fill="rgb(235,194,28)" fg:x="202" fg:w="6"/><text x="16.4229%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="16.4932%" y="677" width="0.1601%" height="15" fill="rgb(245,92,18)" fg:x="206" fg:w="2"/><text x="16.7432%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.4932%" y="661" width="0.1601%" height="15" fill="rgb(253,203,53)" fg:x="206" fg:w="2"/><text x="16.7432%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5733%" y="645" width="0.0801%" height="15" fill="rgb(249,185,47)" fg:x="207" fg:w="1"/><text x="16.8233%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.6533%" y="677" width="0.0801%" height="15" fill="rgb(252,194,52)" fg:x="208" fg:w="1"/><text x="16.9033%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.6533%" y="661" width="0.0801%" height="15" fill="rgb(210,53,36)" fg:x="208" fg:w="1"/><text x="16.9033%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7334%" y="661" width="0.0801%" height="15" fill="rgb(237,37,25)" fg:x="209" fg:w="1"/><text x="16.9834%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="16.8135%" y="613" width="0.0801%" height="15" fill="rgb(242,116,27)" fg:x="210" fg:w="1"/><text x="17.0635%" y="623.50"></text></g><g><title>plugins_core::build::Build::holding (46 samples, 3.68%)</title><rect x="13.2906%" y="725" width="3.6829%" height="15" fill="rgb(213,185,26)" fg:x="166" fg:w="46"/><text x="13.5406%" y="735.50">plug..</text></g><g><title>plugins_core::tools::set_container (20 samples, 1.60%)</title><rect x="15.3723%" y="709" width="1.6013%" height="15" fill="rgb(225,204,8)" fg:x="192" fg:w="20"/><text x="15.6223%" y="719.50"></text></g><g><title>plugins_core::location::Location::set (4 samples, 0.32%)</title><rect x="16.6533%" y="693" width="0.3203%" height="15" fill="rgb(254,111,37)" fg:x="208" fg:w="4"/><text x="16.9033%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="16.7334%" y="677" width="0.2402%" height="15" fill="rgb(242,35,9)" fg:x="209" fg:w="3"/><text x="16.9834%" y="687.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="16.8135%" y="661" width="0.1601%" height="15" fill="rgb(232,138,49)" fg:x="210" fg:w="2"/><text x="17.0635%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.8135%" y="645" width="0.1601%" height="15" fill="rgb(247,56,4)" fg:x="210" fg:w="2"/><text x="17.0635%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="16.8135%" y="629" width="0.1601%" height="15" fill="rgb(226,179,17)" fg:x="210" fg:w="2"/><text x="17.0635%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.8935%" y="613" width="0.0801%" height="15" fill="rgb(216,163,45)" fg:x="211" fg:w="1"/><text x="17.1435%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.8935%" y="597" width="0.0801%" height="15" fill="rgb(211,157,3)" fg:x="211" fg:w="1"/><text x="17.1435%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="17.0536%" y="677" width="0.0801%" height="15" fill="rgb(234,44,20)" fg:x="213" fg:w="1"/><text x="17.3036%" y="687.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="17.0536%" y="661" width="0.0801%" height="15" fill="rgb(254,138,23)" fg:x="213" fg:w="1"/><text x="17.3036%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="17.1337%" y="677" width="0.0801%" height="15" fill="rgb(206,119,39)" fg:x="214" fg:w="1"/><text x="17.3837%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="17.0536%" y="693" width="0.2402%" height="15" fill="rgb(231,105,52)" fg:x="213" fg:w="3"/><text x="17.3036%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="17.2138%" y="677" width="0.0801%" height="15" fill="rgb(250,20,5)" fg:x="215" fg:w="1"/><text x="17.4638%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2138%" y="661" width="0.0801%" height="15" fill="rgb(215,198,30)" fg:x="215" fg:w="1"/><text x="17.4638%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2138%" y="645" width="0.0801%" height="15" fill="rgb(246,142,8)" fg:x="215" fg:w="1"/><text x="17.4638%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.2138%" y="629" width="0.0801%" height="15" fill="rgb(243,26,38)" fg:x="215" fg:w="1"/><text x="17.4638%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.2138%" y="613" width="0.0801%" height="15" fill="rgb(205,133,28)" fg:x="215" fg:w="1"/><text x="17.4638%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.2138%" y="597" width="0.0801%" height="15" fill="rgb(212,34,0)" fg:x="215" fg:w="1"/><text x="17.4638%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.2138%" y="581" width="0.0801%" height="15" fill="rgb(251,226,22)" fg:x="215" fg:w="1"/><text x="17.4638%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.2138%" y="565" width="0.0801%" height="15" fill="rgb(252,119,9)" fg:x="215" fg:w="1"/><text x="17.4638%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.2138%" y="549" width="0.0801%" height="15" fill="rgb(213,150,50)" fg:x="215" fg:w="1"/><text x="17.4638%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.2138%" y="533" width="0.0801%" height="15" fill="rgb(212,24,39)" fg:x="215" fg:w="1"/><text x="17.4638%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.2138%" y="517" width="0.0801%" height="15" fill="rgb(213,46,39)" fg:x="215" fg:w="1"/><text x="17.4638%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.2138%" y="501" width="0.0801%" height="15" fill="rgb(239,106,12)" fg:x="215" fg:w="1"/><text x="17.4638%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2138%" y="485" width="0.0801%" height="15" fill="rgb(249,229,21)" fg:x="215" fg:w="1"/><text x="17.4638%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="17.4540%" y="597" width="0.0801%" height="15" fill="rgb(212,158,3)" fg:x="218" fg:w="1"/><text x="17.7040%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="17.2938%" y="693" width="0.3203%" height="15" fill="rgb(253,26,48)" fg:x="216" fg:w="4"/><text x="17.5438%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="17.2938%" y="677" width="0.3203%" height="15" fill="rgb(238,178,20)" fg:x="216" fg:w="4"/><text x="17.5438%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.3739%" y="661" width="0.2402%" height="15" fill="rgb(208,86,15)" fg:x="217" fg:w="3"/><text x="17.6239%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.3739%" y="645" width="0.2402%" height="15" fill="rgb(239,42,53)" fg:x="217" fg:w="3"/><text x="17.6239%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="17.3739%" y="629" width="0.2402%" height="15" fill="rgb(245,226,8)" fg:x="217" fg:w="3"/><text x="17.6239%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.4540%" y="613" width="0.1601%" height="15" fill="rgb(216,176,32)" fg:x="218" fg:w="2"/><text x="17.7040%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.5340%" y="597" width="0.0801%" height="15" fill="rgb(231,186,21)" fg:x="219" fg:w="1"/><text x="17.7840%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5340%" y="581" width="0.0801%" height="15" fill="rgb(205,95,49)" fg:x="219" fg:w="1"/><text x="17.7840%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="17.6141%" y="693" width="0.0801%" height="15" fill="rgb(217,145,8)" fg:x="220" fg:w="1"/><text x="17.8641%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="17.6141%" y="677" width="0.0801%" height="15" fill="rgb(239,144,48)" fg:x="220" fg:w="1"/><text x="17.8641%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.6141%" y="661" width="0.0801%" height="15" fill="rgb(214,189,23)" fg:x="220" fg:w="1"/><text x="17.8641%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7742%" y="645" width="0.0801%" height="15" fill="rgb(229,157,17)" fg:x="222" fg:w="1"/><text x="18.0242%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7742%" y="629" width="0.0801%" height="15" fill="rgb(230,5,48)" fg:x="222" fg:w="1"/><text x="18.0242%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7742%" y="613" width="0.0801%" height="15" fill="rgb(224,156,48)" fg:x="222" fg:w="1"/><text x="18.0242%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="17.6942%" y="677" width="0.2402%" height="15" fill="rgb(223,14,29)" fg:x="221" fg:w="3"/><text x="17.9442%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.6942%" y="661" width="0.2402%" height="15" fill="rgb(229,96,36)" fg:x="221" fg:w="3"/><text x="17.9442%" y="671.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.8543%" y="645" width="0.0801%" height="15" fill="rgb(231,102,53)" fg:x="223" fg:w="1"/><text x="18.1043%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.8543%" y="629" width="0.0801%" height="15" fill="rgb(210,77,38)" fg:x="223" fg:w="1"/><text x="18.1043%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="17.6942%" y="693" width="0.3203%" height="15" fill="rgb(235,131,6)" fg:x="221" fg:w="4"/><text x="17.9442%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.9343%" y="677" width="0.0801%" height="15" fill="rgb(252,55,38)" fg:x="224" fg:w="1"/><text x="18.1843%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.9343%" y="661" width="0.0801%" height="15" fill="rgb(246,38,14)" fg:x="224" fg:w="1"/><text x="18.1843%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.9343%" y="645" width="0.0801%" height="15" fill="rgb(242,27,5)" fg:x="224" fg:w="1"/><text x="18.1843%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.0144%" y="581" width="0.0801%" height="15" fill="rgb(228,65,35)" fg:x="225" fg:w="1"/><text x="18.2644%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.0144%" y="565" width="0.0801%" height="15" fill="rgb(245,93,11)" fg:x="225" fg:w="1"/><text x="18.2644%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.0144%" y="549" width="0.0801%" height="15" fill="rgb(213,1,31)" fg:x="225" fg:w="1"/><text x="18.2644%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.0144%" y="533" width="0.0801%" height="15" fill="rgb(237,205,14)" fg:x="225" fg:w="1"/><text x="18.2644%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.0144%" y="517" width="0.0801%" height="15" fill="rgb(232,118,45)" fg:x="225" fg:w="1"/><text x="18.2644%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.0144%" y="501" width="0.0801%" height="15" fill="rgb(218,5,6)" fg:x="225" fg:w="1"/><text x="18.2644%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.0144%" y="485" width="0.0801%" height="15" fill="rgb(251,87,51)" fg:x="225" fg:w="1"/><text x="18.2644%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.0144%" y="469" width="0.0801%" height="15" fill="rgb(207,225,20)" fg:x="225" fg:w="1"/><text x="18.2644%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.0144%" y="453" width="0.0801%" height="15" fill="rgb(222,78,54)" fg:x="225" fg:w="1"/><text x="18.2644%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.0144%" y="437" width="0.0801%" height="15" fill="rgb(232,85,16)" fg:x="225" fg:w="1"/><text x="18.2644%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.0144%" y="421" width="0.0801%" height="15" fill="rgb(244,25,33)" fg:x="225" fg:w="1"/><text x="18.2644%" y="431.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="18.0144%" y="405" width="0.0801%" height="15" fill="rgb(233,24,36)" fg:x="225" fg:w="1"/><text x="18.2644%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.0144%" y="389" width="0.0801%" height="15" fill="rgb(253,49,54)" fg:x="225" fg:w="1"/><text x="18.2644%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.0144%" y="613" width="0.1601%" height="15" fill="rgb(245,12,22)" fg:x="225" fg:w="2"/><text x="18.2644%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.0144%" y="597" width="0.1601%" height="15" fill="rgb(253,141,28)" fg:x="225" fg:w="2"/><text x="18.2644%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.0945%" y="581" width="0.0801%" height="15" fill="rgb(225,207,27)" fg:x="226" fg:w="1"/><text x="18.3445%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.1745%" y="613" width="0.0801%" height="15" fill="rgb(220,84,2)" fg:x="227" fg:w="1"/><text x="18.4245%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.2546%" y="565" width="0.0801%" height="15" fill="rgb(224,37,37)" fg:x="228" fg:w="1"/><text x="18.5046%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="18.2546%" y="613" width="0.1601%" height="15" fill="rgb(220,143,18)" fg:x="228" fg:w="2"/><text x="18.5046%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="18.2546%" y="597" width="0.1601%" height="15" fill="rgb(210,88,33)" fg:x="228" fg:w="2"/><text x="18.5046%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="18.2546%" y="581" width="0.1601%" height="15" fill="rgb(219,87,51)" fg:x="228" fg:w="2"/><text x="18.5046%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3347%" y="565" width="0.0801%" height="15" fill="rgb(211,7,35)" fg:x="229" fg:w="1"/><text x="18.5847%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.52%)</title><rect x="16.9736%" y="725" width="1.5212%" height="15" fill="rgb(232,77,2)" fg:x="212" fg:w="19"/><text x="17.2236%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.52%)</title><rect x="16.9736%" y="709" width="1.5212%" height="15" fill="rgb(249,94,25)" fg:x="212" fg:w="19"/><text x="17.2236%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="18.0144%" y="693" width="0.4804%" height="15" fill="rgb(215,112,2)" fg:x="225" fg:w="6"/><text x="18.2644%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="18.0144%" y="677" width="0.4804%" height="15" fill="rgb(226,115,48)" fg:x="225" fg:w="6"/><text x="18.2644%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="18.0144%" y="661" width="0.4804%" height="15" fill="rgb(249,196,10)" fg:x="225" fg:w="6"/><text x="18.2644%" y="671.50"></text></g><g><title>kernel::model::props::save_props (6 samples, 0.48%)</title><rect x="18.0144%" y="645" width="0.4804%" height="15" fill="rgb(237,109,14)" fg:x="225" fg:w="6"/><text x="18.2644%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="18.0144%" y="629" width="0.4804%" height="15" fill="rgb(217,103,53)" fg:x="225" fg:w="6"/><text x="18.2644%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="18.4147%" y="613" width="0.0801%" height="15" fill="rgb(244,137,9)" fg:x="230" fg:w="1"/><text x="18.6647%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.4147%" y="597" width="0.0801%" height="15" fill="rgb(227,201,3)" fg:x="230" fg:w="1"/><text x="18.6647%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="18.4147%" y="581" width="0.0801%" height="15" fill="rgb(243,94,6)" fg:x="230" fg:w="1"/><text x="18.6647%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="18.4147%" y="565" width="0.0801%" height="15" fill="rgb(235,118,5)" fg:x="230" fg:w="1"/><text x="18.6647%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.4147%" y="549" width="0.0801%" height="15" fill="rgb(247,10,30)" fg:x="230" fg:w="1"/><text x="18.6647%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.4147%" y="533" width="0.0801%" height="15" fill="rgb(205,26,28)" fg:x="230" fg:w="1"/><text x="18.6647%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.4147%" y="517" width="0.0801%" height="15" fill="rgb(206,99,35)" fg:x="230" fg:w="1"/><text x="18.6647%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.4147%" y="501" width="0.0801%" height="15" fill="rgb(238,130,40)" fg:x="230" fg:w="1"/><text x="18.6647%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="18.4948%" y="693" width="0.0801%" height="15" fill="rgb(224,126,31)" fg:x="231" fg:w="1"/><text x="18.7448%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.4948%" y="677" width="0.0801%" height="15" fill="rgb(254,105,17)" fg:x="231" fg:w="1"/><text x="18.7448%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.5749%" y="661" width="0.1601%" height="15" fill="rgb(216,87,36)" fg:x="232" fg:w="2"/><text x="18.8249%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.5749%" y="645" width="0.1601%" height="15" fill="rgb(240,21,12)" fg:x="232" fg:w="2"/><text x="18.8249%" y="655.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="18.5749%" y="693" width="0.2402%" height="15" fill="rgb(245,192,34)" fg:x="232" fg:w="3"/><text x="18.8249%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="18.5749%" y="677" width="0.2402%" height="15" fill="rgb(226,100,49)" fg:x="232" fg:w="3"/><text x="18.8249%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="18.7350%" y="661" width="0.0801%" height="15" fill="rgb(245,188,27)" fg:x="234" fg:w="1"/><text x="18.9850%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="18.4948%" y="725" width="0.4003%" height="15" fill="rgb(212,170,8)" fg:x="231" fg:w="5"/><text x="18.7448%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.40%)</title><rect x="18.4948%" y="709" width="0.4003%" height="15" fill="rgb(217,113,29)" fg:x="231" fg:w="5"/><text x="18.7448%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.8151%" y="693" width="0.0801%" height="15" fill="rgb(237,30,3)" fg:x="235" fg:w="1"/><text x="19.0651%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.8151%" y="677" width="0.0801%" height="15" fill="rgb(227,19,28)" fg:x="235" fg:w="1"/><text x="19.0651%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.8151%" y="661" width="0.0801%" height="15" fill="rgb(239,172,45)" fg:x="235" fg:w="1"/><text x="19.0651%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.8151%" y="645" width="0.0801%" height="15" fill="rgb(254,55,39)" fg:x="235" fg:w="1"/><text x="19.0651%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.8151%" y="629" width="0.0801%" height="15" fill="rgb(249,208,12)" fg:x="235" fg:w="1"/><text x="19.0651%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="18.8151%" y="613" width="0.0801%" height="15" fill="rgb(240,52,13)" fg:x="235" fg:w="1"/><text x="19.0651%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.8151%" y="597" width="0.0801%" height="15" fill="rgb(252,149,13)" fg:x="235" fg:w="1"/><text x="19.0651%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="18.8951%" y="693" width="0.0801%" height="15" fill="rgb(232,81,48)" fg:x="236" fg:w="1"/><text x="19.1451%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="18.8951%" y="677" width="0.0801%" height="15" fill="rgb(222,144,2)" fg:x="236" fg:w="1"/><text x="19.1451%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.8951%" y="661" width="0.0801%" height="15" fill="rgb(216,81,32)" fg:x="236" fg:w="1"/><text x="19.1451%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.8951%" y="645" width="0.0801%" height="15" fill="rgb(244,78,51)" fg:x="236" fg:w="1"/><text x="19.1451%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.8951%" y="629" width="0.0801%" height="15" fill="rgb(217,66,21)" fg:x="236" fg:w="1"/><text x="19.1451%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.8951%" y="613" width="0.0801%" height="15" fill="rgb(247,101,42)" fg:x="236" fg:w="1"/><text x="19.1451%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.8951%" y="597" width="0.0801%" height="15" fill="rgb(227,81,39)" fg:x="236" fg:w="1"/><text x="19.1451%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.8951%" y="581" width="0.0801%" height="15" fill="rgb(220,223,44)" fg:x="236" fg:w="1"/><text x="19.1451%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.8951%" y="565" width="0.0801%" height="15" fill="rgb(205,218,2)" fg:x="236" fg:w="1"/><text x="19.1451%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.8951%" y="549" width="0.0801%" height="15" fill="rgb(212,207,28)" fg:x="236" fg:w="1"/><text x="19.1451%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.8951%" y="533" width="0.0801%" height="15" fill="rgb(224,12,41)" fg:x="236" fg:w="1"/><text x="19.1451%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.8951%" y="517" width="0.0801%" height="15" fill="rgb(216,118,12)" fg:x="236" fg:w="1"/><text x="19.1451%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.8951%" y="501" width="0.0801%" height="15" fill="rgb(252,97,46)" fg:x="236" fg:w="1"/><text x="19.1451%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.8951%" y="485" width="0.0801%" height="15" fill="rgb(244,206,19)" fg:x="236" fg:w="1"/><text x="19.1451%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="18.9752%" y="677" width="0.0801%" height="15" fill="rgb(231,84,31)" fg:x="237" fg:w="1"/><text x="19.2252%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.9752%" y="661" width="0.0801%" height="15" fill="rgb(244,133,0)" fg:x="237" fg:w="1"/><text x="19.2252%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.0552%" y="661" width="0.1601%" height="15" fill="rgb(223,15,50)" fg:x="238" fg:w="2"/><text x="19.3052%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.0552%" y="645" width="0.1601%" height="15" fill="rgb(250,118,49)" fg:x="238" fg:w="2"/><text x="19.3052%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.0552%" y="629" width="0.1601%" height="15" fill="rgb(248,25,38)" fg:x="238" fg:w="2"/><text x="19.3052%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.2154%" y="597" width="0.0801%" height="15" fill="rgb(215,70,14)" fg:x="240" fg:w="1"/><text x="19.4654%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="18.8951%" y="709" width="0.4804%" height="15" fill="rgb(215,28,15)" fg:x="236" fg:w="6"/><text x="19.1451%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="18.9752%" y="693" width="0.4003%" height="15" fill="rgb(243,6,28)" fg:x="237" fg:w="5"/><text x="19.2252%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="19.0552%" y="677" width="0.3203%" height="15" fill="rgb(222,130,1)" fg:x="238" fg:w="4"/><text x="19.3052%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.2154%" y="661" width="0.1601%" height="15" fill="rgb(236,166,44)" fg:x="240" fg:w="2"/><text x="19.4654%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.2154%" y="645" width="0.1601%" height="15" fill="rgb(221,108,14)" fg:x="240" fg:w="2"/><text x="19.4654%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="19.2154%" y="629" width="0.1601%" height="15" fill="rgb(252,3,45)" fg:x="240" fg:w="2"/><text x="19.4654%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.2154%" y="613" width="0.1601%" height="15" fill="rgb(237,68,30)" fg:x="240" fg:w="2"/><text x="19.4654%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.2954%" y="597" width="0.0801%" height="15" fill="rgb(211,79,22)" fg:x="241" fg:w="1"/><text x="19.5454%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2954%" y="581" width="0.0801%" height="15" fill="rgb(252,185,21)" fg:x="241" fg:w="1"/><text x="19.5454%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="19.3755%" y="709" width="0.0801%" height="15" fill="rgb(225,189,26)" fg:x="242" fg:w="1"/><text x="19.6255%" y="719.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="19.3755%" y="693" width="0.0801%" height="15" fill="rgb(241,30,40)" fg:x="242" fg:w="1"/><text x="19.6255%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.3755%" y="677" width="0.0801%" height="15" fill="rgb(235,215,44)" fg:x="242" fg:w="1"/><text x="19.6255%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.4556%" y="661" width="0.0801%" height="15" fill="rgb(205,8,29)" fg:x="243" fg:w="1"/><text x="19.7056%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.4556%" y="645" width="0.0801%" height="15" fill="rgb(241,137,42)" fg:x="243" fg:w="1"/><text x="19.7056%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.4556%" y="629" width="0.0801%" height="15" fill="rgb(237,155,2)" fg:x="243" fg:w="1"/><text x="19.7056%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.4556%" y="613" width="0.0801%" height="15" fill="rgb(245,29,42)" fg:x="243" fg:w="1"/><text x="19.7056%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.4556%" y="597" width="0.0801%" height="15" fill="rgb(234,101,35)" fg:x="243" fg:w="1"/><text x="19.7056%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.4556%" y="581" width="0.0801%" height="15" fill="rgb(228,64,37)" fg:x="243" fg:w="1"/><text x="19.7056%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.4556%" y="565" width="0.0801%" height="15" fill="rgb(217,214,36)" fg:x="243" fg:w="1"/><text x="19.7056%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.4556%" y="549" width="0.0801%" height="15" fill="rgb(243,70,3)" fg:x="243" fg:w="1"/><text x="19.7056%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.4556%" y="533" width="0.0801%" height="15" fill="rgb(253,158,52)" fg:x="243" fg:w="1"/><text x="19.7056%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.4556%" y="517" width="0.0801%" height="15" fill="rgb(234,111,54)" fg:x="243" fg:w="1"/><text x="19.7056%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.4556%" y="501" width="0.0801%" height="15" fill="rgb(217,70,32)" fg:x="243" fg:w="1"/><text x="19.7056%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.4556%" y="485" width="0.0801%" height="15" fill="rgb(234,18,33)" fg:x="243" fg:w="1"/><text x="19.7056%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4556%" y="469" width="0.0801%" height="15" fill="rgb(234,12,49)" fg:x="243" fg:w="1"/><text x="19.7056%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="19.5356%" y="661" width="0.0801%" height="15" fill="rgb(236,10,21)" fg:x="244" fg:w="1"/><text x="19.7856%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.5356%" y="645" width="0.0801%" height="15" fill="rgb(248,182,45)" fg:x="244" fg:w="1"/><text x="19.7856%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.6157%" y="597" width="0.0801%" height="15" fill="rgb(217,95,36)" fg:x="245" fg:w="1"/><text x="19.8657%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.6157%" y="581" width="0.0801%" height="15" fill="rgb(212,110,31)" fg:x="245" fg:w="1"/><text x="19.8657%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.6157%" y="565" width="0.0801%" height="15" fill="rgb(206,32,53)" fg:x="245" fg:w="1"/><text x="19.8657%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="19.6157%" y="661" width="0.1601%" height="15" fill="rgb(246,141,37)" fg:x="245" fg:w="2"/><text x="19.8657%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="19.6157%" y="645" width="0.1601%" height="15" fill="rgb(219,16,7)" fg:x="245" fg:w="2"/><text x="19.8657%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="19.6157%" y="629" width="0.1601%" height="15" fill="rgb(230,205,45)" fg:x="245" fg:w="2"/><text x="19.8657%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.6157%" y="613" width="0.1601%" height="15" fill="rgb(231,43,49)" fg:x="245" fg:w="2"/><text x="19.8657%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.6958%" y="597" width="0.0801%" height="15" fill="rgb(212,106,34)" fg:x="246" fg:w="1"/><text x="19.9458%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6958%" y="581" width="0.0801%" height="15" fill="rgb(206,83,17)" fg:x="246" fg:w="1"/><text x="19.9458%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.6958%" y="565" width="0.0801%" height="15" fill="rgb(244,154,49)" fg:x="246" fg:w="1"/><text x="19.9458%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6958%" y="549" width="0.0801%" height="15" fill="rgb(244,149,49)" fg:x="246" fg:w="1"/><text x="19.9458%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.6958%" y="533" width="0.0801%" height="15" fill="rgb(227,134,18)" fg:x="246" fg:w="1"/><text x="19.9458%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6958%" y="517" width="0.0801%" height="15" fill="rgb(237,116,36)" fg:x="246" fg:w="1"/><text x="19.9458%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.7758%" y="421" width="0.0801%" height="15" fill="rgb(205,129,40)" fg:x="247" fg:w="1"/><text x="20.0258%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.7758%" y="405" width="0.0801%" height="15" fill="rgb(236,178,4)" fg:x="247" fg:w="1"/><text x="20.0258%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="19.7758%" y="389" width="0.0801%" height="15" fill="rgb(251,76,53)" fg:x="247" fg:w="1"/><text x="20.0258%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="19.7758%" y="373" width="0.0801%" height="15" fill="rgb(242,92,40)" fg:x="247" fg:w="1"/><text x="20.0258%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="19.7758%" y="357" width="0.0801%" height="15" fill="rgb(209,45,30)" fg:x="247" fg:w="1"/><text x="20.0258%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="19.7758%" y="341" width="0.0801%" height="15" fill="rgb(218,157,36)" fg:x="247" fg:w="1"/><text x="20.0258%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="19.7758%" y="325" width="0.0801%" height="15" fill="rgb(222,186,16)" fg:x="247" fg:w="1"/><text x="20.0258%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="19.7758%" y="309" width="0.0801%" height="15" fill="rgb(254,72,35)" fg:x="247" fg:w="1"/><text x="20.0258%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.7758%" y="293" width="0.0801%" height="15" fill="rgb(224,25,35)" fg:x="247" fg:w="1"/><text x="20.0258%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="19.7758%" y="277" width="0.0801%" height="15" fill="rgb(206,135,52)" fg:x="247" fg:w="1"/><text x="20.0258%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.7758%" y="261" width="0.0801%" height="15" fill="rgb(229,174,47)" fg:x="247" fg:w="1"/><text x="20.0258%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.7758%" y="245" width="0.0801%" height="15" fill="rgb(242,184,21)" fg:x="247" fg:w="1"/><text x="20.0258%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="19.7758%" y="629" width="0.2402%" height="15" fill="rgb(213,22,45)" fg:x="247" fg:w="3"/><text x="20.0258%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="19.7758%" y="613" width="0.2402%" height="15" fill="rgb(237,81,54)" fg:x="247" fg:w="3"/><text x="20.0258%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="19.7758%" y="597" width="0.2402%" height="15" fill="rgb(248,177,18)" fg:x="247" fg:w="3"/><text x="20.0258%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="19.7758%" y="581" width="0.2402%" height="15" fill="rgb(254,31,16)" fg:x="247" fg:w="3"/><text x="20.0258%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="19.7758%" y="565" width="0.2402%" height="15" fill="rgb(235,20,31)" fg:x="247" fg:w="3"/><text x="20.0258%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="19.7758%" y="549" width="0.2402%" height="15" fill="rgb(240,56,43)" fg:x="247" fg:w="3"/><text x="20.0258%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="19.7758%" y="533" width="0.2402%" height="15" fill="rgb(237,197,51)" fg:x="247" fg:w="3"/><text x="20.0258%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="19.7758%" y="517" width="0.2402%" height="15" fill="rgb(241,162,44)" fg:x="247" fg:w="3"/><text x="20.0258%" y="527.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="19.7758%" y="501" width="0.2402%" height="15" fill="rgb(224,23,20)" fg:x="247" fg:w="3"/><text x="20.0258%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="19.7758%" y="485" width="0.2402%" height="15" fill="rgb(250,109,34)" fg:x="247" fg:w="3"/><text x="20.0258%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="19.7758%" y="469" width="0.2402%" height="15" fill="rgb(214,175,50)" fg:x="247" fg:w="3"/><text x="20.0258%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="19.7758%" y="453" width="0.2402%" height="15" fill="rgb(213,182,5)" fg:x="247" fg:w="3"/><text x="20.0258%" y="463.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="19.7758%" y="437" width="0.2402%" height="15" fill="rgb(209,199,19)" fg:x="247" fg:w="3"/><text x="20.0258%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="19.8559%" y="421" width="0.1601%" height="15" fill="rgb(236,224,42)" fg:x="248" fg:w="2"/><text x="20.1059%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="19.8559%" y="405" width="0.1601%" height="15" fill="rgb(246,226,29)" fg:x="248" fg:w="2"/><text x="20.1059%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="19.8559%" y="389" width="0.1601%" height="15" fill="rgb(227,223,11)" fg:x="248" fg:w="2"/><text x="20.1059%" y="399.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="19.8559%" y="373" width="0.1601%" height="15" fill="rgb(219,7,51)" fg:x="248" fg:w="2"/><text x="20.1059%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="19.8559%" y="357" width="0.1601%" height="15" fill="rgb(245,167,10)" fg:x="248" fg:w="2"/><text x="20.1059%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="19.8559%" y="341" width="0.1601%" height="15" fill="rgb(237,224,16)" fg:x="248" fg:w="2"/><text x="20.1059%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="19.8559%" y="325" width="0.1601%" height="15" fill="rgb(226,132,13)" fg:x="248" fg:w="2"/><text x="20.1059%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="19.8559%" y="309" width="0.1601%" height="15" fill="rgb(214,140,3)" fg:x="248" fg:w="2"/><text x="20.1059%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="19.8559%" y="293" width="0.1601%" height="15" fill="rgb(221,177,4)" fg:x="248" fg:w="2"/><text x="20.1059%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.9359%" y="277" width="0.0801%" height="15" fill="rgb(238,139,3)" fg:x="249" fg:w="1"/><text x="20.1859%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="19.9359%" y="261" width="0.0801%" height="15" fill="rgb(216,17,39)" fg:x="249" fg:w="1"/><text x="20.1859%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.9359%" y="245" width="0.0801%" height="15" fill="rgb(238,120,9)" fg:x="249" fg:w="1"/><text x="20.1859%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="19.9359%" y="229" width="0.0801%" height="15" fill="rgb(244,92,53)" fg:x="249" fg:w="1"/><text x="20.1859%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="19.9359%" y="213" width="0.0801%" height="15" fill="rgb(224,148,33)" fg:x="249" fg:w="1"/><text x="20.1859%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="19.9359%" y="197" width="0.0801%" height="15" fill="rgb(243,6,36)" fg:x="249" fg:w="1"/><text x="20.1859%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.9359%" y="181" width="0.0801%" height="15" fill="rgb(230,102,11)" fg:x="249" fg:w="1"/><text x="20.1859%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="20.0160%" y="629" width="0.0801%" height="15" fill="rgb(234,148,36)" fg:x="250" fg:w="1"/><text x="20.2660%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.0160%" y="613" width="0.0801%" height="15" fill="rgb(251,153,25)" fg:x="250" fg:w="1"/><text x="20.2660%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.0160%" y="597" width="0.0801%" height="15" fill="rgb(215,129,8)" fg:x="250" fg:w="1"/><text x="20.2660%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.0160%" y="581" width="0.0801%" height="15" fill="rgb(224,128,35)" fg:x="250" fg:w="1"/><text x="20.2660%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.0160%" y="565" width="0.0801%" height="15" fill="rgb(237,56,52)" fg:x="250" fg:w="1"/><text x="20.2660%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0160%" y="549" width="0.0801%" height="15" fill="rgb(234,213,19)" fg:x="250" fg:w="1"/><text x="20.2660%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="20.0961%" y="613" width="0.0801%" height="15" fill="rgb(252,82,23)" fg:x="251" fg:w="1"/><text x="20.3461%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0961%" y="597" width="0.0801%" height="15" fill="rgb(254,201,21)" fg:x="251" fg:w="1"/><text x="20.3461%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0961%" y="581" width="0.0801%" height="15" fill="rgb(250,186,11)" fg:x="251" fg:w="1"/><text x="20.3461%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0961%" y="565" width="0.0801%" height="15" fill="rgb(211,174,5)" fg:x="251" fg:w="1"/><text x="20.3461%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.0961%" y="549" width="0.0801%" height="15" fill="rgb(214,121,10)" fg:x="251" fg:w="1"/><text x="20.3461%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.0961%" y="533" width="0.0801%" height="15" fill="rgb(241,66,2)" fg:x="251" fg:w="1"/><text x="20.3461%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.0961%" y="517" width="0.0801%" height="15" fill="rgb(220,167,19)" fg:x="251" fg:w="1"/><text x="20.3461%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.0961%" y="501" width="0.0801%" height="15" fill="rgb(231,54,50)" fg:x="251" fg:w="1"/><text x="20.3461%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.0961%" y="485" width="0.0801%" height="15" fill="rgb(239,217,53)" fg:x="251" fg:w="1"/><text x="20.3461%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.0961%" y="469" width="0.0801%" height="15" fill="rgb(248,8,0)" fg:x="251" fg:w="1"/><text x="20.3461%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.0961%" y="453" width="0.0801%" height="15" fill="rgb(229,118,37)" fg:x="251" fg:w="1"/><text x="20.3461%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.0961%" y="437" width="0.0801%" height="15" fill="rgb(253,223,43)" fg:x="251" fg:w="1"/><text x="20.3461%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.0961%" y="421" width="0.0801%" height="15" fill="rgb(211,77,36)" fg:x="251" fg:w="1"/><text x="20.3461%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.0961%" y="405" width="0.0801%" height="15" fill="rgb(219,3,53)" fg:x="251" fg:w="1"/><text x="20.3461%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="20.0961%" y="629" width="0.1601%" height="15" fill="rgb(244,45,42)" fg:x="251" fg:w="2"/><text x="20.3461%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="20.1761%" y="613" width="0.0801%" height="15" fill="rgb(225,95,27)" fg:x="252" fg:w="1"/><text x="20.4261%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.2562%" y="549" width="0.0801%" height="15" fill="rgb(207,74,8)" fg:x="253" fg:w="1"/><text x="20.5062%" y="559.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="20.2562%" y="581" width="0.1601%" height="15" fill="rgb(243,63,36)" fg:x="253" fg:w="2"/><text x="20.5062%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="20.2562%" y="565" width="0.1601%" height="15" fill="rgb(211,180,12)" fg:x="253" fg:w="2"/><text x="20.5062%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="20.3363%" y="549" width="0.0801%" height="15" fill="rgb(254,166,49)" fg:x="254" fg:w="1"/><text x="20.5863%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.3363%" y="533" width="0.0801%" height="15" fill="rgb(205,19,0)" fg:x="254" fg:w="1"/><text x="20.5863%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.3363%" y="517" width="0.0801%" height="15" fill="rgb(224,172,32)" fg:x="254" fg:w="1"/><text x="20.5863%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="20.3363%" y="501" width="0.0801%" height="15" fill="rgb(254,136,30)" fg:x="254" fg:w="1"/><text x="20.5863%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.4163%" y="565" width="0.0801%" height="15" fill="rgb(246,19,35)" fg:x="255" fg:w="1"/><text x="20.6663%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.4163%" y="549" width="0.0801%" height="15" fill="rgb(219,24,36)" fg:x="255" fg:w="1"/><text x="20.6663%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.4163%" y="533" width="0.0801%" height="15" fill="rgb(251,55,1)" fg:x="255" fg:w="1"/><text x="20.6663%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.4163%" y="517" width="0.0801%" height="15" fill="rgb(218,117,39)" fg:x="255" fg:w="1"/><text x="20.6663%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.4163%" y="501" width="0.0801%" height="15" fill="rgb(248,169,11)" fg:x="255" fg:w="1"/><text x="20.6663%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.4163%" y="485" width="0.0801%" height="15" fill="rgb(244,40,44)" fg:x="255" fg:w="1"/><text x="20.6663%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.4163%" y="469" width="0.0801%" height="15" fill="rgb(234,62,37)" fg:x="255" fg:w="1"/><text x="20.6663%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.4163%" y="453" width="0.0801%" height="15" fill="rgb(207,117,42)" fg:x="255" fg:w="1"/><text x="20.6663%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.4163%" y="437" width="0.0801%" height="15" fill="rgb(213,43,2)" fg:x="255" fg:w="1"/><text x="20.6663%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.4163%" y="421" width="0.0801%" height="15" fill="rgb(244,202,51)" fg:x="255" fg:w="1"/><text x="20.6663%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.4163%" y="405" width="0.0801%" height="15" fill="rgb(253,174,46)" fg:x="255" fg:w="1"/><text x="20.6663%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.4163%" y="389" width="0.0801%" height="15" fill="rgb(251,23,1)" fg:x="255" fg:w="1"/><text x="20.6663%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.4163%" y="373" width="0.0801%" height="15" fill="rgb(253,26,1)" fg:x="255" fg:w="1"/><text x="20.6663%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.4163%" y="357" width="0.0801%" height="15" fill="rgb(216,89,31)" fg:x="255" fg:w="1"/><text x="20.6663%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.4163%" y="341" width="0.0801%" height="15" fill="rgb(209,109,5)" fg:x="255" fg:w="1"/><text x="20.6663%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="19.7758%" y="645" width="0.8006%" height="15" fill="rgb(229,63,13)" fg:x="247" fg:w="10"/><text x="20.0258%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="20.2562%" y="629" width="0.3203%" height="15" fill="rgb(238,137,54)" fg:x="253" fg:w="4"/><text x="20.5062%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="20.2562%" y="613" width="0.3203%" height="15" fill="rgb(228,1,9)" fg:x="253" fg:w="4"/><text x="20.5062%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="20.2562%" y="597" width="0.3203%" height="15" fill="rgb(249,120,48)" fg:x="253" fg:w="4"/><text x="20.5062%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.4163%" y="581" width="0.1601%" height="15" fill="rgb(209,72,36)" fg:x="255" fg:w="2"/><text x="20.6663%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.4964%" y="565" width="0.0801%" height="15" fill="rgb(247,98,49)" fg:x="256" fg:w="1"/><text x="20.7464%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.4964%" y="549" width="0.0801%" height="15" fill="rgb(233,75,36)" fg:x="256" fg:w="1"/><text x="20.7464%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="20.5765%" y="645" width="0.0801%" height="15" fill="rgb(225,14,24)" fg:x="257" fg:w="1"/><text x="20.8265%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="20.5765%" y="629" width="0.0801%" height="15" fill="rgb(237,193,20)" fg:x="257" fg:w="1"/><text x="20.8265%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.5765%" y="613" width="0.0801%" height="15" fill="rgb(239,122,19)" fg:x="257" fg:w="1"/><text x="20.8265%" y="623.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="20.6565%" y="581" width="0.0801%" height="15" fill="rgb(231,220,10)" fg:x="258" fg:w="1"/><text x="20.9065%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.6565%" y="565" width="0.0801%" height="15" fill="rgb(220,66,15)" fg:x="258" fg:w="1"/><text x="20.9065%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="20.6565%" y="549" width="0.0801%" height="15" fill="rgb(215,171,52)" fg:x="258" fg:w="1"/><text x="20.9065%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.7366%" y="565" width="0.1601%" height="15" fill="rgb(241,169,50)" fg:x="259" fg:w="2"/><text x="20.9866%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.7366%" y="549" width="0.1601%" height="15" fill="rgb(236,189,0)" fg:x="259" fg:w="2"/><text x="20.9866%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="20.6565%" y="597" width="0.3203%" height="15" fill="rgb(217,147,20)" fg:x="258" fg:w="4"/><text x="20.9065%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="20.7366%" y="581" width="0.2402%" height="15" fill="rgb(206,188,39)" fg:x="259" fg:w="3"/><text x="20.9866%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.8967%" y="565" width="0.0801%" height="15" fill="rgb(227,118,25)" fg:x="261" fg:w="1"/><text x="21.1467%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="20.9768%" y="581" width="0.0801%" height="15" fill="rgb(248,171,40)" fg:x="262" fg:w="1"/><text x="21.2268%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.9768%" y="565" width="0.0801%" height="15" fill="rgb(251,90,54)" fg:x="262" fg:w="1"/><text x="21.2268%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0568%" y="565" width="0.0801%" height="15" fill="rgb(234,11,46)" fg:x="263" fg:w="1"/><text x="21.3068%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0568%" y="549" width="0.0801%" height="15" fill="rgb(229,134,13)" fg:x="263" fg:w="1"/><text x="21.3068%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.0568%" y="533" width="0.0801%" height="15" fill="rgb(223,129,3)" fg:x="263" fg:w="1"/><text x="21.3068%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.0568%" y="517" width="0.0801%" height="15" fill="rgb(221,124,13)" fg:x="263" fg:w="1"/><text x="21.3068%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.0568%" y="501" width="0.0801%" height="15" fill="rgb(234,3,18)" fg:x="263" fg:w="1"/><text x="21.3068%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.0568%" y="485" width="0.0801%" height="15" fill="rgb(249,199,20)" fg:x="263" fg:w="1"/><text x="21.3068%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.0568%" y="469" width="0.0801%" height="15" fill="rgb(224,134,6)" fg:x="263" fg:w="1"/><text x="21.3068%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.0568%" y="453" width="0.0801%" height="15" fill="rgb(254,83,26)" fg:x="263" fg:w="1"/><text x="21.3068%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.0568%" y="437" width="0.0801%" height="15" fill="rgb(217,88,9)" fg:x="263" fg:w="1"/><text x="21.3068%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.0568%" y="421" width="0.0801%" height="15" fill="rgb(225,73,2)" fg:x="263" fg:w="1"/><text x="21.3068%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.0568%" y="405" width="0.0801%" height="15" fill="rgb(226,44,39)" fg:x="263" fg:w="1"/><text x="21.3068%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.0568%" y="389" width="0.0801%" height="15" fill="rgb(228,53,17)" fg:x="263" fg:w="1"/><text x="21.3068%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.0568%" y="373" width="0.0801%" height="15" fill="rgb(212,27,27)" fg:x="263" fg:w="1"/><text x="21.3068%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.0568%" y="357" width="0.0801%" height="15" fill="rgb(241,50,6)" fg:x="263" fg:w="1"/><text x="21.3068%" y="367.50"></text></g><g><title>plugins_core::build::Build::leads_to (18 samples, 1.44%)</title><rect x="19.7758%" y="661" width="1.4412%" height="15" fill="rgb(225,28,51)" fg:x="247" fg:w="18"/><text x="20.0258%" y="671.50"></text></g><g><title>plugins_core::tools::leads_to (7 samples, 0.56%)</title><rect x="20.6565%" y="645" width="0.5604%" height="15" fill="rgb(215,33,16)" fg:x="258" fg:w="7"/><text x="20.9065%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="20.6565%" y="629" width="0.5604%" height="15" fill="rgb(243,40,39)" fg:x="258" fg:w="7"/><text x="20.9065%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="20.6565%" y="613" width="0.5604%" height="15" fill="rgb(225,11,42)" fg:x="258" fg:w="7"/><text x="20.9065%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="20.9768%" y="597" width="0.2402%" height="15" fill="rgb(241,220,38)" fg:x="262" fg:w="3"/><text x="21.2268%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.0568%" y="581" width="0.1601%" height="15" fill="rgb(244,52,35)" fg:x="263" fg:w="2"/><text x="21.3068%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.1369%" y="565" width="0.0801%" height="15" fill="rgb(246,42,46)" fg:x="264" fg:w="1"/><text x="21.3869%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1369%" y="549" width="0.0801%" height="15" fill="rgb(205,184,13)" fg:x="264" fg:w="1"/><text x="21.3869%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.1369%" y="533" width="0.0801%" height="15" fill="rgb(209,48,36)" fg:x="264" fg:w="1"/><text x="21.3869%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1369%" y="517" width="0.0801%" height="15" fill="rgb(244,34,51)" fg:x="264" fg:w="1"/><text x="21.3869%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.1369%" y="501" width="0.0801%" height="15" fill="rgb(221,107,33)" fg:x="264" fg:w="1"/><text x="21.3869%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1369%" y="485" width="0.0801%" height="15" fill="rgb(224,203,12)" fg:x="264" fg:w="1"/><text x="21.3869%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="21.2170%" y="629" width="0.0801%" height="15" fill="rgb(230,215,18)" fg:x="265" fg:w="1"/><text x="21.4670%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.2170%" y="613" width="0.0801%" height="15" fill="rgb(206,185,35)" fg:x="265" fg:w="1"/><text x="21.4670%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.2170%" y="597" width="0.0801%" height="15" fill="rgb(228,140,34)" fg:x="265" fg:w="1"/><text x="21.4670%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.2970%" y="613" width="0.0801%" height="15" fill="rgb(208,93,13)" fg:x="266" fg:w="1"/><text x="21.5470%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.3771%" y="597" width="0.0801%" height="15" fill="rgb(221,193,39)" fg:x="267" fg:w="1"/><text x="21.6271%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (27 samples, 2.16%)</title><rect x="19.4556%" y="709" width="2.1617%" height="15" fill="rgb(241,132,34)" fg:x="243" fg:w="27"/><text x="19.7056%" y="719.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 2.16%)</title><rect x="19.4556%" y="693" width="2.1617%" height="15" fill="rgb(221,141,10)" fg:x="243" fg:w="27"/><text x="19.7056%" y="703.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (27 samples, 2.16%)</title><rect x="19.4556%" y="677" width="2.1617%" height="15" fill="rgb(226,90,31)" fg:x="243" fg:w="27"/><text x="19.7056%" y="687.50">p..</text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="21.2170%" y="661" width="0.4003%" height="15" fill="rgb(243,75,5)" fg:x="265" fg:w="5"/><text x="21.4670%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.40%)</title><rect x="21.2170%" y="645" width="0.4003%" height="15" fill="rgb(227,156,21)" fg:x="265" fg:w="5"/><text x="21.4670%" y="655.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="21.2970%" y="629" width="0.3203%" height="15" fill="rgb(250,195,8)" fg:x="266" fg:w="4"/><text x="21.5470%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="21.3771%" y="613" width="0.2402%" height="15" fill="rgb(220,134,5)" fg:x="267" fg:w="3"/><text x="21.6271%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="21.4572%" y="597" width="0.1601%" height="15" fill="rgb(246,106,34)" fg:x="268" fg:w="2"/><text x="21.7072%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.5372%" y="581" width="0.0801%" height="15" fill="rgb(205,1,4)" fg:x="269" fg:w="1"/><text x="21.7872%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="21.5372%" y="565" width="0.0801%" height="15" fill="rgb(224,151,29)" fg:x="269" fg:w="1"/><text x="21.7872%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="21.5372%" y="549" width="0.0801%" height="15" fill="rgb(251,196,0)" fg:x="269" fg:w="1"/><text x="21.7872%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.5372%" y="533" width="0.0801%" height="15" fill="rgb(212,127,0)" fg:x="269" fg:w="1"/><text x="21.7872%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.6173%" y="693" width="0.0801%" height="15" fill="rgb(236,71,53)" fg:x="270" fg:w="1"/><text x="21.8673%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (2 samples, 0.16%)</title><rect x="21.6173%" y="709" width="0.1601%" height="15" fill="rgb(227,99,0)" fg:x="270" fg:w="2"/><text x="21.8673%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="21.6974%" y="693" width="0.0801%" height="15" fill="rgb(239,89,21)" fg:x="271" fg:w="1"/><text x="21.9474%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.6974%" y="677" width="0.0801%" height="15" fill="rgb(243,122,19)" fg:x="271" fg:w="1"/><text x="21.9474%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.7774%" y="693" width="0.0801%" height="15" fill="rgb(229,192,45)" fg:x="272" fg:w="1"/><text x="22.0274%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="21.7774%" y="709" width="0.1601%" height="15" fill="rgb(235,165,35)" fg:x="272" fg:w="2"/><text x="22.0274%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="21.8575%" y="693" width="0.0801%" height="15" fill="rgb(253,202,0)" fg:x="273" fg:w="1"/><text x="22.1075%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.8575%" y="677" width="0.0801%" height="15" fill="rgb(235,51,20)" fg:x="273" fg:w="1"/><text x="22.1075%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.0176%" y="677" width="0.0801%" height="15" fill="rgb(218,95,46)" fg:x="275" fg:w="1"/><text x="22.2676%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.0176%" y="661" width="0.0801%" height="15" fill="rgb(212,81,10)" fg:x="275" fg:w="1"/><text x="22.2676%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.0176%" y="645" width="0.0801%" height="15" fill="rgb(240,59,0)" fg:x="275" fg:w="1"/><text x="22.2676%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.0176%" y="629" width="0.0801%" height="15" fill="rgb(212,191,42)" fg:x="275" fg:w="1"/><text x="22.2676%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.0176%" y="613" width="0.0801%" height="15" fill="rgb(233,140,3)" fg:x="275" fg:w="1"/><text x="22.2676%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="22.0176%" y="597" width="0.0801%" height="15" fill="rgb(215,69,23)" fg:x="275" fg:w="1"/><text x="22.2676%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="22.0176%" y="581" width="0.0801%" height="15" fill="rgb(240,202,20)" fg:x="275" fg:w="1"/><text x="22.2676%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.0977%" y="677" width="0.0801%" height="15" fill="rgb(209,146,50)" fg:x="276" fg:w="1"/><text x="22.3477%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="22.0176%" y="693" width="0.3203%" height="15" fill="rgb(253,102,54)" fg:x="275" fg:w="4"/><text x="22.2676%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.1777%" y="677" width="0.1601%" height="15" fill="rgb(250,173,47)" fg:x="277" fg:w="2"/><text x="22.4277%" y="687.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="22.3379%" y="677" width="0.0801%" height="15" fill="rgb(232,142,7)" fg:x="279" fg:w="1"/><text x="22.5879%" y="687.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="22.3379%" y="661" width="0.0801%" height="15" fill="rgb(230,157,47)" fg:x="279" fg:w="1"/><text x="22.5879%" y="671.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="22.3379%" y="645" width="0.0801%" height="15" fill="rgb(214,177,35)" fg:x="279" fg:w="1"/><text x="22.5879%" y="655.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="22.3379%" y="629" width="0.0801%" height="15" fill="rgb(234,119,46)" fg:x="279" fg:w="1"/><text x="22.5879%" y="639.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="22.3379%" y="613" width="0.0801%" height="15" fill="rgb(241,180,50)" fg:x="279" fg:w="1"/><text x="22.5879%" y="623.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="22.3379%" y="597" width="0.0801%" height="15" fill="rgb(221,54,25)" fg:x="279" fg:w="1"/><text x="22.5879%" y="607.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="22.3379%" y="581" width="0.0801%" height="15" fill="rgb(209,157,44)" fg:x="279" fg:w="1"/><text x="22.5879%" y="591.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="22.3379%" y="565" width="0.0801%" height="15" fill="rgb(246,115,41)" fg:x="279" fg:w="1"/><text x="22.5879%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="22.4179%" y="645" width="0.0801%" height="15" fill="rgb(229,86,1)" fg:x="280" fg:w="1"/><text x="22.6679%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="22.4179%" y="629" width="0.0801%" height="15" fill="rgb(240,108,53)" fg:x="280" fg:w="1"/><text x="22.6679%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.4179%" y="613" width="0.0801%" height="15" fill="rgb(227,134,2)" fg:x="280" fg:w="1"/><text x="22.6679%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5781%" y="613" width="0.0801%" height="15" fill="rgb(213,129,25)" fg:x="282" fg:w="1"/><text x="22.8281%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5781%" y="597" width="0.0801%" height="15" fill="rgb(226,35,21)" fg:x="282" fg:w="1"/><text x="22.8281%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.5781%" y="581" width="0.0801%" height="15" fill="rgb(208,129,26)" fg:x="282" fg:w="1"/><text x="22.8281%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.5781%" y="565" width="0.0801%" height="15" fill="rgb(224,83,6)" fg:x="282" fg:w="1"/><text x="22.8281%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.5781%" y="549" width="0.0801%" height="15" fill="rgb(227,52,39)" fg:x="282" fg:w="1"/><text x="22.8281%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.5781%" y="533" width="0.0801%" height="15" fill="rgb(241,30,17)" fg:x="282" fg:w="1"/><text x="22.8281%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.5781%" y="517" width="0.0801%" height="15" fill="rgb(246,186,42)" fg:x="282" fg:w="1"/><text x="22.8281%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.5781%" y="501" width="0.0801%" height="15" fill="rgb(221,169,15)" fg:x="282" fg:w="1"/><text x="22.8281%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.5781%" y="485" width="0.0801%" height="15" fill="rgb(235,108,21)" fg:x="282" fg:w="1"/><text x="22.8281%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.5781%" y="469" width="0.0801%" height="15" fill="rgb(219,148,30)" fg:x="282" fg:w="1"/><text x="22.8281%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.5781%" y="453" width="0.0801%" height="15" fill="rgb(220,109,5)" fg:x="282" fg:w="1"/><text x="22.8281%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5781%" y="437" width="0.0801%" height="15" fill="rgb(213,203,48)" fg:x="282" fg:w="1"/><text x="22.8281%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="22.6581%" y="613" width="0.0801%" height="15" fill="rgb(244,71,33)" fg:x="283" fg:w="1"/><text x="22.9081%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.6581%" y="597" width="0.0801%" height="15" fill="rgb(209,23,2)" fg:x="283" fg:w="1"/><text x="22.9081%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.6581%" y="581" width="0.0801%" height="15" fill="rgb(219,97,7)" fg:x="283" fg:w="1"/><text x="22.9081%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.6581%" y="565" width="0.0801%" height="15" fill="rgb(216,161,23)" fg:x="283" fg:w="1"/><text x="22.9081%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.6581%" y="549" width="0.0801%" height="15" fill="rgb(207,45,42)" fg:x="283" fg:w="1"/><text x="22.9081%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="22.8183%" y="581" width="0.4804%" height="15" fill="rgb(241,61,4)" fg:x="285" fg:w="6"/><text x="23.0683%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="23.0584%" y="565" width="0.2402%" height="15" fill="rgb(236,170,1)" fg:x="288" fg:w="3"/><text x="23.3084%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="23.1385%" y="549" width="0.1601%" height="15" fill="rgb(239,72,5)" fg:x="289" fg:w="2"/><text x="23.3885%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.2186%" y="533" width="0.0801%" height="15" fill="rgb(214,13,50)" fg:x="290" fg:w="1"/><text x="23.4686%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="23.2986%" y="549" width="0.1601%" height="15" fill="rgb(224,88,9)" fg:x="291" fg:w="2"/><text x="23.5486%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.72%)</title><rect x="22.8183%" y="597" width="0.7206%" height="15" fill="rgb(238,192,34)" fg:x="285" fg:w="9"/><text x="23.0683%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="23.2986%" y="581" width="0.2402%" height="15" fill="rgb(217,203,50)" fg:x="291" fg:w="3"/><text x="23.5486%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="23.2986%" y="565" width="0.2402%" height="15" fill="rgb(241,123,32)" fg:x="291" fg:w="3"/><text x="23.5486%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="23.4588%" y="549" width="0.0801%" height="15" fill="rgb(248,151,39)" fg:x="293" fg:w="1"/><text x="23.7088%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="23.5388%" y="581" width="0.0801%" height="15" fill="rgb(208,89,6)" fg:x="294" fg:w="1"/><text x="23.7888%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="23.6189%" y="581" width="0.4003%" height="15" fill="rgb(254,43,26)" fg:x="295" fg:w="5"/><text x="23.8689%" y="591.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="23.6990%" y="565" width="0.3203%" height="15" fill="rgb(216,158,13)" fg:x="296" fg:w="4"/><text x="23.9490%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="23.8591%" y="549" width="0.1601%" height="15" fill="rgb(212,47,37)" fg:x="298" fg:w="2"/><text x="24.1091%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.9392%" y="533" width="0.0801%" height="15" fill="rgb(254,16,10)" fg:x="299" fg:w="1"/><text x="24.1892%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="24.0993%" y="533" width="0.2402%" height="15" fill="rgb(223,228,16)" fg:x="301" fg:w="3"/><text x="24.3493%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="24.1793%" y="517" width="0.1601%" height="15" fill="rgb(249,108,50)" fg:x="302" fg:w="2"/><text x="24.4293%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.2594%" y="501" width="0.0801%" height="15" fill="rgb(208,220,5)" fg:x="303" fg:w="1"/><text x="24.5094%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.2594%" y="485" width="0.0801%" height="15" fill="rgb(217,89,48)" fg:x="303" fg:w="1"/><text x="24.5094%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.2594%" y="469" width="0.0801%" height="15" fill="rgb(212,113,41)" fg:x="303" fg:w="1"/><text x="24.5094%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.2594%" y="453" width="0.0801%" height="15" fill="rgb(231,127,5)" fg:x="303" fg:w="1"/><text x="24.5094%" y="463.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="24.2594%" y="437" width="0.0801%" height="15" fill="rgb(217,141,17)" fg:x="303" fg:w="1"/><text x="24.5094%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="24.3395%" y="533" width="0.0801%" height="15" fill="rgb(245,125,54)" fg:x="304" fg:w="1"/><text x="24.5895%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="24.3395%" y="517" width="0.0801%" height="15" fill="rgb(248,125,3)" fg:x="304" fg:w="1"/><text x="24.5895%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.3395%" y="501" width="0.0801%" height="15" fill="rgb(236,119,51)" fg:x="304" fg:w="1"/><text x="24.5895%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="24.0993%" y="565" width="0.4804%" height="15" fill="rgb(239,99,8)" fg:x="301" fg:w="6"/><text x="24.3493%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="24.0993%" y="549" width="0.4804%" height="15" fill="rgb(224,228,4)" fg:x="301" fg:w="6"/><text x="24.3493%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="24.4195%" y="533" width="0.1601%" height="15" fill="rgb(220,131,45)" fg:x="305" fg:w="2"/><text x="24.6695%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="24.4195%" y="517" width="0.1601%" height="15" fill="rgb(215,62,5)" fg:x="305" fg:w="2"/><text x="24.6695%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.4996%" y="501" width="0.0801%" height="15" fill="rgb(253,12,24)" fg:x="306" fg:w="1"/><text x="24.7496%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="24.5797%" y="565" width="0.3203%" height="15" fill="rgb(248,120,50)" fg:x="307" fg:w="4"/><text x="24.8297%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="24.6597%" y="549" width="0.2402%" height="15" fill="rgb(245,194,10)" fg:x="308" fg:w="3"/><text x="24.9097%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="24.6597%" y="533" width="0.2402%" height="15" fill="rgb(241,149,38)" fg:x="308" fg:w="3"/><text x="24.9097%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="24.6597%" y="517" width="0.2402%" height="15" fill="rgb(219,215,7)" fg:x="308" fg:w="3"/><text x="24.9097%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="24.7398%" y="501" width="0.1601%" height="15" fill="rgb(208,120,31)" fg:x="309" fg:w="2"/><text x="24.9898%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="24.7398%" y="485" width="0.1601%" height="15" fill="rgb(244,30,8)" fg:x="309" fg:w="2"/><text x="24.9898%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.8199%" y="469" width="0.0801%" height="15" fill="rgb(238,35,44)" fg:x="310" fg:w="1"/><text x="25.0699%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.0600%" y="549" width="0.0801%" height="15" fill="rgb(243,218,37)" fg:x="313" fg:w="1"/><text x="25.3100%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="25.1401%" y="549" width="0.3203%" height="15" fill="rgb(218,169,10)" fg:x="314" fg:w="4"/><text x="25.3901%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="25.3002%" y="533" width="0.1601%" height="15" fill="rgb(221,144,10)" fg:x="316" fg:w="2"/><text x="25.5502%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.3803%" y="517" width="0.0801%" height="15" fill="rgb(226,41,38)" fg:x="317" fg:w="1"/><text x="25.6303%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="25.5404%" y="533" width="0.2402%" height="15" fill="rgb(228,3,1)" fg:x="319" fg:w="3"/><text x="25.7904%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="25.5404%" y="517" width="0.2402%" height="15" fill="rgb(209,129,12)" fg:x="319" fg:w="3"/><text x="25.7904%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.7006%" y="501" width="0.0801%" height="15" fill="rgb(213,136,33)" fg:x="321" fg:w="1"/><text x="25.9506%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.7006%" y="485" width="0.0801%" height="15" fill="rgb(209,181,29)" fg:x="321" fg:w="1"/><text x="25.9506%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="25.7806%" y="533" width="0.1601%" height="15" fill="rgb(234,173,18)" fg:x="322" fg:w="2"/><text x="26.0306%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="25.7806%" y="517" width="0.1601%" height="15" fill="rgb(227,73,47)" fg:x="322" fg:w="2"/><text x="26.0306%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.8607%" y="501" width="0.0801%" height="15" fill="rgb(234,9,34)" fg:x="323" fg:w="1"/><text x="26.1107%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.8607%" y="485" width="0.0801%" height="15" fill="rgb(235,172,15)" fg:x="323" fg:w="1"/><text x="26.1107%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.00%)</title><rect x="24.0192%" y="581" width="2.0016%" height="15" fill="rgb(245,61,2)" fg:x="300" fg:w="25"/><text x="24.2692%" y="591.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="24.8999%" y="565" width="1.1209%" height="15" fill="rgb(238,39,47)" fg:x="311" fg:w="14"/><text x="25.1499%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="25.4604%" y="549" width="0.5604%" height="15" fill="rgb(234,37,24)" fg:x="318" fg:w="7"/><text x="25.7104%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.9408%" y="533" width="0.0801%" height="15" fill="rgb(248,223,24)" fg:x="324" fg:w="1"/><text x="26.1908%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.64%)</title><rect x="23.5388%" y="597" width="2.6421%" height="15" fill="rgb(223,12,15)" fg:x="294" fg:w="33"/><text x="23.7888%" y="607.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.0208%" y="581" width="0.1601%" height="15" fill="rgb(249,6,3)" fg:x="325" fg:w="2"/><text x="26.2708%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.1009%" y="565" width="0.0801%" height="15" fill="rgb(237,105,33)" fg:x="326" fg:w="1"/><text x="26.3509%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.1009%" y="549" width="0.0801%" height="15" fill="rgb(252,208,35)" fg:x="326" fg:w="1"/><text x="26.3509%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.1009%" y="533" width="0.0801%" height="15" fill="rgb(215,181,35)" fg:x="326" fg:w="1"/><text x="26.3509%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.1009%" y="517" width="0.0801%" height="15" fill="rgb(246,212,3)" fg:x="326" fg:w="1"/><text x="26.3509%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.1009%" y="501" width="0.0801%" height="15" fill="rgb(247,156,24)" fg:x="326" fg:w="1"/><text x="26.3509%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (44 samples, 3.52%)</title><rect x="22.7382%" y="613" width="3.5228%" height="15" fill="rgb(248,9,31)" fg:x="284" fg:w="44"/><text x="22.9882%" y="623.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.1809%" y="597" width="0.0801%" height="15" fill="rgb(234,26,45)" fg:x="327" fg:w="1"/><text x="26.4309%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.1809%" y="581" width="0.0801%" height="15" fill="rgb(249,11,32)" fg:x="327" fg:w="1"/><text x="26.4309%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.1809%" y="565" width="0.0801%" height="15" fill="rgb(249,162,33)" fg:x="327" fg:w="1"/><text x="26.4309%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.1809%" y="549" width="0.0801%" height="15" fill="rgb(232,4,32)" fg:x="327" fg:w="1"/><text x="26.4309%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.1809%" y="533" width="0.0801%" height="15" fill="rgb(212,5,45)" fg:x="327" fg:w="1"/><text x="26.4309%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1809%" y="517" width="0.0801%" height="15" fill="rgb(227,95,13)" fg:x="327" fg:w="1"/><text x="26.4309%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2610%" y="581" width="0.0801%" height="15" fill="rgb(223,205,10)" fg:x="328" fg:w="1"/><text x="26.5110%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.3411%" y="581" width="0.0801%" height="15" fill="rgb(222,178,8)" fg:x="329" fg:w="1"/><text x="26.5911%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="26.5813%" y="565" width="0.2402%" height="15" fill="rgb(216,13,22)" fg:x="332" fg:w="3"/><text x="26.8313%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.8215%" y="549" width="0.0801%" height="15" fill="rgb(240,167,12)" fg:x="335" fg:w="1"/><text x="27.0715%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="26.9816%" y="533" width="0.1601%" height="15" fill="rgb(235,68,35)" fg:x="337" fg:w="2"/><text x="27.2316%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.9816%" y="517" width="0.1601%" height="15" fill="rgb(253,40,27)" fg:x="337" fg:w="2"/><text x="27.2316%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.2218%" y="517" width="0.0801%" height="15" fill="rgb(214,19,28)" fg:x="340" fg:w="1"/><text x="27.4718%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="26.2610%" y="613" width="1.1209%" height="15" fill="rgb(210,167,45)" fg:x="328" fg:w="14"/><text x="26.5110%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.12%)</title><rect x="26.2610%" y="597" width="1.1209%" height="15" fill="rgb(232,97,40)" fg:x="328" fg:w="14"/><text x="26.5110%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="26.4211%" y="581" width="0.9608%" height="15" fill="rgb(250,35,23)" fg:x="330" fg:w="12"/><text x="26.6711%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="26.8215%" y="565" width="0.5604%" height="15" fill="rgb(248,47,53)" fg:x="335" fg:w="7"/><text x="27.0715%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="26.9015%" y="549" width="0.4804%" height="15" fill="rgb(226,58,50)" fg:x="336" fg:w="6"/><text x="27.1515%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="27.1417%" y="533" width="0.2402%" height="15" fill="rgb(217,105,26)" fg:x="339" fg:w="3"/><text x="27.3917%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.3018%" y="517" width="0.0801%" height="15" fill="rgb(208,64,1)" fg:x="341" fg:w="1"/><text x="27.5518%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.4620%" y="581" width="0.0801%" height="15" fill="rgb(214,80,1)" fg:x="343" fg:w="1"/><text x="27.7120%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="27.3819%" y="597" width="0.2402%" height="15" fill="rgb(206,175,26)" fg:x="342" fg:w="3"/><text x="27.6319%" y="607.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="27.5420%" y="581" width="0.0801%" height="15" fill="rgb(235,156,37)" fg:x="344" fg:w="1"/><text x="27.7920%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="27.5420%" y="565" width="0.0801%" height="15" fill="rgb(213,100,9)" fg:x="344" fg:w="1"/><text x="27.7920%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.5420%" y="549" width="0.0801%" height="15" fill="rgb(241,15,13)" fg:x="344" fg:w="1"/><text x="27.7920%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.5420%" y="533" width="0.0801%" height="15" fill="rgb(205,97,43)" fg:x="344" fg:w="1"/><text x="27.7920%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="27.9424%" y="565" width="0.4804%" height="15" fill="rgb(216,106,32)" fg:x="349" fg:w="6"/><text x="28.1924%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.3427%" y="549" width="0.0801%" height="15" fill="rgb(226,200,8)" fg:x="354" fg:w="1"/><text x="28.5927%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="28.4227%" y="565" width="0.0801%" height="15" fill="rgb(244,54,29)" fg:x="355" fg:w="1"/><text x="28.6727%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.4227%" y="549" width="0.0801%" height="15" fill="rgb(252,169,12)" fg:x="355" fg:w="1"/><text x="28.6727%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.4227%" y="533" width="0.0801%" height="15" fill="rgb(231,199,11)" fg:x="355" fg:w="1"/><text x="28.6727%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="28.5829%" y="533" width="0.1601%" height="15" fill="rgb(233,191,18)" fg:x="357" fg:w="2"/><text x="28.8329%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.9031%" y="517" width="0.1601%" height="15" fill="rgb(215,83,47)" fg:x="361" fg:w="2"/><text x="29.1531%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.9832%" y="501" width="0.0801%" height="15" fill="rgb(251,67,19)" fg:x="362" fg:w="1"/><text x="29.2332%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.9832%" y="485" width="0.0801%" height="15" fill="rgb(240,7,20)" fg:x="362" fg:w="1"/><text x="29.2332%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="29.0633%" y="517" width="0.2402%" height="15" fill="rgb(210,150,26)" fg:x="363" fg:w="3"/><text x="29.3133%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="29.0633%" y="501" width="0.2402%" height="15" fill="rgb(228,75,42)" fg:x="363" fg:w="3"/><text x="29.3133%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="29.0633%" y="485" width="0.2402%" height="15" fill="rgb(237,134,48)" fg:x="363" fg:w="3"/><text x="29.3133%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="29.2234%" y="469" width="0.0801%" height="15" fill="rgb(205,80,50)" fg:x="365" fg:w="1"/><text x="29.4734%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2234%" y="453" width="0.0801%" height="15" fill="rgb(217,74,48)" fg:x="365" fg:w="1"/><text x="29.4734%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="29.5436%" y="485" width="0.4003%" height="15" fill="rgb(205,82,50)" fg:x="369" fg:w="5"/><text x="29.7936%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="29.6237%" y="469" width="0.3203%" height="15" fill="rgb(228,1,33)" fg:x="370" fg:w="4"/><text x="29.8737%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="29.7838%" y="453" width="0.1601%" height="15" fill="rgb(214,50,23)" fg:x="372" fg:w="2"/><text x="30.0338%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="30.2642%" y="469" width="0.3203%" height="15" fill="rgb(210,62,9)" fg:x="378" fg:w="4"/><text x="30.5142%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="30.2642%" y="453" width="0.3203%" height="15" fill="rgb(210,104,37)" fg:x="378" fg:w="4"/><text x="30.5142%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="30.3443%" y="437" width="0.2402%" height="15" fill="rgb(232,104,43)" fg:x="379" fg:w="3"/><text x="30.5943%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="30.4243%" y="421" width="0.1601%" height="15" fill="rgb(244,52,6)" fg:x="380" fg:w="2"/><text x="30.6743%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 2.00%)</title><rect x="28.7430%" y="533" width="2.0016%" height="15" fill="rgb(211,174,52)" fg:x="359" fg:w="25"/><text x="28.9930%" y="543.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.44%)</title><rect x="29.3034%" y="517" width="1.4412%" height="15" fill="rgb(229,48,4)" fg:x="366" fg:w="18"/><text x="29.5534%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="29.5436%" y="501" width="1.2010%" height="15" fill="rgb(205,155,16)" fg:x="369" fg:w="15"/><text x="29.7936%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="29.9440%" y="485" width="0.8006%" height="15" fill="rgb(211,141,53)" fg:x="374" fg:w="10"/><text x="30.1940%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="30.5845%" y="469" width="0.1601%" height="15" fill="rgb(240,148,11)" fg:x="382" fg:w="2"/><text x="30.8345%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7446%" y="517" width="0.0801%" height="15" fill="rgb(214,45,23)" fg:x="384" fg:w="1"/><text x="30.9946%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 2.40%)</title><rect x="28.5028%" y="549" width="2.4019%" height="15" fill="rgb(248,74,26)" fg:x="356" fg:w="30"/><text x="28.7528%" y="559.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="30.7446%" y="533" width="0.1601%" height="15" fill="rgb(218,121,16)" fg:x="384" fg:w="2"/><text x="30.9946%" y="543.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="30.8247%" y="517" width="0.0801%" height="15" fill="rgb(218,10,47)" fg:x="385" fg:w="1"/><text x="31.0747%" y="527.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.8247%" y="501" width="0.0801%" height="15" fill="rgb(227,99,14)" fg:x="385" fg:w="1"/><text x="31.0747%" y="511.50"></text></g><g><title>engine::session::Session::flush (114 samples, 9.13%)</title><rect x="21.9376%" y="709" width="9.1273%" height="15" fill="rgb(229,83,46)" fg:x="274" fg:w="114"/><text x="22.1876%" y="719.50">engine::sessi..</text></g><g><title>engine::session::Session::save_changes (109 samples, 8.73%)</title><rect x="22.3379%" y="693" width="8.7270%" height="15" fill="rgb(228,25,1)" fg:x="279" fg:w="109"/><text x="22.5879%" y="703.50">engine::sess..</text></g><g><title>engine::session::state::State::close (108 samples, 8.65%)</title><rect x="22.4179%" y="677" width="8.6469%" height="15" fill="rgb(252,190,15)" fg:x="280" fg:w="108"/><text x="22.6679%" y="687.50">engine::sess..</text></g><g><title>engine::session::state::State::flush_entities (108 samples, 8.65%)</title><rect x="22.4179%" y="661" width="8.6469%" height="15" fill="rgb(213,103,51)" fg:x="280" fg:w="108"/><text x="22.6679%" y="671.50">engine::sess..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (107 samples, 8.57%)</title><rect x="22.4980%" y="645" width="8.5669%" height="15" fill="rgb(220,38,44)" fg:x="281" fg:w="107"/><text x="22.7480%" y="655.50">engine::sess..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (107 samples, 8.57%)</title><rect x="22.4980%" y="629" width="8.5669%" height="15" fill="rgb(210,45,26)" fg:x="281" fg:w="107"/><text x="22.7480%" y="639.50">engine::sess..</text></g><g><title>kernel::model::any_entity_changes (46 samples, 3.68%)</title><rect x="27.3819%" y="613" width="3.6829%" height="15" fill="rgb(205,95,48)" fg:x="342" fg:w="46"/><text x="27.6319%" y="623.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (43 samples, 3.44%)</title><rect x="27.6221%" y="597" width="3.4428%" height="15" fill="rgb(225,179,37)" fg:x="345" fg:w="43"/><text x="27.8721%" y="607.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (42 samples, 3.36%)</title><rect x="27.7022%" y="581" width="3.3627%" height="15" fill="rgb(230,209,3)" fg:x="346" fg:w="42"/><text x="27.9522%" y="591.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (32 samples, 2.56%)</title><rect x="28.5028%" y="565" width="2.5620%" height="15" fill="rgb(248,12,46)" fg:x="356" fg:w="32"/><text x="28.7528%" y="575.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.9047%" y="549" width="0.1601%" height="15" fill="rgb(234,18,0)" fg:x="386" fg:w="2"/><text x="31.1547%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="31.1449%" y="677" width="0.0801%" height="15" fill="rgb(238,197,14)" fg:x="389" fg:w="1"/><text x="31.3949%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="31.1449%" y="661" width="0.0801%" height="15" fill="rgb(251,162,48)" fg:x="389" fg:w="1"/><text x="31.3949%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="31.1449%" y="693" width="0.1601%" height="15" fill="rgb(237,73,42)" fg:x="389" fg:w="2"/><text x="31.3949%" y="703.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="31.2250%" y="677" width="0.0801%" height="15" fill="rgb(211,108,8)" fg:x="390" fg:w="1"/><text x="31.4750%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="31.2250%" y="661" width="0.0801%" height="15" fill="rgb(213,45,22)" fg:x="390" fg:w="1"/><text x="31.4750%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.2250%" y="645" width="0.0801%" height="15" fill="rgb(252,154,5)" fg:x="390" fg:w="1"/><text x="31.4750%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="31.0649%" y="709" width="0.3203%" height="15" fill="rgb(221,79,52)" fg:x="388" fg:w="4"/><text x="31.3149%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="31.3050%" y="693" width="0.0801%" height="15" fill="rgb(229,220,36)" fg:x="391" fg:w="1"/><text x="31.5550%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.3050%" y="677" width="0.0801%" height="15" fill="rgb(211,17,16)" fg:x="391" fg:w="1"/><text x="31.5550%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.3050%" y="661" width="0.0801%" height="15" fill="rgb(222,55,31)" fg:x="391" fg:w="1"/><text x="31.5550%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.3050%" y="645" width="0.0801%" height="15" fill="rgb(221,221,31)" fg:x="391" fg:w="1"/><text x="31.5550%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.3050%" y="629" width="0.0801%" height="15" fill="rgb(227,168,26)" fg:x="391" fg:w="1"/><text x="31.5550%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.3050%" y="613" width="0.0801%" height="15" fill="rgb(224,139,9)" fg:x="391" fg:w="1"/><text x="31.5550%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.3050%" y="597" width="0.0801%" height="15" fill="rgb(254,172,0)" fg:x="391" fg:w="1"/><text x="31.5550%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="31.3050%" y="581" width="0.0801%" height="15" fill="rgb(235,203,1)" fg:x="391" fg:w="1"/><text x="31.5550%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.3851%" y="661" width="0.0801%" height="15" fill="rgb(216,205,24)" fg:x="392" fg:w="1"/><text x="31.6351%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.4652%" y="469" width="0.0801%" height="15" fill="rgb(233,24,6)" fg:x="393" fg:w="1"/><text x="31.7152%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.4652%" y="453" width="0.0801%" height="15" fill="rgb(244,110,9)" fg:x="393" fg:w="1"/><text x="31.7152%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="31.4652%" y="437" width="0.0801%" height="15" fill="rgb(239,222,42)" fg:x="393" fg:w="1"/><text x="31.7152%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="31.4652%" y="421" width="0.0801%" height="15" fill="rgb(218,145,13)" fg:x="393" fg:w="1"/><text x="31.7152%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="31.4652%" y="405" width="0.0801%" height="15" fill="rgb(207,69,11)" fg:x="393" fg:w="1"/><text x="31.7152%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="31.4652%" y="389" width="0.0801%" height="15" fill="rgb(220,223,22)" fg:x="393" fg:w="1"/><text x="31.7152%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.4652%" y="373" width="0.0801%" height="15" fill="rgb(245,102,5)" fg:x="393" fg:w="1"/><text x="31.7152%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.4652%" y="357" width="0.0801%" height="15" fill="rgb(211,148,2)" fg:x="393" fg:w="1"/><text x="31.7152%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="31.4652%" y="341" width="0.0801%" height="15" fill="rgb(241,13,44)" fg:x="393" fg:w="1"/><text x="31.7152%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="31.4652%" y="325" width="0.0801%" height="15" fill="rgb(219,137,21)" fg:x="393" fg:w="1"/><text x="31.7152%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.4652%" y="309" width="0.0801%" height="15" fill="rgb(242,206,5)" fg:x="393" fg:w="1"/><text x="31.7152%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="31.5452%" y="453" width="0.1601%" height="15" fill="rgb(217,114,22)" fg:x="394" fg:w="2"/><text x="31.7952%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="31.5452%" y="437" width="0.1601%" height="15" fill="rgb(253,206,42)" fg:x="394" fg:w="2"/><text x="31.7952%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="31.5452%" y="421" width="0.1601%" height="15" fill="rgb(236,102,18)" fg:x="394" fg:w="2"/><text x="31.7952%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="31.5452%" y="405" width="0.1601%" height="15" fill="rgb(208,59,49)" fg:x="394" fg:w="2"/><text x="31.7952%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="31.5452%" y="389" width="0.1601%" height="15" fill="rgb(215,194,28)" fg:x="394" fg:w="2"/><text x="31.7952%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="31.5452%" y="373" width="0.1601%" height="15" fill="rgb(243,207,11)" fg:x="394" fg:w="2"/><text x="31.7952%" y="383.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="31.5452%" y="357" width="0.1601%" height="15" fill="rgb(254,179,35)" fg:x="394" fg:w="2"/><text x="31.7952%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="31.5452%" y="341" width="0.1601%" height="15" fill="rgb(235,97,3)" fg:x="394" fg:w="2"/><text x="31.7952%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="31.5452%" y="325" width="0.1601%" height="15" fill="rgb(215,155,33)" fg:x="394" fg:w="2"/><text x="31.7952%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="31.5452%" y="309" width="0.1601%" height="15" fill="rgb(223,128,12)" fg:x="394" fg:w="2"/><text x="31.7952%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="31.5452%" y="293" width="0.1601%" height="15" fill="rgb(208,157,18)" fg:x="394" fg:w="2"/><text x="31.7952%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="31.5452%" y="277" width="0.1601%" height="15" fill="rgb(249,70,54)" fg:x="394" fg:w="2"/><text x="31.7952%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="31.5452%" y="261" width="0.1601%" height="15" fill="rgb(244,118,24)" fg:x="394" fg:w="2"/><text x="31.7952%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="31.5452%" y="245" width="0.1601%" height="15" fill="rgb(211,54,0)" fg:x="394" fg:w="2"/><text x="31.7952%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="31.5452%" y="229" width="0.1601%" height="15" fill="rgb(245,137,45)" fg:x="394" fg:w="2"/><text x="31.7952%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="31.5452%" y="213" width="0.1601%" height="15" fill="rgb(232,154,31)" fg:x="394" fg:w="2"/><text x="31.7952%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="31.5452%" y="197" width="0.1601%" height="15" fill="rgb(253,6,39)" fg:x="394" fg:w="2"/><text x="31.7952%" y="207.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="31.5452%" y="181" width="0.1601%" height="15" fill="rgb(234,183,24)" fg:x="394" fg:w="2"/><text x="31.7952%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.6253%" y="165" width="0.0801%" height="15" fill="rgb(252,84,40)" fg:x="395" fg:w="1"/><text x="31.8753%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="31.3851%" y="677" width="0.4003%" height="15" fill="rgb(224,65,2)" fg:x="392" fg:w="5"/><text x="31.6351%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="31.4652%" y="661" width="0.3203%" height="15" fill="rgb(229,38,24)" fg:x="393" fg:w="4"/><text x="31.7152%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="31.4652%" y="645" width="0.3203%" height="15" fill="rgb(218,131,50)" fg:x="393" fg:w="4"/><text x="31.7152%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="31.4652%" y="629" width="0.3203%" height="15" fill="rgb(233,106,18)" fg:x="393" fg:w="4"/><text x="31.7152%" y="639.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="31.4652%" y="613" width="0.3203%" height="15" fill="rgb(220,216,11)" fg:x="393" fg:w="4"/><text x="31.7152%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="31.4652%" y="597" width="0.3203%" height="15" fill="rgb(251,100,45)" fg:x="393" fg:w="4"/><text x="31.7152%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="31.4652%" y="581" width="0.3203%" height="15" fill="rgb(235,143,32)" fg:x="393" fg:w="4"/><text x="31.7152%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="31.4652%" y="565" width="0.3203%" height="15" fill="rgb(248,124,34)" fg:x="393" fg:w="4"/><text x="31.7152%" y="575.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="31.4652%" y="549" width="0.3203%" height="15" fill="rgb(225,221,4)" fg:x="393" fg:w="4"/><text x="31.7152%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="31.4652%" y="533" width="0.3203%" height="15" fill="rgb(242,27,43)" fg:x="393" fg:w="4"/><text x="31.7152%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="31.4652%" y="517" width="0.3203%" height="15" fill="rgb(227,54,8)" fg:x="393" fg:w="4"/><text x="31.7152%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="31.4652%" y="501" width="0.3203%" height="15" fill="rgb(253,139,49)" fg:x="393" fg:w="4"/><text x="31.7152%" y="511.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="31.4652%" y="485" width="0.3203%" height="15" fill="rgb(231,26,43)" fg:x="393" fg:w="4"/><text x="31.7152%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="31.5452%" y="469" width="0.2402%" height="15" fill="rgb(207,121,39)" fg:x="394" fg:w="3"/><text x="31.7952%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.7054%" y="453" width="0.0801%" height="15" fill="rgb(223,101,35)" fg:x="396" fg:w="1"/><text x="31.9554%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.7054%" y="437" width="0.0801%" height="15" fill="rgb(232,87,23)" fg:x="396" fg:w="1"/><text x="31.9554%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="31.7054%" y="421" width="0.0801%" height="15" fill="rgb(225,180,29)" fg:x="396" fg:w="1"/><text x="31.9554%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="31.7054%" y="405" width="0.0801%" height="15" fill="rgb(225,25,17)" fg:x="396" fg:w="1"/><text x="31.9554%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="31.7054%" y="389" width="0.0801%" height="15" fill="rgb(223,8,52)" fg:x="396" fg:w="1"/><text x="31.9554%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="31.7054%" y="373" width="0.0801%" height="15" fill="rgb(246,42,21)" fg:x="396" fg:w="1"/><text x="31.9554%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.7054%" y="357" width="0.0801%" height="15" fill="rgb(205,64,43)" fg:x="396" fg:w="1"/><text x="31.9554%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.7054%" y="341" width="0.0801%" height="15" fill="rgb(221,160,13)" fg:x="396" fg:w="1"/><text x="31.9554%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="31.7054%" y="325" width="0.0801%" height="15" fill="rgb(239,58,35)" fg:x="396" fg:w="1"/><text x="31.9554%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="31.7054%" y="309" width="0.0801%" height="15" fill="rgb(251,26,40)" fg:x="396" fg:w="1"/><text x="31.9554%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.7054%" y="293" width="0.0801%" height="15" fill="rgb(247,0,4)" fg:x="396" fg:w="1"/><text x="31.9554%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="31.7054%" y="277" width="0.0801%" height="15" fill="rgb(218,130,10)" fg:x="396" fg:w="1"/><text x="31.9554%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="31.7054%" y="261" width="0.0801%" height="15" fill="rgb(239,32,7)" fg:x="396" fg:w="1"/><text x="31.9554%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="31.7054%" y="245" width="0.0801%" height="15" fill="rgb(210,192,24)" fg:x="396" fg:w="1"/><text x="31.9554%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.7054%" y="229" width="0.0801%" height="15" fill="rgb(226,212,17)" fg:x="396" fg:w="1"/><text x="31.9554%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.7854%" y="661" width="0.0801%" height="15" fill="rgb(219,201,28)" fg:x="397" fg:w="1"/><text x="32.0354%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.8655%" y="645" width="0.1601%" height="15" fill="rgb(235,207,41)" fg:x="398" fg:w="2"/><text x="32.1155%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.9456%" y="629" width="0.0801%" height="15" fill="rgb(241,95,54)" fg:x="399" fg:w="1"/><text x="32.1956%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.9456%" y="613" width="0.0801%" height="15" fill="rgb(248,12,23)" fg:x="399" fg:w="1"/><text x="32.1956%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.9456%" y="597" width="0.0801%" height="15" fill="rgb(228,173,4)" fg:x="399" fg:w="1"/><text x="32.1956%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.9456%" y="581" width="0.0801%" height="15" fill="rgb(254,99,5)" fg:x="399" fg:w="1"/><text x="32.1956%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.9456%" y="565" width="0.0801%" height="15" fill="rgb(212,184,17)" fg:x="399" fg:w="1"/><text x="32.1956%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="31.9456%" y="549" width="0.0801%" height="15" fill="rgb(252,174,1)" fg:x="399" fg:w="1"/><text x="32.1956%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="31.9456%" y="533" width="0.0801%" height="15" fill="rgb(241,118,51)" fg:x="399" fg:w="1"/><text x="32.1956%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="31.7854%" y="677" width="0.3203%" height="15" fill="rgb(227,94,47)" fg:x="397" fg:w="4"/><text x="32.0354%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.8655%" y="661" width="0.2402%" height="15" fill="rgb(229,104,2)" fg:x="398" fg:w="3"/><text x="32.1155%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.0256%" y="645" width="0.0801%" height="15" fill="rgb(219,28,31)" fg:x="400" fg:w="1"/><text x="32.2756%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.0256%" y="629" width="0.0801%" height="15" fill="rgb(233,109,36)" fg:x="400" fg:w="1"/><text x="32.2756%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.0256%" y="613" width="0.0801%" height="15" fill="rgb(246,88,11)" fg:x="400" fg:w="1"/><text x="32.2756%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.0256%" y="597" width="0.0801%" height="15" fill="rgb(209,212,17)" fg:x="400" fg:w="1"/><text x="32.2756%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="32.1057%" y="661" width="0.0801%" height="15" fill="rgb(243,59,29)" fg:x="401" fg:w="1"/><text x="32.3557%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.1057%" y="645" width="0.0801%" height="15" fill="rgb(244,205,48)" fg:x="401" fg:w="1"/><text x="32.3557%" y="655.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="32.1057%" y="629" width="0.0801%" height="15" fill="rgb(227,30,6)" fg:x="401" fg:w="1"/><text x="32.3557%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1057%" y="613" width="0.0801%" height="15" fill="rgb(220,205,48)" fg:x="401" fg:w="1"/><text x="32.3557%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.1057%" y="597" width="0.0801%" height="15" fill="rgb(250,94,14)" fg:x="401" fg:w="1"/><text x="32.3557%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.1057%" y="581" width="0.0801%" height="15" fill="rgb(216,119,42)" fg:x="401" fg:w="1"/><text x="32.3557%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="32.1057%" y="677" width="0.1601%" height="15" fill="rgb(232,155,0)" fg:x="401" fg:w="2"/><text x="32.3557%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="32.1857%" y="661" width="0.0801%" height="15" fill="rgb(212,24,32)" fg:x="402" fg:w="1"/><text x="32.4357%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="32.1857%" y="645" width="0.0801%" height="15" fill="rgb(216,69,20)" fg:x="402" fg:w="1"/><text x="32.4357%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.1857%" y="629" width="0.0801%" height="15" fill="rgb(229,73,31)" fg:x="402" fg:w="1"/><text x="32.4357%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.1857%" y="613" width="0.0801%" height="15" fill="rgb(224,219,20)" fg:x="402" fg:w="1"/><text x="32.4357%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.1857%" y="597" width="0.0801%" height="15" fill="rgb(215,146,41)" fg:x="402" fg:w="1"/><text x="32.4357%" y="607.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="32.2658%" y="629" width="0.0801%" height="15" fill="rgb(244,71,31)" fg:x="403" fg:w="1"/><text x="32.5158%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2658%" y="613" width="0.0801%" height="15" fill="rgb(224,24,11)" fg:x="403" fg:w="1"/><text x="32.5158%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.2658%" y="597" width="0.0801%" height="15" fill="rgb(229,76,15)" fg:x="403" fg:w="1"/><text x="32.5158%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="31.3851%" y="693" width="1.0408%" height="15" fill="rgb(209,93,2)" fg:x="392" fg:w="13"/><text x="31.6351%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="32.2658%" y="677" width="0.1601%" height="15" fill="rgb(216,200,50)" fg:x="403" fg:w="2"/><text x="32.5158%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="32.2658%" y="661" width="0.1601%" height="15" fill="rgb(211,67,34)" fg:x="403" fg:w="2"/><text x="32.5158%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="32.2658%" y="645" width="0.1601%" height="15" fill="rgb(225,87,47)" fg:x="403" fg:w="2"/><text x="32.5158%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.3459%" y="629" width="0.0801%" height="15" fill="rgb(217,185,16)" fg:x="404" fg:w="1"/><text x="32.5959%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3459%" y="613" width="0.0801%" height="15" fill="rgb(205,0,0)" fg:x="404" fg:w="1"/><text x="32.5959%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.4259%" y="613" width="0.1601%" height="15" fill="rgb(207,116,45)" fg:x="405" fg:w="2"/><text x="32.6759%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.4259%" y="597" width="0.1601%" height="15" fill="rgb(221,156,26)" fg:x="405" fg:w="2"/><text x="32.6759%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.4259%" y="581" width="0.1601%" height="15" fill="rgb(213,140,4)" fg:x="405" fg:w="2"/><text x="32.6759%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.4259%" y="565" width="0.1601%" height="15" fill="rgb(231,224,15)" fg:x="405" fg:w="2"/><text x="32.6759%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.4259%" y="549" width="0.1601%" height="15" fill="rgb(244,76,20)" fg:x="405" fg:w="2"/><text x="32.6759%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="32.4259%" y="533" width="0.1601%" height="15" fill="rgb(238,117,7)" fg:x="405" fg:w="2"/><text x="32.6759%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="32.4259%" y="517" width="0.1601%" height="15" fill="rgb(235,1,10)" fg:x="405" fg:w="2"/><text x="32.6759%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="32.4259%" y="501" width="0.1601%" height="15" fill="rgb(216,165,6)" fg:x="405" fg:w="2"/><text x="32.6759%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="32.4259%" y="485" width="0.1601%" height="15" fill="rgb(246,91,35)" fg:x="405" fg:w="2"/><text x="32.6759%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="32.4259%" y="469" width="0.1601%" height="15" fill="rgb(228,96,24)" fg:x="405" fg:w="2"/><text x="32.6759%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="32.4259%" y="453" width="0.1601%" height="15" fill="rgb(254,217,53)" fg:x="405" fg:w="2"/><text x="32.6759%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="32.4259%" y="437" width="0.1601%" height="15" fill="rgb(209,60,0)" fg:x="405" fg:w="2"/><text x="32.6759%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="32.4259%" y="421" width="0.1601%" height="15" fill="rgb(250,93,26)" fg:x="405" fg:w="2"/><text x="32.6759%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="32.4259%" y="405" width="0.1601%" height="15" fill="rgb(211,9,40)" fg:x="405" fg:w="2"/><text x="32.6759%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.4259%" y="389" width="0.1601%" height="15" fill="rgb(242,57,20)" fg:x="405" fg:w="2"/><text x="32.6759%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="32.4259%" y="645" width="0.2402%" height="15" fill="rgb(248,85,48)" fg:x="405" fg:w="3"/><text x="32.6759%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.4259%" y="629" width="0.2402%" height="15" fill="rgb(212,117,2)" fg:x="405" fg:w="3"/><text x="32.6759%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.5861%" y="613" width="0.0801%" height="15" fill="rgb(243,19,3)" fg:x="407" fg:w="1"/><text x="32.8361%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.5861%" y="597" width="0.0801%" height="15" fill="rgb(232,217,24)" fg:x="407" fg:w="1"/><text x="32.8361%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.5861%" y="581" width="0.0801%" height="15" fill="rgb(224,175,40)" fg:x="407" fg:w="1"/><text x="32.8361%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="32.6661%" y="629" width="0.0801%" height="15" fill="rgb(212,162,32)" fg:x="408" fg:w="1"/><text x="32.9161%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.6661%" y="613" width="0.0801%" height="15" fill="rgb(215,9,4)" fg:x="408" fg:w="1"/><text x="32.9161%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.7462%" y="613" width="0.0801%" height="15" fill="rgb(242,42,7)" fg:x="409" fg:w="1"/><text x="32.9962%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.7462%" y="597" width="0.0801%" height="15" fill="rgb(242,184,45)" fg:x="409" fg:w="1"/><text x="32.9962%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.7462%" y="581" width="0.0801%" height="15" fill="rgb(228,111,51)" fg:x="409" fg:w="1"/><text x="32.9962%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.7462%" y="565" width="0.0801%" height="15" fill="rgb(236,147,17)" fg:x="409" fg:w="1"/><text x="32.9962%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.7462%" y="549" width="0.0801%" height="15" fill="rgb(210,75,22)" fg:x="409" fg:w="1"/><text x="32.9962%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.7462%" y="533" width="0.0801%" height="15" fill="rgb(217,159,45)" fg:x="409" fg:w="1"/><text x="32.9962%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.7462%" y="517" width="0.0801%" height="15" fill="rgb(245,165,53)" fg:x="409" fg:w="1"/><text x="32.9962%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.7462%" y="501" width="0.0801%" height="15" fill="rgb(251,190,50)" fg:x="409" fg:w="1"/><text x="32.9962%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.7462%" y="485" width="0.0801%" height="15" fill="rgb(208,203,29)" fg:x="409" fg:w="1"/><text x="32.9962%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.7462%" y="469" width="0.0801%" height="15" fill="rgb(207,209,35)" fg:x="409" fg:w="1"/><text x="32.9962%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.7462%" y="453" width="0.0801%" height="15" fill="rgb(230,144,49)" fg:x="409" fg:w="1"/><text x="32.9962%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.7462%" y="437" width="0.0801%" height="15" fill="rgb(229,31,6)" fg:x="409" fg:w="1"/><text x="32.9962%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.7462%" y="421" width="0.0801%" height="15" fill="rgb(251,129,24)" fg:x="409" fg:w="1"/><text x="32.9962%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.7462%" y="405" width="0.0801%" height="15" fill="rgb(235,105,15)" fg:x="409" fg:w="1"/><text x="32.9962%" y="415.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="32.7462%" y="389" width="0.0801%" height="15" fill="rgb(216,52,43)" fg:x="409" fg:w="1"/><text x="32.9962%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.8263%" y="613" width="0.0801%" height="15" fill="rgb(238,144,41)" fg:x="410" fg:w="1"/><text x="33.0763%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.8263%" y="597" width="0.0801%" height="15" fill="rgb(243,63,9)" fg:x="410" fg:w="1"/><text x="33.0763%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.8263%" y="581" width="0.0801%" height="15" fill="rgb(246,208,1)" fg:x="410" fg:w="1"/><text x="33.0763%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.8263%" y="565" width="0.0801%" height="15" fill="rgb(233,182,18)" fg:x="410" fg:w="1"/><text x="33.0763%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.8263%" y="549" width="0.0801%" height="15" fill="rgb(242,224,8)" fg:x="410" fg:w="1"/><text x="33.0763%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.9063%" y="549" width="0.0801%" height="15" fill="rgb(243,54,37)" fg:x="411" fg:w="1"/><text x="33.1563%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="32.4259%" y="677" width="0.6405%" height="15" fill="rgb(233,192,12)" fg:x="405" fg:w="8"/><text x="32.6759%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="32.4259%" y="661" width="0.6405%" height="15" fill="rgb(251,192,53)" fg:x="405" fg:w="8"/><text x="32.6759%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="32.6661%" y="645" width="0.4003%" height="15" fill="rgb(246,141,26)" fg:x="408" fg:w="5"/><text x="32.9161%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="32.7462%" y="629" width="0.3203%" height="15" fill="rgb(239,195,19)" fg:x="409" fg:w="4"/><text x="32.9962%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.9063%" y="613" width="0.1601%" height="15" fill="rgb(241,16,39)" fg:x="411" fg:w="2"/><text x="33.1563%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.9063%" y="597" width="0.1601%" height="15" fill="rgb(223,13,53)" fg:x="411" fg:w="2"/><text x="33.1563%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.9063%" y="581" width="0.1601%" height="15" fill="rgb(214,227,0)" fg:x="411" fg:w="2"/><text x="33.1563%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.9063%" y="565" width="0.1601%" height="15" fill="rgb(228,103,26)" fg:x="411" fg:w="2"/><text x="33.1563%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.9864%" y="549" width="0.0801%" height="15" fill="rgb(254,177,53)" fg:x="412" fg:w="1"/><text x="33.2364%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.9864%" y="533" width="0.0801%" height="15" fill="rgb(208,201,34)" fg:x="412" fg:w="1"/><text x="33.2364%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="33.0665%" y="677" width="0.1601%" height="15" fill="rgb(212,39,5)" fg:x="413" fg:w="2"/><text x="33.3165%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="33.1465%" y="661" width="0.0801%" height="15" fill="rgb(246,117,3)" fg:x="414" fg:w="1"/><text x="33.3965%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.1465%" y="645" width="0.0801%" height="15" fill="rgb(244,118,39)" fg:x="414" fg:w="1"/><text x="33.3965%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.1465%" y="629" width="0.0801%" height="15" fill="rgb(241,64,10)" fg:x="414" fg:w="1"/><text x="33.3965%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2266%" y="613" width="0.0801%" height="15" fill="rgb(229,39,44)" fg:x="415" fg:w="1"/><text x="33.4766%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3066%" y="549" width="0.0801%" height="15" fill="rgb(230,226,3)" fg:x="416" fg:w="1"/><text x="33.5566%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3066%" y="533" width="0.0801%" height="15" fill="rgb(222,13,42)" fg:x="416" fg:w="1"/><text x="33.5566%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.3066%" y="517" width="0.0801%" height="15" fill="rgb(247,180,54)" fg:x="416" fg:w="1"/><text x="33.5566%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.3066%" y="501" width="0.0801%" height="15" fill="rgb(205,96,16)" fg:x="416" fg:w="1"/><text x="33.5566%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.3066%" y="485" width="0.0801%" height="15" fill="rgb(205,100,21)" fg:x="416" fg:w="1"/><text x="33.5566%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.3066%" y="469" width="0.0801%" height="15" fill="rgb(248,51,4)" fg:x="416" fg:w="1"/><text x="33.5566%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.3066%" y="453" width="0.0801%" height="15" fill="rgb(217,197,30)" fg:x="416" fg:w="1"/><text x="33.5566%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.3066%" y="437" width="0.0801%" height="15" fill="rgb(240,179,40)" fg:x="416" fg:w="1"/><text x="33.5566%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.3066%" y="421" width="0.0801%" height="15" fill="rgb(212,185,35)" fg:x="416" fg:w="1"/><text x="33.5566%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.3066%" y="405" width="0.0801%" height="15" fill="rgb(251,222,31)" fg:x="416" fg:w="1"/><text x="33.5566%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.3066%" y="389" width="0.0801%" height="15" fill="rgb(208,140,36)" fg:x="416" fg:w="1"/><text x="33.5566%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3066%" y="373" width="0.0801%" height="15" fill="rgb(220,148,1)" fg:x="416" fg:w="1"/><text x="33.5566%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.3066%" y="565" width="0.1601%" height="15" fill="rgb(254,4,28)" fg:x="416" fg:w="2"/><text x="33.5566%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3867%" y="549" width="0.0801%" height="15" fill="rgb(222,185,44)" fg:x="417" fg:w="1"/><text x="33.6367%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="33.3066%" y="597" width="0.2402%" height="15" fill="rgb(215,74,39)" fg:x="416" fg:w="3"/><text x="33.5566%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="33.3066%" y="581" width="0.2402%" height="15" fill="rgb(247,86,4)" fg:x="416" fg:w="3"/><text x="33.5566%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4668%" y="565" width="0.0801%" height="15" fill="rgb(231,105,32)" fg:x="418" fg:w="1"/><text x="33.7168%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4668%" y="549" width="0.0801%" height="15" fill="rgb(222,65,35)" fg:x="418" fg:w="1"/><text x="33.7168%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.4668%" y="533" width="0.0801%" height="15" fill="rgb(218,145,35)" fg:x="418" fg:w="1"/><text x="33.7168%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.4668%" y="517" width="0.0801%" height="15" fill="rgb(208,7,15)" fg:x="418" fg:w="1"/><text x="33.7168%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.4668%" y="501" width="0.0801%" height="15" fill="rgb(209,83,13)" fg:x="418" fg:w="1"/><text x="33.7168%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="33.4668%" y="485" width="0.0801%" height="15" fill="rgb(218,3,10)" fg:x="418" fg:w="1"/><text x="33.7168%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.4668%" y="469" width="0.0801%" height="15" fill="rgb(211,219,4)" fg:x="418" fg:w="1"/><text x="33.7168%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="33.2266%" y="629" width="0.4804%" height="15" fill="rgb(228,194,12)" fg:x="415" fg:w="6"/><text x="33.4766%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="33.3066%" y="613" width="0.4003%" height="15" fill="rgb(210,175,7)" fg:x="416" fg:w="5"/><text x="33.5566%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.5468%" y="597" width="0.1601%" height="15" fill="rgb(243,132,6)" fg:x="419" fg:w="2"/><text x="33.7968%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.5468%" y="581" width="0.1601%" height="15" fill="rgb(207,72,18)" fg:x="419" fg:w="2"/><text x="33.7968%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="33.5468%" y="565" width="0.1601%" height="15" fill="rgb(236,1,18)" fg:x="419" fg:w="2"/><text x="33.7968%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.5468%" y="549" width="0.1601%" height="15" fill="rgb(227,0,18)" fg:x="419" fg:w="2"/><text x="33.7968%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.5468%" y="533" width="0.1601%" height="15" fill="rgb(247,37,5)" fg:x="419" fg:w="2"/><text x="33.7968%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.5468%" y="517" width="0.1601%" height="15" fill="rgb(237,179,24)" fg:x="419" fg:w="2"/><text x="33.7968%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7070%" y="613" width="0.0801%" height="15" fill="rgb(226,53,20)" fg:x="421" fg:w="1"/><text x="33.9570%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="33.8671%" y="565" width="0.2402%" height="15" fill="rgb(247,75,7)" fg:x="423" fg:w="3"/><text x="34.1171%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.0272%" y="549" width="0.0801%" height="15" fill="rgb(233,96,12)" fg:x="425" fg:w="1"/><text x="34.2772%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.0272%" y="533" width="0.0801%" height="15" fill="rgb(224,125,0)" fg:x="425" fg:w="1"/><text x="34.2772%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.0272%" y="517" width="0.0801%" height="15" fill="rgb(224,92,25)" fg:x="425" fg:w="1"/><text x="34.2772%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.0272%" y="501" width="0.0801%" height="15" fill="rgb(224,42,24)" fg:x="425" fg:w="1"/><text x="34.2772%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.0272%" y="485" width="0.0801%" height="15" fill="rgb(234,132,49)" fg:x="425" fg:w="1"/><text x="34.2772%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.0272%" y="469" width="0.0801%" height="15" fill="rgb(248,100,35)" fg:x="425" fg:w="1"/><text x="34.2772%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.0272%" y="453" width="0.0801%" height="15" fill="rgb(239,94,40)" fg:x="425" fg:w="1"/><text x="34.2772%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.0272%" y="437" width="0.0801%" height="15" fill="rgb(235,139,28)" fg:x="425" fg:w="1"/><text x="34.2772%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.0272%" y="421" width="0.0801%" height="15" fill="rgb(217,144,7)" fg:x="425" fg:w="1"/><text x="34.2772%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.0272%" y="405" width="0.0801%" height="15" fill="rgb(227,55,4)" fg:x="425" fg:w="1"/><text x="34.2772%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.0272%" y="389" width="0.0801%" height="15" fill="rgb(252,82,54)" fg:x="425" fg:w="1"/><text x="34.2772%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0272%" y="373" width="0.0801%" height="15" fill="rgb(245,172,4)" fg:x="425" fg:w="1"/><text x="34.2772%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="33.7870%" y="597" width="0.4003%" height="15" fill="rgb(207,26,27)" fg:x="422" fg:w="5"/><text x="34.0370%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="33.8671%" y="581" width="0.3203%" height="15" fill="rgb(252,98,18)" fg:x="423" fg:w="4"/><text x="34.1171%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.1073%" y="565" width="0.0801%" height="15" fill="rgb(244,8,26)" fg:x="426" fg:w="1"/><text x="34.3573%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.1073%" y="549" width="0.0801%" height="15" fill="rgb(237,173,45)" fg:x="426" fg:w="1"/><text x="34.3573%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.1073%" y="533" width="0.0801%" height="15" fill="rgb(208,213,49)" fg:x="426" fg:w="1"/><text x="34.3573%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.1073%" y="517" width="0.0801%" height="15" fill="rgb(212,122,37)" fg:x="426" fg:w="1"/><text x="34.3573%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.1073%" y="501" width="0.0801%" height="15" fill="rgb(213,80,17)" fg:x="426" fg:w="1"/><text x="34.3573%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.1073%" y="485" width="0.0801%" height="15" fill="rgb(206,210,43)" fg:x="426" fg:w="1"/><text x="34.3573%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.1073%" y="469" width="0.0801%" height="15" fill="rgb(229,214,3)" fg:x="426" fg:w="1"/><text x="34.3573%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.1873%" y="597" width="0.0801%" height="15" fill="rgb(235,213,29)" fg:x="427" fg:w="1"/><text x="34.4373%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.12%)</title><rect x="33.2266%" y="661" width="1.1209%" height="15" fill="rgb(248,135,26)" fg:x="415" fg:w="14"/><text x="33.4766%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (14 samples, 1.12%)</title><rect x="33.2266%" y="645" width="1.1209%" height="15" fill="rgb(242,188,12)" fg:x="415" fg:w="14"/><text x="33.4766%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="33.7070%" y="629" width="0.6405%" height="15" fill="rgb(245,38,12)" fg:x="421" fg:w="8"/><text x="33.9570%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="33.7870%" y="613" width="0.5604%" height="15" fill="rgb(218,42,13)" fg:x="422" fg:w="7"/><text x="34.0370%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.2674%" y="597" width="0.0801%" height="15" fill="rgb(238,132,49)" fg:x="428" fg:w="1"/><text x="34.5174%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.2674%" y="581" width="0.0801%" height="15" fill="rgb(209,196,19)" fg:x="428" fg:w="1"/><text x="34.5174%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.2674%" y="565" width="0.0801%" height="15" fill="rgb(244,131,22)" fg:x="428" fg:w="1"/><text x="34.5174%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.2674%" y="549" width="0.0801%" height="15" fill="rgb(223,18,34)" fg:x="428" fg:w="1"/><text x="34.5174%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.2674%" y="533" width="0.0801%" height="15" fill="rgb(252,124,54)" fg:x="428" fg:w="1"/><text x="34.5174%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.2674%" y="517" width="0.0801%" height="15" fill="rgb(229,106,42)" fg:x="428" fg:w="1"/><text x="34.5174%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (16 samples, 1.28%)</title><rect x="33.2266%" y="677" width="1.2810%" height="15" fill="rgb(221,129,1)" fg:x="415" fg:w="16"/><text x="33.4766%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="34.3475%" y="661" width="0.1601%" height="15" fill="rgb(229,74,15)" fg:x="429" fg:w="2"/><text x="34.5975%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="34.3475%" y="645" width="0.1601%" height="15" fill="rgb(210,206,50)" fg:x="429" fg:w="2"/><text x="34.5975%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="34.3475%" y="629" width="0.1601%" height="15" fill="rgb(251,114,31)" fg:x="429" fg:w="2"/><text x="34.5975%" y="639.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="34.3475%" y="613" width="0.1601%" height="15" fill="rgb(215,225,28)" fg:x="429" fg:w="2"/><text x="34.5975%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="34.3475%" y="597" width="0.1601%" height="15" fill="rgb(237,109,14)" fg:x="429" fg:w="2"/><text x="34.5975%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.4275%" y="581" width="0.0801%" height="15" fill="rgb(230,13,37)" fg:x="430" fg:w="1"/><text x="34.6775%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.4275%" y="565" width="0.0801%" height="15" fill="rgb(231,40,28)" fg:x="430" fg:w="1"/><text x="34.6775%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.4275%" y="549" width="0.0801%" height="15" fill="rgb(231,202,18)" fg:x="430" fg:w="1"/><text x="34.6775%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="34.4275%" y="533" width="0.0801%" height="15" fill="rgb(225,33,18)" fg:x="430" fg:w="1"/><text x="34.6775%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="34.4275%" y="517" width="0.0801%" height="15" fill="rgb(223,64,47)" fg:x="430" fg:w="1"/><text x="34.6775%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="34.4275%" y="501" width="0.0801%" height="15" fill="rgb(234,114,13)" fg:x="430" fg:w="1"/><text x="34.6775%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="34.4275%" y="485" width="0.0801%" height="15" fill="rgb(248,56,40)" fg:x="430" fg:w="1"/><text x="34.6775%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (40 samples, 3.20%)</title><rect x="31.3851%" y="709" width="3.2026%" height="15" fill="rgb(221,194,21)" fg:x="392" fg:w="40"/><text x="31.6351%" y="719.50">plu..</text></g><g><title>plugins_core::tools::set_container (27 samples, 2.16%)</title><rect x="32.4259%" y="693" width="2.1617%" height="15" fill="rgb(242,108,46)" fg:x="405" fg:w="27"/><text x="32.6759%" y="703.50">p..</text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="34.5076%" y="677" width="0.0801%" height="15" fill="rgb(220,106,10)" fg:x="431" fg:w="1"/><text x="34.7576%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="34.5076%" y="661" width="0.0801%" height="15" fill="rgb(211,88,4)" fg:x="431" fg:w="1"/><text x="34.7576%" y="671.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="34.5076%" y="645" width="0.0801%" height="15" fill="rgb(214,95,34)" fg:x="431" fg:w="1"/><text x="34.7576%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.5076%" y="629" width="0.0801%" height="15" fill="rgb(250,160,33)" fg:x="431" fg:w="1"/><text x="34.7576%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="34.5076%" y="613" width="0.0801%" height="15" fill="rgb(225,29,10)" fg:x="431" fg:w="1"/><text x="34.7576%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.5076%" y="597" width="0.0801%" height="15" fill="rgb(224,28,30)" fg:x="431" fg:w="1"/><text x="34.7576%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="34.7478%" y="677" width="0.0801%" height="15" fill="rgb(231,77,4)" fg:x="434" fg:w="1"/><text x="34.9978%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="34.7478%" y="661" width="0.0801%" height="15" fill="rgb(209,63,21)" fg:x="434" fg:w="1"/><text x="34.9978%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.7478%" y="645" width="0.0801%" height="15" fill="rgb(226,22,11)" fg:x="434" fg:w="1"/><text x="34.9978%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.7478%" y="629" width="0.0801%" height="15" fill="rgb(216,82,30)" fg:x="434" fg:w="1"/><text x="34.9978%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.7478%" y="613" width="0.0801%" height="15" fill="rgb(246,227,38)" fg:x="434" fg:w="1"/><text x="34.9978%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.7478%" y="597" width="0.0801%" height="15" fill="rgb(251,203,53)" fg:x="434" fg:w="1"/><text x="34.9978%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="34.7478%" y="581" width="0.0801%" height="15" fill="rgb(254,101,1)" fg:x="434" fg:w="1"/><text x="34.9978%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.7478%" y="565" width="0.0801%" height="15" fill="rgb(241,180,5)" fg:x="434" fg:w="1"/><text x="34.9978%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.7478%" y="549" width="0.0801%" height="15" fill="rgb(218,168,4)" fg:x="434" fg:w="1"/><text x="34.9978%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.7478%" y="533" width="0.0801%" height="15" fill="rgb(224,223,32)" fg:x="434" fg:w="1"/><text x="34.9978%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="34.7478%" y="517" width="0.0801%" height="15" fill="rgb(236,106,22)" fg:x="434" fg:w="1"/><text x="34.9978%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.7478%" y="501" width="0.0801%" height="15" fill="rgb(206,121,5)" fg:x="434" fg:w="1"/><text x="34.9978%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="34.8279%" y="661" width="0.0801%" height="15" fill="rgb(233,87,28)" fg:x="435" fg:w="1"/><text x="35.0779%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.8279%" y="645" width="0.0801%" height="15" fill="rgb(236,137,17)" fg:x="435" fg:w="1"/><text x="35.0779%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="34.8279%" y="629" width="0.0801%" height="15" fill="rgb(209,183,38)" fg:x="435" fg:w="1"/><text x="35.0779%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.9079%" y="645" width="0.0801%" height="15" fill="rgb(206,162,44)" fg:x="436" fg:w="1"/><text x="35.1579%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.9880%" y="645" width="0.0801%" height="15" fill="rgb(237,70,39)" fg:x="437" fg:w="1"/><text x="35.2380%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.9880%" y="629" width="0.0801%" height="15" fill="rgb(212,176,5)" fg:x="437" fg:w="1"/><text x="35.2380%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.9880%" y="613" width="0.0801%" height="15" fill="rgb(232,95,16)" fg:x="437" fg:w="1"/><text x="35.2380%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.9880%" y="597" width="0.0801%" height="15" fill="rgb(219,115,35)" fg:x="437" fg:w="1"/><text x="35.2380%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.9880%" y="581" width="0.0801%" height="15" fill="rgb(251,67,27)" fg:x="437" fg:w="1"/><text x="35.2380%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.0681%" y="613" width="0.0801%" height="15" fill="rgb(222,95,40)" fg:x="438" fg:w="1"/><text x="35.3181%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="34.5877%" y="709" width="0.6405%" height="15" fill="rgb(250,35,16)" fg:x="432" fg:w="8"/><text x="34.8377%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="34.7478%" y="693" width="0.4804%" height="15" fill="rgb(224,86,44)" fg:x="434" fg:w="6"/><text x="34.9978%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="34.8279%" y="677" width="0.4003%" height="15" fill="rgb(237,53,53)" fg:x="435" fg:w="5"/><text x="35.0779%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="34.9079%" y="661" width="0.3203%" height="15" fill="rgb(208,171,33)" fg:x="436" fg:w="4"/><text x="35.1579%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.0681%" y="645" width="0.1601%" height="15" fill="rgb(222,64,27)" fg:x="438" fg:w="2"/><text x="35.3181%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.0681%" y="629" width="0.1601%" height="15" fill="rgb(221,121,35)" fg:x="438" fg:w="2"/><text x="35.3181%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.1481%" y="613" width="0.0801%" height="15" fill="rgb(228,137,42)" fg:x="439" fg:w="1"/><text x="35.3981%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.1481%" y="597" width="0.0801%" height="15" fill="rgb(227,54,21)" fg:x="439" fg:w="1"/><text x="35.3981%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.1481%" y="581" width="0.0801%" height="15" fill="rgb(240,168,33)" fg:x="439" fg:w="1"/><text x="35.3981%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="35.2282%" y="677" width="0.0801%" height="15" fill="rgb(243,159,6)" fg:x="440" fg:w="1"/><text x="35.4782%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="35.2282%" y="661" width="0.0801%" height="15" fill="rgb(205,211,41)" fg:x="440" fg:w="1"/><text x="35.4782%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="35.2282%" y="645" width="0.0801%" height="15" fill="rgb(253,30,1)" fg:x="440" fg:w="1"/><text x="35.4782%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.2282%" y="629" width="0.0801%" height="15" fill="rgb(226,80,18)" fg:x="440" fg:w="1"/><text x="35.4782%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="35.2282%" y="613" width="0.0801%" height="15" fill="rgb(253,156,46)" fg:x="440" fg:w="1"/><text x="35.4782%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="35.2282%" y="597" width="0.0801%" height="15" fill="rgb(248,87,27)" fg:x="440" fg:w="1"/><text x="35.4782%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="35.2282%" y="581" width="0.0801%" height="15" fill="rgb(227,122,2)" fg:x="440" fg:w="1"/><text x="35.4782%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.2282%" y="565" width="0.0801%" height="15" fill="rgb(229,94,39)" fg:x="440" fg:w="1"/><text x="35.4782%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="35.2282%" y="709" width="0.1601%" height="15" fill="rgb(225,173,31)" fg:x="440" fg:w="2"/><text x="35.4782%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="35.2282%" y="693" width="0.1601%" height="15" fill="rgb(239,176,30)" fg:x="440" fg:w="2"/><text x="35.4782%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.3082%" y="677" width="0.0801%" height="15" fill="rgb(212,104,21)" fg:x="441" fg:w="1"/><text x="35.5582%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.3082%" y="661" width="0.0801%" height="15" fill="rgb(240,209,40)" fg:x="441" fg:w="1"/><text x="35.5582%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="35.3883%" y="677" width="0.1601%" height="15" fill="rgb(234,195,5)" fg:x="442" fg:w="2"/><text x="35.6383%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="35.3883%" y="661" width="0.1601%" height="15" fill="rgb(238,213,1)" fg:x="442" fg:w="2"/><text x="35.6383%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="35.5484%" y="677" width="0.0801%" height="15" fill="rgb(235,182,54)" fg:x="444" fg:w="1"/><text x="35.7984%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.5484%" y="661" width="0.0801%" height="15" fill="rgb(229,50,46)" fg:x="444" fg:w="1"/><text x="35.7984%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.5484%" y="645" width="0.0801%" height="15" fill="rgb(219,145,13)" fg:x="444" fg:w="1"/><text x="35.7984%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.5484%" y="629" width="0.0801%" height="15" fill="rgb(220,226,10)" fg:x="444" fg:w="1"/><text x="35.7984%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.5484%" y="613" width="0.0801%" height="15" fill="rgb(248,47,30)" fg:x="444" fg:w="1"/><text x="35.7984%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.5484%" y="597" width="0.0801%" height="15" fill="rgb(231,209,44)" fg:x="444" fg:w="1"/><text x="35.7984%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="35.6285%" y="677" width="0.0801%" height="15" fill="rgb(209,80,30)" fg:x="445" fg:w="1"/><text x="35.8785%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="35.6285%" y="661" width="0.0801%" height="15" fill="rgb(232,9,14)" fg:x="445" fg:w="1"/><text x="35.8785%" y="671.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6285%" y="645" width="0.0801%" height="15" fill="rgb(243,91,43)" fg:x="445" fg:w="1"/><text x="35.8785%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.6285%" y="629" width="0.0801%" height="15" fill="rgb(231,90,52)" fg:x="445" fg:w="1"/><text x="35.8785%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="35.7086%" y="645" width="0.0801%" height="15" fill="rgb(253,192,44)" fg:x="446" fg:w="1"/><text x="35.9586%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.7086%" y="629" width="0.0801%" height="15" fill="rgb(241,66,31)" fg:x="446" fg:w="1"/><text x="35.9586%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="35.3883%" y="693" width="0.4804%" height="15" fill="rgb(235,81,37)" fg:x="442" fg:w="6"/><text x="35.6383%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="35.7086%" y="677" width="0.1601%" height="15" fill="rgb(223,221,9)" fg:x="446" fg:w="2"/><text x="35.9586%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="35.7086%" y="661" width="0.1601%" height="15" fill="rgb(242,180,7)" fg:x="446" fg:w="2"/><text x="35.9586%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="35.7886%" y="645" width="0.0801%" height="15" fill="rgb(243,78,19)" fg:x="447" fg:w="1"/><text x="36.0386%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.7886%" y="629" width="0.0801%" height="15" fill="rgb(233,23,17)" fg:x="447" fg:w="1"/><text x="36.0386%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.7886%" y="613" width="0.0801%" height="15" fill="rgb(252,122,45)" fg:x="447" fg:w="1"/><text x="36.0386%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.7886%" y="597" width="0.0801%" height="15" fill="rgb(247,108,20)" fg:x="447" fg:w="1"/><text x="36.0386%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.7886%" y="581" width="0.0801%" height="15" fill="rgb(235,84,21)" fg:x="447" fg:w="1"/><text x="36.0386%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.7886%" y="565" width="0.0801%" height="15" fill="rgb(247,129,10)" fg:x="447" fg:w="1"/><text x="36.0386%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.7886%" y="549" width="0.0801%" height="15" fill="rgb(208,173,14)" fg:x="447" fg:w="1"/><text x="36.0386%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.7886%" y="533" width="0.0801%" height="15" fill="rgb(236,31,38)" fg:x="447" fg:w="1"/><text x="36.0386%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.7886%" y="517" width="0.0801%" height="15" fill="rgb(232,65,17)" fg:x="447" fg:w="1"/><text x="36.0386%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.7886%" y="501" width="0.0801%" height="15" fill="rgb(224,45,49)" fg:x="447" fg:w="1"/><text x="36.0386%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.7886%" y="485" width="0.0801%" height="15" fill="rgb(225,2,53)" fg:x="447" fg:w="1"/><text x="36.0386%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.7886%" y="469" width="0.0801%" height="15" fill="rgb(248,210,53)" fg:x="447" fg:w="1"/><text x="36.0386%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.7886%" y="453" width="0.0801%" height="15" fill="rgb(211,1,30)" fg:x="447" fg:w="1"/><text x="36.0386%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.8687%" y="613" width="0.0801%" height="15" fill="rgb(224,96,15)" fg:x="448" fg:w="1"/><text x="36.1187%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.8687%" y="597" width="0.0801%" height="15" fill="rgb(252,45,11)" fg:x="448" fg:w="1"/><text x="36.1187%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.8687%" y="581" width="0.0801%" height="15" fill="rgb(220,125,38)" fg:x="448" fg:w="1"/><text x="36.1187%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.8687%" y="565" width="0.0801%" height="15" fill="rgb(243,161,33)" fg:x="448" fg:w="1"/><text x="36.1187%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="35.8687%" y="645" width="0.1601%" height="15" fill="rgb(248,197,34)" fg:x="448" fg:w="2"/><text x="36.1187%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="35.8687%" y="629" width="0.1601%" height="15" fill="rgb(228,165,23)" fg:x="448" fg:w="2"/><text x="36.1187%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.9488%" y="613" width="0.0801%" height="15" fill="rgb(236,94,38)" fg:x="449" fg:w="1"/><text x="36.1988%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.9488%" y="597" width="0.0801%" height="15" fill="rgb(220,13,23)" fg:x="449" fg:w="1"/><text x="36.1988%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.9488%" y="581" width="0.0801%" height="15" fill="rgb(234,26,39)" fg:x="449" fg:w="1"/><text x="36.1988%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.9488%" y="565" width="0.0801%" height="15" fill="rgb(205,117,44)" fg:x="449" fg:w="1"/><text x="36.1988%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.9488%" y="549" width="0.0801%" height="15" fill="rgb(250,42,2)" fg:x="449" fg:w="1"/><text x="36.1988%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.0288%" y="581" width="0.0801%" height="15" fill="rgb(223,83,14)" fg:x="450" fg:w="1"/><text x="36.2788%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.0288%" y="565" width="0.0801%" height="15" fill="rgb(241,147,50)" fg:x="450" fg:w="1"/><text x="36.2788%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.0288%" y="549" width="0.0801%" height="15" fill="rgb(218,90,6)" fg:x="450" fg:w="1"/><text x="36.2788%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.0288%" y="533" width="0.0801%" height="15" fill="rgb(210,191,5)" fg:x="450" fg:w="1"/><text x="36.2788%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.0288%" y="517" width="0.0801%" height="15" fill="rgb(225,139,19)" fg:x="450" fg:w="1"/><text x="36.2788%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.0288%" y="501" width="0.0801%" height="15" fill="rgb(210,1,33)" fg:x="450" fg:w="1"/><text x="36.2788%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.0288%" y="485" width="0.0801%" height="15" fill="rgb(213,50,3)" fg:x="450" fg:w="1"/><text x="36.2788%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.0288%" y="469" width="0.0801%" height="15" fill="rgb(234,227,4)" fg:x="450" fg:w="1"/><text x="36.2788%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.0288%" y="453" width="0.0801%" height="15" fill="rgb(246,63,5)" fg:x="450" fg:w="1"/><text x="36.2788%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.0288%" y="437" width="0.0801%" height="15" fill="rgb(245,136,27)" fg:x="450" fg:w="1"/><text x="36.2788%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.0288%" y="421" width="0.0801%" height="15" fill="rgb(247,199,27)" fg:x="450" fg:w="1"/><text x="36.2788%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.0288%" y="405" width="0.0801%" height="15" fill="rgb(252,158,49)" fg:x="450" fg:w="1"/><text x="36.2788%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.0288%" y="389" width="0.0801%" height="15" fill="rgb(254,73,1)" fg:x="450" fg:w="1"/><text x="36.2788%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.0288%" y="613" width="0.1601%" height="15" fill="rgb(248,93,19)" fg:x="450" fg:w="2"/><text x="36.2788%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.0288%" y="597" width="0.1601%" height="15" fill="rgb(206,67,5)" fg:x="450" fg:w="2"/><text x="36.2788%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1089%" y="581" width="0.0801%" height="15" fill="rgb(209,210,4)" fg:x="451" fg:w="1"/><text x="36.3589%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1089%" y="565" width="0.0801%" height="15" fill="rgb(214,185,36)" fg:x="451" fg:w="1"/><text x="36.3589%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.1089%" y="549" width="0.0801%" height="15" fill="rgb(233,191,26)" fg:x="451" fg:w="1"/><text x="36.3589%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.1089%" y="533" width="0.0801%" height="15" fill="rgb(248,94,17)" fg:x="451" fg:w="1"/><text x="36.3589%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.1089%" y="517" width="0.0801%" height="15" fill="rgb(250,64,4)" fg:x="451" fg:w="1"/><text x="36.3589%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.1089%" y="501" width="0.0801%" height="15" fill="rgb(218,41,53)" fg:x="451" fg:w="1"/><text x="36.3589%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.1089%" y="485" width="0.0801%" height="15" fill="rgb(251,176,28)" fg:x="451" fg:w="1"/><text x="36.3589%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.1089%" y="469" width="0.0801%" height="15" fill="rgb(247,22,9)" fg:x="451" fg:w="1"/><text x="36.3589%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.1089%" y="453" width="0.0801%" height="15" fill="rgb(218,201,14)" fg:x="451" fg:w="1"/><text x="36.3589%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.1089%" y="437" width="0.0801%" height="15" fill="rgb(218,94,10)" fg:x="451" fg:w="1"/><text x="36.3589%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.1089%" y="421" width="0.0801%" height="15" fill="rgb(222,183,52)" fg:x="451" fg:w="1"/><text x="36.3589%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1089%" y="405" width="0.0801%" height="15" fill="rgb(242,140,25)" fg:x="451" fg:w="1"/><text x="36.3589%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="35.8687%" y="677" width="0.4003%" height="15" fill="rgb(235,197,38)" fg:x="448" fg:w="5"/><text x="36.1187%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="35.8687%" y="661" width="0.4003%" height="15" fill="rgb(237,136,15)" fg:x="448" fg:w="5"/><text x="36.1187%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="36.0288%" y="645" width="0.2402%" height="15" fill="rgb(223,44,49)" fg:x="450" fg:w="3"/><text x="36.2788%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="36.0288%" y="629" width="0.2402%" height="15" fill="rgb(227,71,15)" fg:x="450" fg:w="3"/><text x="36.2788%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.1890%" y="613" width="0.0801%" height="15" fill="rgb(225,153,20)" fg:x="452" fg:w="1"/><text x="36.4390%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.1890%" y="597" width="0.0801%" height="15" fill="rgb(210,190,26)" fg:x="452" fg:w="1"/><text x="36.4390%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.1890%" y="581" width="0.0801%" height="15" fill="rgb(223,147,5)" fg:x="452" fg:w="1"/><text x="36.4390%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.1890%" y="565" width="0.0801%" height="15" fill="rgb(207,14,23)" fg:x="452" fg:w="1"/><text x="36.4390%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.1890%" y="549" width="0.0801%" height="15" fill="rgb(211,195,53)" fg:x="452" fg:w="1"/><text x="36.4390%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="36.2690%" y="677" width="0.1601%" height="15" fill="rgb(237,75,46)" fg:x="453" fg:w="2"/><text x="36.5190%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="36.3491%" y="661" width="0.0801%" height="15" fill="rgb(254,55,14)" fg:x="454" fg:w="1"/><text x="36.5991%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.3491%" y="645" width="0.0801%" height="15" fill="rgb(230,185,30)" fg:x="454" fg:w="1"/><text x="36.5991%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3491%" y="629" width="0.0801%" height="15" fill="rgb(220,14,11)" fg:x="454" fg:w="1"/><text x="36.5991%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3491%" y="613" width="0.0801%" height="15" fill="rgb(215,169,44)" fg:x="454" fg:w="1"/><text x="36.5991%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.3491%" y="597" width="0.0801%" height="15" fill="rgb(253,203,20)" fg:x="454" fg:w="1"/><text x="36.5991%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.4291%" y="613" width="0.0801%" height="15" fill="rgb(229,225,17)" fg:x="455" fg:w="1"/><text x="36.6791%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5092%" y="597" width="0.0801%" height="15" fill="rgb(236,76,26)" fg:x="456" fg:w="1"/><text x="36.7592%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5092%" y="581" width="0.0801%" height="15" fill="rgb(234,15,30)" fg:x="456" fg:w="1"/><text x="36.7592%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5092%" y="565" width="0.0801%" height="15" fill="rgb(211,113,48)" fg:x="456" fg:w="1"/><text x="36.7592%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5092%" y="549" width="0.0801%" height="15" fill="rgb(221,31,36)" fg:x="456" fg:w="1"/><text x="36.7592%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5092%" y="533" width="0.0801%" height="15" fill="rgb(215,118,52)" fg:x="456" fg:w="1"/><text x="36.7592%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.5092%" y="517" width="0.0801%" height="15" fill="rgb(241,151,27)" fg:x="456" fg:w="1"/><text x="36.7592%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.5092%" y="501" width="0.0801%" height="15" fill="rgb(253,51,3)" fg:x="456" fg:w="1"/><text x="36.7592%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.5092%" y="485" width="0.0801%" height="15" fill="rgb(216,201,24)" fg:x="456" fg:w="1"/><text x="36.7592%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.5092%" y="469" width="0.0801%" height="15" fill="rgb(231,107,4)" fg:x="456" fg:w="1"/><text x="36.7592%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.5092%" y="453" width="0.0801%" height="15" fill="rgb(243,97,54)" fg:x="456" fg:w="1"/><text x="36.7592%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.5092%" y="437" width="0.0801%" height="15" fill="rgb(221,32,51)" fg:x="456" fg:w="1"/><text x="36.7592%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.5092%" y="421" width="0.0801%" height="15" fill="rgb(218,171,35)" fg:x="456" fg:w="1"/><text x="36.7592%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.5092%" y="405" width="0.0801%" height="15" fill="rgb(214,20,53)" fg:x="456" fg:w="1"/><text x="36.7592%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.5092%" y="389" width="0.0801%" height="15" fill="rgb(239,9,52)" fg:x="456" fg:w="1"/><text x="36.7592%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5092%" y="373" width="0.0801%" height="15" fill="rgb(215,114,45)" fg:x="456" fg:w="1"/><text x="36.7592%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.5893%" y="565" width="0.0801%" height="15" fill="rgb(208,118,9)" fg:x="457" fg:w="1"/><text x="36.8393%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.5893%" y="597" width="0.1601%" height="15" fill="rgb(235,7,39)" fg:x="457" fg:w="2"/><text x="36.8393%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="36.5893%" y="581" width="0.1601%" height="15" fill="rgb(243,225,15)" fg:x="457" fg:w="2"/><text x="36.8393%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.6693%" y="565" width="0.0801%" height="15" fill="rgb(225,216,18)" fg:x="458" fg:w="1"/><text x="36.9193%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.6693%" y="549" width="0.0801%" height="15" fill="rgb(233,36,38)" fg:x="458" fg:w="1"/><text x="36.9193%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.6693%" y="533" width="0.0801%" height="15" fill="rgb(239,88,23)" fg:x="458" fg:w="1"/><text x="36.9193%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7494%" y="533" width="0.0801%" height="15" fill="rgb(219,181,35)" fg:x="459" fg:w="1"/><text x="36.9994%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.7494%" y="517" width="0.0801%" height="15" fill="rgb(215,18,46)" fg:x="459" fg:w="1"/><text x="36.9994%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="36.4291%" y="629" width="0.4804%" height="15" fill="rgb(241,38,11)" fg:x="455" fg:w="6"/><text x="36.6791%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="36.5092%" y="613" width="0.4003%" height="15" fill="rgb(248,169,45)" fg:x="456" fg:w="5"/><text x="36.7592%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.7494%" y="597" width="0.1601%" height="15" fill="rgb(239,50,49)" fg:x="459" fg:w="2"/><text x="36.9994%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.7494%" y="581" width="0.1601%" height="15" fill="rgb(231,96,31)" fg:x="459" fg:w="2"/><text x="36.9994%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="36.7494%" y="565" width="0.1601%" height="15" fill="rgb(224,193,37)" fg:x="459" fg:w="2"/><text x="36.9994%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.7494%" y="549" width="0.1601%" height="15" fill="rgb(227,153,50)" fg:x="459" fg:w="2"/><text x="36.9994%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8295%" y="533" width="0.0801%" height="15" fill="rgb(249,228,3)" fg:x="460" fg:w="1"/><text x="37.0795%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8295%" y="517" width="0.0801%" height="15" fill="rgb(219,164,43)" fg:x="460" fg:w="1"/><text x="37.0795%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="36.8295%" y="501" width="0.0801%" height="15" fill="rgb(216,45,41)" fg:x="460" fg:w="1"/><text x="37.0795%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.8295%" y="485" width="0.0801%" height="15" fill="rgb(210,226,51)" fg:x="460" fg:w="1"/><text x="37.0795%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (226 samples, 18.09%)</title><rect x="18.8951%" y="725" width="18.0945%" height="15" fill="rgb(209,117,49)" fg:x="236" fg:w="226"/><text x="19.1451%" y="735.50">plugins_core::build::BuildSu..</text></g><g><title>plugins_core::build::Build::occupying (20 samples, 1.60%)</title><rect x="35.3883%" y="709" width="1.6013%" height="15" fill="rgb(206,196,24)" fg:x="442" fg:w="20"/><text x="35.6383%" y="719.50"></text></g><g><title>plugins_core::tools::set_occupying (14 samples, 1.12%)</title><rect x="35.8687%" y="693" width="1.1209%" height="15" fill="rgb(253,218,3)" fg:x="448" fg:w="14"/><text x="36.1187%" y="703.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (7 samples, 0.56%)</title><rect x="36.4291%" y="677" width="0.5604%" height="15" fill="rgb(252,166,2)" fg:x="455" fg:w="7"/><text x="36.6791%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="36.4291%" y="661" width="0.5604%" height="15" fill="rgb(236,218,26)" fg:x="455" fg:w="7"/><text x="36.6791%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="36.4291%" y="645" width="0.5604%" height="15" fill="rgb(254,84,19)" fg:x="455" fg:w="7"/><text x="36.6791%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="36.9095%" y="629" width="0.0801%" height="15" fill="rgb(219,137,29)" fg:x="461" fg:w="1"/><text x="37.1595%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.9095%" y="613" width="0.0801%" height="15" fill="rgb(227,47,52)" fg:x="461" fg:w="1"/><text x="37.1595%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.9095%" y="597" width="0.0801%" height="15" fill="rgb(229,167,24)" fg:x="461" fg:w="1"/><text x="37.1595%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.9095%" y="581" width="0.0801%" height="15" fill="rgb(233,164,1)" fg:x="461" fg:w="1"/><text x="37.1595%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.9095%" y="565" width="0.0801%" height="15" fill="rgb(218,88,48)" fg:x="461" fg:w="1"/><text x="37.1595%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.9095%" y="549" width="0.0801%" height="15" fill="rgb(226,214,24)" fg:x="461" fg:w="1"/><text x="37.1595%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="37.0697%" y="693" width="0.0801%" height="15" fill="rgb(233,29,12)" fg:x="463" fg:w="1"/><text x="37.3197%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="37.0697%" y="677" width="0.0801%" height="15" fill="rgb(219,120,34)" fg:x="463" fg:w="1"/><text x="37.3197%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1497%" y="645" width="0.0801%" height="15" fill="rgb(226,78,44)" fg:x="464" fg:w="1"/><text x="37.3997%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.2298%" y="645" width="0.0801%" height="15" fill="rgb(240,15,48)" fg:x="465" fg:w="1"/><text x="37.4798%" y="655.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (5 samples, 0.40%)</title><rect x="36.9896%" y="725" width="0.4003%" height="15" fill="rgb(253,176,7)" fg:x="462" fg:w="5"/><text x="37.2396%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (5 samples, 0.40%)</title><rect x="36.9896%" y="709" width="0.4003%" height="15" fill="rgb(206,166,28)" fg:x="462" fg:w="5"/><text x="37.2396%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="37.1497%" y="693" width="0.2402%" height="15" fill="rgb(241,53,51)" fg:x="464" fg:w="3"/><text x="37.3997%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="37.1497%" y="677" width="0.2402%" height="15" fill="rgb(249,112,30)" fg:x="464" fg:w="3"/><text x="37.3997%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="37.1497%" y="661" width="0.2402%" height="15" fill="rgb(217,85,30)" fg:x="464" fg:w="3"/><text x="37.3997%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.3098%" y="645" width="0.0801%" height="15" fill="rgb(233,49,7)" fg:x="466" fg:w="1"/><text x="37.5598%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.3098%" y="629" width="0.0801%" height="15" fill="rgb(234,109,9)" fg:x="466" fg:w="1"/><text x="37.5598%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.3098%" y="613" width="0.0801%" height="15" fill="rgb(253,95,22)" fg:x="466" fg:w="1"/><text x="37.5598%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.4700%" y="293" width="0.0801%" height="15" fill="rgb(233,176,25)" fg:x="468" fg:w="1"/><text x="37.7200%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.4700%" y="277" width="0.0801%" height="15" fill="rgb(236,33,39)" fg:x="468" fg:w="1"/><text x="37.7200%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.4700%" y="261" width="0.0801%" height="15" fill="rgb(223,226,42)" fg:x="468" fg:w="1"/><text x="37.7200%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="37.4700%" y="245" width="0.0801%" height="15" fill="rgb(216,99,33)" fg:x="468" fg:w="1"/><text x="37.7200%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.4700%" y="229" width="0.0801%" height="15" fill="rgb(235,84,23)" fg:x="468" fg:w="1"/><text x="37.7200%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="37.4700%" y="213" width="0.0801%" height="15" fill="rgb(232,2,27)" fg:x="468" fg:w="1"/><text x="37.7200%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="37.4700%" y="197" width="0.0801%" height="15" fill="rgb(241,23,22)" fg:x="468" fg:w="1"/><text x="37.7200%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="37.4700%" y="181" width="0.0801%" height="15" fill="rgb(211,73,27)" fg:x="468" fg:w="1"/><text x="37.7200%" y="191.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="37.4700%" y="165" width="0.0801%" height="15" fill="rgb(235,109,49)" fg:x="468" fg:w="1"/><text x="37.7200%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="37.4700%" y="149" width="0.0801%" height="15" fill="rgb(230,99,29)" fg:x="468" fg:w="1"/><text x="37.7200%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="37.4700%" y="389" width="0.1601%" height="15" fill="rgb(245,199,7)" fg:x="468" fg:w="2"/><text x="37.7200%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="37.4700%" y="373" width="0.1601%" height="15" fill="rgb(217,179,10)" fg:x="468" fg:w="2"/><text x="37.7200%" y="383.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="37.4700%" y="357" width="0.1601%" height="15" fill="rgb(254,99,47)" fg:x="468" fg:w="2"/><text x="37.7200%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="37.4700%" y="341" width="0.1601%" height="15" fill="rgb(251,121,7)" fg:x="468" fg:w="2"/><text x="37.7200%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="37.4700%" y="325" width="0.1601%" height="15" fill="rgb(250,177,26)" fg:x="468" fg:w="2"/><text x="37.7200%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="37.4700%" y="309" width="0.1601%" height="15" fill="rgb(232,88,15)" fg:x="468" fg:w="2"/><text x="37.7200%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.5500%" y="293" width="0.0801%" height="15" fill="rgb(251,54,54)" fg:x="469" fg:w="1"/><text x="37.8000%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="37.3899%" y="677" width="0.3203%" height="15" fill="rgb(208,177,15)" fg:x="467" fg:w="4"/><text x="37.6399%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="37.3899%" y="661" width="0.3203%" height="15" fill="rgb(205,97,32)" fg:x="467" fg:w="4"/><text x="37.6399%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="37.3899%" y="645" width="0.3203%" height="15" fill="rgb(217,192,13)" fg:x="467" fg:w="4"/><text x="37.6399%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="37.3899%" y="629" width="0.3203%" height="15" fill="rgb(215,163,41)" fg:x="467" fg:w="4"/><text x="37.6399%" y="639.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="37.3899%" y="613" width="0.3203%" height="15" fill="rgb(246,83,29)" fg:x="467" fg:w="4"/><text x="37.6399%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="37.3899%" y="597" width="0.3203%" height="15" fill="rgb(219,2,45)" fg:x="467" fg:w="4"/><text x="37.6399%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="37.3899%" y="581" width="0.3203%" height="15" fill="rgb(242,215,33)" fg:x="467" fg:w="4"/><text x="37.6399%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="37.3899%" y="565" width="0.3203%" height="15" fill="rgb(217,1,6)" fg:x="467" fg:w="4"/><text x="37.6399%" y="575.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="37.3899%" y="549" width="0.3203%" height="15" fill="rgb(207,85,52)" fg:x="467" fg:w="4"/><text x="37.6399%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="37.3899%" y="533" width="0.3203%" height="15" fill="rgb(231,171,19)" fg:x="467" fg:w="4"/><text x="37.6399%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="37.3899%" y="517" width="0.3203%" height="15" fill="rgb(207,128,4)" fg:x="467" fg:w="4"/><text x="37.6399%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="37.3899%" y="501" width="0.3203%" height="15" fill="rgb(219,208,4)" fg:x="467" fg:w="4"/><text x="37.6399%" y="511.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="37.3899%" y="485" width="0.3203%" height="15" fill="rgb(235,161,42)" fg:x="467" fg:w="4"/><text x="37.6399%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="37.3899%" y="469" width="0.3203%" height="15" fill="rgb(247,218,18)" fg:x="467" fg:w="4"/><text x="37.6399%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="37.4700%" y="453" width="0.2402%" height="15" fill="rgb(232,114,51)" fg:x="468" fg:w="3"/><text x="37.7200%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="37.4700%" y="437" width="0.2402%" height="15" fill="rgb(222,95,3)" fg:x="468" fg:w="3"/><text x="37.7200%" y="447.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="37.4700%" y="421" width="0.2402%" height="15" fill="rgb(240,65,29)" fg:x="468" fg:w="3"/><text x="37.7200%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="37.4700%" y="405" width="0.2402%" height="15" fill="rgb(249,209,20)" fg:x="468" fg:w="3"/><text x="37.7200%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="37.6301%" y="389" width="0.0801%" height="15" fill="rgb(241,48,37)" fg:x="470" fg:w="1"/><text x="37.8801%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="37.7102%" y="677" width="0.0801%" height="15" fill="rgb(230,140,42)" fg:x="471" fg:w="1"/><text x="37.9602%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="37.7102%" y="661" width="0.0801%" height="15" fill="rgb(230,176,45)" fg:x="471" fg:w="1"/><text x="37.9602%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7102%" y="645" width="0.0801%" height="15" fill="rgb(245,112,21)" fg:x="471" fg:w="1"/><text x="37.9602%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.7902%" y="597" width="0.2402%" height="15" fill="rgb(207,183,35)" fg:x="472" fg:w="3"/><text x="38.0402%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.7902%" y="581" width="0.2402%" height="15" fill="rgb(227,44,33)" fg:x="472" fg:w="3"/><text x="38.0402%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.8703%" y="565" width="0.1601%" height="15" fill="rgb(246,120,21)" fg:x="473" fg:w="2"/><text x="38.1203%" y="575.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="37.7902%" y="629" width="0.3203%" height="15" fill="rgb(235,57,52)" fg:x="472" fg:w="4"/><text x="38.0402%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="37.7902%" y="613" width="0.3203%" height="15" fill="rgb(238,84,10)" fg:x="472" fg:w="4"/><text x="38.0402%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="38.0304%" y="597" width="0.0801%" height="15" fill="rgb(251,200,32)" fg:x="475" fg:w="1"/><text x="38.2804%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.0304%" y="581" width="0.0801%" height="15" fill="rgb(247,159,13)" fg:x="475" fg:w="1"/><text x="38.2804%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="38.0304%" y="565" width="0.0801%" height="15" fill="rgb(238,64,4)" fg:x="475" fg:w="1"/><text x="38.2804%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="38.0304%" y="549" width="0.0801%" height="15" fill="rgb(221,131,51)" fg:x="475" fg:w="1"/><text x="38.2804%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="38.0304%" y="533" width="0.0801%" height="15" fill="rgb(242,5,29)" fg:x="475" fg:w="1"/><text x="38.2804%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.0304%" y="517" width="0.0801%" height="15" fill="rgb(214,130,32)" fg:x="475" fg:w="1"/><text x="38.2804%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.0304%" y="501" width="0.0801%" height="15" fill="rgb(244,210,16)" fg:x="475" fg:w="1"/><text x="38.2804%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="37.3899%" y="693" width="0.8006%" height="15" fill="rgb(234,48,26)" fg:x="467" fg:w="10"/><text x="37.6399%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="37.7902%" y="677" width="0.4003%" height="15" fill="rgb(231,82,38)" fg:x="472" fg:w="5"/><text x="38.0402%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="37.7902%" y="661" width="0.4003%" height="15" fill="rgb(254,128,41)" fg:x="472" fg:w="5"/><text x="38.0402%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="37.7902%" y="645" width="0.4003%" height="15" fill="rgb(212,73,49)" fg:x="472" fg:w="5"/><text x="38.0402%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.1105%" y="629" width="0.0801%" height="15" fill="rgb(205,62,54)" fg:x="476" fg:w="1"/><text x="38.3605%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.1105%" y="613" width="0.0801%" height="15" fill="rgb(228,0,8)" fg:x="476" fg:w="1"/><text x="38.3605%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.1105%" y="597" width="0.0801%" height="15" fill="rgb(251,28,17)" fg:x="476" fg:w="1"/><text x="38.3605%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="38.1906%" y="677" width="0.0801%" height="15" fill="rgb(238,105,27)" fg:x="477" fg:w="1"/><text x="38.4406%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="38.1906%" y="661" width="0.0801%" height="15" fill="rgb(237,216,33)" fg:x="477" fg:w="1"/><text x="38.4406%" y="671.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="38.1906%" y="645" width="0.0801%" height="15" fill="rgb(229,228,25)" fg:x="477" fg:w="1"/><text x="38.4406%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.2706%" y="629" width="0.0801%" height="15" fill="rgb(233,75,23)" fg:x="478" fg:w="1"/><text x="38.5206%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="38.2706%" y="661" width="0.1601%" height="15" fill="rgb(231,207,16)" fg:x="478" fg:w="2"/><text x="38.5206%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.2706%" y="645" width="0.1601%" height="15" fill="rgb(231,191,45)" fg:x="478" fg:w="2"/><text x="38.5206%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.3507%" y="629" width="0.0801%" height="15" fill="rgb(224,133,17)" fg:x="479" fg:w="1"/><text x="38.6007%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="38.3507%" y="613" width="0.0801%" height="15" fill="rgb(209,178,27)" fg:x="479" fg:w="1"/><text x="38.6007%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="38.1906%" y="693" width="0.3203%" height="15" fill="rgb(218,37,11)" fg:x="477" fg:w="4"/><text x="38.4406%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="38.2706%" y="677" width="0.2402%" height="15" fill="rgb(251,226,25)" fg:x="478" fg:w="3"/><text x="38.5206%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="38.4307%" y="661" width="0.0801%" height="15" fill="rgb(209,222,27)" fg:x="480" fg:w="1"/><text x="38.6807%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.4307%" y="645" width="0.0801%" height="15" fill="rgb(238,22,21)" fg:x="480" fg:w="1"/><text x="38.6807%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.4307%" y="629" width="0.0801%" height="15" fill="rgb(233,161,25)" fg:x="480" fg:w="1"/><text x="38.6807%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.4307%" y="613" width="0.0801%" height="15" fill="rgb(226,122,53)" fg:x="480" fg:w="1"/><text x="38.6807%" y="623.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="38.4307%" y="597" width="0.0801%" height="15" fill="rgb(220,123,17)" fg:x="480" fg:w="1"/><text x="38.6807%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (15 samples, 1.20%)</title><rect x="37.3899%" y="725" width="1.2010%" height="15" fill="rgb(230,224,35)" fg:x="467" fg:w="15"/><text x="37.6399%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (15 samples, 1.20%)</title><rect x="37.3899%" y="709" width="1.2010%" height="15" fill="rgb(246,83,8)" fg:x="467" fg:w="15"/><text x="37.6399%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="38.5108%" y="693" width="0.0801%" height="15" fill="rgb(230,214,17)" fg:x="481" fg:w="1"/><text x="38.7608%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="38.5108%" y="677" width="0.0801%" height="15" fill="rgb(222,97,18)" fg:x="481" fg:w="1"/><text x="38.7608%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="38.5108%" y="661" width="0.0801%" height="15" fill="rgb(206,79,1)" fg:x="481" fg:w="1"/><text x="38.7608%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="38.5108%" y="645" width="0.0801%" height="15" fill="rgb(214,121,34)" fg:x="481" fg:w="1"/><text x="38.7608%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.5108%" y="629" width="0.0801%" height="15" fill="rgb(249,199,46)" fg:x="481" fg:w="1"/><text x="38.7608%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.5108%" y="613" width="0.0801%" height="15" fill="rgb(214,222,46)" fg:x="481" fg:w="1"/><text x="38.7608%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5108%" y="597" width="0.0801%" height="15" fill="rgb(248,168,30)" fg:x="481" fg:w="1"/><text x="38.7608%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="38.5909%" y="693" width="0.0801%" height="15" fill="rgb(226,14,28)" fg:x="482" fg:w="1"/><text x="38.8409%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="38.5909%" y="677" width="0.0801%" height="15" fill="rgb(253,123,1)" fg:x="482" fg:w="1"/><text x="38.8409%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="38.5909%" y="661" width="0.0801%" height="15" fill="rgb(225,24,42)" fg:x="482" fg:w="1"/><text x="38.8409%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.5909%" y="645" width="0.0801%" height="15" fill="rgb(216,161,37)" fg:x="482" fg:w="1"/><text x="38.8409%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.5909%" y="629" width="0.0801%" height="15" fill="rgb(251,164,26)" fg:x="482" fg:w="1"/><text x="38.8409%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.5909%" y="613" width="0.0801%" height="15" fill="rgb(219,177,3)" fg:x="482" fg:w="1"/><text x="38.8409%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="38.5909%" y="597" width="0.0801%" height="15" fill="rgb(222,65,0)" fg:x="482" fg:w="1"/><text x="38.8409%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.5909%" y="581" width="0.0801%" height="15" fill="rgb(223,69,54)" fg:x="482" fg:w="1"/><text x="38.8409%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.5909%" y="565" width="0.0801%" height="15" fill="rgb(235,30,27)" fg:x="482" fg:w="1"/><text x="38.8409%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.5909%" y="549" width="0.0801%" height="15" fill="rgb(220,183,50)" fg:x="482" fg:w="1"/><text x="38.8409%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="38.5909%" y="533" width="0.0801%" height="15" fill="rgb(248,198,15)" fg:x="482" fg:w="1"/><text x="38.8409%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.5909%" y="517" width="0.0801%" height="15" fill="rgb(222,211,4)" fg:x="482" fg:w="1"/><text x="38.8409%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.5909%" y="501" width="0.0801%" height="15" fill="rgb(214,102,34)" fg:x="482" fg:w="1"/><text x="38.8409%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.5909%" y="485" width="0.0801%" height="15" fill="rgb(245,92,5)" fg:x="482" fg:w="1"/><text x="38.8409%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.5909%" y="469" width="0.0801%" height="15" fill="rgb(252,72,51)" fg:x="482" fg:w="1"/><text x="38.8409%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.5909%" y="453" width="0.0801%" height="15" fill="rgb(252,208,19)" fg:x="482" fg:w="1"/><text x="38.8409%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="38.5909%" y="437" width="0.0801%" height="15" fill="rgb(211,69,7)" fg:x="482" fg:w="1"/><text x="38.8409%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="38.5909%" y="421" width="0.0801%" height="15" fill="rgb(211,27,16)" fg:x="482" fg:w="1"/><text x="38.8409%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="38.5909%" y="405" width="0.0801%" height="15" fill="rgb(219,216,14)" fg:x="482" fg:w="1"/><text x="38.8409%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="38.5909%" y="389" width="0.0801%" height="15" fill="rgb(219,71,8)" fg:x="482" fg:w="1"/><text x="38.8409%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="38.5909%" y="373" width="0.0801%" height="15" fill="rgb(223,170,53)" fg:x="482" fg:w="1"/><text x="38.8409%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="38.5909%" y="357" width="0.0801%" height="15" fill="rgb(246,21,26)" fg:x="482" fg:w="1"/><text x="38.8409%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="38.5909%" y="341" width="0.0801%" height="15" fill="rgb(248,20,46)" fg:x="482" fg:w="1"/><text x="38.8409%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="38.5909%" y="325" width="0.0801%" height="15" fill="rgb(252,94,11)" fg:x="482" fg:w="1"/><text x="38.8409%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="38.5909%" y="309" width="0.0801%" height="15" fill="rgb(236,163,8)" fg:x="482" fg:w="1"/><text x="38.8409%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="38.5909%" y="293" width="0.0801%" height="15" fill="rgb(217,221,45)" fg:x="482" fg:w="1"/><text x="38.8409%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="38.5909%" y="277" width="0.0801%" height="15" fill="rgb(238,38,17)" fg:x="482" fg:w="1"/><text x="38.8409%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="38.5909%" y="261" width="0.0801%" height="15" fill="rgb(242,210,23)" fg:x="482" fg:w="1"/><text x="38.8409%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="38.5909%" y="245" width="0.0801%" height="15" fill="rgb(250,86,53)" fg:x="482" fg:w="1"/><text x="38.8409%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="38.6709%" y="693" width="0.0801%" height="15" fill="rgb(223,168,25)" fg:x="483" fg:w="1"/><text x="38.9209%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.6709%" y="677" width="0.0801%" height="15" fill="rgb(251,189,4)" fg:x="483" fg:w="1"/><text x="38.9209%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.7510%" y="677" width="0.1601%" height="15" fill="rgb(245,19,28)" fg:x="484" fg:w="2"/><text x="39.0010%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.7510%" y="661" width="0.1601%" height="15" fill="rgb(207,10,34)" fg:x="484" fg:w="2"/><text x="39.0010%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.8311%" y="645" width="0.0801%" height="15" fill="rgb(235,153,31)" fg:x="485" fg:w="1"/><text x="39.0811%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.8311%" y="629" width="0.0801%" height="15" fill="rgb(228,72,37)" fg:x="485" fg:w="1"/><text x="39.0811%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.8311%" y="613" width="0.0801%" height="15" fill="rgb(215,15,16)" fg:x="485" fg:w="1"/><text x="39.0811%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.8311%" y="597" width="0.0801%" height="15" fill="rgb(250,119,29)" fg:x="485" fg:w="1"/><text x="39.0811%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.8311%" y="581" width="0.0801%" height="15" fill="rgb(214,59,1)" fg:x="485" fg:w="1"/><text x="39.0811%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.8311%" y="565" width="0.0801%" height="15" fill="rgb(223,109,25)" fg:x="485" fg:w="1"/><text x="39.0811%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.8311%" y="549" width="0.0801%" height="15" fill="rgb(230,198,22)" fg:x="485" fg:w="1"/><text x="39.0811%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.8311%" y="533" width="0.0801%" height="15" fill="rgb(245,184,46)" fg:x="485" fg:w="1"/><text x="39.0811%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.8311%" y="517" width="0.0801%" height="15" fill="rgb(253,73,16)" fg:x="485" fg:w="1"/><text x="39.0811%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.8311%" y="501" width="0.0801%" height="15" fill="rgb(206,94,45)" fg:x="485" fg:w="1"/><text x="39.0811%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.0713%" y="613" width="0.0801%" height="15" fill="rgb(236,83,27)" fg:x="488" fg:w="1"/><text x="39.3213%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="39.0713%" y="597" width="0.0801%" height="15" fill="rgb(220,196,8)" fg:x="488" fg:w="1"/><text x="39.3213%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.0713%" y="581" width="0.0801%" height="15" fill="rgb(254,185,14)" fg:x="488" fg:w="1"/><text x="39.3213%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0713%" y="565" width="0.0801%" height="15" fill="rgb(226,50,22)" fg:x="488" fg:w="1"/><text x="39.3213%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="38.9111%" y="677" width="0.3203%" height="15" fill="rgb(253,147,0)" fg:x="486" fg:w="4"/><text x="39.1611%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="38.9111%" y="661" width="0.3203%" height="15" fill="rgb(252,46,33)" fg:x="486" fg:w="4"/><text x="39.1611%" y="671.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="38.9912%" y="645" width="0.2402%" height="15" fill="rgb(242,22,54)" fg:x="487" fg:w="3"/><text x="39.2412%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="38.9912%" y="629" width="0.2402%" height="15" fill="rgb(223,178,32)" fg:x="487" fg:w="3"/><text x="39.2412%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="39.1513%" y="613" width="0.0801%" height="15" fill="rgb(214,106,53)" fg:x="489" fg:w="1"/><text x="39.4013%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.1513%" y="597" width="0.0801%" height="15" fill="rgb(232,65,50)" fg:x="489" fg:w="1"/><text x="39.4013%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="39.1513%" y="581" width="0.0801%" height="15" fill="rgb(231,110,28)" fg:x="489" fg:w="1"/><text x="39.4013%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="39.1513%" y="565" width="0.0801%" height="15" fill="rgb(216,71,40)" fg:x="489" fg:w="1"/><text x="39.4013%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.1513%" y="549" width="0.0801%" height="15" fill="rgb(229,89,53)" fg:x="489" fg:w="1"/><text x="39.4013%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.1513%" y="533" width="0.0801%" height="15" fill="rgb(210,124,14)" fg:x="489" fg:w="1"/><text x="39.4013%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="38.7510%" y="693" width="0.5604%" height="15" fill="rgb(236,213,6)" fg:x="484" fg:w="7"/><text x="39.0010%" y="703.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="39.2314%" y="677" width="0.0801%" height="15" fill="rgb(228,41,5)" fg:x="490" fg:w="1"/><text x="39.4814%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.2314%" y="661" width="0.0801%" height="15" fill="rgb(221,167,25)" fg:x="490" fg:w="1"/><text x="39.4814%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.2314%" y="645" width="0.0801%" height="15" fill="rgb(228,144,37)" fg:x="490" fg:w="1"/><text x="39.4814%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="39.2314%" y="629" width="0.0801%" height="15" fill="rgb(227,189,38)" fg:x="490" fg:w="1"/><text x="39.4814%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="38.5909%" y="709" width="0.8006%" height="15" fill="rgb(218,8,2)" fg:x="482" fg:w="10"/><text x="38.8409%" y="719.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="39.3114%" y="693" width="0.0801%" height="15" fill="rgb(209,61,28)" fg:x="491" fg:w="1"/><text x="39.5614%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.3114%" y="677" width="0.0801%" height="15" fill="rgb(233,140,39)" fg:x="491" fg:w="1"/><text x="39.5614%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="39.3915%" y="709" width="0.0801%" height="15" fill="rgb(251,66,48)" fg:x="492" fg:w="1"/><text x="39.6415%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="39.4716%" y="709" width="0.0801%" height="15" fill="rgb(210,44,45)" fg:x="493" fg:w="1"/><text x="39.7216%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="39.4716%" y="693" width="0.0801%" height="15" fill="rgb(214,136,46)" fg:x="493" fg:w="1"/><text x="39.7216%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="39.4716%" y="677" width="0.0801%" height="15" fill="rgb(207,130,50)" fg:x="493" fg:w="1"/><text x="39.7216%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="39.4716%" y="661" width="0.0801%" height="15" fill="rgb(228,102,49)" fg:x="493" fg:w="1"/><text x="39.7216%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="39.4716%" y="645" width="0.0801%" height="15" fill="rgb(253,55,1)" fg:x="493" fg:w="1"/><text x="39.7216%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.4716%" y="629" width="0.0801%" height="15" fill="rgb(238,222,9)" fg:x="493" fg:w="1"/><text x="39.7216%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="39.5516%" y="693" width="0.0801%" height="15" fill="rgb(246,99,6)" fg:x="494" fg:w="1"/><text x="39.8016%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.5516%" y="677" width="0.0801%" height="15" fill="rgb(219,110,26)" fg:x="494" fg:w="1"/><text x="39.8016%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="39.6317%" y="693" width="0.1601%" height="15" fill="rgb(239,160,33)" fg:x="495" fg:w="2"/><text x="39.8817%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="39.6317%" y="677" width="0.1601%" height="15" fill="rgb(220,202,23)" fg:x="495" fg:w="2"/><text x="39.8817%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="39.6317%" y="661" width="0.1601%" height="15" fill="rgb(208,80,26)" fg:x="495" fg:w="2"/><text x="39.8817%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.7118%" y="645" width="0.0801%" height="15" fill="rgb(243,85,7)" fg:x="496" fg:w="1"/><text x="39.9618%" y="655.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="39.7118%" y="629" width="0.0801%" height="15" fill="rgb(228,77,47)" fg:x="496" fg:w="1"/><text x="39.9618%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="39.7118%" y="613" width="0.0801%" height="15" fill="rgb(212,226,8)" fg:x="496" fg:w="1"/><text x="39.9618%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.7118%" y="597" width="0.0801%" height="15" fill="rgb(241,120,54)" fg:x="496" fg:w="1"/><text x="39.9618%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.7118%" y="581" width="0.0801%" height="15" fill="rgb(226,80,16)" fg:x="496" fg:w="1"/><text x="39.9618%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.7118%" y="565" width="0.0801%" height="15" fill="rgb(240,76,13)" fg:x="496" fg:w="1"/><text x="39.9618%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.7118%" y="549" width="0.0801%" height="15" fill="rgb(252,74,8)" fg:x="496" fg:w="1"/><text x="39.9618%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.7118%" y="533" width="0.0801%" height="15" fill="rgb(244,155,2)" fg:x="496" fg:w="1"/><text x="39.9618%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.7118%" y="517" width="0.0801%" height="15" fill="rgb(215,81,35)" fg:x="496" fg:w="1"/><text x="39.9618%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.7118%" y="501" width="0.0801%" height="15" fill="rgb(206,55,2)" fg:x="496" fg:w="1"/><text x="39.9618%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.7918%" y="677" width="0.0801%" height="15" fill="rgb(231,2,34)" fg:x="497" fg:w="1"/><text x="40.0418%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="39.8719%" y="661" width="0.0801%" height="15" fill="rgb(242,176,48)" fg:x="498" fg:w="1"/><text x="40.1219%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="39.8719%" y="645" width="0.0801%" height="15" fill="rgb(249,31,36)" fg:x="498" fg:w="1"/><text x="40.1219%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.8719%" y="629" width="0.0801%" height="15" fill="rgb(205,18,17)" fg:x="498" fg:w="1"/><text x="40.1219%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.8719%" y="613" width="0.0801%" height="15" fill="rgb(254,130,5)" fg:x="498" fg:w="1"/><text x="40.1219%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.8719%" y="597" width="0.0801%" height="15" fill="rgb(229,42,45)" fg:x="498" fg:w="1"/><text x="40.1219%" y="607.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (438 samples, 35.07%)</title><rect x="4.9640%" y="741" width="35.0681%" height="15" fill="rgb(245,95,25)" fg:x="62" fg:w="438"/><text x="5.2140%" y="751.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepa..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (18 samples, 1.44%)</title><rect x="38.5909%" y="725" width="1.4412%" height="15" fill="rgb(249,193,38)" fg:x="482" fg:w="18"/><text x="38.8409%" y="735.50"></text></g><g><title>plugins_core::build::Build::new_world (6 samples, 0.48%)</title><rect x="39.5516%" y="709" width="0.4804%" height="15" fill="rgb(241,140,43)" fg:x="494" fg:w="6"/><text x="39.8016%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::new (3 samples, 0.24%)</title><rect x="39.7918%" y="693" width="0.2402%" height="15" fill="rgb(245,78,48)" fg:x="497" fg:w="3"/><text x="40.0418%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="39.8719%" y="677" width="0.1601%" height="15" fill="rgb(214,92,39)" fg:x="498" fg:w="2"/><text x="40.1219%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9520%" y="661" width="0.0801%" height="15" fill="rgb(211,189,14)" fg:x="499" fg:w="1"/><text x="40.2020%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1121%" y="725" width="0.0801%" height="15" fill="rgb(218,7,24)" fg:x="501" fg:w="1"/><text x="40.3621%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (3 samples, 0.24%)</title><rect x="40.0320%" y="741" width="0.2402%" height="15" fill="rgb(224,200,49)" fg:x="500" fg:w="3"/><text x="40.2820%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="40.1922%" y="725" width="0.0801%" height="15" fill="rgb(218,210,14)" fg:x="502" fg:w="1"/><text x="40.4422%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1922%" y="709" width="0.0801%" height="15" fill="rgb(234,142,31)" fg:x="502" fg:w="1"/><text x="40.4422%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3523%" y="709" width="0.0801%" height="15" fill="rgb(227,165,2)" fg:x="504" fg:w="1"/><text x="40.6023%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3523%" y="693" width="0.0801%" height="15" fill="rgb(232,44,46)" fg:x="504" fg:w="1"/><text x="40.6023%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.3523%" y="677" width="0.0801%" height="15" fill="rgb(236,149,47)" fg:x="504" fg:w="1"/><text x="40.6023%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.3523%" y="661" width="0.0801%" height="15" fill="rgb(227,45,31)" fg:x="504" fg:w="1"/><text x="40.6023%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.3523%" y="645" width="0.0801%" height="15" fill="rgb(240,176,51)" fg:x="504" fg:w="1"/><text x="40.6023%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3523%" y="629" width="0.0801%" height="15" fill="rgb(249,146,41)" fg:x="504" fg:w="1"/><text x="40.6023%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3523%" y="613" width="0.0801%" height="15" fill="rgb(213,208,4)" fg:x="504" fg:w="1"/><text x="40.6023%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.3523%" y="597" width="0.0801%" height="15" fill="rgb(245,84,36)" fg:x="504" fg:w="1"/><text x="40.6023%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.3523%" y="581" width="0.0801%" height="15" fill="rgb(254,84,18)" fg:x="504" fg:w="1"/><text x="40.6023%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.3523%" y="565" width="0.0801%" height="15" fill="rgb(225,38,54)" fg:x="504" fg:w="1"/><text x="40.6023%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.3523%" y="549" width="0.0801%" height="15" fill="rgb(246,50,30)" fg:x="504" fg:w="1"/><text x="40.6023%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3523%" y="533" width="0.0801%" height="15" fill="rgb(246,148,9)" fg:x="504" fg:w="1"/><text x="40.6023%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="40.3523%" y="725" width="0.1601%" height="15" fill="rgb(223,75,4)" fg:x="504" fg:w="2"/><text x="40.6023%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.4323%" y="709" width="0.0801%" height="15" fill="rgb(239,148,41)" fg:x="505" fg:w="1"/><text x="40.6823%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.4323%" y="693" width="0.0801%" height="15" fill="rgb(205,195,3)" fg:x="505" fg:w="1"/><text x="40.6823%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.4323%" y="677" width="0.0801%" height="15" fill="rgb(254,161,1)" fg:x="505" fg:w="1"/><text x="40.6823%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="40.5124%" y="725" width="0.2402%" height="15" fill="rgb(211,229,8)" fg:x="506" fg:w="3"/><text x="40.7624%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="40.5124%" y="709" width="0.2402%" height="15" fill="rgb(220,97,9)" fg:x="506" fg:w="3"/><text x="40.7624%" y="719.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="40.5124%" y="693" width="0.2402%" height="15" fill="rgb(240,218,8)" fg:x="506" fg:w="3"/><text x="40.7624%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="40.5124%" y="677" width="0.2402%" height="15" fill="rgb(250,44,0)" fg:x="506" fg:w="3"/><text x="40.7624%" y="687.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="40.5124%" y="661" width="0.2402%" height="15" fill="rgb(236,41,53)" fg:x="506" fg:w="3"/><text x="40.7624%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="40.5124%" y="645" width="0.2402%" height="15" fill="rgb(218,227,13)" fg:x="506" fg:w="3"/><text x="40.7624%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (3 samples, 0.24%)</title><rect x="40.5124%" y="629" width="0.2402%" height="15" fill="rgb(217,94,32)" fg:x="506" fg:w="3"/><text x="40.7624%" y="639.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="40.5124%" y="613" width="0.2402%" height="15" fill="rgb(213,217,12)" fg:x="506" fg:w="3"/><text x="40.7624%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="40.5124%" y="597" width="0.2402%" height="15" fill="rgb(229,13,46)" fg:x="506" fg:w="3"/><text x="40.7624%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="40.8327%" y="693" width="0.0801%" height="15" fill="rgb(243,139,5)" fg:x="510" fg:w="1"/><text x="41.0827%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="40.8327%" y="677" width="0.0801%" height="15" fill="rgb(249,38,45)" fg:x="510" fg:w="1"/><text x="41.0827%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="40.8327%" y="661" width="0.0801%" height="15" fill="rgb(216,70,11)" fg:x="510" fg:w="1"/><text x="41.0827%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8327%" y="645" width="0.0801%" height="15" fill="rgb(253,101,25)" fg:x="510" fg:w="1"/><text x="41.0827%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8327%" y="629" width="0.0801%" height="15" fill="rgb(207,197,30)" fg:x="510" fg:w="1"/><text x="41.0827%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.8327%" y="613" width="0.0801%" height="15" fill="rgb(238,87,13)" fg:x="510" fg:w="1"/><text x="41.0827%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.8327%" y="597" width="0.0801%" height="15" fill="rgb(215,155,8)" fg:x="510" fg:w="1"/><text x="41.0827%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.8327%" y="581" width="0.0801%" height="15" fill="rgb(239,166,38)" fg:x="510" fg:w="1"/><text x="41.0827%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.8327%" y="565" width="0.0801%" height="15" fill="rgb(240,194,35)" fg:x="510" fg:w="1"/><text x="41.0827%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.8327%" y="549" width="0.0801%" height="15" fill="rgb(219,10,44)" fg:x="510" fg:w="1"/><text x="41.0827%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.8327%" y="533" width="0.0801%" height="15" fill="rgb(251,220,35)" fg:x="510" fg:w="1"/><text x="41.0827%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.8327%" y="517" width="0.0801%" height="15" fill="rgb(218,117,13)" fg:x="510" fg:w="1"/><text x="41.0827%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.8327%" y="501" width="0.0801%" height="15" fill="rgb(221,213,40)" fg:x="510" fg:w="1"/><text x="41.0827%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.8327%" y="485" width="0.0801%" height="15" fill="rgb(251,224,35)" fg:x="510" fg:w="1"/><text x="41.0827%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0729%" y="661" width="0.0801%" height="15" fill="rgb(241,33,39)" fg:x="513" fg:w="1"/><text x="41.3229%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0729%" y="645" width="0.0801%" height="15" fill="rgb(222,74,17)" fg:x="513" fg:w="1"/><text x="41.3229%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.0729%" y="629" width="0.0801%" height="15" fill="rgb(225,103,0)" fg:x="513" fg:w="1"/><text x="41.3229%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.0729%" y="613" width="0.0801%" height="15" fill="rgb(240,0,12)" fg:x="513" fg:w="1"/><text x="41.3229%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.0729%" y="597" width="0.0801%" height="15" fill="rgb(233,213,37)" fg:x="513" fg:w="1"/><text x="41.3229%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.0729%" y="581" width="0.0801%" height="15" fill="rgb(225,84,52)" fg:x="513" fg:w="1"/><text x="41.3229%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.0729%" y="565" width="0.0801%" height="15" fill="rgb(247,160,51)" fg:x="513" fg:w="1"/><text x="41.3229%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.0729%" y="549" width="0.0801%" height="15" fill="rgb(244,60,51)" fg:x="513" fg:w="1"/><text x="41.3229%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.0729%" y="533" width="0.0801%" height="15" fill="rgb(233,114,7)" fg:x="513" fg:w="1"/><text x="41.3229%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.0729%" y="517" width="0.0801%" height="15" fill="rgb(246,136,16)" fg:x="513" fg:w="1"/><text x="41.3229%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.0729%" y="501" width="0.0801%" height="15" fill="rgb(243,114,45)" fg:x="513" fg:w="1"/><text x="41.3229%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0729%" y="485" width="0.0801%" height="15" fill="rgb(247,183,43)" fg:x="513" fg:w="1"/><text x="41.3229%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.2330%" y="645" width="0.0801%" height="15" fill="rgb(251,210,42)" fg:x="515" fg:w="1"/><text x="41.4830%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="41.3131%" y="629" width="0.1601%" height="15" fill="rgb(221,88,35)" fg:x="516" fg:w="2"/><text x="41.5631%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.3131%" y="613" width="0.1601%" height="15" fill="rgb(242,21,20)" fg:x="516" fg:w="2"/><text x="41.5631%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="41.3131%" y="645" width="0.2402%" height="15" fill="rgb(233,226,36)" fg:x="516" fg:w="3"/><text x="41.5631%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.4732%" y="629" width="0.0801%" height="15" fill="rgb(243,189,34)" fg:x="518" fg:w="1"/><text x="41.7232%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.4732%" y="613" width="0.0801%" height="15" fill="rgb(207,145,50)" fg:x="518" fg:w="1"/><text x="41.7232%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="41.5532%" y="629" width="0.2402%" height="15" fill="rgb(242,1,50)" fg:x="519" fg:w="3"/><text x="41.8032%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.7134%" y="613" width="0.0801%" height="15" fill="rgb(231,65,32)" fg:x="521" fg:w="1"/><text x="41.9634%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="41.8735%" y="581" width="0.1601%" height="15" fill="rgb(208,68,49)" fg:x="523" fg:w="2"/><text x="42.1235%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.8735%" y="565" width="0.1601%" height="15" fill="rgb(253,54,49)" fg:x="523" fg:w="2"/><text x="42.1235%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="42.0336%" y="549" width="0.1601%" height="15" fill="rgb(245,186,24)" fg:x="525" fg:w="2"/><text x="42.2836%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="41.8735%" y="613" width="0.4003%" height="15" fill="rgb(209,2,41)" fg:x="523" fg:w="5"/><text x="42.1235%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="41.8735%" y="597" width="0.4003%" height="15" fill="rgb(242,208,54)" fg:x="523" fg:w="5"/><text x="42.1235%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="42.0336%" y="581" width="0.2402%" height="15" fill="rgb(225,9,51)" fg:x="525" fg:w="3"/><text x="42.2836%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="42.0336%" y="565" width="0.2402%" height="15" fill="rgb(207,207,25)" fg:x="525" fg:w="3"/><text x="42.2836%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="42.1938%" y="549" width="0.0801%" height="15" fill="rgb(253,96,18)" fg:x="527" fg:w="1"/><text x="42.4438%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="42.2738%" y="613" width="0.6405%" height="15" fill="rgb(252,215,20)" fg:x="528" fg:w="8"/><text x="42.5238%" y="623.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="42.5941%" y="597" width="0.3203%" height="15" fill="rgb(245,227,26)" fg:x="532" fg:w="4"/><text x="42.8441%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="42.6741%" y="581" width="0.2402%" height="15" fill="rgb(241,208,0)" fg:x="533" fg:w="3"/><text x="42.9241%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.8343%" y="565" width="0.0801%" height="15" fill="rgb(224,130,10)" fg:x="535" fg:w="1"/><text x="43.0843%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="43.0745%" y="597" width="0.2402%" height="15" fill="rgb(237,29,0)" fg:x="538" fg:w="3"/><text x="43.3245%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="43.1545%" y="581" width="0.1601%" height="15" fill="rgb(219,27,41)" fg:x="539" fg:w="2"/><text x="43.4045%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="43.1545%" y="565" width="0.1601%" height="15" fill="rgb(245,101,19)" fg:x="539" fg:w="2"/><text x="43.4045%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="43.2346%" y="549" width="0.0801%" height="15" fill="rgb(243,44,37)" fg:x="540" fg:w="1"/><text x="43.4846%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.3947%" y="533" width="0.0801%" height="15" fill="rgb(228,213,43)" fg:x="542" fg:w="1"/><text x="43.6447%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="43.3147%" y="581" width="0.2402%" height="15" fill="rgb(219,163,21)" fg:x="541" fg:w="3"/><text x="43.5647%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="43.3147%" y="565" width="0.2402%" height="15" fill="rgb(234,86,24)" fg:x="541" fg:w="3"/><text x="43.5647%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="43.3147%" y="549" width="0.2402%" height="15" fill="rgb(225,10,24)" fg:x="541" fg:w="3"/><text x="43.5647%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="43.4748%" y="533" width="0.0801%" height="15" fill="rgb(218,109,7)" fg:x="543" fg:w="1"/><text x="43.7248%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="43.5548%" y="581" width="0.0801%" height="15" fill="rgb(210,20,26)" fg:x="544" fg:w="1"/><text x="43.8048%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="43.5548%" y="565" width="0.0801%" height="15" fill="rgb(216,18,1)" fg:x="544" fg:w="1"/><text x="43.8048%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.5548%" y="549" width="0.0801%" height="15" fill="rgb(206,163,23)" fg:x="544" fg:w="1"/><text x="43.8048%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="43.3147%" y="597" width="0.5604%" height="15" fill="rgb(229,150,31)" fg:x="541" fg:w="7"/><text x="43.5647%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="43.6349%" y="581" width="0.2402%" height="15" fill="rgb(231,10,5)" fg:x="545" fg:w="3"/><text x="43.8849%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="43.6349%" y="565" width="0.2402%" height="15" fill="rgb(250,40,50)" fg:x="545" fg:w="3"/><text x="43.8849%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="42.9143%" y="613" width="1.0408%" height="15" fill="rgb(217,119,7)" fg:x="536" fg:w="13"/><text x="43.1643%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.8751%" y="597" width="0.0801%" height="15" fill="rgb(245,214,40)" fg:x="548" fg:w="1"/><text x="44.1251%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.40%)</title><rect x="41.7934%" y="629" width="2.4019%" height="15" fill="rgb(216,187,1)" fg:x="522" fg:w="30"/><text x="42.0434%" y="639.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="43.9552%" y="613" width="0.2402%" height="15" fill="rgb(237,146,21)" fg:x="549" fg:w="3"/><text x="44.2052%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="44.0352%" y="597" width="0.1601%" height="15" fill="rgb(210,174,47)" fg:x="550" fg:w="2"/><text x="44.2852%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.1153%" y="581" width="0.0801%" height="15" fill="rgb(218,111,39)" fg:x="551" fg:w="1"/><text x="44.3653%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (41 samples, 3.28%)</title><rect x="41.1529%" y="661" width="3.2826%" height="15" fill="rgb(224,95,19)" fg:x="514" fg:w="41"/><text x="41.4029%" y="671.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (36 samples, 2.88%)</title><rect x="41.5532%" y="645" width="2.8823%" height="15" fill="rgb(234,15,38)" fg:x="519" fg:w="36"/><text x="41.8032%" y="655.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="44.1954%" y="629" width="0.2402%" height="15" fill="rgb(246,56,12)" fg:x="552" fg:w="3"/><text x="44.4454%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="44.2754%" y="613" width="0.1601%" height="15" fill="rgb(247,16,17)" fg:x="553" fg:w="2"/><text x="44.5254%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="44.2754%" y="597" width="0.1601%" height="15" fill="rgb(215,151,11)" fg:x="553" fg:w="2"/><text x="44.5254%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="44.2754%" y="581" width="0.1601%" height="15" fill="rgb(225,16,24)" fg:x="553" fg:w="2"/><text x="44.5254%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="44.2754%" y="565" width="0.1601%" height="15" fill="rgb(217,117,5)" fg:x="553" fg:w="2"/><text x="44.5254%" y="575.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="44.2754%" y="549" width="0.1601%" height="15" fill="rgb(246,187,53)" fg:x="553" fg:w="2"/><text x="44.5254%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.5156%" y="629" width="0.1601%" height="15" fill="rgb(241,71,40)" fg:x="556" fg:w="2"/><text x="44.7656%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.6757%" y="629" width="0.0801%" height="15" fill="rgb(231,67,39)" fg:x="558" fg:w="1"/><text x="44.9257%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.9159%" y="597" width="0.0801%" height="15" fill="rgb(222,120,24)" fg:x="561" fg:w="1"/><text x="45.1659%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.9960%" y="597" width="0.0801%" height="15" fill="rgb(248,3,3)" fg:x="562" fg:w="1"/><text x="45.2460%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.9960%" y="581" width="0.0801%" height="15" fill="rgb(228,218,5)" fg:x="562" fg:w="1"/><text x="45.2460%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.0761%" y="581" width="0.1601%" height="15" fill="rgb(212,202,43)" fg:x="563" fg:w="2"/><text x="45.3261%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="45.2362%" y="581" width="0.2402%" height="15" fill="rgb(235,183,2)" fg:x="565" fg:w="3"/><text x="45.4862%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="45.3163%" y="565" width="0.1601%" height="15" fill="rgb(230,165,10)" fg:x="566" fg:w="2"/><text x="45.5663%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.3963%" y="549" width="0.0801%" height="15" fill="rgb(219,54,40)" fg:x="567" fg:w="1"/><text x="45.6463%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="44.4355%" y="661" width="1.2010%" height="15" fill="rgb(244,73,9)" fg:x="555" fg:w="15"/><text x="44.6855%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.20%)</title><rect x="44.4355%" y="645" width="1.2010%" height="15" fill="rgb(212,32,45)" fg:x="555" fg:w="15"/><text x="44.6855%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="44.7558%" y="629" width="0.8807%" height="15" fill="rgb(205,58,31)" fg:x="559" fg:w="11"/><text x="45.0058%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="44.8359%" y="613" width="0.8006%" height="15" fill="rgb(250,120,43)" fg:x="560" fg:w="10"/><text x="45.0859%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="45.0761%" y="597" width="0.5604%" height="15" fill="rgb(235,13,10)" fg:x="563" fg:w="7"/><text x="45.3261%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="45.4764%" y="581" width="0.1601%" height="15" fill="rgb(232,219,31)" fg:x="568" fg:w="2"/><text x="45.7264%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.5564%" y="565" width="0.0801%" height="15" fill="rgb(218,157,51)" fg:x="569" fg:w="1"/><text x="45.8064%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.5564%" y="549" width="0.0801%" height="15" fill="rgb(211,91,52)" fg:x="569" fg:w="1"/><text x="45.8064%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.7166%" y="597" width="0.0801%" height="15" fill="rgb(240,173,1)" fg:x="571" fg:w="1"/><text x="45.9666%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.7966%" y="597" width="0.0801%" height="15" fill="rgb(248,20,47)" fg:x="572" fg:w="1"/><text x="46.0466%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.7966%" y="581" width="0.0801%" height="15" fill="rgb(217,221,40)" fg:x="572" fg:w="1"/><text x="46.0466%" y="591.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="45.9568%" y="581" width="0.3203%" height="15" fill="rgb(226,149,51)" fg:x="574" fg:w="4"/><text x="46.2068%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.2770%" y="581" width="0.0801%" height="15" fill="rgb(252,193,7)" fg:x="578" fg:w="1"/><text x="46.5270%" y="591.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="46.4371%" y="565" width="0.3203%" height="15" fill="rgb(205,123,0)" fg:x="580" fg:w="4"/><text x="46.6871%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.7574%" y="565" width="0.0801%" height="15" fill="rgb(233,173,25)" fg:x="584" fg:w="1"/><text x="47.0074%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.7574%" y="549" width="0.0801%" height="15" fill="rgb(216,63,32)" fg:x="584" fg:w="1"/><text x="47.0074%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="46.9175%" y="549" width="0.1601%" height="15" fill="rgb(209,56,45)" fg:x="586" fg:w="2"/><text x="47.1675%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.9976%" y="533" width="0.0801%" height="15" fill="rgb(226,111,49)" fg:x="587" fg:w="1"/><text x="47.2476%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.1577%" y="517" width="0.1601%" height="15" fill="rgb(244,181,21)" fg:x="589" fg:w="2"/><text x="47.4077%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="47.0777%" y="549" width="0.3203%" height="15" fill="rgb(222,126,15)" fg:x="588" fg:w="4"/><text x="47.3277%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="47.0777%" y="533" width="0.3203%" height="15" fill="rgb(222,95,17)" fg:x="588" fg:w="4"/><text x="47.3277%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.3179%" y="517" width="0.0801%" height="15" fill="rgb(254,46,5)" fg:x="591" fg:w="1"/><text x="47.5679%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.3179%" y="501" width="0.0801%" height="15" fill="rgb(236,216,35)" fg:x="591" fg:w="1"/><text x="47.5679%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.3979%" y="533" width="0.0801%" height="15" fill="rgb(217,187,26)" fg:x="592" fg:w="1"/><text x="47.6479%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 1.84%)</title><rect x="45.7166%" y="629" width="1.8415%" height="15" fill="rgb(207,192,25)" fg:x="571" fg:w="23"/><text x="45.9666%" y="639.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (23 samples, 1.84%)</title><rect x="45.7166%" y="613" width="1.8415%" height="15" fill="rgb(253,135,27)" fg:x="571" fg:w="23"/><text x="45.9666%" y="623.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.68%)</title><rect x="45.8767%" y="597" width="1.6813%" height="15" fill="rgb(211,122,29)" fg:x="573" fg:w="21"/><text x="46.1267%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="46.3571%" y="581" width="1.2010%" height="15" fill="rgb(233,162,40)" fg:x="579" fg:w="15"/><text x="46.6071%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="46.8375%" y="565" width="0.7206%" height="15" fill="rgb(222,184,47)" fg:x="585" fg:w="9"/><text x="47.0875%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="47.3979%" y="549" width="0.1601%" height="15" fill="rgb(249,99,23)" fg:x="592" fg:w="2"/><text x="47.6479%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.4780%" y="533" width="0.0801%" height="15" fill="rgb(214,60,12)" fg:x="593" fg:w="1"/><text x="47.7280%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.4780%" y="517" width="0.0801%" height="15" fill="rgb(250,229,36)" fg:x="593" fg:w="1"/><text x="47.7280%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="47.5580%" y="629" width="0.0801%" height="15" fill="rgb(232,195,10)" fg:x="594" fg:w="1"/><text x="47.8080%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="47.7182%" y="597" width="0.3203%" height="15" fill="rgb(205,213,31)" fg:x="596" fg:w="4"/><text x="47.9682%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="47.8783%" y="581" width="0.1601%" height="15" fill="rgb(237,43,8)" fg:x="598" fg:w="2"/><text x="48.1283%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="47.8783%" y="565" width="0.1601%" height="15" fill="rgb(216,208,3)" fg:x="598" fg:w="2"/><text x="48.1283%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="47.9584%" y="549" width="0.0801%" height="15" fill="rgb(228,179,44)" fg:x="599" fg:w="1"/><text x="48.2084%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.9584%" y="533" width="0.0801%" height="15" fill="rgb(230,192,27)" fg:x="599" fg:w="1"/><text x="48.2084%" y="543.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (30 samples, 2.40%)</title><rect x="45.7166%" y="645" width="2.4019%" height="15" fill="rgb(251,30,38)" fg:x="571" fg:w="30"/><text x="45.9666%" y="655.50">&lt;k..</text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="47.6381%" y="629" width="0.4804%" height="15" fill="rgb(246,55,52)" fg:x="595" fg:w="6"/><text x="47.8881%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="47.6381%" y="613" width="0.4804%" height="15" fill="rgb(249,79,26)" fg:x="595" fg:w="6"/><text x="47.8881%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.0384%" y="597" width="0.0801%" height="15" fill="rgb(220,202,16)" fg:x="600" fg:w="1"/><text x="48.2884%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="48.1185%" y="645" width="0.0801%" height="15" fill="rgb(250,170,23)" fg:x="601" fg:w="1"/><text x="48.3685%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.1185%" y="629" width="0.0801%" height="15" fill="rgb(230,7,37)" fg:x="601" fg:w="1"/><text x="48.3685%" y="639.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="48.4388%" y="613" width="0.3203%" height="15" fill="rgb(213,71,1)" fg:x="605" fg:w="4"/><text x="48.6888%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="48.7590%" y="613" width="0.5604%" height="15" fill="rgb(227,87,39)" fg:x="609" fg:w="7"/><text x="49.0090%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="48.9992%" y="597" width="0.3203%" height="15" fill="rgb(210,41,29)" fg:x="612" fg:w="4"/><text x="49.2492%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="49.0793%" y="581" width="0.2402%" height="15" fill="rgb(206,191,31)" fg:x="613" fg:w="3"/><text x="49.3293%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3195%" y="581" width="0.0801%" height="15" fill="rgb(247,75,54)" fg:x="616" fg:w="1"/><text x="49.5695%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="49.3195%" y="613" width="0.3203%" height="15" fill="rgb(208,54,50)" fg:x="616" fg:w="4"/><text x="49.5695%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="49.3195%" y="597" width="0.3203%" height="15" fill="rgb(214,90,37)" fg:x="616" fg:w="4"/><text x="49.5695%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="49.3995%" y="581" width="0.2402%" height="15" fill="rgb(220,132,6)" fg:x="617" fg:w="3"/><text x="49.6495%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (2 samples, 0.16%)</title><rect x="49.4796%" y="565" width="0.1601%" height="15" fill="rgb(213,167,7)" fg:x="618" fg:w="2"/><text x="49.7296%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="49.6397%" y="613" width="0.0801%" height="15" fill="rgb(243,36,27)" fg:x="620" fg:w="1"/><text x="49.8897%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="49.6397%" y="597" width="0.0801%" height="15" fill="rgb(235,147,12)" fg:x="620" fg:w="1"/><text x="49.8897%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.8799%" y="549" width="0.0801%" height="15" fill="rgb(212,198,44)" fg:x="623" fg:w="1"/><text x="50.1299%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="49.7198%" y="613" width="0.3203%" height="15" fill="rgb(218,68,50)" fg:x="621" fg:w="4"/><text x="49.9698%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="49.7198%" y="597" width="0.3203%" height="15" fill="rgb(224,79,48)" fg:x="621" fg:w="4"/><text x="49.9698%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.8799%" y="581" width="0.1601%" height="15" fill="rgb(213,191,50)" fg:x="623" fg:w="2"/><text x="50.1299%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.8799%" y="565" width="0.1601%" height="15" fill="rgb(254,146,10)" fg:x="623" fg:w="2"/><text x="50.1299%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="49.9600%" y="549" width="0.0801%" height="15" fill="rgb(215,175,11)" fg:x="624" fg:w="1"/><text x="50.2100%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="50.2802%" y="581" width="0.0801%" height="15" fill="rgb(207,49,7)" fg:x="628" fg:w="1"/><text x="50.5302%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="50.3603%" y="581" width="0.0801%" height="15" fill="rgb(234,144,29)" fg:x="629" fg:w="1"/><text x="50.6103%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="50.4404%" y="565" width="0.4003%" height="15" fill="rgb(213,222,48)" fg:x="630" fg:w="5"/><text x="50.6904%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="50.5204%" y="549" width="0.3203%" height="15" fill="rgb(222,8,6)" fg:x="631" fg:w="4"/><text x="50.7704%" y="559.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="50.6005%" y="533" width="0.2402%" height="15" fill="rgb(221,114,49)" fg:x="632" fg:w="3"/><text x="50.8505%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="50.8407%" y="533" width="0.0801%" height="15" fill="rgb(250,140,42)" fg:x="635" fg:w="1"/><text x="51.0907%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="50.9207%" y="533" width="0.4003%" height="15" fill="rgb(250,150,27)" fg:x="636" fg:w="5"/><text x="51.1707%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.1609%" y="517" width="0.1601%" height="15" fill="rgb(252,159,3)" fg:x="639" fg:w="2"/><text x="51.4109%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.2410%" y="501" width="0.0801%" height="15" fill="rgb(241,182,3)" fg:x="640" fg:w="1"/><text x="51.4910%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="50.8407%" y="565" width="0.5604%" height="15" fill="rgb(236,3,9)" fg:x="635" fg:w="7"/><text x="51.0907%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="50.8407%" y="549" width="0.5604%" height="15" fill="rgb(223,227,51)" fg:x="635" fg:w="7"/><text x="51.0907%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.3211%" y="533" width="0.0801%" height="15" fill="rgb(232,133,30)" fg:x="641" fg:w="1"/><text x="51.5711%" y="543.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="51.8815%" y="501" width="0.2402%" height="15" fill="rgb(209,93,27)" fg:x="648" fg:w="3"/><text x="52.1315%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="51.6413%" y="533" width="0.5604%" height="15" fill="rgb(208,108,34)" fg:x="645" fg:w="7"/><text x="51.8913%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="51.7214%" y="517" width="0.4804%" height="15" fill="rgb(215,189,13)" fg:x="646" fg:w="6"/><text x="51.9714%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.1217%" y="501" width="0.0801%" height="15" fill="rgb(206,88,23)" fg:x="651" fg:w="1"/><text x="52.3717%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="52.5220%" y="517" width="0.0801%" height="15" fill="rgb(240,173,0)" fg:x="656" fg:w="1"/><text x="52.7720%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.7622%" y="469" width="0.1601%" height="15" fill="rgb(223,106,52)" fg:x="659" fg:w="2"/><text x="53.0122%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="52.6821%" y="501" width="0.3203%" height="15" fill="rgb(206,130,16)" fg:x="658" fg:w="4"/><text x="52.9321%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.7622%" y="485" width="0.2402%" height="15" fill="rgb(220,54,25)" fg:x="659" fg:w="3"/><text x="53.0122%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.9223%" y="469" width="0.0801%" height="15" fill="rgb(210,4,38)" fg:x="661" fg:w="1"/><text x="53.1723%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="52.6021%" y="517" width="0.4804%" height="15" fill="rgb(238,94,39)" fg:x="657" fg:w="6"/><text x="52.8521%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="53.0024%" y="501" width="0.0801%" height="15" fill="rgb(234,124,34)" fg:x="662" fg:w="1"/><text x="53.2524%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 1.76%)</title><rect x="51.6413%" y="549" width="1.7614%" height="15" fill="rgb(221,91,40)" fg:x="645" fg:w="22"/><text x="51.8913%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.20%)</title><rect x="52.2018%" y="533" width="1.2010%" height="15" fill="rgb(246,53,28)" fg:x="652" fg:w="15"/><text x="52.4518%" y="543.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="53.0825%" y="517" width="0.3203%" height="15" fill="rgb(229,109,7)" fg:x="663" fg:w="4"/><text x="53.3325%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="53.4027%" y="549" width="0.1601%" height="15" fill="rgb(249,117,8)" fg:x="667" fg:w="2"/><text x="53.6527%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (43 samples, 3.44%)</title><rect x="50.2002%" y="597" width="3.4428%" height="15" fill="rgb(210,181,1)" fg:x="627" fg:w="43"/><text x="50.4502%" y="607.50">&lt;se..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (40 samples, 3.20%)</title><rect x="50.4404%" y="581" width="3.2026%" height="15" fill="rgb(211,66,1)" fg:x="630" fg:w="40"/><text x="50.6904%" y="591.50">&lt;se..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (28 samples, 2.24%)</title><rect x="51.4011%" y="565" width="2.2418%" height="15" fill="rgb(221,90,14)" fg:x="642" fg:w="28"/><text x="51.6511%" y="575.50">s..</text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="53.5629%" y="549" width="0.0801%" height="15" fill="rgb(219,222,44)" fg:x="669" fg:w="1"/><text x="53.8129%" y="559.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="53.5629%" y="533" width="0.0801%" height="15" fill="rgb(246,34,33)" fg:x="669" fg:w="1"/><text x="53.8129%" y="543.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="53.6429%" y="597" width="0.4003%" height="15" fill="rgb(227,135,41)" fg:x="670" fg:w="5"/><text x="53.8929%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (75 samples, 6.00%)</title><rect x="48.1986%" y="645" width="6.0048%" height="15" fill="rgb(226,15,14)" fg:x="602" fg:w="75"/><text x="48.4486%" y="655.50">kernel::..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (75 samples, 6.00%)</title><rect x="48.1986%" y="629" width="6.0048%" height="15" fill="rgb(236,148,47)" fg:x="602" fg:w="75"/><text x="48.4486%" y="639.50">&lt;serde_j..</text></g><g><title>serde::ser::Serializer::collect_map (52 samples, 4.16%)</title><rect x="50.0400%" y="613" width="4.1633%" height="15" fill="rgb(233,162,52)" fg:x="625" fg:w="52"/><text x="50.2900%" y="623.50">serde..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.0432%" y="597" width="0.1601%" height="15" fill="rgb(244,35,28)" fg:x="675" fg:w="2"/><text x="54.2932%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.1233%" y="581" width="0.0801%" height="15" fill="rgb(205,121,10)" fg:x="676" fg:w="1"/><text x="54.3733%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="54.1233%" y="565" width="0.0801%" height="15" fill="rgb(250,58,18)" fg:x="676" fg:w="1"/><text x="54.3733%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="54.7638%" y="469" width="0.1601%" height="15" fill="rgb(216,37,13)" fg:x="684" fg:w="2"/><text x="55.0138%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.7638%" y="453" width="0.1601%" height="15" fill="rgb(221,215,42)" fg:x="684" fg:w="2"/><text x="55.0138%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="54.9239%" y="453" width="0.1601%" height="15" fill="rgb(217,214,19)" fg:x="686" fg:w="2"/><text x="55.1739%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="54.9239%" y="469" width="0.3203%" height="15" fill="rgb(233,139,13)" fg:x="686" fg:w="4"/><text x="55.1739%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.0841%" y="453" width="0.1601%" height="15" fill="rgb(247,168,23)" fg:x="688" fg:w="2"/><text x="55.3341%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="54.7638%" y="501" width="0.5604%" height="15" fill="rgb(207,202,1)" fg:x="684" fg:w="7"/><text x="55.0138%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="54.7638%" y="485" width="0.5604%" height="15" fill="rgb(220,155,48)" fg:x="684" fg:w="7"/><text x="55.0138%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.2442%" y="469" width="0.0801%" height="15" fill="rgb(250,43,26)" fg:x="690" fg:w="1"/><text x="55.4942%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.2442%" y="453" width="0.0801%" height="15" fill="rgb(212,190,23)" fg:x="690" fg:w="1"/><text x="55.4942%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2442%" y="437" width="0.0801%" height="15" fill="rgb(216,39,24)" fg:x="690" fg:w="1"/><text x="55.4942%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="55.4043%" y="469" width="0.0801%" height="15" fill="rgb(252,113,16)" fg:x="692" fg:w="1"/><text x="55.6543%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.6445%" y="453" width="0.1601%" height="15" fill="rgb(208,113,19)" fg:x="695" fg:w="2"/><text x="55.8945%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="55.7246%" y="437" width="0.0801%" height="15" fill="rgb(234,107,25)" fg:x="696" fg:w="1"/><text x="55.9746%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="55.8046%" y="453" width="0.1601%" height="15" fill="rgb(234,217,51)" fg:x="697" fg:w="2"/><text x="56.0546%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="55.8046%" y="437" width="0.1601%" height="15" fill="rgb(251,29,42)" fg:x="697" fg:w="2"/><text x="56.0546%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="55.4844%" y="469" width="0.6405%" height="15" fill="rgb(221,62,51)" fg:x="693" fg:w="8"/><text x="55.7344%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.9648%" y="453" width="0.1601%" height="15" fill="rgb(240,192,43)" fg:x="699" fg:w="2"/><text x="56.2148%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.0448%" y="437" width="0.0801%" height="15" fill="rgb(224,157,47)" fg:x="700" fg:w="1"/><text x="56.2948%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.0448%" y="421" width="0.0801%" height="15" fill="rgb(226,84,45)" fg:x="700" fg:w="1"/><text x="56.2948%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="55.4043%" y="485" width="0.8006%" height="15" fill="rgb(208,207,23)" fg:x="692" fg:w="10"/><text x="55.6543%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.1249%" y="469" width="0.0801%" height="15" fill="rgb(253,34,51)" fg:x="701" fg:w="1"/><text x="56.3749%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.2050%" y="485" width="0.0801%" height="15" fill="rgb(227,26,34)" fg:x="702" fg:w="1"/><text x="56.4550%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.2050%" y="469" width="0.0801%" height="15" fill="rgb(245,75,19)" fg:x="702" fg:w="1"/><text x="56.4550%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.84%)</title><rect x="54.6037%" y="517" width="1.8415%" height="15" fill="rgb(250,191,31)" fg:x="682" fg:w="23"/><text x="54.8537%" y="527.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="55.3243%" y="501" width="1.1209%" height="15" fill="rgb(224,11,50)" fg:x="691" fg:w="14"/><text x="55.5743%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.2850%" y="485" width="0.1601%" height="15" fill="rgb(231,171,7)" fg:x="703" fg:w="2"/><text x="56.5350%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.2850%" y="469" width="0.1601%" height="15" fill="rgb(252,214,10)" fg:x="703" fg:w="2"/><text x="56.5350%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.2850%" y="453" width="0.1601%" height="15" fill="rgb(249,45,46)" fg:x="703" fg:w="2"/><text x="56.5350%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.4452%" y="517" width="0.0801%" height="15" fill="rgb(240,173,7)" fg:x="705" fg:w="1"/><text x="56.6952%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28 samples, 2.24%)</title><rect x="54.3635%" y="549" width="2.2418%" height="15" fill="rgb(235,214,13)" fg:x="679" fg:w="28"/><text x="54.6135%" y="559.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (27 samples, 2.16%)</title><rect x="54.4436%" y="533" width="2.1617%" height="15" fill="rgb(245,156,8)" fg:x="680" fg:w="27"/><text x="54.6936%" y="543.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.5252%" y="517" width="0.0801%" height="15" fill="rgb(235,46,12)" fg:x="706" fg:w="1"/><text x="56.7752%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.5252%" y="501" width="0.0801%" height="15" fill="rgb(221,81,14)" fg:x="706" fg:w="1"/><text x="56.7752%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.6053%" y="549" width="0.0801%" height="15" fill="rgb(238,207,9)" fg:x="707" fg:w="1"/><text x="56.8553%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.6053%" y="533" width="0.0801%" height="15" fill="rgb(224,129,35)" fg:x="707" fg:w="1"/><text x="56.8553%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 2.56%)</title><rect x="54.3635%" y="581" width="2.5620%" height="15" fill="rgb(243,218,34)" fg:x="679" fg:w="32"/><text x="54.6135%" y="591.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.56%)</title><rect x="54.3635%" y="565" width="2.5620%" height="15" fill="rgb(220,166,13)" fg:x="679" fg:w="32"/><text x="54.6135%" y="575.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="56.6853%" y="549" width="0.2402%" height="15" fill="rgb(227,167,49)" fg:x="708" fg:w="3"/><text x="56.9353%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.7654%" y="533" width="0.1601%" height="15" fill="rgb(234,142,12)" fg:x="709" fg:w="2"/><text x="57.0154%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.7654%" y="517" width="0.1601%" height="15" fill="rgb(207,100,48)" fg:x="709" fg:w="2"/><text x="57.0154%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.24%)</title><rect x="57.3259%" y="565" width="0.2402%" height="15" fill="rgb(210,25,14)" fg:x="716" fg:w="3"/><text x="57.5759%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.5661%" y="565" width="0.0801%" height="15" fill="rgb(246,116,27)" fg:x="719" fg:w="1"/><text x="57.8161%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (10 samples, 0.80%)</title><rect x="56.9255%" y="581" width="0.8006%" height="15" fill="rgb(214,193,42)" fg:x="711" fg:w="10"/><text x="57.1755%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="57.6461%" y="565" width="0.0801%" height="15" fill="rgb(214,122,8)" fg:x="720" fg:w="1"/><text x="57.8961%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="57.6461%" y="549" width="0.0801%" height="15" fill="rgb(244,173,18)" fg:x="720" fg:w="1"/><text x="57.8961%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.8863%" y="549" width="0.0801%" height="15" fill="rgb(232,68,19)" fg:x="723" fg:w="1"/><text x="58.1363%" y="559.50"></text></g><g><title>engine::session::Session::close (222 samples, 17.77%)</title><rect x="40.2722%" y="741" width="17.7742%" height="15" fill="rgb(236,224,1)" fg:x="503" fg:w="222"/><text x="40.5222%" y="751.50">engine::session::Session::cl..</text></g><g><title>engine::session::state::State::close (216 samples, 17.29%)</title><rect x="40.7526%" y="725" width="17.2938%" height="15" fill="rgb(240,11,8)" fg:x="509" fg:w="216"/><text x="41.0026%" y="735.50">engine::session::state::Sta..</text></g><g><title>engine::session::state::State::flush_entities (216 samples, 17.29%)</title><rect x="40.7526%" y="709" width="17.2938%" height="15" fill="rgb(244,159,20)" fg:x="509" fg:w="216"/><text x="41.0026%" y="719.50">engine::session::state::Sta..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (214 samples, 17.13%)</title><rect x="40.9127%" y="693" width="17.1337%" height="15" fill="rgb(240,223,54)" fg:x="511" fg:w="214"/><text x="41.1627%" y="703.50">engine::session::internal::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (213 samples, 17.05%)</title><rect x="40.9928%" y="677" width="17.0536%" height="15" fill="rgb(237,146,5)" fg:x="512" fg:w="213"/><text x="41.2428%" y="687.50">engine::session::state::Sa..</text></g><g><title>kernel::model::any_entity_changes (155 samples, 12.41%)</title><rect x="45.6365%" y="661" width="12.4099%" height="15" fill="rgb(218,221,32)" fg:x="570" fg:w="155"/><text x="45.8865%" y="671.50">kernel::model::any_..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (48 samples, 3.84%)</title><rect x="54.2034%" y="645" width="3.8431%" height="15" fill="rgb(244,96,26)" fg:x="677" fg:w="48"/><text x="54.4534%" y="655.50">serd..</text></g><g><title>serde_json::de::from_trait (48 samples, 3.84%)</title><rect x="54.2034%" y="629" width="3.8431%" height="15" fill="rgb(245,184,37)" fg:x="677" fg:w="48"/><text x="54.4534%" y="639.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (48 samples, 3.84%)</title><rect x="54.2034%" y="613" width="3.8431%" height="15" fill="rgb(248,91,47)" fg:x="677" fg:w="48"/><text x="54.4534%" y="623.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (48 samples, 3.84%)</title><rect x="54.2034%" y="597" width="3.8431%" height="15" fill="rgb(243,199,8)" fg:x="677" fg:w="48"/><text x="54.4534%" y="607.50">&lt;ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="57.7262%" y="581" width="0.3203%" height="15" fill="rgb(249,12,15)" fg:x="721" fg:w="4"/><text x="57.9762%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="57.8062%" y="565" width="0.2402%" height="15" fill="rgb(245,97,12)" fg:x="722" fg:w="3"/><text x="58.0562%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="57.9664%" y="549" width="0.0801%" height="15" fill="rgb(244,61,1)" fg:x="724" fg:w="1"/><text x="58.2164%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.2066%" y="629" width="0.0801%" height="15" fill="rgb(222,194,10)" fg:x="727" fg:w="1"/><text x="58.4566%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.2066%" y="613" width="0.0801%" height="15" fill="rgb(226,178,8)" fg:x="727" fg:w="1"/><text x="58.4566%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.2066%" y="597" width="0.0801%" height="15" fill="rgb(241,32,34)" fg:x="727" fg:w="1"/><text x="58.4566%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.2066%" y="581" width="0.0801%" height="15" fill="rgb(254,26,6)" fg:x="727" fg:w="1"/><text x="58.4566%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.2066%" y="565" width="0.0801%" height="15" fill="rgb(249,71,11)" fg:x="727" fg:w="1"/><text x="58.4566%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.2066%" y="549" width="0.0801%" height="15" fill="rgb(232,170,27)" fg:x="727" fg:w="1"/><text x="58.4566%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.2066%" y="533" width="0.0801%" height="15" fill="rgb(214,223,17)" fg:x="727" fg:w="1"/><text x="58.4566%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.2066%" y="517" width="0.0801%" height="15" fill="rgb(250,18,15)" fg:x="727" fg:w="1"/><text x="58.4566%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.2066%" y="501" width="0.0801%" height="15" fill="rgb(212,153,51)" fg:x="727" fg:w="1"/><text x="58.4566%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.2066%" y="485" width="0.0801%" height="15" fill="rgb(219,194,12)" fg:x="727" fg:w="1"/><text x="58.4566%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.2066%" y="469" width="0.0801%" height="15" fill="rgb(212,58,17)" fg:x="727" fg:w="1"/><text x="58.4566%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.2066%" y="453" width="0.0801%" height="15" fill="rgb(254,5,10)" fg:x="727" fg:w="1"/><text x="58.4566%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.2066%" y="437" width="0.0801%" height="15" fill="rgb(246,91,7)" fg:x="727" fg:w="1"/><text x="58.4566%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="58.2866%" y="613" width="0.0801%" height="15" fill="rgb(218,108,49)" fg:x="728" fg:w="1"/><text x="58.5366%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="58.2866%" y="597" width="0.0801%" height="15" fill="rgb(238,123,20)" fg:x="728" fg:w="1"/><text x="58.5366%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="58.2866%" y="581" width="0.0801%" height="15" fill="rgb(231,69,23)" fg:x="728" fg:w="1"/><text x="58.5366%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="58.2866%" y="565" width="0.0801%" height="15" fill="rgb(230,209,3)" fg:x="728" fg:w="1"/><text x="58.5366%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="58.2866%" y="549" width="0.0801%" height="15" fill="rgb(231,19,0)" fg:x="728" fg:w="1"/><text x="58.5366%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="58.2866%" y="533" width="0.0801%" height="15" fill="rgb(226,192,25)" fg:x="728" fg:w="1"/><text x="58.5366%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="58.2866%" y="517" width="0.0801%" height="15" fill="rgb(223,175,53)" fg:x="728" fg:w="1"/><text x="58.5366%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="58.2866%" y="501" width="0.0801%" height="15" fill="rgb(248,35,51)" fg:x="728" fg:w="1"/><text x="58.5366%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="58.2866%" y="485" width="0.0801%" height="15" fill="rgb(230,37,26)" fg:x="728" fg:w="1"/><text x="58.5366%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="58.2866%" y="469" width="0.0801%" height="15" fill="rgb(206,120,22)" fg:x="728" fg:w="1"/><text x="58.5366%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="58.2866%" y="453" width="0.0801%" height="15" fill="rgb(207,165,28)" fg:x="728" fg:w="1"/><text x="58.5366%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="58.2866%" y="437" width="0.0801%" height="15" fill="rgb(226,23,46)" fg:x="728" fg:w="1"/><text x="58.5366%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="58.2866%" y="421" width="0.0801%" height="15" fill="rgb(208,130,44)" fg:x="728" fg:w="1"/><text x="58.5366%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="58.2866%" y="405" width="0.0801%" height="15" fill="rgb(231,67,8)" fg:x="728" fg:w="1"/><text x="58.5366%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="58.2866%" y="389" width="0.0801%" height="15" fill="rgb(205,183,22)" fg:x="728" fg:w="1"/><text x="58.5366%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="58.2866%" y="373" width="0.0801%" height="15" fill="rgb(224,47,9)" fg:x="728" fg:w="1"/><text x="58.5366%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="58.2866%" y="357" width="0.0801%" height="15" fill="rgb(250,183,49)" fg:x="728" fg:w="1"/><text x="58.5366%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="58.2866%" y="341" width="0.0801%" height="15" fill="rgb(220,151,39)" fg:x="728" fg:w="1"/><text x="58.5366%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="58.2866%" y="325" width="0.0801%" height="15" fill="rgb(220,118,20)" fg:x="728" fg:w="1"/><text x="58.5366%" y="335.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="58.2866%" y="309" width="0.0801%" height="15" fill="rgb(231,65,51)" fg:x="728" fg:w="1"/><text x="58.5366%" y="319.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="58.3667%" y="549" width="0.1601%" height="15" fill="rgb(253,125,37)" fg:x="729" fg:w="2"/><text x="58.6167%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.3667%" y="533" width="0.1601%" height="15" fill="rgb(232,102,6)" fg:x="729" fg:w="2"/><text x="58.6167%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.3667%" y="517" width="0.1601%" height="15" fill="rgb(251,105,13)" fg:x="729" fg:w="2"/><text x="58.6167%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="58.3667%" y="501" width="0.1601%" height="15" fill="rgb(222,179,29)" fg:x="729" fg:w="2"/><text x="58.6167%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="58.3667%" y="485" width="0.1601%" height="15" fill="rgb(229,180,53)" fg:x="729" fg:w="2"/><text x="58.6167%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="58.3667%" y="469" width="0.1601%" height="15" fill="rgb(238,104,13)" fg:x="729" fg:w="2"/><text x="58.6167%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.3667%" y="453" width="0.1601%" height="15" fill="rgb(210,130,5)" fg:x="729" fg:w="2"/><text x="58.6167%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.3667%" y="437" width="0.1601%" height="15" fill="rgb(233,87,49)" fg:x="729" fg:w="2"/><text x="58.6167%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="58.3667%" y="421" width="0.1601%" height="15" fill="rgb(243,34,9)" fg:x="729" fg:w="2"/><text x="58.6167%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="58.3667%" y="405" width="0.1601%" height="15" fill="rgb(235,225,10)" fg:x="729" fg:w="2"/><text x="58.6167%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="58.3667%" y="389" width="0.1601%" height="15" fill="rgb(212,0,30)" fg:x="729" fg:w="2"/><text x="58.6167%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="58.3667%" y="373" width="0.1601%" height="15" fill="rgb(211,177,0)" fg:x="729" fg:w="2"/><text x="58.6167%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.4468%" y="357" width="0.0801%" height="15" fill="rgb(225,220,11)" fg:x="730" fg:w="1"/><text x="58.6968%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="58.5268%" y="501" width="0.0801%" height="15" fill="rgb(215,10,13)" fg:x="731" fg:w="1"/><text x="58.7768%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="58.5268%" y="485" width="0.0801%" height="15" fill="rgb(240,177,14)" fg:x="731" fg:w="1"/><text x="58.7768%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.5268%" y="469" width="0.0801%" height="15" fill="rgb(243,7,39)" fg:x="731" fg:w="1"/><text x="58.7768%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.5268%" y="453" width="0.0801%" height="15" fill="rgb(212,99,0)" fg:x="731" fg:w="1"/><text x="58.7768%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.5268%" y="437" width="0.0801%" height="15" fill="rgb(225,162,48)" fg:x="731" fg:w="1"/><text x="58.7768%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.5268%" y="421" width="0.0801%" height="15" fill="rgb(246,16,25)" fg:x="731" fg:w="1"/><text x="58.7768%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.5268%" y="405" width="0.0801%" height="15" fill="rgb(220,150,2)" fg:x="731" fg:w="1"/><text x="58.7768%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.5268%" y="389" width="0.0801%" height="15" fill="rgb(237,113,11)" fg:x="731" fg:w="1"/><text x="58.7768%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="58.5268%" y="533" width="0.3203%" height="15" fill="rgb(236,70,20)" fg:x="731" fg:w="4"/><text x="58.7768%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="58.5268%" y="517" width="0.3203%" height="15" fill="rgb(234,94,7)" fg:x="731" fg:w="4"/><text x="58.7768%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="58.6069%" y="501" width="0.2402%" height="15" fill="rgb(250,221,0)" fg:x="732" fg:w="3"/><text x="58.8569%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="58.6869%" y="485" width="0.1601%" height="15" fill="rgb(245,149,46)" fg:x="733" fg:w="2"/><text x="58.9369%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.6869%" y="469" width="0.1601%" height="15" fill="rgb(215,37,27)" fg:x="733" fg:w="2"/><text x="58.9369%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.6869%" y="453" width="0.1601%" height="15" fill="rgb(232,65,3)" fg:x="733" fg:w="2"/><text x="58.9369%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.7670%" y="437" width="0.0801%" height="15" fill="rgb(214,2,16)" fg:x="734" fg:w="1"/><text x="59.0170%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.7670%" y="421" width="0.0801%" height="15" fill="rgb(227,131,50)" fg:x="734" fg:w="1"/><text x="59.0170%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.7670%" y="405" width="0.0801%" height="15" fill="rgb(247,131,45)" fg:x="734" fg:w="1"/><text x="59.0170%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.7670%" y="389" width="0.0801%" height="15" fill="rgb(215,97,47)" fg:x="734" fg:w="1"/><text x="59.0170%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.8471%" y="469" width="0.0801%" height="15" fill="rgb(233,143,12)" fg:x="735" fg:w="1"/><text x="59.0971%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.0072%" y="437" width="0.0801%" height="15" fill="rgb(222,57,17)" fg:x="737" fg:w="1"/><text x="59.2572%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.0072%" y="421" width="0.0801%" height="15" fill="rgb(214,119,38)" fg:x="737" fg:w="1"/><text x="59.2572%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.0873%" y="389" width="0.0801%" height="15" fill="rgb(217,28,47)" fg:x="738" fg:w="1"/><text x="59.3373%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.0873%" y="373" width="0.0801%" height="15" fill="rgb(231,14,52)" fg:x="738" fg:w="1"/><text x="59.3373%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.0873%" y="357" width="0.0801%" height="15" fill="rgb(220,158,18)" fg:x="738" fg:w="1"/><text x="59.3373%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.1673%" y="357" width="0.0801%" height="15" fill="rgb(222,143,46)" fg:x="739" fg:w="1"/><text x="59.4173%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.1673%" y="341" width="0.0801%" height="15" fill="rgb(227,165,5)" fg:x="739" fg:w="1"/><text x="59.4173%" y="351.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="58.8471%" y="517" width="0.4804%" height="15" fill="rgb(216,222,49)" fg:x="735" fg:w="6"/><text x="59.0971%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="58.8471%" y="501" width="0.4804%" height="15" fill="rgb(238,73,39)" fg:x="735" fg:w="6"/><text x="59.0971%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="58.8471%" y="485" width="0.4804%" height="15" fill="rgb(252,115,9)" fg:x="735" fg:w="6"/><text x="59.0971%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="58.9271%" y="469" width="0.4003%" height="15" fill="rgb(238,202,4)" fg:x="736" fg:w="5"/><text x="59.1771%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="58.9271%" y="453" width="0.4003%" height="15" fill="rgb(252,153,44)" fg:x="736" fg:w="5"/><text x="59.1771%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="59.0873%" y="437" width="0.2402%" height="15" fill="rgb(235,128,27)" fg:x="738" fg:w="3"/><text x="59.3373%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="59.0873%" y="421" width="0.2402%" height="15" fill="rgb(221,121,47)" fg:x="738" fg:w="3"/><text x="59.3373%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="59.0873%" y="405" width="0.2402%" height="15" fill="rgb(247,211,47)" fg:x="738" fg:w="3"/><text x="59.3373%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.1673%" y="389" width="0.1601%" height="15" fill="rgb(252,47,49)" fg:x="739" fg:w="2"/><text x="59.4173%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.1673%" y="373" width="0.1601%" height="15" fill="rgb(219,119,53)" fg:x="739" fg:w="2"/><text x="59.4173%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.2474%" y="357" width="0.0801%" height="15" fill="rgb(243,165,53)" fg:x="740" fg:w="1"/><text x="59.4974%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.2474%" y="341" width="0.0801%" height="15" fill="rgb(230,12,35)" fg:x="740" fg:w="1"/><text x="59.4974%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2474%" y="325" width="0.0801%" height="15" fill="rgb(239,57,49)" fg:x="740" fg:w="1"/><text x="59.4974%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.4075%" y="485" width="0.0801%" height="15" fill="rgb(231,154,7)" fg:x="742" fg:w="1"/><text x="59.6575%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.4876%" y="405" width="0.0801%" height="15" fill="rgb(248,81,34)" fg:x="743" fg:w="1"/><text x="59.7376%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.4876%" y="389" width="0.0801%" height="15" fill="rgb(247,9,5)" fg:x="743" fg:w="1"/><text x="59.7376%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="59.4876%" y="373" width="0.0801%" height="15" fill="rgb(228,172,27)" fg:x="743" fg:w="1"/><text x="59.7376%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.4876%" y="357" width="0.0801%" height="15" fill="rgb(230,57,44)" fg:x="743" fg:w="1"/><text x="59.7376%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.4876%" y="341" width="0.0801%" height="15" fill="rgb(249,35,22)" fg:x="743" fg:w="1"/><text x="59.7376%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="59.4876%" y="325" width="0.0801%" height="15" fill="rgb(250,137,27)" fg:x="743" fg:w="1"/><text x="59.7376%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.4876%" y="309" width="0.0801%" height="15" fill="rgb(251,57,31)" fg:x="743" fg:w="1"/><text x="59.7376%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4876%" y="293" width="0.0801%" height="15" fill="rgb(238,60,0)" fg:x="743" fg:w="1"/><text x="59.7376%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="59.4876%" y="437" width="0.2402%" height="15" fill="rgb(242,185,39)" fg:x="743" fg:w="3"/><text x="59.7376%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="59.4876%" y="421" width="0.2402%" height="15" fill="rgb(240,63,43)" fg:x="743" fg:w="3"/><text x="59.7376%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="59.5677%" y="405" width="0.1601%" height="15" fill="rgb(236,155,6)" fg:x="744" fg:w="2"/><text x="59.8177%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="59.5677%" y="389" width="0.1601%" height="15" fill="rgb(215,11,29)" fg:x="744" fg:w="2"/><text x="59.8177%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="59.5677%" y="373" width="0.1601%" height="15" fill="rgb(228,180,48)" fg:x="744" fg:w="2"/><text x="59.8177%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.5677%" y="357" width="0.1601%" height="15" fill="rgb(241,102,12)" fg:x="744" fg:w="2"/><text x="59.8177%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="59.5677%" y="341" width="0.1601%" height="15" fill="rgb(246,213,4)" fg:x="744" fg:w="2"/><text x="59.8177%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.6477%" y="325" width="0.0801%" height="15" fill="rgb(218,134,35)" fg:x="745" fg:w="1"/><text x="59.8977%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.7278%" y="389" width="0.0801%" height="15" fill="rgb(251,117,35)" fg:x="746" fg:w="1"/><text x="59.9778%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="59.7278%" y="437" width="0.2402%" height="15" fill="rgb(206,156,45)" fg:x="746" fg:w="3"/><text x="59.9778%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="59.7278%" y="421" width="0.2402%" height="15" fill="rgb(218,52,27)" fg:x="746" fg:w="3"/><text x="59.9778%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="59.7278%" y="405" width="0.2402%" height="15" fill="rgb(238,83,36)" fg:x="746" fg:w="3"/><text x="59.9778%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="59.8078%" y="389" width="0.1601%" height="15" fill="rgb(218,53,43)" fg:x="747" fg:w="2"/><text x="60.0578%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="59.8078%" y="373" width="0.1601%" height="15" fill="rgb(239,54,39)" fg:x="747" fg:w="2"/><text x="60.0578%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.9680%" y="405" width="0.0801%" height="15" fill="rgb(212,198,13)" fg:x="749" fg:w="1"/><text x="60.2180%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="59.4876%" y="485" width="0.6405%" height="15" fill="rgb(234,54,46)" fg:x="743" fg:w="8"/><text x="59.7376%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="59.4876%" y="469" width="0.6405%" height="15" fill="rgb(217,120,7)" fg:x="743" fg:w="8"/><text x="59.7376%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="59.4876%" y="453" width="0.6405%" height="15" fill="rgb(246,39,15)" fg:x="743" fg:w="8"/><text x="59.7376%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.9680%" y="437" width="0.1601%" height="15" fill="rgb(242,143,31)" fg:x="749" fg:w="2"/><text x="60.2180%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.9680%" y="421" width="0.1601%" height="15" fill="rgb(252,60,24)" fg:x="749" fg:w="2"/><text x="60.2180%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.0480%" y="405" width="0.0801%" height="15" fill="rgb(249,220,7)" fg:x="750" fg:w="1"/><text x="60.2980%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="60.0480%" y="389" width="0.0801%" height="15" fill="rgb(236,67,13)" fg:x="750" fg:w="1"/><text x="60.2980%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="60.0480%" y="373" width="0.0801%" height="15" fill="rgb(210,62,39)" fg:x="750" fg:w="1"/><text x="60.2980%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.0480%" y="357" width="0.0801%" height="15" fill="rgb(219,122,53)" fg:x="750" fg:w="1"/><text x="60.2980%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.0480%" y="341" width="0.0801%" height="15" fill="rgb(218,87,25)" fg:x="750" fg:w="1"/><text x="60.2980%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (18 samples, 1.44%)</title><rect x="58.8471%" y="533" width="1.4412%" height="15" fill="rgb(234,179,48)" fg:x="735" fg:w="18"/><text x="59.0971%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.96%)</title><rect x="59.3275%" y="517" width="0.9608%" height="15" fill="rgb(248,90,0)" fg:x="741" fg:w="12"/><text x="59.5775%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="59.3275%" y="501" width="0.9608%" height="15" fill="rgb(207,228,37)" fg:x="741" fg:w="12"/><text x="59.5775%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.1281%" y="485" width="0.1601%" height="15" fill="rgb(235,214,15)" fg:x="751" fg:w="2"/><text x="60.3781%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1281%" y="469" width="0.1601%" height="15" fill="rgb(210,144,39)" fg:x="751" fg:w="2"/><text x="60.3781%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.2082%" y="453" width="0.0801%" height="15" fill="rgb(222,67,41)" fg:x="752" fg:w="1"/><text x="60.4582%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (23 samples, 1.84%)</title><rect x="58.5268%" y="549" width="1.8415%" height="15" fill="rgb(205,35,37)" fg:x="731" fg:w="23"/><text x="58.7768%" y="559.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="60.2882%" y="533" width="0.0801%" height="15" fill="rgb(216,125,40)" fg:x="753" fg:w="1"/><text x="60.5382%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="60.2882%" y="517" width="0.0801%" height="15" fill="rgb(228,227,20)" fg:x="753" fg:w="1"/><text x="60.5382%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.2882%" y="501" width="0.0801%" height="15" fill="rgb(242,173,45)" fg:x="753" fg:w="1"/><text x="60.5382%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2882%" y="485" width="0.0801%" height="15" fill="rgb(215,79,24)" fg:x="753" fg:w="1"/><text x="60.5382%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="60.2882%" y="469" width="0.0801%" height="15" fill="rgb(238,164,38)" fg:x="753" fg:w="1"/><text x="60.5382%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2882%" y="453" width="0.0801%" height="15" fill="rgb(245,196,38)" fg:x="753" fg:w="1"/><text x="60.5382%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.2882%" y="437" width="0.0801%" height="15" fill="rgb(231,217,29)" fg:x="753" fg:w="1"/><text x="60.5382%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2882%" y="421" width="0.0801%" height="15" fill="rgb(245,6,4)" fg:x="753" fg:w="1"/><text x="60.5382%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.2882%" y="405" width="0.0801%" height="15" fill="rgb(214,76,49)" fg:x="753" fg:w="1"/><text x="60.5382%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.2882%" y="389" width="0.0801%" height="15" fill="rgb(205,96,12)" fg:x="753" fg:w="1"/><text x="60.5382%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (26 samples, 2.08%)</title><rect x="58.3667%" y="581" width="2.0817%" height="15" fill="rgb(243,131,4)" fg:x="729" fg:w="26"/><text x="58.6167%" y="591.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (26 samples, 2.08%)</title><rect x="58.3667%" y="565" width="2.0817%" height="15" fill="rgb(214,114,4)" fg:x="729" fg:w="26"/><text x="58.6167%" y="575.50">&lt;..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="60.3683%" y="549" width="0.0801%" height="15" fill="rgb(234,215,15)" fg:x="754" fg:w="1"/><text x="60.6183%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3683%" y="533" width="0.0801%" height="15" fill="rgb(250,216,45)" fg:x="754" fg:w="1"/><text x="60.6183%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3683%" y="517" width="0.0801%" height="15" fill="rgb(236,128,4)" fg:x="754" fg:w="1"/><text x="60.6183%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3683%" y="501" width="0.0801%" height="15" fill="rgb(234,50,33)" fg:x="754" fg:w="1"/><text x="60.6183%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.3683%" y="485" width="0.0801%" height="15" fill="rgb(253,131,37)" fg:x="754" fg:w="1"/><text x="60.6183%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.3683%" y="469" width="0.0801%" height="15" fill="rgb(218,55,27)" fg:x="754" fg:w="1"/><text x="60.6183%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.3683%" y="453" width="0.0801%" height="15" fill="rgb(241,220,28)" fg:x="754" fg:w="1"/><text x="60.6183%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="60.3683%" y="437" width="0.0801%" height="15" fill="rgb(241,90,48)" fg:x="754" fg:w="1"/><text x="60.6183%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.3683%" y="421" width="0.0801%" height="15" fill="rgb(216,43,37)" fg:x="754" fg:w="1"/><text x="60.6183%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.5284%" y="453" width="0.1601%" height="15" fill="rgb(207,173,9)" fg:x="756" fg:w="2"/><text x="60.7784%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.5284%" y="437" width="0.1601%" height="15" fill="rgb(240,126,30)" fg:x="756" fg:w="2"/><text x="60.7784%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="60.5284%" y="421" width="0.1601%" height="15" fill="rgb(228,178,53)" fg:x="756" fg:w="2"/><text x="60.7784%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="60.5284%" y="405" width="0.1601%" height="15" fill="rgb(217,33,4)" fg:x="756" fg:w="2"/><text x="60.7784%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="60.5284%" y="389" width="0.1601%" height="15" fill="rgb(206,124,34)" fg:x="756" fg:w="2"/><text x="60.7784%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="60.5284%" y="373" width="0.1601%" height="15" fill="rgb(208,122,53)" fg:x="756" fg:w="2"/><text x="60.7784%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.6085%" y="357" width="0.0801%" height="15" fill="rgb(215,202,26)" fg:x="757" fg:w="1"/><text x="60.8585%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="60.4484%" y="549" width="0.3203%" height="15" fill="rgb(232,198,31)" fg:x="755" fg:w="4"/><text x="60.6984%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="60.5284%" y="533" width="0.2402%" height="15" fill="rgb(222,23,35)" fg:x="756" fg:w="3"/><text x="60.7784%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="60.5284%" y="517" width="0.2402%" height="15" fill="rgb(242,27,53)" fg:x="756" fg:w="3"/><text x="60.7784%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="60.5284%" y="501" width="0.2402%" height="15" fill="rgb(210,216,42)" fg:x="756" fg:w="3"/><text x="60.7784%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="60.5284%" y="485" width="0.2402%" height="15" fill="rgb(234,39,38)" fg:x="756" fg:w="3"/><text x="60.7784%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="60.5284%" y="469" width="0.2402%" height="15" fill="rgb(235,126,54)" fg:x="756" fg:w="3"/><text x="60.7784%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="60.6886%" y="453" width="0.0801%" height="15" fill="rgb(235,150,33)" fg:x="758" fg:w="1"/><text x="60.9386%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.6886%" y="437" width="0.0801%" height="15" fill="rgb(249,49,53)" fg:x="758" fg:w="1"/><text x="60.9386%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="60.4484%" y="581" width="0.4003%" height="15" fill="rgb(238,60,50)" fg:x="755" fg:w="5"/><text x="60.6984%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="60.4484%" y="565" width="0.4003%" height="15" fill="rgb(210,5,2)" fg:x="755" fg:w="5"/><text x="60.6984%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7686%" y="549" width="0.0801%" height="15" fill="rgb(214,207,24)" fg:x="759" fg:w="1"/><text x="61.0186%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7686%" y="533" width="0.0801%" height="15" fill="rgb(228,173,2)" fg:x="759" fg:w="1"/><text x="61.0186%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.7686%" y="517" width="0.0801%" height="15" fill="rgb(244,26,8)" fg:x="759" fg:w="1"/><text x="61.0186%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.7686%" y="501" width="0.0801%" height="15" fill="rgb(249,153,35)" fg:x="759" fg:w="1"/><text x="61.0186%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.7686%" y="485" width="0.0801%" height="15" fill="rgb(221,215,40)" fg:x="759" fg:w="1"/><text x="61.0186%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.7686%" y="469" width="0.0801%" height="15" fill="rgb(238,106,35)" fg:x="759" fg:w="1"/><text x="61.0186%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.7686%" y="453" width="0.0801%" height="15" fill="rgb(207,195,21)" fg:x="759" fg:w="1"/><text x="61.0186%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.7686%" y="437" width="0.0801%" height="15" fill="rgb(205,43,29)" fg:x="759" fg:w="1"/><text x="61.0186%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.7686%" y="421" width="0.0801%" height="15" fill="rgb(236,35,21)" fg:x="759" fg:w="1"/><text x="61.0186%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.7686%" y="405" width="0.0801%" height="15" fill="rgb(244,74,8)" fg:x="759" fg:w="1"/><text x="61.0186%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.7686%" y="389" width="0.0801%" height="15" fill="rgb(241,229,7)" fg:x="759" fg:w="1"/><text x="61.0186%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.7686%" y="373" width="0.0801%" height="15" fill="rgb(212,223,25)" fg:x="759" fg:w="1"/><text x="61.0186%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.8487%" y="549" width="0.0801%" height="15" fill="rgb(234,58,53)" fg:x="760" fg:w="1"/><text x="61.0987%" y="559.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (34 samples, 2.72%)</title><rect x="58.2866%" y="629" width="2.7222%" height="15" fill="rgb(244,36,1)" fg:x="728" fg:w="34"/><text x="58.5366%" y="639.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (33 samples, 2.64%)</title><rect x="58.3667%" y="613" width="2.6421%" height="15" fill="rgb(222,40,54)" fg:x="729" fg:w="33"/><text x="58.6167%" y="623.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (33 samples, 2.64%)</title><rect x="58.3667%" y="597" width="2.6421%" height="15" fill="rgb(210,207,39)" fg:x="729" fg:w="33"/><text x="58.6167%" y="607.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.8487%" y="581" width="0.1601%" height="15" fill="rgb(234,52,14)" fg:x="760" fg:w="2"/><text x="61.0987%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.8487%" y="565" width="0.1601%" height="15" fill="rgb(239,108,46)" fg:x="760" fg:w="2"/><text x="61.0987%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.9287%" y="549" width="0.0801%" height="15" fill="rgb(252,223,5)" fg:x="761" fg:w="1"/><text x="61.1787%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.9287%" y="533" width="0.0801%" height="15" fill="rgb(227,181,11)" fg:x="761" fg:w="1"/><text x="61.1787%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.9287%" y="517" width="0.0801%" height="15" fill="rgb(248,126,40)" fg:x="761" fg:w="1"/><text x="61.1787%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="61.0088%" y="629" width="0.2402%" height="15" fill="rgb(243,1,18)" fg:x="762" fg:w="3"/><text x="61.2588%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="61.1689%" y="613" width="0.0801%" height="15" fill="rgb(214,145,23)" fg:x="764" fg:w="1"/><text x="61.4189%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="61.1689%" y="597" width="0.0801%" height="15" fill="rgb(241,218,11)" fg:x="764" fg:w="1"/><text x="61.4189%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="61.1689%" y="581" width="0.0801%" height="15" fill="rgb(214,219,24)" fg:x="764" fg:w="1"/><text x="61.4189%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="61.1689%" y="565" width="0.0801%" height="15" fill="rgb(235,32,7)" fg:x="764" fg:w="1"/><text x="61.4189%" y="575.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (39 samples, 3.12%)</title><rect x="58.2066%" y="645" width="3.1225%" height="15" fill="rgb(227,121,28)" fg:x="727" fg:w="39"/><text x="58.4566%" y="655.50">&lt;en..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="61.2490%" y="629" width="0.0801%" height="15" fill="rgb(216,129,49)" fg:x="765" fg:w="1"/><text x="61.4990%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.2490%" y="613" width="0.0801%" height="15" fill="rgb(207,194,50)" fg:x="765" fg:w="1"/><text x="61.4990%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3291%" y="645" width="0.0801%" height="15" fill="rgb(207,4,18)" fg:x="766" fg:w="1"/><text x="61.5791%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3291%" y="629" width="0.0801%" height="15" fill="rgb(213,50,30)" fg:x="766" fg:w="1"/><text x="61.5791%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3291%" y="613" width="0.0801%" height="15" fill="rgb(208,77,22)" fg:x="766" fg:w="1"/><text x="61.5791%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.3291%" y="597" width="0.0801%" height="15" fill="rgb(244,204,34)" fg:x="766" fg:w="1"/><text x="61.5791%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.3291%" y="581" width="0.0801%" height="15" fill="rgb(230,20,17)" fg:x="766" fg:w="1"/><text x="61.5791%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.3291%" y="565" width="0.0801%" height="15" fill="rgb(237,83,15)" fg:x="766" fg:w="1"/><text x="61.5791%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.3291%" y="549" width="0.0801%" height="15" fill="rgb(221,109,25)" fg:x="766" fg:w="1"/><text x="61.5791%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.3291%" y="533" width="0.0801%" height="15" fill="rgb(205,194,52)" fg:x="766" fg:w="1"/><text x="61.5791%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.3291%" y="517" width="0.0801%" height="15" fill="rgb(244,173,54)" fg:x="766" fg:w="1"/><text x="61.5791%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.3291%" y="501" width="0.0801%" height="15" fill="rgb(227,181,18)" fg:x="766" fg:w="1"/><text x="61.5791%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.3291%" y="485" width="0.0801%" height="15" fill="rgb(238,36,30)" fg:x="766" fg:w="1"/><text x="61.5791%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.3291%" y="469" width="0.0801%" height="15" fill="rgb(254,85,0)" fg:x="766" fg:w="1"/><text x="61.5791%" y="479.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="61.4892%" y="517" width="0.0801%" height="15" fill="rgb(247,63,33)" fg:x="768" fg:w="1"/><text x="61.7392%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4892%" y="501" width="0.0801%" height="15" fill="rgb(220,7,54)" fg:x="768" fg:w="1"/><text x="61.7392%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4892%" y="485" width="0.0801%" height="15" fill="rgb(238,227,21)" fg:x="768" fg:w="1"/><text x="61.7392%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4892%" y="469" width="0.0801%" height="15" fill="rgb(237,29,31)" fg:x="768" fg:w="1"/><text x="61.7392%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.4892%" y="453" width="0.0801%" height="15" fill="rgb(211,21,50)" fg:x="768" fg:w="1"/><text x="61.7392%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.4892%" y="437" width="0.0801%" height="15" fill="rgb(239,119,2)" fg:x="768" fg:w="1"/><text x="61.7392%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.4892%" y="421" width="0.0801%" height="15" fill="rgb(250,2,39)" fg:x="768" fg:w="1"/><text x="61.7392%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4892%" y="405" width="0.0801%" height="15" fill="rgb(244,46,53)" fg:x="768" fg:w="1"/><text x="61.7392%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4892%" y="389" width="0.0801%" height="15" fill="rgb(209,21,19)" fg:x="768" fg:w="1"/><text x="61.7392%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.4892%" y="373" width="0.0801%" height="15" fill="rgb(236,145,4)" fg:x="768" fg:w="1"/><text x="61.7392%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.4892%" y="357" width="0.0801%" height="15" fill="rgb(220,133,36)" fg:x="768" fg:w="1"/><text x="61.7392%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.4892%" y="341" width="0.0801%" height="15" fill="rgb(244,18,3)" fg:x="768" fg:w="1"/><text x="61.7392%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.4892%" y="325" width="0.0801%" height="15" fill="rgb(232,171,48)" fg:x="768" fg:w="1"/><text x="61.7392%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4892%" y="309" width="0.0801%" height="15" fill="rgb(223,223,53)" fg:x="768" fg:w="1"/><text x="61.7392%" y="319.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="61.8895%" y="485" width="0.0801%" height="15" fill="rgb(246,92,13)" fg:x="773" fg:w="1"/><text x="62.1395%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="61.8895%" y="469" width="0.0801%" height="15" fill="rgb(229,171,10)" fg:x="773" fg:w="1"/><text x="62.1395%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.8895%" y="453" width="0.0801%" height="15" fill="rgb(213,131,26)" fg:x="773" fg:w="1"/><text x="62.1395%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.8895%" y="437" width="0.0801%" height="15" fill="rgb(242,87,54)" fg:x="773" fg:w="1"/><text x="62.1395%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.8895%" y="421" width="0.0801%" height="15" fill="rgb(237,21,35)" fg:x="773" fg:w="1"/><text x="62.1395%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.0496%" y="469" width="0.0801%" height="15" fill="rgb(253,13,47)" fg:x="775" fg:w="1"/><text x="62.2996%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="62.2098%" y="453" width="0.5604%" height="15" fill="rgb(215,122,49)" fg:x="777" fg:w="7"/><text x="62.4598%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="62.2898%" y="437" width="0.4804%" height="15" fill="rgb(209,179,30)" fg:x="778" fg:w="6"/><text x="62.5398%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="62.4500%" y="421" width="0.3203%" height="15" fill="rgb(235,100,24)" fg:x="780" fg:w="4"/><text x="62.7000%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.6101%" y="405" width="0.1601%" height="15" fill="rgb(209,67,24)" fg:x="782" fg:w="2"/><text x="62.8601%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.6101%" y="389" width="0.1601%" height="15" fill="rgb(206,74,32)" fg:x="782" fg:w="2"/><text x="62.8601%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="62.6101%" y="373" width="0.1601%" height="15" fill="rgb(212,45,25)" fg:x="782" fg:w="2"/><text x="62.8601%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="62.6101%" y="357" width="0.1601%" height="15" fill="rgb(239,26,3)" fg:x="782" fg:w="2"/><text x="62.8601%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="62.6101%" y="341" width="0.1601%" height="15" fill="rgb(218,36,15)" fg:x="782" fg:w="2"/><text x="62.8601%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.6101%" y="325" width="0.1601%" height="15" fill="rgb(206,108,24)" fg:x="782" fg:w="2"/><text x="62.8601%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.6101%" y="309" width="0.1601%" height="15" fill="rgb(234,204,42)" fg:x="782" fg:w="2"/><text x="62.8601%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="62.6101%" y="293" width="0.1601%" height="15" fill="rgb(229,2,11)" fg:x="782" fg:w="2"/><text x="62.8601%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="62.6101%" y="277" width="0.1601%" height="15" fill="rgb(221,20,48)" fg:x="782" fg:w="2"/><text x="62.8601%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="62.6101%" y="261" width="0.1601%" height="15" fill="rgb(244,164,10)" fg:x="782" fg:w="2"/><text x="62.8601%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="62.6101%" y="245" width="0.1601%" height="15" fill="rgb(243,229,2)" fg:x="782" fg:w="2"/><text x="62.8601%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="62.6101%" y="229" width="0.1601%" height="15" fill="rgb(232,131,37)" fg:x="782" fg:w="2"/><text x="62.8601%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.7702%" y="453" width="0.0801%" height="15" fill="rgb(217,156,11)" fg:x="784" fg:w="1"/><text x="63.0202%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.7702%" y="437" width="0.0801%" height="15" fill="rgb(239,99,48)" fg:x="784" fg:w="1"/><text x="63.0202%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.7702%" y="421" width="0.0801%" height="15" fill="rgb(231,209,9)" fg:x="784" fg:w="1"/><text x="63.0202%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.7702%" y="405" width="0.0801%" height="15" fill="rgb(254,97,27)" fg:x="784" fg:w="1"/><text x="63.0202%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.1705%" y="389" width="0.0801%" height="15" fill="rgb(223,151,38)" fg:x="789" fg:w="1"/><text x="63.4205%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.2506%" y="389" width="0.0801%" height="15" fill="rgb(219,206,35)" fg:x="790" fg:w="1"/><text x="63.5006%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.3307%" y="389" width="0.0801%" height="15" fill="rgb(216,130,31)" fg:x="791" fg:w="1"/><text x="63.5807%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.3307%" y="373" width="0.0801%" height="15" fill="rgb(251,97,34)" fg:x="791" fg:w="1"/><text x="63.5807%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (20 samples, 1.60%)</title><rect x="61.9696%" y="485" width="1.6013%" height="15" fill="rgb(246,159,47)" fg:x="774" fg:w="20"/><text x="62.2196%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (18 samples, 1.44%)</title><rect x="62.1297%" y="469" width="1.4412%" height="15" fill="rgb(232,87,10)" fg:x="776" fg:w="18"/><text x="62.3797%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="62.8503%" y="453" width="0.7206%" height="15" fill="rgb(249,1,37)" fg:x="785" fg:w="9"/><text x="63.1003%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="62.8503%" y="437" width="0.7206%" height="15" fill="rgb(239,135,14)" fg:x="785" fg:w="9"/><text x="63.1003%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="62.9303%" y="421" width="0.6405%" height="15" fill="rgb(253,116,46)" fg:x="786" fg:w="8"/><text x="63.1803%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="62.9303%" y="405" width="0.6405%" height="15" fill="rgb(222,217,37)" fg:x="786" fg:w="8"/><text x="63.1803%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.4107%" y="389" width="0.1601%" height="15" fill="rgb(252,96,8)" fg:x="792" fg:w="2"/><text x="63.6607%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.4107%" y="373" width="0.1601%" height="15" fill="rgb(254,103,41)" fg:x="792" fg:w="2"/><text x="63.6607%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.4908%" y="357" width="0.0801%" height="15" fill="rgb(218,213,19)" fg:x="793" fg:w="1"/><text x="63.7408%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="63.5709%" y="469" width="0.1601%" height="15" fill="rgb(253,95,21)" fg:x="794" fg:w="2"/><text x="63.8209%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="63.7310%" y="469" width="0.0801%" height="15" fill="rgb(229,26,28)" fg:x="796" fg:w="1"/><text x="63.9810%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.7310%" y="453" width="0.0801%" height="15" fill="rgb(230,129,16)" fg:x="796" fg:w="1"/><text x="63.9810%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="63.8110%" y="469" width="0.1601%" height="15" fill="rgb(236,126,17)" fg:x="797" fg:w="2"/><text x="64.0610%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.8911%" y="453" width="0.0801%" height="15" fill="rgb(209,33,33)" fg:x="798" fg:w="1"/><text x="64.1411%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2114%" y="325" width="0.0801%" height="15" fill="rgb(227,85,29)" fg:x="802" fg:w="1"/><text x="64.4614%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2114%" y="309" width="0.0801%" height="15" fill="rgb(241,53,46)" fg:x="802" fg:w="1"/><text x="64.4614%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.2114%" y="293" width="0.0801%" height="15" fill="rgb(228,167,53)" fg:x="802" fg:w="1"/><text x="64.4614%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.2114%" y="277" width="0.0801%" height="15" fill="rgb(238,195,45)" fg:x="802" fg:w="1"/><text x="64.4614%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.2114%" y="261" width="0.0801%" height="15" fill="rgb(252,124,45)" fg:x="802" fg:w="1"/><text x="64.4614%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.2114%" y="245" width="0.0801%" height="15" fill="rgb(251,38,35)" fg:x="802" fg:w="1"/><text x="64.4614%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="64.2114%" y="229" width="0.0801%" height="15" fill="rgb(227,33,2)" fg:x="802" fg:w="1"/><text x="64.4614%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="64.2114%" y="213" width="0.0801%" height="15" fill="rgb(223,157,46)" fg:x="802" fg:w="1"/><text x="64.4614%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="63.9712%" y="421" width="0.4804%" height="15" fill="rgb(222,78,41)" fg:x="799" fg:w="6"/><text x="64.2212%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="64.2114%" y="405" width="0.2402%" height="15" fill="rgb(248,176,11)" fg:x="802" fg:w="3"/><text x="64.4614%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="64.2114%" y="389" width="0.2402%" height="15" fill="rgb(241,221,18)" fg:x="802" fg:w="3"/><text x="64.4614%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="64.2114%" y="373" width="0.2402%" height="15" fill="rgb(218,85,22)" fg:x="802" fg:w="3"/><text x="64.4614%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="64.2114%" y="357" width="0.2402%" height="15" fill="rgb(222,223,7)" fg:x="802" fg:w="3"/><text x="64.4614%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="64.2114%" y="341" width="0.2402%" height="15" fill="rgb(254,59,39)" fg:x="802" fg:w="3"/><text x="64.4614%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="64.2914%" y="325" width="0.1601%" height="15" fill="rgb(247,100,27)" fg:x="803" fg:w="2"/><text x="64.5414%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="64.2914%" y="309" width="0.1601%" height="15" fill="rgb(237,207,10)" fg:x="803" fg:w="2"/><text x="64.5414%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4516%" y="421" width="0.0801%" height="15" fill="rgb(220,121,28)" fg:x="805" fg:w="1"/><text x="64.7016%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4516%" y="405" width="0.0801%" height="15" fill="rgb(213,223,20)" fg:x="805" fg:w="1"/><text x="64.7016%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.4516%" y="389" width="0.0801%" height="15" fill="rgb(205,121,27)" fg:x="805" fg:w="1"/><text x="64.7016%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.4516%" y="373" width="0.0801%" height="15" fill="rgb(253,24,53)" fg:x="805" fg:w="1"/><text x="64.7016%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.4516%" y="357" width="0.0801%" height="15" fill="rgb(224,224,47)" fg:x="805" fg:w="1"/><text x="64.7016%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.4516%" y="341" width="0.0801%" height="15" fill="rgb(250,125,36)" fg:x="805" fg:w="1"/><text x="64.7016%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.4516%" y="325" width="0.0801%" height="15" fill="rgb(240,144,38)" fg:x="805" fg:w="1"/><text x="64.7016%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.4516%" y="309" width="0.0801%" height="15" fill="rgb(250,15,50)" fg:x="805" fg:w="1"/><text x="64.7016%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.4516%" y="293" width="0.0801%" height="15" fill="rgb(210,24,26)" fg:x="805" fg:w="1"/><text x="64.7016%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.4516%" y="277" width="0.0801%" height="15" fill="rgb(234,53,53)" fg:x="805" fg:w="1"/><text x="64.7016%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.4516%" y="261" width="0.0801%" height="15" fill="rgb(208,108,28)" fg:x="805" fg:w="1"/><text x="64.7016%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.4516%" y="245" width="0.0801%" height="15" fill="rgb(227,143,7)" fg:x="805" fg:w="1"/><text x="64.7016%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="63.9712%" y="453" width="0.6405%" height="15" fill="rgb(238,189,38)" fg:x="799" fg:w="8"/><text x="64.2212%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="63.9712%" y="437" width="0.6405%" height="15" fill="rgb(222,69,15)" fg:x="799" fg:w="8"/><text x="64.2212%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5316%" y="421" width="0.0801%" height="15" fill="rgb(213,169,7)" fg:x="806" fg:w="1"/><text x="64.7816%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.6117%" y="421" width="0.0801%" height="15" fill="rgb(251,219,4)" fg:x="807" fg:w="1"/><text x="64.8617%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.6117%" y="405" width="0.0801%" height="15" fill="rgb(241,55,40)" fg:x="807" fg:w="1"/><text x="64.8617%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.6918%" y="405" width="0.0801%" height="15" fill="rgb(243,57,30)" fg:x="808" fg:w="1"/><text x="64.9418%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="64.6117%" y="453" width="0.2402%" height="15" fill="rgb(234,50,30)" fg:x="807" fg:w="3"/><text x="64.8617%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="64.6117%" y="437" width="0.2402%" height="15" fill="rgb(239,23,42)" fg:x="807" fg:w="3"/><text x="64.8617%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.6918%" y="421" width="0.1601%" height="15" fill="rgb(217,38,19)" fg:x="808" fg:w="2"/><text x="64.9418%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.7718%" y="405" width="0.0801%" height="15" fill="rgb(215,179,16)" fg:x="809" fg:w="1"/><text x="65.0218%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.7718%" y="389" width="0.0801%" height="15" fill="rgb(254,21,37)" fg:x="809" fg:w="1"/><text x="65.0218%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.8519%" y="421" width="0.0801%" height="15" fill="rgb(219,207,48)" fg:x="810" fg:w="1"/><text x="65.1019%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.8519%" y="405" width="0.0801%" height="15" fill="rgb(227,225,41)" fg:x="810" fg:w="1"/><text x="65.1019%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="64.9319%" y="421" width="0.1601%" height="15" fill="rgb(223,130,1)" fg:x="811" fg:w="2"/><text x="65.1819%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="65.0921%" y="389" width="0.4003%" height="15" fill="rgb(249,54,42)" fg:x="813" fg:w="5"/><text x="65.3421%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.1721%" y="373" width="0.3203%" height="15" fill="rgb(248,69,25)" fg:x="814" fg:w="4"/><text x="65.4221%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="65.3323%" y="357" width="0.1601%" height="15" fill="rgb(234,21,32)" fg:x="816" fg:w="2"/><text x="65.5823%" y="367.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (48 samples, 3.84%)</title><rect x="61.7294%" y="501" width="3.8431%" height="15" fill="rgb(252,136,6)" fg:x="771" fg:w="48"/><text x="61.9794%" y="511.50">&lt;&amp;ke..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (25 samples, 2.00%)</title><rect x="63.5709%" y="485" width="2.0016%" height="15" fill="rgb(245,87,12)" fg:x="794" fg:w="25"/><text x="63.8209%" y="495.50">&lt;..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (20 samples, 1.60%)</title><rect x="63.9712%" y="469" width="1.6013%" height="15" fill="rgb(208,12,15)" fg:x="799" fg:w="20"/><text x="64.2212%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="64.8519%" y="453" width="0.7206%" height="15" fill="rgb(250,98,2)" fg:x="810" fg:w="9"/><text x="65.1019%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="64.8519%" y="437" width="0.7206%" height="15" fill="rgb(205,213,15)" fg:x="810" fg:w="9"/><text x="65.1019%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="65.0921%" y="421" width="0.4804%" height="15" fill="rgb(248,192,44)" fg:x="813" fg:w="6"/><text x="65.3421%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="65.0921%" y="405" width="0.4804%" height="15" fill="rgb(221,89,17)" fg:x="813" fg:w="6"/><text x="65.3421%" y="415.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="65.4924%" y="389" width="0.0801%" height="15" fill="rgb(209,55,3)" fg:x="818" fg:w="1"/><text x="65.7424%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.5725%" y="501" width="0.0801%" height="15" fill="rgb(247,23,45)" fg:x="819" fg:w="1"/><text x="65.8225%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="65.7326%" y="469" width="0.0801%" height="15" fill="rgb(235,152,23)" fg:x="821" fg:w="1"/><text x="65.9826%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="65.7326%" y="453" width="0.0801%" height="15" fill="rgb(244,63,13)" fg:x="821" fg:w="1"/><text x="65.9826%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="65.8127%" y="165" width="0.0801%" height="15" fill="rgb(227,30,37)" fg:x="822" fg:w="1"/><text x="66.0627%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="65.8127%" y="149" width="0.0801%" height="15" fill="rgb(224,49,42)" fg:x="822" fg:w="1"/><text x="66.0627%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="65.8127%" y="133" width="0.0801%" height="15" fill="rgb(218,129,5)" fg:x="822" fg:w="1"/><text x="66.0627%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="65.8127%" y="117" width="0.0801%" height="15" fill="rgb(240,199,54)" fg:x="822" fg:w="1"/><text x="66.0627%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="65.8127%" y="101" width="0.0801%" height="15" fill="rgb(234,31,13)" fg:x="822" fg:w="1"/><text x="66.0627%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="65.8127%" y="85" width="0.0801%" height="15" fill="rgb(219,73,54)" fg:x="822" fg:w="1"/><text x="66.0627%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="65.8127%" y="69" width="0.0801%" height="15" fill="rgb(251,162,10)" fg:x="822" fg:w="1"/><text x="66.0627%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="65.8127%" y="53" width="0.0801%" height="15" fill="rgb(240,138,47)" fg:x="822" fg:w="1"/><text x="66.0627%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="65.8127%" y="37" width="0.0801%" height="15" fill="rgb(216,138,26)" fg:x="822" fg:w="1"/><text x="66.0627%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="65.6525%" y="501" width="0.3203%" height="15" fill="rgb(243,17,35)" fg:x="820" fg:w="4"/><text x="65.9025%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="65.7326%" y="485" width="0.2402%" height="15" fill="rgb(241,60,18)" fg:x="821" fg:w="3"/><text x="65.9826%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="65.8127%" y="469" width="0.1601%" height="15" fill="rgb(234,2,44)" fg:x="822" fg:w="2"/><text x="66.0627%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="65.8127%" y="453" width="0.1601%" height="15" fill="rgb(225,225,33)" fg:x="822" fg:w="2"/><text x="66.0627%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="65.8127%" y="437" width="0.1601%" height="15" fill="rgb(234,50,31)" fg:x="822" fg:w="2"/><text x="66.0627%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="65.8127%" y="421" width="0.1601%" height="15" fill="rgb(249,6,25)" fg:x="822" fg:w="2"/><text x="66.0627%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="65.8127%" y="405" width="0.1601%" height="15" fill="rgb(241,5,17)" fg:x="822" fg:w="2"/><text x="66.0627%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="65.8127%" y="389" width="0.1601%" height="15" fill="rgb(207,116,10)" fg:x="822" fg:w="2"/><text x="66.0627%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="65.8127%" y="373" width="0.1601%" height="15" fill="rgb(222,128,18)" fg:x="822" fg:w="2"/><text x="66.0627%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="65.8127%" y="357" width="0.1601%" height="15" fill="rgb(229,109,25)" fg:x="822" fg:w="2"/><text x="66.0627%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="65.8127%" y="341" width="0.1601%" height="15" fill="rgb(222,102,25)" fg:x="822" fg:w="2"/><text x="66.0627%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="65.8127%" y="325" width="0.1601%" height="15" fill="rgb(239,211,5)" fg:x="822" fg:w="2"/><text x="66.0627%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="65.8127%" y="309" width="0.1601%" height="15" fill="rgb(223,136,26)" fg:x="822" fg:w="2"/><text x="66.0627%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="65.8127%" y="293" width="0.1601%" height="15" fill="rgb(227,30,15)" fg:x="822" fg:w="2"/><text x="66.0627%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="65.8127%" y="277" width="0.1601%" height="15" fill="rgb(247,76,4)" fg:x="822" fg:w="2"/><text x="66.0627%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="65.8127%" y="261" width="0.1601%" height="15" fill="rgb(245,38,48)" fg:x="822" fg:w="2"/><text x="66.0627%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="65.8127%" y="245" width="0.1601%" height="15" fill="rgb(210,220,14)" fg:x="822" fg:w="2"/><text x="66.0627%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="65.8127%" y="229" width="0.1601%" height="15" fill="rgb(224,60,51)" fg:x="822" fg:w="2"/><text x="66.0627%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="65.8127%" y="213" width="0.1601%" height="15" fill="rgb(212,133,49)" fg:x="822" fg:w="2"/><text x="66.0627%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="65.8127%" y="197" width="0.1601%" height="15" fill="rgb(231,39,22)" fg:x="822" fg:w="2"/><text x="66.0627%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="65.8127%" y="181" width="0.1601%" height="15" fill="rgb(236,173,22)" fg:x="822" fg:w="2"/><text x="66.0627%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.8927%" y="165" width="0.0801%" height="15" fill="rgb(210,70,0)" fg:x="823" fg:w="1"/><text x="66.1427%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="65.9728%" y="501" width="0.0801%" height="15" fill="rgb(215,170,11)" fg:x="824" fg:w="1"/><text x="66.2228%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="65.9728%" y="485" width="0.0801%" height="15" fill="rgb(220,154,28)" fg:x="824" fg:w="1"/><text x="66.2228%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.9728%" y="469" width="0.0801%" height="15" fill="rgb(240,160,41)" fg:x="824" fg:w="1"/><text x="66.2228%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.4532%" y="405" width="0.1601%" height="15" fill="rgb(243,215,41)" fg:x="830" fg:w="2"/><text x="66.7032%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.5332%" y="389" width="0.0801%" height="15" fill="rgb(214,208,31)" fg:x="831" fg:w="1"/><text x="66.7832%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.5332%" y="373" width="0.0801%" height="15" fill="rgb(247,57,22)" fg:x="831" fg:w="1"/><text x="66.7832%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.5332%" y="357" width="0.0801%" height="15" fill="rgb(228,73,52)" fg:x="831" fg:w="1"/><text x="66.7832%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.5332%" y="341" width="0.0801%" height="15" fill="rgb(252,60,9)" fg:x="831" fg:w="1"/><text x="66.7832%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.5332%" y="325" width="0.0801%" height="15" fill="rgb(233,9,51)" fg:x="831" fg:w="1"/><text x="66.7832%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.5332%" y="309" width="0.0801%" height="15" fill="rgb(223,67,14)" fg:x="831" fg:w="1"/><text x="66.7832%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.5332%" y="293" width="0.0801%" height="15" fill="rgb(222,86,2)" fg:x="831" fg:w="1"/><text x="66.7832%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.5332%" y="277" width="0.0801%" height="15" fill="rgb(243,58,54)" fg:x="831" fg:w="1"/><text x="66.7832%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.5332%" y="261" width="0.0801%" height="15" fill="rgb(210,200,39)" fg:x="831" fg:w="1"/><text x="66.7832%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.5332%" y="245" width="0.0801%" height="15" fill="rgb(238,135,9)" fg:x="831" fg:w="1"/><text x="66.7832%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.5332%" y="229" width="0.0801%" height="15" fill="rgb(232,179,7)" fg:x="831" fg:w="1"/><text x="66.7832%" y="239.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="66.3731%" y="469" width="0.3203%" height="15" fill="rgb(245,65,41)" fg:x="829" fg:w="4"/><text x="66.6231%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="66.3731%" y="453" width="0.3203%" height="15" fill="rgb(227,43,8)" fg:x="829" fg:w="4"/><text x="66.6231%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="66.4532%" y="437" width="0.2402%" height="15" fill="rgb(235,91,14)" fg:x="830" fg:w="3"/><text x="66.7032%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.4532%" y="421" width="0.2402%" height="15" fill="rgb(235,219,31)" fg:x="830" fg:w="3"/><text x="66.7032%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.6133%" y="405" width="0.0801%" height="15" fill="rgb(227,121,25)" fg:x="832" fg:w="1"/><text x="66.8633%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8535%" y="293" width="0.0801%" height="15" fill="rgb(254,129,24)" fg:x="835" fg:w="1"/><text x="67.1035%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8535%" y="277" width="0.0801%" height="15" fill="rgb(226,144,49)" fg:x="835" fg:w="1"/><text x="67.1035%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8535%" y="261" width="0.0801%" height="15" fill="rgb(214,187,32)" fg:x="835" fg:w="1"/><text x="67.1035%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8535%" y="245" width="0.0801%" height="15" fill="rgb(243,129,46)" fg:x="835" fg:w="1"/><text x="67.1035%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8535%" y="229" width="0.0801%" height="15" fill="rgb(221,185,35)" fg:x="835" fg:w="1"/><text x="67.1035%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.8535%" y="213" width="0.0801%" height="15" fill="rgb(205,0,32)" fg:x="835" fg:w="1"/><text x="67.1035%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.8535%" y="197" width="0.0801%" height="15" fill="rgb(229,179,12)" fg:x="835" fg:w="1"/><text x="67.1035%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.8535%" y="181" width="0.0801%" height="15" fill="rgb(252,107,19)" fg:x="835" fg:w="1"/><text x="67.1035%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.8535%" y="165" width="0.0801%" height="15" fill="rgb(220,95,27)" fg:x="835" fg:w="1"/><text x="67.1035%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.8535%" y="149" width="0.0801%" height="15" fill="rgb(240,113,40)" fg:x="835" fg:w="1"/><text x="67.1035%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.8535%" y="133" width="0.0801%" height="15" fill="rgb(208,4,43)" fg:x="835" fg:w="1"/><text x="67.1035%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.8535%" y="117" width="0.0801%" height="15" fill="rgb(247,189,30)" fg:x="835" fg:w="1"/><text x="67.1035%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.8535%" y="101" width="0.0801%" height="15" fill="rgb(231,157,17)" fg:x="835" fg:w="1"/><text x="67.1035%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.8535%" y="85" width="0.0801%" height="15" fill="rgb(224,139,6)" fg:x="835" fg:w="1"/><text x="67.1035%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.8535%" y="69" width="0.0801%" height="15" fill="rgb(223,83,16)" fg:x="835" fg:w="1"/><text x="67.1035%" y="79.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.9335%" y="261" width="0.0801%" height="15" fill="rgb(232,211,20)" fg:x="836" fg:w="1"/><text x="67.1835%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.9335%" y="245" width="0.0801%" height="15" fill="rgb(225,203,35)" fg:x="836" fg:w="1"/><text x="67.1835%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="66.7734%" y="325" width="0.4003%" height="15" fill="rgb(215,211,44)" fg:x="834" fg:w="5"/><text x="67.0234%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="66.7734%" y="309" width="0.4003%" height="15" fill="rgb(248,213,26)" fg:x="834" fg:w="5"/><text x="67.0234%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.9335%" y="293" width="0.2402%" height="15" fill="rgb(214,23,52)" fg:x="836" fg:w="3"/><text x="67.1835%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.9335%" y="277" width="0.2402%" height="15" fill="rgb(225,173,50)" fg:x="836" fg:w="3"/><text x="67.1835%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="67.0136%" y="261" width="0.1601%" height="15" fill="rgb(206,150,22)" fg:x="837" fg:w="2"/><text x="67.2636%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.0136%" y="245" width="0.1601%" height="15" fill="rgb(239,64,23)" fg:x="837" fg:w="2"/><text x="67.2636%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0937%" y="229" width="0.0801%" height="15" fill="rgb(242,50,38)" fg:x="838" fg:w="1"/><text x="67.3437%" y="239.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="67.0937%" y="213" width="0.0801%" height="15" fill="rgb(217,91,15)" fg:x="838" fg:w="1"/><text x="67.3437%" y="223.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="67.0937%" y="197" width="0.0801%" height="15" fill="rgb(230,172,6)" fg:x="838" fg:w="1"/><text x="67.3437%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.1737%" y="293" width="0.0801%" height="15" fill="rgb(221,98,26)" fg:x="839" fg:w="1"/><text x="67.4237%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (9 samples, 0.72%)</title><rect x="66.7734%" y="357" width="0.7206%" height="15" fill="rgb(227,210,45)" fg:x="834" fg:w="9"/><text x="67.0234%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="66.7734%" y="341" width="0.7206%" height="15" fill="rgb(206,8,30)" fg:x="834" fg:w="9"/><text x="67.0234%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="67.1737%" y="325" width="0.3203%" height="15" fill="rgb(241,219,17)" fg:x="839" fg:w="4"/><text x="67.4237%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="67.1737%" y="309" width="0.3203%" height="15" fill="rgb(247,121,29)" fg:x="839" fg:w="4"/><text x="67.4237%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="67.2538%" y="293" width="0.2402%" height="15" fill="rgb(219,169,49)" fg:x="840" fg:w="3"/><text x="67.5038%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.3339%" y="277" width="0.1601%" height="15" fill="rgb(253,49,49)" fg:x="841" fg:w="2"/><text x="67.5839%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.4139%" y="261" width="0.0801%" height="15" fill="rgb(217,178,3)" fg:x="842" fg:w="1"/><text x="67.6639%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.4139%" y="245" width="0.0801%" height="15" fill="rgb(234,73,37)" fg:x="842" fg:w="1"/><text x="67.6639%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.4139%" y="229" width="0.0801%" height="15" fill="rgb(250,98,22)" fg:x="842" fg:w="1"/><text x="67.6639%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.4139%" y="213" width="0.0801%" height="15" fill="rgb(220,108,37)" fg:x="842" fg:w="1"/><text x="67.6639%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="67.4940%" y="277" width="0.0801%" height="15" fill="rgb(225,168,10)" fg:x="843" fg:w="1"/><text x="67.7440%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="67.4940%" y="293" width="0.1601%" height="15" fill="rgb(247,215,21)" fg:x="843" fg:w="2"/><text x="67.7440%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.5741%" y="277" width="0.0801%" height="15" fill="rgb(253,189,31)" fg:x="844" fg:w="1"/><text x="67.8241%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.6541%" y="293" width="0.1601%" height="15" fill="rgb(241,54,22)" fg:x="845" fg:w="2"/><text x="67.9041%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.6541%" y="277" width="0.1601%" height="15" fill="rgb(211,87,4)" fg:x="845" fg:w="2"/><text x="67.9041%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.8943%" y="261" width="0.0801%" height="15" fill="rgb(245,112,24)" fg:x="848" fg:w="1"/><text x="68.1443%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.8943%" y="245" width="0.0801%" height="15" fill="rgb(235,190,41)" fg:x="848" fg:w="1"/><text x="68.1443%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8943%" y="229" width="0.0801%" height="15" fill="rgb(214,89,8)" fg:x="848" fg:w="1"/><text x="68.1443%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="67.9744%" y="245" width="0.0801%" height="15" fill="rgb(249,155,35)" fg:x="849" fg:w="1"/><text x="68.2244%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.1345%" y="229" width="0.0801%" height="15" fill="rgb(249,88,26)" fg:x="851" fg:w="1"/><text x="68.3845%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1345%" y="213" width="0.0801%" height="15" fill="rgb(232,56,8)" fg:x="851" fg:w="1"/><text x="68.3845%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.2146%" y="229" width="0.0801%" height="15" fill="rgb(240,95,3)" fg:x="852" fg:w="1"/><text x="68.4646%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.2146%" y="213" width="0.0801%" height="15" fill="rgb(222,44,28)" fg:x="852" fg:w="1"/><text x="68.4646%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.2146%" y="197" width="0.0801%" height="15" fill="rgb(234,16,30)" fg:x="852" fg:w="1"/><text x="68.4646%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.5348%" y="197" width="0.0801%" height="15" fill="rgb(223,26,17)" fg:x="856" fg:w="1"/><text x="68.7848%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.5348%" y="181" width="0.0801%" height="15" fill="rgb(239,187,47)" fg:x="856" fg:w="1"/><text x="68.7848%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.6149%" y="197" width="0.1601%" height="15" fill="rgb(247,102,50)" fg:x="857" fg:w="2"/><text x="68.8649%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.7750%" y="165" width="0.0801%" height="15" fill="rgb(231,216,22)" fg:x="859" fg:w="1"/><text x="69.0250%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.7750%" y="149" width="0.0801%" height="15" fill="rgb(216,201,26)" fg:x="859" fg:w="1"/><text x="69.0250%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="68.4548%" y="213" width="0.4804%" height="15" fill="rgb(214,186,23)" fg:x="855" fg:w="6"/><text x="68.7048%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="68.7750%" y="197" width="0.1601%" height="15" fill="rgb(235,184,4)" fg:x="859" fg:w="2"/><text x="69.0250%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.7750%" y="181" width="0.1601%" height="15" fill="rgb(244,46,17)" fg:x="859" fg:w="2"/><text x="69.0250%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.8551%" y="165" width="0.0801%" height="15" fill="rgb(248,74,46)" fg:x="860" fg:w="1"/><text x="69.1051%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.8551%" y="149" width="0.0801%" height="15" fill="rgb(243,79,5)" fg:x="860" fg:w="1"/><text x="69.1051%" y="159.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="68.8551%" y="133" width="0.0801%" height="15" fill="rgb(213,148,1)" fg:x="860" fg:w="1"/><text x="69.1051%" y="143.50"></text></g><g><title>serde_json::de::from_trait (19 samples, 1.52%)</title><rect x="67.4940%" y="341" width="1.5212%" height="15" fill="rgb(221,30,0)" fg:x="843" fg:w="19"/><text x="67.7440%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19 samples, 1.52%)</title><rect x="67.4940%" y="325" width="1.5212%" height="15" fill="rgb(207,85,29)" fg:x="843" fg:w="19"/><text x="67.7440%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.52%)</title><rect x="67.4940%" y="309" width="1.5212%" height="15" fill="rgb(239,31,46)" fg:x="843" fg:w="19"/><text x="67.7440%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15 samples, 1.20%)</title><rect x="67.8143%" y="293" width="1.2010%" height="15" fill="rgb(219,6,1)" fg:x="847" fg:w="15"/><text x="68.0643%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.20%)</title><rect x="67.8143%" y="277" width="1.2010%" height="15" fill="rgb(229,90,29)" fg:x="847" fg:w="15"/><text x="68.0643%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.04%)</title><rect x="67.9744%" y="261" width="1.0408%" height="15" fill="rgb(242,201,42)" fg:x="849" fg:w="13"/><text x="68.2244%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="68.0544%" y="245" width="0.9608%" height="15" fill="rgb(243,80,54)" fg:x="850" fg:w="12"/><text x="68.3044%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="68.2946%" y="229" width="0.7206%" height="15" fill="rgb(223,166,15)" fg:x="853" fg:w="9"/><text x="68.5446%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.9351%" y="213" width="0.0801%" height="15" fill="rgb(238,78,27)" fg:x="861" fg:w="1"/><text x="69.1851%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.9351%" y="197" width="0.0801%" height="15" fill="rgb(235,28,43)" fg:x="861" fg:w="1"/><text x="69.1851%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.9351%" y="181" width="0.0801%" height="15" fill="rgb(240,210,28)" fg:x="861" fg:w="1"/><text x="69.1851%" y="191.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="68.9351%" y="165" width="0.0801%" height="15" fill="rgb(253,6,46)" fg:x="861" fg:w="1"/><text x="69.1851%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.0152%" y="277" width="0.0801%" height="15" fill="rgb(250,159,47)" fg:x="862" fg:w="1"/><text x="69.2652%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.0953%" y="277" width="0.0801%" height="15" fill="rgb(216,139,2)" fg:x="863" fg:w="1"/><text x="69.3453%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.0953%" y="261" width="0.0801%" height="15" fill="rgb(221,124,44)" fg:x="863" fg:w="1"/><text x="69.3453%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.2554%" y="229" width="0.1601%" height="15" fill="rgb(205,37,22)" fg:x="865" fg:w="2"/><text x="69.5054%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.2554%" y="213" width="0.1601%" height="15" fill="rgb(250,55,8)" fg:x="865" fg:w="2"/><text x="69.5054%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="69.2554%" y="197" width="0.1601%" height="15" fill="rgb(215,83,48)" fg:x="865" fg:w="2"/><text x="69.5054%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="69.2554%" y="261" width="0.3203%" height="15" fill="rgb(253,2,32)" fg:x="865" fg:w="4"/><text x="69.5054%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="69.2554%" y="245" width="0.3203%" height="15" fill="rgb(236,67,28)" fg:x="865" fg:w="4"/><text x="69.5054%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="69.4155%" y="229" width="0.1601%" height="15" fill="rgb(252,55,15)" fg:x="867" fg:w="2"/><text x="69.6655%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.4155%" y="213" width="0.1601%" height="15" fill="rgb(243,173,17)" fg:x="867" fg:w="2"/><text x="69.6655%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.4155%" y="197" width="0.1601%" height="15" fill="rgb(215,212,13)" fg:x="867" fg:w="2"/><text x="69.6655%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.4155%" y="181" width="0.1601%" height="15" fill="rgb(253,176,6)" fg:x="867" fg:w="2"/><text x="69.6655%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="69.4956%" y="165" width="0.0801%" height="15" fill="rgb(236,105,26)" fg:x="868" fg:w="1"/><text x="69.7456%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.4956%" y="149" width="0.0801%" height="15" fill="rgb(239,226,32)" fg:x="868" fg:w="1"/><text x="69.7456%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.5757%" y="261" width="0.0801%" height="15" fill="rgb(236,104,51)" fg:x="869" fg:w="1"/><text x="69.8257%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.5757%" y="245" width="0.0801%" height="15" fill="rgb(220,172,33)" fg:x="869" fg:w="1"/><text x="69.8257%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.5757%" y="229" width="0.0801%" height="15" fill="rgb(224,182,25)" fg:x="869" fg:w="1"/><text x="69.8257%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.5757%" y="213" width="0.0801%" height="15" fill="rgb(236,184,24)" fg:x="869" fg:w="1"/><text x="69.8257%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="69.7358%" y="229" width="0.2402%" height="15" fill="rgb(241,221,14)" fg:x="871" fg:w="3"/><text x="69.9858%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.8959%" y="213" width="0.0801%" height="15" fill="rgb(227,146,5)" fg:x="873" fg:w="1"/><text x="70.1459%" y="223.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="69.9760%" y="213" width="0.0801%" height="15" fill="rgb(214,15,23)" fg:x="874" fg:w="1"/><text x="70.2260%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="69.9760%" y="197" width="0.0801%" height="15" fill="rgb(233,157,31)" fg:x="874" fg:w="1"/><text x="70.2260%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.9760%" y="181" width="0.0801%" height="15" fill="rgb(211,27,52)" fg:x="874" fg:w="1"/><text x="70.2260%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (19 samples, 1.52%)</title><rect x="69.0152%" y="309" width="1.5212%" height="15" fill="rgb(212,223,15)" fg:x="862" fg:w="19"/><text x="69.2652%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (19 samples, 1.52%)</title><rect x="69.0152%" y="293" width="1.5212%" height="15" fill="rgb(254,211,0)" fg:x="862" fg:w="19"/><text x="69.2652%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (17 samples, 1.36%)</title><rect x="69.1753%" y="277" width="1.3611%" height="15" fill="rgb(205,43,38)" fg:x="864" fg:w="17"/><text x="69.4253%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="69.6557%" y="261" width="0.8807%" height="15" fill="rgb(242,206,46)" fg:x="870" fg:w="11"/><text x="69.9057%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="69.6557%" y="245" width="0.8807%" height="15" fill="rgb(220,221,12)" fg:x="870" fg:w="11"/><text x="69.9057%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (7 samples, 0.56%)</title><rect x="69.9760%" y="229" width="0.5604%" height="15" fill="rgb(217,156,35)" fg:x="874" fg:w="7"/><text x="70.2260%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="70.0560%" y="213" width="0.4804%" height="15" fill="rgb(207,181,49)" fg:x="875" fg:w="6"/><text x="70.3060%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="70.0560%" y="197" width="0.4804%" height="15" fill="rgb(235,103,47)" fg:x="875" fg:w="6"/><text x="70.3060%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="70.4564%" y="181" width="0.0801%" height="15" fill="rgb(222,63,28)" fg:x="880" fg:w="1"/><text x="70.7064%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.4564%" y="165" width="0.0801%" height="15" fill="rgb(244,137,21)" fg:x="880" fg:w="1"/><text x="70.7064%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.4564%" y="149" width="0.0801%" height="15" fill="rgb(228,35,27)" fg:x="880" fg:w="1"/><text x="70.7064%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.4564%" y="133" width="0.0801%" height="15" fill="rgb(226,191,41)" fg:x="880" fg:w="1"/><text x="70.7064%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (40 samples, 3.20%)</title><rect x="67.4940%" y="357" width="3.2026%" height="15" fill="rgb(210,154,3)" fg:x="843" fg:w="40"/><text x="67.7440%" y="367.50">&lt;ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (21 samples, 1.68%)</title><rect x="69.0152%" y="341" width="1.6813%" height="15" fill="rgb(216,60,49)" fg:x="862" fg:w="21"/><text x="69.2652%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (21 samples, 1.68%)</title><rect x="69.0152%" y="325" width="1.6813%" height="15" fill="rgb(226,17,20)" fg:x="862" fg:w="21"/><text x="69.2652%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.5364%" y="309" width="0.1601%" height="15" fill="rgb(206,115,35)" fg:x="881" fg:w="2"/><text x="70.7864%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.5364%" y="293" width="0.1601%" height="15" fill="rgb(227,88,1)" fg:x="881" fg:w="2"/><text x="70.7864%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.6165%" y="277" width="0.0801%" height="15" fill="rgb(230,222,24)" fg:x="882" fg:w="1"/><text x="70.8665%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.6165%" y="261" width="0.0801%" height="15" fill="rgb(214,124,32)" fg:x="882" fg:w="1"/><text x="70.8665%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6966%" y="325" width="0.0801%" height="15" fill="rgb(240,41,36)" fg:x="883" fg:w="1"/><text x="70.9466%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6966%" y="309" width="0.0801%" height="15" fill="rgb(221,17,52)" fg:x="883" fg:w="1"/><text x="70.9466%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.6966%" y="293" width="0.0801%" height="15" fill="rgb(252,70,16)" fg:x="883" fg:w="1"/><text x="70.9466%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.6966%" y="277" width="0.0801%" height="15" fill="rgb(250,177,4)" fg:x="883" fg:w="1"/><text x="70.9466%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.6966%" y="261" width="0.0801%" height="15" fill="rgb(240,188,47)" fg:x="883" fg:w="1"/><text x="70.9466%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.6966%" y="245" width="0.0801%" height="15" fill="rgb(215,92,12)" fg:x="883" fg:w="1"/><text x="70.9466%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.6966%" y="229" width="0.0801%" height="15" fill="rgb(242,110,29)" fg:x="883" fg:w="1"/><text x="70.9466%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="70.6966%" y="213" width="0.0801%" height="15" fill="rgb(208,211,26)" fg:x="883" fg:w="1"/><text x="70.9466%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.6966%" y="197" width="0.0801%" height="15" fill="rgb(244,147,6)" fg:x="883" fg:w="1"/><text x="70.9466%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="70.6966%" y="357" width="0.1601%" height="15" fill="rgb(211,130,42)" fg:x="883" fg:w="2"/><text x="70.9466%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.6966%" y="341" width="0.1601%" height="15" fill="rgb(220,63,1)" fg:x="883" fg:w="2"/><text x="70.9466%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.7766%" y="325" width="0.0801%" height="15" fill="rgb(241,212,30)" fg:x="884" fg:w="1"/><text x="71.0266%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.7766%" y="309" width="0.0801%" height="15" fill="rgb(233,153,17)" fg:x="884" fg:w="1"/><text x="71.0266%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.7766%" y="293" width="0.0801%" height="15" fill="rgb(236,3,10)" fg:x="884" fg:w="1"/><text x="71.0266%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.7766%" y="277" width="0.0801%" height="15" fill="rgb(232,41,21)" fg:x="884" fg:w="1"/><text x="71.0266%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.7766%" y="261" width="0.0801%" height="15" fill="rgb(206,63,51)" fg:x="884" fg:w="1"/><text x="71.0266%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.7766%" y="245" width="0.0801%" height="15" fill="rgb(250,214,3)" fg:x="884" fg:w="1"/><text x="71.0266%" y="255.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (59 samples, 4.72%)</title><rect x="66.7734%" y="373" width="4.7238%" height="15" fill="rgb(254,89,27)" fg:x="834" fg:w="59"/><text x="67.0234%" y="383.50">engine..</text></g><g><title>engine::session::internal::EntityMap::add_entity (8 samples, 0.64%)</title><rect x="70.8567%" y="357" width="0.6405%" height="15" fill="rgb(249,41,14)" fg:x="885" fg:w="8"/><text x="71.1067%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.64%)</title><rect x="70.8567%" y="341" width="0.6405%" height="15" fill="rgb(221,196,51)" fg:x="885" fg:w="8"/><text x="71.1067%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.56%)</title><rect x="70.9367%" y="325" width="0.5604%" height="15" fill="rgb(214,116,26)" fg:x="886" fg:w="7"/><text x="71.1867%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.56%)</title><rect x="70.9367%" y="309" width="0.5604%" height="15" fill="rgb(236,67,7)" fg:x="886" fg:w="7"/><text x="71.1867%" y="319.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="71.0168%" y="293" width="0.4804%" height="15" fill="rgb(253,179,32)" fg:x="887" fg:w="6"/><text x="71.2668%" y="303.50"></text></g><g><title>core::iter::adapters::try_process (61 samples, 4.88%)</title><rect x="66.6934%" y="453" width="4.8839%" height="15" fill="rgb(218,33,15)" fg:x="833" fg:w="61"/><text x="66.9434%" y="463.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (61 samples, 4.88%)</title><rect x="66.6934%" y="437" width="4.8839%" height="15" fill="rgb(217,202,41)" fg:x="833" fg:w="61"/><text x="66.9434%" y="447.50">&lt;alloc..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (60 samples, 4.80%)</title><rect x="66.7734%" y="421" width="4.8038%" height="15" fill="rgb(234,133,5)" fg:x="834" fg:w="60"/><text x="67.0234%" y="431.50">&lt;core:..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (60 samples, 4.80%)</title><rect x="66.7734%" y="405" width="4.8038%" height="15" fill="rgb(240,47,40)" fg:x="834" fg:w="60"/><text x="67.0234%" y="415.50">&lt;engin..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (60 samples, 4.80%)</title><rect x="66.7734%" y="389" width="4.8038%" height="15" fill="rgb(234,166,26)" fg:x="834" fg:w="60"/><text x="67.0234%" y="399.50">&lt;engin..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="71.4972%" y="373" width="0.0801%" height="15" fill="rgb(244,125,51)" fg:x="893" fg:w="1"/><text x="71.7472%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (62 samples, 4.96%)</title><rect x="66.6934%" y="469" width="4.9640%" height="15" fill="rgb(229,171,11)" fg:x="833" fg:w="62"/><text x="66.9434%" y="479.50">&lt;plugi..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="71.5773%" y="453" width="0.0801%" height="15" fill="rgb(224,38,45)" fg:x="894" fg:w="1"/><text x="71.8273%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.5773%" y="437" width="0.0801%" height="15" fill="rgb(237,27,7)" fg:x="894" fg:w="1"/><text x="71.8273%" y="447.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="71.6573%" y="469" width="0.0801%" height="15" fill="rgb(216,52,7)" fg:x="895" fg:w="1"/><text x="71.9073%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.6573%" y="453" width="0.0801%" height="15" fill="rgb(243,11,11)" fg:x="895" fg:w="1"/><text x="71.9073%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.8175%" y="437" width="0.0801%" height="15" fill="rgb(253,167,20)" fg:x="897" fg:w="1"/><text x="72.0675%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.8175%" y="421" width="0.0801%" height="15" fill="rgb(215,207,5)" fg:x="897" fg:w="1"/><text x="72.0675%" y="431.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (133 samples, 10.65%)</title><rect x="61.4892%" y="533" width="10.6485%" height="15" fill="rgb(252,127,31)" fg:x="768" fg:w="133"/><text x="61.7392%" y="543.50">&lt;plugins_core::l..</text></g><g><title>plugins_core::looking::model::new_area_observation (132 samples, 10.57%)</title><rect x="61.5693%" y="517" width="10.5685%" height="15" fill="rgb(209,106,27)" fg:x="769" fg:w="132"/><text x="61.8193%" y="527.50">plugins_core::l..</text></g><g><title>kernel::model::entry::Entry::scope (76 samples, 6.08%)</title><rect x="66.0528%" y="501" width="6.0849%" height="15" fill="rgb(214,220,18)" fg:x="825" fg:w="76"/><text x="66.3028%" y="511.50">kernel::..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (74 samples, 5.92%)</title><rect x="66.2130%" y="485" width="5.9247%" height="15" fill="rgb(237,89,12)" fg:x="827" fg:w="74"/><text x="66.4630%" y="495.50">kernel::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="71.7374%" y="469" width="0.4003%" height="15" fill="rgb(209,167,36)" fg:x="896" fg:w="5"/><text x="71.9874%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="71.7374%" y="453" width="0.4003%" height="15" fill="rgb(243,45,22)" fg:x="896" fg:w="5"/><text x="71.9874%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="71.8975%" y="437" width="0.2402%" height="15" fill="rgb(239,2,46)" fg:x="898" fg:w="3"/><text x="72.1475%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="71.8975%" y="421" width="0.2402%" height="15" fill="rgb(241,101,0)" fg:x="898" fg:w="3"/><text x="72.1475%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="71.9776%" y="405" width="0.1601%" height="15" fill="rgb(244,34,31)" fg:x="899" fg:w="2"/><text x="72.2276%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.9776%" y="389" width="0.1601%" height="15" fill="rgb(248,23,22)" fg:x="899" fg:w="2"/><text x="72.2276%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.9776%" y="373" width="0.1601%" height="15" fill="rgb(218,27,48)" fg:x="899" fg:w="2"/><text x="72.2276%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0576%" y="357" width="0.0801%" height="15" fill="rgb(232,78,1)" fg:x="900" fg:w="1"/><text x="72.3076%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.1377%" y="533" width="0.0801%" height="15" fill="rgb(233,169,12)" fg:x="901" fg:w="1"/><text x="72.3877%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (178 samples, 14.25%)</title><rect x="58.1265%" y="709" width="14.2514%" height="15" fill="rgb(225,222,54)" fg:x="726" fg:w="178"/><text x="58.3765%" y="719.50">&lt;engine::session::Sess..</text></g><g><title>kernel::plugins::mw::apply_middleware (178 samples, 14.25%)</title><rect x="58.1265%" y="693" width="14.2514%" height="15" fill="rgb(245,126,29)" fg:x="726" fg:w="178"/><text x="58.3765%" y="703.50">kernel::plugins::mw::a..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (178 samples, 14.25%)</title><rect x="58.1265%" y="677" width="14.2514%" height="15" fill="rgb(241,63,48)" fg:x="726" fg:w="178"/><text x="58.3765%" y="687.50">kernel::plugins::mw::M..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (178 samples, 14.25%)</title><rect x="58.1265%" y="661" width="14.2514%" height="15" fill="rgb(235,126,38)" fg:x="726" fg:w="178"/><text x="58.3765%" y="671.50">&lt;engine::session::Expa..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (137 samples, 10.97%)</title><rect x="61.4091%" y="645" width="10.9688%" height="15" fill="rgb(232,96,49)" fg:x="767" fg:w="137"/><text x="61.6591%" y="655.50">kernel::plugins:..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (137 samples, 10.97%)</title><rect x="61.4091%" y="629" width="10.9688%" height="15" fill="rgb(211,146,40)" fg:x="767" fg:w="137"/><text x="61.6591%" y="639.50">&lt;plugins_dynlib:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (136 samples, 10.89%)</title><rect x="61.4892%" y="613" width="10.8887%" height="15" fill="rgb(247,93,44)" fg:x="768" fg:w="136"/><text x="61.7392%" y="623.50">kernel::plugins:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (136 samples, 10.89%)</title><rect x="61.4892%" y="597" width="10.8887%" height="15" fill="rgb(251,41,49)" fg:x="768" fg:w="136"/><text x="61.7392%" y="607.50">core::ops::funct..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (136 samples, 10.89%)</title><rect x="61.4892%" y="581" width="10.8887%" height="15" fill="rgb(218,155,12)" fg:x="768" fg:w="136"/><text x="61.7392%" y="591.50">kernel::plugins:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (136 samples, 10.89%)</title><rect x="61.4892%" y="565" width="10.8887%" height="15" fill="rgb(221,161,30)" fg:x="768" fg:w="136"/><text x="61.7392%" y="575.50">core::ops::funct..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (136 samples, 10.89%)</title><rect x="61.4892%" y="549" width="10.8887%" height="15" fill="rgb(221,179,11)" fg:x="768" fg:w="136"/><text x="61.7392%" y="559.50">&lt;engine::session..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="72.2178%" y="533" width="0.1601%" height="15" fill="rgb(224,170,48)" fg:x="902" fg:w="2"/><text x="72.4678%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="72.2178%" y="517" width="0.1601%" height="15" fill="rgb(223,117,5)" fg:x="902" fg:w="2"/><text x="72.4678%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2978%" y="501" width="0.0801%" height="15" fill="rgb(209,52,20)" fg:x="903" fg:w="1"/><text x="72.5478%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="72.4580%" y="677" width="0.0801%" height="15" fill="rgb(209,19,41)" fg:x="905" fg:w="1"/><text x="72.7080%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5380%" y="661" width="0.0801%" height="15" fill="rgb(210,177,12)" fg:x="906" fg:w="1"/><text x="72.7880%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5380%" y="645" width="0.0801%" height="15" fill="rgb(211,159,37)" fg:x="906" fg:w="1"/><text x="72.7880%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5380%" y="629" width="0.0801%" height="15" fill="rgb(209,20,2)" fg:x="906" fg:w="1"/><text x="72.7880%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.5380%" y="613" width="0.0801%" height="15" fill="rgb(244,3,46)" fg:x="906" fg:w="1"/><text x="72.7880%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.5380%" y="597" width="0.0801%" height="15" fill="rgb(220,94,38)" fg:x="906" fg:w="1"/><text x="72.7880%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.5380%" y="581" width="0.0801%" height="15" fill="rgb(253,14,31)" fg:x="906" fg:w="1"/><text x="72.7880%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.5380%" y="565" width="0.0801%" height="15" fill="rgb(234,176,13)" fg:x="906" fg:w="1"/><text x="72.7880%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.5380%" y="549" width="0.0801%" height="15" fill="rgb(218,62,25)" fg:x="906" fg:w="1"/><text x="72.7880%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.6181%" y="581" width="0.0801%" height="15" fill="rgb(216,124,40)" fg:x="907" fg:w="1"/><text x="72.8681%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.6181%" y="597" width="0.1601%" height="15" fill="rgb(228,170,12)" fg:x="907" fg:w="2"/><text x="72.8681%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6982%" y="581" width="0.0801%" height="15" fill="rgb(231,226,5)" fg:x="908" fg:w="1"/><text x="72.9482%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6982%" y="565" width="0.0801%" height="15" fill="rgb(237,122,22)" fg:x="908" fg:w="1"/><text x="72.9482%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.6982%" y="549" width="0.0801%" height="15" fill="rgb(209,185,25)" fg:x="908" fg:w="1"/><text x="72.9482%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.6982%" y="533" width="0.0801%" height="15" fill="rgb(228,200,32)" fg:x="908" fg:w="1"/><text x="72.9482%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.6982%" y="517" width="0.0801%" height="15" fill="rgb(217,140,10)" fg:x="908" fg:w="1"/><text x="72.9482%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6982%" y="501" width="0.0801%" height="15" fill="rgb(253,17,24)" fg:x="908" fg:w="1"/><text x="72.9482%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6982%" y="485" width="0.0801%" height="15" fill="rgb(212,61,6)" fg:x="908" fg:w="1"/><text x="72.9482%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.6982%" y="469" width="0.0801%" height="15" fill="rgb(205,14,25)" fg:x="908" fg:w="1"/><text x="72.9482%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.6982%" y="453" width="0.0801%" height="15" fill="rgb(232,69,41)" fg:x="908" fg:w="1"/><text x="72.9482%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.6982%" y="437" width="0.0801%" height="15" fill="rgb(241,106,47)" fg:x="908" fg:w="1"/><text x="72.9482%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.6982%" y="421" width="0.0801%" height="15" fill="rgb(210,213,53)" fg:x="908" fg:w="1"/><text x="72.9482%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.6982%" y="405" width="0.0801%" height="15" fill="rgb(253,175,27)" fg:x="908" fg:w="1"/><text x="72.9482%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.8583%" y="565" width="0.0801%" height="15" fill="rgb(211,171,24)" fg:x="910" fg:w="1"/><text x="73.1083%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="72.6181%" y="629" width="0.4804%" height="15" fill="rgb(229,80,7)" fg:x="907" fg:w="6"/><text x="72.8681%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="72.6181%" y="613" width="0.4804%" height="15" fill="rgb(212,46,39)" fg:x="907" fg:w="6"/><text x="72.8681%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="72.7782%" y="597" width="0.3203%" height="15" fill="rgb(240,80,45)" fg:x="909" fg:w="4"/><text x="73.0282%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="72.7782%" y="581" width="0.3203%" height="15" fill="rgb(253,177,40)" fg:x="909" fg:w="4"/><text x="73.0282%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="72.9384%" y="565" width="0.1601%" height="15" fill="rgb(249,200,15)" fg:x="911" fg:w="2"/><text x="73.1884%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.9384%" y="549" width="0.1601%" height="15" fill="rgb(217,78,26)" fg:x="911" fg:w="2"/><text x="73.1884%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.0184%" y="533" width="0.0801%" height="15" fill="rgb(254,151,32)" fg:x="912" fg:w="1"/><text x="73.2684%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.0184%" y="517" width="0.0801%" height="15" fill="rgb(226,165,27)" fg:x="912" fg:w="1"/><text x="73.2684%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.0985%" y="533" width="0.0801%" height="15" fill="rgb(250,206,4)" fg:x="913" fg:w="1"/><text x="73.3485%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (8 samples, 0.64%)</title><rect x="72.6181%" y="661" width="0.6405%" height="15" fill="rgb(231,229,27)" fg:x="907" fg:w="8"/><text x="72.8681%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="72.6181%" y="645" width="0.6405%" height="15" fill="rgb(239,217,8)" fg:x="907" fg:w="8"/><text x="72.8681%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="73.0985%" y="629" width="0.1601%" height="15" fill="rgb(225,204,27)" fg:x="913" fg:w="2"/><text x="73.3485%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="73.0985%" y="613" width="0.1601%" height="15" fill="rgb(230,56,32)" fg:x="913" fg:w="2"/><text x="73.3485%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="73.0985%" y="597" width="0.1601%" height="15" fill="rgb(222,56,27)" fg:x="913" fg:w="2"/><text x="73.3485%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.0985%" y="581" width="0.1601%" height="15" fill="rgb(253,108,27)" fg:x="913" fg:w="2"/><text x="73.3485%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="73.0985%" y="565" width="0.1601%" height="15" fill="rgb(212,87,36)" fg:x="913" fg:w="2"/><text x="73.3485%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.0985%" y="549" width="0.1601%" height="15" fill="rgb(247,82,36)" fg:x="913" fg:w="2"/><text x="73.3485%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.1785%" y="533" width="0.0801%" height="15" fill="rgb(222,143,9)" fg:x="914" fg:w="1"/><text x="73.4285%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.1785%" y="517" width="0.0801%" height="15" fill="rgb(238,162,48)" fg:x="914" fg:w="1"/><text x="73.4285%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.1785%" y="501" width="0.0801%" height="15" fill="rgb(221,59,43)" fg:x="914" fg:w="1"/><text x="73.4285%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.3387%" y="597" width="0.0801%" height="15" fill="rgb(205,166,41)" fg:x="916" fg:w="1"/><text x="73.5887%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="73.3387%" y="581" width="0.0801%" height="15" fill="rgb(241,186,40)" fg:x="916" fg:w="1"/><text x="73.5887%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="73.4988%" y="549" width="0.0801%" height="15" fill="rgb(216,119,35)" fg:x="918" fg:w="1"/><text x="73.7488%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="73.4988%" y="565" width="0.2402%" height="15" fill="rgb(208,68,38)" fg:x="918" fg:w="3"/><text x="73.7488%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.5789%" y="549" width="0.1601%" height="15" fill="rgb(217,113,1)" fg:x="919" fg:w="2"/><text x="73.8289%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="73.7390%" y="533" width="0.1601%" height="15" fill="rgb(242,153,3)" fg:x="921" fg:w="2"/><text x="73.9890%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="73.8191%" y="517" width="0.0801%" height="15" fill="rgb(229,76,35)" fg:x="922" fg:w="1"/><text x="74.0691%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="73.8991%" y="485" width="0.0801%" height="15" fill="rgb(229,125,34)" fg:x="923" fg:w="1"/><text x="74.1491%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="73.8991%" y="501" width="0.1601%" height="15" fill="rgb(238,179,36)" fg:x="923" fg:w="2"/><text x="74.1491%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.9792%" y="485" width="0.0801%" height="15" fill="rgb(244,183,19)" fg:x="924" fg:w="1"/><text x="74.2292%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="73.8991%" y="517" width="0.4003%" height="15" fill="rgb(216,85,49)" fg:x="923" fg:w="5"/><text x="74.1491%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="74.0592%" y="501" width="0.2402%" height="15" fill="rgb(208,161,47)" fg:x="925" fg:w="3"/><text x="74.3092%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.1393%" y="485" width="0.1601%" height="15" fill="rgb(233,210,18)" fg:x="926" fg:w="2"/><text x="74.3893%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.1393%" y="469" width="0.1601%" height="15" fill="rgb(205,104,42)" fg:x="926" fg:w="2"/><text x="74.3893%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.1393%" y="453" width="0.1601%" height="15" fill="rgb(248,90,43)" fg:x="926" fg:w="2"/><text x="74.3893%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2994%" y="485" width="0.0801%" height="15" fill="rgb(206,198,11)" fg:x="928" fg:w="1"/><text x="74.5494%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2994%" y="469" width="0.0801%" height="15" fill="rgb(239,165,27)" fg:x="928" fg:w="1"/><text x="74.5494%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.2994%" y="453" width="0.0801%" height="15" fill="rgb(246,44,32)" fg:x="928" fg:w="1"/><text x="74.5494%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="73.4988%" y="581" width="0.9608%" height="15" fill="rgb(252,65,42)" fg:x="918" fg:w="12"/><text x="73.7488%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="73.7390%" y="565" width="0.7206%" height="15" fill="rgb(246,197,18)" fg:x="921" fg:w="9"/><text x="73.9890%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="73.7390%" y="549" width="0.7206%" height="15" fill="rgb(216,192,4)" fg:x="921" fg:w="9"/><text x="73.9890%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="73.8991%" y="533" width="0.5604%" height="15" fill="rgb(208,117,10)" fg:x="923" fg:w="7"/><text x="74.1491%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.2994%" y="517" width="0.1601%" height="15" fill="rgb(240,61,47)" fg:x="928" fg:w="2"/><text x="74.5494%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.2994%" y="501" width="0.1601%" height="15" fill="rgb(228,178,21)" fg:x="928" fg:w="2"/><text x="74.5494%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.3795%" y="485" width="0.0801%" height="15" fill="rgb(219,96,54)" fg:x="929" fg:w="1"/><text x="74.6295%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="74.3795%" y="469" width="0.0801%" height="15" fill="rgb(250,177,24)" fg:x="929" fg:w="1"/><text x="74.6295%" y="479.50"></text></g><g><title>serde_json::de::from_trait (16 samples, 1.28%)</title><rect x="73.2586%" y="645" width="1.2810%" height="15" fill="rgb(242,154,46)" fg:x="915" fg:w="16"/><text x="73.5086%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16 samples, 1.28%)</title><rect x="73.2586%" y="629" width="1.2810%" height="15" fill="rgb(226,176,29)" fg:x="915" fg:w="16"/><text x="73.5086%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.28%)</title><rect x="73.2586%" y="613" width="1.2810%" height="15" fill="rgb(226,29,2)" fg:x="915" fg:w="16"/><text x="73.5086%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.12%)</title><rect x="73.4187%" y="597" width="1.1209%" height="15" fill="rgb(237,104,14)" fg:x="917" fg:w="14"/><text x="73.6687%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4596%" y="581" width="0.0801%" height="15" fill="rgb(245,207,31)" fg:x="930" fg:w="1"/><text x="74.7096%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="74.5396%" y="581" width="0.1601%" height="15" fill="rgb(229,211,45)" fg:x="931" fg:w="2"/><text x="74.7896%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.6998%" y="581" width="0.0801%" height="15" fill="rgb(229,113,15)" fg:x="933" fg:w="1"/><text x="74.9498%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.8599%" y="501" width="0.0801%" height="15" fill="rgb(237,147,15)" fg:x="935" fg:w="1"/><text x="75.1099%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.8599%" y="485" width="0.0801%" height="15" fill="rgb(244,120,12)" fg:x="935" fg:w="1"/><text x="75.1099%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.8599%" y="469" width="0.0801%" height="15" fill="rgb(205,120,12)" fg:x="935" fg:w="1"/><text x="75.1099%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="74.7798%" y="565" width="0.2402%" height="15" fill="rgb(231,26,45)" fg:x="934" fg:w="3"/><text x="75.0298%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.7798%" y="549" width="0.2402%" height="15" fill="rgb(246,98,1)" fg:x="934" fg:w="3"/><text x="75.0298%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="74.8599%" y="533" width="0.1601%" height="15" fill="rgb(207,68,45)" fg:x="935" fg:w="2"/><text x="75.1099%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.8599%" y="517" width="0.1601%" height="15" fill="rgb(231,27,38)" fg:x="935" fg:w="2"/><text x="75.1099%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="74.9400%" y="501" width="0.0801%" height="15" fill="rgb(214,223,3)" fg:x="936" fg:w="1"/><text x="75.1900%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="75.0200%" y="533" width="0.1601%" height="15" fill="rgb(228,195,46)" fg:x="937" fg:w="2"/><text x="75.2700%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="75.0200%" y="517" width="0.1601%" height="15" fill="rgb(231,100,42)" fg:x="937" fg:w="2"/><text x="75.2700%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.1801%" y="517" width="0.0801%" height="15" fill="rgb(236,53,4)" fg:x="939" fg:w="1"/><text x="75.4301%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="75.3403%" y="485" width="0.1601%" height="15" fill="rgb(230,152,12)" fg:x="941" fg:w="2"/><text x="75.5903%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="75.0200%" y="549" width="0.5604%" height="15" fill="rgb(226,101,19)" fg:x="937" fg:w="7"/><text x="75.2700%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="75.1801%" y="533" width="0.4003%" height="15" fill="rgb(250,149,32)" fg:x="939" fg:w="5"/><text x="75.4301%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="75.2602%" y="517" width="0.3203%" height="15" fill="rgb(232,178,12)" fg:x="940" fg:w="4"/><text x="75.5102%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="75.2602%" y="501" width="0.3203%" height="15" fill="rgb(246,151,17)" fg:x="940" fg:w="4"/><text x="75.5102%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.5004%" y="485" width="0.0801%" height="15" fill="rgb(252,17,51)" fg:x="943" fg:w="1"/><text x="75.7504%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5004%" y="469" width="0.0801%" height="15" fill="rgb(250,207,23)" fg:x="943" fg:w="1"/><text x="75.7504%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.5004%" y="453" width="0.0801%" height="15" fill="rgb(205,27,5)" fg:x="943" fg:w="1"/><text x="75.7504%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (14 samples, 1.12%)</title><rect x="74.5396%" y="613" width="1.1209%" height="15" fill="rgb(224,32,19)" fg:x="931" fg:w="14"/><text x="74.7896%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.12%)</title><rect x="74.5396%" y="597" width="1.1209%" height="15" fill="rgb(247,214,40)" fg:x="931" fg:w="14"/><text x="74.7896%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.88%)</title><rect x="74.7798%" y="581" width="0.8807%" height="15" fill="rgb(239,199,17)" fg:x="934" fg:w="11"/><text x="75.0298%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="75.0200%" y="565" width="0.6405%" height="15" fill="rgb(251,159,9)" fg:x="937" fg:w="8"/><text x="75.2700%" y="575.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="75.5805%" y="549" width="0.0801%" height="15" fill="rgb(225,78,32)" fg:x="944" fg:w="1"/><text x="75.8305%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (31 samples, 2.48%)</title><rect x="73.2586%" y="661" width="2.4820%" height="15" fill="rgb(206,97,47)" fg:x="915" fg:w="31"/><text x="73.5086%" y="671.50">&lt;k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.20%)</title><rect x="74.5396%" y="645" width="1.2010%" height="15" fill="rgb(227,107,4)" fg:x="931" fg:w="15"/><text x="74.7896%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.20%)</title><rect x="74.5396%" y="629" width="1.2010%" height="15" fill="rgb(241,146,50)" fg:x="931" fg:w="15"/><text x="74.7896%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.6605%" y="613" width="0.0801%" height="15" fill="rgb(232,92,30)" fg:x="945" fg:w="1"/><text x="75.9105%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6605%" y="597" width="0.0801%" height="15" fill="rgb(222,0,40)" fg:x="945" fg:w="1"/><text x="75.9105%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.8207%" y="597" width="0.0801%" height="15" fill="rgb(219,54,33)" fg:x="947" fg:w="1"/><text x="76.0707%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.8207%" y="629" width="0.1601%" height="15" fill="rgb(226,209,28)" fg:x="947" fg:w="2"/><text x="76.0707%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.8207%" y="613" width="0.1601%" height="15" fill="rgb(254,205,35)" fg:x="947" fg:w="2"/><text x="76.0707%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9007%" y="597" width="0.0801%" height="15" fill="rgb(230,159,3)" fg:x="948" fg:w="1"/><text x="76.1507%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.9808%" y="597" width="0.0801%" height="15" fill="rgb(232,190,24)" fg:x="949" fg:w="1"/><text x="76.2308%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="75.7406%" y="661" width="0.4003%" height="15" fill="rgb(217,227,44)" fg:x="946" fg:w="5"/><text x="75.9906%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="75.8207%" y="645" width="0.3203%" height="15" fill="rgb(236,211,1)" fg:x="947" fg:w="4"/><text x="76.0707%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.9808%" y="629" width="0.1601%" height="15" fill="rgb(250,127,46)" fg:x="949" fg:w="2"/><text x="76.2308%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.9808%" y="613" width="0.1601%" height="15" fill="rgb(229,213,6)" fg:x="949" fg:w="2"/><text x="76.2308%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.0608%" y="597" width="0.0801%" height="15" fill="rgb(237,15,36)" fg:x="950" fg:w="1"/><text x="76.3108%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.0608%" y="581" width="0.0801%" height="15" fill="rgb(213,131,41)" fg:x="950" fg:w="1"/><text x="76.3108%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.0608%" y="565" width="0.0801%" height="15" fill="rgb(225,82,44)" fg:x="950" fg:w="1"/><text x="76.3108%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (48 samples, 3.84%)</title><rect x="72.3779%" y="693" width="3.8431%" height="15" fill="rgb(249,42,11)" fg:x="904" fg:w="48"/><text x="72.6279%" y="703.50">&lt;eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (46 samples, 3.68%)</title><rect x="72.5380%" y="677" width="3.6829%" height="15" fill="rgb(253,11,29)" fg:x="906" fg:w="46"/><text x="72.7880%" y="687.50">engi..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="76.1409%" y="661" width="0.0801%" height="15" fill="rgb(206,8,54)" fg:x="951" fg:w="1"/><text x="76.3909%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1409%" y="645" width="0.0801%" height="15" fill="rgb(222,186,2)" fg:x="951" fg:w="1"/><text x="76.3909%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.1409%" y="629" width="0.0801%" height="15" fill="rgb(221,206,53)" fg:x="951" fg:w="1"/><text x="76.3909%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="76.1409%" y="613" width="0.0801%" height="15" fill="rgb(230,150,21)" fg:x="951" fg:w="1"/><text x="76.3909%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.2210%" y="501" width="0.1601%" height="15" fill="rgb(253,202,10)" fg:x="952" fg:w="2"/><text x="76.4710%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.2210%" y="485" width="0.1601%" height="15" fill="rgb(238,109,40)" fg:x="952" fg:w="2"/><text x="76.4710%" y="495.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="76.2210%" y="469" width="0.1601%" height="15" fill="rgb(247,120,22)" fg:x="952" fg:w="2"/><text x="76.4710%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="76.2210%" y="453" width="0.1601%" height="15" fill="rgb(207,43,30)" fg:x="952" fg:w="2"/><text x="76.4710%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="76.2210%" y="437" width="0.1601%" height="15" fill="rgb(213,211,24)" fg:x="952" fg:w="2"/><text x="76.4710%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="76.2210%" y="421" width="0.1601%" height="15" fill="rgb(239,73,39)" fg:x="952" fg:w="2"/><text x="76.4710%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="76.2210%" y="405" width="0.1601%" height="15" fill="rgb(245,182,19)" fg:x="952" fg:w="2"/><text x="76.4710%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="76.2210%" y="389" width="0.1601%" height="15" fill="rgb(247,143,26)" fg:x="952" fg:w="2"/><text x="76.4710%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="76.2210%" y="373" width="0.1601%" height="15" fill="rgb(228,191,23)" fg:x="952" fg:w="2"/><text x="76.4710%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="76.2210%" y="357" width="0.1601%" height="15" fill="rgb(253,165,31)" fg:x="952" fg:w="2"/><text x="76.4710%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="76.2210%" y="341" width="0.1601%" height="15" fill="rgb(234,138,20)" fg:x="952" fg:w="2"/><text x="76.4710%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3010%" y="325" width="0.0801%" height="15" fill="rgb(218,191,29)" fg:x="953" fg:w="1"/><text x="76.5510%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (52 samples, 4.16%)</title><rect x="72.3779%" y="709" width="4.1633%" height="15" fill="rgb(221,157,19)" fg:x="904" fg:w="52"/><text x="72.6279%" y="719.50">&lt;engi..</text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="76.2210%" y="693" width="0.3203%" height="15" fill="rgb(237,26,42)" fg:x="952" fg:w="4"/><text x="76.4710%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="76.2210%" y="677" width="0.3203%" height="15" fill="rgb(220,163,24)" fg:x="952" fg:w="4"/><text x="76.4710%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="76.2210%" y="661" width="0.3203%" height="15" fill="rgb(242,115,20)" fg:x="952" fg:w="4"/><text x="76.4710%" y="671.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="76.2210%" y="645" width="0.3203%" height="15" fill="rgb(210,206,9)" fg:x="952" fg:w="4"/><text x="76.4710%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="76.2210%" y="629" width="0.3203%" height="15" fill="rgb(208,71,17)" fg:x="952" fg:w="4"/><text x="76.4710%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="76.2210%" y="613" width="0.3203%" height="15" fill="rgb(233,7,5)" fg:x="952" fg:w="4"/><text x="76.4710%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="76.2210%" y="597" width="0.3203%" height="15" fill="rgb(207,92,33)" fg:x="952" fg:w="4"/><text x="76.4710%" y="607.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="76.2210%" y="581" width="0.3203%" height="15" fill="rgb(218,87,9)" fg:x="952" fg:w="4"/><text x="76.4710%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="76.2210%" y="565" width="0.3203%" height="15" fill="rgb(219,47,37)" fg:x="952" fg:w="4"/><text x="76.4710%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="76.2210%" y="549" width="0.3203%" height="15" fill="rgb(221,152,34)" fg:x="952" fg:w="4"/><text x="76.4710%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="76.2210%" y="533" width="0.3203%" height="15" fill="rgb(235,176,21)" fg:x="952" fg:w="4"/><text x="76.4710%" y="543.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="76.2210%" y="517" width="0.3203%" height="15" fill="rgb(232,212,21)" fg:x="952" fg:w="4"/><text x="76.4710%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="76.3811%" y="501" width="0.1601%" height="15" fill="rgb(245,82,39)" fg:x="954" fg:w="2"/><text x="76.6311%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.3811%" y="485" width="0.1601%" height="15" fill="rgb(241,52,51)" fg:x="954" fg:w="2"/><text x="76.6311%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.3811%" y="469" width="0.1601%" height="15" fill="rgb(219,91,24)" fg:x="954" fg:w="2"/><text x="76.6311%" y="479.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="76.3811%" y="453" width="0.1601%" height="15" fill="rgb(241,142,12)" fg:x="954" fg:w="2"/><text x="76.6311%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="76.3811%" y="437" width="0.1601%" height="15" fill="rgb(230,27,9)" fg:x="954" fg:w="2"/><text x="76.6311%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="76.3811%" y="421" width="0.1601%" height="15" fill="rgb(249,181,32)" fg:x="954" fg:w="2"/><text x="76.6311%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="76.3811%" y="405" width="0.1601%" height="15" fill="rgb(230,107,3)" fg:x="954" fg:w="2"/><text x="76.6311%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="76.3811%" y="389" width="0.1601%" height="15" fill="rgb(246,204,14)" fg:x="954" fg:w="2"/><text x="76.6311%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="76.3811%" y="373" width="0.1601%" height="15" fill="rgb(213,192,47)" fg:x="954" fg:w="2"/><text x="76.6311%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.4612%" y="357" width="0.0801%" height="15" fill="rgb(240,44,36)" fg:x="955" fg:w="1"/><text x="76.7112%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="76.4612%" y="341" width="0.0801%" height="15" fill="rgb(244,209,38)" fg:x="955" fg:w="1"/><text x="76.7112%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.4612%" y="325" width="0.0801%" height="15" fill="rgb(219,34,37)" fg:x="955" fg:w="1"/><text x="76.7112%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="76.4612%" y="309" width="0.0801%" height="15" fill="rgb(210,28,6)" fg:x="955" fg:w="1"/><text x="76.7112%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="76.4612%" y="293" width="0.0801%" height="15" fill="rgb(244,110,52)" fg:x="955" fg:w="1"/><text x="76.7112%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="76.4612%" y="277" width="0.0801%" height="15" fill="rgb(254,124,47)" fg:x="955" fg:w="1"/><text x="76.7112%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.4612%" y="261" width="0.0801%" height="15" fill="rgb(254,110,13)" fg:x="955" fg:w="1"/><text x="76.7112%" y="271.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="76.5412%" y="709" width="0.1601%" height="15" fill="rgb(252,57,21)" fg:x="956" fg:w="2"/><text x="76.7912%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="76.5412%" y="693" width="0.1601%" height="15" fill="rgb(242,60,45)" fg:x="956" fg:w="2"/><text x="76.7912%" y="703.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="76.6213%" y="677" width="0.0801%" height="15" fill="rgb(234,49,30)" fg:x="957" fg:w="1"/><text x="76.8713%" y="687.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="76.6213%" y="661" width="0.0801%" height="15" fill="rgb(218,98,6)" fg:x="957" fg:w="1"/><text x="76.8713%" y="671.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="76.6213%" y="645" width="0.0801%" height="15" fill="rgb(220,174,29)" fg:x="957" fg:w="1"/><text x="76.8713%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7014%" y="709" width="0.0801%" height="15" fill="rgb(236,163,23)" fg:x="958" fg:w="1"/><text x="76.9514%" y="719.50"></text></g><g><title>kernel::model::entity::Entity::from_value (1 samples, 0.08%)</title><rect x="76.7814%" y="677" width="0.0801%" height="15" fill="rgb(242,114,45)" fg:x="959" fg:w="1"/><text x="77.0314%" y="687.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9416%" y="661" width="0.0801%" height="15" fill="rgb(232,10,53)" fg:x="961" fg:w="1"/><text x="77.1916%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9416%" y="645" width="0.0801%" height="15" fill="rgb(245,108,29)" fg:x="961" fg:w="1"/><text x="77.1916%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9416%" y="629" width="0.0801%" height="15" fill="rgb(240,89,53)" fg:x="961" fg:w="1"/><text x="77.1916%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9416%" y="613" width="0.0801%" height="15" fill="rgb(226,60,45)" fg:x="961" fg:w="1"/><text x="77.1916%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9416%" y="597" width="0.0801%" height="15" fill="rgb(230,41,44)" fg:x="961" fg:w="1"/><text x="77.1916%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.9416%" y="581" width="0.0801%" height="15" fill="rgb(230,26,20)" fg:x="961" fg:w="1"/><text x="77.1916%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.9416%" y="565" width="0.0801%" height="15" fill="rgb(237,170,32)" fg:x="961" fg:w="1"/><text x="77.1916%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.9416%" y="549" width="0.0801%" height="15" fill="rgb(212,35,42)" fg:x="961" fg:w="1"/><text x="77.1916%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.9416%" y="533" width="0.0801%" height="15" fill="rgb(227,31,34)" fg:x="961" fg:w="1"/><text x="77.1916%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.9416%" y="517" width="0.0801%" height="15" fill="rgb(216,19,18)" fg:x="961" fg:w="1"/><text x="77.1916%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.9416%" y="501" width="0.0801%" height="15" fill="rgb(211,133,42)" fg:x="961" fg:w="1"/><text x="77.1916%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.9416%" y="485" width="0.0801%" height="15" fill="rgb(244,66,13)" fg:x="961" fg:w="1"/><text x="77.1916%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.9416%" y="469" width="0.0801%" height="15" fill="rgb(218,185,50)" fg:x="961" fg:w="1"/><text x="77.1916%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.9416%" y="453" width="0.0801%" height="15" fill="rgb(219,149,13)" fg:x="961" fg:w="1"/><text x="77.1916%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9416%" y="437" width="0.0801%" height="15" fill="rgb(221,125,0)" fg:x="961" fg:w="1"/><text x="77.1916%" y="447.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="76.7814%" y="709" width="0.3203%" height="15" fill="rgb(247,126,27)" fg:x="959" fg:w="4"/><text x="77.0314%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="76.7814%" y="693" width="0.3203%" height="15" fill="rgb(250,138,30)" fg:x="959" fg:w="4"/><text x="77.0314%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.8615%" y="677" width="0.2402%" height="15" fill="rgb(230,151,9)" fg:x="960" fg:w="3"/><text x="77.1115%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.0216%" y="661" width="0.0801%" height="15" fill="rgb(233,80,38)" fg:x="962" fg:w="1"/><text x="77.2716%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0216%" y="645" width="0.0801%" height="15" fill="rgb(232,68,43)" fg:x="962" fg:w="1"/><text x="77.2716%" y="655.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="77.0216%" y="629" width="0.0801%" height="15" fill="rgb(254,5,50)" fg:x="962" fg:w="1"/><text x="77.2716%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (964 samples, 77.18%)</title><rect x="0.0000%" y="789" width="77.1817%" height="15" fill="rgb(225,45,5)" fg:x="0" fg:w="964"/><text x="0.2500%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (964 samples, 77.18%)</title><rect x="0.0000%" y="773" width="77.1817%" height="15" fill="rgb(239,22,3)" fg:x="0" fg:w="964"/><text x="0.2500%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (964 samples, 77.18%)</title><rect x="0.0000%" y="757" width="77.1817%" height="15" fill="rgb(243,129,0)" fg:x="0" fg:w="964"/><text x="0.2500%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (239 samples, 19.14%)</title><rect x="58.0464%" y="741" width="19.1353%" height="15" fill="rgb(223,164,0)" fg:x="725" fg:w="239"/><text x="58.2964%" y="751.50">engine::session::Session::eval..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (239 samples, 19.14%)</title><rect x="58.0464%" y="725" width="19.1353%" height="15" fill="rgb(221,46,29)" fg:x="725" fg:w="239"/><text x="58.2964%" y="735.50">engine::session::Session::eval..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="77.1017%" y="709" width="0.0801%" height="15" fill="rgb(205,97,47)" fg:x="963" fg:w="1"/><text x="77.3517%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.1817%" y="629" width="0.0801%" height="15" fill="rgb(249,14,8)" fg:x="964" fg:w="1"/><text x="77.4317%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.5020%" y="613" width="0.0801%" height="15" fill="rgb(216,77,3)" fg:x="968" fg:w="1"/><text x="77.7520%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="77.1817%" y="741" width="0.4804%" height="15" fill="rgb(206,168,54)" fg:x="964" fg:w="6"/><text x="77.4317%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (6 samples, 0.48%)</title><rect x="77.1817%" y="725" width="0.4804%" height="15" fill="rgb(236,3,41)" fg:x="964" fg:w="6"/><text x="77.4317%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="77.1817%" y="709" width="0.4804%" height="15" fill="rgb(231,132,24)" fg:x="964" fg:w="6"/><text x="77.4317%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (6 samples, 0.48%)</title><rect x="77.1817%" y="693" width="0.4804%" height="15" fill="rgb(227,221,40)" fg:x="964" fg:w="6"/><text x="77.4317%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="77.1817%" y="677" width="0.4804%" height="15" fill="rgb(233,151,11)" fg:x="964" fg:w="6"/><text x="77.4317%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="77.1817%" y="661" width="0.4804%" height="15" fill="rgb(247,81,35)" fg:x="964" fg:w="6"/><text x="77.4317%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="77.1817%" y="645" width="0.4804%" height="15" fill="rgb(243,128,48)" fg:x="964" fg:w="6"/><text x="77.4317%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="77.2618%" y="629" width="0.4003%" height="15" fill="rgb(253,16,10)" fg:x="965" fg:w="5"/><text x="77.5118%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.5821%" y="613" width="0.0801%" height="15" fill="rgb(228,67,27)" fg:x="969" fg:w="1"/><text x="77.8321%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.5821%" y="597" width="0.0801%" height="15" fill="rgb(231,105,25)" fg:x="969" fg:w="1"/><text x="77.8321%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.6621%" y="677" width="0.0801%" height="15" fill="rgb(213,166,47)" fg:x="970" fg:w="1"/><text x="77.9121%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.6621%" y="661" width="0.0801%" height="15" fill="rgb(209,27,10)" fg:x="970" fg:w="1"/><text x="77.9121%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.6621%" y="645" width="0.0801%" height="15" fill="rgb(241,44,30)" fg:x="970" fg:w="1"/><text x="77.9121%" y="655.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="77.7422%" y="645" width="0.0801%" height="15" fill="rgb(223,216,15)" fg:x="971" fg:w="1"/><text x="77.9922%" y="655.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="77.7422%" y="629" width="0.0801%" height="15" fill="rgb(227,14,7)" fg:x="971" fg:w="1"/><text x="77.9922%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (4 samples, 0.32%)</title><rect x="77.7422%" y="677" width="0.3203%" height="15" fill="rgb(237,14,5)" fg:x="971" fg:w="4"/><text x="77.9922%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (4 samples, 0.32%)</title><rect x="77.7422%" y="661" width="0.3203%" height="15" fill="rgb(232,14,36)" fg:x="971" fg:w="4"/><text x="77.9922%" y="671.50"></text></g><g><title>libloading::safe::Library::new (3 samples, 0.24%)</title><rect x="77.8223%" y="645" width="0.2402%" height="15" fill="rgb(234,0,38)" fg:x="972" fg:w="3"/><text x="78.0723%" y="655.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="77.8223%" y="629" width="0.2402%" height="15" fill="rgb(207,170,14)" fg:x="972" fg:w="3"/><text x="78.0723%" y="639.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="77.8223%" y="613" width="0.2402%" height="15" fill="rgb(252,45,13)" fg:x="972" fg:w="3"/><text x="78.0723%" y="623.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="77.8223%" y="597" width="0.2402%" height="15" fill="rgb(213,142,7)" fg:x="972" fg:w="3"/><text x="78.0723%" y="607.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="77.9023%" y="581" width="0.1601%" height="15" fill="rgb(216,157,23)" fg:x="973" fg:w="2"/><text x="78.1523%" y="591.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="77.9023%" y="565" width="0.1601%" height="15" fill="rgb(212,145,33)" fg:x="973" fg:w="2"/><text x="78.1523%" y="575.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (6 samples, 0.48%)</title><rect x="77.6621%" y="741" width="0.4804%" height="15" fill="rgb(233,26,13)" fg:x="970" fg:w="6"/><text x="77.9121%" y="751.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (6 samples, 0.48%)</title><rect x="77.6621%" y="725" width="0.4804%" height="15" fill="rgb(219,196,19)" fg:x="970" fg:w="6"/><text x="77.9121%" y="735.50"></text></g><g><title>engine::session::Session::new (6 samples, 0.48%)</title><rect x="77.6621%" y="709" width="0.4804%" height="15" fill="rgb(246,56,21)" fg:x="970" fg:w="6"/><text x="77.9121%" y="719.50"></text></g><g><title>engine::session::Session::initialize (6 samples, 0.48%)</title><rect x="77.6621%" y="693" width="0.4804%" height="15" fill="rgb(222,28,53)" fg:x="970" fg:w="6"/><text x="77.9121%" y="703.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="78.0624%" y="677" width="0.0801%" height="15" fill="rgb(224,5,27)" fg:x="975" fg:w="1"/><text x="78.3124%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="78.0624%" y="661" width="0.0801%" height="15" fill="rgb(220,153,33)" fg:x="975" fg:w="1"/><text x="78.3124%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.0624%" y="645" width="0.0801%" height="15" fill="rgb(226,58,19)" fg:x="975" fg:w="1"/><text x="78.3124%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.0624%" y="629" width="0.0801%" height="15" fill="rgb(239,112,23)" fg:x="975" fg:w="1"/><text x="78.3124%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.0624%" y="613" width="0.0801%" height="15" fill="rgb(251,213,20)" fg:x="975" fg:w="1"/><text x="78.3124%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.0624%" y="597" width="0.0801%" height="15" fill="rgb(215,181,21)" fg:x="975" fg:w="1"/><text x="78.3124%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="78.2226%" y="725" width="0.0801%" height="15" fill="rgb(240,8,35)" fg:x="977" fg:w="1"/><text x="78.4726%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="78.2226%" y="709" width="0.0801%" height="15" fill="rgb(232,203,3)" fg:x="977" fg:w="1"/><text x="78.4726%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2226%" y="693" width="0.0801%" height="15" fill="rgb(214,202,43)" fg:x="977" fg:w="1"/><text x="78.4726%" y="703.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.3026%" y="677" width="0.0801%" height="15" fill="rgb(254,35,11)" fg:x="978" fg:w="1"/><text x="78.5526%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="78.3026%" y="661" width="0.0801%" height="15" fill="rgb(239,173,13)" fg:x="978" fg:w="1"/><text x="78.5526%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3026%" y="645" width="0.0801%" height="15" fill="rgb(220,141,0)" fg:x="978" fg:w="1"/><text x="78.5526%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.3827%" y="645" width="0.0801%" height="15" fill="rgb(210,98,12)" fg:x="979" fg:w="1"/><text x="78.6327%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.3827%" y="629" width="0.0801%" height="15" fill="rgb(254,153,22)" fg:x="979" fg:w="1"/><text x="78.6327%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.3827%" y="613" width="0.0801%" height="15" fill="rgb(247,223,17)" fg:x="979" fg:w="1"/><text x="78.6327%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.3827%" y="597" width="0.0801%" height="15" fill="rgb(246,56,7)" fg:x="979" fg:w="1"/><text x="78.6327%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.3827%" y="581" width="0.0801%" height="15" fill="rgb(240,226,12)" fg:x="979" fg:w="1"/><text x="78.6327%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.3827%" y="565" width="0.0801%" height="15" fill="rgb(205,87,46)" fg:x="979" fg:w="1"/><text x="78.6327%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.3827%" y="549" width="0.0801%" height="15" fill="rgb(245,214,51)" fg:x="979" fg:w="1"/><text x="78.6327%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.3827%" y="533" width="0.0801%" height="15" fill="rgb(223,172,33)" fg:x="979" fg:w="1"/><text x="78.6327%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.3827%" y="517" width="0.0801%" height="15" fill="rgb(227,203,34)" fg:x="979" fg:w="1"/><text x="78.6327%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.3827%" y="501" width="0.0801%" height="15" fill="rgb(248,143,44)" fg:x="979" fg:w="1"/><text x="78.6327%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.3827%" y="485" width="0.0801%" height="15" fill="rgb(226,162,5)" fg:x="979" fg:w="1"/><text x="78.6327%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.3827%" y="469" width="0.0801%" height="15" fill="rgb(211,143,1)" fg:x="979" fg:w="1"/><text x="78.6327%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.5428%" y="629" width="0.0801%" height="15" fill="rgb(224,96,15)" fg:x="981" fg:w="1"/><text x="78.7928%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.5428%" y="613" width="0.0801%" height="15" fill="rgb(222,4,38)" fg:x="981" fg:w="1"/><text x="78.7928%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.5428%" y="597" width="0.0801%" height="15" fill="rgb(253,228,15)" fg:x="981" fg:w="1"/><text x="78.7928%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.5428%" y="581" width="0.0801%" height="15" fill="rgb(242,194,12)" fg:x="981" fg:w="1"/><text x="78.7928%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.5428%" y="565" width="0.0801%" height="15" fill="rgb(214,177,31)" fg:x="981" fg:w="1"/><text x="78.7928%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="78.6229%" y="613" width="0.2402%" height="15" fill="rgb(226,58,51)" fg:x="982" fg:w="3"/><text x="78.8729%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.7030%" y="597" width="0.1601%" height="15" fill="rgb(250,119,16)" fg:x="983" fg:w="2"/><text x="78.9530%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="78.7030%" y="581" width="0.1601%" height="15" fill="rgb(223,128,53)" fg:x="983" fg:w="2"/><text x="78.9530%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.7830%" y="565" width="0.0801%" height="15" fill="rgb(251,199,15)" fg:x="984" fg:w="1"/><text x="79.0330%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="78.8631%" y="597" width="0.0801%" height="15" fill="rgb(235,168,42)" fg:x="985" fg:w="1"/><text x="79.1131%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.8631%" y="581" width="0.0801%" height="15" fill="rgb(250,210,17)" fg:x="985" fg:w="1"/><text x="79.1131%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.8631%" y="565" width="0.0801%" height="15" fill="rgb(226,36,41)" fg:x="985" fg:w="1"/><text x="79.1131%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.8631%" y="549" width="0.0801%" height="15" fill="rgb(225,87,10)" fg:x="985" fg:w="1"/><text x="79.1131%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.9432%" y="549" width="0.0801%" height="15" fill="rgb(228,83,9)" fg:x="986" fg:w="1"/><text x="79.1932%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.9432%" y="533" width="0.0801%" height="15" fill="rgb(225,16,36)" fg:x="986" fg:w="1"/><text x="79.1932%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.9432%" y="517" width="0.0801%" height="15" fill="rgb(242,198,13)" fg:x="986" fg:w="1"/><text x="79.1932%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.9432%" y="501" width="0.0801%" height="15" fill="rgb(239,25,51)" fg:x="986" fg:w="1"/><text x="79.1932%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.9432%" y="597" width="0.1601%" height="15" fill="rgb(239,28,37)" fg:x="986" fg:w="2"/><text x="79.1932%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.9432%" y="581" width="0.1601%" height="15" fill="rgb(234,70,17)" fg:x="986" fg:w="2"/><text x="79.1932%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="78.9432%" y="565" width="0.1601%" height="15" fill="rgb(231,215,53)" fg:x="986" fg:w="2"/><text x="79.1932%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="79.0232%" y="549" width="0.0801%" height="15" fill="rgb(218,140,42)" fg:x="987" fg:w="1"/><text x="79.2732%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.1033%" y="581" width="0.0801%" height="15" fill="rgb(233,227,45)" fg:x="988" fg:w="1"/><text x="79.3533%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.1033%" y="565" width="0.0801%" height="15" fill="rgb(225,189,21)" fg:x="988" fg:w="1"/><text x="79.3533%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.1033%" y="549" width="0.0801%" height="15" fill="rgb(237,176,54)" fg:x="988" fg:w="1"/><text x="79.3533%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.1033%" y="533" width="0.0801%" height="15" fill="rgb(215,131,46)" fg:x="988" fg:w="1"/><text x="79.3533%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.1833%" y="565" width="0.0801%" height="15" fill="rgb(218,95,20)" fg:x="989" fg:w="1"/><text x="79.4333%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.1833%" y="549" width="0.0801%" height="15" fill="rgb(208,198,12)" fg:x="989" fg:w="1"/><text x="79.4333%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="79.1833%" y="581" width="0.2402%" height="15" fill="rgb(239,107,50)" fg:x="989" fg:w="3"/><text x="79.4333%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.2634%" y="565" width="0.1601%" height="15" fill="rgb(240,217,37)" fg:x="990" fg:w="2"/><text x="79.5134%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.2634%" y="549" width="0.1601%" height="15" fill="rgb(242,197,49)" fg:x="990" fg:w="2"/><text x="79.5134%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="79.3435%" y="533" width="0.0801%" height="15" fill="rgb(219,171,17)" fg:x="991" fg:w="1"/><text x="79.5935%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="79.1033%" y="597" width="0.4804%" height="15" fill="rgb(209,81,40)" fg:x="988" fg:w="6"/><text x="79.3533%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.4235%" y="581" width="0.1601%" height="15" fill="rgb(237,156,30)" fg:x="992" fg:w="2"/><text x="79.6735%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="78.8631%" y="613" width="0.8006%" height="15" fill="rgb(212,127,16)" fg:x="985" fg:w="10"/><text x="79.1131%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.5837%" y="597" width="0.0801%" height="15" fill="rgb(226,66,32)" fg:x="994" fg:w="1"/><text x="79.8337%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.28%)</title><rect x="78.4628%" y="645" width="1.2810%" height="15" fill="rgb(245,22,46)" fg:x="980" fg:w="16"/><text x="78.7128%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="78.6229%" y="629" width="1.1209%" height="15" fill="rgb(210,112,21)" fg:x="982" fg:w="14"/><text x="78.8729%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.6637%" y="613" width="0.0801%" height="15" fill="rgb(207,118,39)" fg:x="995" fg:w="1"/><text x="79.9137%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.6637%" y="597" width="0.0801%" height="15" fill="rgb(205,206,35)" fg:x="995" fg:w="1"/><text x="79.9137%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.6637%" y="581" width="0.0801%" height="15" fill="rgb(222,120,2)" fg:x="995" fg:w="1"/><text x="79.9137%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.6637%" y="565" width="0.0801%" height="15" fill="rgb(205,38,18)" fg:x="995" fg:w="1"/><text x="79.9137%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7438%" y="613" width="0.0801%" height="15" fill="rgb(226,61,2)" fg:x="996" fg:w="1"/><text x="79.9938%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="79.8239%" y="565" width="0.0801%" height="15" fill="rgb(242,161,23)" fg:x="997" fg:w="1"/><text x="80.0739%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.8239%" y="549" width="0.0801%" height="15" fill="rgb(213,13,52)" fg:x="997" fg:w="1"/><text x="80.0739%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.8239%" y="533" width="0.0801%" height="15" fill="rgb(246,209,47)" fg:x="997" fg:w="1"/><text x="80.0739%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="79.7438%" y="645" width="0.3203%" height="15" fill="rgb(214,41,3)" fg:x="996" fg:w="4"/><text x="79.9938%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="79.7438%" y="629" width="0.3203%" height="15" fill="rgb(236,119,38)" fg:x="996" fg:w="4"/><text x="79.9938%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.8239%" y="613" width="0.2402%" height="15" fill="rgb(218,50,11)" fg:x="997" fg:w="3"/><text x="80.0739%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.8239%" y="597" width="0.2402%" height="15" fill="rgb(228,38,11)" fg:x="997" fg:w="3"/><text x="80.0739%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.8239%" y="581" width="0.2402%" height="15" fill="rgb(212,13,9)" fg:x="997" fg:w="3"/><text x="80.0739%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.9039%" y="565" width="0.1601%" height="15" fill="rgb(208,211,9)" fg:x="998" fg:w="2"/><text x="80.1539%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="79.9039%" y="549" width="0.1601%" height="15" fill="rgb(239,39,32)" fg:x="998" fg:w="2"/><text x="80.1539%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.9039%" y="533" width="0.1601%" height="15" fill="rgb(254,179,26)" fg:x="998" fg:w="2"/><text x="80.1539%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="80.0641%" y="597" width="0.1601%" height="15" fill="rgb(249,165,28)" fg:x="1000" fg:w="2"/><text x="80.3141%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.2242%" y="565" width="0.0801%" height="15" fill="rgb(225,59,50)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="80.2242%" y="597" width="0.1601%" height="15" fill="rgb(209,122,5)" fg:x="1002" fg:w="2"/><text x="80.4742%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="80.2242%" y="581" width="0.1601%" height="15" fill="rgb(214,65,34)" fg:x="1002" fg:w="2"/><text x="80.4742%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3042%" y="565" width="0.0801%" height="15" fill="rgb(249,183,32)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3042%" y="549" width="0.0801%" height="15" fill="rgb(218,122,24)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.3042%" y="533" width="0.0801%" height="15" fill="rgb(224,109,18)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.4644%" y="549" width="0.0801%" height="15" fill="rgb(210,68,50)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.4644%" y="533" width="0.0801%" height="15" fill="rgb(212,184,34)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.4644%" y="517" width="0.0801%" height="15" fill="rgb(238,105,48)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.5444%" y="549" width="0.0801%" height="15" fill="rgb(222,134,54)" fg:x="1006" fg:w="1"/><text x="80.7944%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.5444%" y="533" width="0.0801%" height="15" fill="rgb(246,24,43)" fg:x="1006" fg:w="1"/><text x="80.7944%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.5444%" y="517" width="0.0801%" height="15" fill="rgb(227,169,22)" fg:x="1006" fg:w="1"/><text x="80.7944%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="80.4644%" y="565" width="0.3203%" height="15" fill="rgb(253,152,4)" fg:x="1005" fg:w="4"/><text x="80.7144%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="80.6245%" y="549" width="0.1601%" height="15" fill="rgb(219,158,36)" fg:x="1007" fg:w="2"/><text x="80.8745%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="80.6245%" y="533" width="0.1601%" height="15" fill="rgb(251,128,40)" fg:x="1007" fg:w="2"/><text x="80.8745%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7046%" y="517" width="0.0801%" height="15" fill="rgb(254,101,39)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.7046%" y="501" width="0.0801%" height="15" fill="rgb(221,168,40)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="511.50"></text></g><g><title>engine::session::Session::flush (32 samples, 2.56%)</title><rect x="78.3026%" y="725" width="2.5620%" height="15" fill="rgb(221,14,27)" fg:x="978" fg:w="32"/><text x="78.5526%" y="735.50">en..</text></g><g><title>engine::session::state::State::close (32 samples, 2.56%)</title><rect x="78.3026%" y="709" width="2.5620%" height="15" fill="rgb(207,36,43)" fg:x="978" fg:w="32"/><text x="78.5526%" y="719.50">en..</text></g><g><title>engine::session::state::State::flush_entities (32 samples, 2.56%)</title><rect x="78.3026%" y="693" width="2.5620%" height="15" fill="rgb(240,172,53)" fg:x="978" fg:w="32"/><text x="78.5526%" y="703.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (31 samples, 2.48%)</title><rect x="78.3827%" y="677" width="2.4820%" height="15" fill="rgb(241,138,43)" fg:x="979" fg:w="31"/><text x="78.6327%" y="687.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (31 samples, 2.48%)</title><rect x="78.3827%" y="661" width="2.4820%" height="15" fill="rgb(227,78,19)" fg:x="979" fg:w="31"/><text x="78.6327%" y="671.50">en..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.80%)</title><rect x="80.0641%" y="645" width="0.8006%" height="15" fill="rgb(215,127,44)" fg:x="1000" fg:w="10"/><text x="80.3141%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.80%)</title><rect x="80.0641%" y="629" width="0.8006%" height="15" fill="rgb(227,13,10)" fg:x="1000" fg:w="10"/><text x="80.3141%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.80%)</title><rect x="80.0641%" y="613" width="0.8006%" height="15" fill="rgb(249,177,6)" fg:x="1000" fg:w="10"/><text x="80.3141%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="80.3843%" y="597" width="0.4804%" height="15" fill="rgb(215,154,26)" fg:x="1004" fg:w="6"/><text x="80.6343%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="80.4644%" y="581" width="0.4003%" height="15" fill="rgb(250,168,20)" fg:x="1005" fg:w="5"/><text x="80.7144%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.7846%" y="565" width="0.0801%" height="15" fill="rgb(222,53,38)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="80.8647%" y="693" width="0.0801%" height="15" fill="rgb(245,154,5)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="80.8647%" y="677" width="0.0801%" height="15" fill="rgb(214,89,50)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="80.8647%" y="661" width="0.0801%" height="15" fill="rgb(232,73,14)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.8647%" y="645" width="0.0801%" height="15" fill="rgb(230,101,20)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.8647%" y="629" width="0.0801%" height="15" fill="rgb(208,56,28)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.8647%" y="613" width="0.0801%" height="15" fill="rgb(247,205,22)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.8647%" y="597" width="0.0801%" height="15" fill="rgb(252,109,51)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.8647%" y="581" width="0.0801%" height="15" fill="rgb(220,40,24)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.8647%" y="565" width="0.0801%" height="15" fill="rgb(251,108,7)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.8647%" y="549" width="0.0801%" height="15" fill="rgb(238,102,51)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.8647%" y="533" width="0.0801%" height="15" fill="rgb(219,149,34)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.8647%" y="517" width="0.0801%" height="15" fill="rgb(239,70,0)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.8647%" y="501" width="0.0801%" height="15" fill="rgb(246,214,23)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.8647%" y="485" width="0.0801%" height="15" fill="rgb(239,221,51)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="80.8647%" y="469" width="0.0801%" height="15" fill="rgb(254,62,14)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.8647%" y="453" width="0.0801%" height="15" fill="rgb(253,57,33)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.8647%" y="437" width="0.0801%" height="15" fill="rgb(229,34,6)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.8647%" y="421" width="0.0801%" height="15" fill="rgb(235,191,23)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8647%" y="405" width="0.0801%" height="15" fill="rgb(217,207,27)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8647%" y="389" width="0.0801%" height="15" fill="rgb(232,41,44)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="80.8647%" y="373" width="0.0801%" height="15" fill="rgb(221,188,19)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="80.8647%" y="357" width="0.0801%" height="15" fill="rgb(245,180,45)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="80.8647%" y="341" width="0.0801%" height="15" fill="rgb(250,220,42)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="80.8647%" y="325" width="0.0801%" height="15" fill="rgb(234,16,34)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="80.8647%" y="309" width="0.0801%" height="15" fill="rgb(233,217,23)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="80.8647%" y="293" width="0.0801%" height="15" fill="rgb(209,22,46)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.8647%" y="277" width="0.0801%" height="15" fill="rgb(213,101,18)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="80.8647%" y="261" width="0.0801%" height="15" fill="rgb(215,179,52)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.8647%" y="245" width="0.0801%" height="15" fill="rgb(223,50,25)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="80.8647%" y="229" width="0.0801%" height="15" fill="rgb(224,51,44)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="80.8647%" y="213" width="0.0801%" height="15" fill="rgb(224,13,54)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="80.8647%" y="197" width="0.0801%" height="15" fill="rgb(219,58,47)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.8647%" y="181" width="0.0801%" height="15" fill="rgb(246,124,34)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="191.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="80.9448%" y="677" width="0.0801%" height="15" fill="rgb(245,109,25)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.9448%" y="693" width="0.1601%" height="15" fill="rgb(235,48,23)" fg:x="1011" fg:w="2"/><text x="81.1948%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.0248%" y="677" width="0.0801%" height="15" fill="rgb(229,203,36)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.0248%" y="661" width="0.0801%" height="15" fill="rgb(234,180,9)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.0248%" y="645" width="0.0801%" height="15" fill="rgb(228,98,45)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.0248%" y="629" width="0.0801%" height="15" fill="rgb(240,24,36)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0248%" y="613" width="0.0801%" height="15" fill="rgb(227,154,19)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0248%" y="597" width="0.0801%" height="15" fill="rgb(231,2,48)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.0248%" y="581" width="0.0801%" height="15" fill="rgb(219,216,0)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.0248%" y="565" width="0.0801%" height="15" fill="rgb(251,88,0)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.0248%" y="549" width="0.0801%" height="15" fill="rgb(242,45,45)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.0248%" y="533" width="0.0801%" height="15" fill="rgb(218,149,45)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.0248%" y="517" width="0.0801%" height="15" fill="rgb(247,194,10)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.0248%" y="501" width="0.0801%" height="15" fill="rgb(234,33,37)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.0248%" y="485" width="0.0801%" height="15" fill="rgb(218,61,13)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.0248%" y="469" width="0.0801%" height="15" fill="rgb(210,80,52)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.0248%" y="453" width="0.0801%" height="15" fill="rgb(218,203,27)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.0248%" y="437" width="0.0801%" height="15" fill="rgb(209,126,33)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="81.1049%" y="693" width="0.1601%" height="15" fill="rgb(234,173,41)" fg:x="1013" fg:w="2"/><text x="81.3549%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="81.1049%" y="677" width="0.1601%" height="15" fill="rgb(228,166,9)" fg:x="1013" fg:w="2"/><text x="81.3549%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.1849%" y="661" width="0.0801%" height="15" fill="rgb(208,124,43)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1849%" y="645" width="0.0801%" height="15" fill="rgb(212,154,38)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1849%" y="629" width="0.0801%" height="15" fill="rgb(246,179,35)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.1849%" y="613" width="0.0801%" height="15" fill="rgb(251,3,50)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.1849%" y="597" width="0.0801%" height="15" fill="rgb(219,96,8)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.1849%" y="581" width="0.0801%" height="15" fill="rgb(251,216,33)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.1849%" y="565" width="0.0801%" height="15" fill="rgb(243,145,29)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.1849%" y="549" width="0.0801%" height="15" fill="rgb(210,75,20)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.1849%" y="533" width="0.0801%" height="15" fill="rgb(235,56,8)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.1849%" y="517" width="0.0801%" height="15" fill="rgb(226,175,49)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.1849%" y="501" width="0.0801%" height="15" fill="rgb(242,204,23)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.1849%" y="485" width="0.0801%" height="15" fill="rgb(225,104,24)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.1849%" y="469" width="0.0801%" height="15" fill="rgb(253,34,1)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="80.8647%" y="709" width="0.4804%" height="15" fill="rgb(233,199,23)" fg:x="1010" fg:w="6"/><text x="81.1147%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.2650%" y="693" width="0.0801%" height="15" fill="rgb(247,7,51)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="81.2650%" y="677" width="0.0801%" height="15" fill="rgb(214,146,12)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.2650%" y="661" width="0.0801%" height="15" fill="rgb(234,181,43)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.2650%" y="645" width="0.0801%" height="15" fill="rgb(239,148,6)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2650%" y="629" width="0.0801%" height="15" fill="rgb(206,151,17)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2650%" y="613" width="0.0801%" height="15" fill="rgb(213,215,10)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.2650%" y="597" width="0.0801%" height="15" fill="rgb(215,220,44)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.3451%" y="629" width="0.0801%" height="15" fill="rgb(245,205,37)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="81.3451%" y="613" width="0.0801%" height="15" fill="rgb(245,130,43)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.4251%" y="629" width="0.0801%" height="15" fill="rgb(231,227,38)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.4251%" y="613" width="0.0801%" height="15" fill="rgb(233,185,4)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4251%" y="597" width="0.0801%" height="15" fill="rgb(224,154,43)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="81.3451%" y="693" width="0.2402%" height="15" fill="rgb(235,156,15)" fg:x="1016" fg:w="3"/><text x="81.5951%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="81.3451%" y="677" width="0.2402%" height="15" fill="rgb(211,55,43)" fg:x="1016" fg:w="3"/><text x="81.5951%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="81.3451%" y="661" width="0.2402%" height="15" fill="rgb(247,149,40)" fg:x="1016" fg:w="3"/><text x="81.5951%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.3451%" y="645" width="0.2402%" height="15" fill="rgb(232,171,16)" fg:x="1016" fg:w="3"/><text x="81.5951%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.5052%" y="629" width="0.0801%" height="15" fill="rgb(215,117,49)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5052%" y="613" width="0.0801%" height="15" fill="rgb(246,194,11)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.5052%" y="597" width="0.0801%" height="15" fill="rgb(242,101,44)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5052%" y="581" width="0.0801%" height="15" fill="rgb(226,174,6)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.5052%" y="565" width="0.0801%" height="15" fill="rgb(213,150,20)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5052%" y="549" width="0.0801%" height="15" fill="rgb(222,124,42)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5853%" y="597" width="0.0801%" height="15" fill="rgb(250,19,47)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5853%" y="581" width="0.0801%" height="15" fill="rgb(241,217,19)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.5853%" y="565" width="0.0801%" height="15" fill="rgb(207,210,34)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.5853%" y="549" width="0.0801%" height="15" fill="rgb(244,45,4)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.5853%" y="533" width="0.0801%" height="15" fill="rgb(252,134,50)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.5853%" y="517" width="0.0801%" height="15" fill="rgb(238,74,2)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.5853%" y="501" width="0.0801%" height="15" fill="rgb(226,58,46)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="81.5853%" y="485" width="0.0801%" height="15" fill="rgb(232,83,35)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="81.5853%" y="469" width="0.0801%" height="15" fill="rgb(212,148,47)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="81.5853%" y="645" width="0.1601%" height="15" fill="rgb(235,29,1)" fg:x="1019" fg:w="2"/><text x="81.8353%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.5853%" y="629" width="0.1601%" height="15" fill="rgb(247,55,37)" fg:x="1019" fg:w="2"/><text x="81.8353%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.5853%" y="613" width="0.1601%" height="15" fill="rgb(222,48,3)" fg:x="1019" fg:w="2"/><text x="81.8353%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.6653%" y="597" width="0.0801%" height="15" fill="rgb(234,21,33)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="607.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="81.7454%" y="629" width="0.0801%" height="15" fill="rgb(247,178,53)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (13 samples, 1.04%)</title><rect x="80.8647%" y="725" width="1.0408%" height="15" fill="rgb(225,75,7)" fg:x="1010" fg:w="13"/><text x="81.1147%" y="735.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="81.3451%" y="709" width="0.5604%" height="15" fill="rgb(219,199,7)" fg:x="1016" fg:w="7"/><text x="81.5951%" y="719.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="81.5853%" y="693" width="0.3203%" height="15" fill="rgb(209,93,42)" fg:x="1019" fg:w="4"/><text x="81.8353%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="81.5853%" y="677" width="0.3203%" height="15" fill="rgb(240,175,17)" fg:x="1019" fg:w="4"/><text x="81.8353%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="81.5853%" y="661" width="0.3203%" height="15" fill="rgb(232,106,7)" fg:x="1019" fg:w="4"/><text x="81.8353%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="81.7454%" y="645" width="0.1601%" height="15" fill="rgb(242,106,43)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.8255%" y="629" width="0.0801%" height="15" fill="rgb(242,61,37)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8255%" y="613" width="0.0801%" height="15" fill="rgb(205,72,10)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8255%" y="597" width="0.0801%" height="15" fill="rgb(214,184,36)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8255%" y="581" width="0.0801%" height="15" fill="rgb(206,107,18)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8255%" y="565" width="0.0801%" height="15" fill="rgb(210,75,5)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.8255%" y="549" width="0.0801%" height="15" fill="rgb(205,3,19)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.8255%" y="533" width="0.0801%" height="15" fill="rgb(207,181,42)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.8255%" y="517" width="0.0801%" height="15" fill="rgb(229,179,43)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.8255%" y="501" width="0.0801%" height="15" fill="rgb(246,95,30)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.8255%" y="485" width="0.0801%" height="15" fill="rgb(234,144,45)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.8255%" y="469" width="0.0801%" height="15" fill="rgb(250,54,25)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.8255%" y="453" width="0.0801%" height="15" fill="rgb(215,195,40)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.8255%" y="437" width="0.0801%" height="15" fill="rgb(233,188,42)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.8255%" y="421" width="0.0801%" height="15" fill="rgb(247,227,35)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8255%" y="405" width="0.0801%" height="15" fill="rgb(249,124,27)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="81.9055%" y="693" width="0.0801%" height="15" fill="rgb(219,207,25)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="81.9055%" y="677" width="0.0801%" height="15" fill="rgb(241,216,47)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="81.9055%" y="661" width="0.0801%" height="15" fill="rgb(233,82,50)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="671.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="81.9856%" y="677" width="0.0801%" height="15" fill="rgb(232,63,2)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.9856%" y="661" width="0.0801%" height="15" fill="rgb(236,184,28)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0657%" y="661" width="0.0801%" height="15" fill="rgb(254,63,27)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0657%" y="645" width="0.0801%" height="15" fill="rgb(253,106,28)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0657%" y="629" width="0.0801%" height="15" fill="rgb(225,141,39)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="81.9856%" y="693" width="0.3203%" height="15" fill="rgb(222,157,20)" fg:x="1024" fg:w="4"/><text x="82.2356%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="82.0657%" y="677" width="0.2402%" height="15" fill="rgb(210,190,9)" fg:x="1025" fg:w="3"/><text x="82.3157%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.1457%" y="661" width="0.1601%" height="15" fill="rgb(242,167,7)" fg:x="1026" fg:w="2"/><text x="82.3957%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.1457%" y="645" width="0.1601%" height="15" fill="rgb(227,82,41)" fg:x="1026" fg:w="2"/><text x="82.3957%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="82.1457%" y="629" width="0.1601%" height="15" fill="rgb(222,131,13)" fg:x="1026" fg:w="2"/><text x="82.3957%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.2258%" y="613" width="0.0801%" height="15" fill="rgb(221,98,26)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.2258%" y="597" width="0.0801%" height="15" fill="rgb(251,63,52)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.2258%" y="581" width="0.0801%" height="15" fill="rgb(246,25,43)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="82.3058%" y="693" width="0.0801%" height="15" fill="rgb(247,167,15)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="82.3058%" y="677" width="0.0801%" height="15" fill="rgb(240,104,42)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.3058%" y="661" width="0.0801%" height="15" fill="rgb(224,54,6)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="671.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.3058%" y="645" width="0.0801%" height="15" fill="rgb(244,108,35)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.3058%" y="629" width="0.0801%" height="15" fill="rgb(216,154,2)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.3058%" y="613" width="0.0801%" height="15" fill="rgb(222,8,47)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.3058%" y="597" width="0.0801%" height="15" fill="rgb(252,93,1)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="82.3058%" y="581" width="0.0801%" height="15" fill="rgb(223,226,51)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="591.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="82.3058%" y="565" width="0.0801%" height="15" fill="rgb(206,147,9)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.3859%" y="645" width="0.0801%" height="15" fill="rgb(248,180,41)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3859%" y="629" width="0.0801%" height="15" fill="rgb(209,47,50)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="639.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="81.9055%" y="725" width="0.6405%" height="15" fill="rgb(243,65,31)" fg:x="1023" fg:w="8"/><text x="82.1555%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="81.9055%" y="709" width="0.6405%" height="15" fill="rgb(228,128,1)" fg:x="1023" fg:w="8"/><text x="82.1555%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="82.3859%" y="693" width="0.1601%" height="15" fill="rgb(231,192,16)" fg:x="1029" fg:w="2"/><text x="82.6359%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="82.3859%" y="677" width="0.1601%" height="15" fill="rgb(224,26,40)" fg:x="1029" fg:w="2"/><text x="82.6359%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="82.3859%" y="661" width="0.1601%" height="15" fill="rgb(214,192,17)" fg:x="1029" fg:w="2"/><text x="82.6359%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.4660%" y="645" width="0.0801%" height="15" fill="rgb(225,147,18)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.4660%" y="629" width="0.0801%" height="15" fill="rgb(205,35,11)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4660%" y="613" width="0.0801%" height="15" fill="rgb(242,40,42)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4660%" y="597" width="0.0801%" height="15" fill="rgb(250,170,13)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4660%" y="581" width="0.0801%" height="15" fill="rgb(240,161,28)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="82.5460%" y="693" width="0.0801%" height="15" fill="rgb(245,179,12)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="82.5460%" y="677" width="0.0801%" height="15" fill="rgb(250,92,32)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="82.5460%" y="661" width="0.0801%" height="15" fill="rgb(233,10,40)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.5460%" y="645" width="0.0801%" height="15" fill="rgb(217,98,1)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.5460%" y="629" width="0.0801%" height="15" fill="rgb(238,202,7)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.5460%" y="613" width="0.0801%" height="15" fill="rgb(222,91,3)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="82.5460%" y="597" width="0.0801%" height="15" fill="rgb(211,170,49)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.5460%" y="581" width="0.0801%" height="15" fill="rgb(253,139,18)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.5460%" y="565" width="0.0801%" height="15" fill="rgb(222,4,43)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.5460%" y="549" width="0.0801%" height="15" fill="rgb(207,205,12)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="82.5460%" y="533" width="0.0801%" height="15" fill="rgb(216,159,46)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.5460%" y="517" width="0.0801%" height="15" fill="rgb(236,115,1)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="82.5460%" y="709" width="0.1601%" height="15" fill="rgb(251,35,33)" fg:x="1031" fg:w="2"/><text x="82.7960%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.6261%" y="693" width="0.0801%" height="15" fill="rgb(248,62,51)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.6261%" y="677" width="0.0801%" height="15" fill="rgb(254,180,19)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.6261%" y="661" width="0.0801%" height="15" fill="rgb(217,100,32)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6261%" y="645" width="0.0801%" height="15" fill="rgb(224,71,22)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.6261%" y="629" width="0.0801%" height="15" fill="rgb(251,185,33)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6261%" y="613" width="0.0801%" height="15" fill="rgb(209,75,48)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.6261%" y="597" width="0.0801%" height="15" fill="rgb(253,190,16)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6261%" y="581" width="0.0801%" height="15" fill="rgb(226,140,1)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6261%" y="565" width="0.0801%" height="15" fill="rgb(206,75,30)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="82.7062%" y="613" width="0.0801%" height="15" fill="rgb(231,208,37)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.7062%" y="597" width="0.0801%" height="15" fill="rgb(238,136,40)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="82.7062%" y="581" width="0.0801%" height="15" fill="rgb(247,137,17)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="82.7062%" y="661" width="0.1601%" height="15" fill="rgb(240,60,40)" fg:x="1033" fg:w="2"/><text x="82.9562%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="82.7062%" y="645" width="0.1601%" height="15" fill="rgb(236,68,50)" fg:x="1033" fg:w="2"/><text x="82.9562%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.7062%" y="629" width="0.1601%" height="15" fill="rgb(230,42,12)" fg:x="1033" fg:w="2"/><text x="82.9562%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.7862%" y="613" width="0.0801%" height="15" fill="rgb(219,16,16)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.7862%" y="597" width="0.0801%" height="15" fill="rgb(220,38,35)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.7862%" y="581" width="0.0801%" height="15" fill="rgb(228,33,1)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.7862%" y="565" width="0.0801%" height="15" fill="rgb(241,46,31)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.7862%" y="549" width="0.0801%" height="15" fill="rgb(232,58,20)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.7862%" y="533" width="0.0801%" height="15" fill="rgb(206,228,53)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.8663%" y="629" width="0.0801%" height="15" fill="rgb(206,88,33)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.8663%" y="613" width="0.0801%" height="15" fill="rgb(238,69,7)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.8663%" y="597" width="0.0801%" height="15" fill="rgb(250,21,46)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8663%" y="581" width="0.0801%" height="15" fill="rgb(215,212,21)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.9464%" y="613" width="0.0801%" height="15" fill="rgb(211,35,12)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.9464%" y="597" width="0.0801%" height="15" fill="rgb(231,184,16)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.9464%" y="581" width="0.0801%" height="15" fill="rgb(242,140,15)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.9464%" y="565" width="0.0801%" height="15" fill="rgb(220,37,14)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9464%" y="549" width="0.0801%" height="15" fill="rgb(223,146,22)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.9464%" y="533" width="0.0801%" height="15" fill="rgb(216,132,15)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="82.9464%" y="517" width="0.0801%" height="15" fill="rgb(248,83,5)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9464%" y="501" width="0.0801%" height="15" fill="rgb(231,206,48)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.9464%" y="485" width="0.0801%" height="15" fill="rgb(253,185,37)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="82.8663%" y="645" width="0.2402%" height="15" fill="rgb(208,21,44)" fg:x="1035" fg:w="3"/><text x="83.1163%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="82.9464%" y="629" width="0.1601%" height="15" fill="rgb(236,125,4)" fg:x="1036" fg:w="2"/><text x="83.1964%" y="639.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="83.0264%" y="613" width="0.0801%" height="15" fill="rgb(226,134,25)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0264%" y="597" width="0.0801%" height="15" fill="rgb(250,201,12)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.0264%" y="581" width="0.0801%" height="15" fill="rgb(225,92,18)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.0264%" y="565" width="0.0801%" height="15" fill="rgb(227,35,22)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="83.1065%" y="645" width="0.0801%" height="15" fill="rgb(214,180,52)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="83.1065%" y="629" width="0.0801%" height="15" fill="rgb(233,55,38)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="639.50"></text></g><g><title>plugins_core::build::Build::leads_to (5 samples, 0.40%)</title><rect x="82.8663%" y="661" width="0.4003%" height="15" fill="rgb(249,171,43)" fg:x="1035" fg:w="5"/><text x="83.1163%" y="671.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="83.1865%" y="645" width="0.0801%" height="15" fill="rgb(239,87,2)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="83.1865%" y="629" width="0.0801%" height="15" fill="rgb(248,141,5)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="83.1865%" y="613" width="0.0801%" height="15" fill="rgb(238,33,42)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.1865%" y="597" width="0.0801%" height="15" fill="rgb(231,57,19)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.1865%" y="581" width="0.0801%" height="15" fill="rgb(214,78,53)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.1865%" y="565" width="0.0801%" height="15" fill="rgb(206,132,29)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.1865%" y="549" width="0.0801%" height="15" fill="rgb(248,174,31)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.1865%" y="533" width="0.0801%" height="15" fill="rgb(221,87,13)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.1865%" y="517" width="0.0801%" height="15" fill="rgb(223,197,17)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="527.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.2666%" y="629" width="0.0801%" height="15" fill="rgb(220,144,50)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.2666%" y="613" width="0.0801%" height="15" fill="rgb(244,201,11)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2666%" y="597" width="0.0801%" height="15" fill="rgb(249,81,34)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2666%" y="581" width="0.0801%" height="15" fill="rgb(205,161,12)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.2666%" y="565" width="0.0801%" height="15" fill="rgb(252,139,50)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2666%" y="549" width="0.0801%" height="15" fill="rgb(205,169,14)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2666%" y="533" width="0.0801%" height="15" fill="rgb(248,198,33)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2666%" y="517" width="0.0801%" height="15" fill="rgb(236,23,21)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.72%)</title><rect x="82.7062%" y="709" width="0.7206%" height="15" fill="rgb(231,13,38)" fg:x="1033" fg:w="9"/><text x="82.9562%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="82.7062%" y="693" width="0.7206%" height="15" fill="rgb(239,139,21)" fg:x="1033" fg:w="9"/><text x="82.9562%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.72%)</title><rect x="82.7062%" y="677" width="0.7206%" height="15" fill="rgb(222,164,45)" fg:x="1033" fg:w="9"/><text x="82.9562%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="83.2666%" y="661" width="0.1601%" height="15" fill="rgb(230,52,27)" fg:x="1040" fg:w="2"/><text x="83.5166%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="83.2666%" y="645" width="0.1601%" height="15" fill="rgb(227,143,42)" fg:x="1040" fg:w="2"/><text x="83.5166%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.3467%" y="629" width="0.0801%" height="15" fill="rgb(249,127,1)" fg:x="1041" fg:w="1"/><text x="83.5967%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.3467%" y="613" width="0.0801%" height="15" fill="rgb(243,107,26)" fg:x="1041" fg:w="1"/><text x="83.5967%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="83.4267%" y="709" width="0.0801%" height="15" fill="rgb(225,7,45)" fg:x="1042" fg:w="1"/><text x="83.6767%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="83.5068%" y="613" width="0.0801%" height="15" fill="rgb(241,88,38)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5068%" y="597" width="0.0801%" height="15" fill="rgb(226,121,9)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5068%" y="581" width="0.0801%" height="15" fill="rgb(253,60,29)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.5068%" y="565" width="0.0801%" height="15" fill="rgb(244,181,39)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.5068%" y="549" width="0.0801%" height="15" fill="rgb(252,203,31)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.5068%" y="533" width="0.0801%" height="15" fill="rgb(224,120,8)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.5068%" y="517" width="0.0801%" height="15" fill="rgb(205,171,54)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.5068%" y="501" width="0.0801%" height="15" fill="rgb(235,89,11)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.5068%" y="485" width="0.0801%" height="15" fill="rgb(212,180,28)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.5068%" y="469" width="0.0801%" height="15" fill="rgb(247,84,49)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.5068%" y="453" width="0.0801%" height="15" fill="rgb(236,187,52)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.5068%" y="437" width="0.0801%" height="15" fill="rgb(227,24,15)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5068%" y="421" width="0.0801%" height="15" fill="rgb(227,211,13)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="83.5068%" y="645" width="0.1601%" height="15" fill="rgb(245,52,14)" fg:x="1043" fg:w="2"/><text x="83.7568%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="83.5068%" y="629" width="0.1601%" height="15" fill="rgb(225,185,13)" fg:x="1043" fg:w="2"/><text x="83.7568%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.5869%" y="613" width="0.0801%" height="15" fill="rgb(217,160,29)" fg:x="1044" fg:w="1"/><text x="83.8369%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="83.6669%" y="613" width="0.0801%" height="15" fill="rgb(216,115,53)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.6669%" y="597" width="0.0801%" height="15" fill="rgb(236,99,5)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.6669%" y="581" width="0.0801%" height="15" fill="rgb(222,60,38)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.6669%" y="565" width="0.0801%" height="15" fill="rgb(212,82,22)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.6669%" y="549" width="0.0801%" height="15" fill="rgb(214,48,28)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="83.7470%" y="581" width="0.2402%" height="15" fill="rgb(245,196,50)" fg:x="1046" fg:w="3"/><text x="83.9970%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.8271%" y="565" width="0.1601%" height="15" fill="rgb(225,159,46)" fg:x="1047" fg:w="2"/><text x="84.0771%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.9071%" y="549" width="0.0801%" height="15" fill="rgb(207,195,48)" fg:x="1048" fg:w="1"/><text x="84.1571%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="83.7470%" y="597" width="0.4003%" height="15" fill="rgb(240,73,3)" fg:x="1046" fg:w="5"/><text x="83.9970%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.9872%" y="581" width="0.1601%" height="15" fill="rgb(245,57,23)" fg:x="1049" fg:w="2"/><text x="84.2372%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.0673%" y="565" width="0.0801%" height="15" fill="rgb(240,75,18)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.1473%" y="581" width="0.0801%" height="15" fill="rgb(238,168,12)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.2274%" y="581" width="0.0801%" height="15" fill="rgb(226,20,40)" fg:x="1052" fg:w="1"/><text x="84.4774%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.2274%" y="565" width="0.0801%" height="15" fill="rgb(224,130,35)" fg:x="1052" fg:w="1"/><text x="84.4774%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.3074%" y="565" width="0.0801%" height="15" fill="rgb(225,63,41)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3074%" y="549" width="0.0801%" height="15" fill="rgb(219,3,3)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.3074%" y="533" width="0.0801%" height="15" fill="rgb(218,157,4)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.3074%" y="517" width="0.0801%" height="15" fill="rgb(232,76,36)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="84.3074%" y="501" width="0.0801%" height="15" fill="rgb(247,36,0)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="84.3074%" y="581" width="0.1601%" height="15" fill="rgb(205,2,34)" fg:x="1053" fg:w="2"/><text x="84.5574%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3875%" y="565" width="0.0801%" height="15" fill="rgb(239,136,13)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.88%)</title><rect x="83.7470%" y="613" width="0.8807%" height="15" fill="rgb(253,122,12)" fg:x="1046" fg:w="11"/><text x="83.9970%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="84.1473%" y="597" width="0.4804%" height="15" fill="rgb(222,174,7)" fg:x="1051" fg:w="6"/><text x="84.3973%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="84.4676%" y="581" width="0.1601%" height="15" fill="rgb(208,191,42)" fg:x="1055" fg:w="2"/><text x="84.7176%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.5476%" y="565" width="0.0801%" height="15" fill="rgb(237,212,15)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.5476%" y="549" width="0.0801%" height="15" fill="rgb(215,65,20)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.5476%" y="533" width="0.0801%" height="15" fill="rgb(232,103,11)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.5476%" y="517" width="0.0801%" height="15" fill="rgb(235,148,18)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="84.5476%" y="501" width="0.0801%" height="15" fill="rgb(240,173,7)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="84.6277%" y="565" width="0.2402%" height="15" fill="rgb(228,182,25)" fg:x="1057" fg:w="3"/><text x="84.8777%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="84.6277%" y="613" width="0.3203%" height="15" fill="rgb(247,3,52)" fg:x="1057" fg:w="4"/><text x="84.8777%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="84.6277%" y="597" width="0.3203%" height="15" fill="rgb(226,155,8)" fg:x="1057" fg:w="4"/><text x="84.8777%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="84.6277%" y="581" width="0.3203%" height="15" fill="rgb(243,195,38)" fg:x="1057" fg:w="4"/><text x="84.8777%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.8679%" y="565" width="0.0801%" height="15" fill="rgb(254,181,33)" fg:x="1060" fg:w="1"/><text x="85.1179%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.8679%" y="549" width="0.0801%" height="15" fill="rgb(232,98,23)" fg:x="1060" fg:w="1"/><text x="85.1179%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.8679%" y="533" width="0.0801%" height="15" fill="rgb(205,23,10)" fg:x="1060" fg:w="1"/><text x="85.1179%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.8679%" y="517" width="0.0801%" height="15" fill="rgb(212,124,38)" fg:x="1060" fg:w="1"/><text x="85.1179%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1081%" y="565" width="0.0801%" height="15" fill="rgb(228,207,2)" fg:x="1063" fg:w="1"/><text x="85.3581%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="85.1882%" y="565" width="0.0801%" height="15" fill="rgb(215,120,22)" fg:x="1064" fg:w="1"/><text x="85.4382%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.1882%" y="549" width="0.0801%" height="15" fill="rgb(251,172,33)" fg:x="1064" fg:w="1"/><text x="85.4382%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1882%" y="533" width="0.0801%" height="15" fill="rgb(250,83,2)" fg:x="1064" fg:w="1"/><text x="85.4382%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2682%" y="565" width="0.0801%" height="15" fill="rgb(210,132,53)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2682%" y="549" width="0.0801%" height="15" fill="rgb(221,208,36)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.5084%" y="517" width="0.0801%" height="15" fill="rgb(205,192,46)" fg:x="1068" fg:w="1"/><text x="85.7584%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5084%" y="501" width="0.0801%" height="15" fill="rgb(223,163,14)" fg:x="1068" fg:w="1"/><text x="85.7584%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.5084%" y="485" width="0.0801%" height="15" fill="rgb(218,41,28)" fg:x="1068" fg:w="1"/><text x="85.7584%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5084%" y="469" width="0.0801%" height="15" fill="rgb(235,104,10)" fg:x="1068" fg:w="1"/><text x="85.7584%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5084%" y="453" width="0.0801%" height="15" fill="rgb(246,17,4)" fg:x="1068" fg:w="1"/><text x="85.7584%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.5084%" y="437" width="0.0801%" height="15" fill="rgb(240,7,16)" fg:x="1068" fg:w="1"/><text x="85.7584%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.6685%" y="501" width="0.0801%" height="15" fill="rgb(213,160,23)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8287%" y="453" width="0.0801%" height="15" fill="rgb(251,179,49)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8287%" y="437" width="0.0801%" height="15" fill="rgb(247,198,10)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="85.7486%" y="501" width="0.2402%" height="15" fill="rgb(220,65,29)" fg:x="1071" fg:w="3"/><text x="85.9986%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="85.7486%" y="485" width="0.2402%" height="15" fill="rgb(237,171,28)" fg:x="1071" fg:w="3"/><text x="85.9986%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="85.8287%" y="469" width="0.1601%" height="15" fill="rgb(228,44,26)" fg:x="1072" fg:w="2"/><text x="86.0787%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.9087%" y="453" width="0.0801%" height="15" fill="rgb(216,210,27)" fg:x="1073" fg:w="1"/><text x="86.1587%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="85.5084%" y="533" width="0.5604%" height="15" fill="rgb(252,10,17)" fg:x="1068" fg:w="7"/><text x="85.7584%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="85.5885%" y="517" width="0.4804%" height="15" fill="rgb(214,172,30)" fg:x="1069" fg:w="6"/><text x="85.8385%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9888%" y="501" width="0.0801%" height="15" fill="rgb(253,130,48)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="511.50"></text></g><g><title>engine::session::Session::flush (34 samples, 2.72%)</title><rect x="83.5068%" y="709" width="2.7222%" height="15" fill="rgb(226,99,43)" fg:x="1043" fg:w="34"/><text x="83.7568%" y="719.50">en..</text></g><g><title>engine::session::Session::save_changes (34 samples, 2.72%)</title><rect x="83.5068%" y="693" width="2.7222%" height="15" fill="rgb(239,111,26)" fg:x="1043" fg:w="34"/><text x="83.7568%" y="703.50">en..</text></g><g><title>engine::session::state::State::close (34 samples, 2.72%)</title><rect x="83.5068%" y="677" width="2.7222%" height="15" fill="rgb(240,27,53)" fg:x="1043" fg:w="34"/><text x="83.7568%" y="687.50">en..</text></g><g><title>engine::session::state::State::flush_entities (34 samples, 2.72%)</title><rect x="83.5068%" y="661" width="2.7222%" height="15" fill="rgb(254,163,12)" fg:x="1043" fg:w="34"/><text x="83.7568%" y="671.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (32 samples, 2.56%)</title><rect x="83.6669%" y="645" width="2.5620%" height="15" fill="rgb(225,51,48)" fg:x="1045" fg:w="32"/><text x="83.9169%" y="655.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (32 samples, 2.56%)</title><rect x="83.6669%" y="629" width="2.5620%" height="15" fill="rgb(205,19,32)" fg:x="1045" fg:w="32"/><text x="83.9169%" y="639.50">en..</text></g><g><title>kernel::model::any_entity_changes (16 samples, 1.28%)</title><rect x="84.9480%" y="613" width="1.2810%" height="15" fill="rgb(218,119,26)" fg:x="1061" fg:w="16"/><text x="85.1980%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.28%)</title><rect x="84.9480%" y="597" width="1.2810%" height="15" fill="rgb(231,173,33)" fg:x="1061" fg:w="16"/><text x="85.1980%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.28%)</title><rect x="84.9480%" y="581" width="1.2810%" height="15" fill="rgb(241,100,29)" fg:x="1061" fg:w="16"/><text x="85.1980%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="85.3483%" y="565" width="0.8807%" height="15" fill="rgb(250,194,34)" fg:x="1066" fg:w="11"/><text x="85.5983%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="85.4283%" y="549" width="0.8006%" height="15" fill="rgb(215,23,50)" fg:x="1067" fg:w="10"/><text x="85.6783%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="86.0689%" y="533" width="0.1601%" height="15" fill="rgb(206,49,37)" fg:x="1075" fg:w="2"/><text x="86.3189%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.2290%" y="677" width="0.0801%" height="15" fill="rgb(247,39,21)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.2290%" y="661" width="0.0801%" height="15" fill="rgb(209,220,15)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="86.2290%" y="693" width="0.1601%" height="15" fill="rgb(206,41,33)" fg:x="1077" fg:w="2"/><text x="86.4790%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3090%" y="677" width="0.0801%" height="15" fill="rgb(221,225,45)" fg:x="1078" fg:w="1"/><text x="86.5590%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="86.2290%" y="709" width="0.2402%" height="15" fill="rgb(216,27,18)" fg:x="1077" fg:w="3"/><text x="86.4790%" y="719.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="86.3891%" y="693" width="0.0801%" height="15" fill="rgb(250,193,34)" fg:x="1079" fg:w="1"/><text x="86.6391%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4692%" y="661" width="0.0801%" height="15" fill="rgb(227,215,20)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="86.4692%" y="693" width="0.1601%" height="15" fill="rgb(242,211,27)" fg:x="1080" fg:w="2"/><text x="86.7192%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.4692%" y="677" width="0.1601%" height="15" fill="rgb(229,190,30)" fg:x="1080" fg:w="2"/><text x="86.7192%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.5492%" y="661" width="0.0801%" height="15" fill="rgb(253,31,29)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5492%" y="645" width="0.0801%" height="15" fill="rgb(229,177,52)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.6293%" y="645" width="0.0801%" height="15" fill="rgb(226,88,8)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.6293%" y="629" width="0.0801%" height="15" fill="rgb(214,55,27)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.6293%" y="613" width="0.0801%" height="15" fill="rgb(233,202,5)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.6293%" y="597" width="0.0801%" height="15" fill="rgb(251,49,30)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.6293%" y="581" width="0.0801%" height="15" fill="rgb(235,18,52)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.6293%" y="565" width="0.0801%" height="15" fill="rgb(250,111,51)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.6293%" y="549" width="0.0801%" height="15" fill="rgb(218,13,25)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.6293%" y="533" width="0.0801%" height="15" fill="rgb(248,96,7)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="86.7094%" y="629" width="0.0801%" height="15" fill="rgb(217,31,15)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.7094%" y="613" width="0.0801%" height="15" fill="rgb(228,59,49)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="86.7094%" y="597" width="0.0801%" height="15" fill="rgb(210,152,38)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="86.6293%" y="677" width="0.2402%" height="15" fill="rgb(206,71,11)" fg:x="1082" fg:w="3"/><text x="86.8793%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="86.6293%" y="661" width="0.2402%" height="15" fill="rgb(244,199,5)" fg:x="1082" fg:w="3"/><text x="86.8793%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="86.7094%" y="645" width="0.1601%" height="15" fill="rgb(253,49,1)" fg:x="1083" fg:w="2"/><text x="86.9594%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.7894%" y="629" width="0.0801%" height="15" fill="rgb(225,206,40)" fg:x="1084" fg:w="1"/><text x="87.0394%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.7894%" y="613" width="0.0801%" height="15" fill="rgb(243,116,47)" fg:x="1084" fg:w="1"/><text x="87.0394%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7894%" y="597" width="0.0801%" height="15" fill="rgb(219,225,16)" fg:x="1084" fg:w="1"/><text x="87.0394%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.7894%" y="581" width="0.0801%" height="15" fill="rgb(233,29,47)" fg:x="1084" fg:w="1"/><text x="87.0394%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7894%" y="565" width="0.0801%" height="15" fill="rgb(250,179,18)" fg:x="1084" fg:w="1"/><text x="87.0394%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.7894%" y="549" width="0.0801%" height="15" fill="rgb(215,176,6)" fg:x="1084" fg:w="1"/><text x="87.0394%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.7894%" y="533" width="0.0801%" height="15" fill="rgb(214,117,39)" fg:x="1084" fg:w="1"/><text x="87.0394%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="86.7894%" y="517" width="0.0801%" height="15" fill="rgb(247,183,36)" fg:x="1084" fg:w="1"/><text x="87.0394%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="86.8695%" y="677" width="0.0801%" height="15" fill="rgb(237,200,3)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.8695%" y="661" width="0.0801%" height="15" fill="rgb(212,220,24)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.8695%" y="645" width="0.0801%" height="15" fill="rgb(245,216,20)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.9496%" y="677" width="0.0801%" height="15" fill="rgb(219,124,7)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9496%" y="661" width="0.0801%" height="15" fill="rgb(227,167,8)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.9496%" y="645" width="0.0801%" height="15" fill="rgb(241,37,2)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.9496%" y="629" width="0.0801%" height="15" fill="rgb(238,134,33)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9496%" y="613" width="0.0801%" height="15" fill="rgb(248,48,27)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.9496%" y="597" width="0.0801%" height="15" fill="rgb(212,14,16)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="607.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="86.9496%" y="581" width="0.0801%" height="15" fill="rgb(217,205,37)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.9496%" y="565" width="0.0801%" height="15" fill="rgb(233,185,47)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0296%" y="661" width="0.0801%" height="15" fill="rgb(244,88,8)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="671.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.72%)</title><rect x="86.4692%" y="709" width="0.7206%" height="15" fill="rgb(213,0,20)" fg:x="1080" fg:w="9"/><text x="86.7192%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="86.6293%" y="693" width="0.5604%" height="15" fill="rgb(238,159,36)" fg:x="1082" fg:w="7"/><text x="86.8793%" y="703.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="87.0296%" y="677" width="0.1601%" height="15" fill="rgb(253,173,17)" fg:x="1087" fg:w="2"/><text x="87.2796%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="87.1097%" y="661" width="0.0801%" height="15" fill="rgb(221,23,28)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="87.1097%" y="645" width="0.0801%" height="15" fill="rgb(218,113,15)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.1097%" y="629" width="0.0801%" height="15" fill="rgb(233,58,3)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.1097%" y="613" width="0.0801%" height="15" fill="rgb(250,46,35)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.1097%" y="597" width="0.0801%" height="15" fill="rgb(210,169,11)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.1097%" y="581" width="0.0801%" height="15" fill="rgb(246,88,19)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.1097%" y="565" width="0.0801%" height="15" fill="rgb(206,81,49)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="87.1898%" y="709" width="0.0801%" height="15" fill="rgb(232,144,18)" fg:x="1089" fg:w="1"/><text x="87.4398%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="87.1898%" y="693" width="0.0801%" height="15" fill="rgb(235,2,27)" fg:x="1089" fg:w="1"/><text x="87.4398%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.1898%" y="677" width="0.0801%" height="15" fill="rgb(239,157,39)" fg:x="1089" fg:w="1"/><text x="87.4398%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.1898%" y="661" width="0.0801%" height="15" fill="rgb(220,11,17)" fg:x="1089" fg:w="1"/><text x="87.4398%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.1898%" y="645" width="0.0801%" height="15" fill="rgb(243,94,50)" fg:x="1089" fg:w="1"/><text x="87.4398%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.1898%" y="629" width="0.0801%" height="15" fill="rgb(218,22,0)" fg:x="1089" fg:w="1"/><text x="87.4398%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.1898%" y="613" width="0.0801%" height="15" fill="rgb(249,70,21)" fg:x="1089" fg:w="1"/><text x="87.4398%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="87.2698%" y="709" width="0.0801%" height="15" fill="rgb(245,111,46)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="87.2698%" y="693" width="0.0801%" height="15" fill="rgb(244,183,12)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.2698%" y="677" width="0.0801%" height="15" fill="rgb(207,117,0)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="687.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="87.2698%" y="661" width="0.0801%" height="15" fill="rgb(206,20,43)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="87.3499%" y="693" width="0.0801%" height="15" fill="rgb(221,104,11)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="87.3499%" y="677" width="0.0801%" height="15" fill="rgb(254,36,50)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="87.3499%" y="661" width="0.0801%" height="15" fill="rgb(252,17,15)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="87.3499%" y="645" width="0.0801%" height="15" fill="rgb(219,129,43)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.3499%" y="629" width="0.0801%" height="15" fill="rgb(205,34,45)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3499%" y="613" width="0.0801%" height="15" fill="rgb(251,201,32)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3499%" y="597" width="0.0801%" height="15" fill="rgb(205,56,0)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.3499%" y="581" width="0.0801%" height="15" fill="rgb(211,193,27)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3499%" y="565" width="0.0801%" height="15" fill="rgb(231,100,42)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3499%" y="549" width="0.0801%" height="15" fill="rgb(245,85,27)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3499%" y="533" width="0.0801%" height="15" fill="rgb(241,76,24)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="87.4299%" y="677" width="0.0801%" height="15" fill="rgb(249,157,15)" fg:x="1092" fg:w="1"/><text x="87.6799%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.4299%" y="661" width="0.0801%" height="15" fill="rgb(222,218,25)" fg:x="1092" fg:w="1"/><text x="87.6799%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="87.5100%" y="677" width="0.1601%" height="15" fill="rgb(252,156,52)" fg:x="1093" fg:w="2"/><text x="87.7600%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="87.5100%" y="661" width="0.1601%" height="15" fill="rgb(211,185,7)" fg:x="1093" fg:w="2"/><text x="87.7600%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.5100%" y="645" width="0.1601%" height="15" fill="rgb(234,108,24)" fg:x="1093" fg:w="2"/><text x="87.7600%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="87.5100%" y="629" width="0.1601%" height="15" fill="rgb(227,218,2)" fg:x="1093" fg:w="2"/><text x="87.7600%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.5901%" y="613" width="0.0801%" height="15" fill="rgb(224,0,36)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="87.5901%" y="597" width="0.0801%" height="15" fill="rgb(233,201,10)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6701%" y="533" width="0.0801%" height="15" fill="rgb(252,209,14)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6701%" y="517" width="0.0801%" height="15" fill="rgb(205,93,49)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (66 samples, 5.28%)</title><rect x="82.5460%" y="725" width="5.2842%" height="15" fill="rgb(234,116,45)" fg:x="1031" fg:w="66"/><text x="82.7960%" y="735.50">plugin..</text></g><g><title>plugins_core::build::Build::occupying (6 samples, 0.48%)</title><rect x="87.3499%" y="709" width="0.4804%" height="15" fill="rgb(248,89,35)" fg:x="1091" fg:w="6"/><text x="87.5999%" y="719.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.40%)</title><rect x="87.4299%" y="693" width="0.4003%" height="15" fill="rgb(233,167,45)" fg:x="1092" fg:w="5"/><text x="87.6799%" y="703.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="87.6701%" y="677" width="0.1601%" height="15" fill="rgb(248,228,14)" fg:x="1095" fg:w="2"/><text x="87.9201%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="87.6701%" y="661" width="0.1601%" height="15" fill="rgb(246,91,14)" fg:x="1095" fg:w="2"/><text x="87.9201%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="87.6701%" y="645" width="0.1601%" height="15" fill="rgb(227,142,5)" fg:x="1095" fg:w="2"/><text x="87.9201%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="87.6701%" y="629" width="0.1601%" height="15" fill="rgb(221,63,33)" fg:x="1095" fg:w="2"/><text x="87.9201%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.6701%" y="613" width="0.1601%" height="15" fill="rgb(233,49,0)" fg:x="1095" fg:w="2"/><text x="87.9201%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.6701%" y="597" width="0.1601%" height="15" fill="rgb(251,115,38)" fg:x="1095" fg:w="2"/><text x="87.9201%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.6701%" y="581" width="0.1601%" height="15" fill="rgb(231,214,32)" fg:x="1095" fg:w="2"/><text x="87.9201%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="87.6701%" y="565" width="0.1601%" height="15" fill="rgb(248,73,46)" fg:x="1095" fg:w="2"/><text x="87.9201%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.6701%" y="549" width="0.1601%" height="15" fill="rgb(237,156,4)" fg:x="1095" fg:w="2"/><text x="87.9201%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.7502%" y="533" width="0.0801%" height="15" fill="rgb(227,132,2)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7502%" y="517" width="0.0801%" height="15" fill="rgb(248,161,9)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="87.8303%" y="725" width="0.0801%" height="15" fill="rgb(238,77,38)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="87.8303%" y="709" width="0.0801%" height="15" fill="rgb(222,166,40)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="87.9103%" y="677" width="0.0801%" height="15" fill="rgb(214,168,45)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.9103%" y="661" width="0.0801%" height="15" fill="rgb(226,64,37)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.9103%" y="645" width="0.0801%" height="15" fill="rgb(232,210,43)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.9103%" y="629" width="0.0801%" height="15" fill="rgb(214,76,33)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.9103%" y="613" width="0.0801%" height="15" fill="rgb(210,78,5)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.9103%" y="597" width="0.0801%" height="15" fill="rgb(211,107,37)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.9103%" y="581" width="0.0801%" height="15" fill="rgb(249,67,16)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.9103%" y="565" width="0.0801%" height="15" fill="rgb(222,114,31)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.9103%" y="549" width="0.0801%" height="15" fill="rgb(242,118,19)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.9103%" y="533" width="0.0801%" height="15" fill="rgb(223,115,1)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.9103%" y="517" width="0.0801%" height="15" fill="rgb(241,182,54)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.9103%" y="501" width="0.0801%" height="15" fill="rgb(244,166,36)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.9103%" y="485" width="0.0801%" height="15" fill="rgb(241,52,43)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.9103%" y="469" width="0.0801%" height="15" fill="rgb(236,82,9)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="87.9103%" y="453" width="0.0801%" height="15" fill="rgb(241,119,0)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.9103%" y="437" width="0.0801%" height="15" fill="rgb(221,19,22)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.9103%" y="421" width="0.0801%" height="15" fill="rgb(254,144,35)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.9103%" y="405" width="0.0801%" height="15" fill="rgb(246,132,30)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.9103%" y="389" width="0.0801%" height="15" fill="rgb(234,69,28)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.9103%" y="373" width="0.0801%" height="15" fill="rgb(219,106,47)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="87.9103%" y="357" width="0.0801%" height="15" fill="rgb(218,79,24)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="87.9103%" y="341" width="0.0801%" height="15" fill="rgb(225,26,21)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="87.9103%" y="325" width="0.0801%" height="15" fill="rgb(217,68,49)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="87.9103%" y="309" width="0.0801%" height="15" fill="rgb(220,204,28)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.9103%" y="293" width="0.0801%" height="15" fill="rgb(237,208,43)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.9103%" y="277" width="0.0801%" height="15" fill="rgb(213,97,42)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.9103%" y="261" width="0.0801%" height="15" fill="rgb(238,96,52)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="87.9103%" y="245" width="0.0801%" height="15" fill="rgb(228,14,13)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.9103%" y="229" width="0.0801%" height="15" fill="rgb(219,123,13)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="87.9103%" y="213" width="0.0801%" height="15" fill="rgb(216,144,17)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="87.9103%" y="197" width="0.0801%" height="15" fill="rgb(230,228,29)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="87.9103%" y="181" width="0.0801%" height="15" fill="rgb(233,18,5)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.9103%" y="165" width="0.0801%" height="15" fill="rgb(233,197,12)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="175.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="87.9904%" y="677" width="0.0801%" height="15" fill="rgb(234,140,29)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="87.9103%" y="693" width="0.2402%" height="15" fill="rgb(233,113,19)" fg:x="1098" fg:w="3"/><text x="88.1603%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="88.0705%" y="677" width="0.0801%" height="15" fill="rgb(246,209,13)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="88.0705%" y="661" width="0.0801%" height="15" fill="rgb(242,79,54)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.0705%" y="645" width="0.0801%" height="15" fill="rgb(219,73,16)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="88.0705%" y="629" width="0.0801%" height="15" fill="rgb(224,52,10)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="88.0705%" y="613" width="0.0801%" height="15" fill="rgb(237,179,5)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0705%" y="597" width="0.0801%" height="15" fill="rgb(231,20,6)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0705%" y="581" width="0.0801%" height="15" fill="rgb(253,171,45)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0705%" y="565" width="0.0801%" height="15" fill="rgb(230,75,49)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (4 samples, 0.32%)</title><rect x="87.9103%" y="725" width="0.3203%" height="15" fill="rgb(216,83,46)" fg:x="1098" fg:w="4"/><text x="88.1603%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.32%)</title><rect x="87.9103%" y="709" width="0.3203%" height="15" fill="rgb(236,56,9)" fg:x="1098" fg:w="4"/><text x="88.1603%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="88.1505%" y="693" width="0.0801%" height="15" fill="rgb(215,28,34)" fg:x="1101" fg:w="1"/><text x="88.4005%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.2306%" y="693" width="0.0801%" height="15" fill="rgb(230,222,20)" fg:x="1102" fg:w="1"/><text x="88.4806%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.2306%" y="677" width="0.0801%" height="15" fill="rgb(235,209,51)" fg:x="1102" fg:w="1"/><text x="88.4806%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.2306%" y="661" width="0.0801%" height="15" fill="rgb(235,167,1)" fg:x="1102" fg:w="1"/><text x="88.4806%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.2306%" y="645" width="0.0801%" height="15" fill="rgb(248,220,0)" fg:x="1102" fg:w="1"/><text x="88.4806%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.2306%" y="629" width="0.0801%" height="15" fill="rgb(239,0,18)" fg:x="1102" fg:w="1"/><text x="88.4806%" y="639.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.3106%" y="645" width="0.0801%" height="15" fill="rgb(229,179,11)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.3907%" y="613" width="0.0801%" height="15" fill="rgb(226,116,53)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.3907%" y="597" width="0.0801%" height="15" fill="rgb(218,1,49)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.3907%" y="581" width="0.0801%" height="15" fill="rgb(208,184,47)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="88.2306%" y="709" width="0.3203%" height="15" fill="rgb(238,174,3)" fg:x="1102" fg:w="4"/><text x="88.4806%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="88.3106%" y="693" width="0.2402%" height="15" fill="rgb(247,188,6)" fg:x="1103" fg:w="3"/><text x="88.5606%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="88.3106%" y="677" width="0.2402%" height="15" fill="rgb(211,165,46)" fg:x="1103" fg:w="3"/><text x="88.5606%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="88.3106%" y="661" width="0.2402%" height="15" fill="rgb(222,190,10)" fg:x="1103" fg:w="3"/><text x="88.5606%" y="671.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="88.3907%" y="645" width="0.1601%" height="15" fill="rgb(206,185,3)" fg:x="1104" fg:w="2"/><text x="88.6407%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="88.3907%" y="629" width="0.1601%" height="15" fill="rgb(244,125,37)" fg:x="1104" fg:w="2"/><text x="88.6407%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="88.4708%" y="613" width="0.0801%" height="15" fill="rgb(211,43,7)" fg:x="1105" fg:w="1"/><text x="88.7208%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.4708%" y="597" width="0.0801%" height="15" fill="rgb(250,41,42)" fg:x="1105" fg:w="1"/><text x="88.7208%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.4708%" y="581" width="0.0801%" height="15" fill="rgb(254,54,42)" fg:x="1105" fg:w="1"/><text x="88.7208%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="88.4708%" y="565" width="0.0801%" height="15" fill="rgb(213,71,43)" fg:x="1105" fg:w="1"/><text x="88.7208%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.4708%" y="549" width="0.0801%" height="15" fill="rgb(249,3,44)" fg:x="1105" fg:w="1"/><text x="88.7208%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="88.5508%" y="677" width="0.0801%" height="15" fill="rgb(229,80,41)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="88.5508%" y="661" width="0.0801%" height="15" fill="rgb(231,25,28)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="88.5508%" y="693" width="0.1601%" height="15" fill="rgb(208,79,48)" fg:x="1106" fg:w="2"/><text x="88.8008%" y="703.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="88.6309%" y="677" width="0.0801%" height="15" fill="rgb(207,196,38)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="88.6309%" y="661" width="0.0801%" height="15" fill="rgb(228,105,49)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.6309%" y="645" width="0.0801%" height="15" fill="rgb(237,99,15)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="655.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (133 samples, 10.65%)</title><rect x="78.1425%" y="741" width="10.6485%" height="15" fill="rgb(224,207,46)" fg:x="976" fg:w="133"/><text x="78.3925%" y="751.50">&lt;tests::HoldingK..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (7 samples, 0.56%)</title><rect x="88.2306%" y="725" width="0.5604%" height="15" fill="rgb(249,117,50)" fg:x="1102" fg:w="7"/><text x="88.4806%" y="735.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="88.5508%" y="709" width="0.2402%" height="15" fill="rgb(248,17,13)" fg:x="1106" fg:w="3"/><text x="88.8008%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="88.7110%" y="693" width="0.0801%" height="15" fill="rgb(228,187,36)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="88.7110%" y="677" width="0.0801%" height="15" fill="rgb(234,132,20)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7110%" y="661" width="0.0801%" height="15" fill="rgb(209,170,46)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::rollback (1 samples, 0.08%)</title><rect x="88.8711%" y="725" width="0.0801%" height="15" fill="rgb(237,23,19)" fg:x="1110" fg:w="1"/><text x="89.1211%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.9512%" y="693" width="0.0801%" height="15" fill="rgb(227,21,26)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.0312%" y="661" width="0.0801%" height="15" fill="rgb(222,220,48)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.0312%" y="645" width="0.0801%" height="15" fill="rgb(214,9,16)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.0312%" y="629" width="0.0801%" height="15" fill="rgb(209,73,30)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.0312%" y="613" width="0.0801%" height="15" fill="rgb(207,20,33)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.0312%" y="597" width="0.0801%" height="15" fill="rgb(219,153,12)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.0312%" y="581" width="0.0801%" height="15" fill="rgb(235,97,25)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.0312%" y="565" width="0.0801%" height="15" fill="rgb(244,30,34)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.0312%" y="549" width="0.0801%" height="15" fill="rgb(214,106,45)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.0312%" y="533" width="0.0801%" height="15" fill="rgb(226,41,9)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.0312%" y="517" width="0.0801%" height="15" fill="rgb(253,139,29)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.0312%" y="501" width="0.0801%" height="15" fill="rgb(213,205,39)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="89.1113%" y="645" width="0.2402%" height="15" fill="rgb(209,27,10)" fg:x="1113" fg:w="3"/><text x="89.3613%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.1914%" y="629" width="0.1601%" height="15" fill="rgb(249,142,16)" fg:x="1114" fg:w="2"/><text x="89.4414%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.2714%" y="613" width="0.0801%" height="15" fill="rgb(242,65,12)" fg:x="1115" fg:w="1"/><text x="89.5214%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.2714%" y="597" width="0.0801%" height="15" fill="rgb(232,48,10)" fg:x="1115" fg:w="1"/><text x="89.5214%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="89.4315%" y="613" width="0.1601%" height="15" fill="rgb(253,67,19)" fg:x="1117" fg:w="2"/><text x="89.6815%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.5917%" y="581" width="0.0801%" height="15" fill="rgb(227,93,29)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.5917%" y="565" width="0.0801%" height="15" fill="rgb(226,189,53)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="89.5917%" y="613" width="0.2402%" height="15" fill="rgb(223,224,1)" fg:x="1119" fg:w="3"/><text x="89.8417%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="89.5917%" y="597" width="0.2402%" height="15" fill="rgb(221,84,32)" fg:x="1119" fg:w="3"/><text x="89.8417%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="89.6717%" y="581" width="0.1601%" height="15" fill="rgb(214,189,28)" fg:x="1120" fg:w="2"/><text x="89.9217%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="89.6717%" y="565" width="0.1601%" height="15" fill="rgb(234,7,52)" fg:x="1120" fg:w="2"/><text x="89.9217%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.6717%" y="549" width="0.1601%" height="15" fill="rgb(249,73,31)" fg:x="1120" fg:w="2"/><text x="89.9217%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="89.6717%" y="533" width="0.1601%" height="15" fill="rgb(253,153,41)" fg:x="1120" fg:w="2"/><text x="89.9217%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="89.8319%" y="613" width="0.1601%" height="15" fill="rgb(249,52,34)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.8319%" y="597" width="0.1601%" height="15" fill="rgb(236,177,47)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="90.0721%" y="597" width="0.1601%" height="15" fill="rgb(252,185,45)" fg:x="1125" fg:w="2"/><text x="90.3221%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.1521%" y="581" width="0.0801%" height="15" fill="rgb(251,15,30)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.2322%" y="581" width="0.0801%" height="15" fill="rgb(233,31,4)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.2322%" y="565" width="0.0801%" height="15" fill="rgb(254,44,24)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="89.9920%" y="613" width="0.4003%" height="15" fill="rgb(218,54,1)" fg:x="1124" fg:w="5"/><text x="90.2420%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="90.2322%" y="597" width="0.1601%" height="15" fill="rgb(243,209,39)" fg:x="1127" fg:w="2"/><text x="90.4822%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="90.3122%" y="581" width="0.0801%" height="15" fill="rgb(206,75,33)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.3122%" y="565" width="0.0801%" height="15" fill="rgb(223,108,18)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.3122%" y="549" width="0.0801%" height="15" fill="rgb(244,89,31)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.3122%" y="533" width="0.0801%" height="15" fill="rgb(222,167,27)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.3122%" y="517" width="0.0801%" height="15" fill="rgb(247,41,16)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="89.4315%" y="629" width="1.0408%" height="15" fill="rgb(233,168,40)" fg:x="1117" fg:w="13"/><text x="89.6815%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.3923%" y="613" width="0.0801%" height="15" fill="rgb(205,211,8)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.3923%" y="597" width="0.0801%" height="15" fill="rgb(238,105,11)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.3923%" y="581" width="0.0801%" height="15" fill="rgb(223,142,52)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.52%)</title><rect x="89.1113%" y="661" width="1.5212%" height="15" fill="rgb(238,51,33)" fg:x="1113" fg:w="19"/><text x="89.3613%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="89.3515%" y="645" width="1.2810%" height="15" fill="rgb(231,188,43)" fg:x="1116" fg:w="16"/><text x="89.6015%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="90.4724%" y="629" width="0.1601%" height="15" fill="rgb(216,92,17)" fg:x="1130" fg:w="2"/><text x="90.7224%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.5524%" y="613" width="0.0801%" height="15" fill="rgb(228,2,40)" fg:x="1131" fg:w="1"/><text x="90.8024%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.5524%" y="597" width="0.0801%" height="15" fill="rgb(226,73,15)" fg:x="1131" fg:w="1"/><text x="90.8024%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6325%" y="597" width="0.0801%" height="15" fill="rgb(227,66,46)" fg:x="1132" fg:w="1"/><text x="90.8825%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.7126%" y="597" width="0.0801%" height="15" fill="rgb(209,71,6)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.7126%" y="581" width="0.0801%" height="15" fill="rgb(246,100,25)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.6325%" y="661" width="0.2402%" height="15" fill="rgb(248,185,27)" fg:x="1132" fg:w="3"/><text x="90.8825%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="90.6325%" y="645" width="0.2402%" height="15" fill="rgb(225,118,47)" fg:x="1132" fg:w="3"/><text x="90.8825%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.6325%" y="629" width="0.2402%" height="15" fill="rgb(220,185,44)" fg:x="1132" fg:w="3"/><text x="90.8825%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.6325%" y="613" width="0.2402%" height="15" fill="rgb(227,95,24)" fg:x="1132" fg:w="3"/><text x="90.8825%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.7926%" y="597" width="0.0801%" height="15" fill="rgb(252,84,24)" fg:x="1134" fg:w="1"/><text x="91.0426%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.7926%" y="581" width="0.0801%" height="15" fill="rgb(240,34,44)" fg:x="1134" fg:w="1"/><text x="91.0426%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.7926%" y="565" width="0.0801%" height="15" fill="rgb(209,72,54)" fg:x="1134" fg:w="1"/><text x="91.0426%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.8727%" y="597" width="0.0801%" height="15" fill="rgb(226,19,45)" fg:x="1135" fg:w="1"/><text x="91.1227%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9528%" y="581" width="0.0801%" height="15" fill="rgb(246,7,45)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.0328%" y="581" width="0.0801%" height="15" fill="rgb(225,45,2)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.0328%" y="565" width="0.0801%" height="15" fill="rgb(221,80,29)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.1129%" y="565" width="0.0801%" height="15" fill="rgb(228,11,19)" fg:x="1138" fg:w="1"/><text x="91.3629%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="91.1930%" y="549" width="0.1601%" height="15" fill="rgb(243,17,21)" fg:x="1139" fg:w="2"/><text x="91.4430%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.3531%" y="549" width="0.0801%" height="15" fill="rgb(243,88,8)" fg:x="1141" fg:w="1"/><text x="91.6031%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3531%" y="533" width="0.0801%" height="15" fill="rgb(214,17,9)" fg:x="1141" fg:w="1"/><text x="91.6031%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="90.8727%" y="629" width="0.7206%" height="15" fill="rgb(232,169,15)" fg:x="1135" fg:w="9"/><text x="91.1227%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="90.8727%" y="613" width="0.7206%" height="15" fill="rgb(232,86,53)" fg:x="1135" fg:w="9"/><text x="91.1227%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="90.9528%" y="597" width="0.6405%" height="15" fill="rgb(222,100,4)" fg:x="1136" fg:w="8"/><text x="91.2028%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="91.1129%" y="581" width="0.4804%" height="15" fill="rgb(253,151,38)" fg:x="1138" fg:w="6"/><text x="91.3629%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="91.1930%" y="565" width="0.4003%" height="15" fill="rgb(238,215,29)" fg:x="1139" fg:w="5"/><text x="91.4430%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="91.4331%" y="549" width="0.1601%" height="15" fill="rgb(205,128,53)" fg:x="1142" fg:w="2"/><text x="91.6831%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.5132%" y="533" width="0.0801%" height="15" fill="rgb(248,183,14)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.5132%" y="517" width="0.0801%" height="15" fill="rgb(244,172,35)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5132%" y="501" width="0.0801%" height="15" fill="rgb(234,93,19)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="511.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (11 samples, 0.88%)</title><rect x="90.8727%" y="645" width="0.8807%" height="15" fill="rgb(227,109,7)" fg:x="1135" fg:w="11"/><text x="91.1227%" y="655.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="91.5933%" y="629" width="0.1601%" height="15" fill="rgb(233,136,54)" fg:x="1144" fg:w="2"/><text x="91.8433%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="91.5933%" y="613" width="0.1601%" height="15" fill="rgb(233,19,40)" fg:x="1144" fg:w="2"/><text x="91.8433%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="91.5933%" y="597" width="0.1601%" height="15" fill="rgb(247,41,18)" fg:x="1144" fg:w="2"/><text x="91.8433%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="91.5933%" y="581" width="0.1601%" height="15" fill="rgb(220,34,34)" fg:x="1144" fg:w="2"/><text x="91.8433%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="91.6733%" y="565" width="0.0801%" height="15" fill="rgb(222,135,32)" fg:x="1145" fg:w="1"/><text x="91.9233%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="91.6733%" y="549" width="0.0801%" height="15" fill="rgb(214,80,19)" fg:x="1145" fg:w="1"/><text x="91.9233%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.6733%" y="533" width="0.0801%" height="15" fill="rgb(234,54,46)" fg:x="1145" fg:w="1"/><text x="91.9233%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="91.7534%" y="629" width="0.0801%" height="15" fill="rgb(251,48,23)" fg:x="1146" fg:w="1"/><text x="92.0034%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="92.1537%" y="613" width="0.0801%" height="15" fill="rgb(254,109,52)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="92.1537%" y="597" width="0.0801%" height="15" fill="rgb(240,186,19)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="607.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="92.1537%" y="581" width="0.0801%" height="15" fill="rgb(246,187,17)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="92.1537%" y="565" width="0.0801%" height="15" fill="rgb(212,21,5)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.4740%" y="533" width="0.0801%" height="15" fill="rgb(225,185,18)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="92.4740%" y="565" width="0.2402%" height="15" fill="rgb(245,114,17)" fg:x="1155" fg:w="3"/><text x="92.7240%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="92.4740%" y="549" width="0.2402%" height="15" fill="rgb(223,164,24)" fg:x="1155" fg:w="3"/><text x="92.7240%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="92.5540%" y="533" width="0.1601%" height="15" fill="rgb(211,228,3)" fg:x="1156" fg:w="2"/><text x="92.8040%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.5540%" y="517" width="0.1601%" height="15" fill="rgb(223,16,38)" fg:x="1156" fg:w="2"/><text x="92.8040%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.6341%" y="501" width="0.0801%" height="15" fill="rgb(207,31,54)" fg:x="1157" fg:w="1"/><text x="92.8841%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.6341%" y="485" width="0.0801%" height="15" fill="rgb(220,39,11)" fg:x="1157" fg:w="1"/><text x="92.8841%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="92.4740%" y="581" width="0.6405%" height="15" fill="rgb(235,185,0)" fg:x="1155" fg:w="8"/><text x="92.7240%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="92.7142%" y="565" width="0.4003%" height="15" fill="rgb(249,39,18)" fg:x="1158" fg:w="5"/><text x="92.9642%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="92.7942%" y="549" width="0.3203%" height="15" fill="rgb(240,110,33)" fg:x="1159" fg:w="4"/><text x="93.0442%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="92.8743%" y="533" width="0.2402%" height="15" fill="rgb(210,92,42)" fg:x="1160" fg:w="3"/><text x="93.1243%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="92.9544%" y="517" width="0.1601%" height="15" fill="rgb(218,215,28)" fg:x="1161" fg:w="2"/><text x="93.2044%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.9544%" y="501" width="0.1601%" height="15" fill="rgb(238,215,36)" fg:x="1161" fg:w="2"/><text x="93.2044%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0344%" y="485" width="0.0801%" height="15" fill="rgb(220,31,10)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0344%" y="469" width="0.0801%" height="15" fill="rgb(212,93,14)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.96%)</title><rect x="92.3139%" y="597" width="0.9608%" height="15" fill="rgb(254,207,2)" fg:x="1153" fg:w="12"/><text x="92.5639%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="93.1145%" y="581" width="0.1601%" height="15" fill="rgb(205,57,44)" fg:x="1163" fg:w="2"/><text x="93.3645%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1946%" y="565" width="0.0801%" height="15" fill="rgb(226,151,19)" fg:x="1164" fg:w="1"/><text x="93.4446%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.2746%" y="597" width="0.0801%" height="15" fill="rgb(230,72,30)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (21 samples, 1.68%)</title><rect x="91.7534%" y="645" width="1.6813%" height="15" fill="rgb(244,0,8)" fg:x="1146" fg:w="21"/><text x="92.0034%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.60%)</title><rect x="91.8335%" y="629" width="1.6013%" height="15" fill="rgb(230,192,6)" fg:x="1147" fg:w="20"/><text x="92.0835%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.20%)</title><rect x="92.2338%" y="613" width="1.2010%" height="15" fill="rgb(233,207,13)" fg:x="1152" fg:w="15"/><text x="92.4838%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3547%" y="597" width="0.0801%" height="15" fill="rgb(206,227,7)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3547%" y="581" width="0.0801%" height="15" fill="rgb(213,217,25)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.5949%" y="453" width="0.0801%" height="15" fill="rgb(249,75,4)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5949%" y="437" width="0.0801%" height="15" fill="rgb(225,114,18)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.5949%" y="469" width="0.2402%" height="15" fill="rgb(211,162,40)" fg:x="1169" fg:w="3"/><text x="93.8449%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.6749%" y="453" width="0.1601%" height="15" fill="rgb(206,49,29)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.6749%" y="437" width="0.1601%" height="15" fill="rgb(244,8,6)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7550%" y="421" width="0.0801%" height="15" fill="rgb(231,194,28)" fg:x="1171" fg:w="1"/><text x="94.0050%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="93.5949%" y="485" width="0.3203%" height="15" fill="rgb(210,69,5)" fg:x="1169" fg:w="4"/><text x="93.8449%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8351%" y="469" width="0.0801%" height="15" fill="rgb(216,186,12)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="93.9151%" y="485" width="0.2402%" height="15" fill="rgb(238,61,15)" fg:x="1173" fg:w="3"/><text x="94.1651%" y="495.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="93.9151%" y="469" width="0.2402%" height="15" fill="rgb(226,104,1)" fg:x="1173" fg:w="3"/><text x="94.1651%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="93.5949%" y="517" width="0.6405%" height="15" fill="rgb(229,128,15)" fg:x="1169" fg:w="8"/><text x="93.8449%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="93.5949%" y="501" width="0.6405%" height="15" fill="rgb(247,110,15)" fg:x="1169" fg:w="8"/><text x="93.8449%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1553%" y="485" width="0.0801%" height="15" fill="rgb(210,74,48)" fg:x="1176" fg:w="1"/><text x="94.4053%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="93.5949%" y="533" width="0.7206%" height="15" fill="rgb(246,121,10)" fg:x="1169" fg:w="9"/><text x="93.8449%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.2354%" y="517" width="0.0801%" height="15" fill="rgb(214,156,37)" fg:x="1177" fg:w="1"/><text x="94.4854%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2354%" y="501" width="0.0801%" height="15" fill="rgb(214,210,34)" fg:x="1177" fg:w="1"/><text x="94.4854%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="93.5148%" y="549" width="0.8807%" height="15" fill="rgb(237,93,35)" fg:x="1168" fg:w="11"/><text x="93.7648%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3155%" y="533" width="0.0801%" height="15" fill="rgb(206,36,8)" fg:x="1178" fg:w="1"/><text x="94.5655%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="93.4347%" y="581" width="1.0408%" height="15" fill="rgb(208,151,12)" fg:x="1167" fg:w="13"/><text x="93.6847%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="93.5148%" y="565" width="0.9608%" height="15" fill="rgb(225,133,52)" fg:x="1168" fg:w="12"/><text x="93.7648%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3955%" y="549" width="0.0801%" height="15" fill="rgb(231,71,53)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3955%" y="533" width="0.0801%" height="15" fill="rgb(243,76,21)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3955%" y="517" width="0.0801%" height="15" fill="rgb(252,144,3)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.4756%" y="581" width="0.0801%" height="15" fill="rgb(231,199,10)" fg:x="1180" fg:w="1"/><text x="94.7256%" y="591.50"></text></g><g><title>engine::session::state::State::close (73 samples, 5.84%)</title><rect x="88.9512%" y="725" width="5.8447%" height="15" fill="rgb(215,18,11)" fg:x="1111" fg:w="73"/><text x="89.2012%" y="735.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (73 samples, 5.84%)</title><rect x="88.9512%" y="709" width="5.8447%" height="15" fill="rgb(241,65,24)" fg:x="1111" fg:w="73"/><text x="89.2012%" y="719.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (72 samples, 5.76%)</title><rect x="89.0312%" y="693" width="5.7646%" height="15" fill="rgb(251,192,38)" fg:x="1112" fg:w="72"/><text x="89.2812%" y="703.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (72 samples, 5.76%)</title><rect x="89.0312%" y="677" width="5.7646%" height="15" fill="rgb(205,9,35)" fg:x="1112" fg:w="72"/><text x="89.2812%" y="687.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (49 samples, 3.92%)</title><rect x="90.8727%" y="661" width="3.9231%" height="15" fill="rgb(229,225,49)" fg:x="1135" fg:w="49"/><text x="91.1227%" y="671.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (17 samples, 1.36%)</title><rect x="93.4347%" y="645" width="1.3611%" height="15" fill="rgb(207,125,39)" fg:x="1167" fg:w="17"/><text x="93.6847%" y="655.50"></text></g><g><title>serde_json::de::from_trait (17 samples, 1.36%)</title><rect x="93.4347%" y="629" width="1.3611%" height="15" fill="rgb(222,78,19)" fg:x="1167" fg:w="17"/><text x="93.6847%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.36%)</title><rect x="93.4347%" y="613" width="1.3611%" height="15" fill="rgb(248,207,20)" fg:x="1167" fg:w="17"/><text x="93.6847%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.36%)</title><rect x="93.4347%" y="597" width="1.3611%" height="15" fill="rgb(205,103,49)" fg:x="1167" fg:w="17"/><text x="93.6847%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="94.5556%" y="581" width="0.2402%" height="15" fill="rgb(216,42,28)" fg:x="1181" fg:w="3"/><text x="94.8056%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.7158%" y="565" width="0.0801%" height="15" fill="rgb(213,205,53)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="94.7158%" y="549" width="0.0801%" height="15" fill="rgb(239,140,53)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="559.50"></text></g><g><title>engine::session::Session::close (76 samples, 6.08%)</title><rect x="88.7910%" y="741" width="6.0849%" height="15" fill="rgb(248,95,9)" fg:x="1109" fg:w="76"/><text x="89.0410%" y="751.50">engine::..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="94.7958%" y="725" width="0.0801%" height="15" fill="rgb(254,58,47)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.1161%" y="533" width="0.0801%" height="15" fill="rgb(234,227,14)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="95.1161%" y="517" width="0.0801%" height="15" fill="rgb(205,192,45)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="95.1161%" y="501" width="0.0801%" height="15" fill="rgb(253,187,31)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.1161%" y="485" width="0.0801%" height="15" fill="rgb(222,6,32)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1161%" y="469" width="0.0801%" height="15" fill="rgb(249,190,19)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1161%" y="453" width="0.0801%" height="15" fill="rgb(251,28,20)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1161%" y="437" width="0.0801%" height="15" fill="rgb(210,223,40)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1161%" y="421" width="0.0801%" height="15" fill="rgb(216,137,22)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1161%" y="405" width="0.0801%" height="15" fill="rgb(247,39,34)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.1161%" y="389" width="0.0801%" height="15" fill="rgb(239,43,50)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.1161%" y="373" width="0.0801%" height="15" fill="rgb(241,212,9)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.1161%" y="357" width="0.0801%" height="15" fill="rgb(205,8,2)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1161%" y="341" width="0.0801%" height="15" fill="rgb(217,173,54)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1161%" y="325" width="0.0801%" height="15" fill="rgb(208,149,52)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.1161%" y="309" width="0.0801%" height="15" fill="rgb(239,99,40)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.1161%" y="293" width="0.0801%" height="15" fill="rgb(233,214,26)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.1161%" y="277" width="0.0801%" height="15" fill="rgb(231,225,37)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.1161%" y="261" width="0.0801%" height="15" fill="rgb(252,55,35)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1161%" y="245" width="0.0801%" height="15" fill="rgb(239,43,18)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2762%" y="437" width="0.0801%" height="15" fill="rgb(251,125,49)" fg:x="1190" fg:w="1"/><text x="95.5262%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2762%" y="421" width="0.0801%" height="15" fill="rgb(212,83,54)" fg:x="1190" fg:w="1"/><text x="95.5262%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2762%" y="405" width="0.0801%" height="15" fill="rgb(250,75,6)" fg:x="1190" fg:w="1"/><text x="95.5262%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.3563%" y="389" width="0.0801%" height="15" fill="rgb(252,36,40)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.3563%" y="373" width="0.0801%" height="15" fill="rgb(230,91,51)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.3563%" y="357" width="0.0801%" height="15" fill="rgb(212,92,28)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.3563%" y="341" width="0.0801%" height="15" fill="rgb(227,13,22)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="351.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="95.1962%" y="517" width="0.3203%" height="15" fill="rgb(239,204,32)" fg:x="1189" fg:w="4"/><text x="95.4462%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.1962%" y="501" width="0.3203%" height="15" fill="rgb(228,49,41)" fg:x="1189" fg:w="4"/><text x="95.4462%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.1962%" y="485" width="0.3203%" height="15" fill="rgb(206,95,6)" fg:x="1189" fg:w="4"/><text x="95.4462%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.1962%" y="469" width="0.3203%" height="15" fill="rgb(251,20,14)" fg:x="1189" fg:w="4"/><text x="95.4462%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.2762%" y="453" width="0.2402%" height="15" fill="rgb(214,99,28)" fg:x="1190" fg:w="3"/><text x="95.5262%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.3563%" y="437" width="0.1601%" height="15" fill="rgb(239,122,54)" fg:x="1191" fg:w="2"/><text x="95.6063%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.3563%" y="421" width="0.1601%" height="15" fill="rgb(218,217,46)" fg:x="1191" fg:w="2"/><text x="95.6063%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.3563%" y="405" width="0.1601%" height="15" fill="rgb(249,106,28)" fg:x="1191" fg:w="2"/><text x="95.6063%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.4363%" y="389" width="0.0801%" height="15" fill="rgb(250,158,18)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.4363%" y="373" width="0.0801%" height="15" fill="rgb(226,137,29)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4363%" y="357" width="0.0801%" height="15" fill="rgb(210,188,1)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.5965%" y="373" width="0.0801%" height="15" fill="rgb(227,84,42)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.5965%" y="357" width="0.0801%" height="15" fill="rgb(222,147,48)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5965%" y="341" width="0.0801%" height="15" fill="rgb(241,150,43)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5965%" y="325" width="0.0801%" height="15" fill="rgb(206,139,52)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="95.5965%" y="309" width="0.0801%" height="15" fill="rgb(230,63,14)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="95.5965%" y="293" width="0.0801%" height="15" fill="rgb(247,8,20)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.5965%" y="405" width="0.1601%" height="15" fill="rgb(213,115,4)" fg:x="1194" fg:w="2"/><text x="95.8465%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.5965%" y="389" width="0.1601%" height="15" fill="rgb(241,79,49)" fg:x="1194" fg:w="2"/><text x="95.8465%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.6765%" y="373" width="0.0801%" height="15" fill="rgb(222,42,35)" fg:x="1195" fg:w="1"/><text x="95.9265%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.6765%" y="357" width="0.0801%" height="15" fill="rgb(247,59,23)" fg:x="1195" fg:w="1"/><text x="95.9265%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6765%" y="341" width="0.0801%" height="15" fill="rgb(247,93,18)" fg:x="1195" fg:w="1"/><text x="95.9265%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.5965%" y="437" width="0.2402%" height="15" fill="rgb(249,107,47)" fg:x="1194" fg:w="3"/><text x="95.8465%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.5965%" y="421" width="0.2402%" height="15" fill="rgb(219,27,1)" fg:x="1194" fg:w="3"/><text x="95.8465%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="95.7566%" y="405" width="0.0801%" height="15" fill="rgb(217,82,32)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.7566%" y="389" width="0.0801%" height="15" fill="rgb(250,129,47)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.7566%" y="373" width="0.0801%" height="15" fill="rgb(253,88,35)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.7566%" y="357" width="0.0801%" height="15" fill="rgb(245,221,14)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7566%" y="341" width="0.0801%" height="15" fill="rgb(217,119,54)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7566%" y="325" width="0.0801%" height="15" fill="rgb(247,128,31)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7566%" y="309" width="0.0801%" height="15" fill="rgb(211,99,22)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="95.8367%" y="437" width="0.0801%" height="15" fill="rgb(212,20,17)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.8367%" y="421" width="0.0801%" height="15" fill="rgb(209,159,29)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="95.8367%" y="405" width="0.0801%" height="15" fill="rgb(222,177,53)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.88%)</title><rect x="95.1161%" y="581" width="0.8807%" height="15" fill="rgb(234,46,43)" fg:x="1188" fg:w="11"/><text x="95.3661%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.88%)</title><rect x="95.1161%" y="565" width="0.8807%" height="15" fill="rgb(208,108,14)" fg:x="1188" fg:w="11"/><text x="95.3661%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="95.1161%" y="549" width="0.8807%" height="15" fill="rgb(226,78,53)" fg:x="1188" fg:w="11"/><text x="95.3661%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (10 samples, 0.80%)</title><rect x="95.1962%" y="533" width="0.8006%" height="15" fill="rgb(230,20,41)" fg:x="1189" fg:w="10"/><text x="95.4462%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="95.5164%" y="517" width="0.4804%" height="15" fill="rgb(213,195,35)" fg:x="1193" fg:w="6"/><text x="95.7664%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="95.5164%" y="501" width="0.4804%" height="15" fill="rgb(242,62,36)" fg:x="1193" fg:w="6"/><text x="95.7664%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="95.5965%" y="485" width="0.4003%" height="15" fill="rgb(222,210,37)" fg:x="1194" fg:w="5"/><text x="95.8465%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="95.5965%" y="469" width="0.4003%" height="15" fill="rgb(232,107,19)" fg:x="1194" fg:w="5"/><text x="95.8465%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="95.5965%" y="453" width="0.4003%" height="15" fill="rgb(235,85,17)" fg:x="1194" fg:w="5"/><text x="95.8465%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9167%" y="437" width="0.0801%" height="15" fill="rgb(219,195,31)" fg:x="1198" fg:w="1"/><text x="96.1667%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9167%" y="421" width="0.0801%" height="15" fill="rgb(231,183,30)" fg:x="1198" fg:w="1"/><text x="96.1667%" y="431.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (14 samples, 1.12%)</title><rect x="95.1161%" y="645" width="1.1209%" height="15" fill="rgb(212,0,11)" fg:x="1188" fg:w="14"/><text x="95.3661%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (14 samples, 1.12%)</title><rect x="95.1161%" y="629" width="1.1209%" height="15" fill="rgb(249,53,54)" fg:x="1188" fg:w="14"/><text x="95.3661%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.12%)</title><rect x="95.1161%" y="613" width="1.1209%" height="15" fill="rgb(211,118,13)" fg:x="1188" fg:w="14"/><text x="95.3661%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.12%)</title><rect x="95.1161%" y="597" width="1.1209%" height="15" fill="rgb(237,42,9)" fg:x="1188" fg:w="14"/><text x="95.3661%" y="607.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="95.9968%" y="581" width="0.2402%" height="15" fill="rgb(227,68,32)" fg:x="1199" fg:w="3"/><text x="96.2468%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1569%" y="565" width="0.0801%" height="15" fill="rgb(238,10,7)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1569%" y="549" width="0.0801%" height="15" fill="rgb(224,42,12)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="96.4772%" y="469" width="0.0801%" height="15" fill="rgb(252,190,5)" fg:x="1205" fg:w="1"/><text x="96.7272%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4772%" y="453" width="0.0801%" height="15" fill="rgb(220,214,39)" fg:x="1205" fg:w="1"/><text x="96.7272%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.5572%" y="421" width="0.0801%" height="15" fill="rgb(247,98,4)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.5572%" y="405" width="0.0801%" height="15" fill="rgb(211,60,12)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.5572%" y="389" width="0.0801%" height="15" fill="rgb(224,42,10)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.5572%" y="373" width="0.0801%" height="15" fill="rgb(217,167,4)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.5572%" y="357" width="0.0801%" height="15" fill="rgb(253,18,17)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.5572%" y="341" width="0.0801%" height="15" fill="rgb(249,186,44)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.5572%" y="325" width="0.0801%" height="15" fill="rgb(254,124,54)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.5572%" y="309" width="0.0801%" height="15" fill="rgb(220,124,39)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.5572%" y="293" width="0.0801%" height="15" fill="rgb(225,96,46)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.5572%" y="277" width="0.0801%" height="15" fill="rgb(221,106,12)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.5572%" y="261" width="0.0801%" height="15" fill="rgb(227,133,23)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.5572%" y="245" width="0.0801%" height="15" fill="rgb(216,44,52)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="96.5572%" y="229" width="0.0801%" height="15" fill="rgb(239,149,7)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="96.5572%" y="213" width="0.0801%" height="15" fill="rgb(211,157,31)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6373%" y="245" width="0.0801%" height="15" fill="rgb(206,215,22)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="96.5572%" y="453" width="0.2402%" height="15" fill="rgb(208,113,15)" fg:x="1206" fg:w="3"/><text x="96.8072%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="96.5572%" y="437" width="0.2402%" height="15" fill="rgb(207,189,15)" fg:x="1206" fg:w="3"/><text x="96.8072%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.6373%" y="421" width="0.1601%" height="15" fill="rgb(231,115,4)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.6373%" y="405" width="0.1601%" height="15" fill="rgb(253,117,2)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="96.6373%" y="389" width="0.1601%" height="15" fill="rgb(248,48,24)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="96.6373%" y="373" width="0.1601%" height="15" fill="rgb(241,28,46)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="96.6373%" y="357" width="0.1601%" height="15" fill="rgb(216,165,52)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="96.6373%" y="341" width="0.1601%" height="15" fill="rgb(220,222,34)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="96.6373%" y="325" width="0.1601%" height="15" fill="rgb(247,222,49)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="96.6373%" y="309" width="0.1601%" height="15" fill="rgb(240,10,31)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="96.6373%" y="293" width="0.1601%" height="15" fill="rgb(221,199,35)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="96.6373%" y="277" width="0.1601%" height="15" fill="rgb(230,223,11)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="96.6373%" y="261" width="0.1601%" height="15" fill="rgb(218,82,45)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="271.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="96.7174%" y="245" width="0.0801%" height="15" fill="rgb(233,213,33)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="255.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="96.7174%" y="229" width="0.0801%" height="15" fill="rgb(210,143,52)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8775%" y="389" width="0.0801%" height="15" fill="rgb(206,95,4)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (8 samples, 0.64%)</title><rect x="96.3971%" y="485" width="0.6405%" height="15" fill="rgb(246,164,46)" fg:x="1204" fg:w="8"/><text x="96.6471%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="96.5572%" y="469" width="0.4804%" height="15" fill="rgb(213,210,47)" fg:x="1206" fg:w="6"/><text x="96.8072%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.7974%" y="453" width="0.2402%" height="15" fill="rgb(210,12,38)" fg:x="1209" fg:w="3"/><text x="97.0474%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.7974%" y="437" width="0.2402%" height="15" fill="rgb(252,192,54)" fg:x="1209" fg:w="3"/><text x="97.0474%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.8775%" y="421" width="0.1601%" height="15" fill="rgb(242,92,6)" fg:x="1210" fg:w="2"/><text x="97.1275%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.8775%" y="405" width="0.1601%" height="15" fill="rgb(253,154,15)" fg:x="1210" fg:w="2"/><text x="97.1275%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.9576%" y="389" width="0.0801%" height="15" fill="rgb(209,20,43)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9576%" y="373" width="0.0801%" height="15" fill="rgb(232,28,49)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="97.0376%" y="469" width="0.0801%" height="15" fill="rgb(248,131,53)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.0376%" y="453" width="0.0801%" height="15" fill="rgb(214,16,30)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.0376%" y="437" width="0.0801%" height="15" fill="rgb(245,16,0)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="447.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (10 samples, 0.80%)</title><rect x="96.3971%" y="501" width="0.8006%" height="15" fill="rgb(245,17,35)" fg:x="1204" fg:w="10"/><text x="96.6471%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="97.0376%" y="485" width="0.1601%" height="15" fill="rgb(249,27,53)" fg:x="1212" fg:w="2"/><text x="97.2876%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.1177%" y="469" width="0.0801%" height="15" fill="rgb(214,73,24)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1177%" y="453" width="0.0801%" height="15" fill="rgb(223,84,37)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1177%" y="437" width="0.0801%" height="15" fill="rgb(210,109,28)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1177%" y="421" width="0.0801%" height="15" fill="rgb(208,186,6)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1177%" y="405" width="0.0801%" height="15" fill="rgb(235,201,30)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1177%" y="389" width="0.0801%" height="15" fill="rgb(216,198,48)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.1177%" y="373" width="0.0801%" height="15" fill="rgb(254,186,25)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.1177%" y="357" width="0.0801%" height="15" fill="rgb(227,87,5)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.1177%" y="341" width="0.0801%" height="15" fill="rgb(236,205,25)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1177%" y="325" width="0.0801%" height="15" fill="rgb(229,99,32)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1177%" y="309" width="0.0801%" height="15" fill="rgb(231,177,31)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.1177%" y="293" width="0.0801%" height="15" fill="rgb(246,15,2)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.1177%" y="277" width="0.0801%" height="15" fill="rgb(207,39,15)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.1177%" y="261" width="0.0801%" height="15" fill="rgb(207,44,9)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.1177%" y="245" width="0.0801%" height="15" fill="rgb(225,224,33)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1177%" y="229" width="0.0801%" height="15" fill="rgb(252,151,3)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="97.1978%" y="501" width="0.0801%" height="15" fill="rgb(211,140,13)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="97.1978%" y="485" width="0.0801%" height="15" fill="rgb(239,225,17)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.3579%" y="325" width="0.1601%" height="15" fill="rgb(223,170,52)" fg:x="1216" fg:w="2"/><text x="97.6079%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.4380%" y="309" width="0.0801%" height="15" fill="rgb(212,64,21)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4380%" y="293" width="0.0801%" height="15" fill="rgb(236,126,48)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4380%" y="277" width="0.0801%" height="15" fill="rgb(209,135,11)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.4380%" y="261" width="0.0801%" height="15" fill="rgb(228,126,40)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4380%" y="245" width="0.0801%" height="15" fill="rgb(205,196,36)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4380%" y="229" width="0.0801%" height="15" fill="rgb(243,160,33)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4380%" y="213" width="0.0801%" height="15" fill="rgb(210,84,20)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="97.3579%" y="357" width="0.2402%" height="15" fill="rgb(228,213,30)" fg:x="1216" fg:w="3"/><text x="97.6079%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="97.3579%" y="341" width="0.2402%" height="15" fill="rgb(252,33,45)" fg:x="1216" fg:w="3"/><text x="97.6079%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.5180%" y="325" width="0.0801%" height="15" fill="rgb(254,227,20)" fg:x="1218" fg:w="1"/><text x="97.7680%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.5180%" y="309" width="0.0801%" height="15" fill="rgb(228,192,2)" fg:x="1218" fg:w="1"/><text x="97.7680%" y="319.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="97.5981%" y="341" width="0.1601%" height="15" fill="rgb(233,32,8)" fg:x="1219" fg:w="2"/><text x="97.8481%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.5981%" y="325" width="0.1601%" height="15" fill="rgb(220,146,47)" fg:x="1219" fg:w="2"/><text x="97.8481%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.5981%" y="309" width="0.1601%" height="15" fill="rgb(246,194,1)" fg:x="1219" fg:w="2"/><text x="97.8481%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.5981%" y="293" width="0.1601%" height="15" fill="rgb(218,203,9)" fg:x="1219" fg:w="2"/><text x="97.8481%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.5981%" y="277" width="0.1601%" height="15" fill="rgb(237,97,14)" fg:x="1219" fg:w="2"/><text x="97.8481%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.5981%" y="261" width="0.1601%" height="15" fill="rgb(239,76,15)" fg:x="1219" fg:w="2"/><text x="97.8481%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6781%" y="245" width="0.0801%" height="15" fill="rgb(222,53,45)" fg:x="1220" fg:w="1"/><text x="97.9281%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.7582%" y="197" width="0.0801%" height="15" fill="rgb(237,88,5)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.8383%" y="165" width="0.0801%" height="15" fill="rgb(218,223,35)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.8383%" y="149" width="0.0801%" height="15" fill="rgb(243,229,38)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.8383%" y="133" width="0.0801%" height="15" fill="rgb(240,75,41)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8383%" y="117" width="0.0801%" height="15" fill="rgb(209,110,37)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="97.7582%" y="229" width="0.3203%" height="15" fill="rgb(221,130,46)" fg:x="1221" fg:w="4"/><text x="98.0082%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.7582%" y="213" width="0.3203%" height="15" fill="rgb(237,160,20)" fg:x="1221" fg:w="4"/><text x="98.0082%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="97.8383%" y="197" width="0.2402%" height="15" fill="rgb(234,126,24)" fg:x="1222" fg:w="3"/><text x="98.0883%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.8383%" y="181" width="0.2402%" height="15" fill="rgb(207,177,9)" fg:x="1222" fg:w="3"/><text x="98.0883%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.9183%" y="165" width="0.1601%" height="15" fill="rgb(231,191,33)" fg:x="1223" fg:w="2"/><text x="98.1683%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="98.0785%" y="229" width="0.0801%" height="15" fill="rgb(207,42,1)" fg:x="1225" fg:w="1"/><text x="98.3285%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0785%" y="213" width="0.0801%" height="15" fill="rgb(218,34,50)" fg:x="1225" fg:w="1"/><text x="98.3285%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="97.7582%" y="261" width="0.4804%" height="15" fill="rgb(254,126,39)" fg:x="1221" fg:w="6"/><text x="98.0082%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="97.7582%" y="245" width="0.4804%" height="15" fill="rgb(251,17,26)" fg:x="1221" fg:w="6"/><text x="98.0082%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.1585%" y="229" width="0.0801%" height="15" fill="rgb(252,215,34)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.1585%" y="213" width="0.0801%" height="15" fill="rgb(217,120,44)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.1585%" y="197" width="0.0801%" height="15" fill="rgb(211,31,11)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1585%" y="181" width="0.0801%" height="15" fill="rgb(222,69,51)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (9 samples, 0.72%)</title><rect x="97.5981%" y="357" width="0.7206%" height="15" fill="rgb(215,229,42)" fg:x="1219" fg:w="9"/><text x="97.8481%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="97.7582%" y="341" width="0.5604%" height="15" fill="rgb(212,102,15)" fg:x="1221" fg:w="7"/><text x="98.0082%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="97.7582%" y="325" width="0.5604%" height="15" fill="rgb(205,179,41)" fg:x="1221" fg:w="7"/><text x="98.0082%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="97.7582%" y="309" width="0.5604%" height="15" fill="rgb(219,148,46)" fg:x="1221" fg:w="7"/><text x="98.0082%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="97.7582%" y="293" width="0.5604%" height="15" fill="rgb(243,40,19)" fg:x="1221" fg:w="7"/><text x="98.0082%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="97.7582%" y="277" width="0.5604%" height="15" fill="rgb(208,206,34)" fg:x="1221" fg:w="7"/><text x="98.0082%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2386%" y="261" width="0.0801%" height="15" fill="rgb(244,184,38)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2386%" y="245" width="0.0801%" height="15" fill="rgb(244,151,47)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.2386%" y="229" width="0.0801%" height="15" fill="rgb(236,134,42)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="239.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="98.2386%" y="213" width="0.0801%" height="15" fill="rgb(233,93,22)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="98.2386%" y="197" width="0.0801%" height="15" fill="rgb(211,202,10)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2386%" y="181" width="0.0801%" height="15" fill="rgb(240,63,8)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2386%" y="165" width="0.0801%" height="15" fill="rgb(214,9,4)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.3187%" y="357" width="0.0801%" height="15" fill="rgb(243,66,45)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.3187%" y="341" width="0.0801%" height="15" fill="rgb(220,50,42)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3187%" y="325" width="0.0801%" height="15" fill="rgb(220,134,27)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3187%" y="309" width="0.0801%" height="15" fill="rgb(246,151,50)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.3187%" y="293" width="0.0801%" height="15" fill="rgb(238,216,27)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3187%" y="277" width="0.0801%" height="15" fill="rgb(250,92,11)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3187%" y="261" width="0.0801%" height="15" fill="rgb(248,183,6)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3187%" y="245" width="0.0801%" height="15" fill="rgb(211,204,50)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.3187%" y="229" width="0.0801%" height="15" fill="rgb(252,55,47)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.3187%" y="213" width="0.0801%" height="15" fill="rgb(240,198,32)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (16 samples, 1.28%)</title><rect x="97.2778%" y="469" width="1.2810%" height="15" fill="rgb(224,203,19)" fg:x="1215" fg:w="16"/><text x="97.5278%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (16 samples, 1.28%)</title><rect x="97.2778%" y="453" width="1.2810%" height="15" fill="rgb(205,27,16)" fg:x="1215" fg:w="16"/><text x="97.5278%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.28%)</title><rect x="97.2778%" y="437" width="1.2810%" height="15" fill="rgb(224,226,17)" fg:x="1215" fg:w="16"/><text x="97.5278%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 1.28%)</title><rect x="97.2778%" y="421" width="1.2810%" height="15" fill="rgb(205,216,54)" fg:x="1215" fg:w="16"/><text x="97.5278%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (16 samples, 1.28%)</title><rect x="97.2778%" y="405" width="1.2810%" height="15" fill="rgb(248,168,46)" fg:x="1215" fg:w="16"/><text x="97.5278%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.28%)</title><rect x="97.2778%" y="389" width="1.2810%" height="15" fill="rgb(226,111,45)" fg:x="1215" fg:w="16"/><text x="97.5278%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="97.2778%" y="373" width="1.2810%" height="15" fill="rgb(231,15,9)" fg:x="1215" fg:w="16"/><text x="97.5278%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="98.3987%" y="357" width="0.1601%" height="15" fill="rgb(243,168,3)" fg:x="1229" fg:w="2"/><text x="98.6487%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.3987%" y="341" width="0.1601%" height="15" fill="rgb(221,220,54)" fg:x="1229" fg:w="2"/><text x="98.6487%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.3987%" y="325" width="0.1601%" height="15" fill="rgb(232,174,38)" fg:x="1229" fg:w="2"/><text x="98.6487%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="98.3987%" y="309" width="0.1601%" height="15" fill="rgb(205,14,38)" fg:x="1229" fg:w="2"/><text x="98.6487%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.3987%" y="293" width="0.1601%" height="15" fill="rgb(234,89,19)" fg:x="1229" fg:w="2"/><text x="98.6487%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.5588%" y="437" width="0.0801%" height="15" fill="rgb(216,68,51)" fg:x="1231" fg:w="1"/><text x="98.8088%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.5588%" y="421" width="0.0801%" height="15" fill="rgb(213,49,2)" fg:x="1231" fg:w="1"/><text x="98.8088%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="98.6389%" y="437" width="0.0801%" height="15" fill="rgb(242,146,30)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="98.6389%" y="421" width="0.0801%" height="15" fill="rgb(224,188,11)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="98.6389%" y="405" width="0.0801%" height="15" fill="rgb(213,159,11)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6389%" y="389" width="0.0801%" height="15" fill="rgb(229,13,31)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6389%" y="373" width="0.0801%" height="15" fill="rgb(209,103,11)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (48 samples, 3.84%)</title><rect x="94.9560%" y="709" width="3.8431%" height="15" fill="rgb(206,3,4)" fg:x="1186" fg:w="48"/><text x="95.2060%" y="719.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::apply_middleware (48 samples, 3.84%)</title><rect x="94.9560%" y="693" width="3.8431%" height="15" fill="rgb(252,10,49)" fg:x="1186" fg:w="48"/><text x="95.2060%" y="703.50">kern..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (48 samples, 3.84%)</title><rect x="94.9560%" y="677" width="3.8431%" height="15" fill="rgb(217,160,32)" fg:x="1186" fg:w="48"/><text x="95.2060%" y="687.50">kern..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (47 samples, 3.76%)</title><rect x="95.0360%" y="661" width="3.7630%" height="15" fill="rgb(249,196,0)" fg:x="1187" fg:w="47"/><text x="95.2860%" y="671.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (32 samples, 2.56%)</title><rect x="96.2370%" y="645" width="2.5620%" height="15" fill="rgb(213,17,48)" fg:x="1202" fg:w="32"/><text x="96.4870%" y="655.50">ke..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (32 samples, 2.56%)</title><rect x="96.2370%" y="629" width="2.5620%" height="15" fill="rgb(206,42,46)" fg:x="1202" fg:w="32"/><text x="96.4870%" y="639.50">&lt;p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (32 samples, 2.56%)</title><rect x="96.2370%" y="613" width="2.5620%" height="15" fill="rgb(212,105,24)" fg:x="1202" fg:w="32"/><text x="96.4870%" y="623.50">ke..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (32 samples, 2.56%)</title><rect x="96.2370%" y="597" width="2.5620%" height="15" fill="rgb(243,216,30)" fg:x="1202" fg:w="32"/><text x="96.4870%" y="607.50">co..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (32 samples, 2.56%)</title><rect x="96.2370%" y="581" width="2.5620%" height="15" fill="rgb(207,121,3)" fg:x="1202" fg:w="32"/><text x="96.4870%" y="591.50">ke..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (32 samples, 2.56%)</title><rect x="96.2370%" y="565" width="2.5620%" height="15" fill="rgb(249,78,0)" fg:x="1202" fg:w="32"/><text x="96.4870%" y="575.50">co..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (32 samples, 2.56%)</title><rect x="96.2370%" y="549" width="2.5620%" height="15" fill="rgb(244,151,32)" fg:x="1202" fg:w="32"/><text x="96.4870%" y="559.50">&lt;e..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (32 samples, 2.56%)</title><rect x="96.2370%" y="533" width="2.5620%" height="15" fill="rgb(228,63,25)" fg:x="1202" fg:w="32"/><text x="96.4870%" y="543.50">&lt;p..</text></g><g><title>plugins_core::looking::model::new_area_observation (32 samples, 2.56%)</title><rect x="96.2370%" y="517" width="2.5620%" height="15" fill="rgb(231,158,23)" fg:x="1202" fg:w="32"/><text x="96.4870%" y="527.50">pl..</text></g><g><title>kernel::model::entry::Entry::scope (19 samples, 1.52%)</title><rect x="97.2778%" y="501" width="1.5212%" height="15" fill="rgb(248,107,23)" fg:x="1215" fg:w="19"/><text x="97.5278%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (19 samples, 1.52%)</title><rect x="97.2778%" y="485" width="1.5212%" height="15" fill="rgb(215,168,21)" fg:x="1215" fg:w="19"/><text x="97.5278%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.5588%" y="469" width="0.2402%" height="15" fill="rgb(227,83,22)" fg:x="1231" fg:w="3"/><text x="98.8088%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.5588%" y="453" width="0.2402%" height="15" fill="rgb(217,118,43)" fg:x="1231" fg:w="3"/><text x="98.8088%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.7190%" y="437" width="0.0801%" height="15" fill="rgb(229,220,41)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7190%" y="421" width="0.0801%" height="15" fill="rgb(254,146,46)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="98.7190%" y="405" width="0.0801%" height="15" fill="rgb(233,208,31)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="98.7190%" y="389" width="0.0801%" height="15" fill="rgb(222,162,7)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.7190%" y="373" width="0.0801%" height="15" fill="rgb(230,117,45)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.7990%" y="597" width="0.0801%" height="15" fill="rgb(239,163,6)" fg:x="1234" fg:w="1"/><text x="99.0490%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.7990%" y="581" width="0.0801%" height="15" fill="rgb(246,130,17)" fg:x="1234" fg:w="1"/><text x="99.0490%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8791%" y="597" width="0.0801%" height="15" fill="rgb(216,84,5)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9592%" y="565" width="0.0801%" height="15" fill="rgb(230,200,21)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="575.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="98.7990%" y="645" width="0.3203%" height="15" fill="rgb(224,2,8)" fg:x="1234" fg:w="4"/><text x="99.0490%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.7990%" y="629" width="0.3203%" height="15" fill="rgb(238,178,10)" fg:x="1234" fg:w="4"/><text x="99.0490%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.7990%" y="613" width="0.3203%" height="15" fill="rgb(242,153,24)" fg:x="1234" fg:w="4"/><text x="99.0490%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.9592%" y="597" width="0.1601%" height="15" fill="rgb(242,32,48)" fg:x="1236" fg:w="2"/><text x="99.2092%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.9592%" y="581" width="0.1601%" height="15" fill="rgb(227,36,0)" fg:x="1236" fg:w="2"/><text x="99.2092%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0392%" y="565" width="0.0801%" height="15" fill="rgb(251,33,35)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0392%" y="549" width="0.0801%" height="15" fill="rgb(232,168,51)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.1994%" y="581" width="0.1601%" height="15" fill="rgb(228,56,10)" fg:x="1239" fg:w="2"/><text x="99.4494%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="99.1994%" y="565" width="0.1601%" height="15" fill="rgb(231,10,26)" fg:x="1239" fg:w="2"/><text x="99.4494%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="99.1994%" y="549" width="0.1601%" height="15" fill="rgb(226,202,12)" fg:x="1239" fg:w="2"/><text x="99.4494%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3595%" y="565" width="0.0801%" height="15" fill="rgb(251,49,21)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3595%" y="549" width="0.0801%" height="15" fill="rgb(206,228,28)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3595%" y="533" width="0.0801%" height="15" fill="rgb(205,198,31)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3595%" y="517" width="0.0801%" height="15" fill="rgb(213,69,1)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3595%" y="501" width="0.0801%" height="15" fill="rgb(209,177,9)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3595%" y="485" width="0.0801%" height="15" fill="rgb(227,119,30)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (9 samples, 0.72%)</title><rect x="98.7990%" y="661" width="0.7206%" height="15" fill="rgb(234,106,41)" fg:x="1234" fg:w="9"/><text x="99.0490%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="99.1193%" y="645" width="0.4003%" height="15" fill="rgb(244,103,47)" fg:x="1238" fg:w="5"/><text x="99.3693%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.1994%" y="629" width="0.3203%" height="15" fill="rgb(212,211,25)" fg:x="1239" fg:w="4"/><text x="99.4494%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="99.1994%" y="613" width="0.3203%" height="15" fill="rgb(208,63,53)" fg:x="1239" fg:w="4"/><text x="99.4494%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.1994%" y="597" width="0.3203%" height="15" fill="rgb(213,176,21)" fg:x="1239" fg:w="4"/><text x="99.4494%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.3595%" y="581" width="0.1601%" height="15" fill="rgb(243,124,12)" fg:x="1241" fg:w="2"/><text x="99.6095%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4396%" y="565" width="0.0801%" height="15" fill="rgb(239,2,35)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4396%" y="549" width="0.0801%" height="15" fill="rgb(253,169,22)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4396%" y="533" width="0.0801%" height="15" fill="rgb(254,51,12)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4396%" y="517" width="0.0801%" height="15" fill="rgb(244,17,47)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4396%" y="501" width="0.0801%" height="15" fill="rgb(251,45,46)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4396%" y="485" width="0.0801%" height="15" fill="rgb(223,87,43)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5196%" y="629" width="0.0801%" height="15" fill="rgb(230,132,31)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.5196%" y="613" width="0.0801%" height="15" fill="rgb(206,99,1)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.5196%" y="597" width="0.0801%" height="15" fill="rgb(227,110,25)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.5196%" y="581" width="0.0801%" height="15" fill="rgb(217,182,7)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.5196%" y="565" width="0.0801%" height="15" fill="rgb(250,176,4)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.5196%" y="549" width="0.0801%" height="15" fill="rgb(244,98,30)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.5196%" y="533" width="0.0801%" height="15" fill="rgb(228,150,42)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.5196%" y="517" width="0.0801%" height="15" fill="rgb(231,91,46)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.5196%" y="501" width="0.0801%" height="15" fill="rgb(252,161,32)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.5196%" y="485" width="0.0801%" height="15" fill="rgb(236,69,41)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.5196%" y="469" width="0.0801%" height="15" fill="rgb(212,160,3)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.5196%" y="453" width="0.0801%" height="15" fill="rgb(216,5,50)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5196%" y="437" width="0.0801%" height="15" fill="rgb(241,138,25)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.88%)</title><rect x="98.7990%" y="693" width="0.8807%" height="15" fill="rgb(239,42,18)" fg:x="1234" fg:w="11"/><text x="99.0490%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="98.7990%" y="677" width="0.8807%" height="15" fill="rgb(239,40,7)" fg:x="1234" fg:w="11"/><text x="99.0490%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.5196%" y="661" width="0.1601%" height="15" fill="rgb(239,11,31)" fg:x="1243" fg:w="2"/><text x="99.7696%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.5196%" y="645" width="0.1601%" height="15" fill="rgb(224,77,40)" fg:x="1243" fg:w="2"/><text x="99.7696%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5997%" y="629" width="0.0801%" height="15" fill="rgb(226,15,5)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5997%" y="613" width="0.0801%" height="15" fill="rgb(254,188,5)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.5997%" y="597" width="0.0801%" height="15" fill="rgb(241,148,52)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5997%" y="581" width="0.0801%" height="15" fill="rgb(251,48,36)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5997%" y="565" width="0.0801%" height="15" fill="rgb(243,83,13)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.5997%" y="549" width="0.0801%" height="15" fill="rgb(210,105,0)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.5997%" y="533" width="0.0801%" height="15" fill="rgb(239,60,36)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (12 samples, 0.96%)</title><rect x="98.7990%" y="709" width="0.9608%" height="15" fill="rgb(210,20,0)" fg:x="1234" fg:w="12"/><text x="99.0490%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.6797%" y="693" width="0.0801%" height="15" fill="rgb(244,26,53)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.6797%" y="677" width="0.0801%" height="15" fill="rgb(240,100,49)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.6797%" y="661" width="0.0801%" height="15" fill="rgb(250,46,45)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.6797%" y="645" width="0.0801%" height="15" fill="rgb(220,181,29)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.6797%" y="629" width="0.0801%" height="15" fill="rgb(213,137,33)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.6797%" y="613" width="0.0801%" height="15" fill="rgb(213,27,48)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.6797%" y="597" width="0.0801%" height="15" fill="rgb(245,180,39)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.6797%" y="581" width="0.0801%" height="15" fill="rgb(212,158,42)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.6797%" y="565" width="0.0801%" height="15" fill="rgb(228,193,18)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.6797%" y="549" width="0.0801%" height="15" fill="rgb(245,172,29)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.6797%" y="533" width="0.0801%" height="15" fill="rgb(207,98,24)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.6797%" y="517" width="0.0801%" height="15" fill="rgb(249,92,26)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.6797%" y="501" width="0.0801%" height="15" fill="rgb(217,176,26)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.6797%" y="485" width="0.0801%" height="15" fill="rgb(221,8,39)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.6797%" y="469" width="0.0801%" height="15" fill="rgb(208,90,18)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.6797%" y="453" width="0.0801%" height="15" fill="rgb(207,202,30)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.6797%" y="437" width="0.0801%" height="15" fill="rgb(231,124,22)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.6797%" y="421" width="0.0801%" height="15" fill="rgb(206,15,5)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.6797%" y="405" width="0.0801%" height="15" fill="rgb(239,16,52)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.6797%" y="389" width="0.0801%" height="15" fill="rgb(245,213,29)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.6797%" y="373" width="0.0801%" height="15" fill="rgb(213,203,36)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.6797%" y="357" width="0.0801%" height="15" fill="rgb(209,55,18)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.6797%" y="341" width="0.0801%" height="15" fill="rgb(207,133,49)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.6797%" y="325" width="0.0801%" height="15" fill="rgb(240,33,46)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.6797%" y="309" width="0.0801%" height="15" fill="rgb(212,35,2)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.6797%" y="293" width="0.0801%" height="15" fill="rgb(231,119,28)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.6797%" y="277" width="0.0801%" height="15" fill="rgb(252,178,7)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.6797%" y="261" width="0.0801%" height="15" fill="rgb(251,91,4)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.6797%" y="245" width="0.0801%" height="15" fill="rgb(233,122,19)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.6797%" y="229" width="0.0801%" height="15" fill="rgb(231,208,46)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.6797%" y="213" width="0.0801%" height="15" fill="rgb(243,15,41)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.6797%" y="197" width="0.0801%" height="15" fill="rgb(210,32,43)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (2 samples, 0.16%)</title><rect x="99.7598%" y="709" width="0.1601%" height="15" fill="rgb(222,177,15)" fg:x="1246" fg:w="2"/><text x="100.0098%" y="719.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="99.7598%" y="693" width="0.1601%" height="15" fill="rgb(244,121,34)" fg:x="1246" fg:w="2"/><text x="100.0098%" y="703.50"></text></g><g><title>all (1,249 samples, 100%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(234,138,4)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1103.50"></text></g><g><title>simple-1389ea1c (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(240,97,48)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1087.50">simple-1389ea1c</text></g><g><title>_start (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(237,65,54)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1071.50">_start</text></g><g><title>__libc_start_main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(214,25,24)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1055.50">__libc_start_main</text></g><g><title>main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(213,5,3)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1039.50">main</text></g><g><title>std::rt::lang_start_internal (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(219,81,29)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(220,43,48)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(239,157,2)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(213,104,43)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="975.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(237,84,9)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="959.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(252,6,33)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(251,172,22)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(244,91,53)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="911.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,249 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(219,29,30)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="895.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(213,3,15)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="879.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,249 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(208,25,28)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(252,144,25)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="847.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,249 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(226,220,25)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="831.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,249 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(212,131,28)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="815.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (285 samples, 22.82%)</title><rect x="77.1817%" y="789" width="22.8183%" height="15" fill="rgb(219,143,52)" fg:x="964" fg:w="285"/><text x="77.4317%" y="799.50">&lt;criterion::routine::Function&lt;M,F,T&gt;..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (285 samples, 22.82%)</title><rect x="77.1817%" y="773" width="22.8183%" height="15" fill="rgb(215,56,7)" fg:x="964" fg:w="285"/><text x="77.4317%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (285 samples, 22.82%)</title><rect x="77.1817%" y="757" width="22.8183%" height="15" fill="rgb(239,59,51)" fg:x="964" fg:w="285"/><text x="77.4317%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (64 samples, 5.12%)</title><rect x="94.8759%" y="741" width="5.1241%" height="15" fill="rgb(209,215,4)" fg:x="1185" fg:w="64"/><text x="95.1259%" y="751.50">engine..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (64 samples, 5.12%)</title><rect x="94.8759%" y="725" width="5.1241%" height="15" fill="rgb(221,118,39)" fg:x="1185" fg:w="64"/><text x="95.1259%" y="735.50">engine..</text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.9199%" y="709" width="0.0801%" height="15" fill="rgb(236,6,44)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.9199%" y="693" width="0.0801%" height="15" fill="rgb(216,122,9)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.9199%" y="677" width="0.0801%" height="15" fill="rgb(244,134,42)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.9199%" y="661" width="0.0801%" height="15" fill="rgb(209,189,35)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="671.50"></text></g></svg></svg>