<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1206" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1189.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1189.00"> </text><svg id="frames" x="10" width="1180" total_samples="1251"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0000%" y="789" width="0.0799%" height="15" fill="rgb(217,3,25)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.0799%" y="773" width="0.1599%" height="15" fill="rgb(239,24,14)" fg:x="1" fg:w="2"/><text x="0.3299%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="0.0799%" y="789" width="0.2398%" height="15" fill="rgb(244,16,53)" fg:x="1" fg:w="3"/><text x="0.3299%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.2398%" y="773" width="0.0799%" height="15" fill="rgb(208,175,44)" fg:x="3" fg:w="1"/><text x="0.4898%" y="783.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.3197%" y="757" width="0.2398%" height="15" fill="rgb(252,18,48)" fg:x="4" fg:w="3"/><text x="0.5697%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6395%" y="693" width="0.0799%" height="15" fill="rgb(234,199,32)" fg:x="8" fg:w="1"/><text x="0.8895%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="0.7194%" y="693" width="0.3997%" height="15" fill="rgb(225,77,54)" fg:x="9" fg:w="5"/><text x="0.9694%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.9592%" y="677" width="0.1599%" height="15" fill="rgb(225,42,25)" fg:x="12" fg:w="2"/><text x="1.2092%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.2790%" y="677" width="0.0799%" height="15" fill="rgb(242,227,46)" fg:x="16" fg:w="1"/><text x="1.5290%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3589%" y="677" width="0.0799%" height="15" fill="rgb(246,197,35)" fg:x="17" fg:w="1"/><text x="1.6089%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.4388%" y="677" width="0.1599%" height="15" fill="rgb(215,159,26)" fg:x="18" fg:w="2"/><text x="1.6888%" y="687.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="1.6787%" y="661" width="0.3197%" height="15" fill="rgb(212,194,50)" fg:x="21" fg:w="4"/><text x="1.9287%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="0.6395%" y="725" width="1.5188%" height="15" fill="rgb(246,132,1)" fg:x="8" fg:w="19"/><text x="0.8895%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="0.6395%" y="709" width="1.5188%" height="15" fill="rgb(217,71,7)" fg:x="8" fg:w="19"/><text x="0.8895%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="1.1191%" y="693" width="1.0392%" height="15" fill="rgb(252,59,32)" fg:x="14" fg:w="13"/><text x="1.3691%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="1.5987%" y="677" width="0.5596%" height="15" fill="rgb(253,204,25)" fg:x="20" fg:w="7"/><text x="1.8487%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.9984%" y="661" width="0.1599%" height="15" fill="rgb(232,21,16)" fg:x="25" fg:w="2"/><text x="2.2484%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0783%" y="645" width="0.0799%" height="15" fill="rgb(248,90,29)" fg:x="26" fg:w="1"/><text x="2.3283%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.68%)</title><rect x="0.5596%" y="741" width="1.6787%" height="15" fill="rgb(249,223,7)" fg:x="7" fg:w="21"/><text x="0.8096%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1583%" y="725" width="0.0799%" height="15" fill="rgb(231,119,42)" fg:x="27" fg:w="1"/><text x="2.4083%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.2382%" y="741" width="0.0799%" height="15" fill="rgb(215,41,35)" fg:x="28" fg:w="1"/><text x="2.4882%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (26 samples, 2.08%)</title><rect x="0.3197%" y="789" width="2.0783%" height="15" fill="rgb(220,44,45)" fg:x="4" fg:w="26"/><text x="0.5697%" y="799.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.08%)</title><rect x="0.3197%" y="773" width="2.0783%" height="15" fill="rgb(253,197,36)" fg:x="4" fg:w="26"/><text x="0.5697%" y="783.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (23 samples, 1.84%)</title><rect x="0.5596%" y="757" width="1.8385%" height="15" fill="rgb(245,225,54)" fg:x="7" fg:w="23"/><text x="0.8096%" y="767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="2.3181%" y="741" width="0.0799%" height="15" fill="rgb(239,94,37)" fg:x="29" fg:w="1"/><text x="2.5681%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3181%" y="725" width="0.0799%" height="15" fill="rgb(242,217,10)" fg:x="29" fg:w="1"/><text x="2.5681%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.48%)</title><rect x="0.0000%" y="805" width="2.4780%" height="15" fill="rgb(250,193,7)" fg:x="0" fg:w="31"/><text x="0.2500%" y="815.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="2.3981%" y="789" width="0.0799%" height="15" fill="rgb(230,104,19)" fg:x="30" fg:w="1"/><text x="2.6481%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3981%" y="773" width="0.0799%" height="15" fill="rgb(230,181,4)" fg:x="30" fg:w="1"/><text x="2.6481%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="2.5580%" y="773" width="0.0799%" height="15" fill="rgb(216,219,49)" fg:x="32" fg:w="1"/><text x="2.8080%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="2.6379%" y="741" width="0.1599%" height="15" fill="rgb(254,144,0)" fg:x="33" fg:w="2"/><text x="2.8879%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.7178%" y="725" width="0.0799%" height="15" fill="rgb(205,209,38)" fg:x="34" fg:w="1"/><text x="2.9678%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.7178%" y="709" width="0.0799%" height="15" fill="rgb(240,21,42)" fg:x="34" fg:w="1"/><text x="2.9678%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="2.8777%" y="709" width="0.1599%" height="15" fill="rgb(241,132,3)" fg:x="36" fg:w="2"/><text x="3.1277%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="2.8777%" y="693" width="0.1599%" height="15" fill="rgb(225,14,2)" fg:x="36" fg:w="2"/><text x="3.1277%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="2.8777%" y="677" width="0.1599%" height="15" fill="rgb(210,141,35)" fg:x="36" fg:w="2"/><text x="3.1277%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="2.8777%" y="661" width="0.1599%" height="15" fill="rgb(251,14,44)" fg:x="36" fg:w="2"/><text x="3.1277%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="2.8777%" y="645" width="0.1599%" height="15" fill="rgb(247,48,18)" fg:x="36" fg:w="2"/><text x="3.1277%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="2.8777%" y="629" width="0.1599%" height="15" fill="rgb(225,0,40)" fg:x="36" fg:w="2"/><text x="3.1277%" y="639.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="2.8777%" y="613" width="0.1599%" height="15" fill="rgb(221,31,33)" fg:x="36" fg:w="2"/><text x="3.1277%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="2.8777%" y="597" width="0.1599%" height="15" fill="rgb(237,42,40)" fg:x="36" fg:w="2"/><text x="3.1277%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="2.8777%" y="581" width="0.1599%" height="15" fill="rgb(233,51,29)" fg:x="36" fg:w="2"/><text x="3.1277%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="2.8777%" y="565" width="0.1599%" height="15" fill="rgb(226,58,20)" fg:x="36" fg:w="2"/><text x="3.1277%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="2.8777%" y="549" width="0.1599%" height="15" fill="rgb(208,98,7)" fg:x="36" fg:w="2"/><text x="3.1277%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="2.8777%" y="533" width="0.1599%" height="15" fill="rgb(228,143,44)" fg:x="36" fg:w="2"/><text x="3.1277%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="2.8777%" y="517" width="0.1599%" height="15" fill="rgb(246,55,38)" fg:x="36" fg:w="2"/><text x="3.1277%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="2.8777%" y="501" width="0.1599%" height="15" fill="rgb(247,87,16)" fg:x="36" fg:w="2"/><text x="3.1277%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="2.8777%" y="485" width="0.1599%" height="15" fill="rgb(234,129,42)" fg:x="36" fg:w="2"/><text x="3.1277%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="2.9576%" y="469" width="0.0799%" height="15" fill="rgb(220,82,16)" fg:x="37" fg:w="1"/><text x="3.2076%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="2.9576%" y="453" width="0.0799%" height="15" fill="rgb(211,88,4)" fg:x="37" fg:w="1"/><text x="3.2076%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="2.9576%" y="437" width="0.0799%" height="15" fill="rgb(248,151,21)" fg:x="37" fg:w="1"/><text x="3.2076%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.9576%" y="421" width="0.0799%" height="15" fill="rgb(238,163,6)" fg:x="37" fg:w="1"/><text x="3.2076%" y="431.50"></text></g><g><title>anyhow::error::&lt;impl core::ops::drop::Drop for anyhow::Error&gt;::drop (1 samples, 0.08%)</title><rect x="3.0376%" y="709" width="0.0799%" height="15" fill="rgb(209,183,11)" fg:x="38" fg:w="1"/><text x="3.2876%" y="719.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="3.1175%" y="693" width="0.1599%" height="15" fill="rgb(219,37,20)" fg:x="39" fg:w="2"/><text x="3.3675%" y="703.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="3.1974%" y="677" width="0.0799%" height="15" fill="rgb(210,158,4)" fg:x="40" fg:w="1"/><text x="3.4474%" y="687.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="3.1974%" y="661" width="0.0799%" height="15" fill="rgb(221,167,53)" fg:x="40" fg:w="1"/><text x="3.4474%" y="671.50"></text></g><g><title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="3.3573%" y="629" width="0.0799%" height="15" fill="rgb(237,151,45)" fg:x="42" fg:w="1"/><text x="3.6073%" y="639.50"></text></g><g><title>libloading::safe::Library::new (16 samples, 1.28%)</title><rect x="3.1175%" y="709" width="1.2790%" height="15" fill="rgb(231,39,3)" fg:x="39" fg:w="16"/><text x="3.3675%" y="719.50"></text></g><g><title>dlopen (14 samples, 1.12%)</title><rect x="3.2774%" y="693" width="1.1191%" height="15" fill="rgb(212,167,28)" fg:x="41" fg:w="14"/><text x="3.5274%" y="703.50"></text></g><g><title>_dl_catch_error (13 samples, 1.04%)</title><rect x="3.3573%" y="677" width="1.0392%" height="15" fill="rgb(232,178,8)" fg:x="42" fg:w="13"/><text x="3.6073%" y="687.50"></text></g><g><title>_dl_catch_exception (13 samples, 1.04%)</title><rect x="3.3573%" y="661" width="1.0392%" height="15" fill="rgb(225,151,20)" fg:x="42" fg:w="13"/><text x="3.6073%" y="671.50"></text></g><g><title>_dl_catch_exception (13 samples, 1.04%)</title><rect x="3.3573%" y="645" width="1.0392%" height="15" fill="rgb(238,3,37)" fg:x="42" fg:w="13"/><text x="3.6073%" y="655.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.96%)</title><rect x="3.4373%" y="629" width="0.9592%" height="15" fill="rgb(251,147,42)" fg:x="43" fg:w="12"/><text x="3.6873%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (20 samples, 1.60%)</title><rect x="2.8777%" y="725" width="1.5987%" height="15" fill="rgb(208,173,10)" fg:x="36" fg:w="20"/><text x="3.1277%" y="735.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="4.3965%" y="709" width="0.0799%" height="15" fill="rgb(246,225,4)" fg:x="55" fg:w="1"/><text x="4.6465%" y="719.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="4.3965%" y="693" width="0.0799%" height="15" fill="rgb(248,102,6)" fg:x="55" fg:w="1"/><text x="4.6465%" y="703.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.3965%" y="677" width="0.0799%" height="15" fill="rgb(232,6,21)" fg:x="55" fg:w="1"/><text x="4.6465%" y="687.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (23 samples, 1.84%)</title><rect x="2.7978%" y="741" width="1.8385%" height="15" fill="rgb(221,179,22)" fg:x="35" fg:w="23"/><text x="3.0478%" y="751.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="4.4764%" y="725" width="0.1599%" height="15" fill="rgb(252,50,20)" fg:x="56" fg:w="2"/><text x="4.7264%" y="735.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="4.4764%" y="709" width="0.1599%" height="15" fill="rgb(222,56,38)" fg:x="56" fg:w="2"/><text x="4.7264%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.6363%" y="725" width="0.0799%" height="15" fill="rgb(206,193,29)" fg:x="58" fg:w="1"/><text x="4.8863%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.6363%" y="709" width="0.0799%" height="15" fill="rgb(239,192,45)" fg:x="58" fg:w="1"/><text x="4.8863%" y="719.50"></text></g><g><title>engine::session::Session::initialize (29 samples, 2.32%)</title><rect x="2.6379%" y="757" width="2.3181%" height="15" fill="rgb(254,18,36)" fg:x="33" fg:w="29"/><text x="2.8879%" y="767.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="4.6363%" y="741" width="0.3197%" height="15" fill="rgb(221,127,11)" fg:x="58" fg:w="4"/><text x="4.8863%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="4.7162%" y="725" width="0.2398%" height="15" fill="rgb(234,146,35)" fg:x="59" fg:w="3"/><text x="4.9662%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="4.7162%" y="709" width="0.2398%" height="15" fill="rgb(254,201,37)" fg:x="59" fg:w="3"/><text x="4.9662%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.7962%" y="693" width="0.1599%" height="15" fill="rgb(211,202,23)" fg:x="60" fg:w="2"/><text x="5.0462%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.8761%" y="677" width="0.0799%" height="15" fill="rgb(237,91,2)" fg:x="61" fg:w="1"/><text x="5.1261%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.8761%" y="661" width="0.0799%" height="15" fill="rgb(226,228,36)" fg:x="61" fg:w="1"/><text x="5.1261%" y="671.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="5.0360%" y="709" width="0.0799%" height="15" fill="rgb(213,63,50)" fg:x="63" fg:w="1"/><text x="5.2860%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="5.0360%" y="693" width="0.0799%" height="15" fill="rgb(235,194,19)" fg:x="63" fg:w="1"/><text x="5.2860%" y="703.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (37 samples, 2.96%)</title><rect x="2.4780%" y="805" width="2.9576%" height="15" fill="rgb(207,204,18)" fg:x="31" fg:w="37"/><text x="2.7280%" y="815.50">&lt;en..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (37 samples, 2.96%)</title><rect x="2.4780%" y="789" width="2.9576%" height="15" fill="rgb(248,8,7)" fg:x="31" fg:w="37"/><text x="2.7280%" y="799.50">eng..</text></g><g><title>engine::session::Session::new (35 samples, 2.80%)</title><rect x="2.6379%" y="773" width="2.7978%" height="15" fill="rgb(223,145,47)" fg:x="33" fg:w="35"/><text x="2.8879%" y="783.50">en..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (6 samples, 0.48%)</title><rect x="4.9560%" y="757" width="0.4796%" height="15" fill="rgb(228,84,11)" fg:x="62" fg:w="6"/><text x="5.2060%" y="767.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="4.9560%" y="741" width="0.4796%" height="15" fill="rgb(218,76,45)" fg:x="62" fg:w="6"/><text x="5.2060%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="4.9560%" y="725" width="0.4796%" height="15" fill="rgb(223,80,15)" fg:x="62" fg:w="6"/><text x="5.2060%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="5.1159%" y="709" width="0.3197%" height="15" fill="rgb(219,218,33)" fg:x="64" fg:w="4"/><text x="5.3659%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="5.1159%" y="693" width="0.3197%" height="15" fill="rgb(208,51,11)" fg:x="64" fg:w="4"/><text x="5.3659%" y="703.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="5.1958%" y="677" width="0.2398%" height="15" fill="rgb(229,165,39)" fg:x="65" fg:w="3"/><text x="5.4458%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.5156%" y="789" width="0.0799%" height="15" fill="rgb(241,100,24)" fg:x="69" fg:w="1"/><text x="5.7656%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.5156%" y="773" width="0.0799%" height="15" fill="rgb(228,14,23)" fg:x="69" fg:w="1"/><text x="5.7656%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.5156%" y="757" width="0.0799%" height="15" fill="rgb(247,116,52)" fg:x="69" fg:w="1"/><text x="5.7656%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.5156%" y="741" width="0.0799%" height="15" fill="rgb(216,149,33)" fg:x="69" fg:w="1"/><text x="5.7656%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.5156%" y="725" width="0.0799%" height="15" fill="rgb(238,142,29)" fg:x="69" fg:w="1"/><text x="5.7656%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.5156%" y="709" width="0.0799%" height="15" fill="rgb(224,83,40)" fg:x="69" fg:w="1"/><text x="5.7656%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="5.5156%" y="693" width="0.0799%" height="15" fill="rgb(234,165,11)" fg:x="69" fg:w="1"/><text x="5.7656%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="5.5156%" y="677" width="0.0799%" height="15" fill="rgb(215,96,23)" fg:x="69" fg:w="1"/><text x="5.7656%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.5955%" y="789" width="0.0799%" height="15" fill="rgb(233,179,26)" fg:x="70" fg:w="1"/><text x="5.8455%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="5.6755%" y="789" width="0.0799%" height="15" fill="rgb(225,129,33)" fg:x="71" fg:w="1"/><text x="5.9255%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="5.7554%" y="789" width="0.0799%" height="15" fill="rgb(237,49,13)" fg:x="72" fg:w="1"/><text x="6.0054%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="5.7554%" y="773" width="0.0799%" height="15" fill="rgb(211,3,31)" fg:x="72" fg:w="1"/><text x="6.0054%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.7554%" y="757" width="0.0799%" height="15" fill="rgb(216,152,19)" fg:x="72" fg:w="1"/><text x="6.0054%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.9153%" y="757" width="0.0799%" height="15" fill="rgb(251,121,35)" fg:x="74" fg:w="1"/><text x="6.1653%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="5.8353%" y="773" width="0.2398%" height="15" fill="rgb(210,217,47)" fg:x="73" fg:w="3"/><text x="6.0853%" y="783.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="5.9952%" y="757" width="0.0799%" height="15" fill="rgb(244,116,22)" fg:x="75" fg:w="1"/><text x="6.2452%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.0751%" y="741" width="0.0799%" height="15" fill="rgb(228,17,21)" fg:x="76" fg:w="1"/><text x="6.3251%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.0751%" y="725" width="0.0799%" height="15" fill="rgb(240,149,34)" fg:x="76" fg:w="1"/><text x="6.3251%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.0751%" y="709" width="0.0799%" height="15" fill="rgb(208,125,47)" fg:x="76" fg:w="1"/><text x="6.3251%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.0751%" y="693" width="0.0799%" height="15" fill="rgb(249,186,39)" fg:x="76" fg:w="1"/><text x="6.3251%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="6.2350%" y="709" width="0.0799%" height="15" fill="rgb(240,220,33)" fg:x="78" fg:w="1"/><text x="6.4850%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.2350%" y="693" width="0.0799%" height="15" fill="rgb(243,110,23)" fg:x="78" fg:w="1"/><text x="6.4850%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.2350%" y="677" width="0.0799%" height="15" fill="rgb(219,163,46)" fg:x="78" fg:w="1"/><text x="6.4850%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.2350%" y="661" width="0.0799%" height="15" fill="rgb(216,126,30)" fg:x="78" fg:w="1"/><text x="6.4850%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.2350%" y="645" width="0.0799%" height="15" fill="rgb(208,139,11)" fg:x="78" fg:w="1"/><text x="6.4850%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.2350%" y="629" width="0.0799%" height="15" fill="rgb(213,118,36)" fg:x="78" fg:w="1"/><text x="6.4850%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="6.2350%" y="613" width="0.0799%" height="15" fill="rgb(226,43,17)" fg:x="78" fg:w="1"/><text x="6.4850%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="6.2350%" y="597" width="0.0799%" height="15" fill="rgb(254,217,4)" fg:x="78" fg:w="1"/><text x="6.4850%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="6.1551%" y="741" width="0.3197%" height="15" fill="rgb(210,134,47)" fg:x="77" fg:w="4"/><text x="6.4051%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="6.1551%" y="725" width="0.3197%" height="15" fill="rgb(237,24,49)" fg:x="77" fg:w="4"/><text x="6.4051%" y="735.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (2 samples, 0.16%)</title><rect x="6.3149%" y="709" width="0.1599%" height="15" fill="rgb(251,39,46)" fg:x="79" fg:w="2"/><text x="6.5649%" y="719.50"></text></g><g><title>kernel::model::base::EntityKey::new (2 samples, 0.16%)</title><rect x="6.3149%" y="693" width="0.1599%" height="15" fill="rgb(251,220,3)" fg:x="79" fg:w="2"/><text x="6.5649%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.3949%" y="677" width="0.0799%" height="15" fill="rgb(228,105,12)" fg:x="80" fg:w="1"/><text x="6.6449%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.4748%" y="709" width="0.0799%" height="15" fill="rgb(215,196,1)" fg:x="81" fg:w="1"/><text x="6.7248%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.4748%" y="693" width="0.0799%" height="15" fill="rgb(214,33,39)" fg:x="81" fg:w="1"/><text x="6.7248%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.4748%" y="677" width="0.0799%" height="15" fill="rgb(220,19,52)" fg:x="81" fg:w="1"/><text x="6.7248%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.4748%" y="661" width="0.0799%" height="15" fill="rgb(221,78,38)" fg:x="81" fg:w="1"/><text x="6.7248%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.4748%" y="645" width="0.0799%" height="15" fill="rgb(253,30,16)" fg:x="81" fg:w="1"/><text x="6.7248%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.4748%" y="629" width="0.0799%" height="15" fill="rgb(242,65,0)" fg:x="81" fg:w="1"/><text x="6.7248%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.4748%" y="613" width="0.0799%" height="15" fill="rgb(235,201,12)" fg:x="81" fg:w="1"/><text x="6.7248%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="6.4748%" y="597" width="0.0799%" height="15" fill="rgb(233,161,9)" fg:x="81" fg:w="1"/><text x="6.7248%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="6.4748%" y="581" width="0.0799%" height="15" fill="rgb(241,207,41)" fg:x="81" fg:w="1"/><text x="6.7248%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="6.4748%" y="565" width="0.0799%" height="15" fill="rgb(212,69,46)" fg:x="81" fg:w="1"/><text x="6.7248%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="6.4748%" y="549" width="0.0799%" height="15" fill="rgb(239,69,45)" fg:x="81" fg:w="1"/><text x="6.7248%" y="559.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="6.4748%" y="533" width="0.0799%" height="15" fill="rgb(242,117,48)" fg:x="81" fg:w="1"/><text x="6.7248%" y="543.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="6.4748%" y="517" width="0.0799%" height="15" fill="rgb(228,41,36)" fg:x="81" fg:w="1"/><text x="6.7248%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="6.6347%" y="677" width="0.4796%" height="15" fill="rgb(212,3,32)" fg:x="83" fg:w="6"/><text x="6.8847%" y="687.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="6.7146%" y="661" width="0.3997%" height="15" fill="rgb(233,41,49)" fg:x="84" fg:w="5"/><text x="6.9646%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="6.7946%" y="645" width="0.3197%" height="15" fill="rgb(252,170,49)" fg:x="85" fg:w="4"/><text x="7.0446%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (11 samples, 0.88%)</title><rect x="6.5548%" y="693" width="0.8793%" height="15" fill="rgb(229,53,26)" fg:x="82" fg:w="11"/><text x="6.8048%" y="703.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="7.1143%" y="677" width="0.3197%" height="15" fill="rgb(217,157,12)" fg:x="89" fg:w="4"/><text x="7.3643%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.5140%" y="677" width="0.0799%" height="15" fill="rgb(227,17,9)" fg:x="94" fg:w="1"/><text x="7.7640%" y="687.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="8.2334%" y="581" width="0.0799%" height="15" fill="rgb(218,84,12)" fg:x="103" fg:w="1"/><text x="8.4834%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (10 samples, 0.80%)</title><rect x="7.5939%" y="677" width="0.7994%" height="15" fill="rgb(212,79,24)" fg:x="95" fg:w="10"/><text x="7.8439%" y="687.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="7.7538%" y="661" width="0.6395%" height="15" fill="rgb(217,222,37)" fg:x="97" fg:w="8"/><text x="8.0038%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="7.9936%" y="645" width="0.3997%" height="15" fill="rgb(246,208,8)" fg:x="100" fg:w="5"/><text x="8.2436%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="8.0735%" y="629" width="0.3197%" height="15" fill="rgb(244,133,10)" fg:x="101" fg:w="4"/><text x="8.3235%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="8.2334%" y="613" width="0.1599%" height="15" fill="rgb(209,219,41)" fg:x="103" fg:w="2"/><text x="8.4834%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="8.2334%" y="597" width="0.1599%" height="15" fill="rgb(253,175,45)" fg:x="103" fg:w="2"/><text x="8.4834%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.3133%" y="581" width="0.0799%" height="15" fill="rgb(235,100,37)" fg:x="104" fg:w="1"/><text x="8.5633%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.3933%" y="661" width="0.0799%" height="15" fill="rgb(225,87,19)" fg:x="105" fg:w="1"/><text x="8.6433%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.4732%" y="629" width="0.0799%" height="15" fill="rgb(217,152,17)" fg:x="106" fg:w="1"/><text x="8.7232%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.5532%" y="629" width="0.0799%" height="15" fill="rgb(235,72,13)" fg:x="107" fg:w="1"/><text x="8.8032%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.5532%" y="613" width="0.0799%" height="15" fill="rgb(233,140,18)" fg:x="107" fg:w="1"/><text x="8.8032%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="8.4732%" y="661" width="0.3197%" height="15" fill="rgb(207,212,28)" fg:x="106" fg:w="4"/><text x="8.7232%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="8.4732%" y="645" width="0.3197%" height="15" fill="rgb(220,130,25)" fg:x="106" fg:w="4"/><text x="8.7232%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.6331%" y="629" width="0.1599%" height="15" fill="rgb(205,55,34)" fg:x="108" fg:w="2"/><text x="8.8831%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.6331%" y="613" width="0.1599%" height="15" fill="rgb(237,54,35)" fg:x="108" fg:w="2"/><text x="8.8831%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.7130%" y="597" width="0.0799%" height="15" fill="rgb(208,67,23)" fg:x="109" fg:w="1"/><text x="8.9630%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.8729%" y="613" width="0.0799%" height="15" fill="rgb(206,207,50)" fg:x="111" fg:w="1"/><text x="9.1229%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="8.7930%" y="661" width="0.2398%" height="15" fill="rgb(213,211,42)" fg:x="110" fg:w="3"/><text x="9.0430%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.7930%" y="645" width="0.2398%" height="15" fill="rgb(252,197,50)" fg:x="110" fg:w="3"/><text x="9.0430%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.8729%" y="629" width="0.1599%" height="15" fill="rgb(251,211,41)" fg:x="111" fg:w="2"/><text x="9.1229%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.9528%" y="613" width="0.0799%" height="15" fill="rgb(229,211,5)" fg:x="112" fg:w="1"/><text x="9.2028%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="9.0328%" y="645" width="0.2398%" height="15" fill="rgb(239,36,31)" fg:x="113" fg:w="3"/><text x="9.2828%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.1127%" y="629" width="0.1599%" height="15" fill="rgb(248,67,31)" fg:x="114" fg:w="2"/><text x="9.3627%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="9.4325%" y="629" width="0.3997%" height="15" fill="rgb(249,55,44)" fg:x="118" fg:w="5"/><text x="9.6825%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="9.5124%" y="613" width="0.3197%" height="15" fill="rgb(216,82,12)" fg:x="119" fg:w="4"/><text x="9.7624%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="9.5923%" y="597" width="0.2398%" height="15" fill="rgb(242,174,1)" fg:x="120" fg:w="3"/><text x="9.8423%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="9.6723%" y="581" width="0.1599%" height="15" fill="rgb(208,120,29)" fg:x="121" fg:w="2"/><text x="9.9223%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="9.8321%" y="629" width="0.0799%" height="15" fill="rgb(221,105,43)" fg:x="123" fg:w="1"/><text x="10.0821%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.8321%" y="613" width="0.0799%" height="15" fill="rgb(234,124,22)" fg:x="123" fg:w="1"/><text x="10.0821%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.8321%" y="597" width="0.0799%" height="15" fill="rgb(212,23,30)" fg:x="123" fg:w="1"/><text x="10.0821%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="9.2726%" y="645" width="0.8793%" height="15" fill="rgb(219,122,53)" fg:x="116" fg:w="11"/><text x="9.5226%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="9.9121%" y="629" width="0.2398%" height="15" fill="rgb(248,84,24)" fg:x="124" fg:w="3"/><text x="10.1621%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.0719%" y="613" width="0.0799%" height="15" fill="rgb(245,115,18)" fg:x="126" fg:w="1"/><text x="10.3219%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="9.0328%" y="661" width="1.1990%" height="15" fill="rgb(227,176,51)" fg:x="113" fg:w="15"/><text x="9.2828%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.1519%" y="645" width="0.0799%" height="15" fill="rgb(229,63,42)" fg:x="127" fg:w="1"/><text x="10.4019%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.1519%" y="629" width="0.0799%" height="15" fill="rgb(247,202,24)" fg:x="127" fg:w="1"/><text x="10.4019%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.1519%" y="613" width="0.0799%" height="15" fill="rgb(244,173,20)" fg:x="127" fg:w="1"/><text x="10.4019%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.00%)</title><rect x="8.3933%" y="677" width="1.9984%" height="15" fill="rgb(242,81,47)" fg:x="105" fg:w="25"/><text x="8.6433%" y="687.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.2318%" y="661" width="0.1599%" height="15" fill="rgb(231,185,54)" fg:x="128" fg:w="2"/><text x="10.4818%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.2318%" y="645" width="0.1599%" height="15" fill="rgb(243,55,32)" fg:x="128" fg:w="2"/><text x="10.4818%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.3118%" y="629" width="0.0799%" height="15" fill="rgb(208,167,19)" fg:x="129" fg:w="1"/><text x="10.5618%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (43 samples, 3.44%)</title><rect x="7.4341%" y="693" width="3.4373%" height="15" fill="rgb(231,72,35)" fg:x="93" fg:w="43"/><text x="7.6841%" y="703.50">ser..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="10.3917%" y="677" width="0.4796%" height="15" fill="rgb(250,173,51)" fg:x="130" fg:w="6"/><text x="10.6417%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="10.3917%" y="661" width="0.4796%" height="15" fill="rgb(209,5,22)" fg:x="130" fg:w="6"/><text x="10.6417%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="10.3917%" y="645" width="0.4796%" height="15" fill="rgb(250,174,19)" fg:x="130" fg:w="6"/><text x="10.6417%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.7914%" y="629" width="0.0799%" height="15" fill="rgb(217,3,49)" fg:x="135" fg:w="1"/><text x="11.0414%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.7914%" y="613" width="0.0799%" height="15" fill="rgb(218,225,5)" fg:x="135" fg:w="1"/><text x="11.0414%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.7914%" y="597" width="0.0799%" height="15" fill="rgb(236,89,11)" fg:x="135" fg:w="1"/><text x="11.0414%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (55 samples, 4.40%)</title><rect x="6.5548%" y="709" width="4.3965%" height="15" fill="rgb(206,33,28)" fg:x="82" fg:w="55"/><text x="6.8048%" y="719.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.8713%" y="693" width="0.0799%" height="15" fill="rgb(241,56,42)" fg:x="136" fg:w="1"/><text x="11.1213%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.8713%" y="677" width="0.0799%" height="15" fill="rgb(222,44,11)" fg:x="136" fg:w="1"/><text x="11.1213%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.8713%" y="661" width="0.0799%" height="15" fill="rgb(234,111,20)" fg:x="136" fg:w="1"/><text x="11.1213%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.8713%" y="645" width="0.0799%" height="15" fill="rgb(237,77,6)" fg:x="136" fg:w="1"/><text x="11.1213%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.8713%" y="629" width="0.0799%" height="15" fill="rgb(235,111,23)" fg:x="136" fg:w="1"/><text x="11.1213%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.8713%" y="613" width="0.0799%" height="15" fill="rgb(251,135,29)" fg:x="136" fg:w="1"/><text x="11.1213%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.0312%" y="677" width="0.0799%" height="15" fill="rgb(217,57,1)" fg:x="138" fg:w="1"/><text x="11.2812%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.1910%" y="661" width="0.1599%" height="15" fill="rgb(249,119,31)" fg:x="140" fg:w="2"/><text x="11.4410%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.3509%" y="661" width="0.0799%" height="15" fill="rgb(233,164,33)" fg:x="142" fg:w="1"/><text x="11.6009%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.4309%" y="645" width="0.0799%" height="15" fill="rgb(250,217,43)" fg:x="143" fg:w="1"/><text x="11.6809%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.5108%" y="645" width="0.0799%" height="15" fill="rgb(232,154,50)" fg:x="144" fg:w="1"/><text x="11.7608%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.7506%" y="629" width="0.1599%" height="15" fill="rgb(227,190,8)" fg:x="147" fg:w="2"/><text x="12.0006%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.9105%" y="629" width="0.0799%" height="15" fill="rgb(209,217,32)" fg:x="149" fg:w="1"/><text x="12.1605%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.9105%" y="613" width="0.0799%" height="15" fill="rgb(243,203,50)" fg:x="149" fg:w="1"/><text x="12.1605%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="10.9512%" y="709" width="1.1990%" height="15" fill="rgb(232,152,27)" fg:x="137" fg:w="15"/><text x="11.2012%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.20%)</title><rect x="10.9512%" y="693" width="1.1990%" height="15" fill="rgb(240,34,29)" fg:x="137" fg:w="15"/><text x="11.2012%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="11.1111%" y="677" width="1.0392%" height="15" fill="rgb(215,185,52)" fg:x="139" fg:w="13"/><text x="11.3611%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="11.4309%" y="661" width="0.7194%" height="15" fill="rgb(240,89,49)" fg:x="143" fg:w="9"/><text x="11.6809%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="11.5907%" y="645" width="0.5596%" height="15" fill="rgb(225,12,52)" fg:x="145" fg:w="7"/><text x="11.8407%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="11.9904%" y="629" width="0.1599%" height="15" fill="rgb(239,128,45)" fg:x="150" fg:w="2"/><text x="12.2404%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="11.9904%" y="613" width="0.1599%" height="15" fill="rgb(211,78,47)" fg:x="150" fg:w="2"/><text x="12.2404%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0703%" y="597" width="0.0799%" height="15" fill="rgb(232,31,21)" fg:x="151" fg:w="1"/><text x="12.3203%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="12.1503%" y="677" width="0.0799%" height="15" fill="rgb(222,168,14)" fg:x="152" fg:w="1"/><text x="12.4003%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.1503%" y="661" width="0.0799%" height="15" fill="rgb(209,128,24)" fg:x="152" fg:w="1"/><text x="12.4003%" y="671.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="12.1503%" y="693" width="0.1599%" height="15" fill="rgb(249,35,13)" fg:x="152" fg:w="2"/><text x="12.4003%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2302%" y="677" width="0.0799%" height="15" fill="rgb(218,7,2)" fg:x="153" fg:w="1"/><text x="12.4802%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="12.3102%" y="693" width="0.0799%" height="15" fill="rgb(238,107,27)" fg:x="154" fg:w="1"/><text x="12.5602%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="12.5500%" y="661" width="0.3997%" height="15" fill="rgb(217,88,38)" fg:x="157" fg:w="5"/><text x="12.8000%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="12.7098%" y="645" width="0.2398%" height="15" fill="rgb(230,207,0)" fg:x="159" fg:w="3"/><text x="12.9598%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="12.7098%" y="629" width="0.2398%" height="15" fill="rgb(249,64,54)" fg:x="159" fg:w="3"/><text x="12.9598%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9496%" y="629" width="0.0799%" height="15" fill="rgb(231,7,11)" fg:x="162" fg:w="1"/><text x="13.1996%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="12.9496%" y="661" width="0.1599%" height="15" fill="rgb(205,149,21)" fg:x="162" fg:w="2"/><text x="13.1996%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.9496%" y="645" width="0.1599%" height="15" fill="rgb(215,126,34)" fg:x="162" fg:w="2"/><text x="13.1996%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.0296%" y="629" width="0.0799%" height="15" fill="rgb(241,132,45)" fg:x="163" fg:w="1"/><text x="13.2796%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="13.1095%" y="661" width="0.0799%" height="15" fill="rgb(252,69,32)" fg:x="164" fg:w="1"/><text x="13.3595%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.1095%" y="645" width="0.0799%" height="15" fill="rgb(232,204,19)" fg:x="164" fg:w="1"/><text x="13.3595%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1095%" y="629" width="0.0799%" height="15" fill="rgb(249,15,47)" fg:x="164" fg:w="1"/><text x="13.3595%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1894%" y="629" width="0.0799%" height="15" fill="rgb(209,227,23)" fg:x="165" fg:w="1"/><text x="13.4394%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="13.1894%" y="661" width="0.1599%" height="15" fill="rgb(248,92,24)" fg:x="165" fg:w="2"/><text x="13.4394%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.1894%" y="645" width="0.1599%" height="15" fill="rgb(247,59,2)" fg:x="165" fg:w="2"/><text x="13.4394%" y="655.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="13.2694%" y="629" width="0.0799%" height="15" fill="rgb(221,30,5)" fg:x="166" fg:w="1"/><text x="13.5194%" y="639.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.2694%" y="613" width="0.0799%" height="15" fill="rgb(208,108,53)" fg:x="166" fg:w="1"/><text x="13.5194%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="13.4293%" y="613" width="0.3197%" height="15" fill="rgb(211,183,26)" fg:x="168" fg:w="4"/><text x="13.6793%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="13.4293%" y="597" width="0.3197%" height="15" fill="rgb(232,132,4)" fg:x="168" fg:w="4"/><text x="13.6793%" y="607.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="13.4293%" y="581" width="0.3197%" height="15" fill="rgb(253,128,37)" fg:x="168" fg:w="4"/><text x="13.6793%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.8289%" y="533" width="0.0799%" height="15" fill="rgb(221,58,24)" fg:x="173" fg:w="1"/><text x="14.0789%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="13.8289%" y="581" width="0.1599%" height="15" fill="rgb(230,54,45)" fg:x="173" fg:w="2"/><text x="14.0789%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.8289%" y="565" width="0.1599%" height="15" fill="rgb(254,21,18)" fg:x="173" fg:w="2"/><text x="14.0789%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.8289%" y="549" width="0.1599%" height="15" fill="rgb(221,108,0)" fg:x="173" fg:w="2"/><text x="14.0789%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.9089%" y="533" width="0.0799%" height="15" fill="rgb(206,95,1)" fg:x="174" fg:w="1"/><text x="14.1589%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="13.7490%" y="613" width="0.4796%" height="15" fill="rgb(237,52,5)" fg:x="172" fg:w="6"/><text x="13.9990%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="13.8289%" y="597" width="0.3997%" height="15" fill="rgb(218,150,34)" fg:x="173" fg:w="5"/><text x="14.0789%" y="607.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="13.9888%" y="581" width="0.2398%" height="15" fill="rgb(235,194,28)" fg:x="175" fg:w="3"/><text x="14.2388%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="14.6283%" y="565" width="0.2398%" height="15" fill="rgb(245,92,18)" fg:x="183" fg:w="3"/><text x="14.8783%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="14.6283%" y="549" width="0.2398%" height="15" fill="rgb(253,203,53)" fg:x="183" fg:w="3"/><text x="14.8783%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="14.6283%" y="533" width="0.2398%" height="15" fill="rgb(249,185,47)" fg:x="183" fg:w="3"/><text x="14.8783%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.7082%" y="517" width="0.1599%" height="15" fill="rgb(252,194,52)" fg:x="184" fg:w="2"/><text x="14.9582%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (21 samples, 1.68%)</title><rect x="13.3493%" y="629" width="1.6787%" height="15" fill="rgb(210,53,36)" fg:x="167" fg:w="21"/><text x="13.5993%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="14.2286%" y="613" width="0.7994%" height="15" fill="rgb(237,37,25)" fg:x="178" fg:w="10"/><text x="14.4786%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="14.3885%" y="597" width="0.6395%" height="15" fill="rgb(242,116,27)" fg:x="180" fg:w="8"/><text x="14.6385%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="14.4684%" y="581" width="0.5596%" height="15" fill="rgb(213,185,26)" fg:x="181" fg:w="7"/><text x="14.7184%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.8681%" y="565" width="0.1599%" height="15" fill="rgb(225,204,8)" fg:x="186" fg:w="2"/><text x="15.1181%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (23 samples, 1.84%)</title><rect x="13.3493%" y="645" width="1.8385%" height="15" fill="rgb(254,111,37)" fg:x="167" fg:w="23"/><text x="13.5993%" y="655.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="15.0280%" y="629" width="0.1599%" height="15" fill="rgb(242,35,9)" fg:x="188" fg:w="2"/><text x="15.2780%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="15.0280%" y="613" width="0.1599%" height="15" fill="rgb(232,138,49)" fg:x="188" fg:w="2"/><text x="15.2780%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1878%" y="613" width="0.0799%" height="15" fill="rgb(247,56,4)" fg:x="190" fg:w="1"/><text x="15.4378%" y="623.50"></text></g><g><title>engine::session::Session::flush (119 samples, 9.51%)</title><rect x="5.8353%" y="789" width="9.5124%" height="15" fill="rgb(226,179,17)" fg:x="73" fg:w="119"/><text x="6.0853%" y="799.50">engine::sessio..</text></g><g><title>engine::session::state::State::close (116 samples, 9.27%)</title><rect x="6.0751%" y="773" width="9.2726%" height="15" fill="rgb(216,163,45)" fg:x="76" fg:w="116"/><text x="6.3251%" y="783.50">engine::sessi..</text></g><g><title>engine::session::state::State::flush_entities (116 samples, 9.27%)</title><rect x="6.0751%" y="757" width="9.2726%" height="15" fill="rgb(211,157,3)" fg:x="76" fg:w="116"/><text x="6.3251%" y="767.50">engine::sessi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (111 samples, 8.87%)</title><rect x="6.4748%" y="741" width="8.8729%" height="15" fill="rgb(234,44,20)" fg:x="81" fg:w="111"/><text x="6.7248%" y="751.50">engine::sessi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (111 samples, 8.87%)</title><rect x="6.4748%" y="725" width="8.8729%" height="15" fill="rgb(254,138,23)" fg:x="81" fg:w="111"/><text x="6.7248%" y="735.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (40 samples, 3.20%)</title><rect x="12.1503%" y="709" width="3.1974%" height="15" fill="rgb(206,119,39)" fg:x="152" fg:w="40"/><text x="12.4003%" y="719.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (37 samples, 2.96%)</title><rect x="12.3901%" y="693" width="2.9576%" height="15" fill="rgb(231,105,52)" fg:x="155" fg:w="37"/><text x="12.6401%" y="703.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (36 samples, 2.88%)</title><rect x="12.4700%" y="677" width="2.8777%" height="15" fill="rgb(250,20,5)" fg:x="156" fg:w="36"/><text x="12.7200%" y="687.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (25 samples, 2.00%)</title><rect x="13.3493%" y="661" width="1.9984%" height="15" fill="rgb(215,198,30)" fg:x="167" fg:w="25"/><text x="13.5993%" y="671.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.1878%" y="645" width="0.1599%" height="15" fill="rgb(246,142,8)" fg:x="190" fg:w="2"/><text x="15.4378%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.1878%" y="629" width="0.1599%" height="15" fill="rgb(243,26,38)" fg:x="190" fg:w="2"/><text x="15.4378%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="15.2678%" y="613" width="0.0799%" height="15" fill="rgb(205,133,28)" fg:x="191" fg:w="1"/><text x="15.5178%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="15.3477%" y="757" width="0.0799%" height="15" fill="rgb(212,34,0)" fg:x="192" fg:w="1"/><text x="15.5977%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="15.3477%" y="741" width="0.0799%" height="15" fill="rgb(251,226,22)" fg:x="192" fg:w="1"/><text x="15.5977%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.3477%" y="725" width="0.0799%" height="15" fill="rgb(252,119,9)" fg:x="192" fg:w="1"/><text x="15.5977%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.3477%" y="709" width="0.0799%" height="15" fill="rgb(213,150,50)" fg:x="192" fg:w="1"/><text x="15.5977%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.3477%" y="693" width="0.0799%" height="15" fill="rgb(212,24,39)" fg:x="192" fg:w="1"/><text x="15.5977%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.3477%" y="677" width="0.0799%" height="15" fill="rgb(213,46,39)" fg:x="192" fg:w="1"/><text x="15.5977%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="15.3477%" y="661" width="0.0799%" height="15" fill="rgb(239,106,12)" fg:x="192" fg:w="1"/><text x="15.5977%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.3477%" y="645" width="0.0799%" height="15" fill="rgb(249,229,21)" fg:x="192" fg:w="1"/><text x="15.5977%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.3477%" y="629" width="0.0799%" height="15" fill="rgb(212,158,3)" fg:x="192" fg:w="1"/><text x="15.5977%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.3477%" y="613" width="0.0799%" height="15" fill="rgb(253,26,48)" fg:x="192" fg:w="1"/><text x="15.5977%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="15.3477%" y="597" width="0.0799%" height="15" fill="rgb(238,178,20)" fg:x="192" fg:w="1"/><text x="15.5977%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.3477%" y="581" width="0.0799%" height="15" fill="rgb(208,86,15)" fg:x="192" fg:w="1"/><text x="15.5977%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.5076%" y="661" width="0.0799%" height="15" fill="rgb(239,42,53)" fg:x="194" fg:w="1"/><text x="15.7576%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.5076%" y="645" width="0.0799%" height="15" fill="rgb(245,226,8)" fg:x="194" fg:w="1"/><text x="15.7576%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.5076%" y="629" width="0.0799%" height="15" fill="rgb(216,176,32)" fg:x="194" fg:w="1"/><text x="15.7576%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="15.4277%" y="757" width="0.2398%" height="15" fill="rgb(231,186,21)" fg:x="193" fg:w="3"/><text x="15.6777%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.4277%" y="741" width="0.2398%" height="15" fill="rgb(205,95,49)" fg:x="193" fg:w="3"/><text x="15.6777%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.5076%" y="725" width="0.1599%" height="15" fill="rgb(217,145,8)" fg:x="194" fg:w="2"/><text x="15.7576%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.5076%" y="709" width="0.1599%" height="15" fill="rgb(239,144,48)" fg:x="194" fg:w="2"/><text x="15.7576%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="15.5076%" y="693" width="0.1599%" height="15" fill="rgb(214,189,23)" fg:x="194" fg:w="2"/><text x="15.7576%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.5076%" y="677" width="0.1599%" height="15" fill="rgb(229,157,17)" fg:x="194" fg:w="2"/><text x="15.7576%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.5875%" y="661" width="0.0799%" height="15" fill="rgb(230,5,48)" fg:x="195" fg:w="1"/><text x="15.8375%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5875%" y="645" width="0.0799%" height="15" fill="rgb(224,156,48)" fg:x="195" fg:w="1"/><text x="15.8375%" y="655.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="15.6675%" y="757" width="0.2398%" height="15" fill="rgb(223,14,29)" fg:x="196" fg:w="3"/><text x="15.9175%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="15.6675%" y="741" width="0.2398%" height="15" fill="rgb(229,96,36)" fg:x="196" fg:w="3"/><text x="15.9175%" y="751.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (3 samples, 0.24%)</title><rect x="15.6675%" y="725" width="0.2398%" height="15" fill="rgb(231,102,53)" fg:x="196" fg:w="3"/><text x="15.9175%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="15.6675%" y="709" width="0.2398%" height="15" fill="rgb(210,77,38)" fg:x="196" fg:w="3"/><text x="15.9175%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8273%" y="693" width="0.0799%" height="15" fill="rgb(235,131,6)" fg:x="198" fg:w="1"/><text x="16.0773%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.9073%" y="693" width="0.0799%" height="15" fill="rgb(252,55,38)" fg:x="199" fg:w="1"/><text x="16.1573%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="15.9872%" y="693" width="0.0799%" height="15" fill="rgb(246,38,14)" fg:x="200" fg:w="1"/><text x="16.2372%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.9872%" y="677" width="0.0799%" height="15" fill="rgb(242,27,5)" fg:x="200" fg:w="1"/><text x="16.2372%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0671%" y="677" width="0.0799%" height="15" fill="rgb(228,65,35)" fg:x="201" fg:w="1"/><text x="16.3171%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0671%" y="661" width="0.0799%" height="15" fill="rgb(245,93,11)" fg:x="201" fg:w="1"/><text x="16.3171%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0671%" y="645" width="0.0799%" height="15" fill="rgb(213,1,31)" fg:x="201" fg:w="1"/><text x="16.3171%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="16.1471%" y="677" width="0.0799%" height="15" fill="rgb(237,205,14)" fg:x="202" fg:w="1"/><text x="16.3971%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.1471%" y="661" width="0.0799%" height="15" fill="rgb(232,118,45)" fg:x="202" fg:w="1"/><text x="16.3971%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1471%" y="645" width="0.0799%" height="15" fill="rgb(218,5,6)" fg:x="202" fg:w="1"/><text x="16.3971%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="15.9073%" y="741" width="0.3997%" height="15" fill="rgb(251,87,51)" fg:x="199" fg:w="5"/><text x="16.1573%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="15.9073%" y="725" width="0.3997%" height="15" fill="rgb(207,225,20)" fg:x="199" fg:w="5"/><text x="16.1573%" y="735.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="15.9073%" y="709" width="0.3997%" height="15" fill="rgb(222,78,54)" fg:x="199" fg:w="5"/><text x="16.1573%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="16.0671%" y="693" width="0.2398%" height="15" fill="rgb(232,85,16)" fg:x="201" fg:w="3"/><text x="16.3171%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.2270%" y="677" width="0.0799%" height="15" fill="rgb(244,25,33)" fg:x="203" fg:w="1"/><text x="16.4770%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.2270%" y="661" width="0.0799%" height="15" fill="rgb(233,24,36)" fg:x="203" fg:w="1"/><text x="16.4770%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.2270%" y="645" width="0.0799%" height="15" fill="rgb(253,49,54)" fg:x="203" fg:w="1"/><text x="16.4770%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="16.2270%" y="629" width="0.0799%" height="15" fill="rgb(245,12,22)" fg:x="203" fg:w="1"/><text x="16.4770%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.2270%" y="613" width="0.0799%" height="15" fill="rgb(253,141,28)" fg:x="203" fg:w="1"/><text x="16.4770%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.5468%" y="709" width="0.0799%" height="15" fill="rgb(225,207,27)" fg:x="207" fg:w="1"/><text x="16.7968%" y="719.50"></text></g><g><title>__libc_malloc (9 samples, 0.72%)</title><rect x="16.7866%" y="677" width="0.7194%" height="15" fill="rgb(220,84,2)" fg:x="210" fg:w="9"/><text x="17.0366%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (28 samples, 2.24%)</title><rect x="15.3477%" y="773" width="2.2382%" height="15" fill="rgb(224,37,37)" fg:x="192" fg:w="28"/><text x="15.5977%" y="783.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (21 samples, 1.68%)</title><rect x="15.9073%" y="757" width="1.6787%" height="15" fill="rgb(220,143,18)" fg:x="199" fg:w="21"/><text x="16.1573%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (16 samples, 1.28%)</title><rect x="16.3070%" y="741" width="1.2790%" height="15" fill="rgb(210,88,33)" fg:x="204" fg:w="16"/><text x="16.5570%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 1.20%)</title><rect x="16.3869%" y="725" width="1.1990%" height="15" fill="rgb(219,87,51)" fg:x="205" fg:w="15"/><text x="16.6369%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.96%)</title><rect x="16.6267%" y="709" width="0.9592%" height="15" fill="rgb(211,7,35)" fg:x="208" fg:w="12"/><text x="16.8767%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.96%)</title><rect x="16.6267%" y="693" width="0.9592%" height="15" fill="rgb(232,77,2)" fg:x="208" fg:w="12"/><text x="16.8767%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.5060%" y="677" width="0.0799%" height="15" fill="rgb(249,94,25)" fg:x="219" fg:w="1"/><text x="17.7560%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="17.5060%" y="661" width="0.0799%" height="15" fill="rgb(215,112,2)" fg:x="219" fg:w="1"/><text x="17.7560%" y="671.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="17.5859%" y="773" width="0.2398%" height="15" fill="rgb(226,115,48)" fg:x="220" fg:w="3"/><text x="17.8359%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="17.8257%" y="757" width="0.0799%" height="15" fill="rgb(249,196,10)" fg:x="223" fg:w="1"/><text x="18.0757%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="17.8257%" y="741" width="0.0799%" height="15" fill="rgb(237,109,14)" fg:x="223" fg:w="1"/><text x="18.0757%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8257%" y="725" width="0.0799%" height="15" fill="rgb(217,103,53)" fg:x="223" fg:w="1"/><text x="18.0757%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.9057%" y="645" width="0.0799%" height="15" fill="rgb(244,137,9)" fg:x="224" fg:w="1"/><text x="18.1557%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.9057%" y="661" width="0.1599%" height="15" fill="rgb(227,201,3)" fg:x="224" fg:w="2"/><text x="18.1557%" y="671.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="17.9856%" y="645" width="0.0799%" height="15" fill="rgb(243,94,6)" fg:x="225" fg:w="1"/><text x="18.2356%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="17.9856%" y="629" width="0.0799%" height="15" fill="rgb(235,118,5)" fg:x="225" fg:w="1"/><text x="18.2356%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="17.9057%" y="725" width="0.2398%" height="15" fill="rgb(247,10,30)" fg:x="224" fg:w="3"/><text x="18.1557%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.9057%" y="709" width="0.2398%" height="15" fill="rgb(205,26,28)" fg:x="224" fg:w="3"/><text x="18.1557%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="17.9057%" y="693" width="0.2398%" height="15" fill="rgb(206,99,35)" fg:x="224" fg:w="3"/><text x="18.1557%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="17.9057%" y="677" width="0.2398%" height="15" fill="rgb(238,130,40)" fg:x="224" fg:w="3"/><text x="18.1557%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.0655%" y="661" width="0.0799%" height="15" fill="rgb(224,126,31)" fg:x="226" fg:w="1"/><text x="18.3155%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="18.3054%" y="629" width="0.0799%" height="15" fill="rgb(254,105,17)" fg:x="229" fg:w="1"/><text x="18.5554%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.3054%" y="613" width="0.0799%" height="15" fill="rgb(216,87,36)" fg:x="229" fg:w="1"/><text x="18.5554%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="17.9057%" y="757" width="0.5596%" height="15" fill="rgb(240,21,12)" fg:x="224" fg:w="7"/><text x="18.1557%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="17.9057%" y="741" width="0.5596%" height="15" fill="rgb(245,192,34)" fg:x="224" fg:w="7"/><text x="18.1557%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="18.1455%" y="725" width="0.3197%" height="15" fill="rgb(226,100,49)" fg:x="227" fg:w="4"/><text x="18.3955%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="18.1455%" y="709" width="0.3197%" height="15" fill="rgb(245,188,27)" fg:x="227" fg:w="4"/><text x="18.3955%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.3054%" y="693" width="0.1599%" height="15" fill="rgb(212,170,8)" fg:x="229" fg:w="2"/><text x="18.5554%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.3054%" y="677" width="0.1599%" height="15" fill="rgb(217,113,29)" fg:x="229" fg:w="2"/><text x="18.5554%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="18.3054%" y="661" width="0.1599%" height="15" fill="rgb(237,30,3)" fg:x="229" fg:w="2"/><text x="18.5554%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.3054%" y="645" width="0.1599%" height="15" fill="rgb(227,19,28)" fg:x="229" fg:w="2"/><text x="18.5554%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.3853%" y="629" width="0.0799%" height="15" fill="rgb(239,172,45)" fg:x="230" fg:w="1"/><text x="18.6353%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.5452%" y="677" width="0.0799%" height="15" fill="rgb(254,55,39)" fg:x="232" fg:w="1"/><text x="18.7952%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.5452%" y="661" width="0.0799%" height="15" fill="rgb(249,208,12)" fg:x="232" fg:w="1"/><text x="18.7952%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.5452%" y="645" width="0.0799%" height="15" fill="rgb(240,52,13)" fg:x="232" fg:w="1"/><text x="18.7952%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5452%" y="629" width="0.0799%" height="15" fill="rgb(252,149,13)" fg:x="232" fg:w="1"/><text x="18.7952%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5452%" y="613" width="0.0799%" height="15" fill="rgb(232,81,48)" fg:x="232" fg:w="1"/><text x="18.7952%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.5452%" y="597" width="0.0799%" height="15" fill="rgb(222,144,2)" fg:x="232" fg:w="1"/><text x="18.7952%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.5452%" y="581" width="0.0799%" height="15" fill="rgb(216,81,32)" fg:x="232" fg:w="1"/><text x="18.7952%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.5452%" y="565" width="0.0799%" height="15" fill="rgb(244,78,51)" fg:x="232" fg:w="1"/><text x="18.7952%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.5452%" y="549" width="0.0799%" height="15" fill="rgb(217,66,21)" fg:x="232" fg:w="1"/><text x="18.7952%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.5452%" y="533" width="0.0799%" height="15" fill="rgb(247,101,42)" fg:x="232" fg:w="1"/><text x="18.7952%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.5452%" y="517" width="0.0799%" height="15" fill="rgb(227,81,39)" fg:x="232" fg:w="1"/><text x="18.7952%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.5452%" y="501" width="0.0799%" height="15" fill="rgb(220,223,44)" fg:x="232" fg:w="1"/><text x="18.7952%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.5452%" y="485" width="0.0799%" height="15" fill="rgb(205,218,2)" fg:x="232" fg:w="1"/><text x="18.7952%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.5452%" y="469" width="0.0799%" height="15" fill="rgb(212,207,28)" fg:x="232" fg:w="1"/><text x="18.7952%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.5452%" y="453" width="0.0799%" height="15" fill="rgb(224,12,41)" fg:x="232" fg:w="1"/><text x="18.7952%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="18.6251%" y="677" width="0.0799%" height="15" fill="rgb(216,118,12)" fg:x="233" fg:w="1"/><text x="18.8751%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="18.5452%" y="709" width="0.3197%" height="15" fill="rgb(252,97,46)" fg:x="232" fg:w="4"/><text x="18.7952%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="18.5452%" y="693" width="0.3197%" height="15" fill="rgb(244,206,19)" fg:x="232" fg:w="4"/><text x="18.7952%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.7050%" y="677" width="0.1599%" height="15" fill="rgb(231,84,31)" fg:x="234" fg:w="2"/><text x="18.9550%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.7050%" y="661" width="0.1599%" height="15" fill="rgb(244,133,0)" fg:x="234" fg:w="2"/><text x="18.9550%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="18.7050%" y="645" width="0.1599%" height="15" fill="rgb(223,15,50)" fg:x="234" fg:w="2"/><text x="18.9550%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.7050%" y="629" width="0.1599%" height="15" fill="rgb(250,118,49)" fg:x="234" fg:w="2"/><text x="18.9550%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7850%" y="613" width="0.0799%" height="15" fill="rgb(248,25,38)" fg:x="235" fg:w="1"/><text x="19.0350%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7850%" y="597" width="0.0799%" height="15" fill="rgb(215,70,14)" fg:x="235" fg:w="1"/><text x="19.0350%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="18.7850%" y="581" width="0.0799%" height="15" fill="rgb(215,28,15)" fg:x="235" fg:w="1"/><text x="19.0350%" y="591.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="18.8649%" y="693" width="0.0799%" height="15" fill="rgb(243,6,28)" fg:x="236" fg:w="1"/><text x="19.1149%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.8649%" y="677" width="0.0799%" height="15" fill="rgb(222,130,1)" fg:x="236" fg:w="1"/><text x="19.1149%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.9448%" y="661" width="0.0799%" height="15" fill="rgb(236,166,44)" fg:x="237" fg:w="1"/><text x="19.1948%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.9448%" y="645" width="0.0799%" height="15" fill="rgb(221,108,14)" fg:x="237" fg:w="1"/><text x="19.1948%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.9448%" y="629" width="0.0799%" height="15" fill="rgb(252,3,45)" fg:x="237" fg:w="1"/><text x="19.1948%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.9448%" y="613" width="0.0799%" height="15" fill="rgb(237,68,30)" fg:x="237" fg:w="1"/><text x="19.1948%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.9448%" y="597" width="0.0799%" height="15" fill="rgb(211,79,22)" fg:x="237" fg:w="1"/><text x="19.1948%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.9448%" y="581" width="0.0799%" height="15" fill="rgb(252,185,21)" fg:x="237" fg:w="1"/><text x="19.1948%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.9448%" y="565" width="0.0799%" height="15" fill="rgb(225,189,26)" fg:x="237" fg:w="1"/><text x="19.1948%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.9448%" y="549" width="0.0799%" height="15" fill="rgb(241,30,40)" fg:x="237" fg:w="1"/><text x="19.1948%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.9448%" y="533" width="0.0799%" height="15" fill="rgb(235,215,44)" fg:x="237" fg:w="1"/><text x="19.1948%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.9448%" y="517" width="0.0799%" height="15" fill="rgb(205,8,29)" fg:x="237" fg:w="1"/><text x="19.1948%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.9448%" y="501" width="0.0799%" height="15" fill="rgb(241,137,42)" fg:x="237" fg:w="1"/><text x="19.1948%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.9448%" y="485" width="0.0799%" height="15" fill="rgb(237,155,2)" fg:x="237" fg:w="1"/><text x="19.1948%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.9448%" y="469" width="0.0799%" height="15" fill="rgb(245,29,42)" fg:x="237" fg:w="1"/><text x="19.1948%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.9448%" y="453" width="0.0799%" height="15" fill="rgb(234,101,35)" fg:x="237" fg:w="1"/><text x="19.1948%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0248%" y="661" width="0.0799%" height="15" fill="rgb(228,64,37)" fg:x="238" fg:w="1"/><text x="19.2748%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0248%" y="645" width="0.0799%" height="15" fill="rgb(217,214,36)" fg:x="238" fg:w="1"/><text x="19.2748%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.0248%" y="629" width="0.0799%" height="15" fill="rgb(243,70,3)" fg:x="238" fg:w="1"/><text x="19.2748%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.0248%" y="613" width="0.0799%" height="15" fill="rgb(253,158,52)" fg:x="238" fg:w="1"/><text x="19.2748%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.0248%" y="597" width="0.0799%" height="15" fill="rgb(234,111,54)" fg:x="238" fg:w="1"/><text x="19.2748%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.0248%" y="581" width="0.0799%" height="15" fill="rgb(217,70,32)" fg:x="238" fg:w="1"/><text x="19.2748%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.0248%" y="565" width="0.0799%" height="15" fill="rgb(234,18,33)" fg:x="238" fg:w="1"/><text x="19.2748%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="18.9448%" y="677" width="0.2398%" height="15" fill="rgb(234,12,49)" fg:x="237" fg:w="3"/><text x="19.1948%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.1047%" y="661" width="0.0799%" height="15" fill="rgb(236,10,21)" fg:x="239" fg:w="1"/><text x="19.3547%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="18.4652%" y="741" width="0.7994%" height="15" fill="rgb(248,182,45)" fg:x="231" fg:w="10"/><text x="18.7152%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="18.4652%" y="725" width="0.7994%" height="15" fill="rgb(217,95,36)" fg:x="231" fg:w="10"/><text x="18.7152%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="18.8649%" y="709" width="0.3997%" height="15" fill="rgb(212,110,31)" fg:x="236" fg:w="5"/><text x="19.1149%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="18.9448%" y="693" width="0.3197%" height="15" fill="rgb(206,32,53)" fg:x="237" fg:w="4"/><text x="19.1948%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.1847%" y="677" width="0.0799%" height="15" fill="rgb(246,141,37)" fg:x="240" fg:w="1"/><text x="19.4347%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1847%" y="661" width="0.0799%" height="15" fill="rgb(219,16,7)" fg:x="240" fg:w="1"/><text x="19.4347%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.1847%" y="645" width="0.0799%" height="15" fill="rgb(230,205,45)" fg:x="240" fg:w="1"/><text x="19.4347%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1847%" y="629" width="0.0799%" height="15" fill="rgb(231,43,49)" fg:x="240" fg:w="1"/><text x="19.4347%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.1847%" y="613" width="0.0799%" height="15" fill="rgb(212,106,34)" fg:x="240" fg:w="1"/><text x="19.4347%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1847%" y="597" width="0.0799%" height="15" fill="rgb(206,83,17)" fg:x="240" fg:w="1"/><text x="19.4347%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="18.4652%" y="757" width="0.8793%" height="15" fill="rgb(244,154,49)" fg:x="231" fg:w="11"/><text x="18.7152%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="19.2646%" y="741" width="0.0799%" height="15" fill="rgb(244,149,49)" fg:x="241" fg:w="1"/><text x="19.5146%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.2646%" y="725" width="0.0799%" height="15" fill="rgb(227,134,18)" fg:x="241" fg:w="1"/><text x="19.5146%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="19.2646%" y="709" width="0.0799%" height="15" fill="rgb(237,116,36)" fg:x="241" fg:w="1"/><text x="19.5146%" y="719.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="19.2646%" y="693" width="0.0799%" height="15" fill="rgb(205,129,40)" fg:x="241" fg:w="1"/><text x="19.5146%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="19.2646%" y="677" width="0.0799%" height="15" fill="rgb(236,178,4)" fg:x="241" fg:w="1"/><text x="19.5146%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3445%" y="693" width="0.0799%" height="15" fill="rgb(251,76,53)" fg:x="242" fg:w="1"/><text x="19.5945%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4245%" y="661" width="0.0799%" height="15" fill="rgb(242,92,40)" fg:x="243" fg:w="1"/><text x="19.6745%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.5843%" y="629" width="0.0799%" height="15" fill="rgb(209,45,30)" fg:x="245" fg:w="1"/><text x="19.8343%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (55 samples, 4.40%)</title><rect x="15.3477%" y="789" width="4.3965%" height="15" fill="rgb(218,157,36)" fg:x="192" fg:w="55"/><text x="15.5977%" y="799.50">plugi..</text></g><g><title>plugins_core::tools::set_container (24 samples, 1.92%)</title><rect x="17.8257%" y="773" width="1.9185%" height="15" fill="rgb(222,186,16)" fg:x="223" fg:w="24"/><text x="18.0757%" y="783.50">p..</text></g><g><title>plugins_core::location::Location::set (5 samples, 0.40%)</title><rect x="19.3445%" y="757" width="0.3997%" height="15" fill="rgb(254,72,35)" fg:x="242" fg:w="5"/><text x="19.5945%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="19.3445%" y="741" width="0.3997%" height="15" fill="rgb(224,25,35)" fg:x="242" fg:w="5"/><text x="19.5945%" y="751.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (5 samples, 0.40%)</title><rect x="19.3445%" y="725" width="0.3997%" height="15" fill="rgb(206,135,52)" fg:x="242" fg:w="5"/><text x="19.5945%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="19.3445%" y="709" width="0.3997%" height="15" fill="rgb(229,174,47)" fg:x="242" fg:w="5"/><text x="19.5945%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (4 samples, 0.32%)</title><rect x="19.4245%" y="693" width="0.3197%" height="15" fill="rgb(242,184,21)" fg:x="243" fg:w="4"/><text x="19.6745%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="19.4245%" y="677" width="0.3197%" height="15" fill="rgb(213,22,45)" fg:x="243" fg:w="4"/><text x="19.6745%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.5044%" y="661" width="0.2398%" height="15" fill="rgb(237,81,54)" fg:x="244" fg:w="3"/><text x="19.7544%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.5044%" y="645" width="0.2398%" height="15" fill="rgb(248,177,18)" fg:x="244" fg:w="3"/><text x="19.7544%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.6643%" y="629" width="0.0799%" height="15" fill="rgb(254,31,16)" fg:x="246" fg:w="1"/><text x="19.9143%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="19.9041%" y="725" width="0.1599%" height="15" fill="rgb(235,20,31)" fg:x="249" fg:w="2"/><text x="20.1541%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.9840%" y="709" width="0.0799%" height="15" fill="rgb(240,56,43)" fg:x="250" fg:w="1"/><text x="20.2340%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.9840%" y="693" width="0.0799%" height="15" fill="rgb(237,197,51)" fg:x="250" fg:w="1"/><text x="20.2340%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.9840%" y="677" width="0.0799%" height="15" fill="rgb(241,162,44)" fg:x="250" fg:w="1"/><text x="20.2340%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.9840%" y="661" width="0.0799%" height="15" fill="rgb(224,23,20)" fg:x="250" fg:w="1"/><text x="20.2340%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.9840%" y="645" width="0.0799%" height="15" fill="rgb(250,109,34)" fg:x="250" fg:w="1"/><text x="20.2340%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.9840%" y="629" width="0.0799%" height="15" fill="rgb(214,175,50)" fg:x="250" fg:w="1"/><text x="20.2340%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.1439%" y="549" width="0.0799%" height="15" fill="rgb(213,182,5)" fg:x="252" fg:w="1"/><text x="20.3939%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.1439%" y="533" width="0.0799%" height="15" fill="rgb(209,199,19)" fg:x="252" fg:w="1"/><text x="20.3939%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="20.1439%" y="517" width="0.0799%" height="15" fill="rgb(236,224,42)" fg:x="252" fg:w="1"/><text x="20.3939%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="20.1439%" y="501" width="0.0799%" height="15" fill="rgb(246,226,29)" fg:x="252" fg:w="1"/><text x="20.3939%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="20.1439%" y="485" width="0.0799%" height="15" fill="rgb(227,223,11)" fg:x="252" fg:w="1"/><text x="20.3939%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="20.1439%" y="469" width="0.0799%" height="15" fill="rgb(219,7,51)" fg:x="252" fg:w="1"/><text x="20.3939%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="20.1439%" y="453" width="0.0799%" height="15" fill="rgb(245,167,10)" fg:x="252" fg:w="1"/><text x="20.3939%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="20.1439%" y="437" width="0.0799%" height="15" fill="rgb(237,224,16)" fg:x="252" fg:w="1"/><text x="20.3939%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.1439%" y="421" width="0.0799%" height="15" fill="rgb(226,132,13)" fg:x="252" fg:w="1"/><text x="20.3939%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="20.1439%" y="405" width="0.0799%" height="15" fill="rgb(214,140,3)" fg:x="252" fg:w="1"/><text x="20.3939%" y="415.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="20.1439%" y="389" width="0.0799%" height="15" fill="rgb(221,177,4)" fg:x="252" fg:w="1"/><text x="20.3939%" y="399.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="20.1439%" y="373" width="0.0799%" height="15" fill="rgb(238,139,3)" fg:x="252" fg:w="1"/><text x="20.3939%" y="383.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="20.1439%" y="357" width="0.0799%" height="15" fill="rgb(216,17,39)" fg:x="252" fg:w="1"/><text x="20.3939%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (6 samples, 0.48%)</title><rect x="19.8241%" y="757" width="0.4796%" height="15" fill="rgb(238,120,9)" fg:x="248" fg:w="6"/><text x="20.0741%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="19.9041%" y="741" width="0.3997%" height="15" fill="rgb(244,92,53)" fg:x="249" fg:w="5"/><text x="20.1541%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="20.0639%" y="725" width="0.2398%" height="15" fill="rgb(224,148,33)" fg:x="251" fg:w="3"/><text x="20.3139%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="20.0639%" y="709" width="0.2398%" height="15" fill="rgb(243,6,36)" fg:x="251" fg:w="3"/><text x="20.3139%" y="719.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="20.0639%" y="693" width="0.2398%" height="15" fill="rgb(230,102,11)" fg:x="251" fg:w="3"/><text x="20.3139%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="20.0639%" y="677" width="0.2398%" height="15" fill="rgb(234,148,36)" fg:x="251" fg:w="3"/><text x="20.3139%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="20.0639%" y="661" width="0.2398%" height="15" fill="rgb(251,153,25)" fg:x="251" fg:w="3"/><text x="20.3139%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="20.0639%" y="645" width="0.2398%" height="15" fill="rgb(215,129,8)" fg:x="251" fg:w="3"/><text x="20.3139%" y="655.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="20.0639%" y="629" width="0.2398%" height="15" fill="rgb(224,128,35)" fg:x="251" fg:w="3"/><text x="20.3139%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="20.0639%" y="613" width="0.2398%" height="15" fill="rgb(237,56,52)" fg:x="251" fg:w="3"/><text x="20.3139%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="20.0639%" y="597" width="0.2398%" height="15" fill="rgb(234,213,19)" fg:x="251" fg:w="3"/><text x="20.3139%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="20.1439%" y="581" width="0.1599%" height="15" fill="rgb(252,82,23)" fg:x="252" fg:w="2"/><text x="20.3939%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="20.1439%" y="565" width="0.1599%" height="15" fill="rgb(254,201,21)" fg:x="252" fg:w="2"/><text x="20.3939%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="20.2238%" y="549" width="0.0799%" height="15" fill="rgb(250,186,11)" fg:x="253" fg:w="1"/><text x="20.4738%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.2238%" y="533" width="0.0799%" height="15" fill="rgb(211,174,5)" fg:x="253" fg:w="1"/><text x="20.4738%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.2238%" y="517" width="0.0799%" height="15" fill="rgb(214,121,10)" fg:x="253" fg:w="1"/><text x="20.4738%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="20.2238%" y="501" width="0.0799%" height="15" fill="rgb(241,66,2)" fg:x="253" fg:w="1"/><text x="20.4738%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="20.2238%" y="485" width="0.0799%" height="15" fill="rgb(220,167,19)" fg:x="253" fg:w="1"/><text x="20.4738%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="20.2238%" y="469" width="0.0799%" height="15" fill="rgb(231,54,50)" fg:x="253" fg:w="1"/><text x="20.4738%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="20.2238%" y="453" width="0.0799%" height="15" fill="rgb(239,217,53)" fg:x="253" fg:w="1"/><text x="20.4738%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="20.2238%" y="437" width="0.0799%" height="15" fill="rgb(248,8,0)" fg:x="253" fg:w="1"/><text x="20.4738%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="20.2238%" y="421" width="0.0799%" height="15" fill="rgb(229,118,37)" fg:x="253" fg:w="1"/><text x="20.4738%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.2238%" y="405" width="0.0799%" height="15" fill="rgb(253,223,43)" fg:x="253" fg:w="1"/><text x="20.4738%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="20.2238%" y="389" width="0.0799%" height="15" fill="rgb(211,77,36)" fg:x="253" fg:w="1"/><text x="20.4738%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.2238%" y="373" width="0.0799%" height="15" fill="rgb(219,3,53)" fg:x="253" fg:w="1"/><text x="20.4738%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="20.2238%" y="357" width="0.0799%" height="15" fill="rgb(244,45,42)" fg:x="253" fg:w="1"/><text x="20.4738%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="20.2238%" y="341" width="0.0799%" height="15" fill="rgb(225,95,27)" fg:x="253" fg:w="1"/><text x="20.4738%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="20.2238%" y="325" width="0.0799%" height="15" fill="rgb(207,74,8)" fg:x="253" fg:w="1"/><text x="20.4738%" y="335.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="20.3038%" y="741" width="0.0799%" height="15" fill="rgb(243,63,36)" fg:x="254" fg:w="1"/><text x="20.5538%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.3837%" y="741" width="0.0799%" height="15" fill="rgb(211,180,12)" fg:x="255" fg:w="1"/><text x="20.6337%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.4636%" y="709" width="0.0799%" height="15" fill="rgb(254,166,49)" fg:x="256" fg:w="1"/><text x="20.7136%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.4636%" y="693" width="0.0799%" height="15" fill="rgb(205,19,0)" fg:x="256" fg:w="1"/><text x="20.7136%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.4636%" y="725" width="0.1599%" height="15" fill="rgb(224,172,32)" fg:x="256" fg:w="2"/><text x="20.7136%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.5436%" y="709" width="0.0799%" height="15" fill="rgb(254,136,30)" fg:x="257" fg:w="1"/><text x="20.7936%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="20.3038%" y="757" width="0.6395%" height="15" fill="rgb(246,19,35)" fg:x="254" fg:w="8"/><text x="20.5538%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="20.4636%" y="741" width="0.4796%" height="15" fill="rgb(219,24,36)" fg:x="256" fg:w="6"/><text x="20.7136%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="20.6235%" y="725" width="0.3197%" height="15" fill="rgb(251,55,1)" fg:x="258" fg:w="4"/><text x="20.8735%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="20.6235%" y="709" width="0.3197%" height="15" fill="rgb(218,117,39)" fg:x="258" fg:w="4"/><text x="20.8735%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="20.6235%" y="693" width="0.3197%" height="15" fill="rgb(248,169,11)" fg:x="258" fg:w="4"/><text x="20.8735%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="20.6235%" y="677" width="0.3197%" height="15" fill="rgb(244,40,44)" fg:x="258" fg:w="4"/><text x="20.8735%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.7834%" y="661" width="0.1599%" height="15" fill="rgb(234,62,37)" fg:x="260" fg:w="2"/><text x="21.0334%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.7834%" y="645" width="0.1599%" height="15" fill="rgb(207,117,42)" fg:x="260" fg:w="2"/><text x="21.0334%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.8633%" y="629" width="0.0799%" height="15" fill="rgb(213,43,2)" fg:x="261" fg:w="1"/><text x="21.1133%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="20.9432%" y="741" width="0.0799%" height="15" fill="rgb(244,202,51)" fg:x="262" fg:w="1"/><text x="21.1932%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="20.9432%" y="725" width="0.0799%" height="15" fill="rgb(253,174,46)" fg:x="262" fg:w="1"/><text x="21.1932%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9432%" y="709" width="0.0799%" height="15" fill="rgb(251,23,1)" fg:x="262" fg:w="1"/><text x="21.1932%" y="719.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.0232%" y="709" width="0.0799%" height="15" fill="rgb(253,26,1)" fg:x="263" fg:w="1"/><text x="21.2732%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="20.9432%" y="757" width="0.2398%" height="15" fill="rgb(216,89,31)" fg:x="262" fg:w="3"/><text x="21.1932%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="21.0232%" y="741" width="0.1599%" height="15" fill="rgb(209,109,5)" fg:x="263" fg:w="2"/><text x="21.2732%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.0232%" y="725" width="0.1599%" height="15" fill="rgb(229,63,13)" fg:x="263" fg:w="2"/><text x="21.2732%" y="735.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.1031%" y="709" width="0.0799%" height="15" fill="rgb(238,137,54)" fg:x="264" fg:w="1"/><text x="21.3531%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1031%" y="693" width="0.0799%" height="15" fill="rgb(228,1,9)" fg:x="264" fg:w="1"/><text x="21.3531%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.1031%" y="677" width="0.0799%" height="15" fill="rgb(249,120,48)" fg:x="264" fg:w="1"/><text x="21.3531%" y="687.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="21.1831%" y="709" width="0.1599%" height="15" fill="rgb(209,72,36)" fg:x="265" fg:w="2"/><text x="21.4331%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="21.1831%" y="693" width="0.1599%" height="15" fill="rgb(247,98,49)" fg:x="265" fg:w="2"/><text x="21.4331%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="21.2630%" y="677" width="0.0799%" height="15" fill="rgb(233,75,36)" fg:x="266" fg:w="1"/><text x="21.5130%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.2630%" y="661" width="0.0799%" height="15" fill="rgb(225,14,24)" fg:x="266" fg:w="1"/><text x="21.5130%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="21.2630%" y="645" width="0.0799%" height="15" fill="rgb(237,193,20)" fg:x="266" fg:w="1"/><text x="21.5130%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="21.2630%" y="629" width="0.0799%" height="15" fill="rgb(239,122,19)" fg:x="266" fg:w="1"/><text x="21.5130%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.2630%" y="613" width="0.0799%" height="15" fill="rgb(231,220,10)" fg:x="266" fg:w="1"/><text x="21.5130%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="21.2630%" y="597" width="0.0799%" height="15" fill="rgb(220,66,15)" fg:x="266" fg:w="1"/><text x="21.5130%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.3429%" y="693" width="0.2398%" height="15" fill="rgb(215,171,52)" fg:x="267" fg:w="3"/><text x="21.5929%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.3429%" y="677" width="0.2398%" height="15" fill="rgb(241,169,50)" fg:x="267" fg:w="3"/><text x="21.5929%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4229%" y="661" width="0.1599%" height="15" fill="rgb(236,189,0)" fg:x="268" fg:w="2"/><text x="21.6729%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.5028%" y="645" width="0.0799%" height="15" fill="rgb(217,147,20)" fg:x="269" fg:w="1"/><text x="21.7528%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.5028%" y="629" width="0.0799%" height="15" fill="rgb(206,188,39)" fg:x="269" fg:w="1"/><text x="21.7528%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.5028%" y="613" width="0.0799%" height="15" fill="rgb(227,118,25)" fg:x="269" fg:w="1"/><text x="21.7528%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.5028%" y="597" width="0.0799%" height="15" fill="rgb(248,171,40)" fg:x="269" fg:w="1"/><text x="21.7528%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.5028%" y="581" width="0.0799%" height="15" fill="rgb(251,90,54)" fg:x="269" fg:w="1"/><text x="21.7528%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.5028%" y="565" width="0.0799%" height="15" fill="rgb(234,11,46)" fg:x="269" fg:w="1"/><text x="21.7528%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.5028%" y="549" width="0.0799%" height="15" fill="rgb(229,134,13)" fg:x="269" fg:w="1"/><text x="21.7528%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.5028%" y="533" width="0.0799%" height="15" fill="rgb(223,129,3)" fg:x="269" fg:w="1"/><text x="21.7528%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.5028%" y="517" width="0.0799%" height="15" fill="rgb(221,124,13)" fg:x="269" fg:w="1"/><text x="21.7528%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.5028%" y="501" width="0.0799%" height="15" fill="rgb(234,3,18)" fg:x="269" fg:w="1"/><text x="21.7528%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.5028%" y="485" width="0.0799%" height="15" fill="rgb(249,199,20)" fg:x="269" fg:w="1"/><text x="21.7528%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.5028%" y="469" width="0.0799%" height="15" fill="rgb(224,134,6)" fg:x="269" fg:w="1"/><text x="21.7528%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.5827%" y="597" width="0.0799%" height="15" fill="rgb(254,83,26)" fg:x="270" fg:w="1"/><text x="21.8327%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="21.1831%" y="741" width="0.5596%" height="15" fill="rgb(217,88,9)" fg:x="265" fg:w="7"/><text x="21.4331%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.56%)</title><rect x="21.1831%" y="725" width="0.5596%" height="15" fill="rgb(225,73,2)" fg:x="265" fg:w="7"/><text x="21.4331%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="21.3429%" y="709" width="0.3997%" height="15" fill="rgb(226,44,39)" fg:x="267" fg:w="5"/><text x="21.5929%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.5827%" y="693" width="0.1599%" height="15" fill="rgb(228,53,17)" fg:x="270" fg:w="2"/><text x="21.8327%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.5827%" y="677" width="0.1599%" height="15" fill="rgb(212,27,27)" fg:x="270" fg:w="2"/><text x="21.8327%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="21.5827%" y="661" width="0.1599%" height="15" fill="rgb(241,50,6)" fg:x="270" fg:w="2"/><text x="21.8327%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.5827%" y="645" width="0.1599%" height="15" fill="rgb(225,28,51)" fg:x="270" fg:w="2"/><text x="21.8327%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.5827%" y="629" width="0.1599%" height="15" fill="rgb(215,33,16)" fg:x="270" fg:w="2"/><text x="21.8327%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.5827%" y="613" width="0.1599%" height="15" fill="rgb(243,40,39)" fg:x="270" fg:w="2"/><text x="21.8327%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.6627%" y="597" width="0.0799%" height="15" fill="rgb(225,11,42)" fg:x="271" fg:w="1"/><text x="21.9127%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.6627%" y="581" width="0.0799%" height="15" fill="rgb(241,220,38)" fg:x="271" fg:w="1"/><text x="21.9127%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (26 samples, 2.08%)</title><rect x="19.7442%" y="789" width="2.0783%" height="15" fill="rgb(244,52,35)" fg:x="247" fg:w="26"/><text x="19.9942%" y="799.50">p..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (26 samples, 2.08%)</title><rect x="19.7442%" y="773" width="2.0783%" height="15" fill="rgb(246,42,46)" fg:x="247" fg:w="26"/><text x="19.9942%" y="783.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="21.1831%" y="757" width="0.6395%" height="15" fill="rgb(205,184,13)" fg:x="265" fg:w="8"/><text x="21.4331%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="21.7426%" y="741" width="0.0799%" height="15" fill="rgb(209,48,36)" fg:x="272" fg:w="1"/><text x="21.9926%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.7426%" y="725" width="0.0799%" height="15" fill="rgb(244,34,51)" fg:x="272" fg:w="1"/><text x="21.9926%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.8225%" y="741" width="0.0799%" height="15" fill="rgb(221,107,33)" fg:x="273" fg:w="1"/><text x="22.0725%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.9824%" y="725" width="0.0799%" height="15" fill="rgb(224,203,12)" fg:x="275" fg:w="1"/><text x="22.2324%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9824%" y="709" width="0.0799%" height="15" fill="rgb(230,215,18)" fg:x="275" fg:w="1"/><text x="22.2324%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9824%" y="693" width="0.0799%" height="15" fill="rgb(206,185,35)" fg:x="275" fg:w="1"/><text x="22.2324%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.9824%" y="677" width="0.0799%" height="15" fill="rgb(228,140,34)" fg:x="275" fg:w="1"/><text x="22.2324%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.9824%" y="661" width="0.0799%" height="15" fill="rgb(208,93,13)" fg:x="275" fg:w="1"/><text x="22.2324%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.9824%" y="645" width="0.0799%" height="15" fill="rgb(221,193,39)" fg:x="275" fg:w="1"/><text x="22.2324%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.9824%" y="629" width="0.0799%" height="15" fill="rgb(241,132,34)" fg:x="275" fg:w="1"/><text x="22.2324%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.9824%" y="613" width="0.0799%" height="15" fill="rgb(221,141,10)" fg:x="275" fg:w="1"/><text x="22.2324%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.9824%" y="597" width="0.0799%" height="15" fill="rgb(226,90,31)" fg:x="275" fg:w="1"/><text x="22.2324%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.9824%" y="581" width="0.0799%" height="15" fill="rgb(243,75,5)" fg:x="275" fg:w="1"/><text x="22.2324%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.9824%" y="565" width="0.0799%" height="15" fill="rgb(227,156,21)" fg:x="275" fg:w="1"/><text x="22.2324%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.9824%" y="549" width="0.0799%" height="15" fill="rgb(250,195,8)" fg:x="275" fg:w="1"/><text x="22.2324%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.9824%" y="533" width="0.0799%" height="15" fill="rgb(220,134,5)" fg:x="275" fg:w="1"/><text x="22.2324%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="21.8225%" y="789" width="0.3997%" height="15" fill="rgb(246,106,34)" fg:x="273" fg:w="5"/><text x="22.0725%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.40%)</title><rect x="21.8225%" y="773" width="0.3997%" height="15" fill="rgb(205,1,4)" fg:x="273" fg:w="5"/><text x="22.0725%" y="783.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="21.8225%" y="757" width="0.3997%" height="15" fill="rgb(224,151,29)" fg:x="273" fg:w="5"/><text x="22.0725%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="21.9025%" y="741" width="0.3197%" height="15" fill="rgb(251,196,0)" fg:x="274" fg:w="4"/><text x="22.1525%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="22.0624%" y="725" width="0.1599%" height="15" fill="rgb(212,127,0)" fg:x="276" fg:w="2"/><text x="22.3124%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="22.0624%" y="709" width="0.1599%" height="15" fill="rgb(236,71,53)" fg:x="276" fg:w="2"/><text x="22.3124%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.1423%" y="693" width="0.0799%" height="15" fill="rgb(227,99,0)" fg:x="277" fg:w="1"/><text x="22.3923%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.1423%" y="677" width="0.0799%" height="15" fill="rgb(239,89,21)" fg:x="277" fg:w="1"/><text x="22.3923%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.3022%" y="725" width="0.0799%" height="15" fill="rgb(243,122,19)" fg:x="279" fg:w="1"/><text x="22.5522%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="22.2222%" y="773" width="0.2398%" height="15" fill="rgb(229,192,45)" fg:x="278" fg:w="3"/><text x="22.4722%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="22.2222%" y="757" width="0.2398%" height="15" fill="rgb(235,165,35)" fg:x="278" fg:w="3"/><text x="22.4722%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="22.2222%" y="741" width="0.2398%" height="15" fill="rgb(253,202,0)" fg:x="278" fg:w="3"/><text x="22.4722%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.3821%" y="725" width="0.0799%" height="15" fill="rgb(235,51,20)" fg:x="280" fg:w="1"/><text x="22.6321%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.3821%" y="709" width="0.0799%" height="15" fill="rgb(218,95,46)" fg:x="280" fg:w="1"/><text x="22.6321%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.3821%" y="693" width="0.0799%" height="15" fill="rgb(212,81,10)" fg:x="280" fg:w="1"/><text x="22.6321%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.3821%" y="677" width="0.0799%" height="15" fill="rgb(240,59,0)" fg:x="280" fg:w="1"/><text x="22.6321%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.3821%" y="661" width="0.0799%" height="15" fill="rgb(212,191,42)" fg:x="280" fg:w="1"/><text x="22.6321%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.3821%" y="645" width="0.0799%" height="15" fill="rgb(233,140,3)" fg:x="280" fg:w="1"/><text x="22.6321%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="22.4620%" y="773" width="0.0799%" height="15" fill="rgb(215,69,23)" fg:x="281" fg:w="1"/><text x="22.7120%" y="783.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="22.4620%" y="757" width="0.0799%" height="15" fill="rgb(240,202,20)" fg:x="281" fg:w="1"/><text x="22.7120%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="22.4620%" y="741" width="0.0799%" height="15" fill="rgb(209,146,50)" fg:x="281" fg:w="1"/><text x="22.7120%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4620%" y="725" width="0.0799%" height="15" fill="rgb(253,102,54)" fg:x="281" fg:w="1"/><text x="22.7120%" y="735.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.6219%" y="725" width="0.1599%" height="15" fill="rgb(250,173,47)" fg:x="283" fg:w="2"/><text x="22.8719%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.6219%" y="709" width="0.1599%" height="15" fill="rgb(232,142,7)" fg:x="283" fg:w="2"/><text x="22.8719%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.6219%" y="693" width="0.1599%" height="15" fill="rgb(230,157,47)" fg:x="283" fg:w="2"/><text x="22.8719%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="22.6219%" y="677" width="0.1599%" height="15" fill="rgb(214,177,35)" fg:x="283" fg:w="2"/><text x="22.8719%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="22.6219%" y="661" width="0.1599%" height="15" fill="rgb(234,119,46)" fg:x="283" fg:w="2"/><text x="22.8719%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="22.6219%" y="645" width="0.1599%" height="15" fill="rgb(241,180,50)" fg:x="283" fg:w="2"/><text x="22.8719%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="22.6219%" y="629" width="0.1599%" height="15" fill="rgb(221,54,25)" fg:x="283" fg:w="2"/><text x="22.8719%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="22.6219%" y="613" width="0.1599%" height="15" fill="rgb(209,157,44)" fg:x="283" fg:w="2"/><text x="22.8719%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="22.6219%" y="597" width="0.1599%" height="15" fill="rgb(246,115,41)" fg:x="283" fg:w="2"/><text x="22.8719%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="22.6219%" y="581" width="0.1599%" height="15" fill="rgb(229,86,1)" fg:x="283" fg:w="2"/><text x="22.8719%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="22.6219%" y="565" width="0.1599%" height="15" fill="rgb(240,108,53)" fg:x="283" fg:w="2"/><text x="22.8719%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="22.6219%" y="549" width="0.1599%" height="15" fill="rgb(227,134,2)" fg:x="283" fg:w="2"/><text x="22.8719%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="22.6219%" y="533" width="0.1599%" height="15" fill="rgb(213,129,25)" fg:x="283" fg:w="2"/><text x="22.8719%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="22.7818%" y="709" width="0.0799%" height="15" fill="rgb(226,35,21)" fg:x="285" fg:w="1"/><text x="23.0318%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="22.7818%" y="693" width="0.0799%" height="15" fill="rgb(208,129,26)" fg:x="285" fg:w="1"/><text x="23.0318%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7818%" y="677" width="0.0799%" height="15" fill="rgb(224,83,6)" fg:x="285" fg:w="1"/><text x="23.0318%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.7818%" y="661" width="0.0799%" height="15" fill="rgb(227,52,39)" fg:x="285" fg:w="1"/><text x="23.0318%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="22.8617%" y="677" width="0.1599%" height="15" fill="rgb(241,30,17)" fg:x="286" fg:w="2"/><text x="23.1117%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="22.7818%" y="725" width="0.3197%" height="15" fill="rgb(246,186,42)" fg:x="285" fg:w="4"/><text x="23.0318%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="22.8617%" y="709" width="0.2398%" height="15" fill="rgb(221,169,15)" fg:x="286" fg:w="3"/><text x="23.1117%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="22.8617%" y="693" width="0.2398%" height="15" fill="rgb(235,108,21)" fg:x="286" fg:w="3"/><text x="23.1117%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.0216%" y="677" width="0.0799%" height="15" fill="rgb(219,148,30)" fg:x="288" fg:w="1"/><text x="23.2716%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.1015%" y="677" width="0.0799%" height="15" fill="rgb(220,109,5)" fg:x="289" fg:w="1"/><text x="23.3515%" y="687.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="23.1015%" y="725" width="0.1599%" height="15" fill="rgb(213,203,48)" fg:x="289" fg:w="2"/><text x="23.3515%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="23.1015%" y="709" width="0.1599%" height="15" fill="rgb(244,71,33)" fg:x="289" fg:w="2"/><text x="23.3515%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.1015%" y="693" width="0.1599%" height="15" fill="rgb(209,23,2)" fg:x="289" fg:w="2"/><text x="23.3515%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.1815%" y="677" width="0.0799%" height="15" fill="rgb(219,97,7)" fg:x="290" fg:w="1"/><text x="23.4315%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1815%" y="661" width="0.0799%" height="15" fill="rgb(216,161,23)" fg:x="290" fg:w="1"/><text x="23.4315%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1815%" y="645" width="0.0799%" height="15" fill="rgb(207,45,42)" fg:x="290" fg:w="1"/><text x="23.4315%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1815%" y="629" width="0.0799%" height="15" fill="rgb(241,61,4)" fg:x="290" fg:w="1"/><text x="23.4315%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1815%" y="613" width="0.0799%" height="15" fill="rgb(236,170,1)" fg:x="290" fg:w="1"/><text x="23.4315%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.1815%" y="597" width="0.0799%" height="15" fill="rgb(239,72,5)" fg:x="290" fg:w="1"/><text x="23.4315%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.1815%" y="581" width="0.0799%" height="15" fill="rgb(214,13,50)" fg:x="290" fg:w="1"/><text x="23.4315%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.1815%" y="565" width="0.0799%" height="15" fill="rgb(224,88,9)" fg:x="290" fg:w="1"/><text x="23.4315%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="23.1815%" y="549" width="0.0799%" height="15" fill="rgb(238,192,34)" fg:x="290" fg:w="1"/><text x="23.4315%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.1815%" y="533" width="0.0799%" height="15" fill="rgb(217,203,50)" fg:x="290" fg:w="1"/><text x="23.4315%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="23.4213%" y="693" width="0.0799%" height="15" fill="rgb(241,123,32)" fg:x="293" fg:w="1"/><text x="23.6713%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="23.4213%" y="677" width="0.0799%" height="15" fill="rgb(248,151,39)" fg:x="293" fg:w="1"/><text x="23.6713%" y="687.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="23.4213%" y="661" width="0.0799%" height="15" fill="rgb(208,89,6)" fg:x="293" fg:w="1"/><text x="23.6713%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.5012%" y="693" width="0.0799%" height="15" fill="rgb(254,43,26)" fg:x="294" fg:w="1"/><text x="23.7512%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.5012%" y="677" width="0.0799%" height="15" fill="rgb(216,158,13)" fg:x="294" fg:w="1"/><text x="23.7512%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.5012%" y="661" width="0.0799%" height="15" fill="rgb(212,47,37)" fg:x="294" fg:w="1"/><text x="23.7512%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.5012%" y="645" width="0.0799%" height="15" fill="rgb(254,16,10)" fg:x="294" fg:w="1"/><text x="23.7512%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.5012%" y="629" width="0.0799%" height="15" fill="rgb(223,228,16)" fg:x="294" fg:w="1"/><text x="23.7512%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.5012%" y="613" width="0.0799%" height="15" fill="rgb(249,108,50)" fg:x="294" fg:w="1"/><text x="23.7512%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.5012%" y="597" width="0.0799%" height="15" fill="rgb(208,220,5)" fg:x="294" fg:w="1"/><text x="23.7512%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.5012%" y="581" width="0.0799%" height="15" fill="rgb(217,89,48)" fg:x="294" fg:w="1"/><text x="23.7512%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (2 samples, 0.16%)</title><rect x="23.5811%" y="677" width="0.1599%" height="15" fill="rgb(212,113,41)" fg:x="295" fg:w="2"/><text x="23.8311%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="23.5811%" y="661" width="0.1599%" height="15" fill="rgb(231,127,5)" fg:x="295" fg:w="2"/><text x="23.8311%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="23.5811%" y="645" width="0.1599%" height="15" fill="rgb(217,141,17)" fg:x="295" fg:w="2"/><text x="23.8311%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="23.7410%" y="677" width="0.0799%" height="15" fill="rgb(245,125,54)" fg:x="297" fg:w="1"/><text x="23.9910%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.7410%" y="661" width="0.0799%" height="15" fill="rgb(248,125,3)" fg:x="297" fg:w="1"/><text x="23.9910%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7410%" y="645" width="0.0799%" height="15" fill="rgb(236,119,51)" fg:x="297" fg:w="1"/><text x="23.9910%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7410%" y="629" width="0.0799%" height="15" fill="rgb(239,99,8)" fg:x="297" fg:w="1"/><text x="23.9910%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7410%" y="613" width="0.0799%" height="15" fill="rgb(224,228,4)" fg:x="297" fg:w="1"/><text x="23.9910%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7410%" y="597" width="0.0799%" height="15" fill="rgb(220,131,45)" fg:x="297" fg:w="1"/><text x="23.9910%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7410%" y="581" width="0.0799%" height="15" fill="rgb(215,62,5)" fg:x="297" fg:w="1"/><text x="23.9910%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.7410%" y="565" width="0.0799%" height="15" fill="rgb(253,12,24)" fg:x="297" fg:w="1"/><text x="23.9910%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.7410%" y="549" width="0.0799%" height="15" fill="rgb(248,120,50)" fg:x="297" fg:w="1"/><text x="23.9910%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.7410%" y="533" width="0.0799%" height="15" fill="rgb(245,194,10)" fg:x="297" fg:w="1"/><text x="23.9910%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7410%" y="517" width="0.0799%" height="15" fill="rgb(241,149,38)" fg:x="297" fg:w="1"/><text x="23.9910%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7410%" y="501" width="0.0799%" height="15" fill="rgb(219,215,7)" fg:x="297" fg:w="1"/><text x="23.9910%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.7410%" y="485" width="0.0799%" height="15" fill="rgb(208,120,31)" fg:x="297" fg:w="1"/><text x="23.9910%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.7410%" y="469" width="0.0799%" height="15" fill="rgb(244,30,8)" fg:x="297" fg:w="1"/><text x="23.9910%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.7410%" y="453" width="0.0799%" height="15" fill="rgb(238,35,44)" fg:x="297" fg:w="1"/><text x="23.9910%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.7410%" y="437" width="0.0799%" height="15" fill="rgb(243,218,37)" fg:x="297" fg:w="1"/><text x="23.9910%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7410%" y="421" width="0.0799%" height="15" fill="rgb(218,169,10)" fg:x="297" fg:w="1"/><text x="23.9910%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="23.5811%" y="693" width="0.3997%" height="15" fill="rgb(221,144,10)" fg:x="295" fg:w="5"/><text x="23.8311%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="23.8209%" y="677" width="0.1599%" height="15" fill="rgb(226,41,38)" fg:x="298" fg:w="2"/><text x="24.0709%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9009%" y="661" width="0.0799%" height="15" fill="rgb(228,3,1)" fg:x="299" fg:w="1"/><text x="24.1509%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="23.9808%" y="677" width="0.1599%" height="15" fill="rgb(209,129,12)" fg:x="300" fg:w="2"/><text x="24.2308%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0608%" y="661" width="0.0799%" height="15" fill="rgb(213,136,33)" fg:x="301" fg:w="1"/><text x="24.3108%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0608%" y="645" width="0.0799%" height="15" fill="rgb(209,181,29)" fg:x="301" fg:w="1"/><text x="24.3108%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.0608%" y="629" width="0.0799%" height="15" fill="rgb(234,173,18)" fg:x="301" fg:w="1"/><text x="24.3108%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.0608%" y="613" width="0.0799%" height="15" fill="rgb(227,73,47)" fg:x="301" fg:w="1"/><text x="24.3108%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.0608%" y="597" width="0.0799%" height="15" fill="rgb(234,9,34)" fg:x="301" fg:w="1"/><text x="24.3108%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.0608%" y="581" width="0.0799%" height="15" fill="rgb(235,172,15)" fg:x="301" fg:w="1"/><text x="24.3108%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.0608%" y="565" width="0.0799%" height="15" fill="rgb(245,61,2)" fg:x="301" fg:w="1"/><text x="24.3108%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.0608%" y="549" width="0.0799%" height="15" fill="rgb(238,39,47)" fg:x="301" fg:w="1"/><text x="24.3108%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.0608%" y="533" width="0.0799%" height="15" fill="rgb(234,37,24)" fg:x="301" fg:w="1"/><text x="24.3108%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.0608%" y="517" width="0.0799%" height="15" fill="rgb(248,223,24)" fg:x="301" fg:w="1"/><text x="24.3108%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.0608%" y="501" width="0.0799%" height="15" fill="rgb(223,12,15)" fg:x="301" fg:w="1"/><text x="24.3108%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0608%" y="485" width="0.0799%" height="15" fill="rgb(249,6,3)" fg:x="301" fg:w="1"/><text x="24.3108%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.1407%" y="613" width="0.0799%" height="15" fill="rgb(237,105,33)" fg:x="302" fg:w="1"/><text x="24.3907%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.1407%" y="597" width="0.0799%" height="15" fill="rgb(252,208,35)" fg:x="302" fg:w="1"/><text x="24.3907%" y="607.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="24.1407%" y="645" width="0.3197%" height="15" fill="rgb(215,181,35)" fg:x="302" fg:w="4"/><text x="24.3907%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="24.1407%" y="629" width="0.3197%" height="15" fill="rgb(246,212,3)" fg:x="302" fg:w="4"/><text x="24.3907%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="24.2206%" y="613" width="0.2398%" height="15" fill="rgb(247,156,24)" fg:x="303" fg:w="3"/><text x="24.4706%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="24.2206%" y="597" width="0.2398%" height="15" fill="rgb(248,9,31)" fg:x="303" fg:w="3"/><text x="24.4706%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="24.2206%" y="581" width="0.2398%" height="15" fill="rgb(234,26,45)" fg:x="303" fg:w="3"/><text x="24.4706%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="24.2206%" y="565" width="0.2398%" height="15" fill="rgb(249,11,32)" fg:x="303" fg:w="3"/><text x="24.4706%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="24.2206%" y="549" width="0.2398%" height="15" fill="rgb(249,162,33)" fg:x="303" fg:w="3"/><text x="24.4706%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.3006%" y="533" width="0.1599%" height="15" fill="rgb(232,4,32)" fg:x="304" fg:w="2"/><text x="24.5506%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.3006%" y="517" width="0.1599%" height="15" fill="rgb(212,5,45)" fg:x="304" fg:w="2"/><text x="24.5506%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="24.3805%" y="501" width="0.0799%" height="15" fill="rgb(227,95,13)" fg:x="305" fg:w="1"/><text x="24.6305%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5404%" y="629" width="0.0799%" height="15" fill="rgb(223,205,10)" fg:x="307" fg:w="1"/><text x="24.7904%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5404%" y="613" width="0.0799%" height="15" fill="rgb(222,178,8)" fg:x="307" fg:w="1"/><text x="24.7904%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5404%" y="597" width="0.0799%" height="15" fill="rgb(216,13,22)" fg:x="307" fg:w="1"/><text x="24.7904%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5404%" y="581" width="0.0799%" height="15" fill="rgb(240,167,12)" fg:x="307" fg:w="1"/><text x="24.7904%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5404%" y="565" width="0.0799%" height="15" fill="rgb(235,68,35)" fg:x="307" fg:w="1"/><text x="24.7904%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.5404%" y="549" width="0.0799%" height="15" fill="rgb(253,40,27)" fg:x="307" fg:w="1"/><text x="24.7904%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.5404%" y="533" width="0.0799%" height="15" fill="rgb(214,19,28)" fg:x="307" fg:w="1"/><text x="24.7904%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.5404%" y="517" width="0.0799%" height="15" fill="rgb(210,167,45)" fg:x="307" fg:w="1"/><text x="24.7904%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.5404%" y="501" width="0.0799%" height="15" fill="rgb(232,97,40)" fg:x="307" fg:w="1"/><text x="24.7904%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.5404%" y="485" width="0.0799%" height="15" fill="rgb(250,35,23)" fg:x="307" fg:w="1"/><text x="24.7904%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.5404%" y="469" width="0.0799%" height="15" fill="rgb(248,47,53)" fg:x="307" fg:w="1"/><text x="24.7904%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.5404%" y="453" width="0.0799%" height="15" fill="rgb(226,58,50)" fg:x="307" fg:w="1"/><text x="24.7904%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.5404%" y="437" width="0.0799%" height="15" fill="rgb(217,105,26)" fg:x="307" fg:w="1"/><text x="24.7904%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.5404%" y="421" width="0.0799%" height="15" fill="rgb(208,64,1)" fg:x="307" fg:w="1"/><text x="24.7904%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5404%" y="405" width="0.0799%" height="15" fill="rgb(214,80,1)" fg:x="307" fg:w="1"/><text x="24.7904%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.56%)</title><rect x="24.1407%" y="661" width="0.5596%" height="15" fill="rgb(206,175,26)" fg:x="302" fg:w="7"/><text x="24.3907%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="24.4604%" y="645" width="0.2398%" height="15" fill="rgb(235,156,37)" fg:x="306" fg:w="3"/><text x="24.7104%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.6203%" y="629" width="0.0799%" height="15" fill="rgb(213,100,9)" fg:x="308" fg:w="1"/><text x="24.8703%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.6203%" y="613" width="0.0799%" height="15" fill="rgb(241,15,13)" fg:x="308" fg:w="1"/><text x="24.8703%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.6203%" y="597" width="0.0799%" height="15" fill="rgb(205,97,43)" fg:x="308" fg:w="1"/><text x="24.8703%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.6203%" y="581" width="0.0799%" height="15" fill="rgb(216,106,32)" fg:x="308" fg:w="1"/><text x="24.8703%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6203%" y="565" width="0.0799%" height="15" fill="rgb(226,200,8)" fg:x="308" fg:w="1"/><text x="24.8703%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.52%)</title><rect x="23.2614%" y="709" width="1.5188%" height="15" fill="rgb(244,54,29)" fg:x="291" fg:w="19"/><text x="23.5114%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="23.9808%" y="693" width="0.7994%" height="15" fill="rgb(252,169,12)" fg:x="300" fg:w="10"/><text x="24.2308%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (8 samples, 0.64%)</title><rect x="24.1407%" y="677" width="0.6395%" height="15" fill="rgb(231,199,11)" fg:x="302" fg:w="8"/><text x="24.3907%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="24.7002%" y="661" width="0.0799%" height="15" fill="rgb(233,191,18)" fg:x="309" fg:w="1"/><text x="24.9502%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7002%" y="645" width="0.0799%" height="15" fill="rgb(215,83,47)" fg:x="309" fg:w="1"/><text x="24.9502%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7002%" y="629" width="0.0799%" height="15" fill="rgb(251,67,19)" fg:x="309" fg:w="1"/><text x="24.9502%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.7002%" y="613" width="0.0799%" height="15" fill="rgb(240,7,20)" fg:x="309" fg:w="1"/><text x="24.9502%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.7002%" y="597" width="0.0799%" height="15" fill="rgb(210,150,26)" fg:x="309" fg:w="1"/><text x="24.9502%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.7002%" y="581" width="0.0799%" height="15" fill="rgb(228,75,42)" fg:x="309" fg:w="1"/><text x="24.9502%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.7002%" y="565" width="0.0799%" height="15" fill="rgb(237,134,48)" fg:x="309" fg:w="1"/><text x="24.9502%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.7002%" y="549" width="0.0799%" height="15" fill="rgb(205,80,50)" fg:x="309" fg:w="1"/><text x="24.9502%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.7002%" y="533" width="0.0799%" height="15" fill="rgb(217,74,48)" fg:x="309" fg:w="1"/><text x="24.9502%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.7002%" y="517" width="0.0799%" height="15" fill="rgb(205,82,50)" fg:x="309" fg:w="1"/><text x="24.9502%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.7002%" y="501" width="0.0799%" height="15" fill="rgb(228,1,33)" fg:x="309" fg:w="1"/><text x="24.9502%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.7002%" y="485" width="0.0799%" height="15" fill="rgb(214,50,23)" fg:x="309" fg:w="1"/><text x="24.9502%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7002%" y="469" width="0.0799%" height="15" fill="rgb(210,62,9)" fg:x="309" fg:w="1"/><text x="24.9502%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.8601%" y="629" width="0.1599%" height="15" fill="rgb(210,104,37)" fg:x="311" fg:w="2"/><text x="25.1101%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.8601%" y="613" width="0.1599%" height="15" fill="rgb(232,104,43)" fg:x="311" fg:w="2"/><text x="25.1101%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.8601%" y="597" width="0.1599%" height="15" fill="rgb(244,52,6)" fg:x="311" fg:w="2"/><text x="25.1101%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="25.0200%" y="629" width="0.0799%" height="15" fill="rgb(211,174,52)" fg:x="313" fg:w="1"/><text x="25.2700%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.0200%" y="613" width="0.0799%" height="15" fill="rgb(229,48,4)" fg:x="313" fg:w="1"/><text x="25.2700%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.0200%" y="597" width="0.0799%" height="15" fill="rgb(205,155,16)" fg:x="313" fg:w="1"/><text x="25.2700%" y="607.50"></text></g><g><title>plugins_core::build::Build::leads_to (24 samples, 1.92%)</title><rect x="23.2614%" y="725" width="1.9185%" height="15" fill="rgb(211,141,53)" fg:x="291" fg:w="24"/><text x="23.5114%" y="735.50">p..</text></g><g><title>plugins_core::tools::leads_to (5 samples, 0.40%)</title><rect x="24.7802%" y="709" width="0.3997%" height="15" fill="rgb(240,148,11)" fg:x="310" fg:w="5"/><text x="25.0302%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="24.7802%" y="693" width="0.3997%" height="15" fill="rgb(214,45,23)" fg:x="310" fg:w="5"/><text x="25.0302%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="24.7802%" y="677" width="0.3997%" height="15" fill="rgb(248,74,26)" fg:x="310" fg:w="5"/><text x="25.0302%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="24.7802%" y="661" width="0.3997%" height="15" fill="rgb(218,121,16)" fg:x="310" fg:w="5"/><text x="25.0302%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="24.7802%" y="645" width="0.3997%" height="15" fill="rgb(218,10,47)" fg:x="310" fg:w="5"/><text x="25.0302%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.0999%" y="629" width="0.0799%" height="15" fill="rgb(227,99,14)" fg:x="314" fg:w="1"/><text x="25.3499%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.0999%" y="613" width="0.0799%" height="15" fill="rgb(229,83,46)" fg:x="314" fg:w="1"/><text x="25.3499%" y="623.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="25.1799%" y="693" width="0.1599%" height="15" fill="rgb(228,25,1)" fg:x="315" fg:w="2"/><text x="25.4299%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="25.1799%" y="677" width="0.1599%" height="15" fill="rgb(252,190,15)" fg:x="315" fg:w="2"/><text x="25.4299%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="25.1799%" y="661" width="0.1599%" height="15" fill="rgb(213,103,51)" fg:x="315" fg:w="2"/><text x="25.4299%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.2598%" y="645" width="0.0799%" height="15" fill="rgb(220,38,44)" fg:x="316" fg:w="1"/><text x="25.5098%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="25.2598%" y="629" width="0.0799%" height="15" fill="rgb(210,45,26)" fg:x="316" fg:w="1"/><text x="25.5098%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="25.2598%" y="613" width="0.0799%" height="15" fill="rgb(205,95,48)" fg:x="316" fg:w="1"/><text x="25.5098%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="25.2598%" y="597" width="0.0799%" height="15" fill="rgb(225,179,37)" fg:x="316" fg:w="1"/><text x="25.5098%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (36 samples, 2.88%)</title><rect x="22.5420%" y="773" width="2.8777%" height="15" fill="rgb(230,209,3)" fg:x="282" fg:w="36"/><text x="22.7920%" y="783.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 2.88%)</title><rect x="22.5420%" y="757" width="2.8777%" height="15" fill="rgb(248,12,46)" fg:x="282" fg:w="36"/><text x="22.7920%" y="767.50">&lt;a..</text></g><g><title>plugins_core::build::QuickThing::make (35 samples, 2.80%)</title><rect x="22.6219%" y="741" width="2.7978%" height="15" fill="rgb(234,18,0)" fg:x="283" fg:w="35"/><text x="22.8719%" y="751.50">pl..</text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="25.1799%" y="725" width="0.2398%" height="15" fill="rgb(238,197,14)" fg:x="315" fg:w="3"/><text x="25.4299%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="25.1799%" y="709" width="0.2398%" height="15" fill="rgb(251,162,48)" fg:x="315" fg:w="3"/><text x="25.4299%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.3397%" y="693" width="0.0799%" height="15" fill="rgb(237,73,42)" fg:x="317" fg:w="1"/><text x="25.5897%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.3397%" y="677" width="0.0799%" height="15" fill="rgb(211,108,8)" fg:x="317" fg:w="1"/><text x="25.5897%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.3397%" y="661" width="0.0799%" height="15" fill="rgb(213,45,22)" fg:x="317" fg:w="1"/><text x="25.5897%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.3397%" y="645" width="0.0799%" height="15" fill="rgb(252,154,5)" fg:x="317" fg:w="1"/><text x="25.5897%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.3397%" y="629" width="0.0799%" height="15" fill="rgb(221,79,52)" fg:x="317" fg:w="1"/><text x="25.5897%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.3397%" y="613" width="0.0799%" height="15" fill="rgb(229,220,36)" fg:x="317" fg:w="1"/><text x="25.5897%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.3397%" y="597" width="0.0799%" height="15" fill="rgb(211,17,16)" fg:x="317" fg:w="1"/><text x="25.5897%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="25.3397%" y="581" width="0.0799%" height="15" fill="rgb(222,55,31)" fg:x="317" fg:w="1"/><text x="25.5897%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="25.3397%" y="565" width="0.0799%" height="15" fill="rgb(221,221,31)" fg:x="317" fg:w="1"/><text x="25.5897%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="25.4197%" y="773" width="0.0799%" height="15" fill="rgb(227,168,26)" fg:x="318" fg:w="1"/><text x="25.6697%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="25.4197%" y="757" width="0.0799%" height="15" fill="rgb(224,139,9)" fg:x="318" fg:w="1"/><text x="25.6697%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="25.4996%" y="773" width="0.0799%" height="15" fill="rgb(254,172,0)" fg:x="319" fg:w="1"/><text x="25.7496%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.4996%" y="757" width="0.0799%" height="15" fill="rgb(235,203,1)" fg:x="319" fg:w="1"/><text x="25.7496%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="25.5795%" y="757" width="0.0799%" height="15" fill="rgb(216,205,24)" fg:x="320" fg:w="1"/><text x="25.8295%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="25.6595%" y="757" width="0.0799%" height="15" fill="rgb(233,24,6)" fg:x="321" fg:w="1"/><text x="25.9095%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.6595%" y="741" width="0.0799%" height="15" fill="rgb(244,110,9)" fg:x="321" fg:w="1"/><text x="25.9095%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.6595%" y="725" width="0.0799%" height="15" fill="rgb(239,222,42)" fg:x="321" fg:w="1"/><text x="25.9095%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.6595%" y="709" width="0.0799%" height="15" fill="rgb(218,145,13)" fg:x="321" fg:w="1"/><text x="25.9095%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.6595%" y="693" width="0.0799%" height="15" fill="rgb(207,69,11)" fg:x="321" fg:w="1"/><text x="25.9095%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.6595%" y="677" width="0.0799%" height="15" fill="rgb(220,223,22)" fg:x="321" fg:w="1"/><text x="25.9095%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.6595%" y="661" width="0.0799%" height="15" fill="rgb(245,102,5)" fg:x="321" fg:w="1"/><text x="25.9095%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.6595%" y="645" width="0.0799%" height="15" fill="rgb(211,148,2)" fg:x="321" fg:w="1"/><text x="25.9095%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.6595%" y="629" width="0.0799%" height="15" fill="rgb(241,13,44)" fg:x="321" fg:w="1"/><text x="25.9095%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.6595%" y="613" width="0.0799%" height="15" fill="rgb(219,137,21)" fg:x="321" fg:w="1"/><text x="25.9095%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.6595%" y="597" width="0.0799%" height="15" fill="rgb(242,206,5)" fg:x="321" fg:w="1"/><text x="25.9095%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.6595%" y="581" width="0.0799%" height="15" fill="rgb(217,114,22)" fg:x="321" fg:w="1"/><text x="25.9095%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.6595%" y="565" width="0.0799%" height="15" fill="rgb(253,206,42)" fg:x="321" fg:w="1"/><text x="25.9095%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="25.7394%" y="709" width="0.0799%" height="15" fill="rgb(236,102,18)" fg:x="322" fg:w="1"/><text x="25.9894%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="25.7394%" y="693" width="0.0799%" height="15" fill="rgb(208,59,49)" fg:x="322" fg:w="1"/><text x="25.9894%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="25.7394%" y="677" width="0.0799%" height="15" fill="rgb(215,194,28)" fg:x="322" fg:w="1"/><text x="25.9894%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="25.8193%" y="677" width="0.1599%" height="15" fill="rgb(243,207,11)" fg:x="323" fg:w="2"/><text x="26.0693%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="25.8193%" y="661" width="0.1599%" height="15" fill="rgb(254,179,35)" fg:x="323" fg:w="2"/><text x="26.0693%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="25.8193%" y="645" width="0.1599%" height="15" fill="rgb(235,97,3)" fg:x="323" fg:w="2"/><text x="26.0693%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="25.8193%" y="629" width="0.1599%" height="15" fill="rgb(215,155,33)" fg:x="323" fg:w="2"/><text x="26.0693%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="25.8193%" y="613" width="0.1599%" height="15" fill="rgb(223,128,12)" fg:x="323" fg:w="2"/><text x="26.0693%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="25.8193%" y="597" width="0.1599%" height="15" fill="rgb(208,157,18)" fg:x="323" fg:w="2"/><text x="26.0693%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="25.8193%" y="581" width="0.1599%" height="15" fill="rgb(249,70,54)" fg:x="323" fg:w="2"/><text x="26.0693%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="25.8193%" y="565" width="0.1599%" height="15" fill="rgb(244,118,24)" fg:x="323" fg:w="2"/><text x="26.0693%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="25.8193%" y="549" width="0.1599%" height="15" fill="rgb(211,54,0)" fg:x="323" fg:w="2"/><text x="26.0693%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="25.8193%" y="533" width="0.1599%" height="15" fill="rgb(245,137,45)" fg:x="323" fg:w="2"/><text x="26.0693%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="25.8193%" y="517" width="0.1599%" height="15" fill="rgb(232,154,31)" fg:x="323" fg:w="2"/><text x="26.0693%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.8193%" y="501" width="0.1599%" height="15" fill="rgb(253,6,39)" fg:x="323" fg:w="2"/><text x="26.0693%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="25.9792%" y="677" width="0.0799%" height="15" fill="rgb(234,183,24)" fg:x="325" fg:w="1"/><text x="26.2292%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.9792%" y="661" width="0.0799%" height="15" fill="rgb(252,84,40)" fg:x="325" fg:w="1"/><text x="26.2292%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.9792%" y="645" width="0.0799%" height="15" fill="rgb(224,65,2)" fg:x="325" fg:w="1"/><text x="26.2292%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.9792%" y="629" width="0.0799%" height="15" fill="rgb(229,38,24)" fg:x="325" fg:w="1"/><text x="26.2292%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.9792%" y="613" width="0.0799%" height="15" fill="rgb(218,131,50)" fg:x="325" fg:w="1"/><text x="26.2292%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="26.0592%" y="645" width="0.2398%" height="15" fill="rgb(233,106,18)" fg:x="326" fg:w="3"/><text x="26.3092%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="26.0592%" y="629" width="0.2398%" height="15" fill="rgb(220,216,11)" fg:x="326" fg:w="3"/><text x="26.3092%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.1391%" y="613" width="0.1599%" height="15" fill="rgb(251,100,45)" fg:x="327" fg:w="2"/><text x="26.3891%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.2190%" y="597" width="0.0799%" height="15" fill="rgb(235,143,32)" fg:x="328" fg:w="1"/><text x="26.4690%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="26.0592%" y="661" width="0.3197%" height="15" fill="rgb(248,124,34)" fg:x="326" fg:w="4"/><text x="26.3092%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.2990%" y="645" width="0.0799%" height="15" fill="rgb(225,221,4)" fg:x="329" fg:w="1"/><text x="26.5490%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="26.8585%" y="597" width="0.3997%" height="15" fill="rgb(242,27,43)" fg:x="336" fg:w="5"/><text x="27.1085%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.72%)</title><rect x="26.6187%" y="645" width="0.7194%" height="15" fill="rgb(227,54,8)" fg:x="333" fg:w="9"/><text x="26.8687%" y="655.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="26.7786%" y="629" width="0.5596%" height="15" fill="rgb(253,139,49)" fg:x="335" fg:w="7"/><text x="27.0286%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="26.8585%" y="613" width="0.4796%" height="15" fill="rgb(231,26,43)" fg:x="336" fg:w="6"/><text x="27.1085%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="27.2582%" y="597" width="0.0799%" height="15" fill="rgb(207,121,39)" fg:x="341" fg:w="1"/><text x="27.5082%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="27.4181%" y="629" width="0.0799%" height="15" fill="rgb(223,101,35)" fg:x="343" fg:w="1"/><text x="27.6681%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="27.4181%" y="613" width="0.0799%" height="15" fill="rgb(232,87,23)" fg:x="343" fg:w="1"/><text x="27.6681%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.4181%" y="597" width="0.0799%" height="15" fill="rgb(225,180,29)" fg:x="343" fg:w="1"/><text x="27.6681%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="27.4980%" y="629" width="0.3197%" height="15" fill="rgb(225,25,17)" fg:x="344" fg:w="4"/><text x="27.7480%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.5779%" y="613" width="0.2398%" height="15" fill="rgb(223,8,52)" fg:x="345" fg:w="3"/><text x="27.8279%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.7378%" y="597" width="0.0799%" height="15" fill="rgb(246,42,21)" fg:x="347" fg:w="1"/><text x="27.9878%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.7378%" y="581" width="0.0799%" height="15" fill="rgb(205,64,43)" fg:x="347" fg:w="1"/><text x="27.9878%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="27.8177%" y="613" width="0.1599%" height="15" fill="rgb(221,160,13)" fg:x="348" fg:w="2"/><text x="28.0677%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.8977%" y="597" width="0.0799%" height="15" fill="rgb(239,58,35)" fg:x="349" fg:w="1"/><text x="28.1477%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.8977%" y="581" width="0.0799%" height="15" fill="rgb(251,26,40)" fg:x="349" fg:w="1"/><text x="28.1477%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="27.9776%" y="597" width="0.3997%" height="15" fill="rgb(247,0,4)" fg:x="350" fg:w="5"/><text x="28.2276%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="28.1375%" y="581" width="0.2398%" height="15" fill="rgb(218,130,10)" fg:x="352" fg:w="3"/><text x="28.3875%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="28.3773%" y="597" width="0.2398%" height="15" fill="rgb(239,32,7)" fg:x="355" fg:w="3"/><text x="28.6273%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="28.3773%" y="581" width="0.2398%" height="15" fill="rgb(210,192,24)" fg:x="355" fg:w="3"/><text x="28.6273%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.5372%" y="565" width="0.0799%" height="15" fill="rgb(226,212,17)" fg:x="357" fg:w="1"/><text x="28.7872%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="28.5372%" y="549" width="0.0799%" height="15" fill="rgb(219,201,28)" fg:x="357" fg:w="1"/><text x="28.7872%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="27.9776%" y="613" width="0.7194%" height="15" fill="rgb(235,207,41)" fg:x="350" fg:w="9"/><text x="28.2276%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.6171%" y="597" width="0.0799%" height="15" fill="rgb(241,95,54)" fg:x="358" fg:w="1"/><text x="28.8671%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.6171%" y="581" width="0.0799%" height="15" fill="rgb(248,12,23)" fg:x="358" fg:w="1"/><text x="28.8671%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="27.8177%" y="629" width="1.0392%" height="15" fill="rgb(228,173,4)" fg:x="348" fg:w="13"/><text x="28.0677%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.6970%" y="613" width="0.1599%" height="15" fill="rgb(254,99,5)" fg:x="359" fg:w="2"/><text x="28.9470%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.6970%" y="597" width="0.1599%" height="15" fill="rgb(212,184,17)" fg:x="359" fg:w="2"/><text x="28.9470%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.7770%" y="581" width="0.0799%" height="15" fill="rgb(252,174,1)" fg:x="360" fg:w="1"/><text x="29.0270%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="27.3381%" y="645" width="1.6787%" height="15" fill="rgb(241,118,51)" fg:x="342" fg:w="21"/><text x="27.5881%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.8569%" y="629" width="0.1599%" height="15" fill="rgb(227,94,47)" fg:x="361" fg:w="2"/><text x="29.1069%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.9369%" y="613" width="0.0799%" height="15" fill="rgb(229,104,2)" fg:x="362" fg:w="1"/><text x="29.1869%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.1767%" y="613" width="0.0799%" height="15" fill="rgb(219,28,31)" fg:x="365" fg:w="1"/><text x="29.4267%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (41 samples, 3.28%)</title><rect x="26.0592%" y="677" width="3.2774%" height="15" fill="rgb(233,109,36)" fg:x="326" fg:w="41"/><text x="26.3092%" y="687.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 2.96%)</title><rect x="26.3789%" y="661" width="2.9576%" height="15" fill="rgb(246,88,11)" fg:x="330" fg:w="37"/><text x="26.6289%" y="671.50">ser..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="29.0168%" y="645" width="0.3197%" height="15" fill="rgb(209,212,17)" fg:x="363" fg:w="4"/><text x="29.2668%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="29.0967%" y="629" width="0.2398%" height="15" fill="rgb(243,59,29)" fg:x="364" fg:w="3"/><text x="29.3467%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="29.2566%" y="613" width="0.0799%" height="15" fill="rgb(244,205,48)" fg:x="366" fg:w="1"/><text x="29.5066%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.3365%" y="645" width="0.1599%" height="15" fill="rgb(227,30,6)" fg:x="367" fg:w="2"/><text x="29.5865%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="29.4964%" y="645" width="0.1599%" height="15" fill="rgb(220,205,48)" fg:x="369" fg:w="2"/><text x="29.7464%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.5763%" y="629" width="0.0799%" height="15" fill="rgb(250,94,14)" fg:x="370" fg:w="1"/><text x="29.8263%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.7362%" y="629" width="0.0799%" height="15" fill="rgb(216,119,42)" fg:x="372" fg:w="1"/><text x="29.9862%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.8961%" y="597" width="0.1599%" height="15" fill="rgb(232,155,0)" fg:x="374" fg:w="2"/><text x="30.1461%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="29.3365%" y="677" width="0.8793%" height="15" fill="rgb(212,24,32)" fg:x="367" fg:w="11"/><text x="29.5865%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.88%)</title><rect x="29.3365%" y="661" width="0.8793%" height="15" fill="rgb(216,69,20)" fg:x="367" fg:w="11"/><text x="29.5865%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="29.6563%" y="645" width="0.5596%" height="15" fill="rgb(229,73,31)" fg:x="371" fg:w="7"/><text x="29.9063%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="29.8161%" y="629" width="0.3997%" height="15" fill="rgb(224,219,20)" fg:x="373" fg:w="5"/><text x="30.0661%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="29.8161%" y="613" width="0.3997%" height="15" fill="rgb(215,146,41)" fg:x="373" fg:w="5"/><text x="30.0661%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="30.0560%" y="597" width="0.1599%" height="15" fill="rgb(244,71,31)" fg:x="376" fg:w="2"/><text x="30.3060%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.1359%" y="581" width="0.0799%" height="15" fill="rgb(224,24,11)" fg:x="377" fg:w="1"/><text x="30.3859%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="30.2158%" y="661" width="0.1599%" height="15" fill="rgb(229,76,15)" fg:x="378" fg:w="2"/><text x="30.4658%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.2958%" y="645" width="0.0799%" height="15" fill="rgb(209,93,2)" fg:x="379" fg:w="1"/><text x="30.5458%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="30.4556%" y="629" width="0.2398%" height="15" fill="rgb(216,200,50)" fg:x="381" fg:w="3"/><text x="30.7056%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.6155%" y="613" width="0.0799%" height="15" fill="rgb(211,67,34)" fg:x="383" fg:w="1"/><text x="30.8655%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="30.6155%" y="597" width="0.0799%" height="15" fill="rgb(225,87,47)" fg:x="383" fg:w="1"/><text x="30.8655%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="30.6954%" y="629" width="0.0799%" height="15" fill="rgb(217,185,16)" fg:x="384" fg:w="1"/><text x="30.9454%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="30.7754%" y="629" width="0.1599%" height="15" fill="rgb(205,0,0)" fg:x="385" fg:w="2"/><text x="31.0254%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.7754%" y="613" width="0.1599%" height="15" fill="rgb(207,116,45)" fg:x="385" fg:w="2"/><text x="31.0254%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.7754%" y="597" width="0.1599%" height="15" fill="rgb(221,156,26)" fg:x="385" fg:w="2"/><text x="31.0254%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.7754%" y="581" width="0.1599%" height="15" fill="rgb(213,140,4)" fg:x="385" fg:w="2"/><text x="31.0254%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.8553%" y="565" width="0.0799%" height="15" fill="rgb(231,224,15)" fg:x="386" fg:w="1"/><text x="31.1053%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9353%" y="597" width="0.0799%" height="15" fill="rgb(244,76,20)" fg:x="387" fg:w="1"/><text x="31.1853%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="30.9353%" y="629" width="0.1599%" height="15" fill="rgb(238,117,7)" fg:x="387" fg:w="2"/><text x="31.1853%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.9353%" y="613" width="0.1599%" height="15" fill="rgb(235,1,10)" fg:x="387" fg:w="2"/><text x="31.1853%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.0152%" y="597" width="0.0799%" height="15" fill="rgb(216,165,6)" fg:x="388" fg:w="1"/><text x="31.2652%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.0152%" y="581" width="0.0799%" height="15" fill="rgb(246,91,35)" fg:x="388" fg:w="1"/><text x="31.2652%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="31.3349%" y="581" width="0.3197%" height="15" fill="rgb(228,96,24)" fg:x="392" fg:w="4"/><text x="31.5849%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="31.3349%" y="565" width="0.3197%" height="15" fill="rgb(254,217,53)" fg:x="392" fg:w="4"/><text x="31.5849%" y="575.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="31.4149%" y="549" width="0.2398%" height="15" fill="rgb(209,60,0)" fg:x="393" fg:w="3"/><text x="31.6649%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="31.7346%" y="565" width="0.0799%" height="15" fill="rgb(250,93,26)" fg:x="397" fg:w="1"/><text x="31.9846%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="31.9744%" y="549" width="0.0799%" height="15" fill="rgb(211,9,40)" fg:x="400" fg:w="1"/><text x="32.2244%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.0544%" y="533" width="0.2398%" height="15" fill="rgb(242,57,20)" fg:x="401" fg:w="3"/><text x="32.3044%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.1343%" y="517" width="0.1599%" height="15" fill="rgb(248,85,48)" fg:x="402" fg:w="2"/><text x="32.3843%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2142%" y="501" width="0.0799%" height="15" fill="rgb(212,117,2)" fg:x="403" fg:w="1"/><text x="32.4642%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="32.0544%" y="549" width="0.3197%" height="15" fill="rgb(243,19,3)" fg:x="401" fg:w="4"/><text x="32.3044%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="32.2942%" y="533" width="0.0799%" height="15" fill="rgb(232,217,24)" fg:x="404" fg:w="1"/><text x="32.5442%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2942%" y="517" width="0.0799%" height="15" fill="rgb(224,175,40)" fg:x="404" fg:w="1"/><text x="32.5442%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (10 samples, 0.80%)</title><rect x="31.6547%" y="581" width="0.7994%" height="15" fill="rgb(212,162,32)" fg:x="396" fg:w="10"/><text x="31.9047%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="31.8145%" y="565" width="0.6395%" height="15" fill="rgb(215,9,4)" fg:x="398" fg:w="8"/><text x="32.0645%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.3741%" y="549" width="0.0799%" height="15" fill="rgb(242,42,7)" fg:x="405" fg:w="1"/><text x="32.6241%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.6139%" y="549" width="0.1599%" height="15" fill="rgb(242,184,45)" fg:x="408" fg:w="2"/><text x="32.8639%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6938%" y="533" width="0.0799%" height="15" fill="rgb(228,111,51)" fg:x="409" fg:w="1"/><text x="32.9438%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="32.6938%" y="517" width="0.0799%" height="15" fill="rgb(236,147,17)" fg:x="409" fg:w="1"/><text x="32.9438%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.7738%" y="549" width="0.0799%" height="15" fill="rgb(210,75,22)" fg:x="410" fg:w="1"/><text x="33.0238%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="32.9337%" y="533" width="0.0799%" height="15" fill="rgb(217,159,45)" fg:x="412" fg:w="1"/><text x="33.1837%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.9337%" y="517" width="0.0799%" height="15" fill="rgb(245,165,53)" fg:x="412" fg:w="1"/><text x="33.1837%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.9337%" y="501" width="0.0799%" height="15" fill="rgb(251,190,50)" fg:x="412" fg:w="1"/><text x="33.1837%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9337%" y="485" width="0.0799%" height="15" fill="rgb(208,203,29)" fg:x="412" fg:w="1"/><text x="33.1837%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="32.5340%" y="565" width="0.5596%" height="15" fill="rgb(207,209,35)" fg:x="407" fg:w="7"/><text x="32.7840%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="32.8537%" y="549" width="0.2398%" height="15" fill="rgb(230,144,49)" fg:x="411" fg:w="3"/><text x="33.1037%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0136%" y="533" width="0.0799%" height="15" fill="rgb(229,31,6)" fg:x="413" fg:w="1"/><text x="33.2636%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.92%)</title><rect x="31.3349%" y="597" width="1.9185%" height="15" fill="rgb(251,129,24)" fg:x="392" fg:w="24"/><text x="31.5849%" y="607.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="32.4540%" y="581" width="0.7994%" height="15" fill="rgb(235,105,15)" fg:x="406" fg:w="10"/><text x="32.7040%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.0935%" y="565" width="0.1599%" height="15" fill="rgb(216,52,43)" fg:x="414" fg:w="2"/><text x="33.3435%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (28 samples, 2.24%)</title><rect x="31.2550%" y="613" width="2.2382%" height="15" fill="rgb(238,144,41)" fg:x="391" fg:w="28"/><text x="31.5050%" y="623.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="33.2534%" y="597" width="0.2398%" height="15" fill="rgb(243,63,9)" fg:x="416" fg:w="3"/><text x="33.5034%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.3333%" y="581" width="0.1599%" height="15" fill="rgb(246,208,1)" fg:x="417" fg:w="2"/><text x="33.5833%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.4932%" y="613" width="0.0799%" height="15" fill="rgb(233,182,18)" fg:x="419" fg:w="1"/><text x="33.7432%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6531%" y="581" width="0.0799%" height="15" fill="rgb(242,224,8)" fg:x="421" fg:w="1"/><text x="33.9031%" y="591.50"></text></g><g><title>engine::session::Session::flush (103 samples, 8.23%)</title><rect x="25.5795%" y="773" width="8.2334%" height="15" fill="rgb(243,54,37)" fg:x="320" fg:w="103"/><text x="25.8295%" y="783.50">engine::ses..</text></g><g><title>engine::session::Session::save_changes (101 samples, 8.07%)</title><rect x="25.7394%" y="757" width="8.0735%" height="15" fill="rgb(233,192,12)" fg:x="322" fg:w="101"/><text x="25.9894%" y="767.50">engine::ses..</text></g><g><title>engine::session::state::State::close (101 samples, 8.07%)</title><rect x="25.7394%" y="741" width="8.0735%" height="15" fill="rgb(251,192,53)" fg:x="322" fg:w="101"/><text x="25.9894%" y="751.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_entities (101 samples, 8.07%)</title><rect x="25.7394%" y="725" width="8.0735%" height="15" fill="rgb(246,141,26)" fg:x="322" fg:w="101"/><text x="25.9894%" y="735.50">engine::ses..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (100 samples, 7.99%)</title><rect x="25.8193%" y="709" width="7.9936%" height="15" fill="rgb(239,195,19)" fg:x="323" fg:w="100"/><text x="26.0693%" y="719.50">engine::ses..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (100 samples, 7.99%)</title><rect x="25.8193%" y="693" width="7.9936%" height="15" fill="rgb(241,16,39)" fg:x="323" fg:w="100"/><text x="26.0693%" y="703.50">engine::ses..</text></g><g><title>kernel::model::any_entity_changes (45 samples, 3.60%)</title><rect x="30.2158%" y="677" width="3.5971%" height="15" fill="rgb(223,13,53)" fg:x="378" fg:w="45"/><text x="30.4658%" y="687.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (43 samples, 3.44%)</title><rect x="30.3757%" y="661" width="3.4373%" height="15" fill="rgb(214,227,0)" fg:x="380" fg:w="43"/><text x="30.6257%" y="671.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (43 samples, 3.44%)</title><rect x="30.3757%" y="645" width="3.4373%" height="15" fill="rgb(228,103,26)" fg:x="380" fg:w="43"/><text x="30.6257%" y="655.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (34 samples, 2.72%)</title><rect x="31.0951%" y="629" width="2.7178%" height="15" fill="rgb(254,177,53)" fg:x="389" fg:w="34"/><text x="31.3451%" y="639.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="33.5731%" y="613" width="0.2398%" height="15" fill="rgb(208,201,34)" fg:x="420" fg:w="3"/><text x="33.8231%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.6531%" y="597" width="0.1599%" height="15" fill="rgb(212,39,5)" fg:x="421" fg:w="2"/><text x="33.9031%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="33.7330%" y="581" width="0.0799%" height="15" fill="rgb(246,117,3)" fg:x="422" fg:w="1"/><text x="33.9830%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="34.0528%" y="757" width="0.0799%" height="15" fill="rgb(244,118,39)" fg:x="426" fg:w="1"/><text x="34.3028%" y="767.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="34.0528%" y="741" width="0.0799%" height="15" fill="rgb(241,64,10)" fg:x="426" fg:w="1"/><text x="34.3028%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.0528%" y="725" width="0.0799%" height="15" fill="rgb(229,39,44)" fg:x="426" fg:w="1"/><text x="34.3028%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.0528%" y="709" width="0.0799%" height="15" fill="rgb(230,226,3)" fg:x="426" fg:w="1"/><text x="34.3028%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.0528%" y="693" width="0.0799%" height="15" fill="rgb(222,13,42)" fg:x="426" fg:w="1"/><text x="34.3028%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.0528%" y="677" width="0.0799%" height="15" fill="rgb(247,180,54)" fg:x="426" fg:w="1"/><text x="34.3028%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="34.0528%" y="661" width="0.0799%" height="15" fill="rgb(205,96,16)" fg:x="426" fg:w="1"/><text x="34.3028%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="34.0528%" y="645" width="0.0799%" height="15" fill="rgb(205,100,21)" fg:x="426" fg:w="1"/><text x="34.3028%" y="655.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="34.0528%" y="629" width="0.0799%" height="15" fill="rgb(248,51,4)" fg:x="426" fg:w="1"/><text x="34.3028%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="34.1327%" y="757" width="0.0799%" height="15" fill="rgb(217,197,30)" fg:x="427" fg:w="1"/><text x="34.3827%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="34.1327%" y="741" width="0.0799%" height="15" fill="rgb(240,179,40)" fg:x="427" fg:w="1"/><text x="34.3827%" y="751.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="34.1327%" y="725" width="0.0799%" height="15" fill="rgb(212,185,35)" fg:x="427" fg:w="1"/><text x="34.3827%" y="735.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="34.2126%" y="757" width="0.0799%" height="15" fill="rgb(251,222,31)" fg:x="428" fg:w="1"/><text x="34.4626%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.2926%" y="661" width="0.0799%" height="15" fill="rgb(208,140,36)" fg:x="429" fg:w="1"/><text x="34.5426%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.2926%" y="645" width="0.0799%" height="15" fill="rgb(220,148,1)" fg:x="429" fg:w="1"/><text x="34.5426%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.2926%" y="629" width="0.0799%" height="15" fill="rgb(254,4,28)" fg:x="429" fg:w="1"/><text x="34.5426%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.2926%" y="613" width="0.0799%" height="15" fill="rgb(222,185,44)" fg:x="429" fg:w="1"/><text x="34.5426%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.2926%" y="597" width="0.0799%" height="15" fill="rgb(215,74,39)" fg:x="429" fg:w="1"/><text x="34.5426%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.2926%" y="581" width="0.0799%" height="15" fill="rgb(247,86,4)" fg:x="429" fg:w="1"/><text x="34.5426%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.2926%" y="565" width="0.0799%" height="15" fill="rgb(231,105,32)" fg:x="429" fg:w="1"/><text x="34.5426%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (8 samples, 0.64%)</title><rect x="33.8129%" y="773" width="0.6395%" height="15" fill="rgb(222,65,35)" fg:x="423" fg:w="8"/><text x="34.0629%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="34.2926%" y="757" width="0.1599%" height="15" fill="rgb(218,145,35)" fg:x="429" fg:w="2"/><text x="34.5426%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.2926%" y="741" width="0.1599%" height="15" fill="rgb(208,7,15)" fg:x="429" fg:w="2"/><text x="34.5426%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.2926%" y="725" width="0.1599%" height="15" fill="rgb(209,83,13)" fg:x="429" fg:w="2"/><text x="34.5426%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="34.2926%" y="709" width="0.1599%" height="15" fill="rgb(218,3,10)" fg:x="429" fg:w="2"/><text x="34.5426%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="34.2926%" y="693" width="0.1599%" height="15" fill="rgb(211,219,4)" fg:x="429" fg:w="2"/><text x="34.5426%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="34.2926%" y="677" width="0.1599%" height="15" fill="rgb(228,194,12)" fg:x="429" fg:w="2"/><text x="34.5426%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.3725%" y="661" width="0.0799%" height="15" fill="rgb(210,175,7)" fg:x="430" fg:w="1"/><text x="34.6225%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.3725%" y="645" width="0.0799%" height="15" fill="rgb(243,132,6)" fg:x="430" fg:w="1"/><text x="34.6225%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.4524%" y="357" width="0.0799%" height="15" fill="rgb(207,72,18)" fg:x="431" fg:w="1"/><text x="34.7024%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="34.4524%" y="341" width="0.0799%" height="15" fill="rgb(236,1,18)" fg:x="431" fg:w="1"/><text x="34.7024%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="34.4524%" y="325" width="0.0799%" height="15" fill="rgb(227,0,18)" fg:x="431" fg:w="1"/><text x="34.7024%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="34.4524%" y="309" width="0.0799%" height="15" fill="rgb(247,37,5)" fg:x="431" fg:w="1"/><text x="34.7024%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="34.4524%" y="293" width="0.0799%" height="15" fill="rgb(237,179,24)" fg:x="431" fg:w="1"/><text x="34.7024%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="34.4524%" y="741" width="0.1599%" height="15" fill="rgb(226,53,20)" fg:x="431" fg:w="2"/><text x="34.7024%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="34.4524%" y="725" width="0.1599%" height="15" fill="rgb(247,75,7)" fg:x="431" fg:w="2"/><text x="34.7024%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="34.4524%" y="709" width="0.1599%" height="15" fill="rgb(233,96,12)" fg:x="431" fg:w="2"/><text x="34.7024%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="34.4524%" y="693" width="0.1599%" height="15" fill="rgb(224,125,0)" fg:x="431" fg:w="2"/><text x="34.7024%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="34.4524%" y="677" width="0.1599%" height="15" fill="rgb(224,92,25)" fg:x="431" fg:w="2"/><text x="34.7024%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="34.4524%" y="661" width="0.1599%" height="15" fill="rgb(224,42,24)" fg:x="431" fg:w="2"/><text x="34.7024%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="34.4524%" y="645" width="0.1599%" height="15" fill="rgb(234,132,49)" fg:x="431" fg:w="2"/><text x="34.7024%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="34.4524%" y="629" width="0.1599%" height="15" fill="rgb(248,100,35)" fg:x="431" fg:w="2"/><text x="34.7024%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="34.4524%" y="613" width="0.1599%" height="15" fill="rgb(239,94,40)" fg:x="431" fg:w="2"/><text x="34.7024%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="34.4524%" y="597" width="0.1599%" height="15" fill="rgb(235,139,28)" fg:x="431" fg:w="2"/><text x="34.7024%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="34.4524%" y="581" width="0.1599%" height="15" fill="rgb(217,144,7)" fg:x="431" fg:w="2"/><text x="34.7024%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="34.4524%" y="565" width="0.1599%" height="15" fill="rgb(227,55,4)" fg:x="431" fg:w="2"/><text x="34.7024%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="34.4524%" y="549" width="0.1599%" height="15" fill="rgb(252,82,54)" fg:x="431" fg:w="2"/><text x="34.7024%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="34.4524%" y="533" width="0.1599%" height="15" fill="rgb(245,172,4)" fg:x="431" fg:w="2"/><text x="34.7024%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="34.4524%" y="517" width="0.1599%" height="15" fill="rgb(207,26,27)" fg:x="431" fg:w="2"/><text x="34.7024%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="34.4524%" y="501" width="0.1599%" height="15" fill="rgb(252,98,18)" fg:x="431" fg:w="2"/><text x="34.7024%" y="511.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="34.4524%" y="485" width="0.1599%" height="15" fill="rgb(244,8,26)" fg:x="431" fg:w="2"/><text x="34.7024%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="34.4524%" y="469" width="0.1599%" height="15" fill="rgb(237,173,45)" fg:x="431" fg:w="2"/><text x="34.7024%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="34.4524%" y="453" width="0.1599%" height="15" fill="rgb(208,213,49)" fg:x="431" fg:w="2"/><text x="34.7024%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="34.4524%" y="437" width="0.1599%" height="15" fill="rgb(212,122,37)" fg:x="431" fg:w="2"/><text x="34.7024%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="34.4524%" y="421" width="0.1599%" height="15" fill="rgb(213,80,17)" fg:x="431" fg:w="2"/><text x="34.7024%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="34.4524%" y="405" width="0.1599%" height="15" fill="rgb(206,210,43)" fg:x="431" fg:w="2"/><text x="34.7024%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="34.4524%" y="389" width="0.1599%" height="15" fill="rgb(229,214,3)" fg:x="431" fg:w="2"/><text x="34.7024%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="34.4524%" y="373" width="0.1599%" height="15" fill="rgb(235,213,29)" fg:x="431" fg:w="2"/><text x="34.7024%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="34.5324%" y="357" width="0.0799%" height="15" fill="rgb(248,135,26)" fg:x="432" fg:w="1"/><text x="34.7824%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="34.5324%" y="341" width="0.0799%" height="15" fill="rgb(242,188,12)" fg:x="432" fg:w="1"/><text x="34.7824%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="34.6123%" y="581" width="0.1599%" height="15" fill="rgb(245,38,12)" fg:x="433" fg:w="2"/><text x="34.8623%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="34.6123%" y="565" width="0.1599%" height="15" fill="rgb(218,42,13)" fg:x="433" fg:w="2"/><text x="34.8623%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="34.6123%" y="549" width="0.1599%" height="15" fill="rgb(238,132,49)" fg:x="433" fg:w="2"/><text x="34.8623%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="34.6123%" y="533" width="0.1599%" height="15" fill="rgb(209,196,19)" fg:x="433" fg:w="2"/><text x="34.8623%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="34.6123%" y="517" width="0.1599%" height="15" fill="rgb(244,131,22)" fg:x="433" fg:w="2"/><text x="34.8623%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="34.6123%" y="501" width="0.1599%" height="15" fill="rgb(223,18,34)" fg:x="433" fg:w="2"/><text x="34.8623%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.6123%" y="485" width="0.1599%" height="15" fill="rgb(252,124,54)" fg:x="433" fg:w="2"/><text x="34.8623%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.6123%" y="709" width="0.2398%" height="15" fill="rgb(229,106,42)" fg:x="433" fg:w="3"/><text x="34.8623%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.6123%" y="693" width="0.2398%" height="15" fill="rgb(221,129,1)" fg:x="433" fg:w="3"/><text x="34.8623%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.6123%" y="677" width="0.2398%" height="15" fill="rgb(229,74,15)" fg:x="433" fg:w="3"/><text x="34.8623%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="34.6123%" y="661" width="0.2398%" height="15" fill="rgb(210,206,50)" fg:x="433" fg:w="3"/><text x="34.8623%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="34.6123%" y="645" width="0.2398%" height="15" fill="rgb(251,114,31)" fg:x="433" fg:w="3"/><text x="34.8623%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="34.6123%" y="629" width="0.2398%" height="15" fill="rgb(215,225,28)" fg:x="433" fg:w="3"/><text x="34.8623%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="34.6123%" y="613" width="0.2398%" height="15" fill="rgb(237,109,14)" fg:x="433" fg:w="3"/><text x="34.8623%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="34.6123%" y="597" width="0.2398%" height="15" fill="rgb(230,13,37)" fg:x="433" fg:w="3"/><text x="34.8623%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.7722%" y="581" width="0.0799%" height="15" fill="rgb(231,40,28)" fg:x="435" fg:w="1"/><text x="35.0222%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.7722%" y="565" width="0.0799%" height="15" fill="rgb(231,202,18)" fg:x="435" fg:w="1"/><text x="35.0222%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.8521%" y="709" width="0.0799%" height="15" fill="rgb(225,33,18)" fg:x="436" fg:w="1"/><text x="35.1021%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="34.8521%" y="693" width="0.0799%" height="15" fill="rgb(223,64,47)" fg:x="436" fg:w="1"/><text x="35.1021%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.9321%" y="677" width="0.0799%" height="15" fill="rgb(234,114,13)" fg:x="437" fg:w="1"/><text x="35.1821%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.0120%" y="677" width="0.0799%" height="15" fill="rgb(248,56,40)" fg:x="438" fg:w="1"/><text x="35.2620%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="34.9321%" y="709" width="0.2398%" height="15" fill="rgb(221,194,21)" fg:x="437" fg:w="3"/><text x="35.1821%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="34.9321%" y="693" width="0.2398%" height="15" fill="rgb(242,108,46)" fg:x="437" fg:w="3"/><text x="35.1821%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.0919%" y="677" width="0.0799%" height="15" fill="rgb(220,106,10)" fg:x="439" fg:w="1"/><text x="35.3419%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.0919%" y="661" width="0.0799%" height="15" fill="rgb(211,88,4)" fg:x="439" fg:w="1"/><text x="35.3419%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="34.4524%" y="757" width="1.1191%" height="15" fill="rgb(214,95,34)" fg:x="431" fg:w="14"/><text x="34.7024%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (12 samples, 0.96%)</title><rect x="34.6123%" y="741" width="0.9592%" height="15" fill="rgb(250,160,33)" fg:x="433" fg:w="12"/><text x="34.8623%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.96%)</title><rect x="34.6123%" y="725" width="0.9592%" height="15" fill="rgb(225,29,10)" fg:x="433" fg:w="12"/><text x="34.8623%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="35.1719%" y="709" width="0.3997%" height="15" fill="rgb(224,28,30)" fg:x="440" fg:w="5"/><text x="35.4219%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="35.2518%" y="693" width="0.3197%" height="15" fill="rgb(231,77,4)" fg:x="441" fg:w="4"/><text x="35.5018%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="35.2518%" y="677" width="0.3197%" height="15" fill="rgb(209,63,21)" fg:x="441" fg:w="4"/><text x="35.5018%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="35.2518%" y="661" width="0.3197%" height="15" fill="rgb(226,22,11)" fg:x="441" fg:w="4"/><text x="35.5018%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="35.3317%" y="645" width="0.2398%" height="15" fill="rgb(216,82,30)" fg:x="442" fg:w="3"/><text x="35.5817%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="35.3317%" y="629" width="0.2398%" height="15" fill="rgb(246,227,38)" fg:x="442" fg:w="3"/><text x="35.5817%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.4916%" y="613" width="0.0799%" height="15" fill="rgb(251,203,53)" fg:x="444" fg:w="1"/><text x="35.7416%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.5715%" y="757" width="0.0799%" height="15" fill="rgb(254,101,1)" fg:x="445" fg:w="1"/><text x="35.8215%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="35.6515%" y="757" width="0.1599%" height="15" fill="rgb(241,180,5)" fg:x="446" fg:w="2"/><text x="35.9015%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="35.6515%" y="741" width="0.1599%" height="15" fill="rgb(218,168,4)" fg:x="446" fg:w="2"/><text x="35.9015%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="35.6515%" y="725" width="0.1599%" height="15" fill="rgb(224,223,32)" fg:x="446" fg:w="2"/><text x="35.9015%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="35.8114%" y="741" width="0.0799%" height="15" fill="rgb(236,106,22)" fg:x="448" fg:w="1"/><text x="36.0614%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="35.8114%" y="725" width="0.0799%" height="15" fill="rgb(206,121,5)" fg:x="448" fg:w="1"/><text x="36.0614%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="35.9712%" y="677" width="0.1599%" height="15" fill="rgb(233,87,28)" fg:x="450" fg:w="2"/><text x="36.2212%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="35.9712%" y="661" width="0.1599%" height="15" fill="rgb(236,137,17)" fg:x="450" fg:w="2"/><text x="36.2212%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.9712%" y="645" width="0.1599%" height="15" fill="rgb(209,183,38)" fg:x="450" fg:w="2"/><text x="36.2212%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.9712%" y="629" width="0.1599%" height="15" fill="rgb(206,162,44)" fg:x="450" fg:w="2"/><text x="36.2212%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="35.9712%" y="613" width="0.1599%" height="15" fill="rgb(237,70,39)" fg:x="450" fg:w="2"/><text x="36.2212%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="35.8913%" y="709" width="0.3997%" height="15" fill="rgb(212,176,5)" fg:x="449" fg:w="5"/><text x="36.1413%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="35.8913%" y="693" width="0.3997%" height="15" fill="rgb(232,95,16)" fg:x="449" fg:w="5"/><text x="36.1413%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.1311%" y="677" width="0.1599%" height="15" fill="rgb(219,115,35)" fg:x="452" fg:w="2"/><text x="36.3811%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2110%" y="661" width="0.0799%" height="15" fill="rgb(251,67,27)" fg:x="453" fg:w="1"/><text x="36.4610%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.2110%" y="645" width="0.0799%" height="15" fill="rgb(222,95,40)" fg:x="453" fg:w="1"/><text x="36.4610%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2110%" y="629" width="0.0799%" height="15" fill="rgb(250,35,16)" fg:x="453" fg:w="1"/><text x="36.4610%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.2110%" y="613" width="0.0799%" height="15" fill="rgb(224,86,44)" fg:x="453" fg:w="1"/><text x="36.4610%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.2110%" y="597" width="0.0799%" height="15" fill="rgb(237,53,53)" fg:x="453" fg:w="1"/><text x="36.4610%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.2110%" y="581" width="0.0799%" height="15" fill="rgb(208,171,33)" fg:x="453" fg:w="1"/><text x="36.4610%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.3709%" y="677" width="0.0799%" height="15" fill="rgb(222,64,27)" fg:x="455" fg:w="1"/><text x="36.6209%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.5308%" y="645" width="0.0799%" height="15" fill="rgb(221,121,35)" fg:x="457" fg:w="1"/><text x="36.7808%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.5308%" y="629" width="0.0799%" height="15" fill="rgb(228,137,42)" fg:x="457" fg:w="1"/><text x="36.7808%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.6107%" y="613" width="0.0799%" height="15" fill="rgb(227,54,21)" fg:x="458" fg:w="1"/><text x="36.8607%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="35.8913%" y="741" width="0.8793%" height="15" fill="rgb(240,168,33)" fg:x="449" fg:w="11"/><text x="36.1413%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.88%)</title><rect x="35.8913%" y="725" width="0.8793%" height="15" fill="rgb(243,159,6)" fg:x="449" fg:w="11"/><text x="36.1413%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="36.2910%" y="709" width="0.4796%" height="15" fill="rgb(205,211,41)" fg:x="454" fg:w="6"/><text x="36.5410%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="36.2910%" y="693" width="0.4796%" height="15" fill="rgb(253,30,1)" fg:x="454" fg:w="6"/><text x="36.5410%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="36.4508%" y="677" width="0.3197%" height="15" fill="rgb(226,80,18)" fg:x="456" fg:w="4"/><text x="36.7008%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="36.4508%" y="661" width="0.3197%" height="15" fill="rgb(253,156,46)" fg:x="456" fg:w="4"/><text x="36.7008%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="36.6107%" y="645" width="0.1599%" height="15" fill="rgb(248,87,27)" fg:x="458" fg:w="2"/><text x="36.8607%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.6107%" y="629" width="0.1599%" height="15" fill="rgb(227,122,2)" fg:x="458" fg:w="2"/><text x="36.8607%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.6906%" y="613" width="0.0799%" height="15" fill="rgb(229,94,39)" fg:x="459" fg:w="1"/><text x="36.9406%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.6906%" y="597" width="0.0799%" height="15" fill="rgb(225,173,31)" fg:x="459" fg:w="1"/><text x="36.9406%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.6906%" y="581" width="0.0799%" height="15" fill="rgb(239,176,30)" fg:x="459" fg:w="1"/><text x="36.9406%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8505%" y="693" width="0.0799%" height="15" fill="rgb(212,104,21)" fg:x="461" fg:w="1"/><text x="37.1005%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8505%" y="677" width="0.0799%" height="15" fill="rgb(240,209,40)" fg:x="461" fg:w="1"/><text x="37.1005%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="36.7706%" y="741" width="0.2398%" height="15" fill="rgb(234,195,5)" fg:x="460" fg:w="3"/><text x="37.0206%" y="751.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="36.8505%" y="725" width="0.1599%" height="15" fill="rgb(238,213,1)" fg:x="461" fg:w="2"/><text x="37.1005%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="36.8505%" y="709" width="0.1599%" height="15" fill="rgb(235,182,54)" fg:x="461" fg:w="2"/><text x="37.1005%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="36.9305%" y="693" width="0.0799%" height="15" fill="rgb(229,50,46)" fg:x="462" fg:w="1"/><text x="37.1805%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="36.9305%" y="677" width="0.0799%" height="15" fill="rgb(219,145,13)" fg:x="462" fg:w="1"/><text x="37.1805%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.9305%" y="661" width="0.0799%" height="15" fill="rgb(220,226,10)" fg:x="462" fg:w="1"/><text x="37.1805%" y="671.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="37.0104%" y="677" width="0.0799%" height="15" fill="rgb(248,47,30)" fg:x="463" fg:w="1"/><text x="37.2604%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.0104%" y="661" width="0.0799%" height="15" fill="rgb(231,209,44)" fg:x="463" fg:w="1"/><text x="37.2604%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.0104%" y="645" width="0.0799%" height="15" fill="rgb(209,80,30)" fg:x="463" fg:w="1"/><text x="37.2604%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="37.0903%" y="677" width="0.0799%" height="15" fill="rgb(232,9,14)" fg:x="464" fg:w="1"/><text x="37.3403%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.0903%" y="661" width="0.0799%" height="15" fill="rgb(243,91,43)" fg:x="464" fg:w="1"/><text x="37.3403%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.1703%" y="661" width="0.0799%" height="15" fill="rgb(231,90,52)" fg:x="465" fg:w="1"/><text x="37.4203%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.1703%" y="645" width="0.0799%" height="15" fill="rgb(253,192,44)" fg:x="465" fg:w="1"/><text x="37.4203%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.1703%" y="629" width="0.0799%" height="15" fill="rgb(241,66,31)" fg:x="465" fg:w="1"/><text x="37.4203%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2502%" y="661" width="0.0799%" height="15" fill="rgb(235,81,37)" fg:x="466" fg:w="1"/><text x="37.5002%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="37.0104%" y="693" width="0.4796%" height="15" fill="rgb(223,221,9)" fg:x="463" fg:w="6"/><text x="37.2604%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="37.1703%" y="677" width="0.3197%" height="15" fill="rgb(242,180,7)" fg:x="465" fg:w="4"/><text x="37.4203%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.3301%" y="661" width="0.1599%" height="15" fill="rgb(243,78,19)" fg:x="467" fg:w="2"/><text x="37.5801%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.3301%" y="645" width="0.1599%" height="15" fill="rgb(233,23,17)" fg:x="467" fg:w="2"/><text x="37.5801%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.4101%" y="629" width="0.0799%" height="15" fill="rgb(252,122,45)" fg:x="468" fg:w="1"/><text x="37.6601%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4101%" y="613" width="0.0799%" height="15" fill="rgb(247,108,20)" fg:x="468" fg:w="1"/><text x="37.6601%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.4101%" y="597" width="0.0799%" height="15" fill="rgb(235,84,21)" fg:x="468" fg:w="1"/><text x="37.6601%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.4101%" y="581" width="0.0799%" height="15" fill="rgb(247,129,10)" fg:x="468" fg:w="1"/><text x="37.6601%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.4101%" y="565" width="0.0799%" height="15" fill="rgb(208,173,14)" fg:x="468" fg:w="1"/><text x="37.6601%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="37.4900%" y="677" width="0.0799%" height="15" fill="rgb(236,31,38)" fg:x="469" fg:w="1"/><text x="37.7400%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.5699%" y="629" width="0.1599%" height="15" fill="rgb(232,65,17)" fg:x="470" fg:w="2"/><text x="37.8199%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6499%" y="613" width="0.0799%" height="15" fill="rgb(224,45,49)" fg:x="471" fg:w="1"/><text x="37.8999%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6499%" y="597" width="0.0799%" height="15" fill="rgb(225,2,53)" fg:x="471" fg:w="1"/><text x="37.8999%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.6499%" y="581" width="0.0799%" height="15" fill="rgb(248,210,53)" fg:x="471" fg:w="1"/><text x="37.8999%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.6499%" y="565" width="0.0799%" height="15" fill="rgb(211,1,30)" fg:x="471" fg:w="1"/><text x="37.8999%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.6499%" y="549" width="0.0799%" height="15" fill="rgb(224,96,15)" fg:x="471" fg:w="1"/><text x="37.8999%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6499%" y="533" width="0.0799%" height="15" fill="rgb(252,45,11)" fg:x="471" fg:w="1"/><text x="37.8999%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6499%" y="517" width="0.0799%" height="15" fill="rgb(220,125,38)" fg:x="471" fg:w="1"/><text x="37.8999%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.6499%" y="501" width="0.0799%" height="15" fill="rgb(243,161,33)" fg:x="471" fg:w="1"/><text x="37.8999%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.6499%" y="485" width="0.0799%" height="15" fill="rgb(248,197,34)" fg:x="471" fg:w="1"/><text x="37.8999%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.6499%" y="469" width="0.0799%" height="15" fill="rgb(228,165,23)" fg:x="471" fg:w="1"/><text x="37.8999%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.6499%" y="453" width="0.0799%" height="15" fill="rgb(236,94,38)" fg:x="471" fg:w="1"/><text x="37.8999%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6499%" y="437" width="0.0799%" height="15" fill="rgb(220,13,23)" fg:x="471" fg:w="1"/><text x="37.8999%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.5699%" y="661" width="0.2398%" height="15" fill="rgb(234,26,39)" fg:x="470" fg:w="3"/><text x="37.8199%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.5699%" y="645" width="0.2398%" height="15" fill="rgb(205,117,44)" fg:x="470" fg:w="3"/><text x="37.8199%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.7298%" y="629" width="0.0799%" height="15" fill="rgb(250,42,2)" fg:x="472" fg:w="1"/><text x="37.9798%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.7298%" y="613" width="0.0799%" height="15" fill="rgb(223,83,14)" fg:x="472" fg:w="1"/><text x="37.9798%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.7298%" y="597" width="0.0799%" height="15" fill="rgb(241,147,50)" fg:x="472" fg:w="1"/><text x="37.9798%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.7298%" y="581" width="0.0799%" height="15" fill="rgb(218,90,6)" fg:x="472" fg:w="1"/><text x="37.9798%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.7298%" y="565" width="0.0799%" height="15" fill="rgb(210,191,5)" fg:x="472" fg:w="1"/><text x="37.9798%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.7298%" y="549" width="0.0799%" height="15" fill="rgb(225,139,19)" fg:x="472" fg:w="1"/><text x="37.9798%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.7298%" y="533" width="0.0799%" height="15" fill="rgb(210,1,33)" fg:x="472" fg:w="1"/><text x="37.9798%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.7298%" y="517" width="0.0799%" height="15" fill="rgb(213,50,3)" fg:x="472" fg:w="1"/><text x="37.9798%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.7298%" y="501" width="0.0799%" height="15" fill="rgb(234,227,4)" fg:x="472" fg:w="1"/><text x="37.9798%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.7298%" y="485" width="0.0799%" height="15" fill="rgb(246,63,5)" fg:x="472" fg:w="1"/><text x="37.9798%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.7298%" y="469" width="0.0799%" height="15" fill="rgb(245,136,27)" fg:x="472" fg:w="1"/><text x="37.9798%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7298%" y="453" width="0.0799%" height="15" fill="rgb(247,199,27)" fg:x="472" fg:w="1"/><text x="37.9798%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.8897%" y="629" width="0.0799%" height="15" fill="rgb(252,158,49)" fg:x="474" fg:w="1"/><text x="38.1397%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.8897%" y="613" width="0.0799%" height="15" fill="rgb(254,73,1)" fg:x="474" fg:w="1"/><text x="38.1397%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="37.8098%" y="661" width="0.2398%" height="15" fill="rgb(248,93,19)" fg:x="473" fg:w="3"/><text x="38.0598%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="37.8897%" y="645" width="0.1599%" height="15" fill="rgb(206,67,5)" fg:x="474" fg:w="2"/><text x="38.1397%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.9696%" y="629" width="0.0799%" height="15" fill="rgb(209,210,4)" fg:x="475" fg:w="1"/><text x="38.2196%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.9696%" y="613" width="0.0799%" height="15" fill="rgb(214,185,36)" fg:x="475" fg:w="1"/><text x="38.2196%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.0496%" y="597" width="0.0799%" height="15" fill="rgb(233,191,26)" fg:x="476" fg:w="1"/><text x="38.2996%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.80%)</title><rect x="37.4900%" y="693" width="0.7994%" height="15" fill="rgb(248,94,17)" fg:x="469" fg:w="10"/><text x="37.7400%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="37.5699%" y="677" width="0.7194%" height="15" fill="rgb(250,64,4)" fg:x="470" fg:w="9"/><text x="37.8199%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="38.0496%" y="661" width="0.2398%" height="15" fill="rgb(218,41,53)" fg:x="476" fg:w="3"/><text x="38.2996%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.0496%" y="645" width="0.2398%" height="15" fill="rgb(251,176,28)" fg:x="476" fg:w="3"/><text x="38.2996%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="38.0496%" y="629" width="0.2398%" height="15" fill="rgb(247,22,9)" fg:x="476" fg:w="3"/><text x="38.2996%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.0496%" y="613" width="0.2398%" height="15" fill="rgb(218,201,14)" fg:x="476" fg:w="3"/><text x="38.2996%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.1295%" y="597" width="0.1599%" height="15" fill="rgb(218,94,10)" fg:x="477" fg:w="2"/><text x="38.3795%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2094%" y="581" width="0.0799%" height="15" fill="rgb(222,183,52)" fg:x="478" fg:w="1"/><text x="38.4594%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (17 samples, 1.36%)</title><rect x="37.0104%" y="725" width="1.3589%" height="15" fill="rgb(242,140,25)" fg:x="463" fg:w="17"/><text x="37.2604%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (17 samples, 1.36%)</title><rect x="37.0104%" y="709" width="1.3589%" height="15" fill="rgb(235,197,38)" fg:x="463" fg:w="17"/><text x="37.2604%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2894%" y="693" width="0.0799%" height="15" fill="rgb(237,136,15)" fg:x="479" fg:w="1"/><text x="38.5394%" y="703.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (18 samples, 1.44%)</title><rect x="37.0104%" y="741" width="1.4388%" height="15" fill="rgb(223,44,49)" fg:x="463" fg:w="18"/><text x="37.2604%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="38.3693%" y="725" width="0.0799%" height="15" fill="rgb(227,71,15)" fg:x="480" fg:w="1"/><text x="38.6193%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.3693%" y="709" width="0.0799%" height="15" fill="rgb(225,153,20)" fg:x="480" fg:w="1"/><text x="38.6193%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="38.3693%" y="693" width="0.0799%" height="15" fill="rgb(210,190,26)" fg:x="480" fg:w="1"/><text x="38.6193%" y="703.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="38.3693%" y="677" width="0.0799%" height="15" fill="rgb(223,147,5)" fg:x="480" fg:w="1"/><text x="38.6193%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="38.3693%" y="661" width="0.0799%" height="15" fill="rgb(207,14,23)" fg:x="480" fg:w="1"/><text x="38.6193%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.3693%" y="645" width="0.0799%" height="15" fill="rgb(211,195,53)" fg:x="480" fg:w="1"/><text x="38.6193%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.3693%" y="629" width="0.0799%" height="15" fill="rgb(237,75,46)" fg:x="480" fg:w="1"/><text x="38.6193%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.3693%" y="613" width="0.0799%" height="15" fill="rgb(254,55,14)" fg:x="480" fg:w="1"/><text x="38.6193%" y="623.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="38.3693%" y="597" width="0.0799%" height="15" fill="rgb(230,185,30)" fg:x="480" fg:w="1"/><text x="38.6193%" y="607.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="38.3693%" y="581" width="0.0799%" height="15" fill="rgb(220,14,11)" fg:x="480" fg:w="1"/><text x="38.6193%" y="591.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="38.3693%" y="565" width="0.0799%" height="15" fill="rgb(215,169,44)" fg:x="480" fg:w="1"/><text x="38.6193%" y="575.50"></text></g><g><title>plugins_core::build::Build::holding (51 samples, 4.08%)</title><rect x="34.4524%" y="773" width="4.0767%" height="15" fill="rgb(253,203,20)" fg:x="431" fg:w="51"/><text x="34.7024%" y="783.50">plug..</text></g><g><title>plugins_core::tools::set_container (34 samples, 2.72%)</title><rect x="35.8114%" y="757" width="2.7178%" height="15" fill="rgb(229,225,17)" fg:x="448" fg:w="34"/><text x="36.0614%" y="767.50">pl..</text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="38.4492%" y="741" width="0.0799%" height="15" fill="rgb(236,76,26)" fg:x="481" fg:w="1"/><text x="38.6992%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="38.4492%" y="725" width="0.0799%" height="15" fill="rgb(234,15,30)" fg:x="481" fg:w="1"/><text x="38.6992%" y="735.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="38.4492%" y="709" width="0.0799%" height="15" fill="rgb(211,113,48)" fg:x="481" fg:w="1"/><text x="38.6992%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.4492%" y="693" width="0.0799%" height="15" fill="rgb(221,31,36)" fg:x="481" fg:w="1"/><text x="38.6992%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="38.4492%" y="677" width="0.0799%" height="15" fill="rgb(215,118,52)" fg:x="481" fg:w="1"/><text x="38.6992%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.4492%" y="661" width="0.0799%" height="15" fill="rgb(241,151,27)" fg:x="481" fg:w="1"/><text x="38.6992%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.4492%" y="645" width="0.0799%" height="15" fill="rgb(253,51,3)" fg:x="481" fg:w="1"/><text x="38.6992%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.5292%" y="709" width="0.0799%" height="15" fill="rgb(216,201,24)" fg:x="482" fg:w="1"/><text x="38.7792%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.5292%" y="693" width="0.0799%" height="15" fill="rgb(231,107,4)" fg:x="482" fg:w="1"/><text x="38.7792%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.5292%" y="677" width="0.0799%" height="15" fill="rgb(243,97,54)" fg:x="482" fg:w="1"/><text x="38.7792%" y="687.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="38.5292%" y="773" width="0.1599%" height="15" fill="rgb(221,32,51)" fg:x="482" fg:w="2"/><text x="38.7792%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="38.5292%" y="757" width="0.1599%" height="15" fill="rgb(218,171,35)" fg:x="482" fg:w="2"/><text x="38.7792%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="38.5292%" y="741" width="0.1599%" height="15" fill="rgb(214,20,53)" fg:x="482" fg:w="2"/><text x="38.7792%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.5292%" y="725" width="0.1599%" height="15" fill="rgb(239,9,52)" fg:x="482" fg:w="2"/><text x="38.7792%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.6091%" y="709" width="0.0799%" height="15" fill="rgb(215,114,45)" fg:x="483" fg:w="1"/><text x="38.8591%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.6091%" y="693" width="0.0799%" height="15" fill="rgb(208,118,9)" fg:x="483" fg:w="1"/><text x="38.8591%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.6091%" y="677" width="0.0799%" height="15" fill="rgb(235,7,39)" fg:x="483" fg:w="1"/><text x="38.8591%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.6091%" y="661" width="0.0799%" height="15" fill="rgb(243,225,15)" fg:x="483" fg:w="1"/><text x="38.8591%" y="671.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="38.6890%" y="741" width="0.0799%" height="15" fill="rgb(225,216,18)" fg:x="484" fg:w="1"/><text x="38.9390%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6890%" y="725" width="0.0799%" height="15" fill="rgb(233,36,38)" fg:x="484" fg:w="1"/><text x="38.9390%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.7690%" y="725" width="0.0799%" height="15" fill="rgb(239,88,23)" fg:x="485" fg:w="1"/><text x="39.0190%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="38.8489%" y="709" width="0.0799%" height="15" fill="rgb(219,181,35)" fg:x="486" fg:w="1"/><text x="39.0989%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.8489%" y="693" width="0.0799%" height="15" fill="rgb(215,18,46)" fg:x="486" fg:w="1"/><text x="39.0989%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.8489%" y="677" width="0.0799%" height="15" fill="rgb(241,38,11)" fg:x="486" fg:w="1"/><text x="39.0989%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.0088%" y="677" width="0.0799%" height="15" fill="rgb(248,169,45)" fg:x="488" fg:w="1"/><text x="39.2588%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (6 samples, 0.48%)</title><rect x="38.6890%" y="773" width="0.4796%" height="15" fill="rgb(239,50,49)" fg:x="484" fg:w="6"/><text x="38.9390%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (6 samples, 0.48%)</title><rect x="38.6890%" y="757" width="0.4796%" height="15" fill="rgb(231,96,31)" fg:x="484" fg:w="6"/><text x="38.9390%" y="767.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="38.7690%" y="741" width="0.3997%" height="15" fill="rgb(224,193,37)" fg:x="485" fg:w="5"/><text x="39.0190%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="38.8489%" y="725" width="0.3197%" height="15" fill="rgb(227,153,50)" fg:x="486" fg:w="4"/><text x="39.0989%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="38.9289%" y="709" width="0.2398%" height="15" fill="rgb(249,228,3)" fg:x="487" fg:w="3"/><text x="39.1789%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="38.9289%" y="693" width="0.2398%" height="15" fill="rgb(219,164,43)" fg:x="487" fg:w="3"/><text x="39.1789%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="39.0887%" y="677" width="0.0799%" height="15" fill="rgb(216,45,41)" fg:x="489" fg:w="1"/><text x="39.3387%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="39.1687%" y="725" width="0.0799%" height="15" fill="rgb(210,226,51)" fg:x="490" fg:w="1"/><text x="39.4187%" y="735.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="39.1687%" y="709" width="0.0799%" height="15" fill="rgb(209,117,49)" fg:x="490" fg:w="1"/><text x="39.4187%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.1687%" y="693" width="0.0799%" height="15" fill="rgb(206,196,24)" fg:x="490" fg:w="1"/><text x="39.4187%" y="703.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="39.1687%" y="677" width="0.0799%" height="15" fill="rgb(253,218,3)" fg:x="490" fg:w="1"/><text x="39.4187%" y="687.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="39.1687%" y="773" width="0.1599%" height="15" fill="rgb(252,166,2)" fg:x="490" fg:w="2"/><text x="39.4187%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="39.1687%" y="757" width="0.1599%" height="15" fill="rgb(236,218,26)" fg:x="490" fg:w="2"/><text x="39.4187%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="39.1687%" y="741" width="0.1599%" height="15" fill="rgb(254,84,19)" fg:x="490" fg:w="2"/><text x="39.4187%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="39.2486%" y="725" width="0.0799%" height="15" fill="rgb(219,137,29)" fg:x="491" fg:w="1"/><text x="39.4986%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="39.2486%" y="709" width="0.0799%" height="15" fill="rgb(227,47,52)" fg:x="491" fg:w="1"/><text x="39.4986%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.2486%" y="693" width="0.0799%" height="15" fill="rgb(229,167,24)" fg:x="491" fg:w="1"/><text x="39.4986%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.3285%" y="565" width="0.0799%" height="15" fill="rgb(233,164,1)" fg:x="492" fg:w="1"/><text x="39.5785%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="39.3285%" y="741" width="0.1599%" height="15" fill="rgb(218,88,48)" fg:x="492" fg:w="2"/><text x="39.5785%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="39.3285%" y="725" width="0.1599%" height="15" fill="rgb(226,214,24)" fg:x="492" fg:w="2"/><text x="39.5785%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="39.3285%" y="709" width="0.1599%" height="15" fill="rgb(233,29,12)" fg:x="492" fg:w="2"/><text x="39.5785%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="39.3285%" y="693" width="0.1599%" height="15" fill="rgb(219,120,34)" fg:x="492" fg:w="2"/><text x="39.5785%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="39.3285%" y="677" width="0.1599%" height="15" fill="rgb(226,78,44)" fg:x="492" fg:w="2"/><text x="39.5785%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="39.3285%" y="661" width="0.1599%" height="15" fill="rgb(240,15,48)" fg:x="492" fg:w="2"/><text x="39.5785%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="39.3285%" y="645" width="0.1599%" height="15" fill="rgb(253,176,7)" fg:x="492" fg:w="2"/><text x="39.5785%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="39.3285%" y="629" width="0.1599%" height="15" fill="rgb(206,166,28)" fg:x="492" fg:w="2"/><text x="39.5785%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="39.3285%" y="613" width="0.1599%" height="15" fill="rgb(241,53,51)" fg:x="492" fg:w="2"/><text x="39.5785%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="39.3285%" y="597" width="0.1599%" height="15" fill="rgb(249,112,30)" fg:x="492" fg:w="2"/><text x="39.5785%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="39.3285%" y="581" width="0.1599%" height="15" fill="rgb(217,85,30)" fg:x="492" fg:w="2"/><text x="39.5785%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.4085%" y="565" width="0.0799%" height="15" fill="rgb(233,49,7)" fg:x="493" fg:w="1"/><text x="39.6585%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.4085%" y="549" width="0.0799%" height="15" fill="rgb(234,109,9)" fg:x="493" fg:w="1"/><text x="39.6585%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.4085%" y="533" width="0.0799%" height="15" fill="rgb(253,95,22)" fg:x="493" fg:w="1"/><text x="39.6585%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.4085%" y="517" width="0.0799%" height="15" fill="rgb(233,176,25)" fg:x="493" fg:w="1"/><text x="39.6585%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="39.4085%" y="501" width="0.0799%" height="15" fill="rgb(236,33,39)" fg:x="493" fg:w="1"/><text x="39.6585%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="39.4085%" y="485" width="0.0799%" height="15" fill="rgb(223,226,42)" fg:x="493" fg:w="1"/><text x="39.6585%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="39.4085%" y="469" width="0.0799%" height="15" fill="rgb(216,99,33)" fg:x="493" fg:w="1"/><text x="39.6585%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="39.4085%" y="453" width="0.0799%" height="15" fill="rgb(235,84,23)" fg:x="493" fg:w="1"/><text x="39.6585%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.4085%" y="437" width="0.0799%" height="15" fill="rgb(232,2,27)" fg:x="493" fg:w="1"/><text x="39.6585%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="39.4884%" y="725" width="0.0799%" height="15" fill="rgb(241,23,22)" fg:x="494" fg:w="1"/><text x="39.7384%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="39.4884%" y="709" width="0.0799%" height="15" fill="rgb(211,73,27)" fg:x="494" fg:w="1"/><text x="39.7384%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.4884%" y="693" width="0.0799%" height="15" fill="rgb(235,109,49)" fg:x="494" fg:w="1"/><text x="39.7384%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="39.4884%" y="741" width="0.1599%" height="15" fill="rgb(230,99,29)" fg:x="494" fg:w="2"/><text x="39.7384%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="39.5683%" y="725" width="0.0799%" height="15" fill="rgb(245,199,7)" fg:x="495" fg:w="1"/><text x="39.8183%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.5683%" y="709" width="0.0799%" height="15" fill="rgb(217,179,10)" fg:x="495" fg:w="1"/><text x="39.8183%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6483%" y="661" width="0.0799%" height="15" fill="rgb(254,99,47)" fg:x="496" fg:w="1"/><text x="39.8983%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.7282%" y="613" width="0.0799%" height="15" fill="rgb(251,121,7)" fg:x="497" fg:w="1"/><text x="39.9782%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.7282%" y="597" width="0.0799%" height="15" fill="rgb(250,177,26)" fg:x="497" fg:w="1"/><text x="39.9782%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="39.7282%" y="581" width="0.0799%" height="15" fill="rgb(232,88,15)" fg:x="497" fg:w="1"/><text x="39.9782%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="39.6483%" y="693" width="0.2398%" height="15" fill="rgb(251,54,54)" fg:x="496" fg:w="3"/><text x="39.8983%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="39.6483%" y="677" width="0.2398%" height="15" fill="rgb(208,177,15)" fg:x="496" fg:w="3"/><text x="39.8983%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="39.7282%" y="661" width="0.1599%" height="15" fill="rgb(205,97,32)" fg:x="497" fg:w="2"/><text x="39.9782%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.7282%" y="645" width="0.1599%" height="15" fill="rgb(217,192,13)" fg:x="497" fg:w="2"/><text x="39.9782%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="39.7282%" y="629" width="0.1599%" height="15" fill="rgb(215,163,41)" fg:x="497" fg:w="2"/><text x="39.9782%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="39.8082%" y="613" width="0.0799%" height="15" fill="rgb(246,83,29)" fg:x="498" fg:w="1"/><text x="40.0582%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="39.8082%" y="597" width="0.0799%" height="15" fill="rgb(219,2,45)" fg:x="498" fg:w="1"/><text x="40.0582%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8082%" y="581" width="0.0799%" height="15" fill="rgb(242,215,33)" fg:x="498" fg:w="1"/><text x="40.0582%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8082%" y="565" width="0.0799%" height="15" fill="rgb(217,1,6)" fg:x="498" fg:w="1"/><text x="40.0582%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8881%" y="677" width="0.0799%" height="15" fill="rgb(207,85,52)" fg:x="499" fg:w="1"/><text x="40.1381%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8881%" y="661" width="0.0799%" height="15" fill="rgb(231,171,19)" fg:x="499" fg:w="1"/><text x="40.1381%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="39.3285%" y="757" width="0.7194%" height="15" fill="rgb(207,128,4)" fg:x="492" fg:w="9"/><text x="39.5785%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="39.6483%" y="741" width="0.3997%" height="15" fill="rgb(219,208,4)" fg:x="496" fg:w="5"/><text x="39.8983%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="39.6483%" y="725" width="0.3997%" height="15" fill="rgb(235,161,42)" fg:x="496" fg:w="5"/><text x="39.8983%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="39.6483%" y="709" width="0.3997%" height="15" fill="rgb(247,218,18)" fg:x="496" fg:w="5"/><text x="39.8983%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="39.8881%" y="693" width="0.1599%" height="15" fill="rgb(232,114,51)" fg:x="499" fg:w="2"/><text x="40.1381%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.9680%" y="677" width="0.0799%" height="15" fill="rgb(222,95,3)" fg:x="500" fg:w="1"/><text x="40.2180%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.9680%" y="661" width="0.0799%" height="15" fill="rgb(240,65,29)" fg:x="500" fg:w="1"/><text x="40.2180%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.9680%" y="645" width="0.0799%" height="15" fill="rgb(249,209,20)" fg:x="500" fg:w="1"/><text x="40.2180%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.9680%" y="629" width="0.0799%" height="15" fill="rgb(241,48,37)" fg:x="500" fg:w="1"/><text x="40.2180%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.9680%" y="613" width="0.0799%" height="15" fill="rgb(230,140,42)" fg:x="500" fg:w="1"/><text x="40.2180%" y="623.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="39.9680%" y="597" width="0.0799%" height="15" fill="rgb(230,176,45)" fg:x="500" fg:w="1"/><text x="40.2180%" y="607.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.9680%" y="581" width="0.0799%" height="15" fill="rgb(245,112,21)" fg:x="500" fg:w="1"/><text x="40.2180%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (2 samples, 0.16%)</title><rect x="40.0480%" y="741" width="0.1599%" height="15" fill="rgb(207,183,35)" fg:x="501" fg:w="2"/><text x="40.2980%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="40.2078%" y="741" width="0.0799%" height="15" fill="rgb(227,44,33)" fg:x="503" fg:w="1"/><text x="40.4578%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="40.2078%" y="725" width="0.0799%" height="15" fill="rgb(246,120,21)" fg:x="503" fg:w="1"/><text x="40.4578%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.2078%" y="709" width="0.0799%" height="15" fill="rgb(235,57,52)" fg:x="503" fg:w="1"/><text x="40.4578%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.2878%" y="677" width="0.0799%" height="15" fill="rgb(238,84,10)" fg:x="504" fg:w="1"/><text x="40.5378%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.2878%" y="661" width="0.0799%" height="15" fill="rgb(251,200,32)" fg:x="504" fg:w="1"/><text x="40.5378%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.2878%" y="645" width="0.0799%" height="15" fill="rgb(247,159,13)" fg:x="504" fg:w="1"/><text x="40.5378%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.2878%" y="629" width="0.0799%" height="15" fill="rgb(238,64,4)" fg:x="504" fg:w="1"/><text x="40.5378%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.2878%" y="613" width="0.0799%" height="15" fill="rgb(221,131,51)" fg:x="504" fg:w="1"/><text x="40.5378%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.2878%" y="597" width="0.0799%" height="15" fill="rgb(242,5,29)" fg:x="504" fg:w="1"/><text x="40.5378%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.2878%" y="581" width="0.0799%" height="15" fill="rgb(214,130,32)" fg:x="504" fg:w="1"/><text x="40.5378%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.2878%" y="565" width="0.0799%" height="15" fill="rgb(244,210,16)" fg:x="504" fg:w="1"/><text x="40.5378%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.2878%" y="549" width="0.0799%" height="15" fill="rgb(234,48,26)" fg:x="504" fg:w="1"/><text x="40.5378%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.2878%" y="533" width="0.0799%" height="15" fill="rgb(231,82,38)" fg:x="504" fg:w="1"/><text x="40.5378%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.2878%" y="517" width="0.0799%" height="15" fill="rgb(254,128,41)" fg:x="504" fg:w="1"/><text x="40.5378%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.2878%" y="501" width="0.0799%" height="15" fill="rgb(212,73,49)" fg:x="504" fg:w="1"/><text x="40.5378%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.2878%" y="485" width="0.0799%" height="15" fill="rgb(205,62,54)" fg:x="504" fg:w="1"/><text x="40.5378%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.2878%" y="469" width="0.0799%" height="15" fill="rgb(228,0,8)" fg:x="504" fg:w="1"/><text x="40.5378%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="40.2878%" y="453" width="0.0799%" height="15" fill="rgb(251,28,17)" fg:x="504" fg:w="1"/><text x="40.5378%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="40.2878%" y="437" width="0.0799%" height="15" fill="rgb(238,105,27)" fg:x="504" fg:w="1"/><text x="40.5378%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="40.2878%" y="741" width="0.1599%" height="15" fill="rgb(237,216,33)" fg:x="504" fg:w="2"/><text x="40.5378%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="40.2878%" y="725" width="0.1599%" height="15" fill="rgb(229,228,25)" fg:x="504" fg:w="2"/><text x="40.5378%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="40.2878%" y="709" width="0.1599%" height="15" fill="rgb(233,75,23)" fg:x="504" fg:w="2"/><text x="40.5378%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="40.2878%" y="693" width="0.1599%" height="15" fill="rgb(231,207,16)" fg:x="504" fg:w="2"/><text x="40.5378%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.3677%" y="677" width="0.0799%" height="15" fill="rgb(231,191,45)" fg:x="505" fg:w="1"/><text x="40.6177%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.3677%" y="661" width="0.0799%" height="15" fill="rgb(224,133,17)" fg:x="505" fg:w="1"/><text x="40.6177%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.3677%" y="645" width="0.0799%" height="15" fill="rgb(209,178,27)" fg:x="505" fg:w="1"/><text x="40.6177%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.3677%" y="629" width="0.0799%" height="15" fill="rgb(218,37,11)" fg:x="505" fg:w="1"/><text x="40.6177%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.3677%" y="613" width="0.0799%" height="15" fill="rgb(251,226,25)" fg:x="505" fg:w="1"/><text x="40.6177%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.3677%" y="597" width="0.0799%" height="15" fill="rgb(209,222,27)" fg:x="505" fg:w="1"/><text x="40.6177%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.3677%" y="581" width="0.0799%" height="15" fill="rgb(238,22,21)" fg:x="505" fg:w="1"/><text x="40.6177%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.4476%" y="725" width="0.0799%" height="15" fill="rgb(233,161,25)" fg:x="506" fg:w="1"/><text x="40.6976%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.4476%" y="709" width="0.0799%" height="15" fill="rgb(226,122,53)" fg:x="506" fg:w="1"/><text x="40.6976%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="40.4476%" y="693" width="0.0799%" height="15" fill="rgb(220,123,17)" fg:x="506" fg:w="1"/><text x="40.6976%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.4476%" y="677" width="0.0799%" height="15" fill="rgb(230,224,35)" fg:x="506" fg:w="1"/><text x="40.6976%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="40.5276%" y="693" width="0.0799%" height="15" fill="rgb(246,83,8)" fg:x="507" fg:w="1"/><text x="40.7776%" y="703.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="40.5276%" y="725" width="0.1599%" height="15" fill="rgb(230,214,17)" fg:x="507" fg:w="2"/><text x="40.7776%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="40.5276%" y="709" width="0.1599%" height="15" fill="rgb(222,97,18)" fg:x="507" fg:w="2"/><text x="40.7776%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="40.6075%" y="693" width="0.0799%" height="15" fill="rgb(206,79,1)" fg:x="508" fg:w="1"/><text x="40.8575%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="40.6075%" y="677" width="0.0799%" height="15" fill="rgb(214,121,34)" fg:x="508" fg:w="1"/><text x="40.8575%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6075%" y="661" width="0.0799%" height="15" fill="rgb(249,199,46)" fg:x="508" fg:w="1"/><text x="40.8575%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="40.4476%" y="741" width="0.3197%" height="15" fill="rgb(214,222,46)" fg:x="506" fg:w="4"/><text x="40.6976%" y="751.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="40.6875%" y="725" width="0.0799%" height="15" fill="rgb(248,168,30)" fg:x="509" fg:w="1"/><text x="40.9375%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.6875%" y="709" width="0.0799%" height="15" fill="rgb(226,14,28)" fg:x="509" fg:w="1"/><text x="40.9375%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="40.6875%" y="693" width="0.0799%" height="15" fill="rgb(253,123,1)" fg:x="509" fg:w="1"/><text x="40.9375%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.6875%" y="677" width="0.0799%" height="15" fill="rgb(225,24,42)" fg:x="509" fg:w="1"/><text x="40.9375%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.7674%" y="661" width="0.0799%" height="15" fill="rgb(216,161,37)" fg:x="510" fg:w="1"/><text x="41.0174%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.7674%" y="645" width="0.0799%" height="15" fill="rgb(251,164,26)" fg:x="510" fg:w="1"/><text x="41.0174%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.8473%" y="597" width="0.0799%" height="15" fill="rgb(219,177,3)" fg:x="511" fg:w="1"/><text x="41.0973%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="40.7674%" y="693" width="0.2398%" height="15" fill="rgb(222,65,0)" fg:x="510" fg:w="3"/><text x="41.0174%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="40.7674%" y="677" width="0.2398%" height="15" fill="rgb(223,69,54)" fg:x="510" fg:w="3"/><text x="41.0174%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.8473%" y="661" width="0.1599%" height="15" fill="rgb(235,30,27)" fg:x="511" fg:w="2"/><text x="41.0973%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.8473%" y="645" width="0.1599%" height="15" fill="rgb(220,183,50)" fg:x="511" fg:w="2"/><text x="41.0973%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="40.8473%" y="629" width="0.1599%" height="15" fill="rgb(248,198,15)" fg:x="511" fg:w="2"/><text x="41.0973%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.8473%" y="613" width="0.1599%" height="15" fill="rgb(222,211,4)" fg:x="511" fg:w="2"/><text x="41.0973%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.9273%" y="597" width="0.0799%" height="15" fill="rgb(214,102,34)" fg:x="512" fg:w="1"/><text x="41.1773%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9273%" y="581" width="0.0799%" height="15" fill="rgb(245,92,5)" fg:x="512" fg:w="1"/><text x="41.1773%" y="591.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="41.0072%" y="677" width="0.0799%" height="15" fill="rgb(252,72,51)" fg:x="513" fg:w="1"/><text x="41.2572%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0072%" y="661" width="0.0799%" height="15" fill="rgb(252,208,19)" fg:x="513" fg:w="1"/><text x="41.2572%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0072%" y="645" width="0.0799%" height="15" fill="rgb(211,69,7)" fg:x="513" fg:w="1"/><text x="41.2572%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.0072%" y="629" width="0.0799%" height="15" fill="rgb(211,27,16)" fg:x="513" fg:w="1"/><text x="41.2572%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.0072%" y="613" width="0.0799%" height="15" fill="rgb(219,216,14)" fg:x="513" fg:w="1"/><text x="41.2572%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.0072%" y="597" width="0.0799%" height="15" fill="rgb(219,71,8)" fg:x="513" fg:w="1"/><text x="41.2572%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="41.0072%" y="581" width="0.0799%" height="15" fill="rgb(223,170,53)" fg:x="513" fg:w="1"/><text x="41.2572%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.0072%" y="565" width="0.0799%" height="15" fill="rgb(246,21,26)" fg:x="513" fg:w="1"/><text x="41.2572%" y="575.50"></text></g><g><title>plugins_core::build::Build::occupying (23 samples, 1.84%)</title><rect x="39.3285%" y="773" width="1.8385%" height="15" fill="rgb(248,20,46)" fg:x="492" fg:w="23"/><text x="39.5785%" y="783.50">p..</text></g><g><title>plugins_core::tools::set_occupying (14 samples, 1.12%)</title><rect x="40.0480%" y="757" width="1.1191%" height="15" fill="rgb(252,94,11)" fg:x="501" fg:w="14"/><text x="40.2980%" y="767.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (5 samples, 0.40%)</title><rect x="40.7674%" y="741" width="0.3997%" height="15" fill="rgb(236,163,8)" fg:x="510" fg:w="5"/><text x="41.0174%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="40.7674%" y="725" width="0.3997%" height="15" fill="rgb(217,221,45)" fg:x="510" fg:w="5"/><text x="41.0174%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="40.7674%" y="709" width="0.3997%" height="15" fill="rgb(238,38,17)" fg:x="510" fg:w="5"/><text x="41.0174%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="41.0072%" y="693" width="0.1599%" height="15" fill="rgb(242,210,23)" fg:x="513" fg:w="2"/><text x="41.2572%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.0871%" y="677" width="0.0799%" height="15" fill="rgb(250,86,53)" fg:x="514" fg:w="1"/><text x="41.3371%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.0871%" y="661" width="0.0799%" height="15" fill="rgb(223,168,25)" fg:x="514" fg:w="1"/><text x="41.3371%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.0871%" y="645" width="0.0799%" height="15" fill="rgb(251,189,4)" fg:x="514" fg:w="1"/><text x="41.3371%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.0871%" y="629" width="0.0799%" height="15" fill="rgb(245,19,28)" fg:x="514" fg:w="1"/><text x="41.3371%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0871%" y="613" width="0.0799%" height="15" fill="rgb(207,10,34)" fg:x="514" fg:w="1"/><text x="41.3371%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0871%" y="597" width="0.0799%" height="15" fill="rgb(235,153,31)" fg:x="514" fg:w="1"/><text x="41.3371%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.0871%" y="581" width="0.0799%" height="15" fill="rgb(228,72,37)" fg:x="514" fg:w="1"/><text x="41.3371%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.0871%" y="565" width="0.0799%" height="15" fill="rgb(215,15,16)" fg:x="514" fg:w="1"/><text x="41.3371%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.0871%" y="549" width="0.0799%" height="15" fill="rgb(250,119,29)" fg:x="514" fg:w="1"/><text x="41.3371%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.0871%" y="533" width="0.0799%" height="15" fill="rgb(214,59,1)" fg:x="514" fg:w="1"/><text x="41.3371%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.0871%" y="517" width="0.0799%" height="15" fill="rgb(223,109,25)" fg:x="514" fg:w="1"/><text x="41.3371%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.0871%" y="501" width="0.0799%" height="15" fill="rgb(230,198,22)" fg:x="514" fg:w="1"/><text x="41.3371%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.0871%" y="485" width="0.0799%" height="15" fill="rgb(245,184,46)" fg:x="514" fg:w="1"/><text x="41.3371%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.0871%" y="469" width="0.0799%" height="15" fill="rgb(253,73,16)" fg:x="514" fg:w="1"/><text x="41.3371%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.0871%" y="453" width="0.0799%" height="15" fill="rgb(206,94,45)" fg:x="514" fg:w="1"/><text x="41.3371%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0871%" y="437" width="0.0799%" height="15" fill="rgb(236,83,27)" fg:x="514" fg:w="1"/><text x="41.3371%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="41.1671%" y="741" width="0.1599%" height="15" fill="rgb(220,196,8)" fg:x="515" fg:w="2"/><text x="41.4171%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="41.1671%" y="725" width="0.1599%" height="15" fill="rgb(254,185,14)" fg:x="515" fg:w="2"/><text x="41.4171%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="41.1671%" y="709" width="0.1599%" height="15" fill="rgb(226,50,22)" fg:x="515" fg:w="2"/><text x="41.4171%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="41.1671%" y="693" width="0.1599%" height="15" fill="rgb(253,147,0)" fg:x="515" fg:w="2"/><text x="41.4171%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="41.1671%" y="677" width="0.1599%" height="15" fill="rgb(252,46,33)" fg:x="515" fg:w="2"/><text x="41.4171%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.2470%" y="661" width="0.0799%" height="15" fill="rgb(242,22,54)" fg:x="516" fg:w="1"/><text x="41.4970%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.2470%" y="645" width="0.0799%" height="15" fill="rgb(223,178,32)" fg:x="516" fg:w="1"/><text x="41.4970%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.2470%" y="629" width="0.0799%" height="15" fill="rgb(214,106,53)" fg:x="516" fg:w="1"/><text x="41.4970%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.2470%" y="613" width="0.0799%" height="15" fill="rgb(232,65,50)" fg:x="516" fg:w="1"/><text x="41.4970%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.2470%" y="597" width="0.0799%" height="15" fill="rgb(231,110,28)" fg:x="516" fg:w="1"/><text x="41.4970%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.2470%" y="581" width="0.0799%" height="15" fill="rgb(216,71,40)" fg:x="516" fg:w="1"/><text x="41.4970%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.2470%" y="565" width="0.0799%" height="15" fill="rgb(229,89,53)" fg:x="516" fg:w="1"/><text x="41.4970%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="41.3269%" y="725" width="0.0799%" height="15" fill="rgb(210,124,14)" fg:x="517" fg:w="1"/><text x="41.5769%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="41.3269%" y="741" width="0.1599%" height="15" fill="rgb(236,213,6)" fg:x="517" fg:w="2"/><text x="41.5769%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.4069%" y="725" width="0.0799%" height="15" fill="rgb(228,41,5)" fg:x="518" fg:w="1"/><text x="41.6569%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.4069%" y="709" width="0.0799%" height="15" fill="rgb(221,167,25)" fg:x="518" fg:w="1"/><text x="41.6569%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.4069%" y="693" width="0.0799%" height="15" fill="rgb(228,144,37)" fg:x="518" fg:w="1"/><text x="41.6569%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.4868%" y="709" width="0.0799%" height="15" fill="rgb(227,189,38)" fg:x="519" fg:w="1"/><text x="41.7368%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.4868%" y="693" width="0.0799%" height="15" fill="rgb(218,8,2)" fg:x="519" fg:w="1"/><text x="41.7368%" y="703.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.5667%" y="693" width="0.0799%" height="15" fill="rgb(209,61,28)" fg:x="520" fg:w="1"/><text x="41.8167%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.5667%" y="677" width="0.0799%" height="15" fill="rgb(233,140,39)" fg:x="520" fg:w="1"/><text x="41.8167%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.5667%" y="661" width="0.0799%" height="15" fill="rgb(251,66,48)" fg:x="520" fg:w="1"/><text x="41.8167%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.5667%" y="645" width="0.0799%" height="15" fill="rgb(210,44,45)" fg:x="520" fg:w="1"/><text x="41.8167%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.5667%" y="629" width="0.0799%" height="15" fill="rgb(214,136,46)" fg:x="520" fg:w="1"/><text x="41.8167%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.5667%" y="613" width="0.0799%" height="15" fill="rgb(207,130,50)" fg:x="520" fg:w="1"/><text x="41.8167%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.5667%" y="597" width="0.0799%" height="15" fill="rgb(228,102,49)" fg:x="520" fg:w="1"/><text x="41.8167%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.5667%" y="581" width="0.0799%" height="15" fill="rgb(253,55,1)" fg:x="520" fg:w="1"/><text x="41.8167%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.5667%" y="565" width="0.0799%" height="15" fill="rgb(238,222,9)" fg:x="520" fg:w="1"/><text x="41.8167%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.5667%" y="549" width="0.0799%" height="15" fill="rgb(246,99,6)" fg:x="520" fg:w="1"/><text x="41.8167%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.5667%" y="533" width="0.0799%" height="15" fill="rgb(219,110,26)" fg:x="520" fg:w="1"/><text x="41.8167%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.5667%" y="517" width="0.0799%" height="15" fill="rgb(239,160,33)" fg:x="520" fg:w="1"/><text x="41.8167%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.5667%" y="501" width="0.0799%" height="15" fill="rgb(220,202,23)" fg:x="520" fg:w="1"/><text x="41.8167%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="41.4868%" y="725" width="0.2398%" height="15" fill="rgb(208,80,26)" fg:x="519" fg:w="3"/><text x="41.7368%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.5667%" y="709" width="0.1599%" height="15" fill="rgb(243,85,7)" fg:x="520" fg:w="2"/><text x="41.8167%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="41.6467%" y="693" width="0.0799%" height="15" fill="rgb(228,77,47)" fg:x="521" fg:w="1"/><text x="41.8967%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.6467%" y="677" width="0.0799%" height="15" fill="rgb(212,226,8)" fg:x="521" fg:w="1"/><text x="41.8967%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.6467%" y="661" width="0.0799%" height="15" fill="rgb(241,120,54)" fg:x="521" fg:w="1"/><text x="41.8967%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8066%" y="709" width="0.0799%" height="15" fill="rgb(226,80,16)" fg:x="523" fg:w="1"/><text x="42.0566%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8066%" y="693" width="0.0799%" height="15" fill="rgb(240,76,13)" fg:x="523" fg:w="1"/><text x="42.0566%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8066%" y="677" width="0.0799%" height="15" fill="rgb(252,74,8)" fg:x="523" fg:w="1"/><text x="42.0566%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8066%" y="661" width="0.0799%" height="15" fill="rgb(244,155,2)" fg:x="523" fg:w="1"/><text x="42.0566%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.8066%" y="645" width="0.0799%" height="15" fill="rgb(215,81,35)" fg:x="523" fg:w="1"/><text x="42.0566%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.8066%" y="629" width="0.0799%" height="15" fill="rgb(206,55,2)" fg:x="523" fg:w="1"/><text x="42.0566%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.8066%" y="613" width="0.0799%" height="15" fill="rgb(231,2,34)" fg:x="523" fg:w="1"/><text x="42.0566%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8066%" y="597" width="0.0799%" height="15" fill="rgb(242,176,48)" fg:x="523" fg:w="1"/><text x="42.0566%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8066%" y="581" width="0.0799%" height="15" fill="rgb(249,31,36)" fg:x="523" fg:w="1"/><text x="42.0566%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.8066%" y="565" width="0.0799%" height="15" fill="rgb(205,18,17)" fg:x="523" fg:w="1"/><text x="42.0566%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.8066%" y="549" width="0.0799%" height="15" fill="rgb(254,130,5)" fg:x="523" fg:w="1"/><text x="42.0566%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.8066%" y="533" width="0.0799%" height="15" fill="rgb(229,42,45)" fg:x="523" fg:w="1"/><text x="42.0566%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.8066%" y="517" width="0.0799%" height="15" fill="rgb(245,95,25)" fg:x="523" fg:w="1"/><text x="42.0566%" y="527.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="41.8865%" y="709" width="0.0799%" height="15" fill="rgb(249,193,38)" fg:x="524" fg:w="1"/><text x="42.1365%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.8865%" y="693" width="0.0799%" height="15" fill="rgb(241,140,43)" fg:x="524" fg:w="1"/><text x="42.1365%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (7 samples, 0.56%)</title><rect x="41.4868%" y="741" width="0.5596%" height="15" fill="rgb(245,78,48)" fg:x="519" fg:w="7"/><text x="41.7368%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="41.7266%" y="725" width="0.3197%" height="15" fill="rgb(214,92,39)" fg:x="522" fg:w="4"/><text x="41.9766%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="41.9664%" y="709" width="0.0799%" height="15" fill="rgb(211,189,14)" fg:x="525" fg:w="1"/><text x="42.2164%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.9664%" y="693" width="0.0799%" height="15" fill="rgb(218,7,24)" fg:x="525" fg:w="1"/><text x="42.2164%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.9664%" y="677" width="0.0799%" height="15" fill="rgb(224,200,49)" fg:x="525" fg:w="1"/><text x="42.2164%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.0464%" y="661" width="0.0799%" height="15" fill="rgb(218,210,14)" fg:x="526" fg:w="1"/><text x="42.2964%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.0464%" y="645" width="0.0799%" height="15" fill="rgb(234,142,31)" fg:x="526" fg:w="1"/><text x="42.2964%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.0464%" y="629" width="0.0799%" height="15" fill="rgb(227,165,2)" fg:x="526" fg:w="1"/><text x="42.2964%" y="639.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="42.0464%" y="693" width="0.1599%" height="15" fill="rgb(232,44,46)" fg:x="526" fg:w="2"/><text x="42.2964%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="42.0464%" y="677" width="0.1599%" height="15" fill="rgb(236,149,47)" fg:x="526" fg:w="2"/><text x="42.2964%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="42.1263%" y="661" width="0.0799%" height="15" fill="rgb(227,45,31)" fg:x="527" fg:w="1"/><text x="42.3763%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.1263%" y="645" width="0.0799%" height="15" fill="rgb(240,176,51)" fg:x="527" fg:w="1"/><text x="42.3763%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.1263%" y="629" width="0.0799%" height="15" fill="rgb(249,146,41)" fg:x="527" fg:w="1"/><text x="42.3763%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.1263%" y="613" width="0.0799%" height="15" fill="rgb(213,208,4)" fg:x="527" fg:w="1"/><text x="42.3763%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.1263%" y="597" width="0.0799%" height="15" fill="rgb(245,84,36)" fg:x="527" fg:w="1"/><text x="42.3763%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.2062%" y="677" width="0.1599%" height="15" fill="rgb(254,84,18)" fg:x="528" fg:w="2"/><text x="42.4562%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.2862%" y="661" width="0.0799%" height="15" fill="rgb(225,38,54)" fg:x="529" fg:w="1"/><text x="42.5362%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.2862%" y="645" width="0.0799%" height="15" fill="rgb(246,50,30)" fg:x="529" fg:w="1"/><text x="42.5362%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.2862%" y="629" width="0.0799%" height="15" fill="rgb(246,148,9)" fg:x="529" fg:w="1"/><text x="42.5362%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.2862%" y="613" width="0.0799%" height="15" fill="rgb(223,75,4)" fg:x="529" fg:w="1"/><text x="42.5362%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.2862%" y="597" width="0.0799%" height="15" fill="rgb(239,148,41)" fg:x="529" fg:w="1"/><text x="42.5362%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.2862%" y="581" width="0.0799%" height="15" fill="rgb(205,195,3)" fg:x="529" fg:w="1"/><text x="42.5362%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.2862%" y="565" width="0.0799%" height="15" fill="rgb(254,161,1)" fg:x="529" fg:w="1"/><text x="42.5362%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.2862%" y="549" width="0.0799%" height="15" fill="rgb(211,229,8)" fg:x="529" fg:w="1"/><text x="42.5362%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.2862%" y="533" width="0.0799%" height="15" fill="rgb(220,97,9)" fg:x="529" fg:w="1"/><text x="42.5362%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.2862%" y="517" width="0.0799%" height="15" fill="rgb(240,218,8)" fg:x="529" fg:w="1"/><text x="42.5362%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.2862%" y="501" width="0.0799%" height="15" fill="rgb(250,44,0)" fg:x="529" fg:w="1"/><text x="42.5362%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.2862%" y="485" width="0.0799%" height="15" fill="rgb(236,41,53)" fg:x="529" fg:w="1"/><text x="42.5362%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2862%" y="469" width="0.0799%" height="15" fill="rgb(218,227,13)" fg:x="529" fg:w="1"/><text x="42.5362%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="42.0464%" y="725" width="0.3997%" height="15" fill="rgb(217,94,32)" fg:x="526" fg:w="5"/><text x="42.2964%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="42.0464%" y="709" width="0.3997%" height="15" fill="rgb(213,217,12)" fg:x="526" fg:w="5"/><text x="42.2964%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="42.2062%" y="693" width="0.2398%" height="15" fill="rgb(229,13,46)" fg:x="528" fg:w="3"/><text x="42.4562%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.3661%" y="677" width="0.0799%" height="15" fill="rgb(243,139,5)" fg:x="530" fg:w="1"/><text x="42.6161%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.3661%" y="661" width="0.0799%" height="15" fill="rgb(249,38,45)" fg:x="530" fg:w="1"/><text x="42.6161%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.3661%" y="645" width="0.0799%" height="15" fill="rgb(216,70,11)" fg:x="530" fg:w="1"/><text x="42.6161%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3661%" y="629" width="0.0799%" height="15" fill="rgb(253,101,25)" fg:x="530" fg:w="1"/><text x="42.6161%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.44%)</title><rect x="41.1671%" y="757" width="1.4388%" height="15" fill="rgb(207,197,30)" fg:x="515" fg:w="18"/><text x="41.4171%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="42.0464%" y="741" width="0.5596%" height="15" fill="rgb(238,87,13)" fg:x="526" fg:w="7"/><text x="42.2964%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="42.4460%" y="725" width="0.1599%" height="15" fill="rgb(215,155,8)" fg:x="531" fg:w="2"/><text x="42.6960%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.5260%" y="709" width="0.0799%" height="15" fill="rgb(239,166,38)" fg:x="532" fg:w="1"/><text x="42.7760%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.5260%" y="693" width="0.0799%" height="15" fill="rgb(240,194,35)" fg:x="532" fg:w="1"/><text x="42.7760%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.5260%" y="677" width="0.0799%" height="15" fill="rgb(219,10,44)" fg:x="532" fg:w="1"/><text x="42.7760%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.5260%" y="661" width="0.0799%" height="15" fill="rgb(251,220,35)" fg:x="532" fg:w="1"/><text x="42.7760%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.5260%" y="645" width="0.0799%" height="15" fill="rgb(218,117,13)" fg:x="532" fg:w="1"/><text x="42.7760%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="42.5260%" y="629" width="0.0799%" height="15" fill="rgb(221,213,40)" fg:x="532" fg:w="1"/><text x="42.7760%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.5260%" y="613" width="0.0799%" height="15" fill="rgb(251,224,35)" fg:x="532" fg:w="1"/><text x="42.7760%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="42.6059%" y="741" width="0.1599%" height="15" fill="rgb(241,33,39)" fg:x="533" fg:w="2"/><text x="42.8559%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="42.6059%" y="725" width="0.1599%" height="15" fill="rgb(222,74,17)" fg:x="533" fg:w="2"/><text x="42.8559%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="42.6059%" y="709" width="0.1599%" height="15" fill="rgb(225,103,0)" fg:x="533" fg:w="2"/><text x="42.8559%" y="719.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (258 samples, 20.62%)</title><rect x="22.2222%" y="789" width="20.6235%" height="15" fill="rgb(240,0,12)" fg:x="278" fg:w="258"/><text x="22.4722%" y="799.50">plugins_core::build::BuildSurrou..</text></g><g><title>plugins_core::build::Build::wearing (21 samples, 1.68%)</title><rect x="41.1671%" y="773" width="1.6787%" height="15" fill="rgb(233,213,37)" fg:x="515" fg:w="21"/><text x="41.4171%" y="783.50"></text></g><g><title>plugins_core::tools::set_wearing (3 samples, 0.24%)</title><rect x="42.6059%" y="757" width="0.2398%" height="15" fill="rgb(225,84,52)" fg:x="533" fg:w="3"/><text x="42.8559%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="42.7658%" y="741" width="0.0799%" height="15" fill="rgb(247,160,51)" fg:x="535" fg:w="1"/><text x="43.0158%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7658%" y="725" width="0.0799%" height="15" fill="rgb(244,60,51)" fg:x="535" fg:w="1"/><text x="43.0158%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="42.9257%" y="741" width="0.0799%" height="15" fill="rgb(233,114,7)" fg:x="537" fg:w="1"/><text x="43.1757%" y="751.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="42.9257%" y="725" width="0.0799%" height="15" fill="rgb(246,136,16)" fg:x="537" fg:w="1"/><text x="43.1757%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="42.9257%" y="709" width="0.0799%" height="15" fill="rgb(243,114,45)" fg:x="537" fg:w="1"/><text x="43.1757%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.9257%" y="693" width="0.0799%" height="15" fill="rgb(247,183,43)" fg:x="537" fg:w="1"/><text x="43.1757%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.9257%" y="677" width="0.0799%" height="15" fill="rgb(251,210,42)" fg:x="537" fg:w="1"/><text x="43.1757%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.9257%" y="661" width="0.0799%" height="15" fill="rgb(221,88,35)" fg:x="537" fg:w="1"/><text x="43.1757%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="42.9257%" y="757" width="0.1599%" height="15" fill="rgb(242,21,20)" fg:x="537" fg:w="2"/><text x="43.1757%" y="767.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="43.0056%" y="741" width="0.0799%" height="15" fill="rgb(233,226,36)" fg:x="538" fg:w="1"/><text x="43.2556%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="43.0056%" y="725" width="0.0799%" height="15" fill="rgb(243,189,34)" fg:x="538" fg:w="1"/><text x="43.2556%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="43.0056%" y="709" width="0.0799%" height="15" fill="rgb(207,145,50)" fg:x="538" fg:w="1"/><text x="43.2556%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="43.0855%" y="741" width="0.0799%" height="15" fill="rgb(242,1,50)" fg:x="539" fg:w="1"/><text x="43.3355%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="43.0855%" y="725" width="0.0799%" height="15" fill="rgb(231,65,32)" fg:x="539" fg:w="1"/><text x="43.3355%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.1655%" y="709" width="0.0799%" height="15" fill="rgb(208,68,49)" fg:x="540" fg:w="1"/><text x="43.4155%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1655%" y="693" width="0.0799%" height="15" fill="rgb(253,54,49)" fg:x="540" fg:w="1"/><text x="43.4155%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1655%" y="677" width="0.0799%" height="15" fill="rgb(245,186,24)" fg:x="540" fg:w="1"/><text x="43.4155%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.1655%" y="661" width="0.0799%" height="15" fill="rgb(209,2,41)" fg:x="540" fg:w="1"/><text x="43.4155%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.1655%" y="645" width="0.0799%" height="15" fill="rgb(242,208,54)" fg:x="540" fg:w="1"/><text x="43.4155%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.1655%" y="629" width="0.0799%" height="15" fill="rgb(225,9,51)" fg:x="540" fg:w="1"/><text x="43.4155%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1655%" y="613" width="0.0799%" height="15" fill="rgb(207,207,25)" fg:x="540" fg:w="1"/><text x="43.4155%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1655%" y="597" width="0.0799%" height="15" fill="rgb(253,96,18)" fg:x="540" fg:w="1"/><text x="43.4155%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.1655%" y="581" width="0.0799%" height="15" fill="rgb(252,215,20)" fg:x="540" fg:w="1"/><text x="43.4155%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.1655%" y="565" width="0.0799%" height="15" fill="rgb(245,227,26)" fg:x="540" fg:w="1"/><text x="43.4155%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.1655%" y="549" width="0.0799%" height="15" fill="rgb(241,208,0)" fg:x="540" fg:w="1"/><text x="43.4155%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.1655%" y="533" width="0.0799%" height="15" fill="rgb(224,130,10)" fg:x="540" fg:w="1"/><text x="43.4155%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.1655%" y="517" width="0.0799%" height="15" fill="rgb(237,29,0)" fg:x="540" fg:w="1"/><text x="43.4155%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (7 samples, 0.56%)</title><rect x="42.8457%" y="789" width="0.5596%" height="15" fill="rgb(219,27,41)" fg:x="536" fg:w="7"/><text x="43.0957%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (7 samples, 0.56%)</title><rect x="42.8457%" y="773" width="0.5596%" height="15" fill="rgb(245,101,19)" fg:x="536" fg:w="7"/><text x="43.0957%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="43.0855%" y="757" width="0.3197%" height="15" fill="rgb(243,44,37)" fg:x="539" fg:w="4"/><text x="43.3355%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="43.1655%" y="741" width="0.2398%" height="15" fill="rgb(228,213,43)" fg:x="540" fg:w="3"/><text x="43.4155%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="43.1655%" y="725" width="0.2398%" height="15" fill="rgb(219,163,21)" fg:x="540" fg:w="3"/><text x="43.4155%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="43.2454%" y="709" width="0.1599%" height="15" fill="rgb(234,86,24)" fg:x="541" fg:w="2"/><text x="43.4954%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.2454%" y="693" width="0.1599%" height="15" fill="rgb(225,10,24)" fg:x="541" fg:w="2"/><text x="43.4954%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.3253%" y="677" width="0.0799%" height="15" fill="rgb(218,109,7)" fg:x="542" fg:w="1"/><text x="43.5753%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="43.5651%" y="725" width="0.0799%" height="15" fill="rgb(210,20,26)" fg:x="545" fg:w="1"/><text x="43.8151%" y="735.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="43.5651%" y="709" width="0.0799%" height="15" fill="rgb(216,18,1)" fg:x="545" fg:w="1"/><text x="43.8151%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="43.5651%" y="741" width="0.1599%" height="15" fill="rgb(206,163,23)" fg:x="545" fg:w="2"/><text x="43.8151%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="43.6451%" y="725" width="0.0799%" height="15" fill="rgb(229,150,31)" fg:x="546" fg:w="1"/><text x="43.8951%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="43.6451%" y="709" width="0.0799%" height="15" fill="rgb(231,10,5)" fg:x="546" fg:w="1"/><text x="43.8951%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.6451%" y="693" width="0.0799%" height="15" fill="rgb(250,40,50)" fg:x="546" fg:w="1"/><text x="43.8951%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.6451%" y="677" width="0.0799%" height="15" fill="rgb(217,119,7)" fg:x="546" fg:w="1"/><text x="43.8951%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="43.7250%" y="725" width="0.0799%" height="15" fill="rgb(245,214,40)" fg:x="547" fg:w="1"/><text x="43.9750%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="43.7250%" y="709" width="0.0799%" height="15" fill="rgb(216,187,1)" fg:x="547" fg:w="1"/><text x="43.9750%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.8050%" y="677" width="0.0799%" height="15" fill="rgb(237,146,21)" fg:x="548" fg:w="1"/><text x="44.0550%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="43.7250%" y="741" width="0.2398%" height="15" fill="rgb(210,174,47)" fg:x="547" fg:w="3"/><text x="43.9750%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="43.8050%" y="725" width="0.1599%" height="15" fill="rgb(218,111,39)" fg:x="548" fg:w="2"/><text x="44.0550%" y="735.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="43.8050%" y="709" width="0.1599%" height="15" fill="rgb(224,95,19)" fg:x="548" fg:w="2"/><text x="44.0550%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.8050%" y="693" width="0.1599%" height="15" fill="rgb(234,15,38)" fg:x="548" fg:w="2"/><text x="44.0550%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="43.8849%" y="677" width="0.0799%" height="15" fill="rgb(246,56,12)" fg:x="549" fg:w="1"/><text x="44.1349%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.8849%" y="661" width="0.0799%" height="15" fill="rgb(247,16,17)" fg:x="549" fg:w="1"/><text x="44.1349%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.8849%" y="645" width="0.0799%" height="15" fill="rgb(215,151,11)" fg:x="549" fg:w="1"/><text x="44.1349%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="43.9648%" y="693" width="0.0799%" height="15" fill="rgb(225,16,24)" fg:x="550" fg:w="1"/><text x="44.2148%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="43.9648%" y="677" width="0.0799%" height="15" fill="rgb(217,117,5)" fg:x="550" fg:w="1"/><text x="44.2148%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.9648%" y="661" width="0.0799%" height="15" fill="rgb(246,187,53)" fg:x="550" fg:w="1"/><text x="44.2148%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.9648%" y="645" width="0.0799%" height="15" fill="rgb(241,71,40)" fg:x="550" fg:w="1"/><text x="44.2148%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.9648%" y="629" width="0.0799%" height="15" fill="rgb(231,67,39)" fg:x="550" fg:w="1"/><text x="44.2148%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="43.9648%" y="725" width="0.1599%" height="15" fill="rgb(222,120,24)" fg:x="550" fg:w="2"/><text x="44.2148%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="43.9648%" y="709" width="0.1599%" height="15" fill="rgb(248,3,3)" fg:x="550" fg:w="2"/><text x="44.2148%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.0448%" y="693" width="0.0799%" height="15" fill="rgb(228,218,5)" fg:x="551" fg:w="1"/><text x="44.2948%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="44.0448%" y="677" width="0.0799%" height="15" fill="rgb(212,202,43)" fg:x="551" fg:w="1"/><text x="44.2948%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.0448%" y="661" width="0.0799%" height="15" fill="rgb(235,183,2)" fg:x="551" fg:w="1"/><text x="44.2948%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0448%" y="645" width="0.0799%" height="15" fill="rgb(230,165,10)" fg:x="551" fg:w="1"/><text x="44.2948%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="43.4053%" y="757" width="0.7994%" height="15" fill="rgb(219,54,40)" fg:x="543" fg:w="10"/><text x="43.6553%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="43.9648%" y="741" width="0.2398%" height="15" fill="rgb(244,73,9)" fg:x="550" fg:w="3"/><text x="44.2148%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="44.1247%" y="725" width="0.0799%" height="15" fill="rgb(212,32,45)" fg:x="552" fg:w="1"/><text x="44.3747%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="44.2046%" y="741" width="0.0799%" height="15" fill="rgb(205,58,31)" fg:x="553" fg:w="1"/><text x="44.4546%" y="751.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="44.2046%" y="725" width="0.0799%" height="15" fill="rgb(250,120,43)" fg:x="553" fg:w="1"/><text x="44.4546%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="44.2046%" y="709" width="0.0799%" height="15" fill="rgb(235,13,10)" fg:x="553" fg:w="1"/><text x="44.4546%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.2046%" y="693" width="0.0799%" height="15" fill="rgb(232,219,31)" fg:x="553" fg:w="1"/><text x="44.4546%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.2846%" y="725" width="0.0799%" height="15" fill="rgb(218,157,51)" fg:x="554" fg:w="1"/><text x="44.5346%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.2846%" y="709" width="0.0799%" height="15" fill="rgb(211,91,52)" fg:x="554" fg:w="1"/><text x="44.5346%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.2846%" y="693" width="0.0799%" height="15" fill="rgb(240,173,1)" fg:x="554" fg:w="1"/><text x="44.5346%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.2846%" y="677" width="0.0799%" height="15" fill="rgb(248,20,47)" fg:x="554" fg:w="1"/><text x="44.5346%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.2846%" y="661" width="0.0799%" height="15" fill="rgb(217,221,40)" fg:x="554" fg:w="1"/><text x="44.5346%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.2846%" y="645" width="0.0799%" height="15" fill="rgb(226,149,51)" fg:x="554" fg:w="1"/><text x="44.5346%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.2846%" y="629" width="0.0799%" height="15" fill="rgb(252,193,7)" fg:x="554" fg:w="1"/><text x="44.5346%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.2846%" y="613" width="0.0799%" height="15" fill="rgb(205,123,0)" fg:x="554" fg:w="1"/><text x="44.5346%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.2846%" y="597" width="0.0799%" height="15" fill="rgb(233,173,25)" fg:x="554" fg:w="1"/><text x="44.5346%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.2846%" y="581" width="0.0799%" height="15" fill="rgb(216,63,32)" fg:x="554" fg:w="1"/><text x="44.5346%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.2846%" y="565" width="0.0799%" height="15" fill="rgb(209,56,45)" fg:x="554" fg:w="1"/><text x="44.5346%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.2846%" y="549" width="0.0799%" height="15" fill="rgb(226,111,49)" fg:x="554" fg:w="1"/><text x="44.5346%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.3645%" y="709" width="0.0799%" height="15" fill="rgb(244,181,21)" fg:x="555" fg:w="1"/><text x="44.6145%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="44.2046%" y="757" width="0.3197%" height="15" fill="rgb(222,126,15)" fg:x="553" fg:w="4"/><text x="44.4546%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="44.2846%" y="741" width="0.2398%" height="15" fill="rgb(222,95,17)" fg:x="554" fg:w="3"/><text x="44.5346%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="44.3645%" y="725" width="0.1599%" height="15" fill="rgb(254,46,5)" fg:x="555" fg:w="2"/><text x="44.6145%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.4444%" y="709" width="0.0799%" height="15" fill="rgb(236,216,35)" fg:x="556" fg:w="1"/><text x="44.6944%" y="719.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="44.4444%" y="693" width="0.0799%" height="15" fill="rgb(217,187,26)" fg:x="556" fg:w="1"/><text x="44.6944%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.5244%" y="693" width="0.0799%" height="15" fill="rgb(207,192,25)" fg:x="557" fg:w="1"/><text x="44.7744%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.5244%" y="677" width="0.0799%" height="15" fill="rgb(253,135,27)" fg:x="557" fg:w="1"/><text x="44.7744%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.5244%" y="661" width="0.0799%" height="15" fill="rgb(211,122,29)" fg:x="557" fg:w="1"/><text x="44.7744%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.5244%" y="645" width="0.0799%" height="15" fill="rgb(233,162,40)" fg:x="557" fg:w="1"/><text x="44.7744%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.5244%" y="629" width="0.0799%" height="15" fill="rgb(222,184,47)" fg:x="557" fg:w="1"/><text x="44.7744%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.5244%" y="613" width="0.0799%" height="15" fill="rgb(249,99,23)" fg:x="557" fg:w="1"/><text x="44.7744%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5244%" y="597" width="0.0799%" height="15" fill="rgb(214,60,12)" fg:x="557" fg:w="1"/><text x="44.7744%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5244%" y="581" width="0.0799%" height="15" fill="rgb(250,229,36)" fg:x="557" fg:w="1"/><text x="44.7744%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.5244%" y="565" width="0.0799%" height="15" fill="rgb(232,195,10)" fg:x="557" fg:w="1"/><text x="44.7744%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.5244%" y="549" width="0.0799%" height="15" fill="rgb(205,213,31)" fg:x="557" fg:w="1"/><text x="44.7744%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.5244%" y="533" width="0.0799%" height="15" fill="rgb(237,43,8)" fg:x="557" fg:w="1"/><text x="44.7744%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.5244%" y="517" width="0.0799%" height="15" fill="rgb(216,208,3)" fg:x="557" fg:w="1"/><text x="44.7744%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.5244%" y="501" width="0.0799%" height="15" fill="rgb(228,179,44)" fg:x="557" fg:w="1"/><text x="44.7744%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="44.6043%" y="693" width="0.0799%" height="15" fill="rgb(230,192,27)" fg:x="558" fg:w="1"/><text x="44.8543%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.6043%" y="677" width="0.0799%" height="15" fill="rgb(251,30,38)" fg:x="558" fg:w="1"/><text x="44.8543%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.6043%" y="661" width="0.0799%" height="15" fill="rgb(246,55,52)" fg:x="558" fg:w="1"/><text x="44.8543%" y="671.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (17 samples, 1.36%)</title><rect x="43.4053%" y="789" width="1.3589%" height="15" fill="rgb(249,79,26)" fg:x="543" fg:w="17"/><text x="43.6553%" y="799.50"></text></g><g><title>plugins_core::build::QuickThing::make (17 samples, 1.36%)</title><rect x="43.4053%" y="773" width="1.3589%" height="15" fill="rgb(220,202,16)" fg:x="543" fg:w="17"/><text x="43.6553%" y="783.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="44.5244%" y="757" width="0.2398%" height="15" fill="rgb(250,170,23)" fg:x="557" fg:w="3"/><text x="44.7744%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="44.5244%" y="741" width="0.2398%" height="15" fill="rgb(230,7,37)" fg:x="557" fg:w="3"/><text x="44.7744%" y="751.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="44.5244%" y="725" width="0.2398%" height="15" fill="rgb(213,71,1)" fg:x="557" fg:w="3"/><text x="44.7744%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="44.5244%" y="709" width="0.2398%" height="15" fill="rgb(227,87,39)" fg:x="557" fg:w="3"/><text x="44.7744%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="44.6843%" y="693" width="0.0799%" height="15" fill="rgb(210,41,29)" fg:x="559" fg:w="1"/><text x="44.9343%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.6843%" y="677" width="0.0799%" height="15" fill="rgb(206,191,31)" fg:x="559" fg:w="1"/><text x="44.9343%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="44.6843%" y="661" width="0.0799%" height="15" fill="rgb(247,75,54)" fg:x="559" fg:w="1"/><text x="44.9343%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="44.7642%" y="757" width="0.0799%" height="15" fill="rgb(208,54,50)" fg:x="560" fg:w="1"/><text x="45.0142%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="44.7642%" y="741" width="0.0799%" height="15" fill="rgb(214,90,37)" fg:x="560" fg:w="1"/><text x="45.0142%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="44.7642%" y="725" width="0.0799%" height="15" fill="rgb(220,132,6)" fg:x="560" fg:w="1"/><text x="45.0142%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="44.7642%" y="709" width="0.0799%" height="15" fill="rgb(213,167,7)" fg:x="560" fg:w="1"/><text x="45.0142%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.7642%" y="693" width="0.0799%" height="15" fill="rgb(243,36,27)" fg:x="560" fg:w="1"/><text x="45.0142%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.7642%" y="677" width="0.0799%" height="15" fill="rgb(235,147,12)" fg:x="560" fg:w="1"/><text x="45.0142%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="44.8441%" y="757" width="0.0799%" height="15" fill="rgb(212,198,44)" fg:x="561" fg:w="1"/><text x="45.0941%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.8441%" y="741" width="0.0799%" height="15" fill="rgb(218,68,50)" fg:x="561" fg:w="1"/><text x="45.0941%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.8441%" y="725" width="0.0799%" height="15" fill="rgb(224,79,48)" fg:x="561" fg:w="1"/><text x="45.0941%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.8441%" y="709" width="0.0799%" height="15" fill="rgb(213,191,50)" fg:x="561" fg:w="1"/><text x="45.0941%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.8441%" y="693" width="0.0799%" height="15" fill="rgb(254,146,10)" fg:x="561" fg:w="1"/><text x="45.0941%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.8441%" y="677" width="0.0799%" height="15" fill="rgb(215,175,11)" fg:x="561" fg:w="1"/><text x="45.0941%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="44.9241%" y="693" width="0.0799%" height="15" fill="rgb(207,49,7)" fg:x="562" fg:w="1"/><text x="45.1741%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="44.7642%" y="773" width="0.3197%" height="15" fill="rgb(234,144,29)" fg:x="560" fg:w="4"/><text x="45.0142%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="44.9241%" y="757" width="0.1599%" height="15" fill="rgb(213,222,48)" fg:x="562" fg:w="2"/><text x="45.1741%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="44.9241%" y="741" width="0.1599%" height="15" fill="rgb(222,8,6)" fg:x="562" fg:w="2"/><text x="45.1741%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="44.9241%" y="725" width="0.1599%" height="15" fill="rgb(221,114,49)" fg:x="562" fg:w="2"/><text x="45.1741%" y="735.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="44.9241%" y="709" width="0.1599%" height="15" fill="rgb(250,140,42)" fg:x="562" fg:w="2"/><text x="45.1741%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="45.0040%" y="693" width="0.0799%" height="15" fill="rgb(250,150,27)" fg:x="563" fg:w="1"/><text x="45.2540%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="45.0040%" y="677" width="0.0799%" height="15" fill="rgb(252,159,3)" fg:x="563" fg:w="1"/><text x="45.2540%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.0040%" y="661" width="0.0799%" height="15" fill="rgb(241,182,3)" fg:x="563" fg:w="1"/><text x="45.2540%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="45.0040%" y="645" width="0.0799%" height="15" fill="rgb(236,3,9)" fg:x="563" fg:w="1"/><text x="45.2540%" y="655.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="45.0839%" y="773" width="0.0799%" height="15" fill="rgb(223,227,51)" fg:x="564" fg:w="1"/><text x="45.3339%" y="783.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="45.1639%" y="773" width="0.0799%" height="15" fill="rgb(232,133,30)" fg:x="565" fg:w="1"/><text x="45.4139%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="45.1639%" y="757" width="0.0799%" height="15" fill="rgb(209,93,27)" fg:x="565" fg:w="1"/><text x="45.4139%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="45.1639%" y="741" width="0.0799%" height="15" fill="rgb(208,108,34)" fg:x="565" fg:w="1"/><text x="45.4139%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="45.3237%" y="741" width="0.0799%" height="15" fill="rgb(215,189,13)" fg:x="567" fg:w="1"/><text x="45.5737%" y="751.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="45.3237%" y="725" width="0.0799%" height="15" fill="rgb(206,88,23)" fg:x="567" fg:w="1"/><text x="45.5737%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="45.3237%" y="709" width="0.0799%" height="15" fill="rgb(240,173,0)" fg:x="567" fg:w="1"/><text x="45.5737%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="45.3237%" y="693" width="0.0799%" height="15" fill="rgb(223,106,52)" fg:x="567" fg:w="1"/><text x="45.5737%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.3237%" y="677" width="0.0799%" height="15" fill="rgb(206,130,16)" fg:x="567" fg:w="1"/><text x="45.5737%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.3237%" y="661" width="0.0799%" height="15" fill="rgb(220,54,25)" fg:x="567" fg:w="1"/><text x="45.5737%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="45.3237%" y="645" width="0.0799%" height="15" fill="rgb(210,4,38)" fg:x="567" fg:w="1"/><text x="45.5737%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="45.3237%" y="629" width="0.0799%" height="15" fill="rgb(238,94,39)" fg:x="567" fg:w="1"/><text x="45.5737%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.3237%" y="613" width="0.0799%" height="15" fill="rgb(234,124,34)" fg:x="567" fg:w="1"/><text x="45.5737%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.3237%" y="597" width="0.0799%" height="15" fill="rgb(221,91,40)" fg:x="567" fg:w="1"/><text x="45.5737%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="45.3237%" y="581" width="0.0799%" height="15" fill="rgb(246,53,28)" fg:x="567" fg:w="1"/><text x="45.5737%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="45.3237%" y="565" width="0.0799%" height="15" fill="rgb(229,109,7)" fg:x="567" fg:w="1"/><text x="45.5737%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="45.3237%" y="549" width="0.0799%" height="15" fill="rgb(249,117,8)" fg:x="567" fg:w="1"/><text x="45.5737%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="45.3237%" y="533" width="0.0799%" height="15" fill="rgb(210,181,1)" fg:x="567" fg:w="1"/><text x="45.5737%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.3237%" y="517" width="0.0799%" height="15" fill="rgb(211,66,1)" fg:x="567" fg:w="1"/><text x="45.5737%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="45.3237%" y="757" width="0.1599%" height="15" fill="rgb(221,90,14)" fg:x="567" fg:w="2"/><text x="45.5737%" y="767.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="45.4037%" y="741" width="0.0799%" height="15" fill="rgb(219,222,44)" fg:x="568" fg:w="1"/><text x="45.6537%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="45.4037%" y="725" width="0.0799%" height="15" fill="rgb(246,34,33)" fg:x="568" fg:w="1"/><text x="45.6537%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.4037%" y="709" width="0.0799%" height="15" fill="rgb(227,135,41)" fg:x="568" fg:w="1"/><text x="45.6537%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.4037%" y="693" width="0.0799%" height="15" fill="rgb(226,15,14)" fg:x="568" fg:w="1"/><text x="45.6537%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="45.5635%" y="725" width="0.0799%" height="15" fill="rgb(236,148,47)" fg:x="570" fg:w="1"/><text x="45.8135%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.5635%" y="709" width="0.0799%" height="15" fill="rgb(233,162,52)" fg:x="570" fg:w="1"/><text x="45.8135%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.5635%" y="693" width="0.0799%" height="15" fill="rgb(244,35,28)" fg:x="570" fg:w="1"/><text x="45.8135%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.5635%" y="677" width="0.0799%" height="15" fill="rgb(205,121,10)" fg:x="570" fg:w="1"/><text x="45.8135%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (12 samples, 0.96%)</title><rect x="44.7642%" y="789" width="0.9592%" height="15" fill="rgb(250,58,18)" fg:x="560" fg:w="12"/><text x="45.0142%" y="799.50"></text></g><g><title>plugins_core::build::Build::new_world (6 samples, 0.48%)</title><rect x="45.2438%" y="773" width="0.4796%" height="15" fill="rgb(216,37,13)" fg:x="566" fg:w="6"/><text x="45.4938%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new (3 samples, 0.24%)</title><rect x="45.4836%" y="757" width="0.2398%" height="15" fill="rgb(221,215,42)" fg:x="569" fg:w="3"/><text x="45.7336%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="45.5635%" y="741" width="0.1599%" height="15" fill="rgb(217,214,19)" fg:x="570" fg:w="2"/><text x="45.8135%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="45.6435%" y="725" width="0.0799%" height="15" fill="rgb(233,139,13)" fg:x="571" fg:w="1"/><text x="45.8935%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.6435%" y="709" width="0.0799%" height="15" fill="rgb(247,168,23)" fg:x="571" fg:w="1"/><text x="45.8935%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.6435%" y="693" width="0.0799%" height="15" fill="rgb(207,202,1)" fg:x="571" fg:w="1"/><text x="45.8935%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="45.6435%" y="677" width="0.0799%" height="15" fill="rgb(220,155,48)" fg:x="571" fg:w="1"/><text x="45.8935%" y="687.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (506 samples, 40.45%)</title><rect x="5.4357%" y="805" width="40.4476%" height="15" fill="rgb(250,43,26)" fg:x="68" fg:w="506"/><text x="5.6857%" y="815.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::route (2 samples, 0.16%)</title><rect x="45.7234%" y="789" width="0.1599%" height="15" fill="rgb(212,190,23)" fg:x="572" fg:w="2"/><text x="45.9734%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (1 samples, 0.08%)</title><rect x="45.8833%" y="805" width="0.0799%" height="15" fill="rgb(216,39,24)" fg:x="574" fg:w="1"/><text x="46.1333%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="45.8833%" y="789" width="0.0799%" height="15" fill="rgb(252,113,16)" fg:x="574" fg:w="1"/><text x="46.1333%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.8833%" y="773" width="0.0799%" height="15" fill="rgb(208,113,19)" fg:x="574" fg:w="1"/><text x="46.1333%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="46.0432%" y="789" width="0.0799%" height="15" fill="rgb(234,107,25)" fg:x="576" fg:w="1"/><text x="46.2932%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="46.1231%" y="789" width="0.1599%" height="15" fill="rgb(234,217,51)" fg:x="577" fg:w="2"/><text x="46.3731%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="46.1231%" y="773" width="0.1599%" height="15" fill="rgb(251,29,42)" fg:x="577" fg:w="2"/><text x="46.3731%" y="783.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="46.1231%" y="757" width="0.1599%" height="15" fill="rgb(221,62,51)" fg:x="577" fg:w="2"/><text x="46.3731%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="46.1231%" y="741" width="0.1599%" height="15" fill="rgb(240,192,43)" fg:x="577" fg:w="2"/><text x="46.3731%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="46.1231%" y="725" width="0.1599%" height="15" fill="rgb(224,157,47)" fg:x="577" fg:w="2"/><text x="46.3731%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="46.1231%" y="709" width="0.1599%" height="15" fill="rgb(226,84,45)" fg:x="577" fg:w="2"/><text x="46.3731%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="46.1231%" y="693" width="0.1599%" height="15" fill="rgb(208,207,23)" fg:x="577" fg:w="2"/><text x="46.3731%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="46.1231%" y="677" width="0.1599%" height="15" fill="rgb(253,34,51)" fg:x="577" fg:w="2"/><text x="46.3731%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="46.1231%" y="661" width="0.1599%" height="15" fill="rgb(227,26,34)" fg:x="577" fg:w="2"/><text x="46.3731%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.16%)</title><rect x="46.1231%" y="645" width="0.1599%" height="15" fill="rgb(245,75,19)" fg:x="577" fg:w="2"/><text x="46.3731%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="46.2830%" y="757" width="0.1599%" height="15" fill="rgb(250,191,31)" fg:x="579" fg:w="2"/><text x="46.5330%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.3629%" y="741" width="0.0799%" height="15" fill="rgb(224,11,50)" fg:x="580" fg:w="1"/><text x="46.6129%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.5228%" y="725" width="0.0799%" height="15" fill="rgb(231,171,7)" fg:x="582" fg:w="1"/><text x="46.7728%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.5228%" y="709" width="0.0799%" height="15" fill="rgb(252,214,10)" fg:x="582" fg:w="1"/><text x="46.7728%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.5228%" y="693" width="0.0799%" height="15" fill="rgb(249,45,46)" fg:x="582" fg:w="1"/><text x="46.7728%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.5228%" y="677" width="0.0799%" height="15" fill="rgb(240,173,7)" fg:x="582" fg:w="1"/><text x="46.7728%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.5228%" y="661" width="0.0799%" height="15" fill="rgb(235,214,13)" fg:x="582" fg:w="1"/><text x="46.7728%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.5228%" y="645" width="0.0799%" height="15" fill="rgb(245,156,8)" fg:x="582" fg:w="1"/><text x="46.7728%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.5228%" y="629" width="0.0799%" height="15" fill="rgb(235,46,12)" fg:x="582" fg:w="1"/><text x="46.7728%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.5228%" y="613" width="0.0799%" height="15" fill="rgb(221,81,14)" fg:x="582" fg:w="1"/><text x="46.7728%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.5228%" y="597" width="0.0799%" height="15" fill="rgb(238,207,9)" fg:x="582" fg:w="1"/><text x="46.7728%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.5228%" y="581" width="0.0799%" height="15" fill="rgb(224,129,35)" fg:x="582" fg:w="1"/><text x="46.7728%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.5228%" y="565" width="0.0799%" height="15" fill="rgb(243,218,34)" fg:x="582" fg:w="1"/><text x="46.7728%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.5228%" y="549" width="0.0799%" height="15" fill="rgb(220,166,13)" fg:x="582" fg:w="1"/><text x="46.7728%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="46.6027%" y="725" width="0.0799%" height="15" fill="rgb(227,167,49)" fg:x="583" fg:w="1"/><text x="46.8527%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="46.6027%" y="709" width="0.0799%" height="15" fill="rgb(234,142,12)" fg:x="583" fg:w="1"/><text x="46.8527%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.6827%" y="709" width="0.0799%" height="15" fill="rgb(207,100,48)" fg:x="584" fg:w="1"/><text x="46.9327%" y="719.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="46.7626%" y="709" width="0.5596%" height="15" fill="rgb(210,25,14)" fg:x="585" fg:w="7"/><text x="47.0126%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="46.7626%" y="693" width="0.5596%" height="15" fill="rgb(246,116,27)" fg:x="585" fg:w="7"/><text x="47.0126%" y="703.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="46.9225%" y="677" width="0.3997%" height="15" fill="rgb(214,193,42)" fg:x="587" fg:w="5"/><text x="47.1725%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="47.0024%" y="661" width="0.3197%" height="15" fill="rgb(214,122,8)" fg:x="588" fg:w="4"/><text x="47.2524%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.1623%" y="645" width="0.1599%" height="15" fill="rgb(244,173,18)" fg:x="590" fg:w="2"/><text x="47.4123%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="47.3221%" y="693" width="0.3197%" height="15" fill="rgb(232,68,19)" fg:x="592" fg:w="4"/><text x="47.5721%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="47.4820%" y="677" width="0.1599%" height="15" fill="rgb(236,224,1)" fg:x="594" fg:w="2"/><text x="47.7320%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.5620%" y="661" width="0.0799%" height="15" fill="rgb(240,11,8)" fg:x="595" fg:w="1"/><text x="47.8120%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.5620%" y="645" width="0.0799%" height="15" fill="rgb(244,159,20)" fg:x="595" fg:w="1"/><text x="47.8120%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.7218%" y="677" width="0.0799%" height="15" fill="rgb(240,223,54)" fg:x="597" fg:w="1"/><text x="47.9718%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="47.8018%" y="645" width="0.1599%" height="15" fill="rgb(237,146,5)" fg:x="598" fg:w="2"/><text x="48.0518%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="47.8018%" y="629" width="0.1599%" height="15" fill="rgb(218,221,32)" fg:x="598" fg:w="2"/><text x="48.0518%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.8018%" y="613" width="0.1599%" height="15" fill="rgb(244,96,26)" fg:x="598" fg:w="2"/><text x="48.0518%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.8018%" y="597" width="0.1599%" height="15" fill="rgb(245,184,37)" fg:x="598" fg:w="2"/><text x="48.0518%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.8817%" y="581" width="0.0799%" height="15" fill="rgb(248,91,47)" fg:x="599" fg:w="1"/><text x="48.1317%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="47.8018%" y="677" width="0.2398%" height="15" fill="rgb(243,199,8)" fg:x="598" fg:w="3"/><text x="48.0518%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="47.8018%" y="661" width="0.2398%" height="15" fill="rgb(249,12,15)" fg:x="598" fg:w="3"/><text x="48.0518%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="47.9616%" y="645" width="0.0799%" height="15" fill="rgb(245,97,12)" fg:x="600" fg:w="1"/><text x="48.2116%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="47.9616%" y="629" width="0.0799%" height="15" fill="rgb(244,61,1)" fg:x="600" fg:w="1"/><text x="48.2116%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="47.9616%" y="613" width="0.0799%" height="15" fill="rgb(222,194,10)" fg:x="600" fg:w="1"/><text x="48.2116%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.9616%" y="597" width="0.0799%" height="15" fill="rgb(226,178,8)" fg:x="600" fg:w="1"/><text x="48.2116%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.9616%" y="581" width="0.0799%" height="15" fill="rgb(241,32,34)" fg:x="600" fg:w="1"/><text x="48.2116%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="48.2814%" y="629" width="0.1599%" height="15" fill="rgb(254,26,6)" fg:x="604" fg:w="2"/><text x="48.5314%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="48.0416%" y="677" width="0.4796%" height="15" fill="rgb(249,71,11)" fg:x="601" fg:w="6"/><text x="48.2916%" y="687.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="48.1215%" y="661" width="0.3997%" height="15" fill="rgb(232,170,27)" fg:x="602" fg:w="5"/><text x="48.3715%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="48.2814%" y="645" width="0.2398%" height="15" fill="rgb(214,223,17)" fg:x="604" fg:w="3"/><text x="48.5314%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="48.4412%" y="629" width="0.0799%" height="15" fill="rgb(250,18,15)" fg:x="606" fg:w="1"/><text x="48.6912%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="48.6011%" y="661" width="0.3197%" height="15" fill="rgb(212,153,51)" fg:x="608" fg:w="4"/><text x="48.8511%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="48.7610%" y="645" width="0.1599%" height="15" fill="rgb(219,194,12)" fg:x="610" fg:w="2"/><text x="49.0110%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="48.8409%" y="629" width="0.0799%" height="15" fill="rgb(212,58,17)" fg:x="611" fg:w="1"/><text x="49.0909%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.8409%" y="613" width="0.0799%" height="15" fill="rgb(254,5,10)" fg:x="611" fg:w="1"/><text x="49.0909%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="48.9209%" y="661" width="0.3197%" height="15" fill="rgb(246,91,7)" fg:x="612" fg:w="4"/><text x="49.1709%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="49.0008%" y="645" width="0.2398%" height="15" fill="rgb(218,108,49)" fg:x="613" fg:w="3"/><text x="49.2508%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="49.0807%" y="629" width="0.1599%" height="15" fill="rgb(238,123,20)" fg:x="614" fg:w="2"/><text x="49.3307%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.1607%" y="613" width="0.0799%" height="15" fill="rgb(231,69,23)" fg:x="615" fg:w="1"/><text x="49.4107%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="49.1607%" y="597" width="0.0799%" height="15" fill="rgb(230,209,3)" fg:x="615" fg:w="1"/><text x="49.4107%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.84%)</title><rect x="47.6419%" y="693" width="1.8385%" height="15" fill="rgb(231,19,0)" fg:x="596" fg:w="23"/><text x="47.8919%" y="703.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="48.5212%" y="677" width="0.9592%" height="15" fill="rgb(226,192,25)" fg:x="607" fg:w="12"/><text x="48.7712%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="49.2406%" y="661" width="0.2398%" height="15" fill="rgb(223,175,53)" fg:x="616" fg:w="3"/><text x="49.4906%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="49.2406%" y="645" width="0.2398%" height="15" fill="rgb(248,35,51)" fg:x="616" fg:w="3"/><text x="49.4906%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.4005%" y="629" width="0.0799%" height="15" fill="rgb(230,37,26)" fg:x="618" fg:w="1"/><text x="49.6505%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (36 samples, 2.88%)</title><rect x="46.6827%" y="725" width="2.8777%" height="15" fill="rgb(206,120,22)" fg:x="584" fg:w="36"/><text x="46.9327%" y="735.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.24%)</title><rect x="47.3221%" y="709" width="2.2382%" height="15" fill="rgb(207,165,28)" fg:x="592" fg:w="28"/><text x="47.5721%" y="719.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.4804%" y="693" width="0.0799%" height="15" fill="rgb(226,23,46)" fg:x="619" fg:w="1"/><text x="49.7304%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.4804%" y="677" width="0.0799%" height="15" fill="rgb(208,130,44)" fg:x="619" fg:w="1"/><text x="49.7304%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="49.6403%" y="693" width="0.1599%" height="15" fill="rgb(231,67,8)" fg:x="621" fg:w="2"/><text x="49.8903%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.8801%" y="677" width="0.0799%" height="15" fill="rgb(205,183,22)" fg:x="624" fg:w="1"/><text x="50.1301%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="49.9600%" y="677" width="0.2398%" height="15" fill="rgb(224,47,9)" fg:x="625" fg:w="3"/><text x="50.2100%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.0400%" y="661" width="0.1599%" height="15" fill="rgb(250,183,49)" fg:x="626" fg:w="2"/><text x="50.2900%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.1998%" y="645" width="0.0799%" height="15" fill="rgb(220,151,39)" fg:x="628" fg:w="1"/><text x="50.4498%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.2798%" y="645" width="0.0799%" height="15" fill="rgb(220,118,20)" fg:x="629" fg:w="1"/><text x="50.5298%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="50.3597%" y="645" width="0.0799%" height="15" fill="rgb(231,65,51)" fg:x="630" fg:w="1"/><text x="50.6097%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="50.3597%" y="629" width="0.0799%" height="15" fill="rgb(253,125,37)" fg:x="630" fg:w="1"/><text x="50.6097%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.3597%" y="613" width="0.0799%" height="15" fill="rgb(232,102,6)" fg:x="630" fg:w="1"/><text x="50.6097%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.5196%" y="629" width="0.0799%" height="15" fill="rgb(251,105,13)" fg:x="632" fg:w="1"/><text x="50.7696%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="49.5604%" y="725" width="1.1191%" height="15" fill="rgb(222,179,29)" fg:x="620" fg:w="14"/><text x="49.8104%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.12%)</title><rect x="49.5604%" y="709" width="1.1191%" height="15" fill="rgb(229,180,53)" fg:x="620" fg:w="14"/><text x="49.8104%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="49.8002%" y="693" width="0.8793%" height="15" fill="rgb(238,104,13)" fg:x="623" fg:w="11"/><text x="50.0502%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="50.1998%" y="677" width="0.4796%" height="15" fill="rgb(210,130,5)" fg:x="628" fg:w="6"/><text x="50.4498%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="50.1998%" y="661" width="0.4796%" height="15" fill="rgb(233,87,49)" fg:x="628" fg:w="6"/><text x="50.4498%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="50.4396%" y="645" width="0.2398%" height="15" fill="rgb(243,34,9)" fg:x="631" fg:w="3"/><text x="50.6896%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.5995%" y="629" width="0.0799%" height="15" fill="rgb(235,225,10)" fg:x="633" fg:w="1"/><text x="50.8495%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.5995%" y="613" width="0.0799%" height="15" fill="rgb(212,0,30)" fg:x="633" fg:w="1"/><text x="50.8495%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="50.6795%" y="725" width="0.0799%" height="15" fill="rgb(211,177,0)" fg:x="634" fg:w="1"/><text x="50.9295%" y="735.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="50.8393%" y="661" width="0.2398%" height="15" fill="rgb(225,220,11)" fg:x="636" fg:w="3"/><text x="51.0893%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="51.0791%" y="661" width="0.3197%" height="15" fill="rgb(215,10,13)" fg:x="639" fg:w="4"/><text x="51.3291%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.2390%" y="645" width="0.1599%" height="15" fill="rgb(240,177,14)" fg:x="641" fg:w="2"/><text x="51.4890%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.6387%" y="645" width="0.0799%" height="15" fill="rgb(243,7,39)" fg:x="646" fg:w="1"/><text x="51.8887%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="51.8785%" y="629" width="0.0799%" height="15" fill="rgb(212,99,0)" fg:x="649" fg:w="1"/><text x="52.1285%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="51.9584%" y="613" width="0.0799%" height="15" fill="rgb(225,162,48)" fg:x="650" fg:w="1"/><text x="52.2084%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="51.9584%" y="597" width="0.0799%" height="15" fill="rgb(246,16,25)" fg:x="650" fg:w="1"/><text x="52.2084%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.9584%" y="581" width="0.0799%" height="15" fill="rgb(220,150,2)" fg:x="650" fg:w="1"/><text x="52.2084%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.44%)</title><rect x="50.8393%" y="693" width="1.4388%" height="15" fill="rgb(237,113,11)" fg:x="636" fg:w="18"/><text x="51.0893%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 1.44%)</title><rect x="50.8393%" y="677" width="1.4388%" height="15" fill="rgb(236,70,20)" fg:x="636" fg:w="18"/><text x="51.0893%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="51.3989%" y="661" width="0.8793%" height="15" fill="rgb(234,94,7)" fg:x="643" fg:w="11"/><text x="51.6489%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="51.7186%" y="645" width="0.5596%" height="15" fill="rgb(250,221,0)" fg:x="647" fg:w="7"/><text x="51.9686%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="51.9584%" y="629" width="0.3197%" height="15" fill="rgb(245,149,46)" fg:x="650" fg:w="4"/><text x="52.2084%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="52.0384%" y="613" width="0.2398%" height="15" fill="rgb(215,37,27)" fg:x="651" fg:w="3"/><text x="52.2884%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="52.1183%" y="597" width="0.1599%" height="15" fill="rgb(232,65,3)" fg:x="652" fg:w="2"/><text x="52.3683%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.1982%" y="581" width="0.0799%" height="15" fill="rgb(214,2,16)" fg:x="653" fg:w="1"/><text x="52.4482%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (23 samples, 1.84%)</title><rect x="50.7594%" y="709" width="1.8385%" height="15" fill="rgb(227,131,50)" fg:x="635" fg:w="23"/><text x="51.0094%" y="719.50">&lt;..</text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="52.2782%" y="693" width="0.3197%" height="15" fill="rgb(247,131,45)" fg:x="654" fg:w="4"/><text x="52.5282%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="52.3581%" y="677" width="0.2398%" height="15" fill="rgb(215,97,47)" fg:x="655" fg:w="3"/><text x="52.6081%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="52.3581%" y="661" width="0.2398%" height="15" fill="rgb(233,143,12)" fg:x="655" fg:w="3"/><text x="52.6081%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="52.4380%" y="645" width="0.1599%" height="15" fill="rgb(222,57,17)" fg:x="656" fg:w="2"/><text x="52.6880%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="52.4380%" y="629" width="0.1599%" height="15" fill="rgb(214,119,38)" fg:x="656" fg:w="2"/><text x="52.6880%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="52.4380%" y="613" width="0.1599%" height="15" fill="rgb(217,28,47)" fg:x="656" fg:w="2"/><text x="52.6880%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="52.5180%" y="597" width="0.0799%" height="15" fill="rgb(231,14,52)" fg:x="657" fg:w="1"/><text x="52.7680%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="52.5979%" y="709" width="0.0799%" height="15" fill="rgb(220,158,18)" fg:x="658" fg:w="1"/><text x="52.8479%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.5979%" y="693" width="0.0799%" height="15" fill="rgb(222,143,46)" fg:x="658" fg:w="1"/><text x="52.8479%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.6779%" y="677" width="0.0799%" height="15" fill="rgb(227,165,5)" fg:x="659" fg:w="1"/><text x="52.9279%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.7578%" y="677" width="0.2398%" height="15" fill="rgb(216,222,49)" fg:x="660" fg:w="3"/><text x="53.0078%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.8377%" y="661" width="0.1599%" height="15" fill="rgb(238,73,39)" fg:x="661" fg:w="2"/><text x="53.0877%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.9177%" y="645" width="0.0799%" height="15" fill="rgb(252,115,9)" fg:x="662" fg:w="1"/><text x="53.1677%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="52.9976%" y="677" width="0.0799%" height="15" fill="rgb(238,202,4)" fg:x="663" fg:w="1"/><text x="53.2476%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="52.9976%" y="661" width="0.0799%" height="15" fill="rgb(252,153,44)" fg:x="663" fg:w="1"/><text x="53.2476%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.9976%" y="645" width="0.0799%" height="15" fill="rgb(235,128,27)" fg:x="663" fg:w="1"/><text x="53.2476%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.9976%" y="629" width="0.0799%" height="15" fill="rgb(221,121,47)" fg:x="663" fg:w="1"/><text x="53.2476%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.1575%" y="629" width="0.0799%" height="15" fill="rgb(247,211,47)" fg:x="665" fg:w="1"/><text x="53.4075%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="53.2374%" y="629" width="0.1599%" height="15" fill="rgb(252,47,49)" fg:x="666" fg:w="2"/><text x="53.4874%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="53.2374%" y="613" width="0.1599%" height="15" fill="rgb(219,119,53)" fg:x="666" fg:w="2"/><text x="53.4874%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="53.2374%" y="597" width="0.1599%" height="15" fill="rgb(243,165,53)" fg:x="666" fg:w="2"/><text x="53.4874%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.2374%" y="581" width="0.1599%" height="15" fill="rgb(230,12,35)" fg:x="666" fg:w="2"/><text x="53.4874%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.6371%" y="613" width="0.0799%" height="15" fill="rgb(239,57,49)" fg:x="671" fg:w="1"/><text x="53.8871%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.7970%" y="597" width="0.1599%" height="15" fill="rgb(231,154,7)" fg:x="673" fg:w="2"/><text x="54.0470%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.8769%" y="581" width="0.0799%" height="15" fill="rgb(248,81,34)" fg:x="674" fg:w="1"/><text x="54.1269%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8769%" y="565" width="0.0799%" height="15" fill="rgb(247,9,5)" fg:x="674" fg:w="1"/><text x="54.1269%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="54.0368%" y="581" width="0.2398%" height="15" fill="rgb(228,172,27)" fg:x="676" fg:w="3"/><text x="54.2868%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="54.0368%" y="565" width="0.2398%" height="15" fill="rgb(230,57,44)" fg:x="676" fg:w="3"/><text x="54.2868%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="54.0368%" y="549" width="0.2398%" height="15" fill="rgb(249,35,22)" fg:x="676" fg:w="3"/><text x="54.2868%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.1966%" y="533" width="0.0799%" height="15" fill="rgb(250,137,27)" fg:x="678" fg:w="1"/><text x="54.4466%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="53.7170%" y="613" width="0.6395%" height="15" fill="rgb(251,57,31)" fg:x="672" fg:w="8"/><text x="53.9670%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="53.9568%" y="597" width="0.3997%" height="15" fill="rgb(238,60,0)" fg:x="675" fg:w="5"/><text x="54.2068%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.2766%" y="581" width="0.0799%" height="15" fill="rgb(242,185,39)" fg:x="679" fg:w="1"/><text x="54.5266%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (18 samples, 1.44%)</title><rect x="53.0775%" y="661" width="1.4388%" height="15" fill="rgb(240,63,43)" fg:x="664" fg:w="18"/><text x="53.3275%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.44%)</title><rect x="53.0775%" y="645" width="1.4388%" height="15" fill="rgb(236,155,6)" fg:x="664" fg:w="18"/><text x="53.3275%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.12%)</title><rect x="53.3973%" y="629" width="1.1191%" height="15" fill="rgb(215,11,29)" fg:x="668" fg:w="14"/><text x="53.6473%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.3565%" y="613" width="0.1599%" height="15" fill="rgb(228,180,48)" fg:x="680" fg:w="2"/><text x="54.6065%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (24 samples, 1.92%)</title><rect x="52.6779%" y="709" width="1.9185%" height="15" fill="rgb(241,102,12)" fg:x="659" fg:w="24"/><text x="52.9279%" y="719.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 1.92%)</title><rect x="52.6779%" y="693" width="1.9185%" height="15" fill="rgb(246,213,4)" fg:x="659" fg:w="24"/><text x="52.9279%" y="703.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.52%)</title><rect x="53.0775%" y="677" width="1.5188%" height="15" fill="rgb(218,134,35)" fg:x="664" fg:w="19"/><text x="53.3275%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.5164%" y="661" width="0.0799%" height="15" fill="rgb(251,117,35)" fg:x="682" fg:w="1"/><text x="54.7664%" y="671.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.7562%" y="533" width="0.0799%" height="15" fill="rgb(206,156,45)" fg:x="685" fg:w="1"/><text x="55.0062%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="54.7562%" y="549" width="0.1599%" height="15" fill="rgb(218,52,27)" fg:x="685" fg:w="2"/><text x="55.0062%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.8361%" y="533" width="0.0799%" height="15" fill="rgb(238,83,36)" fg:x="686" fg:w="1"/><text x="55.0861%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.8361%" y="517" width="0.0799%" height="15" fill="rgb(218,53,43)" fg:x="686" fg:w="1"/><text x="55.0861%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.8361%" y="501" width="0.0799%" height="15" fill="rgb(239,54,39)" fg:x="686" fg:w="1"/><text x="55.0861%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="54.6763%" y="581" width="0.3197%" height="15" fill="rgb(212,198,13)" fg:x="684" fg:w="4"/><text x="54.9263%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.7562%" y="565" width="0.2398%" height="15" fill="rgb(234,54,46)" fg:x="685" fg:w="3"/><text x="55.0062%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.9161%" y="549" width="0.0799%" height="15" fill="rgb(217,120,7)" fg:x="687" fg:w="1"/><text x="55.1661%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.9161%" y="533" width="0.0799%" height="15" fill="rgb(246,39,15)" fg:x="687" fg:w="1"/><text x="55.1661%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9161%" y="517" width="0.0799%" height="15" fill="rgb(242,143,31)" fg:x="687" fg:w="1"/><text x="55.1661%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="54.6763%" y="613" width="0.3997%" height="15" fill="rgb(252,60,24)" fg:x="684" fg:w="5"/><text x="54.9263%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="54.6763%" y="597" width="0.3997%" height="15" fill="rgb(249,220,7)" fg:x="684" fg:w="5"/><text x="54.9263%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.9960%" y="581" width="0.0799%" height="15" fill="rgb(236,67,13)" fg:x="688" fg:w="1"/><text x="55.2460%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.0759%" y="581" width="0.1599%" height="15" fill="rgb(210,62,39)" fg:x="689" fg:w="2"/><text x="55.3259%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="54.5963%" y="645" width="0.7194%" height="15" fill="rgb(219,122,53)" fg:x="683" fg:w="9"/><text x="54.8463%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="54.5963%" y="629" width="0.7194%" height="15" fill="rgb(218,87,25)" fg:x="683" fg:w="9"/><text x="54.8463%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="55.0759%" y="613" width="0.2398%" height="15" fill="rgb(234,179,48)" fg:x="689" fg:w="3"/><text x="55.3259%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="55.0759%" y="597" width="0.2398%" height="15" fill="rgb(248,90,0)" fg:x="689" fg:w="3"/><text x="55.3259%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="55.2358%" y="581" width="0.0799%" height="15" fill="rgb(207,228,37)" fg:x="691" fg:w="1"/><text x="55.4858%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.3157%" y="645" width="0.0799%" height="15" fill="rgb(235,214,15)" fg:x="692" fg:w="1"/><text x="55.5657%" y="655.50"></text></g><g><title>engine::session::state::State::close (116 samples, 9.27%)</title><rect x="46.2830%" y="789" width="9.2726%" height="15" fill="rgb(210,144,39)" fg:x="579" fg:w="116"/><text x="46.5330%" y="799.50">engine::sessi..</text></g><g><title>engine::session::state::State::flush_entities (116 samples, 9.27%)</title><rect x="46.2830%" y="773" width="9.2726%" height="15" fill="rgb(222,67,41)" fg:x="579" fg:w="116"/><text x="46.5330%" y="783.50">engine::sessi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (114 samples, 9.11%)</title><rect x="46.4428%" y="757" width="9.1127%" height="15" fill="rgb(205,35,37)" fg:x="581" fg:w="114"/><text x="46.6928%" y="767.50">engine::sessi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (114 samples, 9.11%)</title><rect x="46.4428%" y="741" width="9.1127%" height="15" fill="rgb(216,125,40)" fg:x="581" fg:w="114"/><text x="46.6928%" y="751.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (60 samples, 4.80%)</title><rect x="50.7594%" y="725" width="4.7962%" height="15" fill="rgb(228,227,20)" fg:x="635" fg:w="60"/><text x="51.0094%" y="735.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.96%)</title><rect x="54.5963%" y="709" width="0.9592%" height="15" fill="rgb(242,173,45)" fg:x="683" fg:w="12"/><text x="54.8463%" y="719.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="54.5963%" y="693" width="0.9592%" height="15" fill="rgb(215,79,24)" fg:x="683" fg:w="12"/><text x="54.8463%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="54.5963%" y="677" width="0.9592%" height="15" fill="rgb(238,164,38)" fg:x="683" fg:w="12"/><text x="54.8463%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="54.5963%" y="661" width="0.9592%" height="15" fill="rgb(245,196,38)" fg:x="683" fg:w="12"/><text x="54.8463%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.3957%" y="645" width="0.1599%" height="15" fill="rgb(231,217,29)" fg:x="693" fg:w="2"/><text x="55.6457%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.4756%" y="629" width="0.0799%" height="15" fill="rgb(245,6,4)" fg:x="694" fg:w="1"/><text x="55.7256%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="55.5556%" y="789" width="0.0799%" height="15" fill="rgb(214,76,49)" fg:x="695" fg:w="1"/><text x="55.8056%" y="799.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::deliver (1 samples, 0.08%)</title><rect x="55.5556%" y="773" width="0.0799%" height="15" fill="rgb(205,96,12)" fg:x="695" fg:w="1"/><text x="55.8056%" y="783.50"></text></g><g><title>engine::session::Session::close (122 samples, 9.75%)</title><rect x="45.9632%" y="805" width="9.7522%" height="15" fill="rgb(243,131,4)" fg:x="575" fg:w="122"/><text x="46.2132%" y="815.50">engine::sessio..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="55.6355%" y="789" width="0.0799%" height="15" fill="rgb(214,114,4)" fg:x="696" fg:w="1"/><text x="55.8855%" y="799.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="55.6355%" y="773" width="0.0799%" height="15" fill="rgb(234,215,15)" fg:x="696" fg:w="1"/><text x="55.8855%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="55.6355%" y="757" width="0.0799%" height="15" fill="rgb(250,216,45)" fg:x="696" fg:w="1"/><text x="55.8855%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="55.6355%" y="741" width="0.0799%" height="15" fill="rgb(236,128,4)" fg:x="696" fg:w="1"/><text x="55.8855%" y="751.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="55.6355%" y="725" width="0.0799%" height="15" fill="rgb(234,50,33)" fg:x="696" fg:w="1"/><text x="55.8855%" y="735.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.2750%" y="693" width="0.0799%" height="15" fill="rgb(253,131,37)" fg:x="704" fg:w="1"/><text x="56.5250%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.2750%" y="677" width="0.0799%" height="15" fill="rgb(218,55,27)" fg:x="704" fg:w="1"/><text x="56.5250%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.2750%" y="661" width="0.0799%" height="15" fill="rgb(241,220,28)" fg:x="704" fg:w="1"/><text x="56.5250%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.2750%" y="645" width="0.0799%" height="15" fill="rgb(241,90,48)" fg:x="704" fg:w="1"/><text x="56.5250%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.2750%" y="629" width="0.0799%" height="15" fill="rgb(216,43,37)" fg:x="704" fg:w="1"/><text x="56.5250%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.2750%" y="613" width="0.0799%" height="15" fill="rgb(207,173,9)" fg:x="704" fg:w="1"/><text x="56.5250%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.2750%" y="597" width="0.0799%" height="15" fill="rgb(240,126,30)" fg:x="704" fg:w="1"/><text x="56.5250%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.2750%" y="581" width="0.0799%" height="15" fill="rgb(228,178,53)" fg:x="704" fg:w="1"/><text x="56.5250%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.2750%" y="565" width="0.0799%" height="15" fill="rgb(217,33,4)" fg:x="704" fg:w="1"/><text x="56.5250%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.2750%" y="549" width="0.0799%" height="15" fill="rgb(206,124,34)" fg:x="704" fg:w="1"/><text x="56.5250%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.2750%" y="533" width="0.0799%" height="15" fill="rgb(208,122,53)" fg:x="704" fg:w="1"/><text x="56.5250%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.2750%" y="517" width="0.0799%" height="15" fill="rgb(215,202,26)" fg:x="704" fg:w="1"/><text x="56.5250%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="56.3549%" y="645" width="0.0799%" height="15" fill="rgb(232,198,31)" fg:x="705" fg:w="1"/><text x="56.6049%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="56.3549%" y="629" width="0.0799%" height="15" fill="rgb(222,23,35)" fg:x="705" fg:w="1"/><text x="56.6049%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.3549%" y="613" width="0.0799%" height="15" fill="rgb(242,27,53)" fg:x="705" fg:w="1"/><text x="56.6049%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.5947%" y="453" width="0.0799%" height="15" fill="rgb(210,216,42)" fg:x="708" fg:w="1"/><text x="56.8447%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.5947%" y="437" width="0.0799%" height="15" fill="rgb(234,39,38)" fg:x="708" fg:w="1"/><text x="56.8447%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="56.5947%" y="421" width="0.0799%" height="15" fill="rgb(235,126,54)" fg:x="708" fg:w="1"/><text x="56.8447%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="56.5947%" y="405" width="0.0799%" height="15" fill="rgb(235,150,33)" fg:x="708" fg:w="1"/><text x="56.8447%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="56.5947%" y="389" width="0.0799%" height="15" fill="rgb(249,49,53)" fg:x="708" fg:w="1"/><text x="56.8447%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="56.5947%" y="373" width="0.0799%" height="15" fill="rgb(238,60,50)" fg:x="708" fg:w="1"/><text x="56.8447%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="56.5947%" y="357" width="0.0799%" height="15" fill="rgb(210,5,2)" fg:x="708" fg:w="1"/><text x="56.8447%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="56.5947%" y="341" width="0.0799%" height="15" fill="rgb(214,207,24)" fg:x="708" fg:w="1"/><text x="56.8447%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (6 samples, 0.48%)</title><rect x="56.3549%" y="661" width="0.4796%" height="15" fill="rgb(228,173,2)" fg:x="705" fg:w="6"/><text x="56.6049%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="56.4349%" y="645" width="0.3997%" height="15" fill="rgb(244,26,8)" fg:x="706" fg:w="5"/><text x="56.6849%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.40%)</title><rect x="56.4349%" y="629" width="0.3997%" height="15" fill="rgb(249,153,35)" fg:x="706" fg:w="5"/><text x="56.6849%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="56.5148%" y="613" width="0.3197%" height="15" fill="rgb(221,215,40)" fg:x="707" fg:w="4"/><text x="56.7648%" y="623.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="56.5148%" y="597" width="0.3197%" height="15" fill="rgb(238,106,35)" fg:x="707" fg:w="4"/><text x="56.7648%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="56.5148%" y="581" width="0.3197%" height="15" fill="rgb(207,195,21)" fg:x="707" fg:w="4"/><text x="56.7648%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="56.5148%" y="565" width="0.3197%" height="15" fill="rgb(205,43,29)" fg:x="707" fg:w="4"/><text x="56.7648%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="56.5148%" y="549" width="0.3197%" height="15" fill="rgb(236,35,21)" fg:x="707" fg:w="4"/><text x="56.7648%" y="559.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="56.5148%" y="533" width="0.3197%" height="15" fill="rgb(244,74,8)" fg:x="707" fg:w="4"/><text x="56.7648%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="56.5148%" y="517" width="0.3197%" height="15" fill="rgb(241,229,7)" fg:x="707" fg:w="4"/><text x="56.7648%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="56.5148%" y="501" width="0.3197%" height="15" fill="rgb(212,223,25)" fg:x="707" fg:w="4"/><text x="56.7648%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="56.5148%" y="485" width="0.3197%" height="15" fill="rgb(234,58,53)" fg:x="707" fg:w="4"/><text x="56.7648%" y="495.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="56.5947%" y="469" width="0.2398%" height="15" fill="rgb(244,36,1)" fg:x="708" fg:w="3"/><text x="56.8447%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="56.6747%" y="453" width="0.1599%" height="15" fill="rgb(222,40,54)" fg:x="709" fg:w="2"/><text x="56.9247%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="56.7546%" y="437" width="0.0799%" height="15" fill="rgb(210,207,39)" fg:x="710" fg:w="1"/><text x="57.0046%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="56.7546%" y="421" width="0.0799%" height="15" fill="rgb(234,52,14)" fg:x="710" fg:w="1"/><text x="57.0046%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.7546%" y="405" width="0.0799%" height="15" fill="rgb(239,108,46)" fg:x="710" fg:w="1"/><text x="57.0046%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.7546%" y="389" width="0.0799%" height="15" fill="rgb(252,223,5)" fg:x="710" fg:w="1"/><text x="57.0046%" y="399.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="56.7546%" y="373" width="0.0799%" height="15" fill="rgb(227,181,11)" fg:x="710" fg:w="1"/><text x="57.0046%" y="383.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="56.7546%" y="357" width="0.0799%" height="15" fill="rgb(248,126,40)" fg:x="710" fg:w="1"/><text x="57.0046%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (7 samples, 0.56%)</title><rect x="56.3549%" y="677" width="0.5596%" height="15" fill="rgb(243,1,18)" fg:x="705" fg:w="7"/><text x="56.6049%" y="687.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="56.8345%" y="661" width="0.0799%" height="15" fill="rgb(214,145,23)" fg:x="711" fg:w="1"/><text x="57.0845%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="56.9145%" y="677" width="0.0799%" height="15" fill="rgb(241,218,11)" fg:x="712" fg:w="1"/><text x="57.1645%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.9145%" y="661" width="0.0799%" height="15" fill="rgb(214,219,24)" fg:x="712" fg:w="1"/><text x="57.1645%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="57.0743%" y="613" width="0.0799%" height="15" fill="rgb(235,32,7)" fg:x="714" fg:w="1"/><text x="57.3243%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.1543%" y="597" width="0.0799%" height="15" fill="rgb(227,121,28)" fg:x="715" fg:w="1"/><text x="57.4043%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.1543%" y="581" width="0.0799%" height="15" fill="rgb(216,129,49)" fg:x="715" fg:w="1"/><text x="57.4043%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.1543%" y="565" width="0.0799%" height="15" fill="rgb(207,194,50)" fg:x="715" fg:w="1"/><text x="57.4043%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.1543%" y="549" width="0.0799%" height="15" fill="rgb(207,4,18)" fg:x="715" fg:w="1"/><text x="57.4043%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.1543%" y="533" width="0.0799%" height="15" fill="rgb(213,50,30)" fg:x="715" fg:w="1"/><text x="57.4043%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.1543%" y="517" width="0.0799%" height="15" fill="rgb(208,77,22)" fg:x="715" fg:w="1"/><text x="57.4043%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.1543%" y="501" width="0.0799%" height="15" fill="rgb(244,204,34)" fg:x="715" fg:w="1"/><text x="57.4043%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.1543%" y="485" width="0.0799%" height="15" fill="rgb(230,20,17)" fg:x="715" fg:w="1"/><text x="57.4043%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="57.2342%" y="565" width="0.0799%" height="15" fill="rgb(237,83,15)" fg:x="716" fg:w="1"/><text x="57.4842%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="57.2342%" y="549" width="0.0799%" height="15" fill="rgb(221,109,25)" fg:x="716" fg:w="1"/><text x="57.4842%" y="559.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="57.3141%" y="549" width="0.0799%" height="15" fill="rgb(205,194,52)" fg:x="717" fg:w="1"/><text x="57.5641%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3141%" y="533" width="0.0799%" height="15" fill="rgb(244,173,54)" fg:x="717" fg:w="1"/><text x="57.5641%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3141%" y="517" width="0.0799%" height="15" fill="rgb(227,181,18)" fg:x="717" fg:w="1"/><text x="57.5641%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.3141%" y="501" width="0.0799%" height="15" fill="rgb(238,36,30)" fg:x="717" fg:w="1"/><text x="57.5641%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.3141%" y="485" width="0.0799%" height="15" fill="rgb(254,85,0)" fg:x="717" fg:w="1"/><text x="57.5641%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.3141%" y="469" width="0.0799%" height="15" fill="rgb(247,63,33)" fg:x="717" fg:w="1"/><text x="57.5641%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.3141%" y="453" width="0.0799%" height="15" fill="rgb(220,7,54)" fg:x="717" fg:w="1"/><text x="57.5641%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.3141%" y="437" width="0.0799%" height="15" fill="rgb(238,227,21)" fg:x="717" fg:w="1"/><text x="57.5641%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.3141%" y="421" width="0.0799%" height="15" fill="rgb(237,29,31)" fg:x="717" fg:w="1"/><text x="57.5641%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.3141%" y="405" width="0.0799%" height="15" fill="rgb(211,21,50)" fg:x="717" fg:w="1"/><text x="57.5641%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.3141%" y="389" width="0.0799%" height="15" fill="rgb(239,119,2)" fg:x="717" fg:w="1"/><text x="57.5641%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.3141%" y="373" width="0.0799%" height="15" fill="rgb(250,2,39)" fg:x="717" fg:w="1"/><text x="57.5641%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.3941%" y="533" width="0.0799%" height="15" fill="rgb(244,46,53)" fg:x="718" fg:w="1"/><text x="57.6441%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="57.2342%" y="597" width="0.4796%" height="15" fill="rgb(209,21,19)" fg:x="716" fg:w="6"/><text x="57.4842%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="57.2342%" y="581" width="0.4796%" height="15" fill="rgb(236,145,4)" fg:x="716" fg:w="6"/><text x="57.4842%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="57.3141%" y="565" width="0.3997%" height="15" fill="rgb(220,133,36)" fg:x="717" fg:w="5"/><text x="57.5641%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="57.3941%" y="549" width="0.3197%" height="15" fill="rgb(244,18,3)" fg:x="718" fg:w="4"/><text x="57.6441%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="57.4740%" y="533" width="0.2398%" height="15" fill="rgb(232,171,48)" fg:x="719" fg:w="3"/><text x="57.7240%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.4740%" y="517" width="0.2398%" height="15" fill="rgb(223,223,53)" fg:x="719" fg:w="3"/><text x="57.7240%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="57.5540%" y="501" width="0.1599%" height="15" fill="rgb(246,92,13)" fg:x="720" fg:w="2"/><text x="57.8040%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.5540%" y="485" width="0.1599%" height="15" fill="rgb(229,171,10)" fg:x="720" fg:w="2"/><text x="57.8040%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.5540%" y="469" width="0.1599%" height="15" fill="rgb(213,131,26)" fg:x="720" fg:w="2"/><text x="57.8040%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.5540%" y="453" width="0.1599%" height="15" fill="rgb(242,87,54)" fg:x="720" fg:w="2"/><text x="57.8040%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.7938%" y="533" width="0.0799%" height="15" fill="rgb(237,21,35)" fg:x="723" fg:w="1"/><text x="58.0438%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="57.7938%" y="517" width="0.0799%" height="15" fill="rgb(253,13,47)" fg:x="723" fg:w="1"/><text x="58.0438%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.8737%" y="533" width="0.0799%" height="15" fill="rgb(215,122,49)" fg:x="724" fg:w="1"/><text x="58.1237%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.9536%" y="501" width="0.0799%" height="15" fill="rgb(209,179,30)" fg:x="725" fg:w="1"/><text x="58.2036%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9536%" y="485" width="0.0799%" height="15" fill="rgb(235,100,24)" fg:x="725" fg:w="1"/><text x="58.2036%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.0336%" y="485" width="0.0799%" height="15" fill="rgb(209,67,24)" fg:x="726" fg:w="1"/><text x="58.2836%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.2734%" y="469" width="0.1599%" height="15" fill="rgb(206,74,32)" fg:x="729" fg:w="2"/><text x="58.5234%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.2734%" y="453" width="0.1599%" height="15" fill="rgb(212,45,25)" fg:x="729" fg:w="2"/><text x="58.5234%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.2734%" y="437" width="0.1599%" height="15" fill="rgb(239,26,3)" fg:x="729" fg:w="2"/><text x="58.5234%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="58.8329%" y="437" width="0.1599%" height="15" fill="rgb(218,36,15)" fg:x="736" fg:w="2"/><text x="59.0829%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="58.8329%" y="453" width="0.3997%" height="15" fill="rgb(206,108,24)" fg:x="736" fg:w="5"/><text x="59.0829%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="58.9928%" y="437" width="0.2398%" height="15" fill="rgb(234,204,42)" fg:x="738" fg:w="3"/><text x="59.2428%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.1527%" y="421" width="0.0799%" height="15" fill="rgb(229,2,11)" fg:x="740" fg:w="1"/><text x="59.4027%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.3125%" y="421" width="0.1599%" height="15" fill="rgb(221,20,48)" fg:x="742" fg:w="2"/><text x="59.5625%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.3125%" y="405" width="0.1599%" height="15" fill="rgb(244,164,10)" fg:x="742" fg:w="2"/><text x="59.5625%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.3125%" y="389" width="0.1599%" height="15" fill="rgb(243,229,2)" fg:x="742" fg:w="2"/><text x="59.5625%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.44%)</title><rect x="58.1135%" y="485" width="1.4388%" height="15" fill="rgb(232,131,37)" fg:x="727" fg:w="18"/><text x="58.3635%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.12%)</title><rect x="58.4333%" y="469" width="1.1191%" height="15" fill="rgb(217,156,11)" fg:x="731" fg:w="14"/><text x="58.6833%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="59.2326%" y="453" width="0.3197%" height="15" fill="rgb(239,99,48)" fg:x="741" fg:w="4"/><text x="59.4826%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="59.2326%" y="437" width="0.3197%" height="15" fill="rgb(231,209,9)" fg:x="741" fg:w="4"/><text x="59.4826%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="59.4724%" y="421" width="0.0799%" height="15" fill="rgb(254,97,27)" fg:x="744" fg:w="1"/><text x="59.7224%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4724%" y="405" width="0.0799%" height="15" fill="rgb(223,151,38)" fg:x="744" fg:w="1"/><text x="59.7224%" y="415.50"></text></g><g><title>serde_json::de::from_trait (24 samples, 1.92%)</title><rect x="57.7138%" y="581" width="1.9185%" height="15" fill="rgb(219,206,35)" fg:x="722" fg:w="24"/><text x="57.9638%" y="591.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (23 samples, 1.84%)</title><rect x="57.7938%" y="565" width="1.8385%" height="15" fill="rgb(216,130,31)" fg:x="723" fg:w="23"/><text x="58.0438%" y="575.50">s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 1.84%)</title><rect x="57.7938%" y="549" width="1.8385%" height="15" fill="rgb(251,97,34)" fg:x="723" fg:w="23"/><text x="58.0438%" y="559.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (21 samples, 1.68%)</title><rect x="57.9536%" y="533" width="1.6787%" height="15" fill="rgb(246,159,47)" fg:x="725" fg:w="21"/><text x="58.2036%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21 samples, 1.68%)</title><rect x="57.9536%" y="517" width="1.6787%" height="15" fill="rgb(232,87,10)" fg:x="725" fg:w="21"/><text x="58.2036%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (20 samples, 1.60%)</title><rect x="58.0336%" y="501" width="1.5987%" height="15" fill="rgb(249,1,37)" fg:x="726" fg:w="20"/><text x="58.2836%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5524%" y="485" width="0.0799%" height="15" fill="rgb(239,135,14)" fg:x="745" fg:w="1"/><text x="59.8024%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="59.7922%" y="501" width="0.3997%" height="15" fill="rgb(253,116,46)" fg:x="748" fg:w="5"/><text x="60.0422%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="59.7922%" y="485" width="0.3997%" height="15" fill="rgb(222,217,37)" fg:x="748" fg:w="5"/><text x="60.0422%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (4 samples, 0.32%)</title><rect x="59.8721%" y="469" width="0.3197%" height="15" fill="rgb(252,96,8)" fg:x="749" fg:w="4"/><text x="60.1221%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.0320%" y="453" width="0.1599%" height="15" fill="rgb(254,103,41)" fg:x="751" fg:w="2"/><text x="60.2820%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.1119%" y="437" width="0.0799%" height="15" fill="rgb(218,213,19)" fg:x="752" fg:w="1"/><text x="60.3619%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.1119%" y="421" width="0.0799%" height="15" fill="rgb(253,95,21)" fg:x="752" fg:w="1"/><text x="60.3619%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="60.1119%" y="405" width="0.0799%" height="15" fill="rgb(229,26,28)" fg:x="752" fg:w="1"/><text x="60.3619%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.1119%" y="389" width="0.0799%" height="15" fill="rgb(230,129,16)" fg:x="752" fg:w="1"/><text x="60.3619%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="60.1918%" y="453" width="0.1599%" height="15" fill="rgb(236,126,17)" fg:x="753" fg:w="2"/><text x="60.4418%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="60.1918%" y="501" width="0.2398%" height="15" fill="rgb(209,33,33)" fg:x="753" fg:w="3"/><text x="60.4418%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="60.1918%" y="485" width="0.2398%" height="15" fill="rgb(227,85,29)" fg:x="753" fg:w="3"/><text x="60.4418%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="60.1918%" y="469" width="0.2398%" height="15" fill="rgb(241,53,46)" fg:x="753" fg:w="3"/><text x="60.4418%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.3517%" y="453" width="0.0799%" height="15" fill="rgb(228,167,53)" fg:x="755" fg:w="1"/><text x="60.6017%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.3517%" y="437" width="0.0799%" height="15" fill="rgb(238,195,45)" fg:x="755" fg:w="1"/><text x="60.6017%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.5116%" y="469" width="0.0799%" height="15" fill="rgb(252,124,45)" fg:x="757" fg:w="1"/><text x="60.7616%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.5116%" y="453" width="0.0799%" height="15" fill="rgb(251,38,35)" fg:x="757" fg:w="1"/><text x="60.7616%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="60.5915%" y="453" width="0.0799%" height="15" fill="rgb(227,33,2)" fg:x="758" fg:w="1"/><text x="60.8415%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="60.5915%" y="437" width="0.0799%" height="15" fill="rgb(223,157,46)" fg:x="758" fg:w="1"/><text x="60.8415%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5915%" y="421" width="0.0799%" height="15" fill="rgb(222,78,41)" fg:x="758" fg:w="1"/><text x="60.8415%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.5915%" y="405" width="0.0799%" height="15" fill="rgb(248,176,11)" fg:x="758" fg:w="1"/><text x="60.8415%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="60.6715%" y="421" width="0.1599%" height="15" fill="rgb(241,221,18)" fg:x="759" fg:w="2"/><text x="60.9215%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (15 samples, 1.20%)</title><rect x="59.7122%" y="517" width="1.1990%" height="15" fill="rgb(218,85,22)" fg:x="747" fg:w="15"/><text x="59.9622%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="60.4317%" y="501" width="0.4796%" height="15" fill="rgb(222,223,7)" fg:x="756" fg:w="6"/><text x="60.6817%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="60.4317%" y="485" width="0.4796%" height="15" fill="rgb(254,59,39)" fg:x="756" fg:w="6"/><text x="60.6817%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="60.5915%" y="469" width="0.3197%" height="15" fill="rgb(247,100,27)" fg:x="758" fg:w="4"/><text x="60.8415%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="60.6715%" y="453" width="0.2398%" height="15" fill="rgb(237,207,10)" fg:x="759" fg:w="3"/><text x="60.9215%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.6715%" y="437" width="0.2398%" height="15" fill="rgb(220,121,28)" fg:x="759" fg:w="3"/><text x="60.9215%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.8313%" y="421" width="0.0799%" height="15" fill="rgb(213,223,20)" fg:x="761" fg:w="1"/><text x="61.0813%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8313%" y="405" width="0.0799%" height="15" fill="rgb(205,121,27)" fg:x="761" fg:w="1"/><text x="61.0813%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.8313%" y="389" width="0.0799%" height="15" fill="rgb(253,24,53)" fg:x="761" fg:w="1"/><text x="61.0813%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (16 samples, 1.28%)</title><rect x="59.7122%" y="549" width="1.2790%" height="15" fill="rgb(224,224,47)" fg:x="747" fg:w="16"/><text x="59.9622%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (16 samples, 1.28%)</title><rect x="59.7122%" y="533" width="1.2790%" height="15" fill="rgb(250,125,36)" fg:x="747" fg:w="16"/><text x="59.9622%" y="543.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="60.9113%" y="517" width="0.0799%" height="15" fill="rgb(240,144,38)" fg:x="762" fg:w="1"/><text x="61.1613%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (42 samples, 3.36%)</title><rect x="57.7138%" y="597" width="3.3573%" height="15" fill="rgb(250,15,50)" fg:x="722" fg:w="42"/><text x="57.9638%" y="607.50">&lt;ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (18 samples, 1.44%)</title><rect x="59.6323%" y="581" width="1.4388%" height="15" fill="rgb(210,24,26)" fg:x="746" fg:w="18"/><text x="59.8823%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.36%)</title><rect x="59.7122%" y="565" width="1.3589%" height="15" fill="rgb(234,53,53)" fg:x="747" fg:w="17"/><text x="59.9622%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.9912%" y="549" width="0.0799%" height="15" fill="rgb(208,108,28)" fg:x="763" fg:w="1"/><text x="61.2412%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="61.1511%" y="581" width="0.0799%" height="15" fill="rgb(227,143,7)" fg:x="765" fg:w="1"/><text x="61.4011%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.1511%" y="565" width="0.0799%" height="15" fill="rgb(238,189,38)" fg:x="765" fg:w="1"/><text x="61.4011%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.3110%" y="501" width="0.0799%" height="15" fill="rgb(222,69,15)" fg:x="767" fg:w="1"/><text x="61.5610%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.3110%" y="485" width="0.0799%" height="15" fill="rgb(213,169,7)" fg:x="767" fg:w="1"/><text x="61.5610%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (55 samples, 4.40%)</title><rect x="57.0743%" y="645" width="4.3965%" height="15" fill="rgb(251,219,4)" fg:x="714" fg:w="55"/><text x="57.3243%" y="655.50">&lt;engi..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (55 samples, 4.40%)</title><rect x="57.0743%" y="629" width="4.3965%" height="15" fill="rgb(241,55,40)" fg:x="714" fg:w="55"/><text x="57.3243%" y="639.50">&lt;engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (54 samples, 4.32%)</title><rect x="57.1543%" y="613" width="4.3165%" height="15" fill="rgb(243,57,30)" fg:x="715" fg:w="54"/><text x="57.4043%" y="623.50">engin..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="61.0711%" y="597" width="0.3997%" height="15" fill="rgb(234,50,30)" fg:x="764" fg:w="5"/><text x="61.3211%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="61.2310%" y="581" width="0.2398%" height="15" fill="rgb(239,23,42)" fg:x="766" fg:w="3"/><text x="61.4810%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.2310%" y="565" width="0.2398%" height="15" fill="rgb(217,38,19)" fg:x="766" fg:w="3"/><text x="61.4810%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.2310%" y="549" width="0.2398%" height="15" fill="rgb(215,179,16)" fg:x="766" fg:w="3"/><text x="61.4810%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="61.2310%" y="533" width="0.2398%" height="15" fill="rgb(254,21,37)" fg:x="766" fg:w="3"/><text x="61.4810%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.2310%" y="517" width="0.2398%" height="15" fill="rgb(219,207,48)" fg:x="766" fg:w="3"/><text x="61.4810%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.3909%" y="501" width="0.0799%" height="15" fill="rgb(227,225,41)" fg:x="768" fg:w="1"/><text x="61.6409%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.3909%" y="485" width="0.0799%" height="15" fill="rgb(223,130,1)" fg:x="768" fg:w="1"/><text x="61.6409%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.4708%" y="613" width="0.0799%" height="15" fill="rgb(249,54,42)" fg:x="769" fg:w="1"/><text x="61.7208%" y="623.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="61.4708%" y="645" width="0.2398%" height="15" fill="rgb(248,69,25)" fg:x="769" fg:w="3"/><text x="61.7208%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.4708%" y="629" width="0.2398%" height="15" fill="rgb(234,21,32)" fg:x="769" fg:w="3"/><text x="61.7208%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.5508%" y="613" width="0.1599%" height="15" fill="rgb(252,136,6)" fg:x="770" fg:w="2"/><text x="61.8008%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.5508%" y="597" width="0.1599%" height="15" fill="rgb(245,87,12)" fg:x="770" fg:w="2"/><text x="61.8008%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="61.5508%" y="581" width="0.1599%" height="15" fill="rgb(208,12,15)" fg:x="770" fg:w="2"/><text x="61.8008%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="61.5508%" y="565" width="0.1599%" height="15" fill="rgb(250,98,2)" fg:x="770" fg:w="2"/><text x="61.8008%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="61.5508%" y="549" width="0.1599%" height="15" fill="rgb(205,213,15)" fg:x="770" fg:w="2"/><text x="61.8008%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="61.5508%" y="533" width="0.1599%" height="15" fill="rgb(248,192,44)" fg:x="770" fg:w="2"/><text x="61.8008%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="61.5508%" y="517" width="0.1599%" height="15" fill="rgb(221,89,17)" fg:x="770" fg:w="2"/><text x="61.8008%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="61.5508%" y="501" width="0.1599%" height="15" fill="rgb(209,55,3)" fg:x="770" fg:w="2"/><text x="61.8008%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="61.5508%" y="485" width="0.1599%" height="15" fill="rgb(247,23,45)" fg:x="770" fg:w="2"/><text x="61.8008%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="61.5508%" y="469" width="0.1599%" height="15" fill="rgb(235,152,23)" fg:x="770" fg:w="2"/><text x="61.8008%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="61.5508%" y="453" width="0.1599%" height="15" fill="rgb(244,63,13)" fg:x="770" fg:w="2"/><text x="61.8008%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.5508%" y="437" width="0.1599%" height="15" fill="rgb(227,30,37)" fg:x="770" fg:w="2"/><text x="61.8008%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.7106%" y="645" width="0.0799%" height="15" fill="rgb(224,49,42)" fg:x="772" fg:w="1"/><text x="61.9606%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.7906%" y="645" width="0.0799%" height="15" fill="rgb(218,129,5)" fg:x="773" fg:w="1"/><text x="62.0406%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="61.7906%" y="629" width="0.0799%" height="15" fill="rgb(240,199,54)" fg:x="773" fg:w="1"/><text x="62.0406%" y="639.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="61.8705%" y="645" width="0.0799%" height="15" fill="rgb(234,31,13)" fg:x="774" fg:w="1"/><text x="62.1205%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.0304%" y="613" width="0.0799%" height="15" fill="rgb(219,73,54)" fg:x="776" fg:w="1"/><text x="62.2804%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.1902%" y="581" width="0.0799%" height="15" fill="rgb(251,162,10)" fg:x="778" fg:w="1"/><text x="62.4402%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (75 samples, 6.00%)</title><rect x="56.3549%" y="693" width="5.9952%" height="15" fill="rgb(240,138,47)" fg:x="705" fg:w="75"/><text x="56.6049%" y="703.50">&lt;plugins..</text></g><g><title>kernel::model::entry::Entry::scope (67 samples, 5.36%)</title><rect x="56.9944%" y="677" width="5.3557%" height="15" fill="rgb(216,138,26)" fg:x="713" fg:w="67"/><text x="57.2444%" y="687.50">kernel:..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (67 samples, 5.36%)</title><rect x="56.9944%" y="661" width="5.3557%" height="15" fill="rgb(243,17,35)" fg:x="713" fg:w="67"/><text x="57.2444%" y="671.50">kernel:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="61.9504%" y="645" width="0.3997%" height="15" fill="rgb(241,60,18)" fg:x="775" fg:w="5"/><text x="62.2004%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="61.9504%" y="629" width="0.3997%" height="15" fill="rgb(234,2,44)" fg:x="775" fg:w="5"/><text x="62.2004%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.1103%" y="613" width="0.2398%" height="15" fill="rgb(225,225,33)" fg:x="777" fg:w="3"/><text x="62.3603%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.1103%" y="597" width="0.2398%" height="15" fill="rgb(234,50,31)" fg:x="777" fg:w="3"/><text x="62.3603%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.2702%" y="581" width="0.0799%" height="15" fill="rgb(249,6,25)" fg:x="779" fg:w="1"/><text x="62.5202%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="62.3501%" y="645" width="0.2398%" height="15" fill="rgb(241,5,17)" fg:x="780" fg:w="3"/><text x="62.6001%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="62.3501%" y="629" width="0.2398%" height="15" fill="rgb(207,116,10)" fg:x="780" fg:w="3"/><text x="62.6001%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.5100%" y="613" width="0.0799%" height="15" fill="rgb(222,128,18)" fg:x="782" fg:w="1"/><text x="62.7600%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.5100%" y="597" width="0.0799%" height="15" fill="rgb(229,109,25)" fg:x="782" fg:w="1"/><text x="62.7600%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="62.3501%" y="661" width="0.3197%" height="15" fill="rgb(222,102,25)" fg:x="780" fg:w="4"/><text x="62.6001%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="62.5899%" y="645" width="0.0799%" height="15" fill="rgb(239,211,5)" fg:x="783" fg:w="1"/><text x="62.8399%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="62.5899%" y="629" width="0.0799%" height="15" fill="rgb(223,136,26)" fg:x="783" fg:w="1"/><text x="62.8399%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="62.5899%" y="613" width="0.0799%" height="15" fill="rgb(227,30,15)" fg:x="783" fg:w="1"/><text x="62.8399%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.5899%" y="597" width="0.0799%" height="15" fill="rgb(247,76,4)" fg:x="783" fg:w="1"/><text x="62.8399%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.5899%" y="581" width="0.0799%" height="15" fill="rgb(245,38,48)" fg:x="783" fg:w="1"/><text x="62.8399%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="62.5899%" y="565" width="0.0799%" height="15" fill="rgb(210,220,14)" fg:x="783" fg:w="1"/><text x="62.8399%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="62.5899%" y="549" width="0.0799%" height="15" fill="rgb(224,60,51)" fg:x="783" fg:w="1"/><text x="62.8399%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.5899%" y="533" width="0.0799%" height="15" fill="rgb(212,133,49)" fg:x="783" fg:w="1"/><text x="62.8399%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.5899%" y="517" width="0.0799%" height="15" fill="rgb(231,39,22)" fg:x="783" fg:w="1"/><text x="62.8399%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="62.5899%" y="501" width="0.0799%" height="15" fill="rgb(236,173,22)" fg:x="783" fg:w="1"/><text x="62.8399%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="62.5899%" y="485" width="0.0799%" height="15" fill="rgb(210,70,0)" fg:x="783" fg:w="1"/><text x="62.8399%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.5899%" y="469" width="0.0799%" height="15" fill="rgb(215,170,11)" fg:x="783" fg:w="1"/><text x="62.8399%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.5899%" y="453" width="0.0799%" height="15" fill="rgb(220,154,28)" fg:x="783" fg:w="1"/><text x="62.8399%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="62.5899%" y="437" width="0.0799%" height="15" fill="rgb(240,160,41)" fg:x="783" fg:w="1"/><text x="62.8399%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="62.5899%" y="421" width="0.0799%" height="15" fill="rgb(243,215,41)" fg:x="783" fg:w="1"/><text x="62.8399%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.5899%" y="405" width="0.0799%" height="15" fill="rgb(214,208,31)" fg:x="783" fg:w="1"/><text x="62.8399%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.5899%" y="389" width="0.0799%" height="15" fill="rgb(247,57,22)" fg:x="783" fg:w="1"/><text x="62.8399%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.5899%" y="373" width="0.0799%" height="15" fill="rgb(228,73,52)" fg:x="783" fg:w="1"/><text x="62.8399%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.5899%" y="357" width="0.0799%" height="15" fill="rgb(252,60,9)" fg:x="783" fg:w="1"/><text x="62.8399%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.5899%" y="341" width="0.0799%" height="15" fill="rgb(233,9,51)" fg:x="783" fg:w="1"/><text x="62.8399%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.5899%" y="325" width="0.0799%" height="15" fill="rgb(223,67,14)" fg:x="783" fg:w="1"/><text x="62.8399%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.5899%" y="309" width="0.0799%" height="15" fill="rgb(222,86,2)" fg:x="783" fg:w="1"/><text x="62.8399%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.5899%" y="293" width="0.0799%" height="15" fill="rgb(243,58,54)" fg:x="783" fg:w="1"/><text x="62.8399%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.5899%" y="277" width="0.0799%" height="15" fill="rgb(210,200,39)" fg:x="783" fg:w="1"/><text x="62.8399%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.5899%" y="261" width="0.0799%" height="15" fill="rgb(238,135,9)" fg:x="783" fg:w="1"/><text x="62.8399%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="62.5899%" y="245" width="0.0799%" height="15" fill="rgb(232,179,7)" fg:x="783" fg:w="1"/><text x="62.8399%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="62.5899%" y="229" width="0.0799%" height="15" fill="rgb(245,65,41)" fg:x="783" fg:w="1"/><text x="62.8399%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.5899%" y="213" width="0.0799%" height="15" fill="rgb(227,43,8)" fg:x="783" fg:w="1"/><text x="62.8399%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="62.5899%" y="197" width="0.0799%" height="15" fill="rgb(235,91,14)" fg:x="783" fg:w="1"/><text x="62.8399%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="62.5899%" y="181" width="0.0799%" height="15" fill="rgb(235,219,31)" fg:x="783" fg:w="1"/><text x="62.8399%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="62.5899%" y="165" width="0.0799%" height="15" fill="rgb(227,121,25)" fg:x="783" fg:w="1"/><text x="62.8399%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="62.5899%" y="149" width="0.0799%" height="15" fill="rgb(254,129,24)" fg:x="783" fg:w="1"/><text x="62.8399%" y="159.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (82 samples, 6.55%)</title><rect x="56.1950%" y="709" width="6.5548%" height="15" fill="rgb(226,144,49)" fg:x="703" fg:w="82"/><text x="56.4450%" y="719.50">&lt;engine::..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (5 samples, 0.40%)</title><rect x="62.3501%" y="693" width="0.3997%" height="15" fill="rgb(214,187,32)" fg:x="780" fg:w="5"/><text x="62.6001%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="62.3501%" y="677" width="0.3997%" height="15" fill="rgb(243,129,46)" fg:x="780" fg:w="5"/><text x="62.6001%" y="687.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="62.6699%" y="661" width="0.0799%" height="15" fill="rgb(221,185,35)" fg:x="784" fg:w="1"/><text x="62.9199%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.6699%" y="645" width="0.0799%" height="15" fill="rgb(205,0,32)" fg:x="784" fg:w="1"/><text x="62.9199%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7498%" y="709" width="0.0799%" height="15" fill="rgb(229,179,12)" fg:x="785" fg:w="1"/><text x="62.9998%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.8297%" y="661" width="0.0799%" height="15" fill="rgb(252,107,19)" fg:x="786" fg:w="1"/><text x="63.0797%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="63.0695%" y="581" width="0.0799%" height="15" fill="rgb(220,95,27)" fg:x="789" fg:w="1"/><text x="63.3195%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.0695%" y="565" width="0.0799%" height="15" fill="rgb(240,113,40)" fg:x="789" fg:w="1"/><text x="63.3195%" y="575.50"></text></g><g><title>kernel::surround::Surroundings::unpack (5 samples, 0.40%)</title><rect x="63.1495%" y="581" width="0.3997%" height="15" fill="rgb(208,4,43)" fg:x="790" fg:w="5"/><text x="63.3995%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="63.1495%" y="565" width="0.3997%" height="15" fill="rgb(247,189,30)" fg:x="790" fg:w="5"/><text x="63.3995%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="63.2294%" y="549" width="0.3197%" height="15" fill="rgb(231,157,17)" fg:x="791" fg:w="4"/><text x="63.4794%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="63.2294%" y="533" width="0.3197%" height="15" fill="rgb(224,139,6)" fg:x="791" fg:w="4"/><text x="63.4794%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="63.2294%" y="517" width="0.3197%" height="15" fill="rgb(223,83,16)" fg:x="791" fg:w="4"/><text x="63.4794%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="63.2294%" y="501" width="0.3197%" height="15" fill="rgb(232,211,20)" fg:x="791" fg:w="4"/><text x="63.4794%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="63.2294%" y="485" width="0.3197%" height="15" fill="rgb(225,203,35)" fg:x="791" fg:w="4"/><text x="63.4794%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="63.2294%" y="469" width="0.3197%" height="15" fill="rgb(215,211,44)" fg:x="791" fg:w="4"/><text x="63.4794%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="63.2294%" y="453" width="0.3197%" height="15" fill="rgb(248,213,26)" fg:x="791" fg:w="4"/><text x="63.4794%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="63.2294%" y="437" width="0.3197%" height="15" fill="rgb(214,23,52)" fg:x="791" fg:w="4"/><text x="63.4794%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="63.2294%" y="421" width="0.3197%" height="15" fill="rgb(225,173,50)" fg:x="791" fg:w="4"/><text x="63.4794%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="63.2294%" y="405" width="0.3197%" height="15" fill="rgb(206,150,22)" fg:x="791" fg:w="4"/><text x="63.4794%" y="415.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="63.2294%" y="389" width="0.3197%" height="15" fill="rgb(239,64,23)" fg:x="791" fg:w="4"/><text x="63.4794%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="63.3094%" y="373" width="0.2398%" height="15" fill="rgb(242,50,38)" fg:x="792" fg:w="3"/><text x="63.5594%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="63.5492%" y="549" width="0.0799%" height="15" fill="rgb(217,91,15)" fg:x="795" fg:w="1"/><text x="63.7992%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="63.5492%" y="533" width="0.0799%" height="15" fill="rgb(230,172,6)" fg:x="795" fg:w="1"/><text x="63.7992%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="63.5492%" y="517" width="0.0799%" height="15" fill="rgb(221,98,26)" fg:x="795" fg:w="1"/><text x="63.7992%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="63.5492%" y="501" width="0.0799%" height="15" fill="rgb(227,210,45)" fg:x="795" fg:w="1"/><text x="63.7992%" y="511.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="63.5492%" y="485" width="0.0799%" height="15" fill="rgb(206,8,30)" fg:x="795" fg:w="1"/><text x="63.7992%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="63.6291%" y="533" width="0.0799%" height="15" fill="rgb(241,219,17)" fg:x="796" fg:w="1"/><text x="63.8791%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.1087%" y="469" width="0.1599%" height="15" fill="rgb(247,121,29)" fg:x="802" fg:w="2"/><text x="64.3587%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.1087%" y="453" width="0.1599%" height="15" fill="rgb(219,169,49)" fg:x="802" fg:w="2"/><text x="64.3587%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.1087%" y="437" width="0.1599%" height="15" fill="rgb(253,49,49)" fg:x="802" fg:w="2"/><text x="64.3587%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.1087%" y="421" width="0.1599%" height="15" fill="rgb(217,178,3)" fg:x="802" fg:w="2"/><text x="64.3587%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.1087%" y="405" width="0.1599%" height="15" fill="rgb(234,73,37)" fg:x="802" fg:w="2"/><text x="64.3587%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.1087%" y="389" width="0.1599%" height="15" fill="rgb(250,98,22)" fg:x="802" fg:w="2"/><text x="64.3587%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.1087%" y="373" width="0.1599%" height="15" fill="rgb(220,108,37)" fg:x="802" fg:w="2"/><text x="64.3587%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="64.1087%" y="357" width="0.1599%" height="15" fill="rgb(225,168,10)" fg:x="802" fg:w="2"/><text x="64.3587%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="64.1087%" y="341" width="0.1599%" height="15" fill="rgb(247,215,21)" fg:x="802" fg:w="2"/><text x="64.3587%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="64.1087%" y="325" width="0.1599%" height="15" fill="rgb(253,189,31)" fg:x="802" fg:w="2"/><text x="64.3587%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="64.1087%" y="309" width="0.1599%" height="15" fill="rgb(241,54,22)" fg:x="802" fg:w="2"/><text x="64.3587%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="64.1886%" y="293" width="0.0799%" height="15" fill="rgb(211,87,4)" fg:x="803" fg:w="1"/><text x="64.4386%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="64.1886%" y="277" width="0.0799%" height="15" fill="rgb(245,112,24)" fg:x="803" fg:w="1"/><text x="64.4386%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="63.8689%" y="517" width="0.4796%" height="15" fill="rgb(235,190,41)" fg:x="799" fg:w="6"/><text x="64.1189%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="63.9488%" y="501" width="0.3997%" height="15" fill="rgb(214,89,8)" fg:x="800" fg:w="5"/><text x="64.1988%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="64.0288%" y="485" width="0.3197%" height="15" fill="rgb(249,155,35)" fg:x="801" fg:w="4"/><text x="64.2788%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2686%" y="469" width="0.0799%" height="15" fill="rgb(249,88,26)" fg:x="804" fg:w="1"/><text x="64.5186%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.3485%" y="469" width="0.0799%" height="15" fill="rgb(232,56,8)" fg:x="805" fg:w="1"/><text x="64.5985%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.3485%" y="453" width="0.0799%" height="15" fill="rgb(240,95,3)" fg:x="805" fg:w="1"/><text x="64.5985%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="64.3485%" y="517" width="0.2398%" height="15" fill="rgb(222,44,28)" fg:x="805" fg:w="3"/><text x="64.5985%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="64.3485%" y="501" width="0.2398%" height="15" fill="rgb(234,16,30)" fg:x="805" fg:w="3"/><text x="64.5985%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="64.3485%" y="485" width="0.2398%" height="15" fill="rgb(223,26,17)" fg:x="805" fg:w="3"/><text x="64.5985%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.4285%" y="469" width="0.1599%" height="15" fill="rgb(239,187,47)" fg:x="806" fg:w="2"/><text x="64.6785%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.5084%" y="453" width="0.0799%" height="15" fill="rgb(247,102,50)" fg:x="807" fg:w="1"/><text x="64.7584%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.6683%" y="453" width="0.0799%" height="15" fill="rgb(231,216,22)" fg:x="809" fg:w="1"/><text x="64.9183%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (16 samples, 1.28%)</title><rect x="63.6291%" y="549" width="1.2790%" height="15" fill="rgb(216,201,26)" fg:x="796" fg:w="16"/><text x="63.8791%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (15 samples, 1.20%)</title><rect x="63.7090%" y="533" width="1.1990%" height="15" fill="rgb(214,186,23)" fg:x="797" fg:w="15"/><text x="63.9590%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="64.5883%" y="517" width="0.3197%" height="15" fill="rgb(235,184,4)" fg:x="808" fg:w="4"/><text x="64.8383%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="64.5883%" y="501" width="0.3197%" height="15" fill="rgb(244,46,17)" fg:x="808" fg:w="4"/><text x="64.8383%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="64.6683%" y="485" width="0.2398%" height="15" fill="rgb(248,74,46)" fg:x="809" fg:w="3"/><text x="64.9183%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.6683%" y="469" width="0.2398%" height="15" fill="rgb(243,79,5)" fg:x="809" fg:w="3"/><text x="64.9183%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="64.7482%" y="453" width="0.1599%" height="15" fill="rgb(213,148,1)" fg:x="810" fg:w="2"/><text x="64.9982%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.7482%" y="437" width="0.1599%" height="15" fill="rgb(221,30,0)" fg:x="810" fg:w="2"/><text x="64.9982%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.9081%" y="533" width="0.0799%" height="15" fill="rgb(207,85,29)" fg:x="812" fg:w="1"/><text x="65.1581%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.72%)</title><rect x="65.1479%" y="485" width="0.7194%" height="15" fill="rgb(239,31,46)" fg:x="815" fg:w="9"/><text x="65.3979%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="65.5476%" y="469" width="0.3197%" height="15" fill="rgb(219,6,1)" fg:x="820" fg:w="4"/><text x="65.7976%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="65.5476%" y="453" width="0.3197%" height="15" fill="rgb(229,90,29)" fg:x="820" fg:w="4"/><text x="65.7976%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="65.5476%" y="437" width="0.3197%" height="15" fill="rgb(242,201,42)" fg:x="820" fg:w="4"/><text x="65.7976%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="65.5476%" y="421" width="0.3197%" height="15" fill="rgb(243,80,54)" fg:x="820" fg:w="4"/><text x="65.7976%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="65.5476%" y="405" width="0.3197%" height="15" fill="rgb(223,166,15)" fg:x="820" fg:w="4"/><text x="65.7976%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="65.6275%" y="389" width="0.2398%" height="15" fill="rgb(238,78,27)" fg:x="821" fg:w="3"/><text x="65.8775%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="65.6275%" y="373" width="0.2398%" height="15" fill="rgb(235,28,43)" fg:x="821" fg:w="3"/><text x="65.8775%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="65.6275%" y="357" width="0.2398%" height="15" fill="rgb(240,210,28)" fg:x="821" fg:w="3"/><text x="65.8775%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="65.6275%" y="341" width="0.2398%" height="15" fill="rgb(253,6,46)" fg:x="821" fg:w="3"/><text x="65.8775%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="65.6275%" y="325" width="0.2398%" height="15" fill="rgb(250,159,47)" fg:x="821" fg:w="3"/><text x="65.8775%" y="335.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="65.6275%" y="309" width="0.2398%" height="15" fill="rgb(216,139,2)" fg:x="821" fg:w="3"/><text x="65.8775%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="65.6275%" y="293" width="0.2398%" height="15" fill="rgb(221,124,44)" fg:x="821" fg:w="3"/><text x="65.8775%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.80%)</title><rect x="65.1479%" y="501" width="0.7994%" height="15" fill="rgb(205,37,22)" fg:x="815" fg:w="10"/><text x="65.3979%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8673%" y="485" width="0.0799%" height="15" fill="rgb(250,55,8)" fg:x="824" fg:w="1"/><text x="66.1173%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8673%" y="469" width="0.0799%" height="15" fill="rgb(215,83,48)" fg:x="824" fg:w="1"/><text x="66.1173%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.8673%" y="453" width="0.0799%" height="15" fill="rgb(253,2,32)" fg:x="824" fg:w="1"/><text x="66.1173%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.8673%" y="437" width="0.0799%" height="15" fill="rgb(236,67,28)" fg:x="824" fg:w="1"/><text x="66.1173%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.8673%" y="421" width="0.0799%" height="15" fill="rgb(252,55,15)" fg:x="824" fg:w="1"/><text x="66.1173%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.8673%" y="405" width="0.0799%" height="15" fill="rgb(243,173,17)" fg:x="824" fg:w="1"/><text x="66.1173%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.8673%" y="389" width="0.0799%" height="15" fill="rgb(215,212,13)" fg:x="824" fg:w="1"/><text x="66.1173%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.8673%" y="373" width="0.0799%" height="15" fill="rgb(253,176,6)" fg:x="824" fg:w="1"/><text x="66.1173%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.8673%" y="357" width="0.0799%" height="15" fill="rgb(236,105,26)" fg:x="824" fg:w="1"/><text x="66.1173%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.8673%" y="341" width="0.0799%" height="15" fill="rgb(239,226,32)" fg:x="824" fg:w="1"/><text x="66.1173%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.8673%" y="325" width="0.0799%" height="15" fill="rgb(236,104,51)" fg:x="824" fg:w="1"/><text x="66.1173%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.8673%" y="309" width="0.0799%" height="15" fill="rgb(220,172,33)" fg:x="824" fg:w="1"/><text x="66.1173%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.88%)</title><rect x="65.1479%" y="517" width="0.8793%" height="15" fill="rgb(224,182,25)" fg:x="815" fg:w="11"/><text x="65.3979%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.9472%" y="501" width="0.0799%" height="15" fill="rgb(236,184,24)" fg:x="825" fg:w="1"/><text x="66.1972%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.9472%" y="485" width="0.0799%" height="15" fill="rgb(241,221,14)" fg:x="825" fg:w="1"/><text x="66.1972%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.9472%" y="469" width="0.0799%" height="15" fill="rgb(227,146,5)" fg:x="825" fg:w="1"/><text x="66.1972%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.9472%" y="453" width="0.0799%" height="15" fill="rgb(214,15,23)" fg:x="825" fg:w="1"/><text x="66.1972%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.9472%" y="437" width="0.0799%" height="15" fill="rgb(233,157,31)" fg:x="825" fg:w="1"/><text x="66.1972%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.9472%" y="421" width="0.0799%" height="15" fill="rgb(211,27,52)" fg:x="825" fg:w="1"/><text x="66.1972%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.9472%" y="405" width="0.0799%" height="15" fill="rgb(212,223,15)" fg:x="825" fg:w="1"/><text x="66.1972%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.9472%" y="389" width="0.0799%" height="15" fill="rgb(254,211,0)" fg:x="825" fg:w="1"/><text x="66.1972%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.9472%" y="373" width="0.0799%" height="15" fill="rgb(205,43,38)" fg:x="825" fg:w="1"/><text x="66.1972%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.9472%" y="357" width="0.0799%" height="15" fill="rgb(242,206,46)" fg:x="825" fg:w="1"/><text x="66.1972%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.9472%" y="341" width="0.0799%" height="15" fill="rgb(220,221,12)" fg:x="825" fg:w="1"/><text x="66.1972%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.9472%" y="325" width="0.0799%" height="15" fill="rgb(217,156,35)" fg:x="825" fg:w="1"/><text x="66.1972%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.0272%" y="517" width="0.0799%" height="15" fill="rgb(207,181,49)" fg:x="826" fg:w="1"/><text x="66.2772%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="66.1071%" y="517" width="0.0799%" height="15" fill="rgb(235,103,47)" fg:x="827" fg:w="1"/><text x="66.3571%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="66.1071%" y="501" width="0.0799%" height="15" fill="rgb(222,63,28)" fg:x="827" fg:w="1"/><text x="66.3571%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.1071%" y="485" width="0.0799%" height="15" fill="rgb(244,137,21)" fg:x="827" fg:w="1"/><text x="66.3571%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.1071%" y="469" width="0.0799%" height="15" fill="rgb(228,35,27)" fg:x="827" fg:w="1"/><text x="66.3571%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.1071%" y="453" width="0.0799%" height="15" fill="rgb(226,191,41)" fg:x="827" fg:w="1"/><text x="66.3571%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.3469%" y="437" width="0.0799%" height="15" fill="rgb(210,154,3)" fg:x="830" fg:w="1"/><text x="66.5969%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="66.2670%" y="453" width="0.2398%" height="15" fill="rgb(216,60,49)" fg:x="829" fg:w="3"/><text x="66.5170%" y="463.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="66.4269%" y="437" width="0.0799%" height="15" fill="rgb(226,17,20)" fg:x="831" fg:w="1"/><text x="66.6769%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.5068%" y="453" width="0.0799%" height="15" fill="rgb(206,115,35)" fg:x="832" fg:w="1"/><text x="66.7568%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.5068%" y="437" width="0.0799%" height="15" fill="rgb(227,88,1)" fg:x="832" fg:w="1"/><text x="66.7568%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="66.5068%" y="421" width="0.0799%" height="15" fill="rgb(230,222,24)" fg:x="832" fg:w="1"/><text x="66.7568%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.5867%" y="453" width="0.0799%" height="15" fill="rgb(214,124,32)" fg:x="833" fg:w="1"/><text x="66.8367%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.5867%" y="437" width="0.0799%" height="15" fill="rgb(240,41,36)" fg:x="833" fg:w="1"/><text x="66.8367%" y="447.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (40 samples, 3.20%)</title><rect x="63.5492%" y="565" width="3.1974%" height="15" fill="rgb(221,17,52)" fg:x="795" fg:w="40"/><text x="63.7992%" y="575.50">&lt;&amp;k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (23 samples, 1.84%)</title><rect x="64.9081%" y="549" width="1.8385%" height="15" fill="rgb(252,70,16)" fg:x="812" fg:w="23"/><text x="65.1581%" y="559.50">&lt;..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (22 samples, 1.76%)</title><rect x="64.9880%" y="533" width="1.7586%" height="15" fill="rgb(250,177,4)" fg:x="813" fg:w="22"/><text x="65.2380%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="66.1871%" y="517" width="0.5596%" height="15" fill="rgb(240,188,47)" fg:x="828" fg:w="7"/><text x="66.4371%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="66.1871%" y="501" width="0.5596%" height="15" fill="rgb(215,92,12)" fg:x="828" fg:w="7"/><text x="66.4371%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="66.1871%" y="485" width="0.5596%" height="15" fill="rgb(242,110,29)" fg:x="828" fg:w="7"/><text x="66.4371%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="66.1871%" y="469" width="0.5596%" height="15" fill="rgb(208,211,26)" fg:x="828" fg:w="7"/><text x="66.4371%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.6667%" y="453" width="0.0799%" height="15" fill="rgb(244,147,6)" fg:x="834" fg:w="1"/><text x="66.9167%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.6667%" y="437" width="0.0799%" height="15" fill="rgb(211,130,42)" fg:x="834" fg:w="1"/><text x="66.9167%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.6667%" y="421" width="0.0799%" height="15" fill="rgb(220,63,1)" fg:x="834" fg:w="1"/><text x="66.9167%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.6667%" y="405" width="0.0799%" height="15" fill="rgb(241,212,30)" fg:x="834" fg:w="1"/><text x="66.9167%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="66.8265%" y="533" width="0.0799%" height="15" fill="rgb(233,153,17)" fg:x="836" fg:w="1"/><text x="67.0765%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="66.8265%" y="517" width="0.0799%" height="15" fill="rgb(236,3,10)" fg:x="836" fg:w="1"/><text x="67.0765%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="66.9065%" y="533" width="0.1599%" height="15" fill="rgb(232,41,21)" fg:x="837" fg:w="2"/><text x="67.1565%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9864%" y="517" width="0.0799%" height="15" fill="rgb(206,63,51)" fg:x="838" fg:w="1"/><text x="67.2364%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9864%" y="501" width="0.0799%" height="15" fill="rgb(250,214,3)" fg:x="838" fg:w="1"/><text x="67.2364%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.9864%" y="485" width="0.0799%" height="15" fill="rgb(254,89,27)" fg:x="838" fg:w="1"/><text x="67.2364%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.9864%" y="469" width="0.0799%" height="15" fill="rgb(249,41,14)" fg:x="838" fg:w="1"/><text x="67.2364%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.9864%" y="453" width="0.0799%" height="15" fill="rgb(221,196,51)" fg:x="838" fg:w="1"/><text x="67.2364%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9864%" y="437" width="0.0799%" height="15" fill="rgb(214,116,26)" fg:x="838" fg:w="1"/><text x="67.2364%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9864%" y="421" width="0.0799%" height="15" fill="rgb(236,67,7)" fg:x="838" fg:w="1"/><text x="67.2364%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.9864%" y="405" width="0.0799%" height="15" fill="rgb(253,179,32)" fg:x="838" fg:w="1"/><text x="67.2364%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.9864%" y="389" width="0.0799%" height="15" fill="rgb(218,33,15)" fg:x="838" fg:w="1"/><text x="67.2364%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.9864%" y="373" width="0.0799%" height="15" fill="rgb(217,202,41)" fg:x="838" fg:w="1"/><text x="67.2364%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.9864%" y="357" width="0.0799%" height="15" fill="rgb(234,133,5)" fg:x="838" fg:w="1"/><text x="67.2364%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="67.0663%" y="325" width="0.0799%" height="15" fill="rgb(240,47,40)" fg:x="839" fg:w="1"/><text x="67.3163%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="67.0663%" y="309" width="0.0799%" height="15" fill="rgb(234,166,26)" fg:x="839" fg:w="1"/><text x="67.3163%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="67.0663%" y="293" width="0.0799%" height="15" fill="rgb(244,125,51)" fg:x="839" fg:w="1"/><text x="67.3163%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="67.0663%" y="277" width="0.0799%" height="15" fill="rgb(229,171,11)" fg:x="839" fg:w="1"/><text x="67.3163%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.0663%" y="261" width="0.0799%" height="15" fill="rgb(224,38,45)" fg:x="839" fg:w="1"/><text x="67.3163%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.0663%" y="245" width="0.0799%" height="15" fill="rgb(237,27,7)" fg:x="839" fg:w="1"/><text x="67.3163%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="67.0663%" y="229" width="0.0799%" height="15" fill="rgb(216,52,7)" fg:x="839" fg:w="1"/><text x="67.3163%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="67.0663%" y="213" width="0.0799%" height="15" fill="rgb(243,11,11)" fg:x="839" fg:w="1"/><text x="67.3163%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="67.0663%" y="197" width="0.0799%" height="15" fill="rgb(253,167,20)" fg:x="839" fg:w="1"/><text x="67.3163%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="67.0663%" y="181" width="0.0799%" height="15" fill="rgb(215,207,5)" fg:x="839" fg:w="1"/><text x="67.3163%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="67.0663%" y="165" width="0.0799%" height="15" fill="rgb(252,127,31)" fg:x="839" fg:w="1"/><text x="67.3163%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="67.0663%" y="149" width="0.0799%" height="15" fill="rgb(209,106,27)" fg:x="839" fg:w="1"/><text x="67.3163%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.0663%" y="133" width="0.0799%" height="15" fill="rgb(214,220,18)" fg:x="839" fg:w="1"/><text x="67.3163%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="67.0663%" y="117" width="0.0799%" height="15" fill="rgb(237,89,12)" fg:x="839" fg:w="1"/><text x="67.3163%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="67.0663%" y="101" width="0.0799%" height="15" fill="rgb(209,167,36)" fg:x="839" fg:w="1"/><text x="67.3163%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="67.0663%" y="85" width="0.0799%" height="15" fill="rgb(243,45,22)" fg:x="839" fg:w="1"/><text x="67.3163%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="67.0663%" y="69" width="0.0799%" height="15" fill="rgb(239,2,46)" fg:x="839" fg:w="1"/><text x="67.3163%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="67.0663%" y="53" width="0.0799%" height="15" fill="rgb(241,101,0)" fg:x="839" fg:w="1"/><text x="67.3163%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="67.0663%" y="37" width="0.0799%" height="15" fill="rgb(244,34,31)" fg:x="839" fg:w="1"/><text x="67.3163%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (6 samples, 0.48%)</title><rect x="66.7466%" y="565" width="0.4796%" height="15" fill="rgb(248,23,22)" fg:x="835" fg:w="6"/><text x="66.9966%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (6 samples, 0.48%)</title><rect x="66.7466%" y="549" width="0.4796%" height="15" fill="rgb(218,27,48)" fg:x="835" fg:w="6"/><text x="66.9966%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="67.0663%" y="533" width="0.1599%" height="15" fill="rgb(232,78,1)" fg:x="839" fg:w="2"/><text x="67.3163%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="67.0663%" y="517" width="0.1599%" height="15" fill="rgb(233,169,12)" fg:x="839" fg:w="2"/><text x="67.3163%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="67.0663%" y="501" width="0.1599%" height="15" fill="rgb(225,222,54)" fg:x="839" fg:w="2"/><text x="67.3163%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="67.0663%" y="485" width="0.1599%" height="15" fill="rgb(245,126,29)" fg:x="839" fg:w="2"/><text x="67.3163%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="67.0663%" y="469" width="0.1599%" height="15" fill="rgb(241,63,48)" fg:x="839" fg:w="2"/><text x="67.3163%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="67.0663%" y="453" width="0.1599%" height="15" fill="rgb(235,126,38)" fg:x="839" fg:w="2"/><text x="67.3163%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="67.0663%" y="437" width="0.1599%" height="15" fill="rgb(232,96,49)" fg:x="839" fg:w="2"/><text x="67.3163%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="67.0663%" y="421" width="0.1599%" height="15" fill="rgb(211,146,40)" fg:x="839" fg:w="2"/><text x="67.3163%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="67.0663%" y="405" width="0.1599%" height="15" fill="rgb(247,93,44)" fg:x="839" fg:w="2"/><text x="67.3163%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="67.0663%" y="389" width="0.1599%" height="15" fill="rgb(251,41,49)" fg:x="839" fg:w="2"/><text x="67.3163%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="67.0663%" y="373" width="0.1599%" height="15" fill="rgb(218,155,12)" fg:x="839" fg:w="2"/><text x="67.3163%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="67.0663%" y="357" width="0.1599%" height="15" fill="rgb(221,161,30)" fg:x="839" fg:w="2"/><text x="67.3163%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="67.0663%" y="341" width="0.1599%" height="15" fill="rgb(221,179,11)" fg:x="839" fg:w="2"/><text x="67.3163%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.1463%" y="325" width="0.0799%" height="15" fill="rgb(224,170,48)" fg:x="840" fg:w="1"/><text x="67.3963%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.1463%" y="309" width="0.0799%" height="15" fill="rgb(223,117,5)" fg:x="840" fg:w="1"/><text x="67.3963%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="67.1463%" y="293" width="0.0799%" height="15" fill="rgb(209,52,20)" fg:x="840" fg:w="1"/><text x="67.3963%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="67.1463%" y="277" width="0.0799%" height="15" fill="rgb(209,19,41)" fg:x="840" fg:w="1"/><text x="67.3963%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="67.1463%" y="261" width="0.0799%" height="15" fill="rgb(210,177,12)" fg:x="840" fg:w="1"/><text x="67.3963%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="67.1463%" y="245" width="0.0799%" height="15" fill="rgb(211,159,37)" fg:x="840" fg:w="1"/><text x="67.3963%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="67.1463%" y="229" width="0.0799%" height="15" fill="rgb(209,20,2)" fg:x="840" fg:w="1"/><text x="67.3963%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="67.1463%" y="213" width="0.0799%" height="15" fill="rgb(244,3,46)" fg:x="840" fg:w="1"/><text x="67.3963%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.1463%" y="197" width="0.0799%" height="15" fill="rgb(220,94,38)" fg:x="840" fg:w="1"/><text x="67.3963%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="67.1463%" y="181" width="0.0799%" height="15" fill="rgb(253,14,31)" fg:x="840" fg:w="1"/><text x="67.3963%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="67.1463%" y="165" width="0.0799%" height="15" fill="rgb(234,176,13)" fg:x="840" fg:w="1"/><text x="67.3963%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="67.1463%" y="149" width="0.0799%" height="15" fill="rgb(218,62,25)" fg:x="840" fg:w="1"/><text x="67.3963%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="67.1463%" y="133" width="0.0799%" height="15" fill="rgb(216,124,40)" fg:x="840" fg:w="1"/><text x="67.3963%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="67.1463%" y="117" width="0.0799%" height="15" fill="rgb(228,170,12)" fg:x="840" fg:w="1"/><text x="67.3963%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="67.1463%" y="101" width="0.0799%" height="15" fill="rgb(231,226,5)" fg:x="840" fg:w="1"/><text x="67.3963%" y="111.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.2262%" y="565" width="0.1599%" height="15" fill="rgb(237,122,22)" fg:x="841" fg:w="2"/><text x="67.4762%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="67.3861%" y="565" width="0.0799%" height="15" fill="rgb(209,185,25)" fg:x="843" fg:w="1"/><text x="67.6361%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="67.3861%" y="549" width="0.0799%" height="15" fill="rgb(228,200,32)" fg:x="843" fg:w="1"/><text x="67.6361%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3861%" y="533" width="0.0799%" height="15" fill="rgb(217,140,10)" fg:x="843" fg:w="1"/><text x="67.6361%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4660%" y="549" width="0.0799%" height="15" fill="rgb(253,17,24)" fg:x="844" fg:w="1"/><text x="67.7160%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="67.4660%" y="565" width="0.1599%" height="15" fill="rgb(212,61,6)" fg:x="844" fg:w="2"/><text x="67.7160%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="67.5460%" y="549" width="0.0799%" height="15" fill="rgb(205,14,25)" fg:x="845" fg:w="1"/><text x="67.7960%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.5460%" y="533" width="0.0799%" height="15" fill="rgb(232,69,41)" fg:x="845" fg:w="1"/><text x="67.7960%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="67.7058%" y="549" width="0.0799%" height="15" fill="rgb(241,106,47)" fg:x="847" fg:w="1"/><text x="67.9558%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.1055%" y="501" width="0.0799%" height="15" fill="rgb(210,213,53)" fg:x="852" fg:w="1"/><text x="68.3555%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3453%" y="389" width="0.0799%" height="15" fill="rgb(253,175,27)" fg:x="855" fg:w="1"/><text x="68.5953%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3453%" y="373" width="0.0799%" height="15" fill="rgb(211,171,24)" fg:x="855" fg:w="1"/><text x="68.5953%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.3453%" y="357" width="0.0799%" height="15" fill="rgb(229,80,7)" fg:x="855" fg:w="1"/><text x="68.5953%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.3453%" y="341" width="0.0799%" height="15" fill="rgb(212,46,39)" fg:x="855" fg:w="1"/><text x="68.5953%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.3453%" y="325" width="0.0799%" height="15" fill="rgb(240,80,45)" fg:x="855" fg:w="1"/><text x="68.5953%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.3453%" y="309" width="0.0799%" height="15" fill="rgb(253,177,40)" fg:x="855" fg:w="1"/><text x="68.5953%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3453%" y="293" width="0.0799%" height="15" fill="rgb(249,200,15)" fg:x="855" fg:w="1"/><text x="68.5953%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.3453%" y="469" width="0.1599%" height="15" fill="rgb(217,78,26)" fg:x="855" fg:w="2"/><text x="68.5953%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.3453%" y="453" width="0.1599%" height="15" fill="rgb(254,151,32)" fg:x="855" fg:w="2"/><text x="68.5953%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="68.3453%" y="437" width="0.1599%" height="15" fill="rgb(226,165,27)" fg:x="855" fg:w="2"/><text x="68.5953%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="68.3453%" y="421" width="0.1599%" height="15" fill="rgb(250,206,4)" fg:x="855" fg:w="2"/><text x="68.5953%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="68.3453%" y="405" width="0.1599%" height="15" fill="rgb(231,229,27)" fg:x="855" fg:w="2"/><text x="68.5953%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.4253%" y="389" width="0.0799%" height="15" fill="rgb(239,217,8)" fg:x="856" fg:w="1"/><text x="68.6753%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.4253%" y="373" width="0.0799%" height="15" fill="rgb(225,204,27)" fg:x="856" fg:w="1"/><text x="68.6753%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (8 samples, 0.64%)</title><rect x="67.9456%" y="533" width="0.6395%" height="15" fill="rgb(230,56,32)" fg:x="850" fg:w="8"/><text x="68.1956%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="67.9456%" y="517" width="0.6395%" height="15" fill="rgb(222,56,27)" fg:x="850" fg:w="8"/><text x="68.1956%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="68.1855%" y="501" width="0.3997%" height="15" fill="rgb(253,108,27)" fg:x="853" fg:w="5"/><text x="68.4355%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="68.1855%" y="485" width="0.3997%" height="15" fill="rgb(212,87,36)" fg:x="853" fg:w="5"/><text x="68.4355%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="68.5052%" y="469" width="0.0799%" height="15" fill="rgb(247,82,36)" fg:x="857" fg:w="1"/><text x="68.7552%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="68.5052%" y="453" width="0.0799%" height="15" fill="rgb(222,143,9)" fg:x="857" fg:w="1"/><text x="68.7552%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="68.7450%" y="453" width="0.1599%" height="15" fill="rgb(238,162,48)" fg:x="860" fg:w="2"/><text x="68.9950%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8249%" y="437" width="0.0799%" height="15" fill="rgb(221,59,43)" fg:x="861" fg:w="1"/><text x="69.0749%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8249%" y="421" width="0.0799%" height="15" fill="rgb(205,166,41)" fg:x="861" fg:w="1"/><text x="69.0749%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.8249%" y="405" width="0.0799%" height="15" fill="rgb(241,186,40)" fg:x="861" fg:w="1"/><text x="69.0749%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.8249%" y="389" width="0.0799%" height="15" fill="rgb(216,119,35)" fg:x="861" fg:w="1"/><text x="69.0749%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.8249%" y="373" width="0.0799%" height="15" fill="rgb(208,68,38)" fg:x="861" fg:w="1"/><text x="69.0749%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.8249%" y="357" width="0.0799%" height="15" fill="rgb(217,113,1)" fg:x="861" fg:w="1"/><text x="69.0749%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.8249%" y="341" width="0.0799%" height="15" fill="rgb(242,153,3)" fg:x="861" fg:w="1"/><text x="69.0749%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.8249%" y="325" width="0.0799%" height="15" fill="rgb(229,76,35)" fg:x="861" fg:w="1"/><text x="69.0749%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.8249%" y="309" width="0.0799%" height="15" fill="rgb(229,125,34)" fg:x="861" fg:w="1"/><text x="69.0749%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.8249%" y="293" width="0.0799%" height="15" fill="rgb(238,179,36)" fg:x="861" fg:w="1"/><text x="69.0749%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.8249%" y="277" width="0.0799%" height="15" fill="rgb(244,183,19)" fg:x="861" fg:w="1"/><text x="69.0749%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8249%" y="261" width="0.0799%" height="15" fill="rgb(216,85,49)" fg:x="861" fg:w="1"/><text x="69.0749%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="68.9049%" y="405" width="0.1599%" height="15" fill="rgb(208,161,47)" fg:x="862" fg:w="2"/><text x="69.1549%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.9848%" y="389" width="0.0799%" height="15" fill="rgb(233,210,18)" fg:x="863" fg:w="1"/><text x="69.2348%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.9848%" y="373" width="0.0799%" height="15" fill="rgb(205,104,42)" fg:x="863" fg:w="1"/><text x="69.2348%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.9848%" y="357" width="0.0799%" height="15" fill="rgb(248,90,43)" fg:x="863" fg:w="1"/><text x="69.2348%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.9848%" y="341" width="0.0799%" height="15" fill="rgb(206,198,11)" fg:x="863" fg:w="1"/><text x="69.2348%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.9848%" y="325" width="0.0799%" height="15" fill="rgb(239,165,27)" fg:x="863" fg:w="1"/><text x="69.2348%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.9848%" y="309" width="0.0799%" height="15" fill="rgb(246,44,32)" fg:x="863" fg:w="1"/><text x="69.2348%" y="319.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="68.9049%" y="437" width="0.2398%" height="15" fill="rgb(252,65,42)" fg:x="862" fg:w="3"/><text x="69.1549%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="68.9049%" y="421" width="0.2398%" height="15" fill="rgb(246,197,18)" fg:x="862" fg:w="3"/><text x="69.1549%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="69.0647%" y="405" width="0.0799%" height="15" fill="rgb(216,192,4)" fg:x="864" fg:w="1"/><text x="69.3147%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.0647%" y="389" width="0.0799%" height="15" fill="rgb(208,117,10)" fg:x="864" fg:w="1"/><text x="69.3147%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.0647%" y="373" width="0.0799%" height="15" fill="rgb(240,61,47)" fg:x="864" fg:w="1"/><text x="69.3147%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.0647%" y="357" width="0.0799%" height="15" fill="rgb(228,178,21)" fg:x="864" fg:w="1"/><text x="69.3147%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="69.0647%" y="341" width="0.0799%" height="15" fill="rgb(219,96,54)" fg:x="864" fg:w="1"/><text x="69.3147%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.0647%" y="325" width="0.0799%" height="15" fill="rgb(250,177,24)" fg:x="864" fg:w="1"/><text x="69.3147%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.0647%" y="309" width="0.0799%" height="15" fill="rgb(242,154,46)" fg:x="864" fg:w="1"/><text x="69.3147%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.1447%" y="373" width="0.0799%" height="15" fill="rgb(226,176,29)" fg:x="865" fg:w="1"/><text x="69.3947%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.2246%" y="373" width="0.1599%" height="15" fill="rgb(226,29,2)" fg:x="866" fg:w="2"/><text x="69.4746%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.4644%" y="277" width="0.0799%" height="15" fill="rgb(237,104,14)" fg:x="869" fg:w="1"/><text x="69.7144%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="69.4644%" y="261" width="0.0799%" height="15" fill="rgb(245,207,31)" fg:x="869" fg:w="1"/><text x="69.7144%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5444%" y="277" width="0.0799%" height="15" fill="rgb(229,211,45)" fg:x="870" fg:w="1"/><text x="69.7944%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5444%" y="261" width="0.0799%" height="15" fill="rgb(229,113,15)" fg:x="870" fg:w="1"/><text x="69.7944%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="69.6243%" y="261" width="0.1599%" height="15" fill="rgb(237,147,15)" fg:x="871" fg:w="2"/><text x="69.8743%" y="271.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="69.1447%" y="421" width="0.7194%" height="15" fill="rgb(244,120,12)" fg:x="865" fg:w="9"/><text x="69.3947%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="69.1447%" y="405" width="0.7194%" height="15" fill="rgb(205,120,12)" fg:x="865" fg:w="9"/><text x="69.3947%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="69.1447%" y="389" width="0.7194%" height="15" fill="rgb(231,26,45)" fg:x="865" fg:w="9"/><text x="69.3947%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="69.3845%" y="373" width="0.4796%" height="15" fill="rgb(246,98,1)" fg:x="868" fg:w="6"/><text x="69.6345%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="69.3845%" y="357" width="0.4796%" height="15" fill="rgb(207,68,45)" fg:x="868" fg:w="6"/><text x="69.6345%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="69.3845%" y="341" width="0.4796%" height="15" fill="rgb(231,27,38)" fg:x="868" fg:w="6"/><text x="69.6345%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="69.3845%" y="325" width="0.4796%" height="15" fill="rgb(214,223,3)" fg:x="868" fg:w="6"/><text x="69.6345%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="69.3845%" y="309" width="0.4796%" height="15" fill="rgb(228,195,46)" fg:x="868" fg:w="6"/><text x="69.6345%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="69.3845%" y="293" width="0.4796%" height="15" fill="rgb(231,100,42)" fg:x="868" fg:w="6"/><text x="69.6345%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="69.6243%" y="277" width="0.2398%" height="15" fill="rgb(236,53,4)" fg:x="871" fg:w="3"/><text x="69.8743%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.7842%" y="261" width="0.0799%" height="15" fill="rgb(230,152,12)" fg:x="873" fg:w="1"/><text x="70.0342%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="69.8641%" y="389" width="0.0799%" height="15" fill="rgb(226,101,19)" fg:x="874" fg:w="1"/><text x="70.1141%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.9440%" y="357" width="0.0799%" height="15" fill="rgb(250,149,32)" fg:x="875" fg:w="1"/><text x="70.1940%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.0240%" y="341" width="0.0799%" height="15" fill="rgb(232,178,12)" fg:x="876" fg:w="1"/><text x="70.2740%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.0240%" y="325" width="0.0799%" height="15" fill="rgb(246,151,17)" fg:x="876" fg:w="1"/><text x="70.2740%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.0240%" y="309" width="0.0799%" height="15" fill="rgb(252,17,51)" fg:x="876" fg:w="1"/><text x="70.2740%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.0240%" y="293" width="0.0799%" height="15" fill="rgb(250,207,23)" fg:x="876" fg:w="1"/><text x="70.2740%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="70.0240%" y="277" width="0.0799%" height="15" fill="rgb(205,27,5)" fg:x="876" fg:w="1"/><text x="70.2740%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1039%" y="293" width="0.0799%" height="15" fill="rgb(224,32,19)" fg:x="877" fg:w="1"/><text x="70.3539%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="70.1039%" y="341" width="0.1599%" height="15" fill="rgb(247,214,40)" fg:x="877" fg:w="2"/><text x="70.3539%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="70.1039%" y="325" width="0.1599%" height="15" fill="rgb(239,199,17)" fg:x="877" fg:w="2"/><text x="70.3539%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="70.1039%" y="309" width="0.1599%" height="15" fill="rgb(251,159,9)" fg:x="877" fg:w="2"/><text x="70.3539%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.1839%" y="293" width="0.0799%" height="15" fill="rgb(225,78,32)" fg:x="878" fg:w="1"/><text x="70.4339%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="70.2638%" y="293" width="0.0799%" height="15" fill="rgb(206,97,47)" fg:x="879" fg:w="1"/><text x="70.5138%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="70.2638%" y="277" width="0.0799%" height="15" fill="rgb(227,107,4)" fg:x="879" fg:w="1"/><text x="70.5138%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2638%" y="261" width="0.0799%" height="15" fill="rgb(241,146,50)" fg:x="879" fg:w="1"/><text x="70.5138%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (16 samples, 1.28%)</title><rect x="69.1447%" y="437" width="1.2790%" height="15" fill="rgb(232,92,30)" fg:x="865" fg:w="16"/><text x="69.3947%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="69.8641%" y="421" width="0.5596%" height="15" fill="rgb(222,0,40)" fg:x="874" fg:w="7"/><text x="70.1141%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="69.8641%" y="405" width="0.5596%" height="15" fill="rgb(219,54,33)" fg:x="874" fg:w="7"/><text x="70.1141%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="69.9440%" y="389" width="0.4796%" height="15" fill="rgb(226,209,28)" fg:x="875" fg:w="6"/><text x="70.1940%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="69.9440%" y="373" width="0.4796%" height="15" fill="rgb(254,205,35)" fg:x="875" fg:w="6"/><text x="70.1940%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="70.0240%" y="357" width="0.3997%" height="15" fill="rgb(230,159,3)" fg:x="876" fg:w="5"/><text x="70.2740%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.2638%" y="341" width="0.1599%" height="15" fill="rgb(232,190,24)" fg:x="879" fg:w="2"/><text x="70.5138%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.2638%" y="325" width="0.1599%" height="15" fill="rgb(217,227,44)" fg:x="879" fg:w="2"/><text x="70.5138%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="70.2638%" y="309" width="0.1599%" height="15" fill="rgb(236,211,1)" fg:x="879" fg:w="2"/><text x="70.5138%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.3437%" y="293" width="0.0799%" height="15" fill="rgb(250,127,46)" fg:x="880" fg:w="1"/><text x="70.5937%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.3437%" y="277" width="0.0799%" height="15" fill="rgb(229,213,6)" fg:x="880" fg:w="1"/><text x="70.5937%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="70.3437%" y="261" width="0.0799%" height="15" fill="rgb(237,15,36)" fg:x="880" fg:w="1"/><text x="70.5937%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.3437%" y="245" width="0.0799%" height="15" fill="rgb(213,131,41)" fg:x="880" fg:w="1"/><text x="70.5937%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.3437%" y="229" width="0.0799%" height="15" fill="rgb(225,82,44)" fg:x="880" fg:w="1"/><text x="70.5937%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="70.3437%" y="213" width="0.0799%" height="15" fill="rgb(249,42,11)" fg:x="880" fg:w="1"/><text x="70.5937%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.4237%" y="373" width="0.0799%" height="15" fill="rgb(253,11,29)" fg:x="881" fg:w="1"/><text x="70.6737%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (24 samples, 1.92%)</title><rect x="68.9049%" y="453" width="1.9185%" height="15" fill="rgb(206,8,54)" fg:x="862" fg:w="24"/><text x="69.1549%" y="463.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (5 samples, 0.40%)</title><rect x="70.4237%" y="437" width="0.3997%" height="15" fill="rgb(222,186,2)" fg:x="881" fg:w="5"/><text x="70.6737%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="70.4237%" y="421" width="0.3997%" height="15" fill="rgb(221,206,53)" fg:x="881" fg:w="5"/><text x="70.6737%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.40%)</title><rect x="70.4237%" y="405" width="0.3997%" height="15" fill="rgb(230,150,21)" fg:x="881" fg:w="5"/><text x="70.6737%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="70.4237%" y="389" width="0.3997%" height="15" fill="rgb(253,202,10)" fg:x="881" fg:w="5"/><text x="70.6737%" y="399.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="70.5036%" y="373" width="0.3197%" height="15" fill="rgb(238,109,40)" fg:x="882" fg:w="4"/><text x="70.7536%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (29 samples, 2.32%)</title><rect x="68.5851%" y="517" width="2.3181%" height="15" fill="rgb(247,120,22)" fg:x="858" fg:w="29"/><text x="68.8351%" y="527.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 2.32%)</title><rect x="68.5851%" y="501" width="2.3181%" height="15" fill="rgb(207,43,30)" fg:x="858" fg:w="29"/><text x="68.8351%" y="511.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (27 samples, 2.16%)</title><rect x="68.7450%" y="485" width="2.1583%" height="15" fill="rgb(213,211,24)" fg:x="860" fg:w="27"/><text x="68.9950%" y="495.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (27 samples, 2.16%)</title><rect x="68.7450%" y="469" width="2.1583%" height="15" fill="rgb(239,73,39)" fg:x="860" fg:w="27"/><text x="68.9950%" y="479.50">&lt;..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="70.8233%" y="453" width="0.0799%" height="15" fill="rgb(245,182,19)" fg:x="886" fg:w="1"/><text x="71.0733%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (30 samples, 2.40%)</title><rect x="68.5851%" y="533" width="2.3981%" height="15" fill="rgb(247,143,26)" fg:x="858" fg:w="30"/><text x="68.8351%" y="543.50">&lt;p..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="70.9033%" y="517" width="0.0799%" height="15" fill="rgb(228,191,23)" fg:x="887" fg:w="1"/><text x="71.1533%" y="527.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="70.9832%" y="533" width="0.0799%" height="15" fill="rgb(253,165,31)" fg:x="888" fg:w="1"/><text x="71.2332%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.9832%" y="517" width="0.0799%" height="15" fill="rgb(234,138,20)" fg:x="888" fg:w="1"/><text x="71.2332%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="70.9832%" y="501" width="0.0799%" height="15" fill="rgb(218,191,29)" fg:x="888" fg:w="1"/><text x="71.2332%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="70.9832%" y="485" width="0.0799%" height="15" fill="rgb(221,157,19)" fg:x="888" fg:w="1"/><text x="71.2332%" y="495.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="70.9832%" y="469" width="0.0799%" height="15" fill="rgb(237,26,42)" fg:x="888" fg:w="1"/><text x="71.2332%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9832%" y="453" width="0.0799%" height="15" fill="rgb(220,163,24)" fg:x="888" fg:w="1"/><text x="71.2332%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9832%" y="437" width="0.0799%" height="15" fill="rgb(242,115,20)" fg:x="888" fg:w="1"/><text x="71.2332%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.9832%" y="421" width="0.0799%" height="15" fill="rgb(210,206,9)" fg:x="888" fg:w="1"/><text x="71.2332%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.9832%" y="405" width="0.0799%" height="15" fill="rgb(208,71,17)" fg:x="888" fg:w="1"/><text x="71.2332%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.9832%" y="389" width="0.0799%" height="15" fill="rgb(233,7,5)" fg:x="888" fg:w="1"/><text x="71.2332%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.9832%" y="373" width="0.0799%" height="15" fill="rgb(207,92,33)" fg:x="888" fg:w="1"/><text x="71.2332%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.9832%" y="357" width="0.0799%" height="15" fill="rgb(218,87,9)" fg:x="888" fg:w="1"/><text x="71.2332%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.9832%" y="341" width="0.0799%" height="15" fill="rgb(219,47,37)" fg:x="888" fg:w="1"/><text x="71.2332%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.9832%" y="325" width="0.0799%" height="15" fill="rgb(221,152,34)" fg:x="888" fg:w="1"/><text x="71.2332%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.9832%" y="309" width="0.0799%" height="15" fill="rgb(235,176,21)" fg:x="888" fg:w="1"/><text x="71.2332%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.9832%" y="293" width="0.0799%" height="15" fill="rgb(232,212,21)" fg:x="888" fg:w="1"/><text x="71.2332%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9832%" y="277" width="0.0799%" height="15" fill="rgb(245,82,39)" fg:x="888" fg:w="1"/><text x="71.2332%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.1431%" y="501" width="0.0799%" height="15" fill="rgb(241,52,51)" fg:x="890" fg:w="1"/><text x="71.3931%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.2230%" y="501" width="0.0799%" height="15" fill="rgb(219,91,24)" fg:x="891" fg:w="1"/><text x="71.4730%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.2230%" y="485" width="0.0799%" height="15" fill="rgb(241,142,12)" fg:x="891" fg:w="1"/><text x="71.4730%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.3829%" y="469" width="0.0799%" height="15" fill="rgb(230,27,9)" fg:x="893" fg:w="1"/><text x="71.6329%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4628%" y="469" width="0.0799%" height="15" fill="rgb(249,181,32)" fg:x="894" fg:w="1"/><text x="71.7128%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (4 samples, 0.32%)</title><rect x="71.3030%" y="501" width="0.3197%" height="15" fill="rgb(230,107,3)" fg:x="892" fg:w="4"/><text x="71.5530%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="71.3030%" y="485" width="0.3197%" height="15" fill="rgb(246,204,14)" fg:x="892" fg:w="4"/><text x="71.5530%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.5428%" y="469" width="0.0799%" height="15" fill="rgb(213,192,47)" fg:x="895" fg:w="1"/><text x="71.7928%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.6227%" y="453" width="0.0799%" height="15" fill="rgb(240,44,36)" fg:x="896" fg:w="1"/><text x="71.8727%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.7826%" y="421" width="0.0799%" height="15" fill="rgb(244,209,38)" fg:x="898" fg:w="1"/><text x="72.0326%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7826%" y="405" width="0.0799%" height="15" fill="rgb(219,34,37)" fg:x="898" fg:w="1"/><text x="72.0326%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (199 samples, 15.91%)</title><rect x="56.0352%" y="773" width="15.9073%" height="15" fill="rgb(210,28,6)" fg:x="701" fg:w="199"/><text x="56.2852%" y="783.50">&lt;engine::session::Sessio..</text></g><g><title>kernel::plugins::mw::apply_middleware (197 samples, 15.75%)</title><rect x="56.1950%" y="757" width="15.7474%" height="15" fill="rgb(244,110,52)" fg:x="703" fg:w="197"/><text x="56.4450%" y="767.50">kernel::plugins::mw::app..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (197 samples, 15.75%)</title><rect x="56.1950%" y="741" width="15.7474%" height="15" fill="rgb(254,124,47)" fg:x="703" fg:w="197"/><text x="56.4450%" y="751.50">kernel::plugins::mw::Mid..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (197 samples, 15.75%)</title><rect x="56.1950%" y="725" width="15.7474%" height="15" fill="rgb(254,110,13)" fg:x="703" fg:w="197"/><text x="56.4450%" y="735.50">&lt;engine::session::Expand..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (114 samples, 9.11%)</title><rect x="62.8297%" y="709" width="9.1127%" height="15" fill="rgb(252,57,21)" fg:x="786" fg:w="114"/><text x="63.0797%" y="719.50">kernel::plugi..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (114 samples, 9.11%)</title><rect x="62.8297%" y="693" width="9.1127%" height="15" fill="rgb(242,60,45)" fg:x="786" fg:w="114"/><text x="63.0797%" y="703.50">&lt;plugins_dynl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (114 samples, 9.11%)</title><rect x="62.8297%" y="677" width="9.1127%" height="15" fill="rgb(234,49,30)" fg:x="786" fg:w="114"/><text x="63.0797%" y="687.50">kernel::plugi..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (113 samples, 9.03%)</title><rect x="62.9097%" y="661" width="9.0328%" height="15" fill="rgb(218,98,6)" fg:x="787" fg:w="113"/><text x="63.1597%" y="671.50">core::ops::fu..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (112 samples, 8.95%)</title><rect x="62.9896%" y="645" width="8.9528%" height="15" fill="rgb(220,174,29)" fg:x="788" fg:w="112"/><text x="63.2396%" y="655.50">kernel::plugi..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (112 samples, 8.95%)</title><rect x="62.9896%" y="629" width="8.9528%" height="15" fill="rgb(236,163,23)" fg:x="788" fg:w="112"/><text x="63.2396%" y="639.50">core::ops::fu..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (112 samples, 8.95%)</title><rect x="62.9896%" y="613" width="8.9528%" height="15" fill="rgb(242,114,45)" fg:x="788" fg:w="112"/><text x="63.2396%" y="623.50">&lt;engine::sess..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (111 samples, 8.87%)</title><rect x="63.0695%" y="597" width="8.8729%" height="15" fill="rgb(232,10,53)" fg:x="789" fg:w="111"/><text x="63.3195%" y="607.50">&lt;plugins_core..</text></g><g><title>plugins_core::looking::model::new_area_observation (105 samples, 8.39%)</title><rect x="63.5492%" y="581" width="8.3933%" height="15" fill="rgb(245,108,29)" fg:x="795" fg:w="105"/><text x="63.7992%" y="591.50">plugins_core..</text></g><g><title>kernel::model::entry::Entry::scope (54 samples, 4.32%)</title><rect x="67.6259%" y="565" width="4.3165%" height="15" fill="rgb(240,89,53)" fg:x="846" fg:w="54"/><text x="67.8759%" y="575.50">kerne..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (52 samples, 4.16%)</title><rect x="67.7858%" y="549" width="4.1567%" height="15" fill="rgb(226,60,45)" fg:x="848" fg:w="52"/><text x="68.0358%" y="559.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="71.0631%" y="533" width="0.8793%" height="15" fill="rgb(230,41,44)" fg:x="889" fg:w="11"/><text x="71.3131%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="71.0631%" y="517" width="0.8793%" height="15" fill="rgb(230,26,20)" fg:x="889" fg:w="11"/><text x="71.3131%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="71.6227%" y="501" width="0.3197%" height="15" fill="rgb(237,170,32)" fg:x="896" fg:w="4"/><text x="71.8727%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="71.6227%" y="485" width="0.3197%" height="15" fill="rgb(212,35,42)" fg:x="896" fg:w="4"/><text x="71.8727%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="71.6227%" y="469" width="0.3197%" height="15" fill="rgb(227,31,34)" fg:x="896" fg:w="4"/><text x="71.8727%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="71.7026%" y="453" width="0.2398%" height="15" fill="rgb(216,19,18)" fg:x="897" fg:w="3"/><text x="71.9526%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="71.7026%" y="437" width="0.2398%" height="15" fill="rgb(211,133,42)" fg:x="897" fg:w="3"/><text x="71.9526%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="71.8625%" y="421" width="0.0799%" height="15" fill="rgb(244,66,13)" fg:x="899" fg:w="1"/><text x="72.1125%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.0224%" y="693" width="0.0799%" height="15" fill="rgb(218,185,50)" fg:x="901" fg:w="1"/><text x="72.2724%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.0224%" y="677" width="0.0799%" height="15" fill="rgb(219,149,13)" fg:x="901" fg:w="1"/><text x="72.2724%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.0224%" y="661" width="0.0799%" height="15" fill="rgb(221,125,0)" fg:x="901" fg:w="1"/><text x="72.2724%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.0224%" y="645" width="0.0799%" height="15" fill="rgb(247,126,27)" fg:x="901" fg:w="1"/><text x="72.2724%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.0224%" y="629" width="0.0799%" height="15" fill="rgb(250,138,30)" fg:x="901" fg:w="1"/><text x="72.2724%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.0224%" y="613" width="0.0799%" height="15" fill="rgb(230,151,9)" fg:x="901" fg:w="1"/><text x="72.2724%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.0224%" y="597" width="0.0799%" height="15" fill="rgb(233,80,38)" fg:x="901" fg:w="1"/><text x="72.2724%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="72.1023%" y="693" width="0.1599%" height="15" fill="rgb(232,68,43)" fg:x="902" fg:w="2"/><text x="72.3523%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="72.1023%" y="677" width="0.1599%" height="15" fill="rgb(254,5,50)" fg:x="902" fg:w="2"/><text x="72.3523%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1823%" y="661" width="0.0799%" height="15" fill="rgb(225,45,5)" fg:x="903" fg:w="1"/><text x="72.4323%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.3421%" y="661" width="0.0799%" height="15" fill="rgb(239,22,3)" fg:x="905" fg:w="1"/><text x="72.5921%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.3421%" y="645" width="0.0799%" height="15" fill="rgb(243,129,0)" fg:x="905" fg:w="1"/><text x="72.5921%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.3421%" y="629" width="0.0799%" height="15" fill="rgb(223,164,0)" fg:x="905" fg:w="1"/><text x="72.5921%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.3421%" y="613" width="0.0799%" height="15" fill="rgb(221,46,29)" fg:x="905" fg:w="1"/><text x="72.5921%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.3421%" y="597" width="0.0799%" height="15" fill="rgb(205,97,47)" fg:x="905" fg:w="1"/><text x="72.5921%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.3421%" y="581" width="0.0799%" height="15" fill="rgb(249,14,8)" fg:x="905" fg:w="1"/><text x="72.5921%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.3421%" y="565" width="0.0799%" height="15" fill="rgb(216,77,3)" fg:x="905" fg:w="1"/><text x="72.5921%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.3421%" y="549" width="0.0799%" height="15" fill="rgb(206,168,54)" fg:x="905" fg:w="1"/><text x="72.5921%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.3421%" y="533" width="0.0799%" height="15" fill="rgb(236,3,41)" fg:x="905" fg:w="1"/><text x="72.5921%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.3421%" y="517" width="0.0799%" height="15" fill="rgb(231,132,24)" fg:x="905" fg:w="1"/><text x="72.5921%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.3421%" y="501" width="0.0799%" height="15" fill="rgb(227,221,40)" fg:x="905" fg:w="1"/><text x="72.5921%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.3421%" y="485" width="0.0799%" height="15" fill="rgb(233,151,11)" fg:x="905" fg:w="1"/><text x="72.5921%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.3421%" y="469" width="0.0799%" height="15" fill="rgb(247,81,35)" fg:x="905" fg:w="1"/><text x="72.5921%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.3421%" y="453" width="0.0799%" height="15" fill="rgb(243,128,48)" fg:x="905" fg:w="1"/><text x="72.5921%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.3421%" y="437" width="0.0799%" height="15" fill="rgb(253,16,10)" fg:x="905" fg:w="1"/><text x="72.5921%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.4221%" y="629" width="0.0799%" height="15" fill="rgb(228,67,27)" fg:x="906" fg:w="1"/><text x="72.6721%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.56%)</title><rect x="72.0224%" y="725" width="0.5596%" height="15" fill="rgb(231,105,25)" fg:x="901" fg:w="7"/><text x="72.2724%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="72.0224%" y="709" width="0.5596%" height="15" fill="rgb(213,166,47)" fg:x="901" fg:w="7"/><text x="72.2724%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="72.2622%" y="693" width="0.3197%" height="15" fill="rgb(209,27,10)" fg:x="904" fg:w="4"/><text x="72.5122%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="72.2622%" y="677" width="0.3197%" height="15" fill="rgb(241,44,30)" fg:x="904" fg:w="4"/><text x="72.5122%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.4221%" y="661" width="0.1599%" height="15" fill="rgb(223,216,15)" fg:x="906" fg:w="2"/><text x="72.6721%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.4221%" y="645" width="0.1599%" height="15" fill="rgb(227,14,7)" fg:x="906" fg:w="2"/><text x="72.6721%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.5020%" y="629" width="0.0799%" height="15" fill="rgb(237,14,5)" fg:x="907" fg:w="1"/><text x="72.7520%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.5020%" y="613" width="0.0799%" height="15" fill="rgb(232,14,36)" fg:x="907" fg:w="1"/><text x="72.7520%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5020%" y="597" width="0.0799%" height="15" fill="rgb(234,0,38)" fg:x="907" fg:w="1"/><text x="72.7520%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.5020%" y="581" width="0.0799%" height="15" fill="rgb(207,170,14)" fg:x="907" fg:w="1"/><text x="72.7520%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="72.5020%" y="565" width="0.0799%" height="15" fill="rgb(252,45,13)" fg:x="907" fg:w="1"/><text x="72.7520%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.7418%" y="629" width="0.0799%" height="15" fill="rgb(213,142,7)" fg:x="910" fg:w="1"/><text x="72.9918%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="72.7418%" y="613" width="0.0799%" height="15" fill="rgb(216,157,23)" fg:x="910" fg:w="1"/><text x="72.9918%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.8217%" y="629" width="0.1599%" height="15" fill="rgb(212,145,33)" fg:x="911" fg:w="2"/><text x="73.0717%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.8217%" y="613" width="0.1599%" height="15" fill="rgb(233,26,13)" fg:x="911" fg:w="2"/><text x="73.0717%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.9017%" y="597" width="0.0799%" height="15" fill="rgb(219,196,19)" fg:x="912" fg:w="1"/><text x="73.1517%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="73.0616%" y="597" width="0.2398%" height="15" fill="rgb(246,56,21)" fg:x="914" fg:w="3"/><text x="73.3116%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.1415%" y="581" width="0.1599%" height="15" fill="rgb(222,28,53)" fg:x="915" fg:w="2"/><text x="73.3915%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.1415%" y="565" width="0.1599%" height="15" fill="rgb(224,5,27)" fg:x="915" fg:w="2"/><text x="73.3915%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.3014%" y="565" width="0.1599%" height="15" fill="rgb(220,153,33)" fg:x="917" fg:w="2"/><text x="73.5514%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.3014%" y="549" width="0.1599%" height="15" fill="rgb(226,58,19)" fg:x="917" fg:w="2"/><text x="73.5514%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.3813%" y="533" width="0.0799%" height="15" fill="rgb(239,112,23)" fg:x="918" fg:w="1"/><text x="73.6313%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.4612%" y="533" width="0.0799%" height="15" fill="rgb(251,213,20)" fg:x="919" fg:w="1"/><text x="73.7112%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.4612%" y="517" width="0.0799%" height="15" fill="rgb(215,181,21)" fg:x="919" fg:w="1"/><text x="73.7112%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.4612%" y="501" width="0.0799%" height="15" fill="rgb(240,8,35)" fg:x="919" fg:w="1"/><text x="73.7112%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="72.9816%" y="613" width="0.6395%" height="15" fill="rgb(232,203,3)" fg:x="913" fg:w="8"/><text x="73.2316%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="73.3014%" y="597" width="0.3197%" height="15" fill="rgb(214,202,43)" fg:x="917" fg:w="4"/><text x="73.5514%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="73.3014%" y="581" width="0.3197%" height="15" fill="rgb(254,35,11)" fg:x="917" fg:w="4"/><text x="73.5514%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="73.4612%" y="565" width="0.1599%" height="15" fill="rgb(239,173,13)" fg:x="919" fg:w="2"/><text x="73.7112%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.4612%" y="549" width="0.1599%" height="15" fill="rgb(220,141,0)" fg:x="919" fg:w="2"/><text x="73.7112%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.5412%" y="533" width="0.0799%" height="15" fill="rgb(210,98,12)" fg:x="920" fg:w="1"/><text x="73.7912%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.5412%" y="517" width="0.0799%" height="15" fill="rgb(254,153,22)" fg:x="920" fg:w="1"/><text x="73.7912%" y="527.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.12%)</title><rect x="72.5819%" y="709" width="1.1191%" height="15" fill="rgb(247,223,17)" fg:x="908" fg:w="14"/><text x="72.8319%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.12%)</title><rect x="72.5819%" y="693" width="1.1191%" height="15" fill="rgb(246,56,7)" fg:x="908" fg:w="14"/><text x="72.8319%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="72.5819%" y="677" width="1.1191%" height="15" fill="rgb(240,226,12)" fg:x="908" fg:w="14"/><text x="72.8319%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.12%)</title><rect x="72.5819%" y="661" width="1.1191%" height="15" fill="rgb(205,87,46)" fg:x="908" fg:w="14"/><text x="72.8319%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="72.6619%" y="645" width="1.0392%" height="15" fill="rgb(245,214,51)" fg:x="909" fg:w="13"/><text x="72.9119%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="72.9816%" y="629" width="0.7194%" height="15" fill="rgb(223,172,33)" fg:x="913" fg:w="9"/><text x="73.2316%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.6211%" y="613" width="0.0799%" height="15" fill="rgb(227,203,34)" fg:x="921" fg:w="1"/><text x="73.8711%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.0208%" y="645" width="0.0799%" height="15" fill="rgb(248,143,44)" fg:x="926" fg:w="1"/><text x="74.2708%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.1007%" y="645" width="0.1599%" height="15" fill="rgb(226,162,5)" fg:x="927" fg:w="2"/><text x="74.3507%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.5803%" y="565" width="0.0799%" height="15" fill="rgb(211,143,1)" fg:x="933" fg:w="1"/><text x="74.8303%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.5803%" y="549" width="0.0799%" height="15" fill="rgb(224,96,15)" fg:x="933" fg:w="1"/><text x="74.8303%" y="559.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.5803%" y="533" width="0.0799%" height="15" fill="rgb(222,4,38)" fg:x="933" fg:w="1"/><text x="74.8303%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.5803%" y="517" width="0.0799%" height="15" fill="rgb(253,228,15)" fg:x="933" fg:w="1"/><text x="74.8303%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="74.5004%" y="597" width="0.2398%" height="15" fill="rgb(242,194,12)" fg:x="932" fg:w="3"/><text x="74.7504%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.5803%" y="581" width="0.1599%" height="15" fill="rgb(214,177,31)" fg:x="933" fg:w="2"/><text x="74.8303%" y="591.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.6603%" y="565" width="0.0799%" height="15" fill="rgb(226,58,51)" fg:x="934" fg:w="1"/><text x="74.9103%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.6603%" y="549" width="0.0799%" height="15" fill="rgb(250,119,16)" fg:x="934" fg:w="1"/><text x="74.9103%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6603%" y="533" width="0.0799%" height="15" fill="rgb(223,128,53)" fg:x="934" fg:w="1"/><text x="74.9103%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="74.3405%" y="629" width="0.4796%" height="15" fill="rgb(251,199,15)" fg:x="930" fg:w="6"/><text x="74.5905%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="74.3405%" y="613" width="0.4796%" height="15" fill="rgb(235,168,42)" fg:x="930" fg:w="6"/><text x="74.5905%" y="623.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.7402%" y="597" width="0.0799%" height="15" fill="rgb(250,210,17)" fg:x="935" fg:w="1"/><text x="74.9902%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.7402%" y="581" width="0.0799%" height="15" fill="rgb(226,36,41)" fg:x="935" fg:w="1"/><text x="74.9902%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.7402%" y="565" width="0.0799%" height="15" fill="rgb(225,87,10)" fg:x="935" fg:w="1"/><text x="74.9902%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.7402%" y="549" width="0.0799%" height="15" fill="rgb(228,83,9)" fg:x="935" fg:w="1"/><text x="74.9902%" y="559.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.7402%" y="533" width="0.0799%" height="15" fill="rgb(225,16,36)" fg:x="935" fg:w="1"/><text x="74.9902%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="74.7402%" y="517" width="0.0799%" height="15" fill="rgb(242,198,13)" fg:x="935" fg:w="1"/><text x="74.9902%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7402%" y="501" width="0.0799%" height="15" fill="rgb(239,25,51)" fg:x="935" fg:w="1"/><text x="74.9902%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.8201%" y="629" width="0.0799%" height="15" fill="rgb(239,28,37)" fg:x="936" fg:w="1"/><text x="75.0701%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.8201%" y="613" width="0.0799%" height="15" fill="rgb(234,70,17)" fg:x="936" fg:w="1"/><text x="75.0701%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.8201%" y="597" width="0.0799%" height="15" fill="rgb(231,215,53)" fg:x="936" fg:w="1"/><text x="75.0701%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.8201%" y="581" width="0.0799%" height="15" fill="rgb(218,140,42)" fg:x="936" fg:w="1"/><text x="75.0701%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.9001%" y="597" width="0.0799%" height="15" fill="rgb(233,227,45)" fg:x="937" fg:w="1"/><text x="75.1501%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (14 samples, 1.12%)</title><rect x="73.9408%" y="677" width="1.1191%" height="15" fill="rgb(225,189,21)" fg:x="925" fg:w="14"/><text x="74.1908%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.12%)</title><rect x="73.9408%" y="661" width="1.1191%" height="15" fill="rgb(237,176,54)" fg:x="925" fg:w="14"/><text x="74.1908%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.80%)</title><rect x="74.2606%" y="645" width="0.7994%" height="15" fill="rgb(215,131,46)" fg:x="929" fg:w="10"/><text x="74.5106%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.9001%" y="629" width="0.1599%" height="15" fill="rgb(218,95,20)" fg:x="937" fg:w="2"/><text x="75.1501%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.9001%" y="613" width="0.1599%" height="15" fill="rgb(208,198,12)" fg:x="937" fg:w="2"/><text x="75.1501%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="74.9800%" y="597" width="0.0799%" height="15" fill="rgb(239,107,50)" fg:x="938" fg:w="1"/><text x="75.2300%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.9800%" y="581" width="0.0799%" height="15" fill="rgb(240,217,37)" fg:x="938" fg:w="1"/><text x="75.2300%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.9800%" y="565" width="0.0799%" height="15" fill="rgb(242,197,49)" fg:x="938" fg:w="1"/><text x="75.2300%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.9800%" y="549" width="0.0799%" height="15" fill="rgb(219,171,17)" fg:x="938" fg:w="1"/><text x="75.2300%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.9800%" y="533" width="0.0799%" height="15" fill="rgb(209,81,40)" fg:x="938" fg:w="1"/><text x="75.2300%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (33 samples, 2.64%)</title><rect x="72.5819%" y="725" width="2.6379%" height="15" fill="rgb(237,156,30)" fg:x="908" fg:w="33"/><text x="72.8319%" y="735.50">&lt;k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (19 samples, 1.52%)</title><rect x="73.7010%" y="709" width="1.5188%" height="15" fill="rgb(212,127,16)" fg:x="922" fg:w="19"/><text x="73.9510%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (19 samples, 1.52%)</title><rect x="73.7010%" y="693" width="1.5188%" height="15" fill="rgb(226,66,32)" fg:x="922" fg:w="19"/><text x="73.9510%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.0600%" y="677" width="0.1599%" height="15" fill="rgb(245,22,46)" fg:x="939" fg:w="2"/><text x="75.3100%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.0600%" y="661" width="0.1599%" height="15" fill="rgb(210,112,21)" fg:x="939" fg:w="2"/><text x="75.3100%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.1399%" y="645" width="0.0799%" height="15" fill="rgb(207,118,39)" fg:x="940" fg:w="1"/><text x="75.3899%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.1399%" y="629" width="0.0799%" height="15" fill="rgb(205,206,35)" fg:x="940" fg:w="1"/><text x="75.3899%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2198%" y="693" width="0.0799%" height="15" fill="rgb(222,120,2)" fg:x="941" fg:w="1"/><text x="75.4698%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2198%" y="677" width="0.0799%" height="15" fill="rgb(205,38,18)" fg:x="941" fg:w="1"/><text x="75.4698%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="75.2998%" y="629" width="0.1599%" height="15" fill="rgb(226,61,2)" fg:x="942" fg:w="2"/><text x="75.5498%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="75.2198%" y="725" width="0.3197%" height="15" fill="rgb(242,161,23)" fg:x="941" fg:w="4"/><text x="75.4698%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="75.2198%" y="709" width="0.3197%" height="15" fill="rgb(213,13,52)" fg:x="941" fg:w="4"/><text x="75.4698%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="75.2998%" y="693" width="0.2398%" height="15" fill="rgb(246,209,47)" fg:x="942" fg:w="3"/><text x="75.5498%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.2998%" y="677" width="0.2398%" height="15" fill="rgb(214,41,3)" fg:x="942" fg:w="3"/><text x="75.5498%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="75.2998%" y="661" width="0.2398%" height="15" fill="rgb(236,119,38)" fg:x="942" fg:w="3"/><text x="75.5498%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.2998%" y="645" width="0.2398%" height="15" fill="rgb(218,50,11)" fg:x="942" fg:w="3"/><text x="75.5498%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.4596%" y="629" width="0.0799%" height="15" fill="rgb(228,38,11)" fg:x="944" fg:w="1"/><text x="75.7096%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4596%" y="613" width="0.0799%" height="15" fill="rgb(212,13,9)" fg:x="944" fg:w="1"/><text x="75.7096%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.5396%" y="693" width="0.0799%" height="15" fill="rgb(208,211,9)" fg:x="945" fg:w="1"/><text x="75.7896%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (47 samples, 3.76%)</title><rect x="71.9424%" y="741" width="3.7570%" height="15" fill="rgb(239,39,32)" fg:x="900" fg:w="47"/><text x="72.1924%" y="751.50">engi..</text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="75.5396%" y="725" width="0.1599%" height="15" fill="rgb(254,179,26)" fg:x="945" fg:w="2"/><text x="75.7896%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.5396%" y="709" width="0.1599%" height="15" fill="rgb(249,165,28)" fg:x="945" fg:w="2"/><text x="75.7896%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.6195%" y="693" width="0.0799%" height="15" fill="rgb(225,59,50)" fg:x="946" fg:w="1"/><text x="75.8695%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="75.6195%" y="677" width="0.0799%" height="15" fill="rgb(209,122,5)" fg:x="946" fg:w="1"/><text x="75.8695%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (48 samples, 3.84%)</title><rect x="71.9424%" y="757" width="3.8369%" height="15" fill="rgb(214,65,34)" fg:x="900" fg:w="48"/><text x="72.1924%" y="767.50">&lt;eng..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="75.6994%" y="741" width="0.0799%" height="15" fill="rgb(249,183,32)" fg:x="947" fg:w="1"/><text x="75.9494%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.6994%" y="725" width="0.0799%" height="15" fill="rgb(218,122,24)" fg:x="947" fg:w="1"/><text x="75.9494%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.6994%" y="709" width="0.0799%" height="15" fill="rgb(224,109,18)" fg:x="947" fg:w="1"/><text x="75.9494%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.6994%" y="693" width="0.0799%" height="15" fill="rgb(210,68,50)" fg:x="947" fg:w="1"/><text x="75.9494%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.6994%" y="677" width="0.0799%" height="15" fill="rgb(212,184,34)" fg:x="947" fg:w="1"/><text x="75.9494%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.6994%" y="661" width="0.0799%" height="15" fill="rgb(238,105,48)" fg:x="947" fg:w="1"/><text x="75.9494%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.6994%" y="645" width="0.0799%" height="15" fill="rgb(222,134,54)" fg:x="947" fg:w="1"/><text x="75.9494%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.6994%" y="629" width="0.0799%" height="15" fill="rgb(246,24,43)" fg:x="947" fg:w="1"/><text x="75.9494%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.6994%" y="613" width="0.0799%" height="15" fill="rgb(227,169,22)" fg:x="947" fg:w="1"/><text x="75.9494%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.6994%" y="597" width="0.0799%" height="15" fill="rgb(253,152,4)" fg:x="947" fg:w="1"/><text x="75.9494%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.6994%" y="581" width="0.0799%" height="15" fill="rgb(219,158,36)" fg:x="947" fg:w="1"/><text x="75.9494%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.6994%" y="565" width="0.0799%" height="15" fill="rgb(251,128,40)" fg:x="947" fg:w="1"/><text x="75.9494%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.6994%" y="549" width="0.0799%" height="15" fill="rgb(254,101,39)" fg:x="947" fg:w="1"/><text x="75.9494%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.6994%" y="533" width="0.0799%" height="15" fill="rgb(221,168,40)" fg:x="947" fg:w="1"/><text x="75.9494%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.7794%" y="741" width="0.0799%" height="15" fill="rgb(221,14,27)" fg:x="948" fg:w="1"/><text x="76.0294%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.7794%" y="725" width="0.0799%" height="15" fill="rgb(207,36,43)" fg:x="948" fg:w="1"/><text x="76.0294%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.7794%" y="709" width="0.0799%" height="15" fill="rgb(240,172,53)" fg:x="948" fg:w="1"/><text x="76.0294%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.7794%" y="693" width="0.0799%" height="15" fill="rgb(241,138,43)" fg:x="948" fg:w="1"/><text x="76.0294%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.7794%" y="677" width="0.0799%" height="15" fill="rgb(227,78,19)" fg:x="948" fg:w="1"/><text x="76.0294%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.7794%" y="661" width="0.0799%" height="15" fill="rgb(215,127,44)" fg:x="948" fg:w="1"/><text x="76.0294%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.7794%" y="645" width="0.0799%" height="15" fill="rgb(227,13,10)" fg:x="948" fg:w="1"/><text x="76.0294%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.7794%" y="629" width="0.0799%" height="15" fill="rgb(249,177,6)" fg:x="948" fg:w="1"/><text x="76.0294%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.7794%" y="613" width="0.0799%" height="15" fill="rgb(215,154,26)" fg:x="948" fg:w="1"/><text x="76.0294%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.7794%" y="597" width="0.0799%" height="15" fill="rgb(250,168,20)" fg:x="948" fg:w="1"/><text x="76.0294%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.7794%" y="581" width="0.0799%" height="15" fill="rgb(222,53,38)" fg:x="948" fg:w="1"/><text x="76.0294%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7794%" y="565" width="0.0799%" height="15" fill="rgb(245,154,5)" fg:x="948" fg:w="1"/><text x="76.0294%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (51 samples, 4.08%)</title><rect x="71.9424%" y="773" width="4.0767%" height="15" fill="rgb(214,89,50)" fg:x="900" fg:w="51"/><text x="72.1924%" y="783.50">&lt;eng..</text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="75.7794%" y="757" width="0.2398%" height="15" fill="rgb(232,73,14)" fg:x="948" fg:w="3"/><text x="76.0294%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="75.8593%" y="741" width="0.1599%" height="15" fill="rgb(230,101,20)" fg:x="949" fg:w="2"/><text x="76.1093%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="75.8593%" y="725" width="0.1599%" height="15" fill="rgb(208,56,28)" fg:x="949" fg:w="2"/><text x="76.1093%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="75.8593%" y="709" width="0.1599%" height="15" fill="rgb(247,205,22)" fg:x="949" fg:w="2"/><text x="76.1093%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="75.8593%" y="693" width="0.1599%" height="15" fill="rgb(252,109,51)" fg:x="949" fg:w="2"/><text x="76.1093%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="75.8593%" y="677" width="0.1599%" height="15" fill="rgb(220,40,24)" fg:x="949" fg:w="2"/><text x="76.1093%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="75.8593%" y="661" width="0.1599%" height="15" fill="rgb(251,108,7)" fg:x="949" fg:w="2"/><text x="76.1093%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="75.8593%" y="645" width="0.1599%" height="15" fill="rgb(238,102,51)" fg:x="949" fg:w="2"/><text x="76.1093%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="75.8593%" y="629" width="0.1599%" height="15" fill="rgb(219,149,34)" fg:x="949" fg:w="2"/><text x="76.1093%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="75.8593%" y="613" width="0.1599%" height="15" fill="rgb(239,70,0)" fg:x="949" fg:w="2"/><text x="76.1093%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="75.8593%" y="597" width="0.1599%" height="15" fill="rgb(246,214,23)" fg:x="949" fg:w="2"/><text x="76.1093%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="75.8593%" y="581" width="0.1599%" height="15" fill="rgb(239,221,51)" fg:x="949" fg:w="2"/><text x="76.1093%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.9392%" y="565" width="0.0799%" height="15" fill="rgb(254,62,14)" fg:x="950" fg:w="1"/><text x="76.1892%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.9392%" y="549" width="0.0799%" height="15" fill="rgb(253,57,33)" fg:x="950" fg:w="1"/><text x="76.1892%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="75.9392%" y="533" width="0.0799%" height="15" fill="rgb(229,34,6)" fg:x="950" fg:w="1"/><text x="76.1892%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="75.9392%" y="517" width="0.0799%" height="15" fill="rgb(235,191,23)" fg:x="950" fg:w="1"/><text x="76.1892%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="75.9392%" y="501" width="0.0799%" height="15" fill="rgb(217,207,27)" fg:x="950" fg:w="1"/><text x="76.1892%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="75.9392%" y="485" width="0.0799%" height="15" fill="rgb(232,41,44)" fg:x="950" fg:w="1"/><text x="76.1892%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="75.9392%" y="469" width="0.0799%" height="15" fill="rgb(221,188,19)" fg:x="950" fg:w="1"/><text x="76.1892%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="75.9392%" y="453" width="0.0799%" height="15" fill="rgb(245,180,45)" fg:x="950" fg:w="1"/><text x="76.1892%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.9392%" y="437" width="0.0799%" height="15" fill="rgb(250,220,42)" fg:x="950" fg:w="1"/><text x="76.1892%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="75.9392%" y="421" width="0.0799%" height="15" fill="rgb(234,16,34)" fg:x="950" fg:w="1"/><text x="76.1892%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.9392%" y="405" width="0.0799%" height="15" fill="rgb(233,217,23)" fg:x="950" fg:w="1"/><text x="76.1892%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9392%" y="389" width="0.0799%" height="15" fill="rgb(209,22,46)" fg:x="950" fg:w="1"/><text x="76.1892%" y="399.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="76.0192%" y="773" width="0.1599%" height="15" fill="rgb(213,101,18)" fg:x="951" fg:w="2"/><text x="76.2692%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="76.0192%" y="757" width="0.1599%" height="15" fill="rgb(215,179,52)" fg:x="951" fg:w="2"/><text x="76.2692%" y="767.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="76.0192%" y="741" width="0.1599%" height="15" fill="rgb(223,50,25)" fg:x="951" fg:w="2"/><text x="76.2692%" y="751.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.16%)</title><rect x="76.0192%" y="725" width="0.1599%" height="15" fill="rgb(224,51,44)" fg:x="951" fg:w="2"/><text x="76.2692%" y="735.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="76.0192%" y="709" width="0.1599%" height="15" fill="rgb(224,13,54)" fg:x="951" fg:w="2"/><text x="76.2692%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="76.0192%" y="693" width="0.1599%" height="15" fill="rgb(219,58,47)" fg:x="951" fg:w="2"/><text x="76.2692%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1791%" y="773" width="0.0799%" height="15" fill="rgb(246,124,34)" fg:x="953" fg:w="1"/><text x="76.4291%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.2590%" y="757" width="0.0799%" height="15" fill="rgb(245,109,25)" fg:x="954" fg:w="1"/><text x="76.5090%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="76.2590%" y="741" width="0.0799%" height="15" fill="rgb(235,48,23)" fg:x="954" fg:w="1"/><text x="76.5090%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="76.3389%" y="725" width="0.0799%" height="15" fill="rgb(229,203,36)" fg:x="955" fg:w="1"/><text x="76.5889%" y="735.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4189%" y="725" width="0.0799%" height="15" fill="rgb(234,180,9)" fg:x="956" fg:w="1"/><text x="76.6689%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.4189%" y="709" width="0.0799%" height="15" fill="rgb(228,98,45)" fg:x="956" fg:w="1"/><text x="76.6689%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.4189%" y="693" width="0.0799%" height="15" fill="rgb(240,24,36)" fg:x="956" fg:w="1"/><text x="76.6689%" y="703.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (261 samples, 20.86%)</title><rect x="55.7154%" y="805" width="20.8633%" height="15" fill="rgb(227,154,19)" fg:x="697" fg:w="261"/><text x="55.9654%" y="815.50">engine::session::Session::evaluat..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (260 samples, 20.78%)</title><rect x="55.7954%" y="789" width="20.7834%" height="15" fill="rgb(231,2,48)" fg:x="698" fg:w="260"/><text x="56.0454%" y="799.50">engine::session::Session::evaluat..</text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="76.2590%" y="773" width="0.3197%" height="15" fill="rgb(219,216,0)" fg:x="954" fg:w="4"/><text x="76.5090%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="76.3389%" y="757" width="0.2398%" height="15" fill="rgb(251,88,0)" fg:x="955" fg:w="3"/><text x="76.5889%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.3389%" y="741" width="0.2398%" height="15" fill="rgb(242,45,45)" fg:x="955" fg:w="3"/><text x="76.5889%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.4988%" y="725" width="0.0799%" height="15" fill="rgb(218,149,45)" fg:x="957" fg:w="1"/><text x="76.7488%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.4988%" y="709" width="0.0799%" height="15" fill="rgb(247,194,10)" fg:x="957" fg:w="1"/><text x="76.7488%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.4988%" y="693" width="0.0799%" height="15" fill="rgb(234,33,37)" fg:x="957" fg:w="1"/><text x="76.7488%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.4988%" y="677" width="0.0799%" height="15" fill="rgb(218,61,13)" fg:x="957" fg:w="1"/><text x="76.7488%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.4988%" y="661" width="0.0799%" height="15" fill="rgb(210,80,52)" fg:x="957" fg:w="1"/><text x="76.7488%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (959 samples, 76.66%)</title><rect x="0.0000%" y="853" width="76.6587%" height="15" fill="rgb(218,203,27)" fg:x="0" fg:w="959"/><text x="0.2500%" y="863.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (959 samples, 76.66%)</title><rect x="0.0000%" y="837" width="76.6587%" height="15" fill="rgb(209,126,33)" fg:x="0" fg:w="959"/><text x="0.2500%" y="847.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (959 samples, 76.66%)</title><rect x="0.0000%" y="821" width="76.6587%" height="15" fill="rgb(234,173,41)" fg:x="0" fg:w="959"/><text x="0.2500%" y="831.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="76.5787%" y="805" width="0.0799%" height="15" fill="rgb(228,166,9)" fg:x="958" fg:w="1"/><text x="76.8287%" y="815.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5787%" y="789" width="0.0799%" height="15" fill="rgb(208,124,43)" fg:x="958" fg:w="1"/><text x="76.8287%" y="799.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="76.8185%" y="693" width="0.3197%" height="15" fill="rgb(212,154,38)" fg:x="961" fg:w="4"/><text x="77.0685%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="77.1383%" y="693" width="0.1599%" height="15" fill="rgb(246,179,35)" fg:x="965" fg:w="2"/><text x="77.3883%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2182%" y="677" width="0.0799%" height="15" fill="rgb(251,3,50)" fg:x="966" fg:w="1"/><text x="77.4682%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2982%" y="645" width="0.0799%" height="15" fill="rgb(219,96,8)" fg:x="967" fg:w="1"/><text x="77.5482%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="77.2982%" y="677" width="0.1599%" height="15" fill="rgb(251,216,33)" fg:x="967" fg:w="2"/><text x="77.5482%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="77.2982%" y="661" width="0.1599%" height="15" fill="rgb(243,145,29)" fg:x="967" fg:w="2"/><text x="77.5482%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.3781%" y="645" width="0.0799%" height="15" fill="rgb(210,75,20)" fg:x="968" fg:w="1"/><text x="77.6281%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="77.4580%" y="677" width="0.1599%" height="15" fill="rgb(235,56,8)" fg:x="969" fg:w="2"/><text x="77.7080%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (13 samples, 1.04%)</title><rect x="76.6587%" y="789" width="1.0392%" height="15" fill="rgb(226,175,49)" fg:x="959" fg:w="13"/><text x="76.9087%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="76.6587%" y="773" width="1.0392%" height="15" fill="rgb(242,204,23)" fg:x="959" fg:w="13"/><text x="76.9087%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (13 samples, 1.04%)</title><rect x="76.6587%" y="757" width="1.0392%" height="15" fill="rgb(225,104,24)" fg:x="959" fg:w="13"/><text x="76.9087%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="76.6587%" y="741" width="1.0392%" height="15" fill="rgb(253,34,1)" fg:x="959" fg:w="13"/><text x="76.9087%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="76.6587%" y="725" width="1.0392%" height="15" fill="rgb(233,199,23)" fg:x="959" fg:w="13"/><text x="76.9087%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="76.6587%" y="709" width="1.0392%" height="15" fill="rgb(247,7,51)" fg:x="959" fg:w="13"/><text x="76.9087%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="77.2982%" y="693" width="0.3997%" height="15" fill="rgb(214,146,12)" fg:x="967" fg:w="5"/><text x="77.5482%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.6179%" y="677" width="0.0799%" height="15" fill="rgb(234,181,43)" fg:x="971" fg:w="1"/><text x="77.8679%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.6179%" y="661" width="0.0799%" height="15" fill="rgb(239,148,6)" fg:x="971" fg:w="1"/><text x="77.8679%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="76.6587%" y="805" width="1.1191%" height="15" fill="rgb(206,151,17)" fg:x="959" fg:w="14"/><text x="76.9087%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="77.6978%" y="789" width="0.0799%" height="15" fill="rgb(213,215,10)" fg:x="972" fg:w="1"/><text x="77.9478%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="77.6978%" y="773" width="0.0799%" height="15" fill="rgb(215,220,44)" fg:x="972" fg:w="1"/><text x="77.9478%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.6978%" y="757" width="0.0799%" height="15" fill="rgb(245,205,37)" fg:x="972" fg:w="1"/><text x="77.9478%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="77.7778%" y="773" width="0.0799%" height="15" fill="rgb(245,130,43)" fg:x="973" fg:w="1"/><text x="78.0278%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7778%" y="757" width="0.0799%" height="15" fill="rgb(231,227,38)" fg:x="973" fg:w="1"/><text x="78.0278%" y="767.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="77.9376%" y="709" width="0.0799%" height="15" fill="rgb(233,185,4)" fg:x="975" fg:w="1"/><text x="78.1876%" y="719.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="77.9376%" y="693" width="0.0799%" height="15" fill="rgb(224,154,43)" fg:x="975" fg:w="1"/><text x="78.1876%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.9376%" y="677" width="0.0799%" height="15" fill="rgb(235,156,15)" fg:x="975" fg:w="1"/><text x="78.1876%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.9376%" y="661" width="0.0799%" height="15" fill="rgb(211,55,43)" fg:x="975" fg:w="1"/><text x="78.1876%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.9376%" y="645" width="0.0799%" height="15" fill="rgb(247,149,40)" fg:x="975" fg:w="1"/><text x="78.1876%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="77.9376%" y="629" width="0.0799%" height="15" fill="rgb(232,171,16)" fg:x="975" fg:w="1"/><text x="78.1876%" y="639.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="78.0176%" y="693" width="0.0799%" height="15" fill="rgb(215,117,49)" fg:x="976" fg:w="1"/><text x="78.2676%" y="703.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="78.0176%" y="677" width="0.0799%" height="15" fill="rgb(246,194,11)" fg:x="976" fg:w="1"/><text x="78.2676%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="78.0176%" y="661" width="0.0799%" height="15" fill="rgb(242,101,44)" fg:x="976" fg:w="1"/><text x="78.2676%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="78.0176%" y="645" width="0.0799%" height="15" fill="rgb(226,174,6)" fg:x="976" fg:w="1"/><text x="78.2676%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="78.0176%" y="629" width="0.0799%" height="15" fill="rgb(213,150,20)" fg:x="976" fg:w="1"/><text x="78.2676%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.0176%" y="613" width="0.0799%" height="15" fill="rgb(222,124,42)" fg:x="976" fg:w="1"/><text x="78.2676%" y="623.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="78.0975%" y="693" width="0.1599%" height="15" fill="rgb(250,19,47)" fg:x="977" fg:w="2"/><text x="78.3475%" y="703.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="78.0975%" y="677" width="0.1599%" height="15" fill="rgb(241,217,19)" fg:x="977" fg:w="2"/><text x="78.3475%" y="687.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="78.2574%" y="693" width="0.2398%" height="15" fill="rgb(207,210,34)" fg:x="979" fg:w="3"/><text x="78.5074%" y="703.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="78.2574%" y="677" width="0.2398%" height="15" fill="rgb(244,45,4)" fg:x="979" fg:w="3"/><text x="78.5074%" y="687.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="78.2574%" y="661" width="0.2398%" height="15" fill="rgb(252,134,50)" fg:x="979" fg:w="3"/><text x="78.5074%" y="671.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="78.2574%" y="645" width="0.2398%" height="15" fill="rgb(238,74,2)" fg:x="979" fg:w="3"/><text x="78.5074%" y="655.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="78.2574%" y="629" width="0.2398%" height="15" fill="rgb(226,58,46)" fg:x="979" fg:w="3"/><text x="78.5074%" y="639.50"></text></g><g><title>libloading::safe::Library::new (7 samples, 0.56%)</title><rect x="78.0176%" y="709" width="0.5596%" height="15" fill="rgb(232,83,35)" fg:x="976" fg:w="7"/><text x="78.2676%" y="719.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="78.4972%" y="693" width="0.0799%" height="15" fill="rgb(212,148,47)" fg:x="982" fg:w="1"/><text x="78.7472%" y="703.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="78.4972%" y="677" width="0.0799%" height="15" fill="rgb(235,29,1)" fg:x="982" fg:w="1"/><text x="78.7472%" y="687.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="78.4972%" y="661" width="0.0799%" height="15" fill="rgb(247,55,37)" fg:x="982" fg:w="1"/><text x="78.7472%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="78.4972%" y="645" width="0.0799%" height="15" fill="rgb(222,48,3)" fg:x="982" fg:w="1"/><text x="78.7472%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.4972%" y="629" width="0.0799%" height="15" fill="rgb(234,21,33)" fg:x="982" fg:w="1"/><text x="78.7472%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.4972%" y="613" width="0.0799%" height="15" fill="rgb(247,178,53)" fg:x="982" fg:w="1"/><text x="78.7472%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.4972%" y="597" width="0.0799%" height="15" fill="rgb(225,75,7)" fg:x="982" fg:w="1"/><text x="78.7472%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.4972%" y="581" width="0.0799%" height="15" fill="rgb(219,199,7)" fg:x="982" fg:w="1"/><text x="78.7472%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.4972%" y="565" width="0.0799%" height="15" fill="rgb(209,93,42)" fg:x="982" fg:w="1"/><text x="78.7472%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.4972%" y="549" width="0.0799%" height="15" fill="rgb(240,175,17)" fg:x="982" fg:w="1"/><text x="78.7472%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4972%" y="533" width="0.0799%" height="15" fill="rgb(232,106,7)" fg:x="982" fg:w="1"/><text x="78.7472%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.72%)</title><rect x="77.9376%" y="725" width="0.7194%" height="15" fill="rgb(242,106,43)" fg:x="975" fg:w="9"/><text x="78.1876%" y="735.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="78.5771%" y="709" width="0.0799%" height="15" fill="rgb(242,61,37)" fg:x="983" fg:w="1"/><text x="78.8271%" y="719.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="78.5771%" y="693" width="0.0799%" height="15" fill="rgb(205,72,10)" fg:x="983" fg:w="1"/><text x="78.8271%" y="703.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.5771%" y="677" width="0.0799%" height="15" fill="rgb(214,184,36)" fg:x="983" fg:w="1"/><text x="78.8271%" y="687.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (14 samples, 1.12%)</title><rect x="77.8577%" y="741" width="1.1191%" height="15" fill="rgb(206,107,18)" fg:x="974" fg:w="14"/><text x="78.1077%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.32%)</title><rect x="78.6571%" y="725" width="0.3197%" height="15" fill="rgb(210,75,5)" fg:x="984" fg:w="4"/><text x="78.9071%" y="735.50"></text></g><g><title>clock_gettime (3 samples, 0.24%)</title><rect x="78.7370%" y="709" width="0.2398%" height="15" fill="rgb(205,3,19)" fg:x="985" fg:w="3"/><text x="78.9870%" y="719.50"></text></g><g><title>&lt;plugins_core::security::SecurityPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="78.9768%" y="693" width="0.0799%" height="15" fill="rgb(207,181,42)" fg:x="988" fg:w="1"/><text x="79.2268%" y="703.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (19 samples, 1.52%)</title><rect x="77.7778%" y="805" width="1.5188%" height="15" fill="rgb(229,179,43)" fg:x="973" fg:w="19"/><text x="78.0278%" y="815.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (19 samples, 1.52%)</title><rect x="77.7778%" y="789" width="1.5188%" height="15" fill="rgb(246,95,30)" fg:x="973" fg:w="19"/><text x="78.0278%" y="799.50"></text></g><g><title>engine::session::Session::new (18 samples, 1.44%)</title><rect x="77.8577%" y="773" width="1.4388%" height="15" fill="rgb(234,144,45)" fg:x="974" fg:w="18"/><text x="78.1077%" y="783.50"></text></g><g><title>engine::session::Session::initialize (18 samples, 1.44%)</title><rect x="77.8577%" y="757" width="1.4388%" height="15" fill="rgb(250,54,25)" fg:x="974" fg:w="18"/><text x="78.1077%" y="767.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="78.9768%" y="741" width="0.3197%" height="15" fill="rgb(215,195,40)" fg:x="988" fg:w="4"/><text x="79.2268%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="78.9768%" y="725" width="0.3197%" height="15" fill="rgb(233,188,42)" fg:x="988" fg:w="4"/><text x="79.2268%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="78.9768%" y="709" width="0.3197%" height="15" fill="rgb(247,227,35)" fg:x="988" fg:w="4"/><text x="79.2268%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="79.0568%" y="693" width="0.2398%" height="15" fill="rgb(249,124,27)" fg:x="989" fg:w="3"/><text x="79.3068%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="79.1367%" y="677" width="0.1599%" height="15" fill="rgb(219,207,25)" fg:x="990" fg:w="2"/><text x="79.3867%" y="687.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="79.1367%" y="661" width="0.1599%" height="15" fill="rgb(241,216,47)" fg:x="990" fg:w="2"/><text x="79.3867%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="79.2966%" y="789" width="0.0799%" height="15" fill="rgb(233,82,50)" fg:x="992" fg:w="1"/><text x="79.5466%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="79.2966%" y="773" width="0.0799%" height="15" fill="rgb(232,63,2)" fg:x="992" fg:w="1"/><text x="79.5466%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="79.2966%" y="757" width="0.0799%" height="15" fill="rgb(236,184,28)" fg:x="992" fg:w="1"/><text x="79.5466%" y="767.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="79.3765%" y="741" width="0.1599%" height="15" fill="rgb(254,63,27)" fg:x="993" fg:w="2"/><text x="79.6265%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="79.3765%" y="725" width="0.1599%" height="15" fill="rgb(253,106,28)" fg:x="993" fg:w="2"/><text x="79.6265%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="79.3765%" y="709" width="0.1599%" height="15" fill="rgb(225,141,39)" fg:x="993" fg:w="2"/><text x="79.6265%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.6163%" y="677" width="0.0799%" height="15" fill="rgb(222,157,20)" fg:x="996" fg:w="1"/><text x="79.8663%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.6163%" y="661" width="0.0799%" height="15" fill="rgb(210,190,9)" fg:x="996" fg:w="1"/><text x="79.8663%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="79.6163%" y="693" width="0.2398%" height="15" fill="rgb(242,167,7)" fg:x="996" fg:w="3"/><text x="79.8663%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.6962%" y="677" width="0.1599%" height="15" fill="rgb(227,82,41)" fg:x="997" fg:w="2"/><text x="79.9462%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.7762%" y="661" width="0.0799%" height="15" fill="rgb(222,131,13)" fg:x="998" fg:w="1"/><text x="80.0262%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.7762%" y="645" width="0.0799%" height="15" fill="rgb(221,98,26)" fg:x="998" fg:w="1"/><text x="80.0262%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="79.9361%" y="677" width="0.3197%" height="15" fill="rgb(251,63,52)" fg:x="1000" fg:w="4"/><text x="80.1861%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.0959%" y="661" width="0.1599%" height="15" fill="rgb(246,25,43)" fg:x="1002" fg:w="2"/><text x="80.3459%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.0959%" y="645" width="0.1599%" height="15" fill="rgb(247,167,15)" fg:x="1002" fg:w="2"/><text x="80.3459%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="80.0959%" y="629" width="0.1599%" height="15" fill="rgb(240,104,42)" fg:x="1002" fg:w="2"/><text x="80.3459%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.3357%" y="629" width="0.0799%" height="15" fill="rgb(224,54,6)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.3357%" y="613" width="0.0799%" height="15" fill="rgb(244,108,35)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.3357%" y="597" width="0.0799%" height="15" fill="rgb(216,154,2)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.3357%" y="581" width="0.0799%" height="15" fill="rgb(222,8,47)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="80.3357%" y="661" width="0.1599%" height="15" fill="rgb(252,93,1)" fg:x="1005" fg:w="2"/><text x="80.5857%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.3357%" y="645" width="0.1599%" height="15" fill="rgb(223,226,51)" fg:x="1005" fg:w="2"/><text x="80.5857%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.4157%" y="629" width="0.0799%" height="15" fill="rgb(206,147,9)" fg:x="1006" fg:w="1"/><text x="80.6657%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="80.4956%" y="661" width="0.2398%" height="15" fill="rgb(248,180,41)" fg:x="1007" fg:w="3"/><text x="80.7456%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="80.4956%" y="645" width="0.2398%" height="15" fill="rgb(209,47,50)" fg:x="1007" fg:w="3"/><text x="80.7456%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.5755%" y="629" width="0.1599%" height="15" fill="rgb(243,65,31)" fg:x="1008" fg:w="2"/><text x="80.8255%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.7354%" y="645" width="0.1599%" height="15" fill="rgb(228,128,1)" fg:x="1010" fg:w="2"/><text x="80.9854%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8153%" y="629" width="0.0799%" height="15" fill="rgb(231,192,16)" fg:x="1011" fg:w="1"/><text x="81.0653%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.8953%" y="629" width="0.0799%" height="15" fill="rgb(224,26,40)" fg:x="1012" fg:w="1"/><text x="81.1453%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="80.9752%" y="629" width="0.2398%" height="15" fill="rgb(214,192,17)" fg:x="1013" fg:w="3"/><text x="81.2252%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.0552%" y="613" width="0.1599%" height="15" fill="rgb(225,147,18)" fg:x="1014" fg:w="2"/><text x="81.3052%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="80.8953%" y="645" width="0.3997%" height="15" fill="rgb(205,35,11)" fg:x="1012" fg:w="5"/><text x="81.1453%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.2150%" y="629" width="0.0799%" height="15" fill="rgb(242,40,42)" fg:x="1016" fg:w="1"/><text x="81.4650%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.2150%" y="613" width="0.0799%" height="15" fill="rgb(250,170,13)" fg:x="1016" fg:w="1"/><text x="81.4650%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="80.2558%" y="677" width="1.1990%" height="15" fill="rgb(240,161,28)" fg:x="1004" fg:w="15"/><text x="80.5058%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="80.7354%" y="661" width="0.7194%" height="15" fill="rgb(245,179,12)" fg:x="1010" fg:w="9"/><text x="80.9854%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.2950%" y="645" width="0.1599%" height="15" fill="rgb(250,92,32)" fg:x="1017" fg:w="2"/><text x="81.5450%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.3749%" y="629" width="0.0799%" height="15" fill="rgb(233,10,40)" fg:x="1018" fg:w="1"/><text x="81.6249%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.3749%" y="613" width="0.0799%" height="15" fill="rgb(217,98,1)" fg:x="1018" fg:w="1"/><text x="81.6249%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (25 samples, 2.00%)</title><rect x="79.6163%" y="709" width="1.9984%" height="15" fill="rgb(238,202,7)" fg:x="996" fg:w="25"/><text x="79.8663%" y="719.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.76%)</title><rect x="79.8561%" y="693" width="1.7586%" height="15" fill="rgb(222,91,3)" fg:x="999" fg:w="22"/><text x="80.1061%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.4548%" y="677" width="0.1599%" height="15" fill="rgb(211,170,49)" fg:x="1019" fg:w="2"/><text x="81.7048%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.5348%" y="661" width="0.0799%" height="15" fill="rgb(253,139,18)" fg:x="1020" fg:w="1"/><text x="81.7848%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="81.6147%" y="661" width="0.1599%" height="15" fill="rgb(222,4,43)" fg:x="1021" fg:w="2"/><text x="81.8647%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.0144%" y="629" width="0.0799%" height="15" fill="rgb(207,205,12)" fg:x="1026" fg:w="1"/><text x="82.2644%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="81.6147%" y="709" width="0.5596%" height="15" fill="rgb(216,159,46)" fg:x="1021" fg:w="7"/><text x="81.8647%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="81.6147%" y="693" width="0.5596%" height="15" fill="rgb(236,115,1)" fg:x="1021" fg:w="7"/><text x="81.8647%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="81.6147%" y="677" width="0.5596%" height="15" fill="rgb(251,35,33)" fg:x="1021" fg:w="7"/><text x="81.8647%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="81.7746%" y="661" width="0.3997%" height="15" fill="rgb(248,62,51)" fg:x="1023" fg:w="5"/><text x="82.0246%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.9345%" y="645" width="0.2398%" height="15" fill="rgb(254,180,19)" fg:x="1025" fg:w="3"/><text x="82.1845%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.0943%" y="629" width="0.0799%" height="15" fill="rgb(217,100,32)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.0943%" y="613" width="0.0799%" height="15" fill="rgb(224,71,22)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1743%" y="661" width="0.0799%" height="15" fill="rgb(251,185,33)" fg:x="1028" fg:w="1"/><text x="82.4243%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2542%" y="661" width="0.0799%" height="15" fill="rgb(209,75,48)" fg:x="1029" fg:w="1"/><text x="82.5042%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2542%" y="645" width="0.0799%" height="15" fill="rgb(253,190,16)" fg:x="1029" fg:w="1"/><text x="82.5042%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.2542%" y="629" width="0.0799%" height="15" fill="rgb(226,140,1)" fg:x="1029" fg:w="1"/><text x="82.5042%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="82.2542%" y="613" width="0.0799%" height="15" fill="rgb(206,75,30)" fg:x="1029" fg:w="1"/><text x="82.5042%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="82.3341%" y="661" width="0.0799%" height="15" fill="rgb(231,208,37)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="82.4940%" y="629" width="0.1599%" height="15" fill="rgb(238,136,40)" fg:x="1032" fg:w="2"/><text x="82.7440%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="82.4141%" y="661" width="0.3197%" height="15" fill="rgb(247,137,17)" fg:x="1031" fg:w="4"/><text x="82.6641%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="82.4141%" y="645" width="0.3197%" height="15" fill="rgb(240,60,40)" fg:x="1031" fg:w="4"/><text x="82.6641%" y="655.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="82.6539%" y="629" width="0.0799%" height="15" fill="rgb(236,68,50)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="639.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.6539%" y="613" width="0.0799%" height="15" fill="rgb(230,42,12)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.7338%" y="629" width="0.0799%" height="15" fill="rgb(219,16,16)" fg:x="1035" fg:w="1"/><text x="82.9838%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8137%" y="613" width="0.0799%" height="15" fill="rgb(220,38,35)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8937%" y="565" width="0.0799%" height="15" fill="rgb(228,33,1)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8937%" y="549" width="0.0799%" height="15" fill="rgb(241,46,31)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8937%" y="533" width="0.0799%" height="15" fill="rgb(232,58,20)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="82.8937%" y="613" width="0.1599%" height="15" fill="rgb(206,228,53)" fg:x="1037" fg:w="2"/><text x="83.1437%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.8937%" y="597" width="0.1599%" height="15" fill="rgb(206,88,33)" fg:x="1037" fg:w="2"/><text x="83.1437%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.8937%" y="581" width="0.1599%" height="15" fill="rgb(238,69,7)" fg:x="1037" fg:w="2"/><text x="83.1437%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9736%" y="565" width="0.0799%" height="15" fill="rgb(250,21,46)" fg:x="1038" fg:w="1"/><text x="83.2236%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9736%" y="549" width="0.0799%" height="15" fill="rgb(215,212,21)" fg:x="1038" fg:w="1"/><text x="83.2236%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1335%" y="581" width="0.0799%" height="15" fill="rgb(211,35,12)" fg:x="1040" fg:w="1"/><text x="83.3835%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1335%" y="565" width="0.0799%" height="15" fill="rgb(231,184,16)" fg:x="1040" fg:w="1"/><text x="83.3835%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="83.2934%" y="565" width="0.0799%" height="15" fill="rgb(242,140,15)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="83.3733%" y="565" width="0.2398%" height="15" fill="rgb(220,37,14)" fg:x="1043" fg:w="3"/><text x="83.6233%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="83.3733%" y="549" width="0.2398%" height="15" fill="rgb(223,146,22)" fg:x="1043" fg:w="3"/><text x="83.6233%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.4532%" y="533" width="0.1599%" height="15" fill="rgb(216,132,15)" fg:x="1044" fg:w="2"/><text x="83.7032%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.5332%" y="517" width="0.0799%" height="15" fill="rgb(248,83,5)" fg:x="1045" fg:w="1"/><text x="83.7832%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="82.8137%" y="629" width="0.9592%" height="15" fill="rgb(231,206,48)" fg:x="1036" fg:w="12"/><text x="83.0637%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="83.0536%" y="613" width="0.7194%" height="15" fill="rgb(253,185,37)" fg:x="1039" fg:w="9"/><text x="83.3036%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="83.1335%" y="597" width="0.6395%" height="15" fill="rgb(208,21,44)" fg:x="1040" fg:w="8"/><text x="83.3835%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="83.2134%" y="581" width="0.5596%" height="15" fill="rgb(236,125,4)" fg:x="1041" fg:w="7"/><text x="83.4634%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.6131%" y="565" width="0.1599%" height="15" fill="rgb(226,134,25)" fg:x="1046" fg:w="2"/><text x="83.8631%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.12%)</title><rect x="82.7338%" y="645" width="1.1191%" height="15" fill="rgb(250,201,12)" fg:x="1035" fg:w="14"/><text x="82.9838%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="83.7730%" y="629" width="0.0799%" height="15" fill="rgb(225,92,18)" fg:x="1048" fg:w="1"/><text x="84.0230%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7730%" y="613" width="0.0799%" height="15" fill="rgb(227,35,22)" fg:x="1048" fg:w="1"/><text x="84.0230%" y="623.50"></text></g><g><title>engine::session::Session::flush (57 samples, 4.56%)</title><rect x="79.3765%" y="789" width="4.5564%" height="15" fill="rgb(214,180,52)" fg:x="993" fg:w="57"/><text x="79.6265%" y="799.50">engin..</text></g><g><title>engine::session::state::State::close (57 samples, 4.56%)</title><rect x="79.3765%" y="773" width="4.5564%" height="15" fill="rgb(233,55,38)" fg:x="993" fg:w="57"/><text x="79.6265%" y="783.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (57 samples, 4.56%)</title><rect x="79.3765%" y="757" width="4.5564%" height="15" fill="rgb(249,171,43)" fg:x="993" fg:w="57"/><text x="79.6265%" y="767.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (55 samples, 4.40%)</title><rect x="79.5364%" y="741" width="4.3965%" height="15" fill="rgb(239,87,2)" fg:x="995" fg:w="55"/><text x="79.7864%" y="751.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (55 samples, 4.40%)</title><rect x="79.5364%" y="725" width="4.3965%" height="15" fill="rgb(248,141,5)" fg:x="995" fg:w="55"/><text x="79.7864%" y="735.50">engin..</text></g><g><title>kernel::model::any_entity_changes (22 samples, 1.76%)</title><rect x="82.1743%" y="709" width="1.7586%" height="15" fill="rgb(238,33,42)" fg:x="1028" fg:w="22"/><text x="82.4243%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (22 samples, 1.76%)</title><rect x="82.1743%" y="693" width="1.7586%" height="15" fill="rgb(231,57,19)" fg:x="1028" fg:w="22"/><text x="82.4243%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.76%)</title><rect x="82.1743%" y="677" width="1.7586%" height="15" fill="rgb(214,78,53)" fg:x="1028" fg:w="22"/><text x="82.4243%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.20%)</title><rect x="82.7338%" y="661" width="1.1990%" height="15" fill="rgb(206,132,29)" fg:x="1035" fg:w="15"/><text x="82.9838%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.8529%" y="645" width="0.0799%" height="15" fill="rgb(248,174,31)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="83.9329%" y="741" width="0.0799%" height="15" fill="rgb(221,87,13)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.9329%" y="725" width="0.0799%" height="15" fill="rgb(223,197,17)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.9329%" y="709" width="0.0799%" height="15" fill="rgb(220,144,50)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="83.9329%" y="757" width="0.1599%" height="15" fill="rgb(244,201,11)" fg:x="1050" fg:w="2"/><text x="84.1829%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.0128%" y="741" width="0.0799%" height="15" fill="rgb(249,81,34)" fg:x="1051" fg:w="1"/><text x="84.2628%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.0927%" y="677" width="0.0799%" height="15" fill="rgb(205,161,12)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="687.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="84.1727%" y="677" width="0.2398%" height="15" fill="rgb(252,139,50)" fg:x="1053" fg:w="3"/><text x="84.4227%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="83.9329%" y="773" width="0.5596%" height="15" fill="rgb(205,169,14)" fg:x="1050" fg:w="7"/><text x="84.1829%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="84.0927%" y="757" width="0.3997%" height="15" fill="rgb(248,198,33)" fg:x="1052" fg:w="5"/><text x="84.3427%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (5 samples, 0.40%)</title><rect x="84.0927%" y="741" width="0.3997%" height="15" fill="rgb(236,23,21)" fg:x="1052" fg:w="5"/><text x="84.3427%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="84.0927%" y="725" width="0.3997%" height="15" fill="rgb(231,13,38)" fg:x="1052" fg:w="5"/><text x="84.3427%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.40%)</title><rect x="84.0927%" y="709" width="0.3997%" height="15" fill="rgb(239,139,21)" fg:x="1052" fg:w="5"/><text x="84.3427%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="84.0927%" y="693" width="0.3997%" height="15" fill="rgb(222,164,45)" fg:x="1052" fg:w="5"/><text x="84.3427%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.4125%" y="677" width="0.0799%" height="15" fill="rgb(230,52,27)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="84.4125%" y="661" width="0.0799%" height="15" fill="rgb(227,143,42)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.5723%" y="709" width="0.0799%" height="15" fill="rgb(249,127,1)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.5723%" y="693" width="0.0799%" height="15" fill="rgb(243,107,26)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5723%" y="677" width="0.0799%" height="15" fill="rgb(225,7,45)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5723%" y="661" width="0.0799%" height="15" fill="rgb(241,88,38)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.5723%" y="645" width="0.0799%" height="15" fill="rgb(226,121,9)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5723%" y="629" width="0.0799%" height="15" fill="rgb(253,60,29)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5723%" y="613" width="0.0799%" height="15" fill="rgb(244,181,39)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5723%" y="597" width="0.0799%" height="15" fill="rgb(252,203,31)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5723%" y="581" width="0.0799%" height="15" fill="rgb(224,120,8)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (10 samples, 0.80%)</title><rect x="83.9329%" y="789" width="0.7994%" height="15" fill="rgb(205,171,54)" fg:x="1050" fg:w="10"/><text x="84.1829%" y="799.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="84.4924%" y="773" width="0.2398%" height="15" fill="rgb(235,89,11)" fg:x="1057" fg:w="3"/><text x="84.7424%" y="783.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="84.4924%" y="757" width="0.2398%" height="15" fill="rgb(212,180,28)" fg:x="1057" fg:w="3"/><text x="84.7424%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="84.5723%" y="741" width="0.1599%" height="15" fill="rgb(247,84,49)" fg:x="1058" fg:w="2"/><text x="84.8223%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.5723%" y="725" width="0.1599%" height="15" fill="rgb(236,187,52)" fg:x="1058" fg:w="2"/><text x="84.8223%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.6523%" y="709" width="0.0799%" height="15" fill="rgb(227,24,15)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.6523%" y="693" width="0.0799%" height="15" fill="rgb(227,211,13)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.6523%" y="677" width="0.0799%" height="15" fill="rgb(245,52,14)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.6523%" y="661" width="0.0799%" height="15" fill="rgb(225,185,13)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.6523%" y="645" width="0.0799%" height="15" fill="rgb(217,160,29)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.6523%" y="629" width="0.0799%" height="15" fill="rgb(216,115,53)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.6523%" y="613" width="0.0799%" height="15" fill="rgb(236,99,5)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.6523%" y="597" width="0.0799%" height="15" fill="rgb(222,60,38)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.6523%" y="581" width="0.0799%" height="15" fill="rgb(212,82,22)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.6523%" y="565" width="0.0799%" height="15" fill="rgb(214,48,28)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.6523%" y="549" width="0.0799%" height="15" fill="rgb(245,196,50)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.6523%" y="533" width="0.0799%" height="15" fill="rgb(225,159,46)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.6523%" y="517" width="0.0799%" height="15" fill="rgb(207,195,48)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.6523%" y="501" width="0.0799%" height="15" fill="rgb(240,73,3)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.6523%" y="485" width="0.0799%" height="15" fill="rgb(245,57,23)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.6523%" y="469" width="0.0799%" height="15" fill="rgb(240,75,18)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6523%" y="453" width="0.0799%" height="15" fill="rgb(238,168,12)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="84.7322%" y="757" width="0.0799%" height="15" fill="rgb(226,20,40)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="84.7322%" y="741" width="0.0799%" height="15" fill="rgb(224,130,35)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="84.7322%" y="725" width="0.0799%" height="15" fill="rgb(225,63,41)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="84.7322%" y="709" width="0.0799%" height="15" fill="rgb(219,3,3)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.7322%" y="693" width="0.0799%" height="15" fill="rgb(218,157,4)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="84.7322%" y="677" width="0.0799%" height="15" fill="rgb(232,76,36)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="84.7322%" y="661" width="0.0799%" height="15" fill="rgb(247,36,0)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="84.7322%" y="645" width="0.0799%" height="15" fill="rgb(205,2,34)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.7322%" y="629" width="0.0799%" height="15" fill="rgb(239,136,13)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="84.7322%" y="613" width="0.0799%" height="15" fill="rgb(253,122,12)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="84.7322%" y="597" width="0.0799%" height="15" fill="rgb(222,174,7)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="607.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="84.7322%" y="581" width="0.0799%" height="15" fill="rgb(208,191,42)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="84.7322%" y="565" width="0.0799%" height="15" fill="rgb(237,212,15)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="84.7322%" y="789" width="0.1599%" height="15" fill="rgb(215,65,20)" fg:x="1060" fg:w="2"/><text x="84.9822%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="84.7322%" y="773" width="0.1599%" height="15" fill="rgb(232,103,11)" fg:x="1060" fg:w="2"/><text x="84.9822%" y="783.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="84.8122%" y="757" width="0.0799%" height="15" fill="rgb(235,148,18)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.8122%" y="741" width="0.0799%" height="15" fill="rgb(240,173,7)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8122%" y="725" width="0.0799%" height="15" fill="rgb(228,182,25)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8122%" y="709" width="0.0799%" height="15" fill="rgb(247,3,52)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8122%" y="693" width="0.0799%" height="15" fill="rgb(226,155,8)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.8122%" y="677" width="0.0799%" height="15" fill="rgb(243,195,38)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.8122%" y="661" width="0.0799%" height="15" fill="rgb(254,181,33)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.8122%" y="645" width="0.0799%" height="15" fill="rgb(232,98,23)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="84.8122%" y="629" width="0.0799%" height="15" fill="rgb(205,23,10)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="84.8122%" y="613" width="0.0799%" height="15" fill="rgb(212,124,38)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="84.8921%" y="773" width="0.0799%" height="15" fill="rgb(228,207,2)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.8921%" y="757" width="0.0799%" height="15" fill="rgb(215,120,22)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="84.8921%" y="741" width="0.0799%" height="15" fill="rgb(251,172,33)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="751.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="84.8921%" y="725" width="0.0799%" height="15" fill="rgb(250,83,2)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="84.8921%" y="709" width="0.0799%" height="15" fill="rgb(210,132,53)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.8921%" y="693" width="0.0799%" height="15" fill="rgb(221,208,36)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.8921%" y="677" width="0.0799%" height="15" fill="rgb(205,192,46)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="687.50"></text></g><g><title>engine::session::Session::flush (1 samples, 0.08%)</title><rect x="84.9720%" y="773" width="0.0799%" height="15" fill="rgb(223,163,14)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="783.50"></text></g><g><title>engine::session::Session::save_changes (1 samples, 0.08%)</title><rect x="84.9720%" y="757" width="0.0799%" height="15" fill="rgb(218,41,28)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="767.50"></text></g><g><title>engine::session::state::State::close (1 samples, 0.08%)</title><rect x="84.9720%" y="741" width="0.0799%" height="15" fill="rgb(235,104,10)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="751.50"></text></g><g><title>engine::session::state::State::flush_entities (1 samples, 0.08%)</title><rect x="84.9720%" y="725" width="0.0799%" height="15" fill="rgb(246,17,4)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="735.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (1 samples, 0.08%)</title><rect x="84.9720%" y="709" width="0.0799%" height="15" fill="rgb(240,7,16)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="719.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (1 samples, 0.08%)</title><rect x="84.9720%" y="693" width="0.0799%" height="15" fill="rgb(213,160,23)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="703.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="84.9720%" y="677" width="0.0799%" height="15" fill="rgb(251,179,49)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="84.9720%" y="661" width="0.0799%" height="15" fill="rgb(247,198,10)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.9720%" y="645" width="0.0799%" height="15" fill="rgb(220,65,29)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.9720%" y="629" width="0.0799%" height="15" fill="rgb(237,171,28)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (2 samples, 0.16%)</title><rect x="85.0520%" y="773" width="0.1599%" height="15" fill="rgb(228,44,26)" fg:x="1064" fg:w="2"/><text x="85.3020%" y="783.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="85.1319%" y="757" width="0.0799%" height="15" fill="rgb(216,210,27)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="767.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="85.1319%" y="741" width="0.0799%" height="15" fill="rgb(252,10,17)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.1319%" y="725" width="0.0799%" height="15" fill="rgb(214,172,30)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="735.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="85.1319%" y="709" width="0.0799%" height="15" fill="rgb(253,130,48)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.1319%" y="693" width="0.0799%" height="15" fill="rgb(226,99,43)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="85.2118%" y="757" width="0.0799%" height="15" fill="rgb(239,111,26)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="85.2118%" y="741" width="0.0799%" height="15" fill="rgb(240,27,53)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="85.2118%" y="725" width="0.0799%" height="15" fill="rgb(254,163,12)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="85.2118%" y="709" width="0.0799%" height="15" fill="rgb(225,51,48)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.2118%" y="693" width="0.0799%" height="15" fill="rgb(205,19,32)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.2118%" y="677" width="0.0799%" height="15" fill="rgb(218,119,26)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2118%" y="661" width="0.0799%" height="15" fill="rgb(231,173,33)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2118%" y="645" width="0.0799%" height="15" fill="rgb(241,100,29)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.2118%" y="629" width="0.0799%" height="15" fill="rgb(250,194,34)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2118%" y="613" width="0.0799%" height="15" fill="rgb(215,23,50)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2118%" y="597" width="0.0799%" height="15" fill="rgb(206,49,37)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="607.50"></text></g><g><title>plugins_core::build::Build::occupying (2 samples, 0.16%)</title><rect x="85.2118%" y="773" width="0.1599%" height="15" fill="rgb(247,39,21)" fg:x="1066" fg:w="2"/><text x="85.4618%" y="783.50"></text></g><g><title>plugins_core::tools::set_occupying (1 samples, 0.08%)</title><rect x="85.2918%" y="757" width="0.0799%" height="15" fill="rgb(209,220,15)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="767.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="85.2918%" y="741" width="0.0799%" height="15" fill="rgb(206,41,33)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="85.2918%" y="725" width="0.0799%" height="15" fill="rgb(221,225,45)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.2918%" y="709" width="0.0799%" height="15" fill="rgb(216,27,18)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.2918%" y="693" width="0.0799%" height="15" fill="rgb(250,193,34)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.2918%" y="677" width="0.0799%" height="15" fill="rgb(227,215,20)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (7 samples, 0.56%)</title><rect x="84.8921%" y="789" width="0.5596%" height="15" fill="rgb(242,211,27)" fg:x="1062" fg:w="7"/><text x="85.1421%" y="799.50"></text></g><g><title>plugins_core::build::Build::wearing (1 samples, 0.08%)</title><rect x="85.3717%" y="773" width="0.0799%" height="15" fill="rgb(229,190,30)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="85.3717%" y="757" width="0.0799%" height="15" fill="rgb(253,31,29)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.3717%" y="741" width="0.0799%" height="15" fill="rgb(229,177,52)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.3717%" y="725" width="0.0799%" height="15" fill="rgb(226,88,8)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3717%" y="709" width="0.0799%" height="15" fill="rgb(214,55,27)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3717%" y="693" width="0.0799%" height="15" fill="rgb(233,202,5)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.3717%" y="677" width="0.0799%" height="15" fill="rgb(251,49,30)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3717%" y="661" width="0.0799%" height="15" fill="rgb(235,18,52)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3717%" y="645" width="0.0799%" height="15" fill="rgb(250,111,51)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3717%" y="629" width="0.0799%" height="15" fill="rgb(218,13,25)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.3717%" y="613" width="0.0799%" height="15" fill="rgb(248,96,7)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="623.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (78 samples, 6.24%)</title><rect x="79.2966%" y="805" width="6.2350%" height="15" fill="rgb(217,31,15)" fg:x="992" fg:w="78"/><text x="79.5466%" y="815.50">&lt;tests::..</text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="85.4516%" y="789" width="0.0799%" height="15" fill="rgb(228,59,49)" fg:x="1069" fg:w="1"/><text x="85.7016%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="85.4516%" y="773" width="0.0799%" height="15" fill="rgb(210,152,38)" fg:x="1069" fg:w="1"/><text x="85.7016%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.4516%" y="757" width="0.0799%" height="15" fill="rgb(206,71,11)" fg:x="1069" fg:w="1"/><text x="85.7016%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.4516%" y="741" width="0.0799%" height="15" fill="rgb(244,199,5)" fg:x="1069" fg:w="1"/><text x="85.7016%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.4516%" y="725" width="0.0799%" height="15" fill="rgb(253,49,1)" fg:x="1069" fg:w="1"/><text x="85.7016%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4516%" y="709" width="0.0799%" height="15" fill="rgb(225,206,40)" fg:x="1069" fg:w="1"/><text x="85.7016%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="85.5316%" y="805" width="0.0799%" height="15" fill="rgb(243,116,47)" fg:x="1070" fg:w="1"/><text x="85.7816%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="85.5316%" y="789" width="0.0799%" height="15" fill="rgb(219,225,16)" fg:x="1070" fg:w="1"/><text x="85.7816%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="85.5316%" y="773" width="0.0799%" height="15" fill="rgb(233,29,47)" fg:x="1070" fg:w="1"/><text x="85.7816%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.5316%" y="757" width="0.0799%" height="15" fill="rgb(250,179,18)" fg:x="1070" fg:w="1"/><text x="85.7816%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5316%" y="741" width="0.0799%" height="15" fill="rgb(215,176,6)" fg:x="1070" fg:w="1"/><text x="85.7816%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="85.6115%" y="789" width="0.0799%" height="15" fill="rgb(214,117,39)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6115%" y="773" width="0.0799%" height="15" fill="rgb(247,183,36)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.6115%" y="757" width="0.0799%" height="15" fill="rgb(237,200,3)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="767.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.7714%" y="693" width="0.0799%" height="15" fill="rgb(212,220,24)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.7714%" y="677" width="0.0799%" height="15" fill="rgb(245,216,20)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.7714%" y="661" width="0.0799%" height="15" fill="rgb(219,124,7)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="85.7714%" y="645" width="0.0799%" height="15" fill="rgb(227,167,8)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="85.8513%" y="661" width="0.1599%" height="15" fill="rgb(241,37,2)" fg:x="1074" fg:w="2"/><text x="86.1013%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.9313%" y="645" width="0.0799%" height="15" fill="rgb(238,134,33)" fg:x="1075" fg:w="1"/><text x="86.1813%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.9313%" y="629" width="0.0799%" height="15" fill="rgb(248,48,27)" fg:x="1075" fg:w="1"/><text x="86.1813%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.9313%" y="613" width="0.0799%" height="15" fill="rgb(212,14,16)" fg:x="1075" fg:w="1"/><text x="86.1813%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="85.8513%" y="693" width="0.2398%" height="15" fill="rgb(217,205,37)" fg:x="1074" fg:w="3"/><text x="86.1013%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="85.8513%" y="677" width="0.2398%" height="15" fill="rgb(233,185,47)" fg:x="1074" fg:w="3"/><text x="86.1013%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.0112%" y="661" width="0.0799%" height="15" fill="rgb(244,88,8)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.0112%" y="645" width="0.0799%" height="15" fill="rgb(213,0,20)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.0112%" y="629" width="0.0799%" height="15" fill="rgb(238,159,36)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.48%)</title><rect x="85.6914%" y="725" width="0.4796%" height="15" fill="rgb(253,173,17)" fg:x="1072" fg:w="6"/><text x="85.9414%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="85.6914%" y="709" width="0.4796%" height="15" fill="rgb(221,23,28)" fg:x="1072" fg:w="6"/><text x="85.9414%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.0911%" y="693" width="0.0799%" height="15" fill="rgb(218,113,15)" fg:x="1077" fg:w="1"/><text x="86.3411%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.0911%" y="677" width="0.0799%" height="15" fill="rgb(233,58,3)" fg:x="1077" fg:w="1"/><text x="86.3411%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.0911%" y="661" width="0.0799%" height="15" fill="rgb(250,46,35)" fg:x="1077" fg:w="1"/><text x="86.3411%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.0911%" y="645" width="0.0799%" height="15" fill="rgb(210,169,11)" fg:x="1077" fg:w="1"/><text x="86.3411%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.0911%" y="629" width="0.0799%" height="15" fill="rgb(246,88,19)" fg:x="1077" fg:w="1"/><text x="86.3411%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.0911%" y="613" width="0.0799%" height="15" fill="rgb(206,81,49)" fg:x="1077" fg:w="1"/><text x="86.3411%" y="623.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="86.1711%" y="709" width="0.2398%" height="15" fill="rgb(232,144,18)" fg:x="1078" fg:w="3"/><text x="86.4211%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.1711%" y="693" width="0.2398%" height="15" fill="rgb(235,2,27)" fg:x="1078" fg:w="3"/><text x="86.4211%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="86.1711%" y="677" width="0.2398%" height="15" fill="rgb(239,157,39)" fg:x="1078" fg:w="3"/><text x="86.4211%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.1711%" y="661" width="0.2398%" height="15" fill="rgb(220,11,17)" fg:x="1078" fg:w="3"/><text x="86.4211%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.1711%" y="645" width="0.2398%" height="15" fill="rgb(243,94,50)" fg:x="1078" fg:w="3"/><text x="86.4211%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="86.1711%" y="629" width="0.2398%" height="15" fill="rgb(218,22,0)" fg:x="1078" fg:w="3"/><text x="86.4211%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="86.2510%" y="613" width="0.1599%" height="15" fill="rgb(249,70,21)" fg:x="1079" fg:w="2"/><text x="86.5010%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="86.4109%" y="709" width="0.1599%" height="15" fill="rgb(245,111,46)" fg:x="1081" fg:w="2"/><text x="86.6609%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="86.4109%" y="693" width="0.1599%" height="15" fill="rgb(244,183,12)" fg:x="1081" fg:w="2"/><text x="86.6609%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="86.4109%" y="677" width="0.1599%" height="15" fill="rgb(207,117,0)" fg:x="1081" fg:w="2"/><text x="86.6609%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="86.4109%" y="661" width="0.1599%" height="15" fill="rgb(206,20,43)" fg:x="1081" fg:w="2"/><text x="86.6609%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="86.4109%" y="645" width="0.1599%" height="15" fill="rgb(221,104,11)" fg:x="1081" fg:w="2"/><text x="86.6609%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="86.4109%" y="629" width="0.1599%" height="15" fill="rgb(254,36,50)" fg:x="1081" fg:w="2"/><text x="86.6609%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.4908%" y="613" width="0.0799%" height="15" fill="rgb(252,17,15)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="86.5707%" y="645" width="0.0799%" height="15" fill="rgb(219,129,43)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.5707%" y="629" width="0.0799%" height="15" fill="rgb(205,34,45)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="86.5707%" y="613" width="0.0799%" height="15" fill="rgb(251,201,32)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="623.50"></text></g><g><title>engine::session::Session::close (14 samples, 1.12%)</title><rect x="85.6115%" y="805" width="1.1191%" height="15" fill="rgb(205,56,0)" fg:x="1071" fg:w="14"/><text x="85.8615%" y="815.50"></text></g><g><title>engine::session::state::State::close (13 samples, 1.04%)</title><rect x="85.6914%" y="789" width="1.0392%" height="15" fill="rgb(211,193,27)" fg:x="1072" fg:w="13"/><text x="85.9414%" y="799.50"></text></g><g><title>engine::session::state::State::flush_entities (13 samples, 1.04%)</title><rect x="85.6914%" y="773" width="1.0392%" height="15" fill="rgb(231,100,42)" fg:x="1072" fg:w="13"/><text x="85.9414%" y="783.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (13 samples, 1.04%)</title><rect x="85.6914%" y="757" width="1.0392%" height="15" fill="rgb(245,85,27)" fg:x="1072" fg:w="13"/><text x="85.9414%" y="767.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (13 samples, 1.04%)</title><rect x="85.6914%" y="741" width="1.0392%" height="15" fill="rgb(241,76,24)" fg:x="1072" fg:w="13"/><text x="85.9414%" y="751.50"></text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.56%)</title><rect x="86.1711%" y="725" width="0.5596%" height="15" fill="rgb(249,157,15)" fg:x="1078" fg:w="7"/><text x="86.4211%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="86.5707%" y="709" width="0.1599%" height="15" fill="rgb(222,218,25)" fg:x="1083" fg:w="2"/><text x="86.8207%" y="719.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="86.5707%" y="693" width="0.1599%" height="15" fill="rgb(252,156,52)" fg:x="1083" fg:w="2"/><text x="86.8207%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="86.5707%" y="677" width="0.1599%" height="15" fill="rgb(211,185,7)" fg:x="1083" fg:w="2"/><text x="86.8207%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="86.5707%" y="661" width="0.1599%" height="15" fill="rgb(234,108,24)" fg:x="1083" fg:w="2"/><text x="86.8207%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.6507%" y="645" width="0.0799%" height="15" fill="rgb(227,218,2)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="86.6507%" y="629" width="0.0799%" height="15" fill="rgb(224,0,36)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.8905%" y="693" width="0.0799%" height="15" fill="rgb(233,201,10)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.8905%" y="677" width="0.0799%" height="15" fill="rgb(252,209,14)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.8905%" y="661" width="0.0799%" height="15" fill="rgb(205,93,49)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.8905%" y="645" width="0.0799%" height="15" fill="rgb(234,116,45)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.8905%" y="629" width="0.0799%" height="15" fill="rgb(248,89,35)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.8905%" y="613" width="0.0799%" height="15" fill="rgb(233,167,45)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.8905%" y="597" width="0.0799%" height="15" fill="rgb(248,228,14)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.8905%" y="581" width="0.0799%" height="15" fill="rgb(246,91,14)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.8905%" y="565" width="0.0799%" height="15" fill="rgb(227,142,5)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.8905%" y="549" width="0.0799%" height="15" fill="rgb(221,63,33)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.8905%" y="533" width="0.0799%" height="15" fill="rgb(233,49,0)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.8905%" y="517" width="0.0799%" height="15" fill="rgb(251,115,38)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.8905%" y="501" width="0.0799%" height="15" fill="rgb(231,214,32)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="87.3701%" y="613" width="0.0799%" height="15" fill="rgb(248,73,46)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3701%" y="597" width="0.0799%" height="15" fill="rgb(237,156,4)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3701%" y="581" width="0.0799%" height="15" fill="rgb(227,132,2)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.3701%" y="565" width="0.0799%" height="15" fill="rgb(248,161,9)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.3701%" y="549" width="0.0799%" height="15" fill="rgb(238,77,38)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.3701%" y="533" width="0.0799%" height="15" fill="rgb(222,166,40)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.3701%" y="517" width="0.0799%" height="15" fill="rgb(214,168,45)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.3701%" y="501" width="0.0799%" height="15" fill="rgb(226,64,37)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.3701%" y="485" width="0.0799%" height="15" fill="rgb(232,210,43)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.3701%" y="469" width="0.0799%" height="15" fill="rgb(214,76,33)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.3701%" y="453" width="0.0799%" height="15" fill="rgb(210,78,5)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.3701%" y="437" width="0.0799%" height="15" fill="rgb(211,107,37)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.3701%" y="421" width="0.0799%" height="15" fill="rgb(249,67,16)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.5300%" y="597" width="0.0799%" height="15" fill="rgb(222,114,31)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.5300%" y="581" width="0.0799%" height="15" fill="rgb(242,118,19)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.5300%" y="565" width="0.0799%" height="15" fill="rgb(223,115,1)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.5300%" y="549" width="0.0799%" height="15" fill="rgb(241,182,54)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.5300%" y="533" width="0.0799%" height="15" fill="rgb(244,166,36)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.5300%" y="517" width="0.0799%" height="15" fill="rgb(241,52,43)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.5300%" y="501" width="0.0799%" height="15" fill="rgb(236,82,9)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.5300%" y="485" width="0.0799%" height="15" fill="rgb(241,119,0)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.5300%" y="469" width="0.0799%" height="15" fill="rgb(221,19,22)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.5300%" y="453" width="0.0799%" height="15" fill="rgb(254,144,35)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.5300%" y="437" width="0.0799%" height="15" fill="rgb(246,132,30)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.5300%" y="421" width="0.0799%" height="15" fill="rgb(234,69,28)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.6099%" y="469" width="0.0799%" height="15" fill="rgb(219,106,47)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="87.6099%" y="565" width="0.1599%" height="15" fill="rgb(218,79,24)" fg:x="1096" fg:w="2"/><text x="87.8599%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.6099%" y="549" width="0.1599%" height="15" fill="rgb(225,26,21)" fg:x="1096" fg:w="2"/><text x="87.8599%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.6099%" y="533" width="0.1599%" height="15" fill="rgb(217,68,49)" fg:x="1096" fg:w="2"/><text x="87.8599%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.6099%" y="517" width="0.1599%" height="15" fill="rgb(220,204,28)" fg:x="1096" fg:w="2"/><text x="87.8599%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="87.6099%" y="501" width="0.1599%" height="15" fill="rgb(237,208,43)" fg:x="1096" fg:w="2"/><text x="87.8599%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.6099%" y="485" width="0.1599%" height="15" fill="rgb(213,97,42)" fg:x="1096" fg:w="2"/><text x="87.8599%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.6898%" y="469" width="0.0799%" height="15" fill="rgb(238,96,52)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6898%" y="453" width="0.0799%" height="15" fill="rgb(228,14,13)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="87.6099%" y="597" width="0.2398%" height="15" fill="rgb(219,123,13)" fg:x="1096" fg:w="3"/><text x="87.8599%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="87.6099%" y="581" width="0.2398%" height="15" fill="rgb(216,144,17)" fg:x="1096" fg:w="3"/><text x="87.8599%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.7698%" y="565" width="0.0799%" height="15" fill="rgb(230,228,29)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="575.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="87.7698%" y="549" width="0.0799%" height="15" fill="rgb(233,18,5)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.7698%" y="533" width="0.0799%" height="15" fill="rgb(233,197,12)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.7698%" y="517" width="0.0799%" height="15" fill="rgb(234,140,29)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.7698%" y="501" width="0.0799%" height="15" fill="rgb(233,113,19)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.7698%" y="485" width="0.0799%" height="15" fill="rgb(246,209,13)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.7698%" y="469" width="0.0799%" height="15" fill="rgb(242,79,54)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.7698%" y="453" width="0.0799%" height="15" fill="rgb(219,73,16)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.7698%" y="437" width="0.0799%" height="15" fill="rgb(224,52,10)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.7698%" y="421" width="0.0799%" height="15" fill="rgb(237,179,5)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.7698%" y="405" width="0.0799%" height="15" fill="rgb(231,20,6)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.7698%" y="389" width="0.0799%" height="15" fill="rgb(253,171,45)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.7698%" y="373" width="0.0799%" height="15" fill="rgb(230,75,49)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.7698%" y="357" width="0.0799%" height="15" fill="rgb(216,83,46)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.8497%" y="533" width="0.0799%" height="15" fill="rgb(236,56,9)" fg:x="1099" fg:w="1"/><text x="88.0997%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="87.8497%" y="517" width="0.0799%" height="15" fill="rgb(215,28,34)" fg:x="1099" fg:w="1"/><text x="88.0997%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.9297%" y="501" width="0.0799%" height="15" fill="rgb(230,222,20)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="87.9297%" y="485" width="0.0799%" height="15" fill="rgb(235,209,51)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.0096%" y="501" width="0.0799%" height="15" fill="rgb(235,167,1)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.0096%" y="485" width="0.0799%" height="15" fill="rgb(248,220,0)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0096%" y="469" width="0.0799%" height="15" fill="rgb(239,0,18)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="88.1695%" y="469" width="0.0799%" height="15" fill="rgb(229,179,11)" fg:x="1103" fg:w="1"/><text x="88.4195%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="88.1695%" y="453" width="0.0799%" height="15" fill="rgb(226,116,53)" fg:x="1103" fg:w="1"/><text x="88.4195%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2494%" y="469" width="0.0799%" height="15" fill="rgb(218,1,49)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2494%" y="453" width="0.0799%" height="15" fill="rgb(208,184,47)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="88.2494%" y="437" width="0.0799%" height="15" fill="rgb(238,174,3)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.4093%" y="437" width="0.0799%" height="15" fill="rgb(247,188,6)" fg:x="1106" fg:w="1"/><text x="88.6593%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.4093%" y="421" width="0.0799%" height="15" fill="rgb(211,165,46)" fg:x="1106" fg:w="1"/><text x="88.6593%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4093%" y="405" width="0.0799%" height="15" fill="rgb(222,190,10)" fg:x="1106" fg:w="1"/><text x="88.6593%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="88.5691%" y="405" width="0.0799%" height="15" fill="rgb(206,185,3)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.5691%" y="389" width="0.0799%" height="15" fill="rgb(244,125,37)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="88.3293%" y="453" width="0.3997%" height="15" fill="rgb(211,43,7)" fg:x="1105" fg:w="5"/><text x="88.5793%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="88.4892%" y="437" width="0.2398%" height="15" fill="rgb(250,41,42)" fg:x="1107" fg:w="3"/><text x="88.7392%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.5691%" y="421" width="0.1599%" height="15" fill="rgb(254,54,42)" fg:x="1108" fg:w="2"/><text x="88.8191%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.6491%" y="405" width="0.0799%" height="15" fill="rgb(213,71,43)" fg:x="1109" fg:w="1"/><text x="88.8991%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="88.6491%" y="389" width="0.0799%" height="15" fill="rgb(249,3,44)" fg:x="1109" fg:w="1"/><text x="88.8991%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.8090%" y="421" width="0.1599%" height="15" fill="rgb(229,80,41)" fg:x="1111" fg:w="2"/><text x="89.0590%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.8090%" y="405" width="0.1599%" height="15" fill="rgb(231,25,28)" fg:x="1111" fg:w="2"/><text x="89.0590%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.8889%" y="389" width="0.0799%" height="15" fill="rgb(208,79,48)" fg:x="1112" fg:w="1"/><text x="89.1389%" y="399.50"></text></g><g><title>serde_json::de::from_trait (15 samples, 1.20%)</title><rect x="87.8497%" y="581" width="1.1990%" height="15" fill="rgb(207,196,38)" fg:x="1099" fg:w="15"/><text x="88.0997%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15 samples, 1.20%)</title><rect x="87.8497%" y="565" width="1.1990%" height="15" fill="rgb(228,105,49)" fg:x="1099" fg:w="15"/><text x="88.0997%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.20%)</title><rect x="87.8497%" y="549" width="1.1990%" height="15" fill="rgb(237,99,15)" fg:x="1099" fg:w="15"/><text x="88.0997%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.12%)</title><rect x="87.9297%" y="533" width="1.1191%" height="15" fill="rgb(224,207,46)" fg:x="1100" fg:w="14"/><text x="88.1797%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="87.9297%" y="517" width="1.1191%" height="15" fill="rgb(249,117,50)" fg:x="1100" fg:w="14"/><text x="88.1797%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="88.0895%" y="501" width="0.9592%" height="15" fill="rgb(248,17,13)" fg:x="1102" fg:w="12"/><text x="88.3395%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="88.0895%" y="485" width="0.9592%" height="15" fill="rgb(228,187,36)" fg:x="1102" fg:w="12"/><text x="88.3395%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="88.3293%" y="469" width="0.7194%" height="15" fill="rgb(234,132,20)" fg:x="1105" fg:w="9"/><text x="88.5793%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="88.7290%" y="453" width="0.3197%" height="15" fill="rgb(209,170,46)" fg:x="1110" fg:w="4"/><text x="88.9790%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="88.7290%" y="437" width="0.3197%" height="15" fill="rgb(237,23,19)" fg:x="1110" fg:w="4"/><text x="88.9790%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.9688%" y="421" width="0.0799%" height="15" fill="rgb(227,21,26)" fg:x="1113" fg:w="1"/><text x="89.2188%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="89.3685%" y="469" width="0.1599%" height="15" fill="rgb(222,220,48)" fg:x="1118" fg:w="2"/><text x="89.6185%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="89.3685%" y="453" width="0.1599%" height="15" fill="rgb(214,9,16)" fg:x="1118" fg:w="2"/><text x="89.6185%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="89.3685%" y="437" width="0.1599%" height="15" fill="rgb(209,73,30)" fg:x="1118" fg:w="2"/><text x="89.6185%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="89.3685%" y="421" width="0.1599%" height="15" fill="rgb(207,20,33)" fg:x="1118" fg:w="2"/><text x="89.6185%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="89.3685%" y="405" width="0.1599%" height="15" fill="rgb(219,153,12)" fg:x="1118" fg:w="2"/><text x="89.6185%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.4484%" y="389" width="0.0799%" height="15" fill="rgb(235,97,25)" fg:x="1119" fg:w="1"/><text x="89.6984%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4484%" y="373" width="0.0799%" height="15" fill="rgb(244,30,34)" fg:x="1119" fg:w="1"/><text x="89.6984%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="89.2886%" y="501" width="0.3197%" height="15" fill="rgb(214,106,45)" fg:x="1117" fg:w="4"/><text x="89.5386%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="89.3685%" y="485" width="0.2398%" height="15" fill="rgb(226,41,9)" fg:x="1118" fg:w="3"/><text x="89.6185%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5284%" y="469" width="0.0799%" height="15" fill="rgb(253,139,29)" fg:x="1120" fg:w="1"/><text x="89.7784%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5284%" y="453" width="0.0799%" height="15" fill="rgb(213,205,39)" fg:x="1120" fg:w="1"/><text x="89.7784%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.5284%" y="437" width="0.0799%" height="15" fill="rgb(209,27,10)" fg:x="1120" fg:w="1"/><text x="89.7784%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="89.6083%" y="501" width="0.1599%" height="15" fill="rgb(249,142,16)" fg:x="1121" fg:w="2"/><text x="89.8583%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="89.6083%" y="485" width="0.1599%" height="15" fill="rgb(242,65,12)" fg:x="1121" fg:w="2"/><text x="89.8583%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="89.6083%" y="469" width="0.1599%" height="15" fill="rgb(232,48,10)" fg:x="1121" fg:w="2"/><text x="89.8583%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6882%" y="453" width="0.0799%" height="15" fill="rgb(253,67,19)" fg:x="1122" fg:w="1"/><text x="89.9382%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="89.7682%" y="453" width="0.0799%" height="15" fill="rgb(227,93,29)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="89.2886%" y="549" width="0.6395%" height="15" fill="rgb(226,189,53)" fg:x="1117" fg:w="8"/><text x="89.5386%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="89.2886%" y="533" width="0.6395%" height="15" fill="rgb(223,224,1)" fg:x="1117" fg:w="8"/><text x="89.5386%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="89.2886%" y="517" width="0.6395%" height="15" fill="rgb(221,84,32)" fg:x="1117" fg:w="8"/><text x="89.5386%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.7682%" y="501" width="0.1599%" height="15" fill="rgb(214,189,28)" fg:x="1123" fg:w="2"/><text x="90.0182%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="89.7682%" y="485" width="0.1599%" height="15" fill="rgb(234,7,52)" fg:x="1123" fg:w="2"/><text x="90.0182%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="89.7682%" y="469" width="0.1599%" height="15" fill="rgb(249,73,31)" fg:x="1123" fg:w="2"/><text x="90.0182%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8481%" y="453" width="0.0799%" height="15" fill="rgb(253,153,41)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.8481%" y="437" width="0.0799%" height="15" fill="rgb(249,52,34)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="89.8481%" y="421" width="0.0799%" height="15" fill="rgb(236,177,47)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8481%" y="405" width="0.0799%" height="15" fill="rgb(252,185,45)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.8481%" y="389" width="0.0799%" height="15" fill="rgb(251,15,30)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.8481%" y="373" width="0.0799%" height="15" fill="rgb(233,31,4)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (27 samples, 2.16%)</title><rect x="87.8497%" y="597" width="2.1583%" height="15" fill="rgb(254,44,24)" fg:x="1099" fg:w="27"/><text x="88.0997%" y="607.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.96%)</title><rect x="89.0488%" y="581" width="0.9592%" height="15" fill="rgb(218,54,1)" fg:x="1114" fg:w="12"/><text x="89.2988%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="89.0488%" y="565" width="0.9592%" height="15" fill="rgb(243,209,39)" fg:x="1114" fg:w="12"/><text x="89.2988%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.9281%" y="549" width="0.0799%" height="15" fill="rgb(206,75,33)" fg:x="1125" fg:w="1"/><text x="90.1781%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (34 samples, 2.72%)</title><rect x="87.3701%" y="629" width="2.7178%" height="15" fill="rgb(223,108,18)" fg:x="1093" fg:w="34"/><text x="87.6201%" y="639.50">&lt;e..</text></g><g><title>engine::session::internal::Entities::add_persisted (33 samples, 2.64%)</title><rect x="87.4500%" y="613" width="2.6379%" height="15" fill="rgb(244,89,31)" fg:x="1094" fg:w="33"/><text x="87.7000%" y="623.50">en..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.0080%" y="597" width="0.0799%" height="15" fill="rgb(222,167,27)" fg:x="1126" fg:w="1"/><text x="90.2580%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.0080%" y="581" width="0.0799%" height="15" fill="rgb(247,41,16)" fg:x="1126" fg:w="1"/><text x="90.2580%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.0080%" y="565" width="0.0799%" height="15" fill="rgb(233,168,40)" fg:x="1126" fg:w="1"/><text x="90.2580%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0080%" y="549" width="0.0799%" height="15" fill="rgb(205,211,8)" fg:x="1126" fg:w="1"/><text x="90.2580%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.0080%" y="533" width="0.0799%" height="15" fill="rgb(238,105,11)" fg:x="1126" fg:w="1"/><text x="90.2580%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0080%" y="517" width="0.0799%" height="15" fill="rgb(223,142,52)" fg:x="1126" fg:w="1"/><text x="90.2580%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (37 samples, 2.96%)</title><rect x="87.2102%" y="645" width="2.9576%" height="15" fill="rgb(238,51,33)" fg:x="1091" fg:w="37"/><text x="87.4602%" y="655.50">&lt;en..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="90.0879%" y="629" width="0.0799%" height="15" fill="rgb(231,188,43)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0879%" y="613" width="0.0799%" height="15" fill="rgb(216,92,17)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0879%" y="597" width="0.0799%" height="15" fill="rgb(228,2,40)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.0879%" y="581" width="0.0799%" height="15" fill="rgb(226,73,15)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.0879%" y="565" width="0.0799%" height="15" fill="rgb(227,66,46)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.0879%" y="549" width="0.0799%" height="15" fill="rgb(209,71,6)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.0879%" y="533" width="0.0799%" height="15" fill="rgb(246,100,25)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.0879%" y="517" width="0.0799%" height="15" fill="rgb(248,185,27)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.0879%" y="501" width="0.0799%" height="15" fill="rgb(225,118,47)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="90.0879%" y="485" width="0.0799%" height="15" fill="rgb(220,185,44)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="90.0879%" y="469" width="0.0799%" height="15" fill="rgb(227,95,24)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.1679%" y="645" width="0.1599%" height="15" fill="rgb(252,84,24)" fg:x="1128" fg:w="2"/><text x="90.4179%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.1679%" y="629" width="0.1599%" height="15" fill="rgb(240,34,44)" fg:x="1128" fg:w="2"/><text x="90.4179%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.1679%" y="613" width="0.1599%" height="15" fill="rgb(209,72,54)" fg:x="1128" fg:w="2"/><text x="90.4179%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2478%" y="597" width="0.0799%" height="15" fill="rgb(226,19,45)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2478%" y="581" width="0.0799%" height="15" fill="rgb(246,7,45)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.2478%" y="565" width="0.0799%" height="15" fill="rgb(225,45,2)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.2478%" y="549" width="0.0799%" height="15" fill="rgb(221,80,29)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.2478%" y="533" width="0.0799%" height="15" fill="rgb(228,11,19)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.2478%" y="517" width="0.0799%" height="15" fill="rgb(243,17,21)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.2478%" y="501" width="0.0799%" height="15" fill="rgb(243,88,8)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.2478%" y="485" width="0.0799%" height="15" fill="rgb(214,17,9)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.2478%" y="469" width="0.0799%" height="15" fill="rgb(232,169,15)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.2478%" y="453" width="0.0799%" height="15" fill="rgb(232,86,53)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.2478%" y="437" width="0.0799%" height="15" fill="rgb(222,100,4)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2478%" y="421" width="0.0799%" height="15" fill="rgb(253,151,38)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="90.3277%" y="645" width="0.1599%" height="15" fill="rgb(238,215,29)" fg:x="1130" fg:w="2"/><text x="90.5777%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.4876%" y="613" width="0.0799%" height="15" fill="rgb(205,128,53)" fg:x="1132" fg:w="1"/><text x="90.7376%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.6475%" y="581" width="0.0799%" height="15" fill="rgb(248,183,14)" fg:x="1134" fg:w="1"/><text x="90.8975%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (48 samples, 3.84%)</title><rect x="86.9704%" y="693" width="3.8369%" height="15" fill="rgb(244,172,35)" fg:x="1088" fg:w="48"/><text x="87.2204%" y="703.50">&lt;plu..</text></g><g><title>kernel::model::entry::Entry::scope (47 samples, 3.76%)</title><rect x="87.0504%" y="677" width="3.7570%" height="15" fill="rgb(234,93,19)" fg:x="1089" fg:w="47"/><text x="87.3004%" y="687.50">kern..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (47 samples, 3.76%)</title><rect x="87.0504%" y="661" width="3.7570%" height="15" fill="rgb(227,109,7)" fg:x="1089" fg:w="47"/><text x="87.3004%" y="671.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="90.4876%" y="645" width="0.3197%" height="15" fill="rgb(233,136,54)" fg:x="1132" fg:w="4"/><text x="90.7376%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="90.4876%" y="629" width="0.3197%" height="15" fill="rgb(233,19,40)" fg:x="1132" fg:w="4"/><text x="90.7376%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="90.5675%" y="613" width="0.2398%" height="15" fill="rgb(247,41,18)" fg:x="1133" fg:w="3"/><text x="90.8175%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="90.5675%" y="597" width="0.2398%" height="15" fill="rgb(220,34,34)" fg:x="1133" fg:w="3"/><text x="90.8175%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.7274%" y="581" width="0.0799%" height="15" fill="rgb(222,135,32)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="90.9672%" y="357" width="0.0799%" height="15" fill="rgb(214,80,19)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="90.9672%" y="341" width="0.0799%" height="15" fill="rgb(234,54,46)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="90.9672%" y="325" width="0.0799%" height="15" fill="rgb(251,48,23)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="90.9672%" y="309" width="0.0799%" height="15" fill="rgb(254,109,52)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.08%)</title><rect x="90.9672%" y="293" width="0.0799%" height="15" fill="rgb(240,186,19)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="303.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.32%)</title><rect x="90.8074%" y="677" width="0.3197%" height="15" fill="rgb(246,187,17)" fg:x="1136" fg:w="4"/><text x="91.0574%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="90.8873%" y="661" width="0.2398%" height="15" fill="rgb(212,21,5)" fg:x="1137" fg:w="3"/><text x="91.1373%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="90.9672%" y="645" width="0.1599%" height="15" fill="rgb(225,185,18)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="90.9672%" y="629" width="0.1599%" height="15" fill="rgb(245,114,17)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="90.9672%" y="613" width="0.1599%" height="15" fill="rgb(223,164,24)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="90.9672%" y="597" width="0.1599%" height="15" fill="rgb(211,228,3)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="90.9672%" y="581" width="0.1599%" height="15" fill="rgb(223,16,38)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="90.9672%" y="565" width="0.1599%" height="15" fill="rgb(207,31,54)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="90.9672%" y="549" width="0.1599%" height="15" fill="rgb(220,39,11)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="90.9672%" y="533" width="0.1599%" height="15" fill="rgb(235,185,0)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="90.9672%" y="517" width="0.1599%" height="15" fill="rgb(249,39,18)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="90.9672%" y="501" width="0.1599%" height="15" fill="rgb(240,110,33)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="90.9672%" y="485" width="0.1599%" height="15" fill="rgb(210,92,42)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="90.9672%" y="469" width="0.1599%" height="15" fill="rgb(218,215,28)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="90.9672%" y="453" width="0.1599%" height="15" fill="rgb(238,215,36)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="90.9672%" y="437" width="0.1599%" height="15" fill="rgb(220,31,10)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="447.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="90.9672%" y="421" width="0.1599%" height="15" fill="rgb(212,93,14)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="90.9672%" y="405" width="0.1599%" height="15" fill="rgb(254,207,2)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="90.9672%" y="389" width="0.1599%" height="15" fill="rgb(205,57,44)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="90.9672%" y="373" width="0.1599%" height="15" fill="rgb(226,151,19)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="91.0472%" y="357" width="0.0799%" height="15" fill="rgb(230,72,30)" fg:x="1139" fg:w="1"/><text x="91.2972%" y="367.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (55 samples, 4.40%)</title><rect x="86.8106%" y="709" width="4.3965%" height="15" fill="rgb(244,0,8)" fg:x="1086" fg:w="55"/><text x="87.0606%" y="719.50">&lt;engi..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (5 samples, 0.40%)</title><rect x="90.8074%" y="693" width="0.3997%" height="15" fill="rgb(230,192,6)" fg:x="1136" fg:w="5"/><text x="91.0574%" y="703.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="91.1271%" y="677" width="0.0799%" height="15" fill="rgb(233,207,13)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4468%" y="373" width="0.0799%" height="15" fill="rgb(206,227,7)" fg:x="1144" fg:w="1"/><text x="91.6968%" y="383.50"></text></g><g><title>kernel::surround::Surroundings::unpack (5 samples, 0.40%)</title><rect x="91.2070%" y="581" width="0.3997%" height="15" fill="rgb(213,217,25)" fg:x="1141" fg:w="5"/><text x="91.4570%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="91.2070%" y="565" width="0.3997%" height="15" fill="rgb(249,75,4)" fg:x="1141" fg:w="5"/><text x="91.4570%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.4468%" y="549" width="0.1599%" height="15" fill="rgb(225,114,18)" fg:x="1144" fg:w="2"/><text x="91.6968%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.4468%" y="533" width="0.1599%" height="15" fill="rgb(211,162,40)" fg:x="1144" fg:w="2"/><text x="91.6968%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="91.4468%" y="517" width="0.1599%" height="15" fill="rgb(206,49,29)" fg:x="1144" fg:w="2"/><text x="91.6968%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="91.4468%" y="501" width="0.1599%" height="15" fill="rgb(244,8,6)" fg:x="1144" fg:w="2"/><text x="91.6968%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="91.4468%" y="485" width="0.1599%" height="15" fill="rgb(231,194,28)" fg:x="1144" fg:w="2"/><text x="91.6968%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="91.4468%" y="469" width="0.1599%" height="15" fill="rgb(210,69,5)" fg:x="1144" fg:w="2"/><text x="91.6968%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="91.4468%" y="453" width="0.1599%" height="15" fill="rgb(216,186,12)" fg:x="1144" fg:w="2"/><text x="91.6968%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="91.4468%" y="437" width="0.1599%" height="15" fill="rgb(238,61,15)" fg:x="1144" fg:w="2"/><text x="91.6968%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="91.4468%" y="421" width="0.1599%" height="15" fill="rgb(226,104,1)" fg:x="1144" fg:w="2"/><text x="91.6968%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="91.4468%" y="405" width="0.1599%" height="15" fill="rgb(229,128,15)" fg:x="1144" fg:w="2"/><text x="91.6968%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="91.4468%" y="389" width="0.1599%" height="15" fill="rgb(247,110,15)" fg:x="1144" fg:w="2"/><text x="91.6968%" y="399.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="91.5268%" y="373" width="0.0799%" height="15" fill="rgb(210,74,48)" fg:x="1145" fg:w="1"/><text x="91.7768%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="91.5268%" y="357" width="0.0799%" height="15" fill="rgb(246,121,10)" fg:x="1145" fg:w="1"/><text x="91.7768%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.6867%" y="485" width="0.1599%" height="15" fill="rgb(214,156,37)" fg:x="1147" fg:w="2"/><text x="91.9367%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.6867%" y="469" width="0.1599%" height="15" fill="rgb(214,210,34)" fg:x="1147" fg:w="2"/><text x="91.9367%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="91.6067%" y="517" width="0.3197%" height="15" fill="rgb(237,93,35)" fg:x="1146" fg:w="4"/><text x="91.8567%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="91.6867%" y="501" width="0.2398%" height="15" fill="rgb(206,36,8)" fg:x="1147" fg:w="3"/><text x="91.9367%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.8465%" y="485" width="0.0799%" height="15" fill="rgb(208,151,12)" fg:x="1149" fg:w="1"/><text x="92.0965%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (5 samples, 0.40%)</title><rect x="91.6067%" y="549" width="0.3997%" height="15" fill="rgb(225,133,52)" fg:x="1146" fg:w="5"/><text x="91.8567%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="91.6067%" y="533" width="0.3997%" height="15" fill="rgb(231,71,53)" fg:x="1146" fg:w="5"/><text x="91.8567%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.9265%" y="517" width="0.0799%" height="15" fill="rgb(243,76,21)" fg:x="1150" fg:w="1"/><text x="92.1765%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9265%" y="501" width="0.0799%" height="15" fill="rgb(252,144,3)" fg:x="1150" fg:w="1"/><text x="92.1765%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.9265%" y="485" width="0.0799%" height="15" fill="rgb(231,199,10)" fg:x="1150" fg:w="1"/><text x="92.1765%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9265%" y="469" width="0.0799%" height="15" fill="rgb(215,18,11)" fg:x="1150" fg:w="1"/><text x="92.1765%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.9265%" y="453" width="0.0799%" height="15" fill="rgb(241,65,24)" fg:x="1150" fg:w="1"/><text x="92.1765%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9265%" y="437" width="0.0799%" height="15" fill="rgb(251,192,38)" fg:x="1150" fg:w="1"/><text x="92.1765%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.0863%" y="501" width="0.0799%" height="15" fill="rgb(205,9,35)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.0863%" y="485" width="0.0799%" height="15" fill="rgb(229,225,49)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.0863%" y="469" width="0.0799%" height="15" fill="rgb(207,125,39)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.0863%" y="453" width="0.0799%" height="15" fill="rgb(222,78,19)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.0863%" y="437" width="0.0799%" height="15" fill="rgb(248,207,20)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.0863%" y="421" width="0.0799%" height="15" fill="rgb(205,103,49)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.0863%" y="405" width="0.0799%" height="15" fill="rgb(216,42,28)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.0863%" y="389" width="0.0799%" height="15" fill="rgb(213,205,53)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.0863%" y="373" width="0.0799%" height="15" fill="rgb(239,140,53)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.0863%" y="357" width="0.0799%" height="15" fill="rgb(248,95,9)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.0863%" y="341" width="0.0799%" height="15" fill="rgb(254,58,47)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.0863%" y="325" width="0.0799%" height="15" fill="rgb(234,227,14)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.0863%" y="309" width="0.0799%" height="15" fill="rgb(205,192,45)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.0863%" y="293" width="0.0799%" height="15" fill="rgb(253,187,31)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="92.0064%" y="517" width="0.2398%" height="15" fill="rgb(222,6,32)" fg:x="1151" fg:w="3"/><text x="92.2564%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.1663%" y="501" width="0.0799%" height="15" fill="rgb(249,190,19)" fg:x="1153" fg:w="1"/><text x="92.4163%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.1663%" y="485" width="0.0799%" height="15" fill="rgb(251,28,20)" fg:x="1153" fg:w="1"/><text x="92.4163%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.1663%" y="469" width="0.0799%" height="15" fill="rgb(210,223,40)" fg:x="1153" fg:w="1"/><text x="92.4163%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.1663%" y="453" width="0.0799%" height="15" fill="rgb(216,137,22)" fg:x="1153" fg:w="1"/><text x="92.4163%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.1663%" y="437" width="0.0799%" height="15" fill="rgb(247,39,34)" fg:x="1153" fg:w="1"/><text x="92.4163%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.1663%" y="421" width="0.0799%" height="15" fill="rgb(239,43,50)" fg:x="1153" fg:w="1"/><text x="92.4163%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.1663%" y="405" width="0.0799%" height="15" fill="rgb(241,212,9)" fg:x="1153" fg:w="1"/><text x="92.4163%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="92.2462%" y="517" width="0.0799%" height="15" fill="rgb(205,8,2)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="92.2462%" y="501" width="0.0799%" height="15" fill="rgb(217,173,54)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.2462%" y="485" width="0.0799%" height="15" fill="rgb(208,149,52)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.2462%" y="469" width="0.0799%" height="15" fill="rgb(239,99,40)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.2462%" y="453" width="0.0799%" height="15" fill="rgb(233,214,26)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.3261%" y="453" width="0.0799%" height="15" fill="rgb(231,225,37)" fg:x="1155" fg:w="1"/><text x="92.5761%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.4061%" y="453" width="0.0799%" height="15" fill="rgb(252,55,35)" fg:x="1156" fg:w="1"/><text x="92.6561%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.4061%" y="437" width="0.0799%" height="15" fill="rgb(239,43,18)" fg:x="1156" fg:w="1"/><text x="92.6561%" y="447.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (12 samples, 0.96%)</title><rect x="91.6067%" y="565" width="0.9592%" height="15" fill="rgb(251,125,49)" fg:x="1146" fg:w="12"/><text x="91.8567%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="92.0064%" y="549" width="0.5596%" height="15" fill="rgb(212,83,54)" fg:x="1151" fg:w="7"/><text x="92.2564%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="92.0064%" y="533" width="0.5596%" height="15" fill="rgb(250,75,6)" fg:x="1151" fg:w="7"/><text x="92.2564%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="92.3261%" y="517" width="0.2398%" height="15" fill="rgb(252,36,40)" fg:x="1155" fg:w="3"/><text x="92.5761%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.3261%" y="501" width="0.2398%" height="15" fill="rgb(230,91,51)" fg:x="1155" fg:w="3"/><text x="92.5761%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="92.3261%" y="485" width="0.2398%" height="15" fill="rgb(212,92,28)" fg:x="1155" fg:w="3"/><text x="92.5761%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.3261%" y="469" width="0.2398%" height="15" fill="rgb(227,13,22)" fg:x="1155" fg:w="3"/><text x="92.5761%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.4860%" y="453" width="0.0799%" height="15" fill="rgb(239,204,32)" fg:x="1157" fg:w="1"/><text x="92.7360%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4860%" y="437" width="0.0799%" height="15" fill="rgb(228,49,41)" fg:x="1157" fg:w="1"/><text x="92.7360%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="92.5659%" y="565" width="0.1599%" height="15" fill="rgb(206,95,6)" fg:x="1158" fg:w="2"/><text x="92.8159%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="92.5659%" y="549" width="0.1599%" height="15" fill="rgb(251,20,14)" fg:x="1158" fg:w="2"/><text x="92.8159%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="92.6459%" y="533" width="0.0799%" height="15" fill="rgb(214,99,28)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="92.6459%" y="517" width="0.0799%" height="15" fill="rgb(239,122,54)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="92.6459%" y="501" width="0.0799%" height="15" fill="rgb(218,217,46)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.6459%" y="485" width="0.0799%" height="15" fill="rgb(249,106,28)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.6459%" y="469" width="0.0799%" height="15" fill="rgb(250,158,18)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="92.6459%" y="453" width="0.0799%" height="15" fill="rgb(226,137,29)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.6459%" y="437" width="0.0799%" height="15" fill="rgb(210,188,1)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.6459%" y="421" width="0.0799%" height="15" fill="rgb(227,84,42)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.6459%" y="405" width="0.0799%" height="15" fill="rgb(222,147,48)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="92.6459%" y="389" width="0.0799%" height="15" fill="rgb(241,150,43)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.6459%" y="373" width="0.0799%" height="15" fill="rgb(206,139,52)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.6459%" y="357" width="0.0799%" height="15" fill="rgb(230,63,14)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.6459%" y="341" width="0.0799%" height="15" fill="rgb(247,8,20)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="92.6459%" y="325" width="0.0799%" height="15" fill="rgb(213,115,4)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.6459%" y="309" width="0.0799%" height="15" fill="rgb(241,79,49)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.6459%" y="293" width="0.0799%" height="15" fill="rgb(222,42,35)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.6459%" y="277" width="0.0799%" height="15" fill="rgb(247,59,23)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.6459%" y="261" width="0.0799%" height="15" fill="rgb(247,93,18)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.6459%" y="245" width="0.0799%" height="15" fill="rgb(249,107,47)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="92.6459%" y="229" width="0.0799%" height="15" fill="rgb(219,27,1)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="92.6459%" y="213" width="0.0799%" height="15" fill="rgb(217,82,32)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="92.6459%" y="197" width="0.0799%" height="15" fill="rgb(250,129,47)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="92.6459%" y="181" width="0.0799%" height="15" fill="rgb(253,88,35)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="92.6459%" y="165" width="0.0799%" height="15" fill="rgb(245,221,14)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="92.6459%" y="149" width="0.0799%" height="15" fill="rgb(217,119,54)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.6459%" y="133" width="0.0799%" height="15" fill="rgb(247,128,31)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="92.6459%" y="117" width="0.0799%" height="15" fill="rgb(211,99,22)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.6459%" y="101" width="0.0799%" height="15" fill="rgb(212,20,17)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="92.6459%" y="85" width="0.0799%" height="15" fill="rgb(209,159,29)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="92.6459%" y="69" width="0.0799%" height="15" fill="rgb(222,177,53)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="92.6459%" y="53" width="0.0799%" height="15" fill="rgb(234,46,43)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="92.6459%" y="37" width="0.0799%" height="15" fill="rgb(208,108,14)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="47.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="92.7258%" y="565" width="0.0799%" height="15" fill="rgb(226,78,53)" fg:x="1160" fg:w="1"/><text x="92.9758%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.7258%" y="549" width="0.0799%" height="15" fill="rgb(230,20,41)" fg:x="1160" fg:w="1"/><text x="92.9758%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.7258%" y="533" width="0.0799%" height="15" fill="rgb(213,195,35)" fg:x="1160" fg:w="1"/><text x="92.9758%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.9656%" y="485" width="0.0799%" height="15" fill="rgb(242,62,36)" fg:x="1163" fg:w="1"/><text x="93.2156%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="92.8857%" y="533" width="0.2398%" height="15" fill="rgb(222,210,37)" fg:x="1162" fg:w="3"/><text x="93.1357%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="92.8857%" y="517" width="0.2398%" height="15" fill="rgb(232,107,19)" fg:x="1162" fg:w="3"/><text x="93.1357%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.9656%" y="501" width="0.1599%" height="15" fill="rgb(235,85,17)" fg:x="1163" fg:w="2"/><text x="93.2156%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0456%" y="485" width="0.0799%" height="15" fill="rgb(219,195,31)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1255%" y="373" width="0.0799%" height="15" fill="rgb(231,183,30)" fg:x="1165" fg:w="1"/><text x="93.3755%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.2054%" y="261" width="0.0799%" height="15" fill="rgb(212,0,11)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.2054%" y="245" width="0.0799%" height="15" fill="rgb(249,53,54)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.2054%" y="229" width="0.0799%" height="15" fill="rgb(211,118,13)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.2054%" y="213" width="0.0799%" height="15" fill="rgb(237,42,9)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="223.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="93.1255%" y="421" width="0.2398%" height="15" fill="rgb(227,68,32)" fg:x="1165" fg:w="3"/><text x="93.3755%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.1255%" y="405" width="0.2398%" height="15" fill="rgb(238,10,7)" fg:x="1165" fg:w="3"/><text x="93.3755%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.1255%" y="389" width="0.2398%" height="15" fill="rgb(224,42,12)" fg:x="1165" fg:w="3"/><text x="93.3755%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.2054%" y="373" width="0.1599%" height="15" fill="rgb(252,190,5)" fg:x="1166" fg:w="2"/><text x="93.4554%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.2054%" y="357" width="0.1599%" height="15" fill="rgb(220,214,39)" fg:x="1166" fg:w="2"/><text x="93.4554%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.2054%" y="341" width="0.1599%" height="15" fill="rgb(247,98,4)" fg:x="1166" fg:w="2"/><text x="93.4554%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.2054%" y="325" width="0.1599%" height="15" fill="rgb(211,60,12)" fg:x="1166" fg:w="2"/><text x="93.4554%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.2054%" y="309" width="0.1599%" height="15" fill="rgb(224,42,10)" fg:x="1166" fg:w="2"/><text x="93.4554%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.2054%" y="293" width="0.1599%" height="15" fill="rgb(217,167,4)" fg:x="1166" fg:w="2"/><text x="93.4554%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.2054%" y="277" width="0.1599%" height="15" fill="rgb(253,18,17)" fg:x="1166" fg:w="2"/><text x="93.4554%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.2854%" y="261" width="0.0799%" height="15" fill="rgb(249,186,44)" fg:x="1167" fg:w="1"/><text x="93.5354%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.3653%" y="341" width="0.0799%" height="15" fill="rgb(254,124,54)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.3653%" y="325" width="0.0799%" height="15" fill="rgb(220,124,39)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.3653%" y="309" width="0.0799%" height="15" fill="rgb(225,96,46)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.3653%" y="293" width="0.0799%" height="15" fill="rgb(221,106,12)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3653%" y="277" width="0.0799%" height="15" fill="rgb(227,133,23)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (6 samples, 0.48%)</title><rect x="93.1255%" y="533" width="0.4796%" height="15" fill="rgb(216,44,52)" fg:x="1165" fg:w="6"/><text x="93.3755%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="93.1255%" y="517" width="0.4796%" height="15" fill="rgb(239,149,7)" fg:x="1165" fg:w="6"/><text x="93.3755%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="93.1255%" y="501" width="0.4796%" height="15" fill="rgb(211,157,31)" fg:x="1165" fg:w="6"/><text x="93.3755%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.48%)</title><rect x="93.1255%" y="485" width="0.4796%" height="15" fill="rgb(206,215,22)" fg:x="1165" fg:w="6"/><text x="93.3755%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.48%)</title><rect x="93.1255%" y="469" width="0.4796%" height="15" fill="rgb(208,113,15)" fg:x="1165" fg:w="6"/><text x="93.3755%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="93.1255%" y="453" width="0.4796%" height="15" fill="rgb(207,189,15)" fg:x="1165" fg:w="6"/><text x="93.3755%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="93.1255%" y="437" width="0.4796%" height="15" fill="rgb(231,115,4)" fg:x="1165" fg:w="6"/><text x="93.3755%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.3653%" y="421" width="0.2398%" height="15" fill="rgb(253,117,2)" fg:x="1168" fg:w="3"/><text x="93.6153%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.3653%" y="405" width="0.2398%" height="15" fill="rgb(248,48,24)" fg:x="1168" fg:w="3"/><text x="93.6153%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="93.3653%" y="389" width="0.2398%" height="15" fill="rgb(241,28,46)" fg:x="1168" fg:w="3"/><text x="93.6153%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.3653%" y="373" width="0.2398%" height="15" fill="rgb(216,165,52)" fg:x="1168" fg:w="3"/><text x="93.6153%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.3653%" y="357" width="0.2398%" height="15" fill="rgb(220,222,34)" fg:x="1168" fg:w="3"/><text x="93.6153%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.4452%" y="341" width="0.1599%" height="15" fill="rgb(247,222,49)" fg:x="1169" fg:w="2"/><text x="93.6952%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="93.4452%" y="325" width="0.1599%" height="15" fill="rgb(240,10,31)" fg:x="1169" fg:w="2"/><text x="93.6952%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.4452%" y="309" width="0.1599%" height="15" fill="rgb(221,199,35)" fg:x="1169" fg:w="2"/><text x="93.6952%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.4452%" y="293" width="0.1599%" height="15" fill="rgb(230,223,11)" fg:x="1169" fg:w="2"/><text x="93.6952%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.5252%" y="277" width="0.0799%" height="15" fill="rgb(218,82,45)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.6851%" y="501" width="0.0799%" height="15" fill="rgb(233,213,33)" fg:x="1172" fg:w="1"/><text x="93.9351%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.6851%" y="485" width="0.0799%" height="15" fill="rgb(210,143,52)" fg:x="1172" fg:w="1"/><text x="93.9351%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.7650%" y="501" width="0.0799%" height="15" fill="rgb(206,95,4)" fg:x="1173" fg:w="1"/><text x="94.0150%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7650%" y="485" width="0.0799%" height="15" fill="rgb(246,164,46)" fg:x="1173" fg:w="1"/><text x="94.0150%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.7650%" y="469" width="0.0799%" height="15" fill="rgb(213,210,47)" fg:x="1173" fg:w="1"/><text x="94.0150%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (90 samples, 7.19%)</title><rect x="86.7306%" y="773" width="7.1942%" height="15" fill="rgb(210,12,38)" fg:x="1085" fg:w="90"/><text x="86.9806%" y="783.50">&lt;engine::s..</text></g><g><title>kernel::plugins::mw::apply_middleware (89 samples, 7.11%)</title><rect x="86.8106%" y="757" width="7.1143%" height="15" fill="rgb(252,192,54)" fg:x="1086" fg:w="89"/><text x="87.0606%" y="767.50">kernel::pl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (89 samples, 7.11%)</title><rect x="86.8106%" y="741" width="7.1143%" height="15" fill="rgb(242,92,6)" fg:x="1086" fg:w="89"/><text x="87.0606%" y="751.50">kernel::pl..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (89 samples, 7.11%)</title><rect x="86.8106%" y="725" width="7.1143%" height="15" fill="rgb(253,154,15)" fg:x="1086" fg:w="89"/><text x="87.0606%" y="735.50">&lt;engine::s..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (34 samples, 2.72%)</title><rect x="91.2070%" y="709" width="2.7178%" height="15" fill="rgb(209,20,43)" fg:x="1141" fg:w="34"/><text x="91.4570%" y="719.50">ke..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (34 samples, 2.72%)</title><rect x="91.2070%" y="693" width="2.7178%" height="15" fill="rgb(232,28,49)" fg:x="1141" fg:w="34"/><text x="91.4570%" y="703.50">&lt;p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (34 samples, 2.72%)</title><rect x="91.2070%" y="677" width="2.7178%" height="15" fill="rgb(248,131,53)" fg:x="1141" fg:w="34"/><text x="91.4570%" y="687.50">ke..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (34 samples, 2.72%)</title><rect x="91.2070%" y="661" width="2.7178%" height="15" fill="rgb(214,16,30)" fg:x="1141" fg:w="34"/><text x="91.4570%" y="671.50">co..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (34 samples, 2.72%)</title><rect x="91.2070%" y="645" width="2.7178%" height="15" fill="rgb(245,16,0)" fg:x="1141" fg:w="34"/><text x="91.4570%" y="655.50">ke..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (34 samples, 2.72%)</title><rect x="91.2070%" y="629" width="2.7178%" height="15" fill="rgb(245,17,35)" fg:x="1141" fg:w="34"/><text x="91.4570%" y="639.50">co..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (34 samples, 2.72%)</title><rect x="91.2070%" y="613" width="2.7178%" height="15" fill="rgb(249,27,53)" fg:x="1141" fg:w="34"/><text x="91.4570%" y="623.50">&lt;e..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (34 samples, 2.72%)</title><rect x="91.2070%" y="597" width="2.7178%" height="15" fill="rgb(214,73,24)" fg:x="1141" fg:w="34"/><text x="91.4570%" y="607.50">&lt;p..</text></g><g><title>plugins_core::looking::model::new_area_observation (29 samples, 2.32%)</title><rect x="91.6067%" y="581" width="2.3181%" height="15" fill="rgb(223,84,37)" fg:x="1146" fg:w="29"/><text x="91.8567%" y="591.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.12%)</title><rect x="92.8058%" y="565" width="1.1191%" height="15" fill="rgb(210,109,28)" fg:x="1161" fg:w="14"/><text x="93.0558%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.12%)</title><rect x="92.8058%" y="549" width="1.1191%" height="15" fill="rgb(208,186,6)" fg:x="1161" fg:w="14"/><text x="93.0558%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="93.6051%" y="533" width="0.3197%" height="15" fill="rgb(235,201,30)" fg:x="1171" fg:w="4"/><text x="93.8551%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="93.6051%" y="517" width="0.3197%" height="15" fill="rgb(216,198,48)" fg:x="1171" fg:w="4"/><text x="93.8551%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.8449%" y="501" width="0.0799%" height="15" fill="rgb(254,186,25)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.8449%" y="485" width="0.0799%" height="15" fill="rgb(227,87,5)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.8449%" y="469" width="0.0799%" height="15" fill="rgb(236,205,25)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8449%" y="453" width="0.0799%" height="15" fill="rgb(229,99,32)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8449%" y="437" width="0.0799%" height="15" fill="rgb(231,177,31)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="93.9249%" y="741" width="0.0799%" height="15" fill="rgb(246,15,2)" fg:x="1175" fg:w="1"/><text x="94.1749%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.9249%" y="725" width="0.0799%" height="15" fill="rgb(207,39,15)" fg:x="1175" fg:w="1"/><text x="94.1749%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.9249%" y="709" width="0.0799%" height="15" fill="rgb(207,44,9)" fg:x="1175" fg:w="1"/><text x="94.1749%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.9249%" y="693" width="0.0799%" height="15" fill="rgb(225,224,33)" fg:x="1175" fg:w="1"/><text x="94.1749%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.9249%" y="677" width="0.0799%" height="15" fill="rgb(252,151,3)" fg:x="1175" fg:w="1"/><text x="94.1749%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.9249%" y="661" width="0.0799%" height="15" fill="rgb(211,140,13)" fg:x="1175" fg:w="1"/><text x="94.1749%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0847%" y="613" width="0.0799%" height="15" fill="rgb(239,225,17)" fg:x="1177" fg:w="1"/><text x="94.3347%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0847%" y="597" width="0.0799%" height="15" fill="rgb(223,170,52)" fg:x="1177" fg:w="1"/><text x="94.3347%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.0847%" y="581" width="0.0799%" height="15" fill="rgb(212,64,21)" fg:x="1177" fg:w="1"/><text x="94.3347%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.0847%" y="565" width="0.0799%" height="15" fill="rgb(236,126,48)" fg:x="1177" fg:w="1"/><text x="94.3347%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.0847%" y="549" width="0.0799%" height="15" fill="rgb(209,135,11)" fg:x="1177" fg:w="1"/><text x="94.3347%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.0847%" y="533" width="0.0799%" height="15" fill="rgb(228,126,40)" fg:x="1177" fg:w="1"/><text x="94.3347%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.0847%" y="693" width="0.1599%" height="15" fill="rgb(205,196,36)" fg:x="1177" fg:w="2"/><text x="94.3347%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.0847%" y="677" width="0.1599%" height="15" fill="rgb(243,160,33)" fg:x="1177" fg:w="2"/><text x="94.3347%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="94.0847%" y="661" width="0.1599%" height="15" fill="rgb(210,84,20)" fg:x="1177" fg:w="2"/><text x="94.3347%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="94.0847%" y="645" width="0.1599%" height="15" fill="rgb(228,213,30)" fg:x="1177" fg:w="2"/><text x="94.3347%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="94.0847%" y="629" width="0.1599%" height="15" fill="rgb(252,33,45)" fg:x="1177" fg:w="2"/><text x="94.3347%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="94.1647%" y="613" width="0.0799%" height="15" fill="rgb(254,227,20)" fg:x="1178" fg:w="1"/><text x="94.4147%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.1647%" y="597" width="0.0799%" height="15" fill="rgb(228,192,2)" fg:x="1178" fg:w="1"/><text x="94.4147%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2446%" y="661" width="0.0799%" height="15" fill="rgb(233,32,8)" fg:x="1179" fg:w="1"/><text x="94.4946%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2446%" y="645" width="0.0799%" height="15" fill="rgb(220,146,47)" fg:x="1179" fg:w="1"/><text x="94.4946%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2446%" y="629" width="0.0799%" height="15" fill="rgb(246,194,1)" fg:x="1179" fg:w="1"/><text x="94.4946%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.3245%" y="661" width="0.0799%" height="15" fill="rgb(218,203,9)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.3245%" y="645" width="0.0799%" height="15" fill="rgb(237,97,14)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="94.2446%" y="693" width="0.3197%" height="15" fill="rgb(239,76,15)" fg:x="1179" fg:w="4"/><text x="94.4946%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="94.2446%" y="677" width="0.3197%" height="15" fill="rgb(222,53,45)" fg:x="1179" fg:w="4"/><text x="94.4946%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.4045%" y="661" width="0.1599%" height="15" fill="rgb(237,88,5)" fg:x="1181" fg:w="2"/><text x="94.6545%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.4045%" y="645" width="0.1599%" height="15" fill="rgb(218,223,35)" fg:x="1181" fg:w="2"/><text x="94.6545%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.4045%" y="629" width="0.1599%" height="15" fill="rgb(243,229,38)" fg:x="1181" fg:w="2"/><text x="94.6545%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.4045%" y="613" width="0.1599%" height="15" fill="rgb(240,75,41)" fg:x="1181" fg:w="2"/><text x="94.6545%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.4045%" y="597" width="0.1599%" height="15" fill="rgb(209,110,37)" fg:x="1181" fg:w="2"/><text x="94.6545%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.4045%" y="581" width="0.1599%" height="15" fill="rgb(221,130,46)" fg:x="1181" fg:w="2"/><text x="94.6545%" y="591.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="94.6443%" y="677" width="0.0799%" height="15" fill="rgb(237,160,20)" fg:x="1184" fg:w="1"/><text x="94.8943%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.6443%" y="661" width="0.0799%" height="15" fill="rgb(234,126,24)" fg:x="1184" fg:w="1"/><text x="94.8943%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.6443%" y="645" width="0.0799%" height="15" fill="rgb(207,177,9)" fg:x="1184" fg:w="1"/><text x="94.8943%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.7242%" y="661" width="0.1599%" height="15" fill="rgb(231,191,33)" fg:x="1185" fg:w="2"/><text x="94.9742%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.7242%" y="645" width="0.1599%" height="15" fill="rgb(207,42,1)" fg:x="1185" fg:w="2"/><text x="94.9742%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.7242%" y="629" width="0.1599%" height="15" fill="rgb(218,34,50)" fg:x="1185" fg:w="2"/><text x="94.9742%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8042%" y="613" width="0.0799%" height="15" fill="rgb(254,126,39)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8042%" y="597" width="0.0799%" height="15" fill="rgb(251,17,26)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.8042%" y="581" width="0.0799%" height="15" fill="rgb(252,215,34)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.8042%" y="565" width="0.0799%" height="15" fill="rgb(217,120,44)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.8042%" y="549" width="0.0799%" height="15" fill="rgb(211,31,11)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.8042%" y="533" width="0.0799%" height="15" fill="rgb(222,69,51)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.8042%" y="517" width="0.0799%" height="15" fill="rgb(215,229,42)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.8042%" y="501" width="0.0799%" height="15" fill="rgb(212,102,15)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.8042%" y="485" width="0.0799%" height="15" fill="rgb(205,179,41)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.8042%" y="469" width="0.0799%" height="15" fill="rgb(219,148,46)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.8042%" y="453" width="0.0799%" height="15" fill="rgb(243,40,19)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8042%" y="437" width="0.0799%" height="15" fill="rgb(208,206,34)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (12 samples, 0.96%)</title><rect x="94.0048%" y="725" width="0.9592%" height="15" fill="rgb(244,184,38)" fg:x="1176" fg:w="12"/><text x="94.2548%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.88%)</title><rect x="94.0847%" y="709" width="0.8793%" height="15" fill="rgb(244,151,47)" fg:x="1177" fg:w="11"/><text x="94.3347%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="94.5643%" y="693" width="0.3997%" height="15" fill="rgb(236,134,42)" fg:x="1183" fg:w="5"/><text x="94.8143%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="94.7242%" y="677" width="0.2398%" height="15" fill="rgb(233,93,22)" fg:x="1185" fg:w="3"/><text x="94.9742%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.8841%" y="661" width="0.0799%" height="15" fill="rgb(211,202,10)" fg:x="1187" fg:w="1"/><text x="95.1341%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.8841%" y="645" width="0.0799%" height="15" fill="rgb(240,63,8)" fg:x="1187" fg:w="1"/><text x="95.1341%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.8841%" y="629" width="0.0799%" height="15" fill="rgb(214,9,4)" fg:x="1187" fg:w="1"/><text x="95.1341%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.8841%" y="613" width="0.0799%" height="15" fill="rgb(243,66,45)" fg:x="1187" fg:w="1"/><text x="95.1341%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.8841%" y="597" width="0.0799%" height="15" fill="rgb(220,50,42)" fg:x="1187" fg:w="1"/><text x="95.1341%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.8841%" y="581" width="0.0799%" height="15" fill="rgb(220,134,27)" fg:x="1187" fg:w="1"/><text x="95.1341%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0440%" y="661" width="0.0799%" height="15" fill="rgb(246,151,50)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="95.1239%" y="629" width="0.2398%" height="15" fill="rgb(238,216,27)" fg:x="1190" fg:w="3"/><text x="95.3739%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="95.2038%" y="613" width="0.1599%" height="15" fill="rgb(250,92,11)" fg:x="1191" fg:w="2"/><text x="95.4538%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.3637%" y="629" width="0.1599%" height="15" fill="rgb(248,183,6)" fg:x="1193" fg:w="2"/><text x="95.6137%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4436%" y="613" width="0.0799%" height="15" fill="rgb(211,204,50)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.5236%" y="613" width="0.0799%" height="15" fill="rgb(252,55,47)" fg:x="1195" fg:w="1"/><text x="95.7736%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.6835%" y="597" width="0.0799%" height="15" fill="rgb(240,198,32)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.6835%" y="581" width="0.0799%" height="15" fill="rgb(224,203,19)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.8433%" y="565" width="0.0799%" height="15" fill="rgb(205,27,16)" fg:x="1199" fg:w="1"/><text x="96.0933%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8433%" y="549" width="0.0799%" height="15" fill="rgb(224,226,17)" fg:x="1199" fg:w="1"/><text x="96.0933%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.9233%" y="565" width="0.0799%" height="15" fill="rgb(205,216,54)" fg:x="1200" fg:w="1"/><text x="96.1733%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.8433%" y="581" width="0.3197%" height="15" fill="rgb(248,168,46)" fg:x="1199" fg:w="4"/><text x="96.0933%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.0032%" y="565" width="0.1599%" height="15" fill="rgb(226,111,45)" fg:x="1201" fg:w="2"/><text x="96.2532%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.0032%" y="549" width="0.1599%" height="15" fill="rgb(231,15,9)" fg:x="1201" fg:w="2"/><text x="96.2532%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.0831%" y="533" width="0.0799%" height="15" fill="rgb(243,168,3)" fg:x="1202" fg:w="1"/><text x="96.3331%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0831%" y="517" width="0.0799%" height="15" fill="rgb(221,220,54)" fg:x="1202" fg:w="1"/><text x="96.3331%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.1631%" y="549" width="0.0799%" height="15" fill="rgb(232,174,38)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.1631%" y="533" width="0.0799%" height="15" fill="rgb(205,14,38)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1631%" y="517" width="0.0799%" height="15" fill="rgb(234,89,19)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="95.6035%" y="613" width="0.7994%" height="15" fill="rgb(216,68,51)" fg:x="1196" fg:w="10"/><text x="95.8535%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="95.7634%" y="597" width="0.6395%" height="15" fill="rgb(213,49,2)" fg:x="1198" fg:w="8"/><text x="96.0134%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="96.1631%" y="581" width="0.2398%" height="15" fill="rgb(242,146,30)" fg:x="1203" fg:w="3"/><text x="96.4131%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.1631%" y="565" width="0.2398%" height="15" fill="rgb(224,188,11)" fg:x="1203" fg:w="3"/><text x="96.4131%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.2430%" y="549" width="0.1599%" height="15" fill="rgb(213,159,11)" fg:x="1204" fg:w="2"/><text x="96.4930%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="96.2430%" y="533" width="0.1599%" height="15" fill="rgb(229,13,31)" fg:x="1204" fg:w="2"/><text x="96.4930%" y="543.50"></text></g><g><title>serde_json::de::from_trait (19 samples, 1.52%)</title><rect x="94.9640%" y="709" width="1.5188%" height="15" fill="rgb(209,103,11)" fg:x="1188" fg:w="19"/><text x="95.2140%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19 samples, 1.52%)</title><rect x="94.9640%" y="693" width="1.5188%" height="15" fill="rgb(206,3,4)" fg:x="1188" fg:w="19"/><text x="95.2140%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.52%)</title><rect x="94.9640%" y="677" width="1.5188%" height="15" fill="rgb(252,10,49)" fg:x="1188" fg:w="19"/><text x="95.2140%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17 samples, 1.36%)</title><rect x="95.1239%" y="661" width="1.3589%" height="15" fill="rgb(217,160,32)" fg:x="1190" fg:w="17"/><text x="95.3739%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.36%)</title><rect x="95.1239%" y="645" width="1.3589%" height="15" fill="rgb(249,196,0)" fg:x="1190" fg:w="17"/><text x="95.3739%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="95.5236%" y="629" width="0.9592%" height="15" fill="rgb(213,17,48)" fg:x="1195" fg:w="12"/><text x="95.7736%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.4029%" y="613" width="0.0799%" height="15" fill="rgb(206,42,46)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.5627%" y="677" width="0.0799%" height="15" fill="rgb(212,105,24)" fg:x="1208" fg:w="1"/><text x="96.8127%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.5627%" y="661" width="0.0799%" height="15" fill="rgb(243,216,30)" fg:x="1208" fg:w="1"/><text x="96.8127%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.6427%" y="677" width="0.0799%" height="15" fill="rgb(207,121,3)" fg:x="1209" fg:w="1"/><text x="96.8927%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8026%" y="645" width="0.0799%" height="15" fill="rgb(249,78,0)" fg:x="1211" fg:w="1"/><text x="97.0526%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.8026%" y="629" width="0.0799%" height="15" fill="rgb(244,151,32)" fg:x="1211" fg:w="1"/><text x="97.0526%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8825%" y="645" width="0.0799%" height="15" fill="rgb(228,63,25)" fg:x="1212" fg:w="1"/><text x="97.1325%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="96.8825%" y="629" width="0.0799%" height="15" fill="rgb(231,158,23)" fg:x="1212" fg:w="1"/><text x="97.1325%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="96.8825%" y="613" width="0.0799%" height="15" fill="rgb(248,107,23)" fg:x="1212" fg:w="1"/><text x="97.1325%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.1223%" y="597" width="0.1599%" height="15" fill="rgb(215,168,21)" fg:x="1215" fg:w="2"/><text x="97.3723%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.1223%" y="581" width="0.1599%" height="15" fill="rgb(227,83,22)" fg:x="1215" fg:w="2"/><text x="97.3723%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.1223%" y="565" width="0.1599%" height="15" fill="rgb(217,118,43)" fg:x="1215" fg:w="2"/><text x="97.3723%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.1223%" y="549" width="0.1599%" height="15" fill="rgb(229,220,41)" fg:x="1215" fg:w="2"/><text x="97.3723%" y="559.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.2022%" y="533" width="0.0799%" height="15" fill="rgb(254,146,46)" fg:x="1216" fg:w="1"/><text x="97.4522%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="97.0424%" y="629" width="0.3997%" height="15" fill="rgb(233,208,31)" fg:x="1214" fg:w="5"/><text x="97.2924%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="97.0424%" y="613" width="0.3997%" height="15" fill="rgb(222,162,7)" fg:x="1214" fg:w="5"/><text x="97.2924%" y="623.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="97.2822%" y="597" width="0.1599%" height="15" fill="rgb(230,117,45)" fg:x="1217" fg:w="2"/><text x="97.5322%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.2822%" y="581" width="0.1599%" height="15" fill="rgb(239,163,6)" fg:x="1217" fg:w="2"/><text x="97.5322%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.2822%" y="565" width="0.1599%" height="15" fill="rgb(246,130,17)" fg:x="1217" fg:w="2"/><text x="97.5322%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.2822%" y="549" width="0.1599%" height="15" fill="rgb(216,84,5)" fg:x="1217" fg:w="2"/><text x="97.5322%" y="559.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="97.2822%" y="533" width="0.1599%" height="15" fill="rgb(230,200,21)" fg:x="1217" fg:w="2"/><text x="97.5322%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="97.3621%" y="517" width="0.0799%" height="15" fill="rgb(224,2,8)" fg:x="1218" fg:w="1"/><text x="97.6121%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3621%" y="501" width="0.0799%" height="15" fill="rgb(238,178,10)" fg:x="1218" fg:w="1"/><text x="97.6121%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.4420%" y="597" width="0.0799%" height="15" fill="rgb(242,153,24)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.5220%" y="581" width="0.0799%" height="15" fill="rgb(242,32,48)" fg:x="1220" fg:w="1"/><text x="97.7720%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (5 samples, 0.40%)</title><rect x="97.4420%" y="629" width="0.3997%" height="15" fill="rgb(227,36,0)" fg:x="1219" fg:w="5"/><text x="97.6920%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="97.4420%" y="613" width="0.3997%" height="15" fill="rgb(251,33,35)" fg:x="1219" fg:w="5"/><text x="97.6920%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.32%)</title><rect x="97.5220%" y="597" width="0.3197%" height="15" fill="rgb(232,168,51)" fg:x="1220" fg:w="4"/><text x="97.7720%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="97.6019%" y="581" width="0.2398%" height="15" fill="rgb(228,56,10)" fg:x="1221" fg:w="3"/><text x="97.8519%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.7618%" y="565" width="0.0799%" height="15" fill="rgb(231,10,26)" fg:x="1223" fg:w="1"/><text x="98.0118%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.9217%" y="597" width="0.0799%" height="15" fill="rgb(226,202,12)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.8417%" y="613" width="0.3197%" height="15" fill="rgb(251,49,21)" fg:x="1224" fg:w="4"/><text x="98.0917%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="98.0016%" y="597" width="0.1599%" height="15" fill="rgb(206,228,28)" fg:x="1226" fg:w="2"/><text x="98.2516%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0815%" y="581" width="0.0799%" height="15" fill="rgb(205,198,31)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0815%" y="565" width="0.0799%" height="15" fill="rgb(213,69,1)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (19 samples, 1.52%)</title><rect x="96.7226%" y="677" width="1.5188%" height="15" fill="rgb(209,177,9)" fg:x="1210" fg:w="19"/><text x="96.9726%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (19 samples, 1.52%)</title><rect x="96.7226%" y="661" width="1.5188%" height="15" fill="rgb(227,119,30)" fg:x="1210" fg:w="19"/><text x="96.9726%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (16 samples, 1.28%)</title><rect x="96.9624%" y="645" width="1.2790%" height="15" fill="rgb(234,106,41)" fg:x="1213" fg:w="16"/><text x="97.2124%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="97.8417%" y="629" width="0.3997%" height="15" fill="rgb(244,103,47)" fg:x="1224" fg:w="5"/><text x="98.0917%" y="639.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="98.1615%" y="613" width="0.0799%" height="15" fill="rgb(212,211,25)" fg:x="1228" fg:w="1"/><text x="98.4115%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="98.3213%" y="645" width="0.2398%" height="15" fill="rgb(208,63,53)" fg:x="1230" fg:w="3"/><text x="98.5713%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (47 samples, 3.76%)</title><rect x="94.9640%" y="725" width="3.7570%" height="15" fill="rgb(213,176,21)" fg:x="1188" fg:w="47"/><text x="95.2140%" y="735.50">&lt;ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (28 samples, 2.24%)</title><rect x="96.4828%" y="709" width="2.2382%" height="15" fill="rgb(243,124,12)" fg:x="1207" fg:w="28"/><text x="96.7328%" y="719.50">s..</text></g><g><title>serde_json::value::de::visit_object (28 samples, 2.24%)</title><rect x="96.4828%" y="693" width="2.2382%" height="15" fill="rgb(239,2,35)" fg:x="1207" fg:w="28"/><text x="96.7328%" y="703.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="98.2414%" y="677" width="0.4796%" height="15" fill="rgb(253,169,22)" fg:x="1229" fg:w="6"/><text x="98.4914%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="98.2414%" y="661" width="0.4796%" height="15" fill="rgb(254,51,12)" fg:x="1229" fg:w="6"/><text x="98.4914%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="98.5612%" y="645" width="0.1599%" height="15" fill="rgb(244,17,47)" fg:x="1233" fg:w="2"/><text x="98.8112%" y="655.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="98.5612%" y="629" width="0.1599%" height="15" fill="rgb(251,45,46)" fg:x="1233" fg:w="2"/><text x="98.8112%" y="639.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="98.5612%" y="613" width="0.1599%" height="15" fill="rgb(223,87,43)" fg:x="1233" fg:w="2"/><text x="98.8112%" y="623.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.8010%" y="709" width="0.0799%" height="15" fill="rgb(230,132,31)" fg:x="1236" fg:w="1"/><text x="99.0510%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.8010%" y="693" width="0.0799%" height="15" fill="rgb(206,99,1)" fg:x="1236" fg:w="1"/><text x="99.0510%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="98.8010%" y="677" width="0.0799%" height="15" fill="rgb(227,110,25)" fg:x="1236" fg:w="1"/><text x="99.0510%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.8809%" y="661" width="0.0799%" height="15" fill="rgb(217,182,7)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="98.7210%" y="725" width="0.4796%" height="15" fill="rgb(250,176,4)" fg:x="1235" fg:w="6"/><text x="98.9710%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="98.8809%" y="709" width="0.3197%" height="15" fill="rgb(244,98,30)" fg:x="1237" fg:w="4"/><text x="99.1309%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="98.8809%" y="693" width="0.3197%" height="15" fill="rgb(228,150,42)" fg:x="1237" fg:w="4"/><text x="99.1309%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.8809%" y="677" width="0.3197%" height="15" fill="rgb(231,91,46)" fg:x="1237" fg:w="4"/><text x="99.1309%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="98.9608%" y="661" width="0.2398%" height="15" fill="rgb(252,161,32)" fg:x="1238" fg:w="3"/><text x="99.2108%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.9608%" y="645" width="0.2398%" height="15" fill="rgb(236,69,41)" fg:x="1238" fg:w="3"/><text x="99.2108%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.0408%" y="629" width="0.1599%" height="15" fill="rgb(212,160,3)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.0408%" y="613" width="0.1599%" height="15" fill="rgb(216,5,50)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.1207%" y="597" width="0.0799%" height="15" fill="rgb(241,138,25)" fg:x="1240" fg:w="1"/><text x="99.3707%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (67 samples, 5.36%)</title><rect x="94.0048%" y="741" width="5.3557%" height="15" fill="rgb(239,42,18)" fg:x="1176" fg:w="67"/><text x="94.2548%" y="751.50">engine:..</text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="99.2006%" y="725" width="0.1599%" height="15" fill="rgb(239,40,7)" fg:x="1241" fg:w="2"/><text x="99.4506%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="99.2006%" y="709" width="0.1599%" height="15" fill="rgb(239,11,31)" fg:x="1241" fg:w="2"/><text x="99.4506%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="99.2006%" y="693" width="0.1599%" height="15" fill="rgb(224,77,40)" fg:x="1241" fg:w="2"/><text x="99.4506%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="99.2006%" y="677" width="0.1599%" height="15" fill="rgb(226,15,5)" fg:x="1241" fg:w="2"/><text x="99.4506%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="99.2006%" y="661" width="0.1599%" height="15" fill="rgb(254,188,5)" fg:x="1241" fg:w="2"/><text x="99.4506%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="99.2006%" y="645" width="0.1599%" height="15" fill="rgb(241,148,52)" fg:x="1241" fg:w="2"/><text x="99.4506%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="99.2006%" y="629" width="0.1599%" height="15" fill="rgb(251,48,36)" fg:x="1241" fg:w="2"/><text x="99.4506%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="99.2006%" y="613" width="0.1599%" height="15" fill="rgb(243,83,13)" fg:x="1241" fg:w="2"/><text x="99.4506%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="99.2006%" y="597" width="0.1599%" height="15" fill="rgb(210,105,0)" fg:x="1241" fg:w="2"/><text x="99.4506%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="99.2006%" y="581" width="0.1599%" height="15" fill="rgb(239,60,36)" fg:x="1241" fg:w="2"/><text x="99.4506%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="99.2006%" y="565" width="0.1599%" height="15" fill="rgb(210,20,0)" fg:x="1241" fg:w="2"/><text x="99.4506%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="99.2006%" y="549" width="0.1599%" height="15" fill="rgb(244,26,53)" fg:x="1241" fg:w="2"/><text x="99.4506%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2806%" y="533" width="0.0799%" height="15" fill="rgb(240,100,49)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (69 samples, 5.52%)</title><rect x="93.9249%" y="757" width="5.5156%" height="15" fill="rgb(250,46,45)" fg:x="1175" fg:w="69"/><text x="94.1749%" y="767.50">&lt;engine..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.3605%" y="741" width="0.0799%" height="15" fill="rgb(220,181,29)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (72 samples, 5.76%)</title><rect x="93.9249%" y="773" width="5.7554%" height="15" fill="rgb(213,137,33)" fg:x="1175" fg:w="72"/><text x="94.1749%" y="783.50">&lt;engine..</text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="99.4404%" y="757" width="0.2398%" height="15" fill="rgb(213,27,48)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="99.4404%" y="741" width="0.2398%" height="15" fill="rgb(245,180,39)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="99.4404%" y="725" width="0.2398%" height="15" fill="rgb(212,158,42)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="735.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.4404%" y="709" width="0.2398%" height="15" fill="rgb(228,193,18)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="99.4404%" y="693" width="0.2398%" height="15" fill="rgb(245,172,29)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="99.4404%" y="677" width="0.2398%" height="15" fill="rgb(207,98,24)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="99.4404%" y="661" width="0.2398%" height="15" fill="rgb(249,92,26)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="671.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.4404%" y="645" width="0.2398%" height="15" fill="rgb(217,176,26)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="99.4404%" y="629" width="0.2398%" height="15" fill="rgb(221,8,39)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="99.4404%" y="613" width="0.2398%" height="15" fill="rgb(208,90,18)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="99.4404%" y="597" width="0.2398%" height="15" fill="rgb(207,202,30)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="607.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.4404%" y="581" width="0.2398%" height="15" fill="rgb(231,124,22)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="99.4404%" y="565" width="0.2398%" height="15" fill="rgb(206,15,5)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="99.4404%" y="549" width="0.2398%" height="15" fill="rgb(239,16,52)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="99.5204%" y="533" width="0.1599%" height="15" fill="rgb(245,213,29)" fg:x="1245" fg:w="2"/><text x="99.7704%" y="543.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.5204%" y="517" width="0.1599%" height="15" fill="rgb(213,203,36)" fg:x="1245" fg:w="2"/><text x="99.7704%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="99.5204%" y="501" width="0.1599%" height="15" fill="rgb(209,55,18)" fg:x="1245" fg:w="2"/><text x="99.7704%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.16%)</title><rect x="99.5204%" y="485" width="0.1599%" height="15" fill="rgb(207,133,49)" fg:x="1245" fg:w="2"/><text x="99.7704%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="99.6003%" y="469" width="0.0799%" height="15" fill="rgb(240,33,46)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.6003%" y="453" width="0.0799%" height="15" fill="rgb(212,35,2)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.6003%" y="437" width="0.0799%" height="15" fill="rgb(231,119,28)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.6003%" y="421" width="0.0799%" height="15" fill="rgb(252,178,7)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.6003%" y="405" width="0.0799%" height="15" fill="rgb(251,91,4)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.6003%" y="389" width="0.0799%" height="15" fill="rgb(233,122,19)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.6003%" y="373" width="0.0799%" height="15" fill="rgb(231,208,46)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.6003%" y="357" width="0.0799%" height="15" fill="rgb(243,15,41)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.6003%" y="341" width="0.0799%" height="15" fill="rgb(210,32,43)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.6003%" y="325" width="0.0799%" height="15" fill="rgb(222,177,15)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.6003%" y="309" width="0.0799%" height="15" fill="rgb(244,121,34)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.6003%" y="293" width="0.0799%" height="15" fill="rgb(234,138,4)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.6003%" y="277" width="0.0799%" height="15" fill="rgb(240,97,48)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.6003%" y="261" width="0.0799%" height="15" fill="rgb(237,65,54)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.6003%" y="245" width="0.0799%" height="15" fill="rgb(214,25,24)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="99.6803%" y="773" width="0.0799%" height="15" fill="rgb(213,5,3)" fg:x="1247" fg:w="1"/><text x="99.9303%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6803%" y="757" width="0.0799%" height="15" fill="rgb(219,81,29)" fg:x="1247" fg:w="1"/><text x="99.9303%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7602%" y="757" width="0.0799%" height="15" fill="rgb(220,43,48)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="767.50"></text></g><g><title>all (1,251 samples, 100%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(239,157,2)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1167.50"></text></g><g><title>simple-2713b700 (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(213,104,43)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1151.50">simple-2713b700</text></g><g><title>_start (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(237,84,9)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1135.50">_start</text></g><g><title>__libc_start_main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(252,6,33)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1119.50">__libc_start_main</text></g><g><title>main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(251,172,22)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1103.50">main</text></g><g><title>std::rt::lang_start_internal (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(244,91,53)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1087.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(219,29,30)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(213,3,15)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(208,25,28)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1039.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(252,144,25)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,251 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(226,220,25)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,251 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(212,131,28)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,251 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(219,143,52)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="975.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,251 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(215,56,7)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="959.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,251 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(239,59,51)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="943.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,251 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(209,215,4)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="927.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(221,118,39)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="911.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,251 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(236,6,44)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="895.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,251 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(216,122,9)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="879.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (292 samples, 23.34%)</title><rect x="76.6587%" y="853" width="23.3413%" height="15" fill="rgb(244,134,42)" fg:x="959" fg:w="292"/><text x="76.9087%" y="863.50">&lt;criterion::routine::Function&lt;M,F,T&gt; ..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (292 samples, 23.34%)</title><rect x="76.6587%" y="837" width="23.3413%" height="15" fill="rgb(209,189,35)" fg:x="959" fg:w="292"/><text x="76.9087%" y="847.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (292 samples, 23.34%)</title><rect x="76.6587%" y="821" width="23.3413%" height="15" fill="rgb(250,47,36)" fg:x="959" fg:w="292"/><text x="76.9087%" y="831.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (166 samples, 13.27%)</title><rect x="86.7306%" y="805" width="13.2694%" height="15" fill="rgb(252,112,4)" fg:x="1085" fg:w="166"/><text x="86.9806%" y="815.50">engine::session::Ses..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (166 samples, 13.27%)</title><rect x="86.7306%" y="789" width="13.2694%" height="15" fill="rgb(221,79,51)" fg:x="1085" fg:w="166"/><text x="86.9806%" y="799.50">engine::session::Ses..</text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="99.7602%" y="773" width="0.2398%" height="15" fill="rgb(232,65,53)" fg:x="1248" fg:w="3"/><text x="100.0102%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="99.8401%" y="757" width="0.1599%" height="15" fill="rgb(211,37,7)" fg:x="1249" fg:w="2"/><text x="100.0901%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.8401%" y="741" width="0.1599%" height="15" fill="rgb(234,221,18)" fg:x="1249" fg:w="2"/><text x="100.0901%" y="751.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.9201%" y="725" width="0.0799%" height="15" fill="rgb(220,158,26)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.9201%" y="709" width="0.0799%" height="15" fill="rgb(220,70,6)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.9201%" y="693" width="0.0799%" height="15" fill="rgb(250,39,48)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.9201%" y="677" width="0.0799%" height="15" fill="rgb(206,40,27)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.9201%" y="661" width="0.0799%" height="15" fill="rgb(247,80,36)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.9201%" y="645" width="0.0799%" height="15" fill="rgb(222,9,20)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.9201%" y="629" width="0.0799%" height="15" fill="rgb(217,26,45)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.9201%" y="613" width="0.0799%" height="15" fill="rgb(221,67,14)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.9201%" y="597" width="0.0799%" height="15" fill="rgb(248,100,24)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.9201%" y="581" width="0.0799%" height="15" fill="rgb(230,187,16)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.9201%" y="565" width="0.0799%" height="15" fill="rgb(205,108,13)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.9201%" y="549" width="0.0799%" height="15" fill="rgb(235,71,51)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.9201%" y="533" width="0.0799%" height="15" fill="rgb(251,172,48)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.9201%" y="517" width="0.0799%" height="15" fill="rgb(240,96,49)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="527.50"></text></g></svg></svg>